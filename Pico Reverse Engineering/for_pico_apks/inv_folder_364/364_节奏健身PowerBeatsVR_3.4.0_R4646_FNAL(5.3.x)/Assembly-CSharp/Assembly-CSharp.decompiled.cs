using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using ANT_Managed_Library;
using BeautifulDissolves;
using BeautifulTransitions.Scripts.Helper;
using BeautifulTransitions.Scripts.Transitions.Components;
using BeautifulTransitions.Scripts.Transitions.Components.Camera;
using BeautifulTransitions.Scripts.Transitions.Components.Camera.AbstractClasses;
using BeautifulTransitions.Scripts.Transitions.Components.GameObject.AbstractClasses;
using BeautifulTransitions.Scripts.Transitions.Components.Screen;
using BeautifulTransitions.Scripts.Transitions.Components.Screen.AbstractClasses;
using BeautifulTransitions.Scripts.Transitions.TransitionSteps;
using BeautifulTransitions.Scripts.Transitions.TransitionSteps.AbstractClasses;
using BeautifyEffect;
using BezierSolution;
using BlueprintReality.Text;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DigitalRuby.ThunderAndLightning;
using Il2CppDummyDll;
using Microsoft.MixedReality.Toolkit.Rendering;
using MirzaBeig.Scripting.Effects;
using NAudio.Wave;
using PlayFab;
using PlayFab.ClientModels;
using RhythmTool;
using RootMotion.FinalIK;
using SimpleJSON;
using TMPro;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using UltimateGameTools.MeshSimplifier;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Localization;
using UnityEngine.Localization.Components;
using UnityEngine.Localization.Settings;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.UI.Extensions.Tweens;
using UnityEngine.XR;
using UnityStandardAssets.Utility;
using ffmpegaudioimport;
using powerbeatsvr;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000002")]
public class BeautifyDoNotChange : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1DED1E4", Offset = "0x1DED1E4", VA = "0x1DED1E4")]
	public BeautifyDoNotChange()
	{
	}
}
[Token(Token = "0x2000003")]
public class HrmFaker : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private TextMeshProUGUI hrmText;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD520DC")]
	[SerializeField]
	private TextMeshProUGUI caloriesText;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int hrmStart;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float hrmRaiseSpeed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float caloriesStart;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7482")]
	[SerializeField]
	private float caloriesSpeed;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private int asteroidNr;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD520E4")]
	[SerializeField]
	private Vector3 asteroidStart;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 asteroidEnd;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool fakeIsRunning;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float hrm;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748A")]
	private float calories;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1AE8848", Offset = "0x1AE8848", VA = "0x1AE8848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1AE8A3C", Offset = "0x1AE8A3C", VA = "0x1AE8A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1AE8D4C", Offset = "0x1AE8D4C", VA = "0x1AE8D4C")]
	private void StartFakeInternal()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1AE8DB0", Offset = "0x1AE8DB0", VA = "0x1AE8DB0")]
	public void StartFake()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1AE8EF4", Offset = "0x1AE8EF4", VA = "0x1AE8EF4")]
	public HrmFaker()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD10F8", Offset = "0xBD10F8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD10F8", Offset = "0xBD10F8")]
public class DynamicSkyLite : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE33CC", Offset = "0xBE33CC")]
	public float ssgUvRotateSpeed;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD520EC")]
	public float ssgUvRotateDistance;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform player;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3430", Offset = "0xBE3430")]
	public string HelpURL;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string ReportAProblem;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7492")]
	public string Patrons;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector2 ssgVector;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD520F4")]
	private Transform tr;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1C22164", Offset = "0x1C22164", VA = "0x1C22164")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1C22248", Offset = "0x1C22248", VA = "0x1C22248")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1C22668", Offset = "0x1C22668", VA = "0x1C22668")]
	public DynamicSkyLite()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD11A4", Offset = "0xBD11A4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD11A4", Offset = "0xBD11A4")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE40C", Offset = "0xBDE40C")]
	private sealed class <DrawGraph>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5210C")]
		private int <>1__state;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FPSCounter <>4__this;

		[Token(Token = "0x1700046A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x1C2A128", Offset = "0x1C2A128", VA = "0x1C2A128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x1C2A1F8", Offset = "0x1C2A1F8", VA = "0x1C2A1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x1C292D0", Offset = "0x1C292D0", VA = "0x1C292D0")]
		[DebuggerHidden]
		public <DrawGraph>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x1C296A4", Offset = "0x1C296A4", VA = "0x1C296A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x1C296B8", Offset = "0x1C296B8", VA = "0x1C296B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x1C2A158", Offset = "0x1C2A158", VA = "0x1C2A158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3494", Offset = "0xBE3494")]
	public int frameUpdate;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int highestPossibleFPS;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE34F8", Offset = "0xBE34F8")]
	public float graphUpdate;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x749A")]
	public Color graphColor;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE355C", Offset = "0xBE355C")]
	public string HelpURL;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD520FC")]
	public string ReportAProblem;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Patrons;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject counter;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject graph;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74A2")]
	private Transform graphTr;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Text counterText;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52104")]
	private float ofsetX;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int curCount;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int lineCount;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds stGraphUpdate;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74AA")]
	private static GameObject[] stLines;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private static int stNumLines;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1C28358", Offset = "0x1C28358", VA = "0x1C28358")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1C28C44", Offset = "0x1C28C44", VA = "0x1C28C44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1C28D48", Offset = "0x1C28D48", VA = "0x1C28D48")]
	private void Update()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1C28C8C", Offset = "0x1C28C8C", VA = "0x1C28C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC17978", Offset = "0xC17978")]
	private IEnumerator DrawGraph()
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1C28388", Offset = "0x1C28388", VA = "0x1C28388")]
	private void CreateCounter()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1C29318", Offset = "0x1C29318", VA = "0x1C29318")]
	private static GameObject GiveLine()
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1C294BC", Offset = "0x1C294BC", VA = "0x1C294BC")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000006")]
public static class StFPS
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float> fpsBuffer;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74B2")]
	private static float fpsB;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private static Vector3Int fps;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1F33680", Offset = "0x1F33680", VA = "0x1F33680")]
	public static Vector3Int Counter(int frameUpdate, float deltaTime)
	{
		return default(Vector3Int);
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD1250", Offset = "0xBD1250")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1250", Offset = "0xBD1250")]
[ExecuteInEditMode]
public class Water : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE35C0", Offset = "0xBE35C0")]
	public float UvRotateSpeed;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float UvRotateDistance;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float UvBumpRotateSpeed;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float UvBumpRotateDistance;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74B9")]
	public bool depthTextureModeOn;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3624", Offset = "0xBE3624")]
	public string HelpURL;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52114")]
	public string ReportAProblem;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Patrons;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 lwVector;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 lwNVector;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x24EF280", Offset = "0x24EF280", VA = "0x24EF280")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x24EF370", Offset = "0x24EF370", VA = "0x24EF370")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x24EF3E4", Offset = "0x24EF3E4", VA = "0x24EF3E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x24EF928", Offset = "0x24EF928", VA = "0x24EF928")]
	public Water()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD1318", Offset = "0xBD1318")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1318", Offset = "0xBD1318")]
public class Shark : MonoBehaviour
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE448", Offset = "0xBDE448")]
	private sealed class <RandomVector>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shark <>4__this;

		[Token(Token = "0x1700046C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x1F75ED0", Offset = "0x1F75ED0", VA = "0x1F75ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x1F75FA0", Offset = "0x1F75FA0", VA = "0x1F75FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x1F75AD8", Offset = "0x1F75AD8", VA = "0x1F75AD8")]
		[DebuggerHidden]
		public <RandomVector>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x1F75C50", Offset = "0x1F75C50", VA = "0x1F75C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1F75C64", Offset = "0x1F75C64", VA = "0x1F75C64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1F75F00", Offset = "0x1F75F00", VA = "0x1F75F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74C1")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3688", Offset = "0xBE3688")]
	public float speed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float walkZone;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5211C")]
	public Transform camRig;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool debug;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE36EC", Offset = "0xBE36EC")]
	public float huntingZone;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask layerFlock;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74C9")]
	public Material sharkMaterial;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Transform thisTransform;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52124")]
	private Vector3 vel;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 velCam;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 target;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 targetCurent;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74D1")]
	private Vector3 targetRandom;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 targetFlock;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5212C")]
	private float startYpos;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float huntTime;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float huntSpeed;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float speedSh;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74D9")]
	private float acselSh;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool hunting;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52134")]
	private static WaitForSeconds delay0;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1F74A94", Offset = "0x1F74A94", VA = "0x1F74A94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1F74C08", Offset = "0x1F74C08", VA = "0x1F74C08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1F74C60", Offset = "0x1F74C60", VA = "0x1F74C60")]
	private void Hunting()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1F753F0", Offset = "0x1F753F0", VA = "0x1F753F0")]
	private void Move()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1F75904", Offset = "0x1F75904", VA = "0x1F75904")]
	private void CameraRig()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1F74B4C", Offset = "0x1F74B4C", VA = "0x1F74B4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC17A28", Offset = "0xC17A28")]
	private IEnumerator RandomVector()
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1F75990", Offset = "0x1F75990", VA = "0x1F75990")]
	private void DebugPath()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1F75B20", Offset = "0x1F75B20", VA = "0x1F75B20")]
	public Shark()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD13C4", Offset = "0xBD13C4")]
public class SlowMo : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74E1")]
	public AudioSource[] audios;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1F26C00", Offset = "0x1F26C00", VA = "0x1F26C00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1F26C34", Offset = "0x1F26C34", VA = "0x1F26C34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1F26EA0", Offset = "0x1F26EA0", VA = "0x1F26EA0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1F26ED4", Offset = "0x1F26ED4", VA = "0x1F26ED4")]
	public SlowMo()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1428", Offset = "0xBD1428")]
public class TDControl : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3750", Offset = "0xBE3750")]
	public float rotationSpeed;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5213C")]
	public Vector2 mouseVerticaleClamp;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float smoothMouse;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE37B4", Offset = "0xBE37B4")]
	public bool liftOn;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 liftClamp;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74E9")]
	public float smoothLift;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3818", Offset = "0xBE3818")]
	public Transform camTransform;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52144")]
	public Vector2 camClamp;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float smoothCam;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform tr;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rotationStart;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74F1")]
	private Vector3 positionStart;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 cameraStart;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5214C")]
	private Vector3 velocity;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 target;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float mouseX;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float mouseY;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74F9")]
	private float upCh;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float upChCur;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52154")]
	private float upChVel;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float camhVel;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float camCh;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float camChCur;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1F40C58", Offset = "0x1F40C58", VA = "0x1F40C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1F40D88", Offset = "0x1F40D88", VA = "0x1F40D88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1F40DF4", Offset = "0x1F40DF4", VA = "0x1F40DF4")]
	private void Rotation()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1F4152C", Offset = "0x1F4152C", VA = "0x1F4152C")]
	private void Lift()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1F4127C", Offset = "0x1F4127C", VA = "0x1F4127C")]
	private void CameraTransform()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1F417E0", Offset = "0x1F417E0", VA = "0x1F417E0")]
	public TDControl()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD148C", Offset = "0xBD148C")]
public class Underwater : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7501")]
	public float waterLevel;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject underwater;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5215C")]
	public Renderer horizenDown;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material horizenDownMat1;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material horizenDownMat2;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform thisTransform;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x20B790C", Offset = "0x20B790C", VA = "0x20B790C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x20B79B0", Offset = "0x20B79B0", VA = "0x20B79B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x20B7B68", Offset = "0x20B7B68", VA = "0x20B7B68")]
	public Underwater()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD14F0", Offset = "0xBD14F0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD14F0", Offset = "0xBD14F0")]
public class NVBoids : MonoBehaviour
{
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE484", Offset = "0xBDE484")]
	private sealed class <Danger>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7540")]
		private int <>1__state;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private object <>2__current;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52194")]
		public NVBoids <>4__this;

		[Token(Token = "0x1700046E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x19DC414", Offset = "0x19DC414", VA = "0x19DC414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x19DC4E4", Offset = "0x19DC4E4", VA = "0x19DC4E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x19DB128", Offset = "0x19DB128", VA = "0x19DB128")]
		[DebuggerHidden]
		public <Danger>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x19DBEB0", Offset = "0x19DBEB0", VA = "0x19DBEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x19DBEC4", Offset = "0x19DBEC4", VA = "0x19DBEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x19DC444", Offset = "0x19DC444", VA = "0x19DC444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4C0", Offset = "0xBDE4C0")]
	private sealed class <BehavioralChange>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVBoids <>4__this;

		[Token(Token = "0x17000470")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x19DBDB0", Offset = "0x19DBDB0", VA = "0x19DBDB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x19DBE80", Offset = "0x19DBE80", VA = "0x19DBE80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x19DB170", Offset = "0x19DB170", VA = "0x19DB170")]
		[DebuggerHidden]
		public <BehavioralChange>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x19DB4F0", Offset = "0x19DB4F0", VA = "0x19DB4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x19DB504", Offset = "0x19DB504", VA = "0x19DB504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x19DBDE0", Offset = "0x19DBDE0", VA = "0x19DBDE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7509")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE387C", Offset = "0xBE387C")]
	public Vector2 behavioralCh;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool debug;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE38E0", Offset = "0xBE38E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE38E0", Offset = "0xBE38E0")]
	public int flockNum;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3980", Offset = "0xBE3980")]
	public int fragmentedFlock;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE39CC", Offset = "0xBE39CC")]
	public float fragmentedFlockYLimit;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3A14", Offset = "0xBE3A14")]
	public float migrationFrequency;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7510")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3A5C", Offset = "0xBE3A5C")]
	public float posChangeFrequency;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3AA4", Offset = "0xBE3AA4")]
	public float smoothChFrequency;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52164")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3AEC", Offset = "0xBE3AEC")]
	public GameObject birdPref;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3B50", Offset = "0xBE3B50")]
	public int birdsNum;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3BA0", Offset = "0xBE3BA0")]
	public float birdSpeed;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3BE8", Offset = "0xBE3BE8")]
	public int fragmentedBirds;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7518")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3C30", Offset = "0xBE3C30")]
	public float fragmentedBirdsYLimit;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3C78", Offset = "0xBE3C78")]
	public float soaring;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5216C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3CC0", Offset = "0xBE3CC0")]
	public float verticalWawe;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool rotationClamp;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3D10", Offset = "0xBE3D10")]
	public float rotationClampValue;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 scaleRandom;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7520")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3D58", Offset = "0xBE3D58")]
	public bool danger;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float dangerRadius;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52174")]
	public float dangerSpeed;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float dangerSoaring;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask dangerLayer;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3DBC", Offset = "0xBE3DBC")]
	public string HelpURL;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7528")]
	public string ReportAProblem;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public string Patrons;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5217C")]
	private Transform thisTransform;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform dangerTransform;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int dangerBird;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform[] birdsTransform;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7530")]
	private Transform[] flocksTransform;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3[] rdTargetPos;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52184")]
	private Vector3[] flockPos;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] velFlocks;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] birdsSpeed;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] birdsSpeedCur;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7538")]
	private float[] spVelocity;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int[] curentFlock;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5218C")]
	private float dangerSpeedCh;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float dangerSoaringCh;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeTime;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds delay0;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x19D8EE4", Offset = "0x19D8EE4", VA = "0x19D8EE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x19D9F68", Offset = "0x19D9F68", VA = "0x19D9F68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x19D9FA8", Offset = "0x19D9FA8", VA = "0x19D9FA8")]
	private void FlocksMove()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x19DA260", Offset = "0x19DA260", VA = "0x19DA260")]
	private void BirdsMove()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x19D9EAC", Offset = "0x19D9EAC", VA = "0x19D9EAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC17AD8", Offset = "0xC17AD8")]
	private IEnumerator Danger()
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x19D9DF0", Offset = "0x19D9DF0", VA = "0x19D9DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC17B88", Offset = "0xC17B88")]
	private IEnumerator BehavioralChange()
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x19D8F84", Offset = "0x19D8F84", VA = "0x19D8F84")]
	private void CreateFlock()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x19D95CC", Offset = "0x19D95CC", VA = "0x19D95CC")]
	private void CreateBird()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x19DAEB8", Offset = "0x19DAEB8", VA = "0x19DAEB8")]
	private static Quaternion BirdsRotationClamp(Quaternion rotationCur, float rotationClampValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x19DB1B8", Offset = "0x19DB1B8", VA = "0x19DB1B8")]
	public NVBoids()
	{
	}
}
[Token(Token = "0x200000D")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD159C", Offset = "0xBD159C")]
public class AGGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7548")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3E20", Offset = "0xBE3E20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3E20", Offset = "0xBE3E20")]
	public float AOIntensity;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3EB4", Offset = "0xBE3EB4")]
	public float TranslucencyIntensity;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5219C")]
	public float TranslucencyDistance;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE3EFC", Offset = "0xBE3EFC")]
	public bool EnableTintColor;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float TintToggle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7550")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3F40", Offset = "0xBE3F40")]
	public float TintNoiseTile;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3F90", Offset = "0xBE3F90")]
	public float TintNoiseContrast;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x2AA0768", Offset = "0x2AA0768", VA = "0x2AA0768")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x2AA08A0", Offset = "0x2AA08A0", VA = "0x2AA08A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x2AA0A7C", Offset = "0x2AA0A7C", VA = "0x2AA0A7C")]
	public AGGlobalSettings()
	{
	}
}
[Token(Token = "0x200000E")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1684", Offset = "0xBD1684")]
public class AGGlobalSnow : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521A4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3FE0", Offset = "0xBE3FE0")]
	public bool EnableGlobalWind;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float WindToggle;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4044", Offset = "0xBE4044")]
	public float WindGrassAmplitude;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE408C", Offset = "0xBE408C")]
	public float WindGrassSpeed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7558")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE40D4", Offset = "0xBE40D4")]
	public float WindGrassScale;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE411C", Offset = "0xBE411C")]
	public float WindGrassStiffness;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521AC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4164", Offset = "0xBE4164")]
	public bool EnableTintColor;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float TintToggle;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE41C8", Offset = "0xBE41C8")]
	public float TintNoiseTile;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7560")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4218", Offset = "0xBE4218")]
	public float TintNoiseContrast;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4268", Offset = "0xBE4268")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4268", Offset = "0xBE4268")]
	public float SnowPropsIntensity;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE42FC", Offset = "0xBE42FC")]
	public float SnowPropsOffset;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4344", Offset = "0xBE4344")]
	public float SnowPropsContrast;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x2AA0B18", Offset = "0x2AA0B18", VA = "0x2AA0B18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x2AA0C50", Offset = "0x2AA0C50", VA = "0x2AA0C50")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x2AA0FD0", Offset = "0x2AA0FD0", VA = "0x2AA0FD0")]
	public AGGlobalSnow()
	{
	}
}
[Token(Token = "0x200000F")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD176C", Offset = "0xBD176C")]
public class AGGlobalSnowGrass : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE438C", Offset = "0xBE438C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE438C", Offset = "0xBE438C")]
	public float SnowGrassIntensity;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4420", Offset = "0xBE4420")]
	public float SnowGrassOffset;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7567")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4468", Offset = "0xBE4468")]
	public float SnowGrassContrast;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x2AA10BC", Offset = "0x2AA10BC", VA = "0x2AA10BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x2AA11F4", Offset = "0x2AA11F4", VA = "0x2AA11F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x2AA12E0", Offset = "0x2AA12E0", VA = "0x2AA12E0")]
	public AGGlobalSnowGrass()
	{
	}
}
[Token(Token = "0x2000010")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1854", Offset = "0xBD1854")]
public class AGGlobalSnowProps : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE44B0", Offset = "0xBE44B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE44B0", Offset = "0xBE44B0")]
	public float SnowPropsIntensity;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4544", Offset = "0xBE4544")]
	public float SnowPropsOffset;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE458C", Offset = "0xBE458C")]
	public float SnowPropsContrast;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x2AA1340", Offset = "0x2AA1340", VA = "0x2AA1340")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x2AA1478", Offset = "0x2AA1478", VA = "0x2AA1478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x2AA1564", Offset = "0x2AA1564", VA = "0x2AA1564")]
	public AGGlobalSnowProps()
	{
	}
}
[Token(Token = "0x2000011")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD193C", Offset = "0xBD193C")]
public class AGGlobalSnowTree : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE45D4", Offset = "0xBE45D4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE45D4", Offset = "0xBE45D4")]
	public float SnowTreeIntensity;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4668", Offset = "0xBE4668")]
	public float SnowTreeOffset;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x756F")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE46B0", Offset = "0xBE46B0")]
	public float SnowTreeContrast;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE46F8", Offset = "0xBE46F8")]
	public float SnowTreeArrowDirection;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x2AA15C4", Offset = "0x2AA15C4", VA = "0x2AA15C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x2AA16FC", Offset = "0x2AA16FC", VA = "0x2AA16FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x2AA1814", Offset = "0x2AA1814", VA = "0x2AA1814")]
	public AGGlobalSnowTree()
	{
	}
}
[Token(Token = "0x2000012")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1A24", Offset = "0xBD1A24")]
public class AGGlobalWind : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521BC")]
	public bool EnableGlobalWind;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float WindToggle;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4740", Offset = "0xBE4740")]
	public float WindTreeAmplitude;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4788", Offset = "0xBE4788")]
	public float WindTreeSpeed;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7577")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE47D0", Offset = "0xBE47D0")]
	public float WindTreeScale;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4818", Offset = "0xBE4818")]
	public float WindTreeStiffness;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4860", Offset = "0xBE4860")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE4860", Offset = "0xBE4860")]
	public float WindGrassAmplitude;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE48D8", Offset = "0xBE48D8")]
	public float WindGrassSpeed;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4920", Offset = "0xBE4920")]
	public float WindGrassScale;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4968", Offset = "0xBE4968")]
	public float WindGrassStiffness;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x2AA1880", Offset = "0x2AA1880", VA = "0x2AA1880")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x2AA19B8", Offset = "0x2AA19B8", VA = "0x2AA19B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x2AA1CC8", Offset = "0x2AA1CC8", VA = "0x2AA1CC8")]
	public AGGlobalWind()
	{
	}
}
[Token(Token = "0x2000013")]
public class MathUtils
{
	[Token(Token = "0x6000049")]
	[Address(RVA = "0x21E4328", Offset = "0x21E4328", VA = "0x21E4328")]
	public static float GetQuatLength(Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x21E462C", Offset = "0x21E462C", VA = "0x21E462C")]
	public static Quaternion GetQuatConjugate(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x21E47C4", Offset = "0x21E47C4", VA = "0x21E47C4")]
	public static Quaternion GetQuatLog(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x21E4AA0", Offset = "0x21E4AA0", VA = "0x21E4AA0")]
	public static Quaternion GetQuatExp(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x21E4DDC", Offset = "0x21E4DDC", VA = "0x21E4DDC")]
	public static Quaternion GetQuatSquad(float t, Quaternion q0, Quaternion q1, Quaternion a0, Quaternion a1)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x21E5B3C", Offset = "0x21E5B3C", VA = "0x21E5B3C")]
	public static Quaternion GetSquadIntermediate(Quaternion q0, Quaternion q1, Quaternion q2)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x21E5F94", Offset = "0x21E5F94", VA = "0x21E5F94")]
	public static float Ease(float t, float k1, float k2)
	{
		return default(float);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x21E5040", Offset = "0x21E5040", VA = "0x21E5040")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x21E6448", Offset = "0x21E6448", VA = "0x21E6448")]
	public MathUtils()
	{
	}
}
[Token(Token = "0x2000014")]
public enum eOrientationMode
{
	[Token(Token = "0x40000BB")]
	NODE,
	[Token(Token = "0x40000BC")]
	TANGENT
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1B0C", Offset = "0xBD1B0C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1B0C", Offset = "0xBD1B0C")]
public class SplineController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4FC", Offset = "0xBDE4FC")]
	private sealed class <>c
	{
		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x758F")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static Converter<Component, Transform> <>9__12_0;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD521DC")]
		public static Comparison<Transform> <>9__12_1;

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x1F30DB8", Offset = "0x1F30DB8", VA = "0x1F30DB8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x1F30DE8", Offset = "0x1F30DE8", VA = "0x1F30DE8")]
		internal Transform <GetTransforms>b__12_0(Component c)
		{
			return null;
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x1F30E70", Offset = "0x1F30E70", VA = "0x1F30E70")]
		internal int <GetTransforms>b__12_1(Transform a, Transform b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject SplineRoot;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Duration;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public eOrientationMode OrientationMode;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7587")]
	public eWrapMode WrapMode;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool AutoStart;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521D4")]
	public bool AutoClose;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool HideOnExecute;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SplineInterpolator mSplineInterp;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform[] mTransforms;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1F2DD2C", Offset = "0x1F2DD2C", VA = "0x1F2DD2C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1F2FA34", Offset = "0x1F2FA34", VA = "0x1F2FA34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1F2E8F0", Offset = "0x1F2E8F0", VA = "0x1F2E8F0")]
	private void SetupSplineInterpolator(SplineInterpolator interp, Transform[] trans)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1F2E1D8", Offset = "0x1F2E1D8", VA = "0x1F2E1D8")]
	private Transform[] GetTransforms()
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1F2FC1C", Offset = "0x1F2FC1C", VA = "0x1F2FC1C")]
	private void DisableTransforms()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1F2FD64", Offset = "0x1F2FD64", VA = "0x1F2FD64")]
	private void FollowSpline()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1F30C9C", Offset = "0x1F30C9C", VA = "0x1F30C9C")]
	public SplineController()
	{
	}
}
[Token(Token = "0x2000016")]
public enum eEndPointsMode
{
	[Token(Token = "0x40000C7")]
	AUTO,
	[Token(Token = "0x40000C8")]
	AUTOCLOSED,
	[Token(Token = "0x40000C9")]
	EXPLICIT
}
[Token(Token = "0x2000017")]
public enum eWrapMode
{
	[Token(Token = "0x40000CB")]
	ONCE,
	[Token(Token = "0x40000CC")]
	LOOP
}
[Token(Token = "0x2000018")]
public delegate void OnEndCallback();
[Token(Token = "0x2000019")]
public class SplineInterpolator : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	internal class SplineNode
	{
		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 Point;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75A7")]
		internal Quaternion Rot;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal float Time;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD521F4")]
		internal Vector2 EaseIO;

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x1F31590", Offset = "0x1F31590", VA = "0x1F31590")]
		internal SplineNode(Vector3 p, Quaternion q, float t, Vector2 io)
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x1F3178C", Offset = "0x1F3178C", VA = "0x1F3178C")]
		internal SplineNode(SplineNode o)
		{
		}
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private eEndPointsMode mEndPointsMode;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<SplineNode> mNodes;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x759F")]
	private string mState;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool mRotations;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521EC")]
	private OnEndCallback mOnEndCallback;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float mCurrentTime;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int mCurrentIdx;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1F30F00", Offset = "0x1F30F00", VA = "0x1F30F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1F2F328", Offset = "0x1F2F328", VA = "0x1F2F328")]
	public void StartInterpolation(OnEndCallback endCallback, bool bRotations, eWrapMode mode)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1F2FE28", Offset = "0x1F2FE28", VA = "0x1F2FE28")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1F2FF28", Offset = "0x1F2FF28", VA = "0x1F2FF28")]
	public void AddPoint(Vector3 pos, Quaternion quat, float timeInSeconds, Vector2 easeInOut)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1F30F30", Offset = "0x1F30F30", VA = "0x1F30F30")]
	private void SetInput()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1F3167C", Offset = "0x1F3167C", VA = "0x1F3167C")]
	private void SetExplicitMode()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1F300FC", Offset = "0x1F300FC", VA = "0x1F300FC")]
	public void SetAutoCloseMode(float joiningPointTime)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1F318AC", Offset = "0x1F318AC", VA = "0x1F318AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1F3290C", Offset = "0x1F3290C", VA = "0x1F3290C")]
	private Quaternion GetSquad(int idxFirstPoint, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1F32154", Offset = "0x1F32154", VA = "0x1F32154")]
	public Vector3 GetHermiteInternal(int idxFirstPoint, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1F2F518", Offset = "0x1F2F518", VA = "0x1F2F518")]
	public Vector3 GetHermiteAtTime(float timeParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1F32D8C", Offset = "0x1F32D8C", VA = "0x1F32D8C")]
	public SplineInterpolator()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1C04", Offset = "0xBD1C04")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1C04", Offset = "0xBD1C04")]
public class AQUAS_Camera : MonoBehaviour
{
	[Token(Token = "0x6000069")]
	[Address(RVA = "0x2ABDEC4", Offset = "0x2ABDEC4", VA = "0x2ABDEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x2ABDEF4", Offset = "0x2ABDEF4", VA = "0x2ABDEF4")]
	private void Set()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x2ABDFDC", Offset = "0x2ABDFDC", VA = "0x2ABDFDC")]
	public AQUAS_Camera()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1CFC", Offset = "0xBD1CFC")]
[ExecuteInEditMode]
public class AQUAS_Reflection : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_TextureSize;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75AF")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD521FC")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ignoreOcclusionCulling;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x2ABE00C", Offset = "0x2ABE00C", VA = "0x2ABE00C")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x2AC140C", Offset = "0x2AC140C", VA = "0x2AC140C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x2ABFED4", Offset = "0x2ABFED4", VA = "0x2ABFED4")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x2ABF574", Offset = "0x2ABF574", VA = "0x2ABF574")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x2AC19B8", Offset = "0x2AC19B8", VA = "0x2AC19B8")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x2AC0B0C", Offset = "0x2AC0B0C", VA = "0x2AC0B0C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x2AC0F3C", Offset = "0x2AC0F3C", VA = "0x2AC0F3C")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x2AC05AC", Offset = "0x2AC05AC", VA = "0x2AC05AC")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x2AC1A40", Offset = "0x2AC1A40", VA = "0x2AC1A40")]
	public AQUAS_Reflection()
	{
	}
}
[Token(Token = "0x200001C")]
public class AntChannel : MonoBehaviour
{
	[Token(Token = "0x2000542")]
	public delegate void OnReceiveData(byte[] data);

	[Token(Token = "0x2000543")]
	public delegate void OnChannelResponse(ANT_Response response);

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75B7")]
	public ANT_Device device;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ANT_Channel channel;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE34")]
	public byte[] txBuffer;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool broadcasting;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<byte[]> RXQueue;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<ANT_Response> messageQueue;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52204")]
	private ANT_ReferenceLibrary.ChannelType channelType;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte userChannel;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ushort deviceNum;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte deviceType;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75C6")]
	private byte transType;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private byte radioFreq;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5220C")]
	private ushort channelPeriod;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pairing;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isBackgroundScan;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool hideRXFAIL;

	[Token(Token = "0x14000001")]
	public event OnReceiveData onReceiveData
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x2AC82D4", Offset = "0x2AC82D4", VA = "0x2AC82D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17C38", Offset = "0xC17C38")]
		add
		{
		}
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x2AC8420", Offset = "0x2AC8420", VA = "0x2AC8420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17C74", Offset = "0xC17C74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event OnChannelResponse onChannelResponse
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x2AC856C", Offset = "0x2AC856C", VA = "0x2AC856C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17CB0", Offset = "0xC17CB0")]
		add
		{
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x2AC86B8", Offset = "0x2AC86B8", VA = "0x2AC86B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17CEC", Offset = "0xC17CEC")]
		remove
		{
		}
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x2AC8804", Offset = "0x2AC8804", VA = "0x2AC8804")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x2AC922C", Offset = "0x2AC922C", VA = "0x2AC922C")]
	public void ConfigureAnt(ANT_ReferenceLibrary.ChannelType channelType, byte userChannel, ushort deviceNum, byte deviceType, byte transType, byte radioFreq, ushort channelPeriod, bool pairing, int USBNum)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x2AC9A64", Offset = "0x2AC9A64", VA = "0x2AC9A64")]
	public void ConfigureScan(byte userChannel, ushort USBNum)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x2AC9EC0", Offset = "0x2AC9EC0", VA = "0x2AC9EC0")]
	public void ConfigureContinuousScan(ANT_ReferenceLibrary.ChannelType channelType, byte radioFreq, ushort USBNum)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x2ACA334", Offset = "0x2ACA334", VA = "0x2ACA334")]
	public void Close()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x2ACA650", Offset = "0x2ACA650", VA = "0x2ACA650")]
	public void PauseChannel()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x2ACA680", Offset = "0x2ACA680", VA = "0x2ACA680")]
	public void ReOpen()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x2ACA838", Offset = "0x2ACA838", VA = "0x2ACA838")]
	public void ReOpen(ANT_Device device)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x2ACAA00", Offset = "0x2ACAA00", VA = "0x2ACAA00")]
	public void sendAcknowledgedData(byte[] data)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x2ACAA58", Offset = "0x2ACAA58", VA = "0x2ACAA58")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x2ACB8E4", Offset = "0x2ACB8E4", VA = "0x2ACB8E4")]
	public AntChannel()
	{
	}
}
[Token(Token = "0x200001D")]
public class SerialError
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75CE")]
	public ANT_Device sender;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ANT_Device.serialErrorCode error;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52214")]
	public bool isCritical;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1F74A0C", Offset = "0x1F74A0C", VA = "0x1F74A0C")]
	public SerialError(ANT_Device sender, ANT_Device.serialErrorCode error, bool isCritical)
	{
	}
}
[Token(Token = "0x200001E")]
public class AntManager : MonoBehaviour
{
	[Token(Token = "0x2000544")]
	public delegate void OnDeviceResponse(ANT_Response response);

	[Token(Token = "0x2000545")]
	public delegate void OnSerialError(SerialError error);

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AntManager _instance;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int lastChannel;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly byte[] NETWORK_KEY;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75D6")]
	public ANT_Device[] devices;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Queue<ANT_Response> messageQueue;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<SerialError> errorQueue;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<AntChannel> channelList;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75DE")]
	public bool[,] channelIDUsed;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52224")]
	private int nScanRequest;

	[Token(Token = "0x17000001")]
	public static AntManager Instance
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x2AC9758", Offset = "0x2AC9758", VA = "0x2AC9758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public ANT_Device device
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x2ACBBC4", Offset = "0x2ACBBC4", VA = "0x2ACBBC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public event OnDeviceResponse onDeviceResponse
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x2ACBC18", Offset = "0x2ACBC18", VA = "0x2ACBC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17D28", Offset = "0xC17D28")]
		add
		{
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x2ACBD64", Offset = "0x2ACBD64", VA = "0x2ACBD64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17D64", Offset = "0xC17D64")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event OnSerialError onSerialError
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x2ACBEB0", Offset = "0x2ACBEB0", VA = "0x2ACBEB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17DA0", Offset = "0xC17DA0")]
		add
		{
		}
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x2ACBFFC", Offset = "0x2ACBFFC", VA = "0x2ACBFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17DDC", Offset = "0xC17DDC")]
		remove
		{
		}
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x2ACC148", Offset = "0x2ACC148", VA = "0x2ACC148")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x2ACC330", Offset = "0x2ACC330", VA = "0x2ACC330")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x2ACCD34", Offset = "0x2ACCD34", VA = "0x2ACCD34")]
	public void Init(byte USBDeviceNum = 0)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x2ACD368", Offset = "0x2ACD368", VA = "0x2ACD368")]
	public void Reconnect(ANT_Device previousDevice)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x2ACD56C", Offset = "0x2ACD56C", VA = "0x2ACD56C")]
	public AntChannel OpenChannel(ANT_ReferenceLibrary.ChannelType channelType, byte userChannel, ushort deviceNum, byte deviceType, byte transType, byte radioFreq, ushort channelPeriod, bool pairing, int USBNum = 0)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x2ACD7B4", Offset = "0x2ACD7B4", VA = "0x2ACD7B4")]
	public AntChannel OpenBackgroundScanChannel(byte userChannel, byte USBDeviceNum = 0)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x2ACDA54", Offset = "0x2ACDA54", VA = "0x2ACDA54")]
	public AntChannel OpenContinuousScanChannel(byte radioFreq, byte USBDeviceNum = 0)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x2ACDB50", Offset = "0x2ACDB50", VA = "0x2ACDB50")]
	public void CloseBackgroundScanChannel()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2ACDBE0", Offset = "0x2ACDBE0", VA = "0x2ACDBE0")]
	private void CloseBackgroundScan()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x2ACDD68", Offset = "0x2ACDD68", VA = "0x2ACDD68")]
	public byte GetFreeChannelID(int USBNum = 0)
	{
		return default(byte);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x2ACDF44", Offset = "0x2ACDF44", VA = "0x2ACDF44")]
	private void DeviceResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x2ACE024", Offset = "0x2ACE024", VA = "0x2ACE024")]
	private void SerialErrorHandler(ANT_Device sender, ANT_Device.serialErrorCode error, bool isCritical)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x2ACE170", Offset = "0x2ACE170", VA = "0x2ACE170")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x2ACE298", Offset = "0x2ACE298", VA = "0x2ACE298")]
	public AntManager()
	{
	}
}
[Token(Token = "0x200001F")]
public static class AntplusDeviceType
{
	[Token(Token = "0x40000FE")]
	public const byte Antfs = 1;

	[Token(Token = "0x40000FF")]
	public const byte BikePower = 11;

	[Token(Token = "0x4000100")]
	public const byte EnvironmentSensorLegacy = 12;

	[Token(Token = "0x4000101")]
	public const byte MultiSportSpeedDistance = 15;

	[Token(Token = "0x4000102")]
	public const byte Control = 16;

	[Token(Token = "0x4000103")]
	public const byte FitnessEquipment = 17;

	[Token(Token = "0x4000104")]
	public const byte BloodPressure = 18;

	[Token(Token = "0x4000105")]
	public const byte GeocacheNode = 19;

	[Token(Token = "0x4000106")]
	public const byte LightElectricVehicle = 20;

	[Token(Token = "0x4000107")]
	public const byte EnvSensor = 25;

	[Token(Token = "0x4000108")]
	public const byte Racquet = 26;

	[Token(Token = "0x4000109")]
	public const byte ControlHub = 27;

	[Token(Token = "0x400010A")]
	public const byte MuscleOxygen = 31;

	[Token(Token = "0x400010B")]
	public const byte BikeLightMain = 35;

	[Token(Token = "0x400010C")]
	public const byte BikeLightShared = 36;

	[Token(Token = "0x400010D")]
	public const byte BikeRadar = 40;

	[Token(Token = "0x400010E")]
	public const byte WeightScale = 119;

	[Token(Token = "0x400010F")]
	public const byte HeartRate = 120;

	[Token(Token = "0x4000110")]
	public const byte BikeSpeedCadence = 121;

	[Token(Token = "0x4000111")]
	public const byte BikeCadence = 122;

	[Token(Token = "0x4000112")]
	public const byte BikeSpeed = 123;

	[Token(Token = "0x4000113")]
	public const byte StrideSpeedDistance = 124;

	[Token(Token = "0x4000114")]
	public const byte Invalid = byte.MaxValue;
}
[Token(Token = "0x2000020")]
public class AntDevice
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte deviceType;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte transType;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75E6")]
	public int period;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int deviceNumber;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5222C")]
	public int radiofreq;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x2ACBB94", Offset = "0x2ACBB94", VA = "0x2ACBB94")]
	public AntDevice()
	{
	}
}
[Token(Token = "0x2000021")]
public class CadenceDisplay : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoStartScan;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool connected;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float wheelCircumference;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75EE")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52234")]
	public bool useAndroidUI;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool skipPreferredSearch;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int cadence;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75F6")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int stopRevCounter_cadence;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5223C")]
	private int prev_measTime_cadence;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int prev_revCount_cadence;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int deviceID;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1D88428", Offset = "0x1D88428", VA = "0x1D88428")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1D8847C", Offset = "0x1D8847C", VA = "0x1D8847C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1D88C5C", Offset = "0x1D88C5C", VA = "0x1D88C5C")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1D890F4", Offset = "0x1D890F4", VA = "0x1D890F4")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1D892AC", Offset = "0x1D892AC", VA = "0x1D892AC")]
	private void ANTPLUG_Receive_calculatedCadence(string s)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1D89300", Offset = "0x1D89300", VA = "0x1D89300")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1D89AE0", Offset = "0x1D89AE0", VA = "0x1D89AE0")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1D89E7C", Offset = "0x1D89E7C", VA = "0x1D89E7C")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1D8A234", Offset = "0x1D8A234", VA = "0x1D8A234")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1D8A24C", Offset = "0x1D8A24C", VA = "0x1D8A24C")]
	public CadenceDisplay()
	{
	}
}
[Token(Token = "0x2000022")]
public class TrainerCapabilities
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int maximumResistance;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75FE")]
	public bool basicResistanceNodeSupport;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool targetPowerModeSupport;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52244")]
	public bool simulationModeSupport;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x29D2CC0", Offset = "0x29D2CC0", VA = "0x29D2CC0")]
	public TrainerCapabilities()
	{
	}
}
[Token(Token = "0x2000023")]
public class CommandStatus
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int lastReceivedCommandId;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int status;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int lastReceivedSequenceNumber;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7606")]
	public byte byte_4;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public byte byte_5;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5224C")]
	public byte byte_6;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte byte_7;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x21ACAA8", Offset = "0x21ACAA8", VA = "0x21ACAA8")]
	public CommandStatus()
	{
	}
}
[Token(Token = "0x2000024")]
public class UserConfiguration
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float bicycleWeight;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float userWeight;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x24CE698", Offset = "0x24CE698", VA = "0x24CE698")]
	public UserConfiguration()
	{
	}
}
[Token(Token = "0x2000025")]
public class FitnessEquipmentDisplay : MonoBehaviour
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760E")]
	public bool autoStartScan;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool connected;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE3C")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useAndroidUI;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool skipPreferredSearch;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7615")]
	public float speed;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float elapsedTime;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52254")]
	public int heartRate;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int distanceTraveled;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int instantaneousPower;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int cadence;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x761D")]
	private TrainerCapabilities trainerCapabilities;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5225C")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte[] pageToSend;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool request_page_54;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool request_page_55;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7625")]
	private bool request_page_71;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int deviceID;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52264")]
	private int prevDistance;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float prevTime;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool firstDistanceInfo;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool firstTimeInfo;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1C2A228", Offset = "0x1C2A228", VA = "0x1C2A228")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1C2A27C", Offset = "0x1C2A27C", VA = "0x1C2A27C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1C2A964", Offset = "0x1C2A964", VA = "0x1C2A964")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1C2ADFC", Offset = "0x1C2ADFC", VA = "0x1C2ADFC")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1C2AFB4", Offset = "0x1C2AFB4", VA = "0x1C2AFB4")]
	private void ANTPLUG_Receive_instantaneousHeartRate(string s)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1C2B030", Offset = "0x1C2B030", VA = "0x1C2B030")]
	private void ANTPLUG_Receive_elapsedTime(string s)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1C2B07C", Offset = "0x1C2B07C", VA = "0x1C2B07C")]
	private void ANTPLUG_Receive_instantaneousSpeed(string s)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1C2B0E8", Offset = "0x1C2B0E8", VA = "0x1C2B0E8")]
	private void ANTPLUG_Receive_cumulativeDistance(string s)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1C2B13C", Offset = "0x1C2B13C", VA = "0x1C2B13C")]
	private void ANTPLUG_Receive_trainer_instantaneousPower(string s)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1C2B190", Offset = "0x1C2B190", VA = "0x1C2B190")]
	private void ANTPLUG_Receive_trainer_instantaneousCadence(string s)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1C2B1E4", Offset = "0x1C2B1E4", VA = "0x1C2B1E4")]
	private void ANTPLUG_Receive_trainer_userconfig(string jsonstring)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1C2B1FC", Offset = "0x1C2B1FC", VA = "0x1C2B1FC")]
	private void ANTPLUG_Receive_trainer_capabilities(string jsonstring)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1C2B4E8", Offset = "0x1C2B4E8", VA = "0x1C2B4E8")]
	private void ANTPLUG_Receive_Trainer_commandStatus(string jsonstring)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1C2BC64", Offset = "0x1C2BC64", VA = "0x1C2BC64")]
	private void ANTPLUG_Receive_userConfiguration(string jsonstring)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1C2BF00", Offset = "0x1C2BF00", VA = "0x1C2BF00")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1C2C6E0", Offset = "0x1C2C6E0", VA = "0x1C2C6E0")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1C2CA7C", Offset = "0x1C2CA7C", VA = "0x1C2CA7C")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1C2B5B8", Offset = "0x1C2B5B8", VA = "0x1C2B5B8")]
	private static void ReadCommandStatus(CommandStatus status)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1C2BD34", Offset = "0x1C2BD34", VA = "0x1C2BD34")]
	private static void ReadUserConFig(UserConfiguration config)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1C2DEE4", Offset = "0x1C2DEE4", VA = "0x1C2DEE4")]
	public void SetTrainerResistance(int resistance)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1C2E49C", Offset = "0x1C2E49C", VA = "0x1C2E49C")]
	public void SetTrainerTargetPower(int targetpower)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1C2EA54", Offset = "0x1C2EA54", VA = "0x1C2EA54")]
	public void SetTrainerSlope(int slope)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1C2EFCC", Offset = "0x1C2EFCC", VA = "0x1C2EFCC")]
	public void SetTrainerUserConfiguration(float bikeWeight, float userWeight)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1C2F514", Offset = "0x1C2F514", VA = "0x1C2F514")]
	public void RequestCommandStatus()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1C2FA2C", Offset = "0x1C2FA2C", VA = "0x1C2FA2C")]
	public void RequestTrainerCapabilities()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1C2FF44", Offset = "0x1C2FF44", VA = "0x1C2FF44")]
	public void RequestUserConfig()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1C3045C", Offset = "0x1C3045C", VA = "0x1C3045C")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1C30528", Offset = "0x1C30528", VA = "0x1C30528")]
	public FitnessEquipmentDisplay()
	{
	}
}
[Token(Token = "0x2000026")]
public class HeartRateDisplay : MonoBehaviour
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x762D")]
	public bool autoStartScan;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool connected;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5226C")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useAndroidUI;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool skipPreferredSearch;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7635")]
	public float heartRate;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52274")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int deviceID;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1AE5948", Offset = "0x1AE5948", VA = "0x1AE5948")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1AE599C", Offset = "0x1AE599C", VA = "0x1AE599C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1AE6084", Offset = "0x1AE6084", VA = "0x1AE6084")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1AE65A0", Offset = "0x1AE65A0", VA = "0x1AE65A0")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1AE67E8", Offset = "0x1AE67E8", VA = "0x1AE67E8")]
	private void ANTPLUG_Receive_computedHeartRate(string s)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1AE6840", Offset = "0x1AE6840", VA = "0x1AE6840")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1AE7020", Offset = "0x1AE7020", VA = "0x1AE7020")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1AE73BC", Offset = "0x1AE73BC", VA = "0x1AE73BC")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1AE742C", Offset = "0x1AE742C", VA = "0x1AE742C")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1AE7444", Offset = "0x1AE7444", VA = "0x1AE7444")]
	public HeartRateDisplay()
	{
	}
}
[Token(Token = "0x2000027")]
public class MultipleDeviceSearch : MonoBehaviour
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool speedCadence;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool cadence;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x763D")]
	public bool hr;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool speed;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5227C")]
	public bool power;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fec;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool podometer;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<int> foundSpeedCadenceIDList;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7645")]
	public List<int> foundCadenceIDList;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<int> foundHrIDList;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52284")]
	public List<int> foundSpeedIDList;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<int> foundPowerIDList;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<int> foundFecIDList;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text debugText;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x764D")]
	public SpeedCadenceDisplay spcadDisplay;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x19D6420", Offset = "0x19D6420", VA = "0x19D6420")]
	public void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x19D6450", Offset = "0x19D6450", VA = "0x19D6450")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x19D6DFC", Offset = "0x19D6DFC", VA = "0x19D6DFC")]
	private void ANTPLUG_foundSpeedCadence(string s)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x19D7040", Offset = "0x19D7040", VA = "0x19D7040")]
	private void ANTPLUG_foundCadence(string s)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x19D722C", Offset = "0x19D722C", VA = "0x19D722C")]
	private void ANTPLUG_foundHr(string s)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x19D7418", Offset = "0x19D7418", VA = "0x19D7418")]
	private void ANTPLUG_foundSpeed(string s)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x19D7604", Offset = "0x19D7604", VA = "0x19D7604")]
	private void ANTPLUG_foundPower(string s)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x19D77DC", Offset = "0x19D77DC", VA = "0x19D77DC")]
	private void ANTPLUG_foundFec(string s)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x19D79C8", Offset = "0x19D79C8", VA = "0x19D79C8")]
	public MultipleDeviceSearch()
	{
	}
}
[Token(Token = "0x2000028")]
public class PowerMeterDisplay : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool autoStartScan;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5228C")]
	public bool connected;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useAndroidUI;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7655")]
	public bool skipPreferredSearch;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int instantaneousPower;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52294")]
	public int instantaneousCadence;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int deviceID;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x765D")]
	private byte[] pageToSend;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int update_event_count;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5229C")]
	private int sameEventCounter;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x19E6324", Offset = "0x19E6324", VA = "0x19E6324")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x19E6378", Offset = "0x19E6378", VA = "0x19E6378")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x19E6A60", Offset = "0x19E6A60", VA = "0x19E6A60")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x19E6EF8", Offset = "0x19E6EF8", VA = "0x19E6EF8")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x19E70B0", Offset = "0x19E70B0", VA = "0x19E70B0")]
	private void ANTPLUG_Receive_calculatedPower(string s)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x19E7104", Offset = "0x19E7104", VA = "0x19E7104")]
	private void ANTPLUG_Receive_calculatedCadence(string s)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x19E7158", Offset = "0x19E7158", VA = "0x19E7158")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x19E7938", Offset = "0x19E7938", VA = "0x19E7938")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x19E7CD4", Offset = "0x19E7CD4", VA = "0x19E7CD4")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x19E7F78", Offset = "0x19E7F78", VA = "0x19E7F78")]
	public void Calibrate()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x19E8144", Offset = "0x19E8144", VA = "0x19E8144")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x19E81E4", Offset = "0x19E81E4", VA = "0x19E81E4")]
	public PowerMeterDisplay()
	{
	}
}
[Token(Token = "0x2000029")]
public class SpeedCadenceDisplay : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoStartScan;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool connected;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float wheelCircumference;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7665")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4C4FC")]
	public bool useAndroidUI;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool skipPreferredSearch;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float speed;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int cadence;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x766A")]
	public float distance;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4C5D4")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int stopRevCounter_speed;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int stopRevCounter_cadence;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int prev_measTime_speed;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7670")]
	private int prev_revCount_speed;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int prev_measTime_cadence;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE44")]
	private int prev_revCount_cadence;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int revCountZero;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int deviceID;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1F29AD0", Offset = "0x1F29AD0", VA = "0x1F29AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1F29B24", Offset = "0x1F29B24", VA = "0x1F29B24")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1F2A2FC", Offset = "0x1F2A2FC", VA = "0x1F2A2FC")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1F2A794", Offset = "0x1F2A794", VA = "0x1F2A794")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1F2A94C", Offset = "0x1F2A94C", VA = "0x1F2A94C")]
	private void ANTPLUG_Receive_calculatedCadence(string s)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1F2A9C8", Offset = "0x1F2A9C8", VA = "0x1F2A9C8")]
	private void ANTPLUG_Receive_calculatedSpeed(string s)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1F2AA34", Offset = "0x1F2AA34", VA = "0x1F2AA34")]
	private void ANTPLUG_Receive_CalculatedAccumulatedDistance(string s)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1F2AA80", Offset = "0x1F2AA80", VA = "0x1F2AA80")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1F2B260", Offset = "0x1F2B260", VA = "0x1F2B260")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1F2B5FC", Offset = "0x1F2B5FC", VA = "0x1F2B5FC")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1F2BD54", Offset = "0x1F2BD54", VA = "0x1F2BD54")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1F2BD6C", Offset = "0x1F2BD6C", VA = "0x1F2BD6C")]
	public SpeedCadenceDisplay()
	{
	}
}
[Token(Token = "0x200002A")]
public class SpeedDisplay : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoStartScan;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7677")]
	public bool connected;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float wheelCircumference;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522A4")]
	public bool autoConnectToFirstSensorFound;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<AntDevice> scanResult;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useAndroidUI;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool skipPreferredSearch;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x767F")]
	public float speed;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distance;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522AC")]
	private AntChannel backgroundScanChannel;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AntChannel deviceChannel;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int stopRevCounter_speed;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int prev_measTime_speed;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7687")]
	private int prev_revCount_speed;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int revCountZero;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522B4")]
	public int deviceID;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1F2BE04", Offset = "0x1F2BE04", VA = "0x1F2BE04")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1F2BE58", Offset = "0x1F2BE58", VA = "0x1F2BE58")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1F2C5D0", Offset = "0x1F2C5D0", VA = "0x1F2C5D0")]
	private void ANTPLUG_ConnectEvent(string resultCode)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1F2CA68", Offset = "0x1F2CA68", VA = "0x1F2CA68")]
	private void ANTPLUG_StateChange(string newDeviceState)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1F2CC20", Offset = "0x1F2CC20", VA = "0x1F2CC20")]
	private void ANTPLUG_Receive_calculatedSpeed(string s)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1F2CC8C", Offset = "0x1F2CC8C", VA = "0x1F2CC8C")]
	private void ANTPLUG_Receive_CalculatedAccumulatedDistance(string s)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1F2CCD8", Offset = "0x1F2CCD8", VA = "0x1F2CCD8")]
	private void ReceivedBackgroundScanData(byte[] data)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1F2D4B8", Offset = "0x1F2D4B8", VA = "0x1F2D4B8")]
	private void ConnectToDevice(AntDevice device)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1F2D854", Offset = "0x1F2D854", VA = "0x1F2D854")]
	public void Data(byte[] data)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1F2DC7C", Offset = "0x1F2DC7C", VA = "0x1F2DC7C")]
	private void ChannelResponse(ANT_Response response)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1F2DC94", Offset = "0x1F2DC94", VA = "0x1F2DC94")]
	public SpeedDisplay()
	{
	}
}
[Token(Token = "0x200002B")]
public class RayShot : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LineRenderer line;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform rayEnd;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform hitReport;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768F")]
	public ASCLBasicController abc;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Enemy[] enemies;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522BC")]
	public float damage;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lifespan;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 endPos;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1F57C68", Offset = "0x1F57C68", VA = "0x1F57C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1F58EE8", Offset = "0x1F58EE8", VA = "0x1F58EE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1F59028", Offset = "0x1F59028", VA = "0x1F59028")]
	public RayShot()
	{
	}
}
[Token(Token = "0x200002C")]
public class ASCLBasicController : MonoBehaviour
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7697")]
	private Animator animator;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Collider floorPlane;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522C4")]
	public Collider attackPlane;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Enemy[] enemies;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform hitReport;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform particleHit;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x769F")]
	public List<Ability> abilities;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int ahc;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522CC")]
	public bool hitCheck;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int WeaponState;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool wasAttacking;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Renderer movementTarget;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76A7")]
	private Transform destFloor;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float rotateSpeed;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522D4")]
	public Vector3 attackPos;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float gravity;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float fallspeed;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76AF")]
	public bool rightButtonDown;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x2AC1BA8", Offset = "0x2AC1BA8", VA = "0x2AC1BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x2AC1EFC", Offset = "0x2AC1EFC", VA = "0x2AC1EFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x2AC4FB8", Offset = "0x2AC4FB8", VA = "0x2AC4FB8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x2AC4524", Offset = "0x2AC4524", VA = "0x2AC4524")]
	private void CheckForHit(Enemy en, AbilityCollision ac)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x2AC51A8", Offset = "0x2AC51A8", VA = "0x2AC51A8")]
	public ASCLBasicController()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class Ability
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int weaponstate;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522DC")]
	[SerializeField]
	public List<AbilityCollision> collChecks;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x2AC52A8", Offset = "0x2AC52A8", VA = "0x2AC52A8")]
	public Ability()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class AbilityCollision
{
	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int type;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 rotation;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76B7")]
	public float range;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float angle;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522E4")]
	public float speed;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float damage;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform missile;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x2AC44F4", Offset = "0x2AC44F4", VA = "0x2AC44F4")]
	public AbilityCollision()
	{
	}
}
[Token(Token = "0x200002F")]
public class BasicHitCheck : StateMachineBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float colliderTestTime;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76BF")]
	private bool collChecked;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ASCLBasicController abilityController;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x2A81D30", Offset = "0x2A81D30", VA = "0x2A81D30", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2A81DF4", Offset = "0x2A81DF4", VA = "0x2A81DF4", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x2A81EC4", Offset = "0x2A81EC4", VA = "0x2A81EC4", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x2A81EFC", Offset = "0x2A81EFC", VA = "0x2A81EFC")]
	public BasicHitCheck()
	{
	}
}
[Token(Token = "0x2000030")]
public class CamTarget : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522EC")]
	public Transform target;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float camSpeed;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 lerpPos;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x2189E04", Offset = "0x2189E04", VA = "0x2189E04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x218A0CC", Offset = "0x218A0CC", VA = "0x218A0CC")]
	public CamTarget()
	{
	}
}
[Token(Token = "0x2000031")]
public class CarCamera : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76C7")]
	public float height;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float positionDamping;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE4C")]
	public float velocityDamping;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit hit;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76CE")]
	private Vector3 prevVelocity;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private LayerMask raycastLayers;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522F4")]
	private Vector3 currentVelocity;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x218AF74", Offset = "0x218AF74", VA = "0x218AF74")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x218B054", Offset = "0x218B054", VA = "0x218B054")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x218B268", Offset = "0x218B268", VA = "0x218B268")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x218B8F0", Offset = "0x218B8F0", VA = "0x218B8F0")]
	public CarCamera()
	{
	}
}
[Token(Token = "0x2000032")]
public class CharacterControllerCollCheck : MonoBehaviour
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CharacterController charControl;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float gravity;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x218D86C", Offset = "0x218D86C", VA = "0x218D86C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x218D8F8", Offset = "0x218D8F8", VA = "0x218D8F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x218DA30", Offset = "0x218DA30", VA = "0x218DA30")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x218DAA0", Offset = "0x218DAA0", VA = "0x218DAA0")]
	public CharacterControllerCollCheck()
	{
	}
}
[Token(Token = "0x2000033")]
public class CharacterDemoController : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator animator;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76D6")]
	public GameObject floorPlane;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int WeaponState;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD522FC")]
	public bool wasAttacking;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float rotateSpeed;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 attackPos;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76DE")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float gravity;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52304")]
	private RaycastHit hit;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Ray ray;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool rightButtonDown;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x218DAE4", Offset = "0x218DAE4", VA = "0x218DAE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x218DBB0", Offset = "0x218DBB0", VA = "0x218DBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x218F388", Offset = "0x218F388", VA = "0x218F388")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x218F578", Offset = "0x218F578", VA = "0x218F578")]
	public CharacterDemoController()
	{
	}
}
[Token(Token = "0x2000034")]
public class CharacterPhysicsController : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator animator;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76E6")]
	public GameObject floorPlane;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int WeaponState;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5230C")]
	public bool wasAttacking;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float rotateSpeed;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CharacterController charcontroller;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76EE")]
	public Vector3 attackPos;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52314")]
	private float gravity;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool jumping;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool grounded;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject contact;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76F6")]
	public float verticalVelocity;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private RaycastHit hit;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5231C")]
	private Ray ray;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool rightButtonDown;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x218F5D8", Offset = "0x218F5D8", VA = "0x218F5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x218F6C8", Offset = "0x218F6C8", VA = "0x218F6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x2191510", Offset = "0x2191510", VA = "0x2191510")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x2191568", Offset = "0x2191568", VA = "0x2191568")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x2191758", Offset = "0x2191758", VA = "0x2191758")]
	public CharacterPhysicsController()
	{
	}
}
[Token(Token = "0x2000035")]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D cursorTexture;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CursorMode cursorMode;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76FE")]
	private Vector2 hotSpot;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool targeted;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1C25F80", Offset = "0x1C25F80", VA = "0x1C25F80")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1C25F94", Offset = "0x1C25F94", VA = "0x1C25F94")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1C25FA8", Offset = "0x1C25FA8", VA = "0x1C25FA8")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1C26020", Offset = "0x1C26020", VA = "0x1C26020")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1C26110", Offset = "0x1C26110", VA = "0x1C26110")]
	public Enemy()
	{
	}
}
[Token(Token = "0x2000036")]
public class Hit : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52324")]
	public TextMesh yellow;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMesh black;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentTime;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7706")]
	public float lifespan;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float fadeTime;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5232C")]
	public float fadeSpeed;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maxSize;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float speed;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string text;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1AE7728", Offset = "0x1AE7728", VA = "0x1AE7728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1AE7764", Offset = "0x1AE7764", VA = "0x1AE7764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1AE7EBC", Offset = "0x1AE7EBC", VA = "0x1AE7EBC")]
	public Hit()
	{
	}
}
[Token(Token = "0x2000037")]
public class Missile : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770E")]
	public Enemy[] enemies;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float speed;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52334")]
	public float damage;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ASCLBasicController abc;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lifespan;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float startTime;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7716")]
	public Transform hitReport;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Transform particleHit;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x19D17F4", Offset = "0x19D17F4", VA = "0x19D17F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x19D1830", Offset = "0x19D1830", VA = "0x19D1830")]
	private void Update()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x19D2784", Offset = "0x19D2784", VA = "0x19D2784")]
	public Missile()
	{
	}
}
[Token(Token = "0x2000038")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5233C")]
	public Transform target;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float distance;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float xSpeed;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ySpeed;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x771E")]
	private float x;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float y;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x19D4B04", Offset = "0x19D4B04", VA = "0x19D4B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x19D4CC0", Offset = "0x19D4CC0", VA = "0x19D4CC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x19D5580", Offset = "0x19D5580", VA = "0x19D5580")]
	private float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x19D5650", Offset = "0x19D5650", VA = "0x19D5650")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x19D5840", Offset = "0x19D5840", VA = "0x19D5840")]
	public MouseOrbit()
	{
	}
}
[Token(Token = "0x2000039")]
public class RadialAngler : MonoBehaviour
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE54")]
	public float angle;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldAngle;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float range;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldRange;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7725")]
	public Transform diameter;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public SkinnedMeshRenderer helper;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x2814D04", Offset = "0x2814D04", VA = "0x2814D04")]
	private void Start()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x2814E8C", Offset = "0x2814E8C", VA = "0x2814E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x28151B8", Offset = "0x28151B8", VA = "0x28151B8")]
	public RadialAngler()
	{
	}
}
[Token(Token = "0x200003A")]
public class RootMotionOff : StateMachineBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52344")]
	public float ColliderTestTime;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1F70DB0", Offset = "0x1F70DB0", VA = "0x1F70DB0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1F70E10", Offset = "0x1F70E10", VA = "0x1F70E10", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1F70E70", Offset = "0x1F70E70", VA = "0x1F70E70")]
	public RootMotionOff()
	{
	}
}
[Token(Token = "0x200003B")]
public class killParticle : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lifespan;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1958A54", Offset = "0x1958A54", VA = "0x1958A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1958A90", Offset = "0x1958A90", VA = "0x1958A90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1958BD0", Offset = "0x1958BD0", VA = "0x1958BD0")]
	public killParticle()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
public class sprite_sheet : MonoBehaviour
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int _uvTieX;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x772D")]
	public int _uvTieY;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int _fps;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5234C")]
	private Vector2 _size;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Renderer _myRenderer;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _lastIndex;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x3CE71EC", Offset = "0x3CE71EC", VA = "0x3CE71EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x3CE741C", Offset = "0x3CE741C", VA = "0x3CE741C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x3CE7760", Offset = "0x3CE7760", VA = "0x3CE7760")]
	public sprite_sheet()
	{
	}
}
[Token(Token = "0x200003D")]
public class ImporterExample : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE538", Offset = "0xBDE538")]
	private sealed class <Import>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52354")]
		private int <>1__state;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ImporterExample <>4__this;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string path;

		[Token(Token = "0x17000472")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x1AE9890", Offset = "0x1AE9890", VA = "0x1AE9890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x1AE9960", Offset = "0x1AE9960", VA = "0x1AE9960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1AE93DC", Offset = "0x1AE93DC", VA = "0x1AE93DC")]
		[DebuggerHidden]
		public <Import>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x1AE9454", Offset = "0x1AE9454", VA = "0x1AE9454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1AE9468", Offset = "0x1AE9468", VA = "0x1AE9468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x1AE98C0", Offset = "0x1AE98C0", VA = "0x1AE98C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Browser browser;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7735")]
	public AudioImporter importer;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AudioSource audioSource;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1AE90E0", Offset = "0x1AE90E0", VA = "0x1AE90E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1AE91BC", Offset = "0x1AE91BC", VA = "0x1AE91BC")]
	private void OnFileSelected(string path)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1AE92F8", Offset = "0x1AE92F8", VA = "0x1AE92F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC17E18", Offset = "0xC17E18")]
	private IEnumerator Import(string path)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1AE9424", Offset = "0x1AE9424", VA = "0x1AE9424")]
	public ImporterExample()
	{
	}
}
[Token(Token = "0x200003E")]
public abstract class AudioImporter : MonoBehaviour
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4B18", Offset = "0xBE4B18")]
	private Uri <uri>k__BackingField;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5235C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4B54", Offset = "0xBE4B54")]
	private AudioClip <audioClip>k__BackingField;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4B90", Offset = "0xBE4B90")]
	private float <progress>k__BackingField;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4BCC", Offset = "0xBE4BCC")]
	private bool <isDone>k__BackingField;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4C08", Offset = "0xBE4C08")]
	private bool <isInitialized>k__BackingField;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7745")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4C44", Offset = "0xBE4C44")]
	private bool <isError>k__BackingField;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE4C80", Offset = "0xBE4C80")]
	private string <error>k__BackingField;

	[Token(Token = "0x17000003")]
	public Uri uri
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x2ACFF9C", Offset = "0x2ACFF9C", VA = "0x2ACFF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17F40", Offset = "0xC17F40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x2ACFFCC", Offset = "0x2ACFFCC", VA = "0x2ACFFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17F7C", Offset = "0xC17F7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public virtual AudioClip audioClip
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x2AD0004", Offset = "0x2AD0004", VA = "0x2AD0004", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17FB8", Offset = "0xC17FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x2AD0034", Offset = "0x2AD0034", VA = "0x2AD0034", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17FF4", Offset = "0xC17FF4")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public virtual float progress
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x2AD006C", Offset = "0x2AD006C", VA = "0x2AD006C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18030", Offset = "0xC18030")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x2AD009C", Offset = "0x2AD009C", VA = "0x2AD009C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1806C", Offset = "0xC1806C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public virtual bool isDone
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x2AD00D4", Offset = "0x2AD00D4", VA = "0x2AD00D4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC180A8", Offset = "0xC180A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x2AD0118", Offset = "0x2AD0118", VA = "0x2AD0118", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC180E4", Offset = "0xC180E4")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public virtual bool isInitialized
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x2AD0164", Offset = "0x2AD0164", VA = "0x2AD0164", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18120", Offset = "0xC18120")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x2AD01A8", Offset = "0x2AD01A8", VA = "0x2AD01A8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1815C", Offset = "0xC1815C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public virtual bool isError
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x2AD01F4", Offset = "0x2AD01F4", VA = "0x2AD01F4", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18198", Offset = "0xC18198")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x2AD0238", Offset = "0x2AD0238", VA = "0x2AD0238", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC181D4", Offset = "0xC181D4")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public virtual string error
	{
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x2AD0284", Offset = "0x2AD0284", VA = "0x2AD0284", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18210", Offset = "0xC18210")]
		get
		{
			return null;
		}
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x2AD02B4", Offset = "0x2AD02B4", VA = "0x2AD02B4", Slot = "15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1824C", Offset = "0xC1824C")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AudioClip> Loaded
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x2ACFD04", Offset = "0x2ACFD04", VA = "0x2ACFD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17EC8", Offset = "0xC17EC8")]
		add
		{
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x2ACFE50", Offset = "0x2ACFE50", VA = "0x2ACFE50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC17F04", Offset = "0xC17F04")]
		remove
		{
		}
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x2AD02EC", Offset = "0x2AD02EC", VA = "0x2AD02EC")]
	public void Import(string uri)
	{
	}

	[Token(Token = "0x600014D")]
	public abstract void Abort();

	[Token(Token = "0x600014E")]
	protected abstract void Import();

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x2AD041C", Offset = "0x2AD041C", VA = "0x2AD041C")]
	protected void OnLoaded()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x2AD04F8", Offset = "0x2AD04F8", VA = "0x2AD04F8")]
	protected AudioImporter()
	{
	}
}
[Token(Token = "0x200003F")]
public class Browser : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE574", Offset = "0xBDE574")]
	private sealed class <refreshFiles>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Browser <>4__this;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x775D")]
		private int <i>5__2;

		[Token(Token = "0x17000474")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x1D82EC8", Offset = "0x1D82EC8", VA = "0x1D82EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x1D82F98", Offset = "0x1D82F98", VA = "0x1D82F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x1D81714", Offset = "0x1D81714", VA = "0x1D81714")]
		[DebuggerHidden]
		public <refreshFiles>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x1D82C40", Offset = "0x1D82C40", VA = "0x1D82C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x1D82C54", Offset = "0x1D82C54", VA = "0x1D82C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x1D82EF8", Offset = "0x1D82EF8", VA = "0x1D82EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE5B0", Offset = "0xBDE5B0")]
	private sealed class <refreshDirectories>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int <>1__state;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5237C")]
		private object <>2__current;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Browser <>4__this;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000476")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x1D82B40", Offset = "0x1D82B40", VA = "0x1D82B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000477")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0x1D82C10", Offset = "0x1D82C10", VA = "0x1D82C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x1D8175C", Offset = "0x1D8175C", VA = "0x1D8175C")]
		[DebuggerHidden]
		public <refreshDirectories>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x1D828B8", Offset = "0x1D828B8", VA = "0x1D828B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x1D828CC", Offset = "0x1D828CC", VA = "0x1D828CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x1D82B70", Offset = "0x1D82B70", VA = "0x1D82B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE5EC", Offset = "0xBDE5EC")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Browser <>4__this;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7765")]
		public int index;

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1D81B70", Offset = "0x1D81B70", VA = "0x1D81B70")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x1D82808", Offset = "0x1D82808", VA = "0x1D82808")]
		internal void <AddFileItem>b__0()
		{
		}
	}

	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE628", Offset = "0xBDE628")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Browser <>4__this;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52384")]
		public int index;

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1D82034", Offset = "0x1D82034", VA = "0x1D82034")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x1D82860", Offset = "0x1D82860", VA = "0x1D82860")]
		internal void <AddDirectoryItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> extensions;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject listItemPrefab;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject upButton;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x774D")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject folderPanel;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5236C")]
	public GameObject filePanel;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string currentDirectory;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string[] drives;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<string> directories;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7755")]
	private List<string> files;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool selectDrive;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52374")]
	private bool scrolling;

	[Token(Token = "0x14000006")]
	public event Action<string> FileSelected
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x1D8021C", Offset = "0x1D8021C", VA = "0x1D8021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18288", Offset = "0xC18288")]
		add
		{
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1D80368", Offset = "0x1D80368", VA = "0x1D80368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC182C4", Offset = "0xC182C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1D804B4", Offset = "0x1D804B4", VA = "0x1D804B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1D80DF0", Offset = "0x1D80DF0", VA = "0x1D80DF0")]
	public void Up()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1D806F4", Offset = "0x1D806F4", VA = "0x1D806F4")]
	private void BuildContent()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1D80FAC", Offset = "0x1D80FAC", VA = "0x1D80FAC")]
	private void ClearContent()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1D81470", Offset = "0x1D81470", VA = "0x1D81470")]
	private void OnFileSelected(int index)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1D815C0", Offset = "0x1D815C0", VA = "0x1D815C0")]
	private void OnDirectorySelected(int index)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1D813B4", Offset = "0x1D813B4", VA = "0x1D813B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18300", Offset = "0xC18300")]
	private IEnumerator refreshFiles()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1D812F8", Offset = "0x1D812F8", VA = "0x1D812F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC183B0", Offset = "0xC183B0")]
	private IEnumerator refreshDirectories()
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1D817A4", Offset = "0x1D817A4", VA = "0x1D817A4")]
	private void AddFileItem(int index)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1D81BA0", Offset = "0x1D81BA0", VA = "0x1D81BA0")]
	private void AddDirectoryItem(int index)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1D82064", Offset = "0x1D82064", VA = "0x1D82064")]
	private void Update()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1D827D8", Offset = "0x1D827D8", VA = "0x1D827D8")]
	public Browser()
	{
	}
}
[Token(Token = "0x2000040")]
public abstract class DecoderImporter : AudioImporter
{
	[Token(Token = "0x200054B")]
	protected class AudioInfo
	{
		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14970", Offset = "0xC14970")]
		private int <lengthSamples>k__BackingField;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC149AC", Offset = "0xC149AC")]
		private int <sampleRate>k__BackingField;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC149E8", Offset = "0xC149E8")]
		private int <channels>k__BackingField;

		[Token(Token = "0x17000478")]
		public int lengthSamples
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x1BD1C08", Offset = "0x1BD1C08", VA = "0x1BD1C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C74C", Offset = "0xC2C74C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x1BD1C38", Offset = "0x1BD1C38", VA = "0x1BD1C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C788", Offset = "0xC2C788")]
			private set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public int sampleRate
		{
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x1BD1C70", Offset = "0x1BD1C70", VA = "0x1BD1C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C7C4", Offset = "0xC2C7C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x1BD1CA0", Offset = "0x1BD1CA0", VA = "0x1BD1CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C800", Offset = "0xC2C800")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public int channels
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x1BD1CD8", Offset = "0x1BD1CD8", VA = "0x1BD1CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C83C", Offset = "0xC2C83C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x1BD1D08", Offset = "0x1BD1D08", VA = "0x1BD1D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2C878", Offset = "0xC2C878")]
			private set
			{
			}
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x1BD1D40", Offset = "0x1BD1D40", VA = "0x1BD1D40")]
		public AudioInfo(int lengthSamples, int sampleRate, int channels)
		{
		}
	}

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioInfo info;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int bufferSize;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] buffer;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x776D")]
	private AutoResetEvent waitForMainThread;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Thread import;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5238C")]
	private int index;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool abort;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<Action> executionQueue;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private object _lock;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1BD0554", Offset = "0x1BD0554", VA = "0x1BD0554", Slot = "16")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1BD09A8", Offset = "0x1BD09A8", VA = "0x1BD09A8", Slot = "17")]
	protected override void Import()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1BD0BB4", Offset = "0x1BD0BB4", VA = "0x1BD0BB4")]
	private void DoImport()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1BD0FD4", Offset = "0x1BD0FD4", VA = "0x1BD0FD4")]
	private void Decode()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1BD133C", Offset = "0x1BD133C", VA = "0x1BD133C")]
	private void CreateClip()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1BD1570", Offset = "0x1BD1570", VA = "0x1BD1570")]
	private void SetData()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1BD1784", Offset = "0x1BD1784", VA = "0x1BD1784")]
	protected void OnError(string error)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1BD0D34", Offset = "0x1BD0D34", VA = "0x1BD0D34")]
	private void Dispatch(Action action)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1BD180C", Offset = "0x1BD180C", VA = "0x1BD180C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000168")]
	protected abstract void Initialize();

	[Token(Token = "0x6000169")]
	protected abstract void Cleanup();

	[Token(Token = "0x600016A")]
	protected abstract int GetSamples(float[] buffer, int offset, int count);

	[Token(Token = "0x600016B")]
	protected abstract AudioInfo GetInfo();

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1BD1B1C", Offset = "0x1BD1B1C", VA = "0x1BD1B1C")]
	protected DecoderImporter()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1DB8", Offset = "0xBD1DB8")]
public class MobileImporter : AudioImporter
{
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE664", Offset = "0xBDE664")]
	private sealed class <WaitForWebRequest>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x777C")]
		private object <>2__current;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MobileImporter <>4__this;

		[Token(Token = "0x1700047B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x19D3010", Offset = "0x19D3010", VA = "0x19D3010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x19D30E0", Offset = "0x19D30E0", VA = "0x19D30E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x19D2D78", Offset = "0x19D2D78", VA = "0x19D2D78")]
		[DebuggerHidden]
		public <WaitForWebRequest>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x19D2DF0", Offset = "0x19D2DF0", VA = "0x19D2DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x19D2E04", Offset = "0x19D2E04", VA = "0x19D2E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x19D3040", Offset = "0x19D3040", VA = "0x19D3040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private UnityWebRequest webRequest;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AsyncOperation operation;

	[Token(Token = "0x1700000A")]
	public override float progress
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x19D27B4", Offset = "0x19D27B4", VA = "0x19D27B4", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000B")]
	public override bool isDone
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x19D2848", Offset = "0x19D2848", VA = "0x19D2848", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000C")]
	public override bool isInitialized
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x19D2900", Offset = "0x19D2900", VA = "0x19D2900", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000D")]
	public override bool isError
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x19D294C", Offset = "0x19D294C", VA = "0x19D294C", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public override string error
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x19D2A54", Offset = "0x19D2A54", VA = "0x19D2A54", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x19D2B48", Offset = "0x19D2B48", VA = "0x19D2B48", Slot = "16")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x19D2BF4", Offset = "0x19D2BF4", VA = "0x19D2BF4", Slot = "17")]
	protected override void Import()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x19D2CBC", Offset = "0x19D2CBC", VA = "0x19D2CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18460", Offset = "0xC18460")]
	private IEnumerator WaitForWebRequest()
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x19D2DC0", Offset = "0x19D2DC0", VA = "0x19D2DC0")]
	public MobileImporter()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1E1C", Offset = "0xBD1E1C")]
public class NAudioImporter : DecoderImporter
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52394")]
	private Mp3FileReader reader;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ISampleProvider sampleProvider;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x19D81F8", Offset = "0x19D81F8", VA = "0x19D81F8", Slot = "18")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x19D864C", Offset = "0x19D864C", VA = "0x19D864C", Slot = "19")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x19D86E0", Offset = "0x19D86E0", VA = "0x19D86E0", Slot = "21")]
	protected override AudioInfo GetInfo()
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x19D8870", Offset = "0x19D8870", VA = "0x19D8870", Slot = "20")]
	protected override int GetSamples(float[] buffer, int offset, int count)
	{
		return default(int);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x19D8948", Offset = "0x19D8948", VA = "0x19D8948")]
	public NAudioImporter()
	{
	}
}
[Token(Token = "0x2000043")]
public class AlienMove : MonoBehaviour
{
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE6A0", Offset = "0xBDE6A0")]
	private sealed class <StartMoving>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int <>1__state;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD523A4")]
		private object <>2__current;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AlienMove <>4__this;

		[Token(Token = "0x1700047D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x2AC61CC", Offset = "0x2AC61CC", VA = "0x2AC61CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x2AC629C", Offset = "0x2AC629C", VA = "0x2AC629C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x2AC562C", Offset = "0x2AC562C", VA = "0x2AC562C")]
		[DebuggerHidden]
		public <StartMoving>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x2AC5DA0", Offset = "0x2AC5DA0", VA = "0x2AC5DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x2AC5DB4", Offset = "0x2AC5DB4", VA = "0x2AC5DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x2AC61FC", Offset = "0x2AC61FC", VA = "0x2AC61FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE6DC", Offset = "0xBDE6DC")]
	private sealed class <GoToPosition>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7794")]
		public AlienMove <>4__this;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 from;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD523AC")]
		public Vector3 to;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float waitTime;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700047F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x2AC5CA0", Offset = "0x2AC5CA0", VA = "0x2AC5CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x2AC5D70", Offset = "0x2AC5D70", VA = "0x2AC5D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x2AC57FC", Offset = "0x2AC57FC", VA = "0x2AC57FC")]
		[DebuggerHidden]
		public <GoToPosition>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x2AC58B0", Offset = "0x2AC58B0", VA = "0x2AC58B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x2AC58C4", Offset = "0x2AC58C4", VA = "0x2AC58C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x2AC5CD0", Offset = "0x2AC5CD0", VA = "0x2AC5CD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 m_TopLeftBound;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 m_BottomRightBound;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7784")]
	[SerializeField]
	private float m_MinMoveTime;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private float m_MaxMoveTime;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5239C")]
	[SerializeField]
	private float m_MinWaitTime;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float m_MaxWaitTime;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Animator m_Animator;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform m_Transform;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778C")]
	private Vector3 m_Position;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x2AC5308", Offset = "0x2AC5308", VA = "0x2AC5308")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x2AC5394", Offset = "0x2AC5394", VA = "0x2AC5394")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x2AC54E8", Offset = "0x2AC54E8", VA = "0x2AC54E8")]
	private Vector3 GetRandomPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x2AC542C", Offset = "0x2AC542C", VA = "0x2AC542C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18510", Offset = "0xC18510")]
	private IEnumerator StartMoving()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x2AC5674", Offset = "0x2AC5674", VA = "0x2AC5674")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC185C0", Offset = "0xC185C0")]
	private IEnumerator GoToPosition(float time, float waitTime, Vector3 from, Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x2AC5844", Offset = "0x2AC5844", VA = "0x2AC5844")]
	public AlienMove()
	{
	}
}
[Token(Token = "0x2000044")]
public class CPC_DEMO_UpDown : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x779C")]
	private Vector3 startPos;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float height;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523B4")]
	public float speed;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1D85B88", Offset = "0x1D85B88", VA = "0x1D85B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1D85C00", Offset = "0x1D85C00", VA = "0x1D85C00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1D85E48", Offset = "0x1D85E48", VA = "0x1D85E48")]
	public CPC_DEMO_UpDown()
	{
	}
}
[Serializable]
[Token(Token = "0x2000045")]
public class CPC_Visual
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color pathColor;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color inactivePathColor;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color frustrumColor;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77A4")]
	public Color handleColor;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1D8609C", Offset = "0x1D8609C", VA = "0x1D8609C")]
	public CPC_Visual()
	{
	}
}
[Token(Token = "0x2000046")]
public enum CPC_ECurveType
{
	[Token(Token = "0x400024F")]
	EaseInAndOut,
	[Token(Token = "0x4000250")]
	Linear,
	[Token(Token = "0x4000251")]
	Custom
}
[Token(Token = "0x2000047")]
public enum CPC_EAfterLoop
{
	[Token(Token = "0x4000253")]
	Continue,
	[Token(Token = "0x4000254")]
	Stop
}
[Serializable]
[Token(Token = "0x2000048")]
public class CPC_Point
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523C4")]
	public Vector3 position;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion rotation;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 handleprev;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 handlenext;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77B4")]
	public CPC_ECurveType curveTypeRotation;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve rotationCurve;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523CC")]
	public CPC_ECurveType curveTypePosition;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve positionCurve;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool chained;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1D85E78", Offset = "0x1D85E78", VA = "0x1D85E78")]
	public CPC_Point(Vector3 pos, Quaternion rot)
	{
	}
}
[Token(Token = "0x2000049")]
public class CPC_CameraPath : MonoBehaviour
{
	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE718", Offset = "0xBDE718")]
	private sealed class <FollowPath>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CPC_CameraPath <>4__this;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77D3")]
		public float time;

		[Token(Token = "0x17000481")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x1D85A88", Offset = "0x1D85A88", VA = "0x1D85A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x1D85B58", Offset = "0x1D85B58", VA = "0x1D85B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x1D84EF0", Offset = "0x1D84EF0", VA = "0x1D84EF0")]
		[DebuggerHidden]
		public <FollowPath>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x1D85120", Offset = "0x1D85120", VA = "0x1D85120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x1D85134", Offset = "0x1D85134", VA = "0x1D85134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x1D85AB8", Offset = "0x1D85AB8", VA = "0x1D85AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useMainCamera;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77BC")]
	public Camera selectedCamera;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool lookAtTarget;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523D4")]
	public Transform target;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool playOnAwake;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float playOnAwakeTime;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<CPC_Point> points;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77C4")]
	public CPC_Visual visual;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool looped;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523DC")]
	public bool alwaysShow;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CPC_EAfterLoop afterLoop;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int currentWaypointIndex;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentTimeInWaypoint;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77CC")]
	private float timePerSegment;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool paused;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE64")]
	private bool playing;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1D82FC8", Offset = "0x1D82FC8", VA = "0x1D82FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1D8391C", Offset = "0x1D8391C", VA = "0x1D8391C")]
	public void PlayPath(float time)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1D83AC0", Offset = "0x1D83AC0", VA = "0x1D83AC0")]
	public void StopPath()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1D83B1C", Offset = "0x1D83B1C", VA = "0x1D83B1C")]
	public void UpdateTimeInSeconds(float seconds)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1D83CB8", Offset = "0x1D83CB8", VA = "0x1D83CB8")]
	public void PausePath()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1D83D00", Offset = "0x1D83D00", VA = "0x1D83D00")]
	public void ResumePath()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1D83D60", Offset = "0x1D83D60", VA = "0x1D83D60")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1D83DA4", Offset = "0x1D83DA4", VA = "0x1D83DA4")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1D83DE8", Offset = "0x1D83DE8", VA = "0x1D83DE8")]
	public int GetCurrentWayPoint()
	{
		return default(int);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1D83E18", Offset = "0x1D83E18", VA = "0x1D83E18")]
	public float GetCurrentTimeInWaypoint()
	{
		return default(float);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1D83E48", Offset = "0x1D83E48", VA = "0x1D83E48")]
	public void SetCurrentWayPoint(int value)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1D83E80", Offset = "0x1D83E80", VA = "0x1D83E80")]
	public void SetCurrentTimeInWaypoint(float value)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1D83EB8", Offset = "0x1D83EB8", VA = "0x1D83EB8")]
	public void RefreshTransform()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1D839DC", Offset = "0x1D839DC", VA = "0x1D839DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18670", Offset = "0xC18670")]
	private IEnumerator FollowPath(float time)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1D84F38", Offset = "0x1D84F38", VA = "0x1D84F38")]
	private int GetNextIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1D8429C", Offset = "0x1D8429C", VA = "0x1D8429C")]
	private Vector3 GetBezierPosition(int pointIndex, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1D84CA8", Offset = "0x1D84CA8", VA = "0x1D84CA8")]
	private Quaternion GetLerpRotation(int pointIndex, float time)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1D8502C", Offset = "0x1D8502C", VA = "0x1D8502C")]
	public CPC_CameraPath()
	{
	}
}
[Token(Token = "0x200004A")]
public class CV_Camera : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	public enum Type
	{
		[Token(Token = "0x40026A3")]
		Boxes,
		[Token(Token = "0x40026A4")]
		Spheres,
		[Token(Token = "0x40026A5")]
		Capsules,
		[Token(Token = "0x40026A6")]
		Meshes,
		[Token(Token = "0x40026A7")]
		Characters,
		[Token(Token = "0x40026A8")]
		Count
	}

	[Token(Token = "0x2000551")]
	[Flags]
	public enum Flags
	{
		[Token(Token = "0x40026AA")]
		None = 0,
		[Token(Token = "0x40026AB")]
		Boxes = 1,
		[Token(Token = "0x40026AC")]
		Spheres = 2,
		[Token(Token = "0x40026AD")]
		Capsules = 4,
		[Token(Token = "0x40026AE")]
		Meshes = 8,
		[Token(Token = "0x40026AF")]
		NoDepth = 0x10,
		[Token(Token = "0x40026B0")]
		NoLines = 0x20,
		[Token(Token = "0x40026B1")]
		NoFaces = 0x40,
		[Token(Token = "0x40026B2")]
		NoTriggers = 0x80,
		[Token(Token = "0x40026B3")]
		NoGUI = 0x100
	}

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Camera compCamera;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523E4")]
	private Plane[] viewFrustum;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int[] guiColliderCount;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Collider> colliderList;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Collider> triggerList;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77DB")]
	private List<Collider2D> colliderList2D;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private List<Collider2D> triggerList2D;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523EC")]
	public Color boxColor;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color sphereColor;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color capsuleColor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color meshColor;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77E3")]
	public Color characterColor;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Color triggerColor;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD523F4")]
	public float edgeAlpha;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float faceAlpha;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Flags renderFlags;

	[Token(Token = "0x400027E")]
	private const Flags RENDER_COLLIDERS = Flags.Boxes | Flags.Spheres | Flags.Capsules | Flags.Meshes;

	[Token(Token = "0x400027F")]
	private const int buttonCount = 8;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float guiYPosition;

	[Token(Token = "0x4000281")]
	private const float frameRelativeW = 0.95f;

	[Token(Token = "0x4000282")]
	private const float frameRelativeL = 0.025000006f;

	[Token(Token = "0x4000283")]
	private const float frameRelativeH = 0.1f;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float frameRelativeT;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77F3")]
	private int framePixelW;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int framePixelL;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52404")]
	private int framePixelH;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int framePixelT;

	[Token(Token = "0x4000289")]
	private const int buttonPixelW = 87;

	[Token(Token = "0x400028A")]
	private const float buttonRelativeH = 0.75f;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77FB")]
	private int buttonLengthTotal;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int buttonPixelHeight;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5240C")]
	private int buttonPixelPadding;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int buttonPixelL;

	[Token(Token = "0x1700000F")]
	public float EdgeAlpha
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1D864E8", Offset = "0x1D864E8", VA = "0x1D864E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000010")]
	public float FaceAlpha
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1D86560", Offset = "0x1D86560", VA = "0x1D86560")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1D861AC", Offset = "0x1D861AC", VA = "0x1D861AC")]
	public void Toggle(Flags flag)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1D861F8", Offset = "0x1D861F8", VA = "0x1D861F8")]
	public void Set(Flags flag)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1D86244", Offset = "0x1D86244", VA = "0x1D86244")]
	public void Clear(Flags flag)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1D86290", Offset = "0x1D86290", VA = "0x1D86290")]
	public bool IsSet(Flags flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1D8631C", Offset = "0x1D8631C", VA = "0x1D8631C")]
	public Color ColliderColor(Type type)
	{
		return default(Color);
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1D865D8", Offset = "0x1D865D8", VA = "0x1D865D8")]
	public void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1D8667C", Offset = "0x1D8667C", VA = "0x1D8667C")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1D86978", Offset = "0x1D86978", VA = "0x1D86978")]
	private void AddToRenderList(Collider[] colliders)
	{
	}

	[Token(Token = "0x60001A2")]
	private void RenderCollision<T>(Type type) where T : Collider
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1D86D80", Offset = "0x1D86D80", VA = "0x1D86D80")]
	private void AddToRenderList2D(Collider2D[] colliders)
	{
	}

	[Token(Token = "0x60001A4")]
	private void RenderCollision2D<T>(Type type) where T : Collider2D
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1D87188", Offset = "0x1D87188", VA = "0x1D87188")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1D875B4", Offset = "0x1D875B4", VA = "0x1D875B4")]
	private void RenderFrame()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1D87D4C", Offset = "0x1D87D4C", VA = "0x1D87D4C")]
	private void RenderButton(string setting, Flags flag)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1D87950", Offset = "0x1D87950", VA = "0x1D87950")]
	private void RenderButton(string label, Flags flag, Type type)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1D88138", Offset = "0x1D88138", VA = "0x1D88138")]
	public CV_Camera()
	{
	}
}
[Token(Token = "0x200004B")]
internal static class CharacterStates
{
	[Token(Token = "0x400028F")]
	public const int Idle = 0;

	[Token(Token = "0x4000290")]
	public const int Walk = 1;

	[Token(Token = "0x4000291")]
	public const int Jump = 2;

	[Token(Token = "0x4000292")]
	public const int Count = 3;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x218C0C0", Offset = "0x218C0C0", VA = "0x218C0C0")]
	public static string ToString(int state)
	{
		return null;
	}
}
[Token(Token = "0x200004C")]
public class Character : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public StateManager sm;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 goal;

	[Token(Token = "0x4000295")]
	private const float moveSpeed = 10f;

	[Token(Token = "0x4000296")]
	private const float turnSpeed = 2.5f;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5242C")]
	private Rigidbody compRigidbody;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animation compAnimation;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x218BA9C", Offset = "0x218BA9C", VA = "0x218BA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x218BB7C", Offset = "0x218BB7C", VA = "0x218BB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x218C1EC", Offset = "0x218C1EC", VA = "0x218C1EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x218C234", Offset = "0x218C234", VA = "0x218C234")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x218C90C", Offset = "0x218C90C", VA = "0x218C90C")]
	private void StartIdle()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x218CB18", Offset = "0x218CB18", VA = "0x218CB18")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x218CB2C", Offset = "0x218CB2C", VA = "0x218CB2C")]
	private void AiWander()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x218CC78", Offset = "0x218CC78", VA = "0x218CC78")]
	private void StartWalk()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x218CE68", Offset = "0x218CE68", VA = "0x218CE68")]
	private void UpdateWalk()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x218D300", Offset = "0x218D300", VA = "0x218D300")]
	private void AttemptJump()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x218D470", Offset = "0x218D470", VA = "0x218D470")]
	private void StartJump()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x218D564", Offset = "0x218D564", VA = "0x218D564")]
	private void UpdateJump()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x218D134", Offset = "0x218D134", VA = "0x218D134")]
	private bool IsAtGoal()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x218D83C", Offset = "0x218D83C", VA = "0x218D83C")]
	public Character()
	{
	}
}
[Token(Token = "0x200004D")]
public class PhysicsObject : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	public const float maxIdleTimeSecs = 3f;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float idleTime;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7823")]
	private Rigidbody compRigidbody;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float startY;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x19E4FD0", Offset = "0x19E4FD0", VA = "0x19E4FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x19E50A0", Offset = "0x19E50A0", VA = "0x19E50A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x19E5218", Offset = "0x19E5218", VA = "0x19E5218")]
	private void NewPosition()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x19E54F0", Offset = "0x19E54F0", VA = "0x19E54F0")]
	public PhysicsObject()
	{
	}
}
[Token(Token = "0x200004E")]
public delegate void StateCallback();
[Token(Token = "0x200004F")]
public class State
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE6C")]
	private StateCallback start;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private StateCallback update;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private StateCallback timedEvent;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1F35488", Offset = "0x1F35488", VA = "0x1F35488")]
	public State(StateCallback start, StateCallback update, StateCallback timedEvent)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1F35500", Offset = "0x1F35500", VA = "0x1F35500")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1F3579C", Offset = "0x1F3579C", VA = "0x1F3579C")]
	public void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1F357E4", Offset = "0x1F357E4", VA = "0x1F357E4")]
	public void TimedEvent()
	{
	}
}
[Token(Token = "0x2000050")]
public class StateManager
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private State[] states;

	[Token(Token = "0x40002A1")]
	private const int SM_INVALID_STATE = -1;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int statePrevious;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52434")]
	private int stateCurrent;

	[Token(Token = "0x40002A4")]
	private const float SM_EVENT_TIME_NONE = 0f;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float eventTime;

	[Token(Token = "0x17000011")]
	public int PreviousState
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x1F35928", Offset = "0x1F35928", VA = "0x1F35928")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000012")]
	public int CurrentState
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1F35958", Offset = "0x1F35958", VA = "0x1F35958")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x1F35988", Offset = "0x1F35988", VA = "0x1F35988")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float TimedEvent
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1F359C0", Offset = "0x1F359C0", VA = "0x1F359C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1F359F0", Offset = "0x1F359F0", VA = "0x1F359F0")]
		set
		{
		}
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1F35A48", Offset = "0x1F35A48", VA = "0x1F35A48")]
	public StateManager(int initialState, int maxStates)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1F35B38", Offset = "0x1F35B38", VA = "0x1F35B38")]
	public bool RegisterState(int id, StateCallback start, StateCallback update, StateCallback timedEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1F35CF0", Offset = "0x1F35CF0", VA = "0x1F35CF0")]
	public bool RegisterState(int id, StateCallback start, StateCallback update)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1F35D70", Offset = "0x1F35D70", VA = "0x1F35D70")]
	private void StartState()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1F35E10", Offset = "0x1F35E10", VA = "0x1F35E10")]
	public void Update()
	{
	}
}
[Token(Token = "0x2000051")]
public class CloudsRotate : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float cloudSpeed;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x21929C0", Offset = "0x21929C0", VA = "0x21929C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x21929D4", Offset = "0x21929D4", VA = "0x21929D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x2192B88", Offset = "0x2192B88", VA = "0x2192B88")]
	public CloudsRotate()
	{
	}
}
[Token(Token = "0x2000052")]
public class EarthRotate : MonoBehaviour
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7832")]
	public float EarthSpeed;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1C22750", Offset = "0x1C22750", VA = "0x1C22750")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1C22764", Offset = "0x1C22764", VA = "0x1C22764")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1C22918", Offset = "0x1C22918", VA = "0x1C22918")]
	public EarthRotate()
	{
	}
}
[Token(Token = "0x2000053")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float spawnEffectTime;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5243C")]
	public float pause;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem ps;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timer;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x783A")]
	private Renderer _renderer;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int shaderProperty;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1F29624", Offset = "0x1F29624", VA = "0x1F29624")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1F297B0", Offset = "0x1F297B0", VA = "0x1F297B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1F299EC", Offset = "0x1F299EC", VA = "0x1F299EC")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x2000054")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE790", Offset = "0xBDE790")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x17000483")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x1BD0454", Offset = "0x1BD0454", VA = "0x1BD0454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x1BD0524", Offset = "0x1BD0524", VA = "0x1BD0524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x1BD015C", Offset = "0x1BD015C", VA = "0x1BD015C")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x1BD01E8", Offset = "0x1BD01E8", VA = "0x1BD01E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x1BD01FC", Offset = "0x1BD01FC", VA = "0x1BD01FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x1BD0484", Offset = "0x1BD0484", VA = "0x1BD0484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52444")]
	public float lifeTime;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1BD00A0", Offset = "0x1BD00A0", VA = "0x1BD00A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18720", Offset = "0xC18720")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1BD01A4", Offset = "0x1BD01A4", VA = "0x1BD01A4")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x2000055")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7CC", Offset = "0xBDE7CC")]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x784A")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000485")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x1C27C98", Offset = "0x1C27C98", VA = "0x1C27C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x1C27D68", Offset = "0x1C27D68", VA = "0x1C27D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x1C275E4", Offset = "0x1C275E4", VA = "0x1C275E4")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x1C276A4", Offset = "0x1C276A4", VA = "0x1C276A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x1C276B8", Offset = "0x1C276B8", VA = "0x1C276B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x1C27CC8", Offset = "0x1C27CC8", VA = "0x1C27CC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE808", Offset = "0xBDE808")]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52454")]
		private int <>1__state;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000487")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x1C28258", Offset = "0x1C28258", VA = "0x1C28258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0x1C28328", Offset = "0x1C28328", VA = "0x1C28328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x1C2762C", Offset = "0x1C2762C", VA = "0x1C2762C")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x1C27D98", Offset = "0x1C27D98", VA = "0x1C27D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x1C27DAC", Offset = "0x1C27DAC", VA = "0x1C27DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x1C28288", Offset = "0x1C28288", VA = "0x1C28288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7842")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5244C")]
	protected bool m_isExtinguished;

	[Token(Token = "0x40002B3")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1C27358", Offset = "0x1C27358", VA = "0x1C27358")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1C274AC", Offset = "0x1C274AC", VA = "0x1C274AC")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1C27528", Offset = "0x1C27528", VA = "0x1C27528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC187D0", Offset = "0xC187D0")]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1C273F0", Offset = "0x1C273F0", VA = "0x1C273F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18880", Offset = "0xC18880")]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1C27674", Offset = "0x1C27674", VA = "0x1C27674")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x2000056")]
public class GunAim : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7852")]
	public int borderLeft;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int borderRight;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5245C")]
	public int borderTop;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int borderBottom;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera parentCamera;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isOutOfBounds;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1AE43FC", Offset = "0x1AE43FC", VA = "0x1AE43FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1AE4488", Offset = "0x1AE4488", VA = "0x1AE4488")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1AE4710", Offset = "0x1AE4710", VA = "0x1AE4710")]
	public bool GetIsOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1AE4754", Offset = "0x1AE4754", VA = "0x1AE4754")]
	public GunAim()
	{
	}
}
[Token(Token = "0x2000057")]
public class GunShoot : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x785A")]
	public float fireRate;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float weaponRange;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52464")]
	public Transform gunEnd;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem cartridgeEjection;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject metalHitEffect;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7862")]
	public GameObject sandHitEffect;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject stoneHitEffect;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5246C")]
	public GameObject waterLeakEffect;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject waterLeakExtinguishEffect;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] fleshHitEffects;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject woodHitEffect;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x786A")]
	private float nextFire;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Animator anim;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52474")]
	private GunAim gunAim;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1AE4784", Offset = "0x1AE4784", VA = "0x1AE4784")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1AE483C", Offset = "0x1AE483C", VA = "0x1AE483C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1AE4AF8", Offset = "0x1AE4AF8", VA = "0x1AE4AF8")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1AE5660", Offset = "0x1AE5660", VA = "0x1AE5660")]
	private void SpawnDecal(RaycastHit hit, GameObject prefab)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1AE5870", Offset = "0x1AE5870", VA = "0x1AE5870")]
	public GunShoot()
	{
	}
}
[Token(Token = "0x2000058")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x19DFEB8", Offset = "0x19DFEB8", VA = "0x19DFEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x19DFF44", Offset = "0x19DFF44", VA = "0x19DFF44")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x19E0204", Offset = "0x19E0204", VA = "0x19E0204")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x2000059")]
public class ParticleExamples
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string title;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7872")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xBE4E9C", Offset = "0xBE4E9C")]
	public string description;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool isWeaponEffect;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5247C")]
	public GameObject particleSystemGO;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 particlePosition;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 particleRotation;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x19E02BC", Offset = "0x19E02BC", VA = "0x19E02BC")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x200005A")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x787A")]
	public GameObject gunGameObject;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int currentIndex;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE74")]
	private GameObject currentGO;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform spawnLocation;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text title;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text description;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7881")]
	public Text navigationDetails;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x19E339C", Offset = "0x19E339C", VA = "0x19E339C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x19E33E4", Offset = "0x19E33E4", VA = "0x19E33E4")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x19E3AAC", Offset = "0x19E3AAC", VA = "0x19E3AAC")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x200005B")]
public class Floatie : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distanceFromHead;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52484")]
	public bool drawLine;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE4ED8", Offset = "0xBE4ED8")]
	public AnimationCurve angleToPositionLerp;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE4F3C", Offset = "0xBE4F3C")]
	public AnimationCurve angleToRotationLerp;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE4FA0", Offset = "0xBE4FA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4FA0", Offset = "0xBE4FA0")]
	public float rollLerp;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7889")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE503C", Offset = "0xBE503C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE503C", Offset = "0xBE503C")]
	public float worldUpRotationTargetPercentage;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE50D8", Offset = "0xBE50D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE50D8", Offset = "0xBE50D8")]
	public float offsetFactor;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5248C")]
	public bool spawnInFrontOfCam;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5174", Offset = "0xBE5174")]
	public float dismissTime;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE51D8", Offset = "0xBE51D8")]
	public float dismissAngle;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lineWidth;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7891")]
	public Color lineColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE523C", Offset = "0xBE523C")]
	public float waitBeforeDestroy;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52494")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE52A0", Offset = "0xBE52A0")]
	public Transform attentionPoint;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform head;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform lineStartPoint;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5304", Offset = "0xBE5304")]
	public UnityEvent Dismissed;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7899")]
	protected LineRenderer line;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	protected Material lineMaterial;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5249C")]
	protected float countdown;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool destroyingInProgress;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1C30644", Offset = "0x1C30644", VA = "0x1C30644")]
	public static Floatie Spawn(GameObject prefab, [Optional] Transform attentionPoint, float distanceFromHead = 0.5f, bool spawnInFrontOfCam = true)
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1C30928", Offset = "0x1C30928", VA = "0x1C30928")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1C30A7C", Offset = "0x1C30A7C", VA = "0x1C30A7C", Slot = "4")]
	public virtual void OnAboutToBeDestroyed()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1C30A90", Offset = "0x1C30A90", VA = "0x1C30A90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1C311C4", Offset = "0x1C311C4", VA = "0x1C311C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1C312F4", Offset = "0x1C312F4", VA = "0x1C312F4")]
	private void UpdateFloatie()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1C323C0", Offset = "0x1C323C0", VA = "0x1C323C0")]
	private void UpdateLine()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1C32834", Offset = "0x1C32834", VA = "0x1C32834")]
	private void UpdateDismiss()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1C32C10", Offset = "0x1C32C10", VA = "0x1C32C10")]
	public Floatie()
	{
	}
}
[Token(Token = "0x200005C")]
public class FloatieSpawner : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefabToUseAsFloatie;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform attentionPoint;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78A1")]
	private int mode;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int prevMode;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524A4")]
	private Floatie floatie;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1AD9658", Offset = "0x1AD9658", VA = "0x1AD9658")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1AD9750", Offset = "0x1AD9750", VA = "0x1AD9750")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1AD9BDC", Offset = "0x1AD9BDC", VA = "0x1AD9BDC")]
	private void OnDismiss()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1AD9CEC", Offset = "0x1AD9CEC", VA = "0x1AD9CEC")]
	public FloatieSpawner()
	{
	}
}
[Token(Token = "0x200005D")]
public class FloatieWithAnimation : Floatie
{
	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1AD9D40", Offset = "0x1AD9D40", VA = "0x1AD9D40", Slot = "4")]
	public override void OnAboutToBeDestroyed()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1AD9ED0", Offset = "0x1AD9ED0", VA = "0x1AD9ED0")]
	public FloatieWithAnimation()
	{
	}
}
[Token(Token = "0x200005E")]
public class SoundPlayTime : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool playOnAwake;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool loopCheck;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timer;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78A9")]
	public float waitTime;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float loopTime;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524AC")]
	public float loopWaitTime;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool flag;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip sound01;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSource;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1F288C8", Offset = "0x1F288C8", VA = "0x1F288C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1F28AEC", Offset = "0x1F28AEC", VA = "0x1F28AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1F28E04", Offset = "0x1F28E04", VA = "0x1F28E04")]
	public SoundPlayTime()
	{
	}
}
[Token(Token = "0x200005F")]
public class ConGUI : MonoBehaviour
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78B1")]
	public Transform mainCamera;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Transform cameraTrs;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524B4")]
	public int rotSpeed;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] effectObj;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] effectObProj;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int arrayNo;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78B9")]
	private GameObject nowEffectObj;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private string[] cameraState;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524BC")]
	private int cameraRotCon;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float num;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float numBck;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 initPos;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78C1")]
	private bool haveProFlg;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private GameObject nonProFX;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524C4")]
	private Vector3 tmpPos;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x21ACAD8", Offset = "0x21ACAD8", VA = "0x21ACAD8")]
	private bool visibleBt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x21ACCB0", Offset = "0x21ACCB0", VA = "0x21ACCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x21ACDB0", Offset = "0x21ACDB0", VA = "0x21ACDB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x21AD1EC", Offset = "0x21AD1EC", VA = "0x21AD1EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x21ADF7C", Offset = "0x21ADF7C", VA = "0x21ADF7C")]
	private void effectOn()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x21AE1E8", Offset = "0x21AE1E8", VA = "0x21AE1E8")]
	public ConGUI()
	{
	}
}
[Token(Token = "0x2000060")]
public class Lighting : MonoBehaviour
{
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE844", Offset = "0xBDE844")]
	private sealed class <flash>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78D8")]
		private int <>1__state;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private object <>2__current;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD524D4")]
		public Lighting <>4__this;

		[Token(Token = "0x17000489")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x1AFDE5C", Offset = "0x1AFDE5C", VA = "0x1AFDE5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0x1AFDF2C", Offset = "0x1AFDF2C", VA = "0x1AFDF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x1AFDA50", Offset = "0x1AFDA50", VA = "0x1AFDA50")]
		[DebuggerHidden]
		public <flash>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x1AFDBEC", Offset = "0x1AFDBEC", VA = "0x1AFDBEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x1AFDC00", Offset = "0x1AFDC00", VA = "0x1AFDC00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x1AFDE8C", Offset = "0x1AFDE8C", VA = "0x1AFDE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE880", Offset = "0xBDE880")]
	private sealed class <setRev>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lighting <>4__this;

		[Token(Token = "0x1700048B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x1AFE910", Offset = "0x1AFE910", VA = "0x1AFE910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x1AFE9E0", Offset = "0x1AFE9E0", VA = "0x1AFE9E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x1AFDA98", Offset = "0x1AFDA98", VA = "0x1AFDA98")]
		[DebuggerHidden]
		public <setRev>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1AFE6BC", Offset = "0x1AFE6BC", VA = "0x1AFE6BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x1AFE6D0", Offset = "0x1AFE6D0", VA = "0x1AFE6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x1AFE940", Offset = "0x1AFE940", VA = "0x1AFE940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE8BC", Offset = "0xBDE8BC")]
	private sealed class <keepOn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78E0")]
		private int <>1__state;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private object <>2__current;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD524DC")]
		public Lighting <>4__this;

		[Token(Token = "0x1700048D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x1AFE184", Offset = "0x1AFE184", VA = "0x1AFE184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0x1AFE254", Offset = "0x1AFE254", VA = "0x1AFE254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x1AFDAE0", Offset = "0x1AFDAE0", VA = "0x1AFDAE0")]
		[DebuggerHidden]
		public <keepOn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x1AFDF5C", Offset = "0x1AFDF5C", VA = "0x1AFDF5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x1AFDF70", Offset = "0x1AFDF70", VA = "0x1AFDF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1AFE1B4", Offset = "0x1AFE1B4", VA = "0x1AFE1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE8F8", Offset = "0xBDE8F8")]
	private sealed class <setFlashingOff>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lighting <>4__this;

		[Token(Token = "0x1700048F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x1AFE5BC", Offset = "0x1AFE5BC", VA = "0x1AFE5BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x1AFE68C", Offset = "0x1AFE68C", VA = "0x1AFE68C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x1AFDB28", Offset = "0x1AFDB28", VA = "0x1AFDB28")]
		[DebuggerHidden]
		public <setFlashingOff>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x1AFE284", Offset = "0x1AFE284", VA = "0x1AFE284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x1AFE298", Offset = "0x1AFE298", VA = "0x1AFE298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x1AFE5EC", Offset = "0x1AFE5EC", VA = "0x1AFE5EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lighting;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light lightPower;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool flashFlg;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78C9")]
	public float flashTimer;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool lightKeepFlg;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524CC")]
	public float revOnTime;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float keepOnTime;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float keepTime;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool flashingFlg;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78D1")]
	public float minLight;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float maxLight;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE7C")]
	private bool lightOffFlg;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float flashingOff;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float flashingOffPower;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float flashingOffIntensity;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1AFD240", Offset = "0x1AFD240", VA = "0x1AFD240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1AFD600", Offset = "0x1AFD600", VA = "0x1AFD600")]
	private void Update()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1AFD310", Offset = "0x1AFD310", VA = "0x1AFD310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18930", Offset = "0xC18930")]
	private IEnumerator flash()
	{
		return null;
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1AFD3CC", Offset = "0x1AFD3CC", VA = "0x1AFD3CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC189E0", Offset = "0xC189E0")]
	private IEnumerator setRev()
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1AFD488", Offset = "0x1AFD488", VA = "0x1AFD488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18A90", Offset = "0xC18A90")]
	private IEnumerator keepOn()
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1AFD544", Offset = "0x1AFD544", VA = "0x1AFD544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18B40", Offset = "0xC18B40")]
	private IEnumerator setFlashingOff()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1AFDB70", Offset = "0x1AFDB70", VA = "0x1AFDB70")]
	public Lighting()
	{
	}
}
[Token(Token = "0x2000061")]
public class rotator : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78E8")]
	public float speed;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Vector3 direction;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1914384", Offset = "0x1914384", VA = "0x1914384")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1914398", Offset = "0x1914398", VA = "0x1914398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x191451C", Offset = "0x191451C", VA = "0x191451C")]
	public rotator()
	{
	}
}
[Token(Token = "0x2000062")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524E4")]
	public GameObject Character;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject Model;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Current;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78F0")]
	public Light Sun;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524EC")]
	public Light[] NightLights;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture HUETexture;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseMobileVersion;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject MobileCharacter;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78F8")]
	public GameObject Target;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Color guiColor;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524F4")]
	private int currentNomber;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject characterInstance;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject modelInstance;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7900")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float dpiScale;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD524FC")]
	private bool isDay;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float colorHUE;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startSunIntensity;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7908")]
	private Color startAmbientLight;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52504")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isButtonPressed;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1B03AF0", Offset = "0x1B03AF0", VA = "0x1B03AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1B04624", Offset = "0x1B04624", VA = "0x1B04624")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1B03E64", Offset = "0x1B03E64", VA = "0x1B03E64")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1B05B60", Offset = "0x1B05B60", VA = "0x1B05B60")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1B05DF0", Offset = "0x1B05DF0", VA = "0x1B05DF0")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1B05EC8", Offset = "0x1B05EC8", VA = "0x1B05EC8")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x2000063")]
public class ME_FPS : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7910")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float timeleft;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5250C")]
	private float timeleft2;

	[Token(Token = "0x400033B")]
	private const float updateTime = 0.5f;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float fps;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int frames;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1B08FD0", Offset = "0x1B08FD0", VA = "0x1B08FD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1B09204", Offset = "0x1B09204", VA = "0x1B09204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1B09318", Offset = "0x1B09318", VA = "0x1B09318")]
	public ME_FPS()
	{
	}
}
[Token(Token = "0x2000064")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7918")]
	public GameObject target;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distance;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52514")]
	public float xSpeed;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ySpeed;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yMinLimit;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yMaxLimit;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7920")]
	private float x;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float y;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5251C")]
	private float prevDistance;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1B0973C", Offset = "0x1B0973C", VA = "0x1B0973C")]
	private void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1B09804", Offset = "0x1B09804", VA = "0x1B09804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1B0A324", Offset = "0x1B0A324", VA = "0x1B0A324")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1B0A4DC", Offset = "0x1B0A4DC", VA = "0x1B0A4DC")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000065")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform camT;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool CanUpdate;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x21BE93C", Offset = "0x21BE93C", VA = "0x21BE93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x21BEA00", Offset = "0x21BEA00", VA = "0x21BEA00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x21BEBB8", Offset = "0x21BEBB8", VA = "0x21BEBB8")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000066")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1E80", Offset = "0xBD1E80")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD1E80", Offset = "0xBD1E80")]
public class ME_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7928")]
	public LayerMask CullingMask;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5368", Offset = "0xBE5368")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5368", Offset = "0xBE5368")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE84")]
	public bool UseBloom;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5404", Offset = "0xBE5404")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5404", Offset = "0xBE5404")]
	public float Threshold;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE54A0", Offset = "0xBE54A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE54A0", Offset = "0xBE54A0")]
	public float SoftKnee;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5560", Offset = "0xBE5560")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5560", Offset = "0xBE5560")]
	public float Radius;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x792F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE55F8", Offset = "0xBE55F8")]
	public float Intensity;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE565C", Offset = "0xBE565C")]
	public bool HighQuality;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52524")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE56C0", Offset = "0xBE56C0")]
	public bool AntiFlicker;

	[Token(Token = "0x4000353")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/ME_Bloom";

	[Token(Token = "0x4000354")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/ME_BloomAdditive";

	[Token(Token = "0x4000355")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7937")]
	private RenderTexture source;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private RenderTexture depth;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5252C")]
	private RenderTexture destination;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previuosFrameWidth;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previuosFrameHeight;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float previousScale;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x793F")]
	private Camera addCamera;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private GameObject tempGO;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52534")]
	private bool HDRSupported;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material m_Material;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x4000361")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7947")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x17000014")]
	public Material mat
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1B05FDC", Offset = "0x1B05FDC", VA = "0x1B05FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public Material matAdditive
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1B0630C", Offset = "0x1B0630C", VA = "0x1B0630C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1B06140", Offset = "0x1B06140", VA = "0x1B06140")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1B064A0", Offset = "0x1B064A0", VA = "0x1B064A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1B068C8", Offset = "0x1B068C8", VA = "0x1B068C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1B06D90", Offset = "0x1B06D90", VA = "0x1B06D90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1B08A68", Offset = "0x1B08A68", VA = "0x1B08A68")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1B068F8", Offset = "0x1B068F8", VA = "0x1B068F8")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1B07700", Offset = "0x1B07700", VA = "0x1B07700")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1B070A0", Offset = "0x1B070A0", VA = "0x1B070A0")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1B08B7C", Offset = "0x1B08B7C", VA = "0x1B08B7C")]
	public ME_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000067")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5253C")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform SwordPosition;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x794F")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private GameObject SwordInstance;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1AFFC64", Offset = "0x1AFFC64", VA = "0x1AFFC64")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1AFFF18", Offset = "0x1AFFF18", VA = "0x1AFFF18")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1B003CC", Offset = "0x1B003CC", VA = "0x1B003CC")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1B00550", Offset = "0x1B00550", VA = "0x1B00550")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1B01548", Offset = "0x1B01548", VA = "0x1B01548")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000068")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000559")]
	public struct HSBColor
	{
		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7947")]
		public float B;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float A;

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1B01578", Offset = "0x1B01578", VA = "0x1B01578")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400036A")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1B00860", Offset = "0x1B00860", VA = "0x1B00860")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1B00EB0", Offset = "0x1B00EB0", VA = "0x1B00EB0")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1B015F8", Offset = "0x1B015F8", VA = "0x1B015F8")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1B01904", Offset = "0x1B01904", VA = "0x1B01904")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1B03420", Offset = "0x1B03420", VA = "0x1B03420")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1B035B4", Offset = "0x1B035B4", VA = "0x1B035B4")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000069")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5254C")]
	public Color Color;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color previousColor;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1B08D24", Offset = "0x1B08D24", VA = "0x1B08D24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1B08D54", Offset = "0x1B08D54", VA = "0x1B08D54")]
	private void Update()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1B08E04", Offset = "0x1B08E04", VA = "0x1B08E04")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1B08F68", Offset = "0x1B08F68", VA = "0x1B08F68")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteInEditMode]
public class ME_CustomPostEffectIgnore : MonoBehaviour
{
	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1B03A10", Offset = "0x1B03A10", VA = "0x1B03A10")]
	private void Start()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1B03AC0", Offset = "0x1B03AC0", VA = "0x1B03AC0")]
	public ME_CustomPostEffectIgnore()
	{
	}
}
[Token(Token = "0x200006B")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x795F")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool IsLoop;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52554")]
	private bool canUpdate;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Light lightSource;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1B093C0", Offset = "0x1B093C0", VA = "0x1B093C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1B094A8", Offset = "0x1B094A8", VA = "0x1B094A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1B094FC", Offset = "0x1B094FC", VA = "0x1B094FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1B09684", Offset = "0x1B09684", VA = "0x1B09684")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x200006C")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material Material;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7967")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1B0970C", Offset = "0x1B0970C", VA = "0x1B0970C")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5255C")]
	public bool IsBilboard;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x796F")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52564")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1B0A580", Offset = "0x1B0A580", VA = "0x1B0A580")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1B0A770", Offset = "0x1B0A770", VA = "0x1B0A770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1B0A818", Offset = "0x1B0A818", VA = "0x1B0A818")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1B0ABF4", Offset = "0x1B0ABF4", VA = "0x1B0ABF4")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1B0B704", Offset = "0x1B0B704", VA = "0x1B0B704")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1B0B844", Offset = "0x1B0B844", VA = "0x1B0B844")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x200006E")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7977")]
	public float Force;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool DistanceRelative;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5256C")]
	private ParticleSystem ps;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 prevPos;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1B0B98C", Offset = "0x1B0B98C", VA = "0x1B0B98C")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1B0BA8C", Offset = "0x1B0BA8C", VA = "0x1B0BA8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1B0C3F0", Offset = "0x1B0C3F0", VA = "0x1B0C3F0")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200006F")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE934", Offset = "0xBDE934")]
	private sealed class <>c
	{
		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__9_0;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7986")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__9_1;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__9_2;

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x21BE6BC", Offset = "0x21BE6BC", VA = "0x21BE6BC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x21BE6EC", Offset = "0x21BE6EC", VA = "0x21BE6EC")]
		internal bool <ClearEmptyHashes>b__9_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x21BE824", Offset = "0x21BE824", VA = "0x21BE824")]
		internal uint <ClearEmptyHashes>b__9_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x21BE8B0", Offset = "0x21BE8B0", VA = "0x21BE8B0")]
		internal GameObject <ClearEmptyHashes>b__9_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x797F")]
	public GameObject TrailPrefab;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem ps;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE8C")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x21BD174", Offset = "0x21BD174", VA = "0x21BD174")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x21BD2A8", Offset = "0x21BD2A8", VA = "0x21BD2A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x21BD340", Offset = "0x21BD340", VA = "0x21BD340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x21BD3C8", Offset = "0x21BD3C8", VA = "0x21BD3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x21BD3F8", Offset = "0x21BD3F8", VA = "0x21BD3F8")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x21BDEA0", Offset = "0x21BDEA0", VA = "0x21BDEA0")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x21BE564", Offset = "0x21BE564", VA = "0x21BE564")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000070")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52574")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5724", Offset = "0xBE5724")]
	public float MinVertexDistance;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float VertexTime;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TotalLifeTime;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool SmoothCurves;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798E")]
	public bool IsRibbon;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5774", Offset = "0xBE5774")]
	public float Frequency;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5257C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE57C4", Offset = "0xBE57C4")]
	public float TimeScale;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5814", Offset = "0xBE5814")]
	public float Amplitude;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Gravity;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7996")]
	public bool Autodestruct;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52584")]
	private Transform t;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 prevPos;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Vector3> points;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<float> lifeTimes;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x799E")]
	private List<Vector3> velocities;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float randomOffset;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5258C")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int curveCount;

	[Token(Token = "0x40003A0")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x40003A1")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x40003A2")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x21BEBFC", Offset = "0x21BEBFC", VA = "0x21BEBFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x21BEEFC", Offset = "0x21BEEFC", VA = "0x21BEEFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x21BF0A8", Offset = "0x21BF0A8", VA = "0x21BF0A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x21BF1BC", Offset = "0x21BF1BC", VA = "0x21BF1BC")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x21BF724", Offset = "0x21BF724", VA = "0x21BF724")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x21BFB24", Offset = "0x21BFB24", VA = "0x21BFB24")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x21BFD1C", Offset = "0x21BFD1C", VA = "0x21BFD1C")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x21BFED8", Offset = "0x21BFED8", VA = "0x21BFED8")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x21C03CC", Offset = "0x21C03CC", VA = "0x21C03CC")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x21C1340", Offset = "0x21C1340", VA = "0x21C1340")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x21C150C", Offset = "0x21C150C", VA = "0x21C150C")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x21C1A58", Offset = "0x21C1A58", VA = "0x21C1A58")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x21C1714", Offset = "0x21C1714", VA = "0x21C1714")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x21C2164", Offset = "0x21C2164", VA = "0x21C2164")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x21C254C", Offset = "0x21C254C", VA = "0x21C254C")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x2000071")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject meshObject;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52594")]
	public Color Color;

	[Token(Token = "0x40003A5")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79AE")]
	private Color oldColor;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x19DDC8C", Offset = "0x19DDC8C", VA = "0x19DDC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x19DDDA8", Offset = "0x19DDDA8", VA = "0x19DDDA8")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x19DDF60", Offset = "0x19DDF60", VA = "0x19DDF60")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x19DE118", Offset = "0x19DE118", VA = "0x19DE118")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x19DEF1C", Offset = "0x19DEF1C", VA = "0x19DEF1C")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x19DE2C0", Offset = "0x19DE2C0", VA = "0x19DE2C0")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x19DEABC", Offset = "0x19DEABC", VA = "0x19DEABC")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x19DF168", Offset = "0x19DF168", VA = "0x19DF168")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x19DF498", Offset = "0x19DF498", VA = "0x19DF498")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x19DFD7C", Offset = "0x19DFD7C", VA = "0x19DFD7C")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000072")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2084", Offset = "0xBD2084")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2084", Offset = "0xBD2084")]
public class RFX4_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5864", Offset = "0xBE5864")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5864", Offset = "0xBE5864")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5259C")]
	public bool UseBloom;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5900", Offset = "0xBE5900")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5900", Offset = "0xBE5900")]
	public float Threshold;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE599C", Offset = "0xBE599C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE599C", Offset = "0xBE599C")]
	public float SoftKnee;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5A5C", Offset = "0xBE5A5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5A5C", Offset = "0xBE5A5C")]
	public float Radius;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79B6")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5AF4", Offset = "0xBE5AF4")]
	public float Intensity;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5B58", Offset = "0xBE5B58")]
	public bool HighQuality;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5BBC", Offset = "0xBE5BBC")]
	public bool AntiFlicker;

	[Token(Token = "0x40003B1")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/RFX4_Bloom";

	[Token(Token = "0x40003B2")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/RFX4_BloomAdditive";

	[Token(Token = "0x40003B3")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79BE")]
	private RenderTexture source;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private RenderTexture depth;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525AC")]
	private RenderTexture destination;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previuosFrameWidth;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previuosFrameHeight;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float previousScale;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79C6")]
	private Camera addCamera;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private GameObject tempGO;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525B4")]
	private bool HDRSupported;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material m_Material;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x40003BF")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79CE")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x17000016")]
	public Material mat
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x19EFE04", Offset = "0x19EFE04", VA = "0x19EFE04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public Material matAdditive
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x19F0134", Offset = "0x19F0134", VA = "0x19F0134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x19EFF68", Offset = "0x19EFF68", VA = "0x19EFF68")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x19F02C8", Offset = "0x19F02C8", VA = "0x19F02C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x19F06F0", Offset = "0x19F06F0", VA = "0x19F06F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x19F0BB8", Offset = "0x19F0BB8", VA = "0x19F0BB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x19F2714", Offset = "0x19F2714", VA = "0x19F2714")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x19F0720", Offset = "0x19F0720", VA = "0x19F0720")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x19F13AC", Offset = "0x19F13AC", VA = "0x19F13AC")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x19F0EC8", Offset = "0x19F0EC8", VA = "0x19F0EC8")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x19F2828", Offset = "0x19F2828", VA = "0x19F2828")]
	public RFX4_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000073")]
public class RFX4_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525BC")]
	public GameObject[] Prefabs;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float[] ReactivationTimes;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light Sun;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79D6")]
	public Light[] NightLights;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Texture HUETexture;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4C5DC")]
	public bool UseMobileVersion;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RFX4_DistortionAndBloom RFX4_DistortionAndBloom;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int currentNomber;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject currentInstance;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79DC")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE94")]
	private float dpiScale;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isDay;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float colorHUE;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startSunIntensity;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79E3")]
	private Quaternion startSunRotation;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Color startAmbientLight;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525C4")]
	private float startAmbientIntencity;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startReflectionIntencity;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isButtonPressed;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79EB")]
	private bool isUsedMobileBloom;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x19ED18C", Offset = "0x19ED18C", VA = "0x19ED18C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x19EDA0C", Offset = "0x19EDA0C", VA = "0x19EDA0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x19ED468", Offset = "0x19ED468", VA = "0x19ED468")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x19EF868", Offset = "0x19EF868", VA = "0x19EF868")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x19EFAF8", Offset = "0x19EFAF8", VA = "0x19EFAF8")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x19EFB80", Offset = "0x19EFB80", VA = "0x19EFB80")]
	public RFX4_DemoGUI()
	{
	}
}
[Token(Token = "0x2000074")]
public class RFX4_FPS : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525CC")]
	private float timeleft;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float fps;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int frames;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x27FC96C", Offset = "0x27FC96C", VA = "0x27FC96C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x27FCACC", Offset = "0x27FCACC", VA = "0x27FCACC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x27FCCE8", Offset = "0x27FCCE8", VA = "0x27FCCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x27FCDFC", Offset = "0x27FCDFC", VA = "0x27FCDFC")]
	public RFX4_FPS()
	{
	}
}
[Token(Token = "0x2000075")]
public class RFX4_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79F3")]
	public float distance;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float xSpeed;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525D4")]
	public float ySpeed;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yMinLimit;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yMaxLimit;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float x;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79FB")]
	private float y;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float prevDistance;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x27FD684", Offset = "0x27FD684", VA = "0x27FD684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x27FD74C", Offset = "0x27FD74C", VA = "0x27FD74C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x27FE26C", Offset = "0x27FE26C", VA = "0x27FE26C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x27FE424", Offset = "0x27FE424", VA = "0x27FE424")]
	public RFX4_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000076")]
public class RFX4_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525DC")]
	private ReflectionProbe probe;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform camT;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2804F84", Offset = "0x2804F84", VA = "0x2804F84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x2805048", Offset = "0x2805048", VA = "0x2805048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x28051D8", Offset = "0x28051D8", VA = "0x28051D8")]
	public RFX4_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000077")]
public class RFX4_AudioCurves : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A03")]
	public bool IsLoop;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool canUpdate;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525E4")]
	private float startTime;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSource;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startVolume;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x19E82C0", Offset = "0x19E82C0", VA = "0x19E82C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x19E83D8", Offset = "0x19E83D8", VA = "0x19E83D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x19E842C", Offset = "0x19E842C", VA = "0x19E842C")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x19E85B4", Offset = "0x19E85B4", VA = "0x19E85B4")]
	public RFX4_AudioCurves()
	{
	}
}
[Token(Token = "0x2000078")]
public class RFX4_LightCurves : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0B")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525EC")]
	public bool IsLoop;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Light lightSource;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x27FCEA4", Offset = "0x27FCEA4", VA = "0x27FCEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x27FCF8C", Offset = "0x27FCF8C", VA = "0x27FCF8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x27FCFE0", Offset = "0x27FCFE0", VA = "0x27FCFE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x27FD168", Offset = "0x27FD168", VA = "0x27FD168")]
	public RFX4_LightCurves()
	{
	}
}
[Token(Token = "0x2000079")]
public class RFX4_PhysicsForceCurves : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A13")]
	public float ForceRadius;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float ForceMultiplier;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525F4")]
	public AnimationCurve ForceCurve;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ForceMode ForceMode;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A1B")]
	public bool IsLoop;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float DestoryDistance;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD525FC")]
	public bool UseDistanceScale;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve DistanceScaleCurve;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseUPVector;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve DragCurve;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A23")]
	public float DragGraphTimeMultiplier;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float DragGraphIntensityMultiplier;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52604")]
	public string AffectedName;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public float forceAdditionalMultiplier;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool canUpdate;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A2B")]
	private Transform t;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x28027A8", Offset = "0x28027A8", VA = "0x28027A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x28027E8", Offset = "0x28027E8", VA = "0x28027E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2802854", Offset = "0x2802854", VA = "0x2802854")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x280359C", Offset = "0x280359C", VA = "0x280359C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x280365C", Offset = "0x280365C", VA = "0x280365C")]
	public RFX4_PhysicsForceCurves()
	{
	}
}
[Token(Token = "0x200007A")]
public class RFX4_ScaleCurves : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5260C")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsLoop;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool canUpdate;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A33")]
	private float startTime;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Transform t;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CE9C")]
	private int nameId;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Projector proj;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 startScale;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x2805E04", Offset = "0x2805E04", VA = "0x2805E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x2805F8C", Offset = "0x2805F8C", VA = "0x2805F8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x28060A0", Offset = "0x28060A0", VA = "0x28060A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x2806400", Offset = "0x2806400", VA = "0x2806400")]
	public RFX4_ScaleCurves()
	{
	}
}
[Token(Token = "0x200007B")]
public class RFX4_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A3A")]
	public Gradient Color;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float TimeMultiplier;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52614")]
	public bool IsLoop;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A42")]
	private Material mat;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int propertyID;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5261C")]
	private float startTime;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color startColor;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitialized;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string shaderProperty;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x2806488", Offset = "0x2806488", VA = "0x2806488")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x28064B8", Offset = "0x28064B8", VA = "0x28064B8")]
	private void Init()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x2806BD0", Offset = "0x2806BD0", VA = "0x2806BD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2806C50", Offset = "0x2806C50", VA = "0x2806C50")]
	private void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x2807074", Offset = "0x2807074", VA = "0x2807074")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x280723C", Offset = "0x280723C", VA = "0x280723C")]
	public RFX4_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x200007C")]
public class RFX4_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A4A")]
	public RFX4_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52624")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsLoop;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A52")]
	private bool canUpdate;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float startTime;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5262C")]
	private Material mat;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startFloat;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int propertyID;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string shaderProperty;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A5A")]
	private bool isInitialized;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x2807314", Offset = "0x2807314", VA = "0x2807314")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x280795C", Offset = "0x280795C", VA = "0x280795C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x2807A64", Offset = "0x2807A64", VA = "0x2807A64")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x2807BFC", Offset = "0x2807BFC", VA = "0x2807BFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x2807C84", Offset = "0x2807C84", VA = "0x2807C84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x2807E54", Offset = "0x2807E54", VA = "0x2807E54")]
	public RFX4_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x200007D")]
public enum RFX4_ShaderProperties
{
	[Token(Token = "0x400042E")]
	_TintColor,
	[Token(Token = "0x400042F")]
	_Cutoff,
	[Token(Token = "0x4000430")]
	_Color,
	[Token(Token = "0x4000431")]
	_EmissionColor,
	[Token(Token = "0x4000432")]
	_MaskPow,
	[Token(Token = "0x4000433")]
	_Cutout,
	[Token(Token = "0x4000434")]
	_Speed,
	[Token(Token = "0x4000435")]
	_BumpAmt
}
[Token(Token = "0x200007E")]
public class RFX4_WindCurves : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve WindCurve;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A6A")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool IsLoop;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52644")]
	private bool canUpdate;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private WindZone windZone;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x28149B8", Offset = "0x28149B8", VA = "0x28149B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2814AA0", Offset = "0x2814AA0", VA = "0x2814AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2814AF4", Offset = "0x2814AF4", VA = "0x2814AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2814C7C", Offset = "0x2814C7C", VA = "0x2814C7C")]
	public RFX4_WindCurves()
	{
	}
}
[Token(Token = "0x200007F")]
public class RFX4_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color Color;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A72")]
	private Color previousColor;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x27F954C", Offset = "0x27F954C", VA = "0x27F954C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x27F9894", Offset = "0x27F9894", VA = "0x27F9894")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x27F957C", Offset = "0x27F957C", VA = "0x27F957C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x27F9944", Offset = "0x27F9944", VA = "0x27F9944")]
	public RFX4_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000080")]
public class RFX4_EffectSettingPhysxForce : MonoBehaviour
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float ForceMultiplier;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x27F99AC", Offset = "0x27F99AC", VA = "0x27F99AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x27F99C0", Offset = "0x27F99C0", VA = "0x27F99C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x27FA024", Offset = "0x27FA024", VA = "0x27FA024")]
	public RFX4_EffectSettingPhysxForce()
	{
	}
}
[Token(Token = "0x2000081")]
public class RFX4_EffectSettingProjectile : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5264C")]
	public float FlyDistanceForProjectiles;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float SpeedMultiplier;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask CollidesWith;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startSpeed;

	[Token(Token = "0x4000444")]
	private const string particlesAdditionalName = "Distance";

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x27FA068", Offset = "0x27FA068", VA = "0x27FA068")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x27FA1E4", Offset = "0x27FA1E4", VA = "0x27FA1E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x27FA77C", Offset = "0x27FA77C", VA = "0x27FA77C")]
	public RFX4_EffectSettingProjectile()
	{
	}
}
[Token(Token = "0x2000082")]
public class RFX4_EffectSettingVisible : MonoBehaviour
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool IsActive;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52654")]
	public float FadeOutTime;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool previousActiveStatus;

	[Token(Token = "0x4000448")]
	private const string rendererAdditionalName = "Loop";

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string[] colorProperties;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A82")]
	private float alpha;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x27FA844", Offset = "0x27FA844", VA = "0x27FA844")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x27FA858", Offset = "0x27FA858", VA = "0x27FA858")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x27FBC5C", Offset = "0x27FBC5C", VA = "0x27FBC5C")]
	public RFX4_EffectSettingVisible()
	{
	}
}
[Token(Token = "0x2000083")]
public class RFX4_EffectSettingsTimeScale : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float Time;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5265C")]
	private float prevTime;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem[] particles;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x27FBF74", Offset = "0x27FBF74", VA = "0x27FBF74")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x27FC000", Offset = "0x27FC000", VA = "0x27FC000")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x27FC110", Offset = "0x27FC110", VA = "0x27FC110")]
	private void UpdateTime()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x27FC928", Offset = "0x27FC928", VA = "0x27FC928")]
	public RFX4_EffectSettingsTimeScale()
	{
	}
}
[Token(Token = "0x2000084")]
public class RFX4_CollisionPropertyDeactiavtion : MonoBehaviour
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float startTime;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8A")]
	private WindZone windZone;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem ps;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEA4")]
	private ParticleSystem.CollisionModule collisionModule;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x19E9F90", Offset = "0x19E9F90", VA = "0x19E9F90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x19EA090", Offset = "0x19EA090", VA = "0x19EA090")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x19EA0F8", Offset = "0x19EA0F8", VA = "0x19EA0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x19EA190", Offset = "0x19EA190", VA = "0x19EA190")]
	public RFX4_CollisionPropertyDeactiavtion()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2198", Offset = "0xBD2198")]
public class RFX4_ParticleCollisionHandler : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Offset;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A91")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem part;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52664")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem ps;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x27FE9E0", Offset = "0x27FE9E0", VA = "0x27FE9E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x27FEA6C", Offset = "0x27FEA6C", VA = "0x27FEA6C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x27FF1D8", Offset = "0x27FF1D8", VA = "0x27FF1D8")]
	public RFX4_ParticleCollisionHandler()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2248", Offset = "0xBD2248")]
public class RFX4_ParticleLight : MonoBehaviour
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float LightIntencityMultiplayer;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LightShadows Shadows;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A99")]
	private ParticleSystem ps;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5266C")]
	private Light[] lights;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int lightLimit;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x27FF2A0", Offset = "0x27FF2A0", VA = "0x27FF2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x27FF6D4", Offset = "0x27FF6D4", VA = "0x27FF6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x27FFBD4", Offset = "0x27FFBD4", VA = "0x27FFBD4")]
	public RFX4_ParticleLight()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD22F8", Offset = "0xBD22F8")]
public class RFX4_ParticleTrail : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject Target;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 DefaultSizeMultiplayer;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AA1")]
	public float VertexLifeTime;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float TrailLifeTime;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52674")]
	public bool UseShaderMaterial;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material TrailMaterial;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseColorOverLifeTime;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Gradient ColorOverLifeTime;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AA9")]
	public float ColorLifeTime;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool UseUvAnimation;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5267C")]
	public int TilesX;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int TilesY;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int FPS;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsLoop;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AB1")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5D10", Offset = "0xBE5D10")]
	public float MinVertexDistance;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool GetVelocityFromParticleSystem;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52684")]
	public float Gravity;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Force;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float InheritVelocity;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Drag;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AB9")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5D60", Offset = "0xBE5D60")]
	public float Frequency;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5DB0", Offset = "0xBE5DB0")]
	public float OffsetSpeed;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5268C")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5E00", Offset = "0xBE5E00")]
	public float Amplitude;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AC1")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool SmoothCurves;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52694")]
	private Dictionary<int, LineRenderer> dict;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem ps;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TrailRenderer[] trails;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AC9")]
	private Color psColor;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Transform targetT;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5269C")]
	private int layer;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isLocalSpace;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform t;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x27FFC2C", Offset = "0x27FFC2C", VA = "0x27FFC2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x28013E8", Offset = "0x28013E8", VA = "0x28013E8")]
	private void ClearTrails()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x28000CC", Offset = "0x28000CC", VA = "0x28000CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x28018EC", Offset = "0x28018EC", VA = "0x28018EC")]
	private void InitTrailRenderer(GameObject go)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x2801664", Offset = "0x2801664", VA = "0x2801664")]
	private void RemoveEmptyTrails()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x2801BF0", Offset = "0x2801BF0", VA = "0x2801BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x28020B4", Offset = "0x28020B4", VA = "0x28020B4")]
	public RFX4_ParticleTrail()
	{
	}
}
[Token(Token = "0x2000088")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD23A8", Offset = "0xBD23A8")]
public class RFX4_Turbulence : MonoBehaviour
{
	[Token(Token = "0x200055B")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x40026D4")]
		Position,
		[Token(Token = "0x40026D5")]
		Velocity,
		[Token(Token = "0x40026D6")]
		RelativePosition
	}

	[Token(Token = "0x200055C")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x40026D8")]
		High,
		[Token(Token = "0x40026D9")]
		Low
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TurbulenceStrenght;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AD1")]
	public bool TurbulenceByTime;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float TimeDelay;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526A4")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Frequency;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Amplitude;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AD9")]
	public Vector3 GlobalForce;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool UseGlobalOffset;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526AC")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ThreshholdSpeed;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AE1")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float lastStopTime;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEAC")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float deltaTime;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AE8")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float time;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526B4")]
	private int currentSplit;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float fpsTime;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int FPS;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int splitUpdate;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7AF0")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool skipFrame;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526BC")]
	private Transform t;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentDelay;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2810820", Offset = "0x2810820", VA = "0x2810820")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2810B34", Offset = "0x2810B34", VA = "0x2810B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2810B60", Offset = "0x2810B60", VA = "0x2810B60")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2810A58", Offset = "0x2810A58", VA = "0x2810A58")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x2811204", Offset = "0x2811204", VA = "0x2811204")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x28125F0", Offset = "0x28125F0", VA = "0x28125F0")]
	public RFX4_Turbulence()
	{
	}
}
[Token(Token = "0x2000089")]
public class RFX4_CameraShake : MonoBehaviour
{
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE970", Offset = "0xBDE970")]
	private sealed class <Shake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD526D4")]
		private int <>1__state;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RFX4_CameraShake <>4__this;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsed>5__2;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B10")]
		private Transform <camT>5__3;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 <originalCamRotation>5__4;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD526DC")]
		private Vector3 <direction>5__5;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <time>5__6;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <randomStart>5__7;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <distanceDamper>5__8;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B18")]
		private Vector3 <oldRotation>5__9;

		[Token(Token = "0x17000491")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x19E9E90", Offset = "0x19E9E90", VA = "0x19E9E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x19E9F60", Offset = "0x19E9F60", VA = "0x19E9F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x19E8AB8", Offset = "0x19E8AB8", VA = "0x19E8AB8")]
		[DebuggerHidden]
		public <Shake>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x19E8BE8", Offset = "0x19E8BE8", VA = "0x19E8BE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x19E8BFC", Offset = "0x19E8BFC", VA = "0x19E8BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x19E9EC0", Offset = "0x19E9EC0", VA = "0x19E9EC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve ShakeCurve;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B00")]
	public float Duration;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float Speed;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526CC")]
	public float Magnitude;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float DistanceForce;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float RotationDamper;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsEnabled;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B08")]
	private bool isPlaying;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x19E8630", Offset = "0x19E8630", VA = "0x19E8630")]
	private void PlayShake()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x19E8740", Offset = "0x19E8740", VA = "0x19E8740")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x19E87C4", Offset = "0x19E87C4", VA = "0x19E87C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x19E8684", Offset = "0x19E8684", VA = "0x19E8684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18BF0", Offset = "0xC18BF0")]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x19E8B00", Offset = "0x19E8B00", VA = "0x19E8B00")]
	public RFX4_CameraShake()
	{
	}
}
[Token(Token = "0x200008A")]
public static class RFX4_ColorHelper
{
	[Token(Token = "0x200055E")]
	public struct HSBColor
	{
		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float B;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B10")]
		public float A;

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x19EA824", Offset = "0x19EA824", VA = "0x19EA824")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x40004AB")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526E4")]
	private static string[] colorProperties;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x19EA1D4", Offset = "0x19EA1D4", VA = "0x19EA1D4")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x19EA8A4", Offset = "0x19EA8A4", VA = "0x19EA8A4")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x19EAF3C", Offset = "0x19EAF3C", VA = "0x19EAF3C")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x19EB248", Offset = "0x19EB248", VA = "0x19EB248")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x19EC774", Offset = "0x19EC774", VA = "0x19EC774")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x19EC908", Offset = "0x19EC908", VA = "0x19EC908")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200008B")]
public class RFX4_CopyPosition : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Transform CopiedTransform;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526EC")]
	private Transform t;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x19ECCD4", Offset = "0x19ECCD4", VA = "0x19ECCD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x19ECD14", Offset = "0x19ECD14", VA = "0x19ECD14")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x19ECDA0", Offset = "0x19ECDA0", VA = "0x19ECDA0")]
	public RFX4_CopyPosition()
	{
	}
}
[Token(Token = "0x200008C")]
public class RFX4_DeactivateByTime : MonoBehaviour
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float DeactivateTime;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool canUpdateState;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x19ECDD0", Offset = "0x19ECDD0", VA = "0x19ECDD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x19ECE00", Offset = "0x19ECE00", VA = "0x19ECE00")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x19ECEC8", Offset = "0x19ECEC8", VA = "0x19ECEC8")]
	private void DeactivateThis()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x19ECF24", Offset = "0x19ECF24", VA = "0x19ECF24")]
	public RFX4_DeactivateByTime()
	{
	}
}
[Token(Token = "0x200008D")]
public class RFX4_DeactivateRigidbodyByTime : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TimeDelayToDeactivate;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x19ECF68", Offset = "0x19ECF68", VA = "0x19ECF68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x19ED070", Offset = "0x19ED070", VA = "0x19ED070")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x19ED148", Offset = "0x19ED148", VA = "0x19ED148")]
	public RFX4_DeactivateRigidbodyByTime()
	{
	}
}
[Token(Token = "0x200008E")]
public class RFX4_DemoReactivation : MonoBehaviour
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B28")]
	public float ReactivationTime;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject Effect;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x19EFC94", Offset = "0x19EFC94", VA = "0x19EFC94")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x19EFD38", Offset = "0x19EFD38", VA = "0x19EFD38")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x19EFDC0", Offset = "0x19EFDC0", VA = "0x19EFDC0")]
	public RFX4_DemoReactivation()
	{
	}
}
[Token(Token = "0x200008F")]
public class RFX4_EffectEvent : MonoBehaviour
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526F4")]
	public GameObject CharacterEffect;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform CharacterAttachPoint;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject CharacterEffect2;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform CharacterAttachPoint2;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B30")]
	public GameObject Effect;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Transform AttachPoint;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD526FC")]
	public GameObject AdditionalEffect;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform AdditionalEffectAttachPoint;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x27F8598", Offset = "0x27F8598", VA = "0x27F8598")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x27F8944", Offset = "0x27F8944", VA = "0x27F8944")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x27F8A90", Offset = "0x27F8A90", VA = "0x27F8A90")]
	public void ActivateAdditionalEffect()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x27F8BDC", Offset = "0x27F8BDC", VA = "0x27F8BDC")]
	public void ActivateCharacterEffect()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x27F8D28", Offset = "0x27F8D28", VA = "0x27F8D28")]
	public void ActivateCharacterEffect2()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x27F8E74", Offset = "0x27F8E74", VA = "0x27F8E74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x27F951C", Offset = "0x27F951C", VA = "0x27F951C")]
	public RFX4_EffectEvent()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2474", Offset = "0xBD2474")]
[ExecuteInEditMode]
public class RFX4_MaterialQueue : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5E8C", Offset = "0xBE5E8C")]
	public int queue;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int[] queues;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x27FD1F0", Offset = "0x27FD1F0", VA = "0x27FD1F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x27FD5B8", Offset = "0x27FD5B8", VA = "0x27FD5B8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x27FD5E8", Offset = "0x27FD5E8", VA = "0x27FD5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x27FD640", Offset = "0x27FD640", VA = "0x27FD640")]
	public RFX4_MaterialQueue()
	{
	}
}
[Token(Token = "0x2000091")]
public class RFX4_OnEnableResetTransform : MonoBehaviour
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B38")]
	private Transform t;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 startPosition;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEB4")]
	private Quaternion startRotation;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 startScale;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitialized;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x27FE4C8", Offset = "0x27FE4C8", VA = "0x27FE4C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x27FE73C", Offset = "0x27FE73C", VA = "0x27FE73C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x27FE9B0", Offset = "0x27FE9B0", VA = "0x27FE9B0")]
	public RFX4_OnEnableResetTransform()
	{
	}
}
[Token(Token = "0x2000092")]
public class RFX4_PhysXSetImpulse : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Force;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B3F")]
	public ForceMode ForceMode;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Rigidbody rig;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52704")]
	private Transform t;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x2802354", Offset = "0x2802354", VA = "0x2802354")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2802404", Offset = "0x2802404", VA = "0x2802404")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x28025EC", Offset = "0x28025EC", VA = "0x28025EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x2802764", Offset = "0x2802764", VA = "0x2802764")]
	public RFX4_PhysXSetImpulse()
	{
	}
}
[Token(Token = "0x2000093")]
public class RFX4_RaycastCollision : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float RaycastDistance;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] Effects;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Offset;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B47")]
	public float TimeDelay;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float DestroyTime;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5270C")]
	public bool UsePivotPosition;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseNormalRotation;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsWorldSpace;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool RealTimeUpdateRaycast;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B4F")]
	public bool DestroyAfterDisabling;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52714")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitialized;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool canUpdate;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x280378C", Offset = "0x280378C", VA = "0x280378C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x280469C", Offset = "0x280469C", VA = "0x280469C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x28047CC", Offset = "0x28047CC", VA = "0x28047CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x2804B8C", Offset = "0x2804B8C", VA = "0x2804B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2804BE0", Offset = "0x2804BE0", VA = "0x2804BE0")]
	private void LateEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x280387C", Offset = "0x280387C", VA = "0x280387C")]
	private void UpdateRaycast()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2804C10", Offset = "0x2804C10", VA = "0x2804C10")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2804E60", Offset = "0x2804E60", VA = "0x2804E60")]
	public RFX4_RaycastCollision()
	{
	}
}
[Token(Token = "0x2000094")]
public class RFX4_ReplaceMaterialByTime : MonoBehaviour
{
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material ReplacementMaterial;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B57")]
	public float TimeDelay;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool ChangeShadow;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5271C")]
	private bool isInitialized;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material mat;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshRenderer mshRend;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2805208", Offset = "0x2805208", VA = "0x2805208")]
	private void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x280530C", Offset = "0x280530C", VA = "0x280530C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x28053F4", Offset = "0x28053F4", VA = "0x28053F4")]
	private void ReplaceObject()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x280544C", Offset = "0x280544C", VA = "0x280544C")]
	public RFX4_ReplaceMaterialByTime()
	{
	}
}
[Token(Token = "0x2000095")]
public class RFX4_ReplaceModelOnCollision : MonoBehaviour
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject PhysicsObjects;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B5F")]
	private bool isCollided;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Transform t;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x28054A8", Offset = "0x28054A8", VA = "0x28054A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x28056F4", Offset = "0x28056F4", VA = "0x28056F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x2805918", Offset = "0x2805918", VA = "0x2805918")]
	public RFX4_ReplaceModelOnCollision()
	{
	}
}
[Token(Token = "0x2000096")]
public class RFX4_RotateAround : MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52724")]
	public Vector3 Offset;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 RotateVector;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float LifeTime;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform t;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B67")]
	private float currentTime;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Quaternion rotation;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2805948", Offset = "0x2805948", VA = "0x2805948")]
	private void Start()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x28059D8", Offset = "0x28059D8", VA = "0x28059D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2805B10", Offset = "0x2805B10", VA = "0x2805B10")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x2805CDC", Offset = "0x2805CDC", VA = "0x2805CDC")]
	public RFX4_RotateAround()
	{
	}
}
[Token(Token = "0x2000097")]
public class RFX4_SimpleDecal : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5272C")]
	public float Offset;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseNormalRotation;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform t;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit hit;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x2807EEC", Offset = "0x2807EEC", VA = "0x2807EEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x28083D8", Offset = "0x28083D8", VA = "0x28083D8")]
	public RFX4_SimpleDecal()
	{
	}
}
[Token(Token = "0x2000098")]
public class RFX4_StartDelay : MonoBehaviour
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B6F")]
	public GameObject ActivatedGameObject;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float Delay;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x2808420", Offset = "0x2808420", VA = "0x2808420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x28084E8", Offset = "0x28084E8", VA = "0x28084E8")]
	private void ActivateGO()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x2808540", Offset = "0x2808540", VA = "0x2808540")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x28085C8", Offset = "0x28085C8", VA = "0x28085C8")]
	public RFX4_StartDelay()
	{
	}
}
[Token(Token = "0x2000099")]
public enum RFX4_TextureShaderProperties
{
	[Token(Token = "0x40004EB")]
	_MainTex,
	[Token(Token = "0x40004EC")]
	_DistortTex,
	[Token(Token = "0x40004ED")]
	_Mask,
	[Token(Token = "0x40004EE")]
	_Cutout,
	[Token(Token = "0x40004EF")]
	_CutoutTex,
	[Token(Token = "0x40004F0")]
	_Bump,
	[Token(Token = "0x40004F1")]
	_BumpTex,
	[Token(Token = "0x40004F2")]
	_EmissionTex
}
[Token(Token = "0x200009A")]
public class RFX4_TornadoParticles : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material TornadoMaterial;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B7F")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem particleSys;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52744")]
	private Light myLight;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector4 _twistScale;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int materialID;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x280860C", Offset = "0x280860C", VA = "0x280860C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x2808940", Offset = "0x2808940", VA = "0x2808940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x2809144", Offset = "0x2809144", VA = "0x2809144")]
	public RFX4_TornadoParticles()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2540", Offset = "0xBD2540")]
public class RFX4_TrailRenderer : MonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float VertexLifeTime;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B87")]
	public float TrailLifeTime;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5F68", Offset = "0xBE5F68")]
	public float MinVertexDistance;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5274C")]
	public float Gravity;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Force;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float InheritVelocity;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Drag;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8F")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5FB8", Offset = "0xBE5FB8")]
	public float Frequency;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6008", Offset = "0xBE6008")]
	public float OffsetSpeed;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEBC")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6058", Offset = "0xBE6058")]
	public float Amplitude;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B96")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool SmoothCurves;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52754")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Vector3> positions;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<float> currentTimes;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Vector3> velocities;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B9E")]
	[HideInInspector]
	public float currentLifeTime;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Transform t;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5275C")]
	private Vector3 prevPosition;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 startPosition;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int curveCount;

	[Token(Token = "0x4000512")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x4000513")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x4000514")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentVelocity;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float turbulenceRandomOffset;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitialized;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x2809188", Offset = "0x2809188", VA = "0x2809188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x28096A0", Offset = "0x28096A0", VA = "0x28096A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x28091D0", Offset = "0x28091D0", VA = "0x28091D0")]
	private void Init()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x28096F4", Offset = "0x28096F4", VA = "0x28096F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x280B940", Offset = "0x280B940", VA = "0x280B940")]
	private int GetLastDeletedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x28099CC", Offset = "0x28099CC", VA = "0x28099CC")]
	private void UpdatePositionsCount()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x280CF24", Offset = "0x280CF24", VA = "0x280CF24")]
	private void AddInterpolatedPositions(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x280BBB4", Offset = "0x280BBB4", VA = "0x280BBB4")]
	private void RemovePositionsBeforeIndex(int lastDeletedIndex)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2809E7C", Offset = "0x2809E7C", VA = "0x2809E7C")]
	private void UpdateForce()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x280AD6C", Offset = "0x280AD6C", VA = "0x280AD6C")]
	private void UpdateImpulse()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x280B230", Offset = "0x280B230", VA = "0x280B230")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x280BDE4", Offset = "0x280BDE4", VA = "0x280BDE4")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x280CD58", Offset = "0x280CD58", VA = "0x280CD58")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x280D500", Offset = "0x280D500", VA = "0x280D500")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x280DA4C", Offset = "0x280DA4C", VA = "0x280DA4C")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x280D708", Offset = "0x280D708", VA = "0x280D708")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x280E158", Offset = "0x280E158", VA = "0x280E158")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x280E540", Offset = "0x280E540", VA = "0x280E540")]
	public RFX4_TrailRenderer()
	{
	}
}
[Token(Token = "0x200009C")]
public class RFX4_TransformMotion : MonoBehaviour
{
	[Token(Token = "0x200055F")]
	public enum RFX4_SimulationSpace
	{
		[Token(Token = "0x40026EA")]
		Local,
		[Token(Token = "0x40026EB")]
		World
	}

	[Token(Token = "0x2000560")]
	public class RFX4_CollisionInfo : EventArgs
	{
		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit Hit;

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x2810394", Offset = "0x2810394", VA = "0x2810394")]
		public RFX4_CollisionInfo()
		{
		}
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BAE")]
	public float Distance;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float Speed;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5276C")]
	public float Dampeen;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MinSpeed;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TimeDelay;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask CollidesWith;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BB6")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float CollisionOffset;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52774")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] DeactivatedObjectsOnCollision;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BBE")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 startPositionLocal;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5277C")]
	private Transform t;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 oldPos;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isCollided;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isOutDistance;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BC6")]
	private Quaternion startQuaternion;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float currentSpeed;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52784")]
	private float currentDelay;

	[Token(Token = "0x400052D")]
	private const float RayCastTolerance = 0.3f;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitialized;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool dropFirstFrameForFixUnityBugWithParticles;

	[Token(Token = "0x14000007")]
	public event EventHandler<RFX4_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x280E6DC", Offset = "0x280E6DC", VA = "0x280E6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18CA0", Offset = "0xC18CA0")]
		add
		{
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x280E828", Offset = "0x280E828", VA = "0x280E828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC18CDC", Offset = "0xC18CDC")]
		remove
		{
		}
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x280E974", Offset = "0x280E974", VA = "0x280E974")]
	private void Start()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x280ECA0", Offset = "0x280ECA0", VA = "0x280ECA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x280ECF4", Offset = "0x280ECF4", VA = "0x280ECF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x280EAEC", Offset = "0x280EAEC", VA = "0x280EAEC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x280EE64", Offset = "0x280EE64", VA = "0x280EE64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x280EED0", Offset = "0x280EED0", VA = "0x280EED0")]
	private void UpdateWorldPosition()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x280FC00", Offset = "0x280FC00", VA = "0x280FC00")]
	private void OnCollisionBehaviour(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x280ED48", Offset = "0x280ED48", VA = "0x280ED48")]
	private void OnCollisionDeactivateBehaviour(bool active)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x281047C", Offset = "0x281047C", VA = "0x281047C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x2810704", Offset = "0x2810704", VA = "0x2810704")]
	public RFX4_TransformMotion()
	{
	}
}
[Token(Token = "0x200009D")]
public class RFX4_UVAnimation : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int TilesX;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BD6")]
	public int TilesY;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int FPS;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52794")]
	public int StartFrameOffset;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsLoop;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float StartDelay;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsReverse;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BDE")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public RFX4_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5279C")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int count;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Renderer currentRenderer;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Projector projector;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BE6")]
	private Material instanceMaterial;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float animationStartTime;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEC4")]
	private bool canUpdate;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previousIndex;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int totalFrames;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentInterpolatedTime;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BED")]
	private int currentIndex;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector2 size;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD527A4")]
	private bool isInitialized;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x2812794", Offset = "0x2812794", VA = "0x2812794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x2812D48", Offset = "0x2812D48", VA = "0x2812D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x2812D90", Offset = "0x2812D90", VA = "0x2812D90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x28127E8", Offset = "0x28127E8", VA = "0x28127E8")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x2813D60", Offset = "0x2813D60", VA = "0x2813D60")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x2812E24", Offset = "0x2812E24", VA = "0x2812E24")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x28131B8", Offset = "0x28131B8", VA = "0x28131B8")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x281372C", Offset = "0x281372C", VA = "0x281372C")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x281414C", Offset = "0x281414C", VA = "0x281414C")]
	public RFX4_UVAnimation()
	{
	}
}
[Token(Token = "0x200009E")]
public class RFX4_UVScroll : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 UvScrollMultiplier;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RFX4_TextureShaderProperties TextureName;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 uvOffset;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BF5")]
	private Material mat;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x281427C", Offset = "0x281427C", VA = "0x281427C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x2814654", Offset = "0x2814654", VA = "0x2814654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x28148B0", Offset = "0x28148B0", VA = "0x28148B0")]
	public RFX4_UVScroll()
	{
	}
}
[Token(Token = "0x200009F")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD527AC")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 _lookAtTarget;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1AFFA3C", Offset = "0x1AFFA3C", VA = "0x1AFFA3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1AFFC20", Offset = "0x1AFFC20", VA = "0x1AFFC20")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MouseMove : MonoBehaviour
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float _sensitivity;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 _originalPos;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x19D474C", Offset = "0x19D474C", VA = "0x19D474C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x19D47C4", Offset = "0x19D47C4", VA = "0x19D47C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x19D4AC0", Offset = "0x19D4AC0", VA = "0x19D4AC0")]
	public MouseMove()
	{
	}
}
[Token(Token = "0x20000A1")]
public class SwooshTest : MonoBehaviour
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BFD")]
	[SerializeField]
	private AnimationClip _animation;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private AnimationState _animationState;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD527B4")]
	[SerializeField]
	private int _start;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int _end;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float _startN;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float _endN;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C05")]
	private float _time;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float _prevTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD527BC")]
	private float _prevAnimTime;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private MeleeWeaponTrail _trail;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _firstFrame;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1F40768", Offset = "0x1F40768", VA = "0x1F40768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1F40924", Offset = "0x1F40924", VA = "0x1F40924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1F40C14", Offset = "0x1F40C14", VA = "0x1F40C14")]
	public SwooshTest()
	{
	}
}
[Token(Token = "0x20000A2")]
public class Interpolate
{
	[Token(Token = "0x2000561")]
	public enum EaseType
	{
		[Token(Token = "0x40026EE")]
		Linear,
		[Token(Token = "0x40026EF")]
		EaseInQuad,
		[Token(Token = "0x40026F0")]
		EaseOutQuad,
		[Token(Token = "0x40026F1")]
		EaseInOutQuad,
		[Token(Token = "0x40026F2")]
		EaseInCubic,
		[Token(Token = "0x40026F3")]
		EaseOutCubic,
		[Token(Token = "0x40026F4")]
		EaseInOutCubic,
		[Token(Token = "0x40026F5")]
		EaseInQuart,
		[Token(Token = "0x40026F6")]
		EaseOutQuart,
		[Token(Token = "0x40026F7")]
		EaseInOutQuart,
		[Token(Token = "0x40026F8")]
		EaseInQuint,
		[Token(Token = "0x40026F9")]
		EaseOutQuint,
		[Token(Token = "0x40026FA")]
		EaseInOutQuint,
		[Token(Token = "0x40026FB")]
		EaseInSine,
		[Token(Token = "0x40026FC")]
		EaseOutSine,
		[Token(Token = "0x40026FD")]
		EaseInOutSine,
		[Token(Token = "0x40026FE")]
		EaseInExpo,
		[Token(Token = "0x40026FF")]
		EaseOutExpo,
		[Token(Token = "0x4002700")]
		EaseInOutExpo,
		[Token(Token = "0x4002701")]
		EaseInCirc,
		[Token(Token = "0x4002702")]
		EaseOutCirc,
		[Token(Token = "0x4002703")]
		EaseInOutCirc
	}

	[Token(Token = "0x2000562")]
	public delegate Vector3 ToVector3<T>(T v);

	[Token(Token = "0x2000563")]
	public delegate float Function(float a, float b, float c, float d);

	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE9AC", Offset = "0xBDE9AC")]
	private sealed class <NewTimer>d__3 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C2D")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float duration;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD527E4")]
		public float <>3__duration;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000493")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x1AEF74C", Offset = "0x1AEF74C", VA = "0x1AEF74C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x1AEF81C", Offset = "0x1AEF81C", VA = "0x1AEF81C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x1AE9B10", Offset = "0x1AE9B10", VA = "0x1AE9B10")]
		[DebuggerHidden]
		public <NewTimer>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x1AEF4F8", Offset = "0x1AEF4F8", VA = "0x1AEF4F8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x1AEF50C", Offset = "0x1AEF50C", VA = "0x1AEF50C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x1AEF77C", Offset = "0x1AEF77C", VA = "0x1AEF77C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x1AEF8BC", Offset = "0x1AEF8BC", VA = "0x1AEF8BC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x1AEFA18", Offset = "0x1AEFA18", VA = "0x1AEFA18", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE9E8", Offset = "0xBDE9E8")]
	private sealed class <NewCounter>d__6 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C35")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int start;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD527EC")]
		public int <>3__start;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int step;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>3__step;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int end;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C3D")]
		public int <>3__end;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int <i>5__2;

		[Token(Token = "0x17000495")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x1AEE7DC", Offset = "0x1AEE7DC", VA = "0x1AEE7DC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x1AEE8AC", Offset = "0x1AEE8AC", VA = "0x1AEE8AC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x1AE9C88", Offset = "0x1AE9C88", VA = "0x1AE9C88")]
		[DebuggerHidden]
		public <NewCounter>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1AEE628", Offset = "0x1AEE628", VA = "0x1AEE628", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1AEE63C", Offset = "0x1AEE63C", VA = "0x1AEE63C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x1AEE80C", Offset = "0x1AEE80C", VA = "0x1AEE80C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x1AEE94C", Offset = "0x1AEE94C", VA = "0x1AEE94C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x1AEEAF8", Offset = "0x1AEEAF8", VA = "0x1AEEAF8", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA24", Offset = "0xBDEA24")]
	private sealed class <NewEase>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CECC")]
		private int <>1__state;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 end;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 start;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C44")]
		public IEnumerable<float> driver;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Function ease;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD527F4")]
		public float total;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <distance>5__2;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1AEF3F8", Offset = "0x1AEF3F8", VA = "0x1AEF3F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x1AEF4C8", Offset = "0x1AEF4C8", VA = "0x1AEF4C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x1AEA0A0", Offset = "0x1AEA0A0", VA = "0x1AEA0A0")]
		[DebuggerHidden]
		public <NewEase>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x1AEEB30", Offset = "0x1AEEB30", VA = "0x1AEEB30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x1AEEDA0", Offset = "0x1AEEDA0", VA = "0x1AEEDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x1AEECC8", Offset = "0x1AEECC8", VA = "0x1AEECC8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x1AEF428", Offset = "0x1AEF428", VA = "0x1AEF428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA60", Offset = "0xBDEA60")]
	private sealed class <NewBezier>d__16<T> : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <>2__current;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerable<float> steps;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<float> <>3__steps;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Function ease;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Function <>3__ease;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maxStep;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float <>3__maxStep;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] <points>5__2;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x17000499")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x6002B5E")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B60")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5A")]
		[DebuggerHidden]
		public <NewBezier>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002B5B")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B5C")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5D")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B5F")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002B61")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002B62")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA9C", Offset = "0xBDEA9C")]
	private sealed class <NewCatmullRom>d__20<T> : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <>2__current;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool loop;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool <>3__loop;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int slices;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>3__slices;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <last>5__2;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <current>5__3;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <previous>5__4;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <start>5__5;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <end>5__6;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <next>5__7;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <stepCount>5__8;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <step>5__9;

		[Token(Token = "0x1700049B")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x6002B66")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B68")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B63")]
		[DebuggerHidden]
		public <NewCatmullRom>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002B64")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B65")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B67")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002B69")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002B6A")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1AE99C0", Offset = "0x1AE99C0", VA = "0x1AE99C0")]
	private static Vector3 Identity(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1AE99F8", Offset = "0x1AE99F8", VA = "0x1AE99F8")]
	private static Vector3 TransformDotPosition(Transform t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1AE9A4C", Offset = "0x1AE9A4C", VA = "0x1AE9A4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18D18", Offset = "0xC18D18")]
	private static IEnumerable<float> NewTimer(float duration)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1AE9B74", Offset = "0x1AE9B74", VA = "0x1AE9B74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18DC8", Offset = "0xC18DC8")]
	private static IEnumerable<float> NewCounter(int start, int end, int step)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1AE9CEC", Offset = "0x1AE9CEC", VA = "0x1AE9CEC")]
	public static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, float duration)
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1AE9F6C", Offset = "0x1AE9F6C", VA = "0x1AE9F6C")]
	public static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1AE9DDC", Offset = "0x1AE9DDC", VA = "0x1AE9DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18E78", Offset = "0xC18E78")]
	private static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, float total, IEnumerable<float> driver)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1AEA0E8", Offset = "0x1AEA0E8", VA = "0x1AEA0E8")]
	private static Vector3 Ease(Function ease, Vector3 start, Vector3 distance, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1AEA63C", Offset = "0x1AEA63C", VA = "0x1AEA63C")]
	public static Function Ease(EaseType type)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1AEAF58", Offset = "0x1AEAF58", VA = "0x1AEAF58")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Transform[] nodes, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1AEB09C", Offset = "0x1AEB09C", VA = "0x1AEB09C")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Transform[] nodes, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1AEB23C", Offset = "0x1AEB23C", VA = "0x1AEB23C")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Vector3[] points, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1AEB380", Offset = "0x1AEB380", VA = "0x1AEB380")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Vector3[] points, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18F28", Offset = "0xC18F28")]
	private static IEnumerable<Vector3> NewBezier<T>(Function ease, IList nodes, ToVector3<T> toVector3, float maxStep, IEnumerable<float> steps)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1AEB520", Offset = "0x1AEB520", VA = "0x1AEB520")]
	private static Vector3 Bezier(Function ease, Vector3[] points, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1AEBA80", Offset = "0x1AEBA80", VA = "0x1AEBA80")]
	public static IEnumerable<Vector3> NewCatmullRom(Transform[] nodes, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1AEBB9C", Offset = "0x1AEBB9C", VA = "0x1AEBB9C")]
	public static IEnumerable<Vector3> NewCatmullRom(Vector3[] points, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC18FD8", Offset = "0xC18FD8")]
	private static IEnumerable<Vector3> NewCatmullRom<T>(IList nodes, ToVector3<T> toVector3, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1AEBCB8", Offset = "0x1AEBCB8", VA = "0x1AEBCB8")]
	private static Vector3 CatmullRom(Vector3 previous, Vector3 start, Vector3 end, Vector3 next, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1AEC194", Offset = "0x1AEC194", VA = "0x1AEC194")]
	private static float Linear(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1AEC23C", Offset = "0x1AEC23C", VA = "0x1AEC23C")]
	private static float EaseInQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1AEC318", Offset = "0x1AEC318", VA = "0x1AEC318")]
	private static float EaseOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1AEC434", Offset = "0x1AEC434", VA = "0x1AEC434")]
	private static float EaseInOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1AEC620", Offset = "0x1AEC620", VA = "0x1AEC620")]
	private static float EaseInCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1AEC70C", Offset = "0x1AEC70C", VA = "0x1AEC70C")]
	private static float EaseOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1AEC844", Offset = "0x1AEC844", VA = "0x1AEC844")]
	private static float EaseInOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1AECA1C", Offset = "0x1AECA1C", VA = "0x1AECA1C")]
	private static float EaseInQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1AECB18", Offset = "0x1AECB18", VA = "0x1AECB18")]
	private static float EaseOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1AECC6C", Offset = "0x1AECC6C", VA = "0x1AECC6C")]
	private static float EaseInOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1AECE70", Offset = "0x1AECE70", VA = "0x1AECE70")]
	private static float EaseInQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1AECF7C", Offset = "0x1AECF7C", VA = "0x1AECF7C")]
	private static float EaseOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1AED0D4", Offset = "0x1AED0D4", VA = "0x1AED0D4")]
	private static float EaseInOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1AED2EC", Offset = "0x1AED2EC", VA = "0x1AED2EC")]
	private static float EaseInSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1AED48C", Offset = "0x1AED48C", VA = "0x1AED48C")]
	private static float EaseOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1AED610", Offset = "0x1AED610", VA = "0x1AED610")]
	private static float EaseInOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1AED7DC", Offset = "0x1AED7DC", VA = "0x1AED7DC")]
	private static float EaseInExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1AED994", Offset = "0x1AED994", VA = "0x1AED994")]
	private static float EaseOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1AEDB58", Offset = "0x1AEDB58", VA = "0x1AEDB58")]
	private static float EaseInOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1AEDEA0", Offset = "0x1AEDEA0", VA = "0x1AEDEA0")]
	private static float EaseInCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1AEE090", Offset = "0x1AEE090", VA = "0x1AEE090")]
	private static float EaseOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1AEE27C", Offset = "0x1AEE27C", VA = "0x1AEE27C")]
	private static float EaseInOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1AEE5F8", Offset = "0x1AEE5F8", VA = "0x1AEE5F8")]
	public Interpolate()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MeleeWeaponTrail : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000569")]
	public class Point
	{
		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52814")]
		public float timeCreated;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 basePosition;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 tipPosition;

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x21EAC58", Offset = "0x21EAC58", VA = "0x21EAC58")]
		public Point()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool _emit;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C4C")]
	private bool _use;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private float _emitTime;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD527FC")]
	[SerializeField]
	private Material _material;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float _lifeTime;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Color[] _colors;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float[] _sizes;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C54")]
	[SerializeField]
	private float _minVertexDistance;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private float _maxVertexDistance;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52804")]
	private float _minVertexDistanceSqr;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float _maxVertexDistanceSqr;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float _maxAngle;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool _autoDestruct;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C5C")]
	[SerializeField]
	private int subdivisions;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private Transform _base;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5280C")]
	[SerializeField]
	private Transform _tip;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Point> _points;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Point> _smoothedPoints;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject _trailObject;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C64")]
	private Mesh _trailMesh;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 _lastPosition;

	[Token(Token = "0x17000018")]
	public bool Emit
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x21E6F2C", Offset = "0x21E6F2C", VA = "0x21E6F2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool Use
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x21E6F78", Offset = "0x21E6F78", VA = "0x21E6F78")]
		set
		{
		}
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x21E6FC4", Offset = "0x21E6FC4", VA = "0x21E6FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x21E7540", Offset = "0x21E7540", VA = "0x21E7540")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x21E7634", Offset = "0x21E7634", VA = "0x21E7634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x21EAC88", Offset = "0x21EAC88", VA = "0x21EAC88")]
	private void RemoveOldPoints(List<Point> pointList)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x21EB238", Offset = "0x21EB238", VA = "0x21EB238")]
	public MeleeWeaponTrail()
	{
	}
}
[Token(Token = "0x20000A4")]
public class MicroSplatKeywords : ScriptableObject
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> keywords;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x2565E8C", Offset = "0x2565E8C", VA = "0x2565E8C")]
	public bool IsKeywordEnabled(string k)
	{
		return default(bool);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x2565F48", Offset = "0x2565F48", VA = "0x2565F48")]
	public void EnableKeyword(string k)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x2566024", Offset = "0x2566024", VA = "0x2566024")]
	public void DisableKeyword(string k)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x25660FC", Offset = "0x25660FC", VA = "0x25660FC")]
	public MicroSplatKeywords()
	{
	}
}
[Token(Token = "0x20000A5")]
[ExecuteAlways]
public class MicroSplatObject : MonoBehaviour
{
	[Token(Token = "0x200056A")]
	public struct TerrainDescriptor
	{
		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD52814")]
		public Texture heightMap;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture normalMap;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 heightMapScale;
	}

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C6C")]
	[HideInInspector]
	public Material templateMaterial;

	[NonSerialized]
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public Material matInstance;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5281C")]
	[HideInInspector]
	public Material blendMat;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Material blendMatInstance;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public MicroSplatKeywords keywordSO;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D perPixelNormal;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C74")]
	[HideInInspector]
	public Texture2D streamTexture;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public MicroSplatPropData propData;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x2569C40", Offset = "0x2569C40", VA = "0x2569C40")]
	protected long GetOverrideHash()
	{
		return default(long);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x256A358", Offset = "0x256A358", VA = "0x256A358")]
	protected void SetMap(Material m, string name, Texture tex)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x2567C78", Offset = "0x2567C78", VA = "0x2567C78")]
	protected void ApplySharedData(Material m)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x2567DEC", Offset = "0x2567DEC", VA = "0x2567DEC")]
	protected void ApplyMaps(Material m)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x25680D8", Offset = "0x25680D8", VA = "0x25680D8")]
	protected void ApplyControlTextures(Texture2D[] controls, Material m)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x256A90C", Offset = "0x256A90C", VA = "0x256A90C")]
	protected void SyncBlendMat(Vector3 size)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x256AEC8", Offset = "0x256AEC8", VA = "0x256AEC8", Slot = "4")]
	public virtual TerrainDescriptor GetTerrainDescriptor()
	{
		return default(TerrainDescriptor);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x256AF2C", Offset = "0x256AF2C", VA = "0x256AF2C", Slot = "5")]
	public virtual Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x256AF90", Offset = "0x256AF90", VA = "0x256AF90")]
	public Material GetBlendMatInstance()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x2568E5C", Offset = "0x2568E5C", VA = "0x2568E5C")]
	public void ApplyBlendMap()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x2567C64", Offset = "0x2567C64", VA = "0x2567C64")]
	public void RevisionFromMat()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x256B340", Offset = "0x256B340", VA = "0x256B340")]
	public static void SyncAll()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x2569958", Offset = "0x2569958", VA = "0x2569958")]
	public MicroSplatObject()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MicroSplatPropData : ScriptableObject
{
	[Token(Token = "0x200056B")]
	public enum PerTexVector2
	{
		[Token(Token = "0x4002746")]
		SplatUVScale = 0,
		[Token(Token = "0x4002747")]
		SplatUVOffset = 2
	}

	[Token(Token = "0x200056C")]
	public enum PerTexColor
	{
		[Token(Token = "0x4002749")]
		Tint = 4,
		[Token(Token = "0x400274A")]
		SSSRTint = 72,
		[Token(Token = "0x400274B")]
		TraxTint = 84
	}

	[Token(Token = "0x200056D")]
	public enum PerTexFloat
	{
		[Token(Token = "0x400274D")]
		InterpolationContrast = 5,
		[Token(Token = "0x400274E")]
		NormalStrength = 8,
		[Token(Token = "0x400274F")]
		Smoothness = 9,
		[Token(Token = "0x4002750")]
		AO = 10,
		[Token(Token = "0x4002751")]
		Metallic = 11,
		[Token(Token = "0x4002752")]
		Brightness = 12,
		[Token(Token = "0x4002753")]
		Contrast = 13,
		[Token(Token = "0x4002754")]
		Porosity = 14,
		[Token(Token = "0x4002755")]
		Foam = 15,
		[Token(Token = "0x4002756")]
		DetailNoiseStrength = 16,
		[Token(Token = "0x4002757")]
		DistanceNoiseStrength = 17,
		[Token(Token = "0x4002758")]
		DistanceResample = 18,
		[Token(Token = "0x4002759")]
		DisplacementMip = 19,
		[Token(Token = "0x400275A")]
		GeoTexStrength = 20,
		[Token(Token = "0x400275B")]
		GeoTintStrength = 21,
		[Token(Token = "0x400275C")]
		GeoNormalStrength = 22,
		[Token(Token = "0x400275D")]
		GlobalSmoothMetalAOStength = 23,
		[Token(Token = "0x400275E")]
		DisplacementStength = 24,
		[Token(Token = "0x400275F")]
		DisplacementBias = 25,
		[Token(Token = "0x4002760")]
		DisplacementOffset = 26,
		[Token(Token = "0x4002761")]
		GlobalEmisStength = 27,
		[Token(Token = "0x4002762")]
		NoiseNormal0Strength = 28,
		[Token(Token = "0x4002763")]
		NoiseNormal1Strength = 29,
		[Token(Token = "0x4002764")]
		NoiseNormal2Strength = 30,
		[Token(Token = "0x4002765")]
		WindParticulateStrength = 31,
		[Token(Token = "0x4002766")]
		SnowAmount = 32,
		[Token(Token = "0x4002767")]
		GlitterAmount = 33,
		[Token(Token = "0x4002768")]
		GeoHeightFilter = 34,
		[Token(Token = "0x4002769")]
		GeoHeightFilterStrength = 35,
		[Token(Token = "0x400276A")]
		TriplanarMode = 36,
		[Token(Token = "0x400276B")]
		TriplanarContrast = 37,
		[Token(Token = "0x400276C")]
		StochatsicEnabled = 38,
		[Token(Token = "0x400276D")]
		Saturation = 39,
		[Token(Token = "0x400276E")]
		TextureClusterContrast = 40,
		[Token(Token = "0x400276F")]
		TextureClusterBoost = 41,
		[Token(Token = "0x4002770")]
		HeightOffset = 42,
		[Token(Token = "0x4002771")]
		HeightContrast = 43,
		[Token(Token = "0x4002772")]
		AntiTileArrayNormalStrength = 56,
		[Token(Token = "0x4002773")]
		AntiTileArrayDetailStrength = 57,
		[Token(Token = "0x4002774")]
		AntiTileArrayDistanceStrength = 58,
		[Token(Token = "0x4002775")]
		DisplaceShaping = 59,
		[Token(Token = "0x4002776")]
		UVRotation = 64,
		[Token(Token = "0x4002777")]
		TriplanarRotationX = 65,
		[Token(Token = "0x4002778")]
		TriplanarRotationY = 66,
		[Token(Token = "0x4002779")]
		FuzzyShadingCore = 68,
		[Token(Token = "0x400277A")]
		FuzzyShadingEdge = 69,
		[Token(Token = "0x400277B")]
		FuzzyShadingPower = 70,
		[Token(Token = "0x400277C")]
		SSSThickness = 75,
		[Token(Token = "0x400277D")]
		CurveInterpolator = 76,
		[Token(Token = "0x400277E")]
		TraxDigDepth = 80,
		[Token(Token = "0x400277F")]
		TraxOpacity = 81,
		[Token(Token = "0x4002780")]
		TraxNormalStrength = 82,
		[Token(Token = "0x4002781")]
		NoiseHeightFrequency = 88,
		[Token(Token = "0x4002782")]
		NoiseHeightAmplitude = 89,
		[Token(Token = "0x4002783")]
		NoiseUVFrequency = 90,
		[Token(Token = "0x4002784")]
		NoiseUVAmplitude = 91,
		[Token(Token = "0x4002785")]
		ColorIntensity = 92,
		[Token(Token = "0x4002786")]
		ScatterBlendMode = 98,
		[Token(Token = "0x4002787")]
		ScatterAlphaMult = 99,
		[Token(Token = "0x4002788")]
		ScatterDistanceFade = 104,
		[Token(Token = "0x4002789")]
		RimPower = 105
	}

	[Token(Token = "0x4000579")]
	public const int sMaxTextures = 32;

	[Token(Token = "0x400057A")]
	public const int sMaxAttributes = 32;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public Color[] values;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5282C")]
	[HideInInspector]
	public Texture2D propTex;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public AnimationCurve geoCurve;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D geoTex;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public AnimationCurve geoSlopeFilter;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C84")]
	[HideInInspector]
	public Texture2D geoSlopeTex;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public AnimationCurve globalSlopeFilter;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52834")]
	[HideInInspector]
	public Texture2D globalSlopeTex;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x256B7F0", Offset = "0x256B7F0", VA = "0x256B7F0")]
	private void RevisionData()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x256BBEC", Offset = "0x256BBEC", VA = "0x256BBEC")]
	public Color GetValue(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x256BC8C", Offset = "0x256BC8C", VA = "0x256BC8C")]
	public void SetValue(int x, int y, Color c)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x256BE2C", Offset = "0x256BE2C", VA = "0x256BE2C")]
	public void SetValue(int x, int y, int channel, float value)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x256BF60", Offset = "0x256BF60", VA = "0x256BF60")]
	public void SetValue(int x, int y, int channel, Vector2 value)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x256C12C", Offset = "0x256C12C", VA = "0x256C12C")]
	public void SetValue(int textureIndex, PerTexFloat channel, float value)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x256C2D0", Offset = "0x256C2D0", VA = "0x256C2D0")]
	public void SetValue(int textureIndex, PerTexColor channel, Color value)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x256C46C", Offset = "0x256C46C", VA = "0x256C46C")]
	public void SetValue(int textureIndex, PerTexVector2 channel, Vector2 value)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x256A4EC", Offset = "0x256A4EC", VA = "0x256A4EC")]
	public Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x256C6D8", Offset = "0x256C6D8", VA = "0x256C6D8")]
	public Texture2D GetGeoCurve()
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x256CA7C", Offset = "0x256CA7C", VA = "0x256CA7C")]
	public Texture2D GetGeoSlopeFilter()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x256CE18", Offset = "0x256CE18", VA = "0x256CE18")]
	public Texture2D GetGlobalSlopeFilter()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x256D1B4", Offset = "0x256D1B4", VA = "0x256D1B4")]
	public MicroSplatPropData()
	{
	}
}
[Token(Token = "0x20000A7")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class MicroSplatTerrain : MicroSplatObject
{
	[Token(Token = "0x200056E")]
	public delegate void MaterialSyncAll();

	[Token(Token = "0x200056F")]
	public delegate void MaterialSync(Material m);

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5288C")]
	private static List<MicroSplatTerrain> sInstances;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Terrain terrain;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D customControl0;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D customControl1;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7CEB")]
	[HideInInspector]
	public Texture2D customControl2;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public Texture2D customControl3;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEDC")]
	[HideInInspector]
	public Texture2D customControl4;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D customControl5;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D customControl6;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture2D customControl7;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7CF2")]
	[HideInInspector]
	public bool reenabled;

	[Token(Token = "0x14000008")]
	public static event MaterialSyncAll OnMaterialSyncAll
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x256D300", Offset = "0x256D300", VA = "0x256D300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19088", Offset = "0xC19088")]
		add
		{
		}
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x256D52C", Offset = "0x256D52C", VA = "0x256D52C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC190C4", Offset = "0xC190C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event MaterialSync OnMaterialSync
	{
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x256D758", Offset = "0x256D758", VA = "0x256D758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19100", Offset = "0xC19100")]
		add
		{
		}
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x256D8A4", Offset = "0x256D8A4", VA = "0x256D8A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1913C", Offset = "0xC1913C")]
		remove
		{
		}
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x256D9F0", Offset = "0x256D9F0", VA = "0x256D9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x256DA7C", Offset = "0x256DA7C", VA = "0x256DA7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x256EE78", Offset = "0x256EE78", VA = "0x256EE78")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x256EEA8", Offset = "0x256EEA8", VA = "0x256EEA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x256EFE8", Offset = "0x256EFE8", VA = "0x256EFE8")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x256F254", Offset = "0x256F254", VA = "0x256F254", Slot = "4")]
	public override TerrainDescriptor GetTerrainDescriptor()
	{
		return default(TerrainDescriptor);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x256DBEC", Offset = "0x256DBEC", VA = "0x256DBEC")]
	public void Sync()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x256F858", Offset = "0x256F858", VA = "0x256F858", Slot = "5")]
	public override Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x256B49C", Offset = "0x256B49C", VA = "0x256B49C")]
	public new static void SyncAll()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x256FB14", Offset = "0x256FB14", VA = "0x256FB14")]
	public MicroSplatTerrain()
	{
	}
}
[Token(Token = "0x20000A8")]
[ExecuteInEditMode]
public class ShurikenToSpritesheetGameViewGuide : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Vector2 position;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52894")]
	public Vector2 size;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1F76000", Offset = "0x1F76000", VA = "0x1F76000")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1F76460", Offset = "0x1F76460", VA = "0x1F76460")]
	public ShurikenToSpritesheetGameViewGuide()
	{
	}
}
[Token(Token = "0x20000A9")]
public class StormVFXTerrainDemoCamera : MonoBehaviour
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float moveSpeed;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float height;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE6C9C", Offset = "0xBE6C9C")]
	public float acceleration;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7CFA")]
	public float deceleration;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 velocity;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1F36198", Offset = "0x1F36198", VA = "0x1F36198")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1F361AC", Offset = "0x1F361AC", VA = "0x1F361AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1F36B0C", Offset = "0x1F36B0C", VA = "0x1F36B0C")]
	public StormVFXTerrainDemoCamera()
	{
	}
}
[Token(Token = "0x20000AA")]
public class StormVFXTerrainDemoFollowTargetPosition : MonoBehaviour
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5289C")]
	public Transform target;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1F36B90", Offset = "0x1F36B90", VA = "0x1F36B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1F36BA4", Offset = "0x1F36BA4", VA = "0x1F36BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1F36BB8", Offset = "0x1F36BB8", VA = "0x1F36BB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1F36C48", Offset = "0x1F36C48", VA = "0x1F36C48")]
	public StormVFXTerrainDemoFollowTargetPosition()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ParticleSystemTimeRemap : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] startTimes;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] simulationTimes;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D02")]
	public float startTime;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float simulationSpeedScale;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528A4")]
	public bool useFixedDeltaTime;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool gameObjectDeactivated;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool reverseSimulation;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float elapsedTime;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0A")]
	public AnimationCurve simulationSpeedOverTime;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x19E40C0", Offset = "0x19E40C0", VA = "0x19E40C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x19E4574", Offset = "0x19E4574", VA = "0x19E4574")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x19E4668", Offset = "0x19E4668", VA = "0x19E4668")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x19E4F20", Offset = "0x19E4F20", VA = "0x19E4F20")]
	public ParticleSystemTimeRemap()
	{
	}
}
[Token(Token = "0x20000AC")]
public class RewindParticleSystem : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528AC")]
	private float[] startTimes;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] simulationTimes;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float startTime;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float simulationSpeedScale;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D12")]
	public bool useFixedDeltaTime;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private bool gameObjectDeactivated;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1F59088", Offset = "0x1F59088", VA = "0x1F59088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1F5952C", Offset = "0x1F5952C", VA = "0x1F5952C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1F59620", Offset = "0x1F59620", VA = "0x1F59620")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1F59CF8", Offset = "0x1F59CF8", VA = "0x1F59CF8")]
	public RewindParticleSystem()
	{
	}
}
[Token(Token = "0x20000AD")]
public class RewindParticleSystemSimple : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528B4")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float simulationTime;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float startTime;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float internalStartTime;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D1A")]
	private bool gameObjectDeactivated;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float simulationSpeed;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528BC")]
	public bool useFixedDeltaTime;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool rewind;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1F59D6C", Offset = "0x1F59D6C", VA = "0x1F59D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1F5A040", Offset = "0x1F5A040", VA = "0x1F5A040")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1F5A134", Offset = "0x1F5A134", VA = "0x1F5A134")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1F5A5D8", Offset = "0x1F5A5D8", VA = "0x1F5A5D8")]
	public RewindParticleSystemSimple()
	{
	}
}
[Token(Token = "0x20000AE")]
public class RewindParticleSystemSuperSimple : MonoBehaviour
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] simulationTimes;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D22")]
	public float startTime;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float simulationSpeedScale;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1F5A65C", Offset = "0x1F5A65C", VA = "0x1F5A65C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1F5A73C", Offset = "0x1F5A73C", VA = "0x1F5A73C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1F5A8C4", Offset = "0x1F5A8C4", VA = "0x1F5A8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1F5AF60", Offset = "0x1F5AF60", VA = "0x1F5AF60")]
	public RewindParticleSystemSuperSimple()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ParticleForceFieldsDemo : MonoBehaviour
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528C4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6CD8", Offset = "0xBE6CD8")]
	public Text FPSText;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text particleCountText;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Toggle postProcessingToggle;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MonoBehaviour postProcessing;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6D3C", Offset = "0xBE6D3C")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528CC")]
	private ParticleSystem.EmissionModule particleSystemEmissionModule;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text maxParticlesText;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text particlesPerSecondText;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider maxParticlesSlider;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D32")]
	public Slider particlesPerSecondSlider;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6DA0", Offset = "0xBE6DA0")]
	public AttractionParticleForceField attractionParticleForceField;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528D4")]
	public Text attractionParticleForceFieldRadiusText;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text attractionParticleForceFieldMaxForceText;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text attractionParticleForceFieldArrivalRadiusText;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text attractionParticleForceFieldArrivedRadiusText;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D3A")]
	public Text attractionParticleForceFieldPositionTextX;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Text attractionParticleForceFieldPositionTextY;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528DC")]
	public Text attractionParticleForceFieldPositionTextZ;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider attractionParticleForceFieldRadiusSlider;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider attractionParticleForceFieldMaxForceSlider;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider attractionParticleForceFieldArrivalRadiusSlider;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D42")]
	public Slider attractionParticleForceFieldArrivedRadiusSlider;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Slider attractionParticleForceFieldPositionSliderX;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4C5E4")]
	public Slider attractionParticleForceFieldPositionSliderY;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider attractionParticleForceFieldPositionSliderZ;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6E04", Offset = "0xBE6E04")]
	public VortexParticleForceField vortexParticleForceField;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text vortexParticleForceFieldRadiusText;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D48")]
	public Text vortexParticleForceFieldMaxForceText;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Text vortexParticleForceFieldRotationTextX;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEE4")]
	public Text vortexParticleForceFieldRotationTextY;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text vortexParticleForceFieldRotationTextZ;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text vortexParticleForceFieldPositionTextX;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text vortexParticleForceFieldPositionTextY;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D4F")]
	public Text vortexParticleForceFieldPositionTextZ;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Slider vortexParticleForceFieldRadiusSlider;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528E4")]
	public Slider vortexParticleForceFieldMaxForceSlider;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider vortexParticleForceFieldRotationSliderX;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider vortexParticleForceFieldRotationSliderY;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider vortexParticleForceFieldRotationSliderZ;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D57")]
	public Slider vortexParticleForceFieldPositionSliderX;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Slider vortexParticleForceFieldPositionSliderY;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528EC")]
	public Slider vortexParticleForceFieldPositionSliderZ;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x19E02EC", Offset = "0x19E02EC", VA = "0x19E02EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x19E12DC", Offset = "0x19E12DC", VA = "0x19E12DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x19E1480", Offset = "0x19E1480", VA = "0x19E1480")]
	public void ReloadScene()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x19E15C8", Offset = "0x19E15C8", VA = "0x19E15C8")]
	public void SetMaxParticles(float value)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x19E16EC", Offset = "0x19E16EC", VA = "0x19E16EC")]
	public void SetParticleEmissionPerSecond(float value)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x19E184C", Offset = "0x19E184C", VA = "0x19E184C")]
	public void SetAttractionParticleForceFieldRadius(float value)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x19E196C", Offset = "0x19E196C", VA = "0x19E196C")]
	public void SetAttractionParticleForceFieldMaxForce(float value)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x19E1A8C", Offset = "0x19E1A8C", VA = "0x19E1A8C")]
	public void SetAttractionParticleForceFieldArrivalRadius(float value)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x19E1BAC", Offset = "0x19E1BAC", VA = "0x19E1BAC")]
	public void SetAttractionParticleForceFieldArrivedRadius(float value)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x19E1CCC", Offset = "0x19E1CCC", VA = "0x19E1CCC")]
	public void SetAttractionParticleForceFieldPositionX(float value)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x19E1E68", Offset = "0x19E1E68", VA = "0x19E1E68")]
	public void SetAttractionParticleForceFieldPositionY(float value)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x19E2004", Offset = "0x19E2004", VA = "0x19E2004")]
	public void SetAttractionParticleForceFieldPositionZ(float value)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x19E21A0", Offset = "0x19E21A0", VA = "0x19E21A0")]
	public void SetVortexParticleForceFieldRadius(float value)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x19E22C0", Offset = "0x19E22C0", VA = "0x19E22C0")]
	public void SetVortexParticleForceFieldMaxForce(float value)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x19E23E0", Offset = "0x19E23E0", VA = "0x19E23E0")]
	public void SetVortexParticleForceFieldRotationX(float value)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x19E257C", Offset = "0x19E257C", VA = "0x19E257C")]
	public void SetVortexParticleForceFieldRotationY(float value)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x19E2718", Offset = "0x19E2718", VA = "0x19E2718")]
	public void SetVortexParticleForceFieldRotationZ(float value)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x19E28B4", Offset = "0x19E28B4", VA = "0x19E28B4")]
	public void SetVortexParticleForceFieldPositionX(float value)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x19E2A50", Offset = "0x19E2A50", VA = "0x19E2A50")]
	public void SetVortexParticleForceFieldPositionY(float value)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x19E2BEC", Offset = "0x19E2BEC", VA = "0x19E2BEC")]
	public void SetVortexParticleForceFieldPositionZ(float value)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x19E2D88", Offset = "0x19E2D88", VA = "0x19E2D88")]
	public ParticleForceFieldsDemo()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ParticleForceFieldsDemo_CameraRig : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pivot;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 targetRotation;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6E68", Offset = "0xBE6E68")]
	public float rotationLimit;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D5F")]
	public float rotationSpeed;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float rotationLerpSpeed;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528F4")]
	private Vector3 startRotation;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x19E2DB8", Offset = "0x19E2DB8", VA = "0x19E2DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x19E2E60", Offset = "0x19E2E60", VA = "0x19E2E60")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x19E3328", Offset = "0x19E3328", VA = "0x19E3328")]
	public ParticleForceFieldsDemo_CameraRig()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ParticlePlexusDemo_CameraRig : MonoBehaviour
{
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pivot;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 targetRotation;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6EB0", Offset = "0xBE6EB0")]
	public float rotationLimit;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D67")]
	public float rotationSpeed;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float rotationLerpSpeed;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD528FC")]
	private Vector3 startRotation;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x19E3ADC", Offset = "0x19E3ADC", VA = "0x19E3ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x19E3B84", Offset = "0x19E3B84", VA = "0x19E3B84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x19E404C", Offset = "0x19E404C", VA = "0x19E404C")]
	public ParticlePlexusDemo_CameraRig()
	{
	}
}
[Token(Token = "0x20000B2")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6EF8", Offset = "0xBE6EF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6EF8", Offset = "0xBE6EF8")]
	public float WindSpeed;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6FA4", Offset = "0xBE6FA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6FA4", Offset = "0xBE6FA4")]
	public float Turbulence;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7038", Offset = "0xBE7038")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7038", Offset = "0xBE7038")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D6F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE70E4", Offset = "0xBE70E4")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7148", Offset = "0xBE7148")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52904")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE71AC", Offset = "0xBE71AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE71AC", Offset = "0xBE71AC")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7258", Offset = "0xBE7258")]
	public float GustWorldSize;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE72BC", Offset = "0xBE72BC")]
	public float GustSpeed;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7320", Offset = "0xBE7320")]
	public float GustScale;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x19D8978", Offset = "0x19D8978", VA = "0x19D8978")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x19D8C38", Offset = "0x19D8C38", VA = "0x19D8C38")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x19D8C68", Offset = "0x19D8C68", VA = "0x19D8C68")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x19D89A8", Offset = "0x19D89A8", VA = "0x19D89A8")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x19D8C98", Offset = "0x19D8C98", VA = "0x19D8C98")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x19D8E10", Offset = "0x19D8E10", VA = "0x19D8E10")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2700", Offset = "0xBD2700")]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D77")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5290C")]
	public List<Vector3> points;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distSmooth;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D7F")]
	public float uvScale;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distSmoothStart;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52914")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int currentSplatMap;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maximumTriangleSize;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float traingleDensity;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D87")]
	public float height;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool lockHeight;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5291C")]
	public float yOffset;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float trianglesGenerated;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Mesh currentMesh;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1AF8C50", Offset = "0x1AF8C50", VA = "0x1AF8C50")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1AF8D00", Offset = "0x1AF8D00", VA = "0x1AF8D00")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1AF9504", Offset = "0x1AF9504", VA = "0x1AF9504")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1AF95C4", Offset = "0x1AF95C4", VA = "0x1AF95C4")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1AF96BC", Offset = "0x1AF96BC", VA = "0x1AF96BC")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1AF97E4", Offset = "0x1AF97E4", VA = "0x1AF97E4")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1AF9E80", Offset = "0x1AF9E80", VA = "0x1AF9E80")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1AFBD20", Offset = "0x1AFBD20", VA = "0x1AFBD20")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1AFB828", Offset = "0x1AFB828", VA = "0x1AFB828")]
	private void DisplayCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1AFC020", Offset = "0x1AFC020", VA = "0x1AFC020")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1AFC1C0", Offset = "0x1AFC1C0", VA = "0x1AFC1C0")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1AFCA20", Offset = "0x1AFCA20", VA = "0x1AFCA20")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD27B0", Offset = "0xBD27B0")]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material lakeMaterial;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D8F")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distSmooth;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52924")]
	public float uvScale;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distSmoothStart;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int currentSplatMap;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D97")]
	public float maximumTriangleSize;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float traingleDensity;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5292C")]
	public int biomeType;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1AFCE5C", Offset = "0x1AFCE5C", VA = "0x1AFCE5C")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float height;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float threshold;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoColor;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D9F")]
	public bool newMesh;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Vector3 oldPosition;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x21ECB9C", Offset = "0x21ECB9C", VA = "0x21ECB9C")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD286C", Offset = "0xBD286C")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEEC")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SplineProfile oldProfile;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DA6")]
	public RamSpline beginningSpline;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public RamSpline endingSpline;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52934")]
	public int beginningConnectionID;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int endingConnectionID;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float beginningMinWidth;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float beginningMaxWidth;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DAE")]
	public float endingMinWidth;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float endingMaxWidth;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5293C")]
	public int toolbarInt;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool invertUVDirection;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool uvRotation;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DB6")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52944")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DBE")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5294C")]
	public bool normalFromRaycast;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool snapToTerrain;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask snapMask;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> points;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DC6")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52954")]
	public List<Vector3> points2;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DCE")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public List<float> widths;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5295C")]
	public List<float> snaps;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<float> lerpValues;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Quaternion> orientations;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> tangents;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DD6")]
	public List<Vector3> normalsList;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Color[] colors;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52964")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool generateOnStart;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minVal;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maxVal;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DDE")]
	public float width;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int vertsInShape;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5296C")]
	public float traingleDensity;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float uvScale;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material oldMaterial;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool showVertexColors;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DE6")]
	public bool showFlowMap;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool overrideFlowMap;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52974")]
	public bool drawOnMesh;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool uvScaleOverride;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool debug;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DEE")]
	public Color drawColor;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool drawOnMultiple;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5297C")]
	public float flowSpeed;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float flowDirection;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DF6")]
	public float opacity;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float drawSize;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEF4")]
	public float length;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fulllength;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minMaxWidth;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float uvWidth;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DFD")]
	public float uvBeginning;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool receiveShadows;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52984")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool generateMeshParts;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int meshPartsCount;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E05")]
	public float simulatedRiverLength;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int simulatedRiverPoints;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5298C")]
	public float simulationMinStepSize;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int detailTerrain;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int detailTerrainForward;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0D")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52994")]
	public float distSmooth;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distSmoothStart;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int currentSplatMap;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x2815644", Offset = "0x2815644", VA = "0x2815644")]
	public void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x28177A0", Offset = "0x28177A0", VA = "0x28177A0")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions)
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x2817AA0", Offset = "0x2817AA0", VA = "0x2817AA0")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x2817E9C", Offset = "0x2817E9C", VA = "0x2817E9C")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x2818A54", Offset = "0x2818A54", VA = "0x2818A54")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x2818B38", Offset = "0x2818B38", VA = "0x2818B38")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x2818C94", Offset = "0x2818C94", VA = "0x2818C94")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x2818E40", Offset = "0x2818E40", VA = "0x2818E40")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x2818F68", Offset = "0x2818F68", VA = "0x2818F68")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x281979C", Offset = "0x281979C", VA = "0x281979C")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x28156A4", Offset = "0x28156A4", VA = "0x28156A4")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x2819E7C", Offset = "0x2819E7C", VA = "0x2819E7C")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x281B2E4", Offset = "0x281B2E4", VA = "0x281B2E4")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x281BC90", Offset = "0x281BC90", VA = "0x281BC90")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x28239FC", Offset = "0x28239FC", VA = "0x28239FC")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x2822A9C", Offset = "0x2822A9C", VA = "0x2822A9C")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x28217C8", Offset = "0x28217C8", VA = "0x28217C8")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x2821968", Offset = "0x2821968", VA = "0x2821968")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x28221C8", Offset = "0x28221C8", VA = "0x28221C8")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x28228D4", Offset = "0x28228D4", VA = "0x28228D4")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x281C420", Offset = "0x281C420", VA = "0x281C420")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x2823FCC", Offset = "0x2823FCC", VA = "0x2823FCC")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x2823E3C", Offset = "0x2823E3C", VA = "0x2823E3C")]
	private float FlowCalculate(float u, float normalY)
	{
		return default(float);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x2825BBC", Offset = "0x2825BBC", VA = "0x2825BBC")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD291C", Offset = "0xBD291C")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E15")]
	public Material splineMaterial;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5299C")]
	public float minVal;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maxVal;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vertsInShape;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float traingleDensity;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E1D")]
	public float uvScale;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool uvRotation;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529A4")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distSmooth;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E25")]
	public float distSmoothStart;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529AC")]
	public bool receiveShadows;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int biomeType;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1F32E74", Offset = "0x1F32E74", VA = "0x1F32E74")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ColorPicker_Material : MonoBehaviour
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material targetSharedMaterial;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E2D")]
	public Texture2D colorPickerTexture;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int guiTextureX;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529B4")]
	public int guiTextureY;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int guiTextureWidth;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int guiTextureHeight;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x21AC708", Offset = "0x21AC708", VA = "0x21AC708")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x21ACA54", Offset = "0x21ACA54", VA = "0x21ACA54")]
	public ColorPicker_Material()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD29D8", Offset = "0xBD29D8")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E35")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float distance;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529BC")]
	public float maxDistance;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minDistance;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float xSpeed;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ySpeed;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E3D")]
	public int yMinLimit;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int yMaxLimit;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529C4")]
	public int zoomRate;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float panSpeed;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float zoomDampening;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float autoRotate;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E45")]
	private float xDeg;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float yDeg;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529CC")]
	private float currentDistance;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float desiredDistance;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E4D")]
	private Quaternion rotation;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector3 position;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CEFC")]
	private float idleTimer;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float idleSmooth;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1F26F04", Offset = "0x1F26F04", VA = "0x1F26F04")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1F27728", Offset = "0x1F27728", VA = "0x1F27728")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1F26F34", Offset = "0x1F26F34", VA = "0x1F26F34")]
	public void Init()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1F27758", Offset = "0x1F27758", VA = "0x1F27758")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1F285F4", Offset = "0x1F285F4", VA = "0x1F285F4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1F287AC", Offset = "0x1F287AC", VA = "0x1F287AC")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x20000BA")]
public class DynamicRayChanger : MonoBehaviour
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject dragObj;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] Rays;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1C219FC", Offset = "0x1C219FC", VA = "0x1C219FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1C22040", Offset = "0x1C22040", VA = "0x1C22040")]
	public void LoadScene(int i)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1C22134", Offset = "0x1C22134", VA = "0x1C22134")]
	public DynamicRayChanger()
	{
	}
}
[Token(Token = "0x20000BB")]
public class RayHandler : MonoBehaviour
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E54")]
	public List<RayDesigner> Rays;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int UseRay;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529D4")]
	public Transform Hand;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 StandardTargetPoint;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 MousePosDelayed;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Animator animator;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E5C")]
	private Vector3 NormalPos;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1F56690", Offset = "0x1F56690", VA = "0x1F56690")]
	public void LoadScene(int i)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1F56784", Offset = "0x1F56784", VA = "0x1F56784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1F56A8C", Offset = "0x1F56A8C", VA = "0x1F56A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1F579D0", Offset = "0x1F579D0", VA = "0x1F579D0")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1F57A90", Offset = "0x1F57A90", VA = "0x1F57A90")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1F57B50", Offset = "0x1F57B50", VA = "0x1F57B50")]
	public RayHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class RayData
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public RayDesigner.FaceMode faceMode;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529DC")]
	public GameObject RayHolder;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshFilter meshFilter;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material Mat;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E64")]
	public int Steps;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public int Sides;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529E4")]
	public AnimationCurve Shape;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimationCurve AmplitudeMask;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float WidthAmplitude;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TextureSpeed;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E6C")]
	public float DistortionSpeed;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ParticleSystem StartEffects;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529EC")]
	public ParticleSystem HitEffects;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem EndEffects;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light PointLights;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh mesh;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E74")]
	private Quaternion dir;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float lower;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529F4")]
	private float Width;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int index;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] Vertices;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] Normals;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E7C")]
	private Vector2[] UVs;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int[] Triangles;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD529FC")]
	private Color[] VertColor;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x2826884", Offset = "0x2826884", VA = "0x2826884")]
	public Mesh CreateMesh(Transform _parent, Vector3[] _BezierPoints, float _Fade)
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x283B434", Offset = "0x283B434", VA = "0x283B434")]
	public RayData()
	{
	}
}
[Token(Token = "0x20000BD")]
[ExecuteInEditMode]
public class RayDesigner : MonoBehaviour
{
	[Token(Token = "0x2000570")]
	public enum FaceMode
	{
		[Token(Token = "0x400278B")]
		Camera,
		[Token(Token = "0x400278C")]
		Cross,
		[Token(Token = "0x400278D")]
		Horizontal,
		[Token(Token = "0x400278E")]
		Vertical,
		[Token(Token = "0x400278F")]
		Tube,
		[Token(Token = "0x4002790")]
		CameraSymmetric,
		[Token(Token = "0x4002791")]
		CrossSymmetric,
		[Token(Token = "0x4002792")]
		HorizontalSymmetric,
		[Token(Token = "0x4002793")]
		VerticalSymmetric
	}

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<RayData> Rays;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject StartPoint;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject EndPoint;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E84")]
	public GameObject ControlPointOne;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject ControlPointTwo;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A04")]
	public bool RayIsActive;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool Simulate;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsDynamic;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float FadeIn;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E8C")]
	private float FadeTarget;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float FadeSpeed;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A0C")]
	public ParticleSystem StartEffect;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem HitEffect;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light StartLight;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light EndLight;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E94")]
	public AnimationCurve StartLightIntensityOverTime;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public AnimationCurve EndLightIntensityOverTime;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A14")]
	private RayDesignerBezier b;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh MeshBuffer;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] BezierPoints;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float time;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E9C")]
	private float step;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Color ColorBuffer;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A1C")]
	private Vector2 Offset1;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 Offset2;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ActiveOnStart;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1F4FDCC", Offset = "0x1F4FDCC", VA = "0x1F4FDCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1F503C0", Offset = "0x1F503C0", VA = "0x1F503C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1F50654", Offset = "0x1F50654", VA = "0x1F50654")]
	public void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1F51E6C", Offset = "0x1F51E6C", VA = "0x1F51E6C")]
	private void CheckPoints()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1F525AC", Offset = "0x1F525AC", VA = "0x1F525AC")]
	public void CalculateBezier(Vector3 _SP, Vector3 _EP, Vector3 _CP1, Vector3 _CP2, int _Steps)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1F52978", Offset = "0x1F52978", VA = "0x1F52978")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1F539A4", Offset = "0x1F539A4", VA = "0x1F539A4")]
	public void AddRay()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1F54190", Offset = "0x1F54190", VA = "0x1F54190")]
	public void DuplicateRay(int _index)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1F550BC", Offset = "0x1F550BC", VA = "0x1F550BC")]
	public void RemoveRay()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1F50168", Offset = "0x1F50168", VA = "0x1F50168")]
	public void Show()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1F50434", Offset = "0x1F50434", VA = "0x1F50434")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1F55320", Offset = "0x1F55320", VA = "0x1F55320")]
	public void UpdateTargetPosition(Vector3 _TargetPoint, Vector3 _ControlPoint)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1F55424", Offset = "0x1F55424", VA = "0x1F55424")]
	public void UpdateStartPosition(Vector3 _TargetPoint, Vector3 _ControlPoint)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1F54DB4", Offset = "0x1F54DB4", VA = "0x1F54DB4")]
	private AnimationCurve CopyAnimationCurve(AnimationCurve _AnimationCurve)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1F55528", Offset = "0x1F55528", VA = "0x1F55528")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1F55908", Offset = "0x1F55908", VA = "0x1F55908")]
	public RayDesigner()
	{
	}
}
[Token(Token = "0x20000BE")]
public class RayDesignerBezier
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 p0;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 p1;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 p2;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EB3")]
	public Vector3 p3;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float ti;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A2C")]
	private Vector3 b0;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 b1;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 b2;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 b3;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EBB")]
	private float Ax;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float Ay;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A34")]
	private float Az;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float Bx;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float By;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float Bz;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EC3")]
	private float Cx;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float Cy;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A3C")]
	private float Cz;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float u;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tt;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float uu;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7ECB")]
	private float uuu;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float ttt;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1F532DC", Offset = "0x1F532DC", VA = "0x1F532DC")]
	public RayDesignerBezier(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1F53588", Offset = "0x1F53588", VA = "0x1F53588")]
	public Vector3 GetPointAtTime(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1F5600C", Offset = "0x1F5600C", VA = "0x1F5600C")]
	private void SetConstant()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1F55B80", Offset = "0x1F55B80", VA = "0x1F55B80")]
	private void CheckConstant()
	{
	}
}
[Token(Token = "0x20000BF")]
public class CamControl2 : MonoBehaviour
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A44")]
	public Transform target;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float height;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distanceMin;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distanceMax;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7ED3")]
	public float xSpeed;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float ySpeed;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A4C")]
	private float distance;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float xAngle;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float yAngle;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x21897AC", Offset = "0x21897AC", VA = "0x21897AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x2189DD4", Offset = "0x2189DD4", VA = "0x2189DD4")]
	public CamControl2()
	{
	}
}
[Token(Token = "0x20000C0")]
public class DetectHit : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ForceField forceField;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1BD1E40", Offset = "0x1BD1E40", VA = "0x1BD1E40")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1BD1EB8", Offset = "0x1BD1EB8", VA = "0x1BD1EB8")]
	public void PointHit(Vector3 point)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1BD2478", Offset = "0x1BD2478", VA = "0x1BD2478")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1BD2B38", Offset = "0x1BD2B38", VA = "0x1BD2B38")]
	public DetectHit()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ForceField : MonoBehaviour
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EDB")]
	public GameObject[] underShield;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Material materialShield;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A54")]
	public float brightnessCollision;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fadingGlow;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float armor;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float speedOnOff;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EE3")]
	public Vector4 speedOffset;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public bool sphere;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A5C")]
	public float sphereScale;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 spherePosition;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public float mTime;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Color shieldColor;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EEB")]
	[HideInInspector]
	public bool hit;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[HideInInspector]
	public bool hit2;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A64")]
	[HideInInspector]
	public MeshRenderer[] mesh;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int i;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float shieldA;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject sp;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EF3")]
	private bool activ;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector4 offset;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1ADB2E8", Offset = "0x1ADB2E8", VA = "0x1ADB2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1ADBE70", Offset = "0x1ADBE70", VA = "0x1ADBE70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1ADB318", Offset = "0x1ADB318", VA = "0x1ADB318")]
	public void CreateForceField()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1ADD164", Offset = "0x1ADD164", VA = "0x1ADD164")]
	public void DestroyForceField()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1ADD81C", Offset = "0x1ADD81C", VA = "0x1ADD81C")]
	public ForceField()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Hologram : MonoBehaviour
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A6C")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 speedOffset;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector4 offset;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material[] material;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7EFB")]
	private float camDistance;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1AE7EEC", Offset = "0x1AE7EEC", VA = "0x1AE7EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1AE80F0", Offset = "0x1AE80F0", VA = "0x1AE80F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1AE8674", Offset = "0x1AE8674", VA = "0x1AE8674")]
	public Hologram()
	{
	}
}
[Token(Token = "0x20000C3")]
public class Pointer2 : MonoBehaviour
{
	[Token(Token = "0x600043E")]
	[Address(RVA = "0x19E61DC", Offset = "0x19E61DC", VA = "0x19E61DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x19E6210", Offset = "0x19E6210", VA = "0x19E6210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x19E62F4", Offset = "0x19E62F4", VA = "0x19E62F4")]
	public Pointer2()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TestBox2 : MonoBehaviour
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public float damage;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x29D0064", Offset = "0x29D0064", VA = "0x29D0064")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x29D034C", Offset = "0x29D034C", VA = "0x29D034C")]
	public TestBox2()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TestScene2 : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4CF0C")]
	public GameObject cam1;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject cam2;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ForceField forceField;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefab;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F02")]
	private List<GameObject> obj;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float r;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A74")]
	private bool createBox2;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool createBox;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeBox;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x29D03D4", Offset = "0x29D03D4", VA = "0x29D03D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x29D045C", Offset = "0x29D045C", VA = "0x29D045C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x29D0A24", Offset = "0x29D0A24", VA = "0x29D0A24")]
	private void CreateObjectA()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x29D0C90", Offset = "0x29D0C90", VA = "0x29D0C90")]
	private void CreateObjectB()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x29D22D8", Offset = "0x29D22D8", VA = "0x29D22D8")]
	private void CreateLineY(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x29D2068", Offset = "0x29D2068", VA = "0x29D2068")]
	private void CreateLineX(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x29D177C", Offset = "0x29D177C", VA = "0x29D177C")]
	private void CreateSquare(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x29D2548", Offset = "0x29D2548", VA = "0x29D2548")]
	public TestScene2()
	{
	}
}
[Token(Token = "0x20000C6")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBD2A78", Offset = "0xBD2A78")]
public class DependsOnAttribute : PropertyAttribute
{
	[Token(Token = "0x2000571")]
	public enum ComparisonType
	{
		[Token(Token = "0x4002795")]
		Equality,
		[Token(Token = "0x4002796")]
		GreaterThan,
		[Token(Token = "0x4002797")]
		SmallerThan,
		[Token(Token = "0x4002798")]
		NonEquality
	}

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string propertyToCompare;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0A")]
	public object valueToCompare;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public ComparisonType comparisonType;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1BD1DC8", Offset = "0x1BD1DC8", VA = "0x1BD1DC8")]
	public DependsOnAttribute(string propertyToCompare, [Optional] object valueToCompare, ComparisonType comparisonType = ComparisonType.Equality)
	{
	}
}
[Token(Token = "0x20000C7")]
public class StagitEarthSkyboxDemo : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public Material[] skyBoxMaterial;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A84")]
	public Vector3[] sunPosition;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int skyBoxLength;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int currentSkyBoxIndex;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string topText;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F1A")]
	private float counter;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int frames;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A8C")]
	private float fps;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle whiteStyle;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle blackStyle;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject sun;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1F34064", Offset = "0x1F34064", VA = "0x1F34064")]
	private void Start()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1F34280", Offset = "0x1F34280", VA = "0x1F34280")]
	public void nextSkybox()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1F34454", Offset = "0x1F34454", VA = "0x1F34454")]
	private void Update()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1F347CC", Offset = "0x1F347CC", VA = "0x1F347CC", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1F34B08", Offset = "0x1F34B08", VA = "0x1F34B08")]
	private static void DrawText(string text, TextAnchor anchor, int offsetX = 15, int offsetY = 15)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1F35458", Offset = "0x1F35458", VA = "0x1F35458")]
	public StagitEarthSkyboxDemo()
	{
	}
}
[Token(Token = "0x20000C8")]
public class skyboxspace_mouselook_v1 : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F22")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A94")]
	public Vector2 clampInDegrees;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 sensitivity;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 smoothing;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 targetDirection;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F2A")]
	public Vector2 targetCharacterDirection;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public GameObject characterBody;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52A9C")]
	private float minFov;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float maxFov;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float zoomsensitivity;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1915754", Offset = "0x1915754", VA = "0x1915754")]
	private void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1915A30", Offset = "0x1915A30", VA = "0x1915A30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1916C34", Offset = "0x1916C34", VA = "0x1916C34")]
	public skyboxspace_mouselook_v1()
	{
	}
}
[Token(Token = "0x20000C9")]
public class skyboxspace_demo_v1 : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material[] skyBoxMaterial;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F32")]
	public Vector3[] sunPosition;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int skyBoxLength;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52AA4")]
	private int currentSkyBoxIndex;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string topText;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float counter;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int frames;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F3A")]
	private float fps;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private static GUIStyle whiteStyle;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52AAC")]
	private static GUIStyle blackStyle;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject sun;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1914600", Offset = "0x1914600", VA = "0x1914600")]
	private void Start()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1914768", Offset = "0x1914768", VA = "0x1914768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1914A98", Offset = "0x1914A98", VA = "0x1914A98", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1914DD4", Offset = "0x1914DD4", VA = "0x1914DD4")]
	private static void DrawText(string text, TextAnchor anchor, int offsetX = 15, int offsetY = 15)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1915724", Offset = "0x1915724", VA = "0x1915724")]
	public skyboxspace_demo_v1()
	{
	}
}
[Token(Token = "0x20000CA")]
public class AlphaButtonClickMask : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Image _image;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x2AC62CC", Offset = "0x2AC62CC", VA = "0x2AC62CC")]
	public void Start()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x2AC67DC", Offset = "0x2AC67DC", VA = "0x2AC67DC", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x2AC6FC4", Offset = "0x2AC6FC4", VA = "0x2AC6FC4")]
	public AlphaButtonClickMask()
	{
	}
}
[Token(Token = "0x20000CB")]
public class EventSystemChecker : MonoBehaviour
{
	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1C26E80", Offset = "0x1C26E80", VA = "0x1C26E80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1C27058", Offset = "0x1C27058", VA = "0x1C27058")]
	public EventSystemChecker()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2AB8", Offset = "0xBD2AB8")]
public class ForcedReset : MonoBehaviour
{
	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1ADD974", Offset = "0x1ADD974", VA = "0x1ADD974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1ADDB68", Offset = "0x1ADDB68", VA = "0x1ADDB68")]
	public ForcedReset()
	{
	}
}
[Token(Token = "0x20000CD")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1D6A85C", Offset = "0x1D6A85C", VA = "0x1D6A85C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1D6A870", Offset = "0x1D6A870", VA = "0x1D6A870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1D6A918", Offset = "0x1D6A918", VA = "0x1D6A918")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x20000CE")]
public class button_target : MonoBehaviour
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject MY_target;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F42")]
	private GameObject temp_target;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private GameObject[] ALL_target;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x24F04B4", Offset = "0x24F04B4", VA = "0x24F04B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x24F0700", Offset = "0x24F0700", VA = "0x24F0700")]
	private void Update()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x24F0714", Offset = "0x24F0714", VA = "0x24F0714")]
	public void ShowTarget()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x24F08C0", Offset = "0x24F08C0", VA = "0x24F08C0")]
	public button_target()
	{
	}
}
[Token(Token = "0x20000CF")]
public class demo : MonoBehaviour
{
	[Token(Token = "0x6000468")]
	[Address(RVA = "0x24F08F0", Offset = "0x24F08F0", VA = "0x24F08F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x24F0904", Offset = "0x24F0904", VA = "0x24F0904")]
	private void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x24F0918", Offset = "0x24F0918", VA = "0x24F0918")]
	public void GoURL_FX()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x24F099C", Offset = "0x24F099C", VA = "0x24F099C")]
	public void GoURL_Free()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x24F0A20", Offset = "0x24F0A20", VA = "0x24F0A20")]
	public demo()
	{
	}
}
[Token(Token = "0x20000D0")]
public class tazo_UVScroller : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD52AB4")]
	public int targetMaterialSlot;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Renderer myrender;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float speedY;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float speedX;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F4A")]
	private float timeWentX;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float timeWentY;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x3CE77DC", Offset = "0x3CE77DC", VA = "0x3CE77DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x3CE7868", Offset = "0x3CE7868", VA = "0x3CE7868")]
	private void Update()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x3CE7AA0", Offset = "0x3CE7AA0", VA = "0x3CE7AA0")]
	public tazo_UVScroller()
	{
	}
}
[Token(Token = "0x20000D1")]
public class tazo_rotate : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float rotate_x;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float rotate_y;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F63")]
	public float rotate_z;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x3CE7AE4", Offset = "0x3CE7AE4", VA = "0x3CE7AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x3CE7AF8", Offset = "0x3CE7AF8", VA = "0x3CE7AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x3CE7BE4", Offset = "0x3CE7BE4", VA = "0x3CE7BE4")]
	public tazo_rotate()
	{
	}
}
[Token(Token = "0x20000D2")]
public class LODPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000572")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AutomaticLOD m_automaticLOD;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_position;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F7B")]
		public Vector3 m_angles;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FB98")]
		public string m_description;

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x1AF5708", Offset = "0x1AF5708", VA = "0x1AF5708")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAD8", Offset = "0xBDEAD8")]
	private sealed class <ComputeLODWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LODPreview <>4__this;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F83")]
		public float fAmount;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBA8")]
		private AutomaticLOD <automaticLOD>5__3;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x1AF5608", Offset = "0x1AF5608", VA = "0x1AF5608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x1AF56D8", Offset = "0x1AF56D8", VA = "0x1AF56D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x1AF40D4", Offset = "0x1AF40D4", VA = "0x1AF40D4")]
		[DebuggerHidden]
		public <ComputeLODWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x1AF423C", Offset = "0x1AF423C", VA = "0x1AF423C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x1AF4468", Offset = "0x1AF4468", VA = "0x1AF4468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x1AF43D4", Offset = "0x1AF43D4", VA = "0x1AF43D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x1AF5638", Offset = "0x1AF5638", VA = "0x1AF5638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FB68")]
	public Material WireframeMaterial;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MouseSensitvity;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F6B")]
	private AutomaticLOD m_selectedAutomaticLOD;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FB78")]
	private bool m_bWireframe;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float m_fLastMouseX;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F73")]
	private int m_nLastProgress;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string m_strLastTitle;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FB88")]
	private string m_strLastMessage;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float m_fVertexAmount;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1AF1734", Offset = "0x1AF1734", VA = "0x1AF1734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1AF1D74", Offset = "0x1AF1D74", VA = "0x1AF1D74")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1AF1F7C", Offset = "0x1AF1F7C", VA = "0x1AF1F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1AF2B6C", Offset = "0x1AF2B6C", VA = "0x1AF2B6C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1AF19C4", Offset = "0x1AF19C4", VA = "0x1AF19C4")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1AF3CC4", Offset = "0x1AF3CC4", VA = "0x1AF3CC4")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1AF25E8", Offset = "0x1AF25E8", VA = "0x1AF25E8")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1AF3BE0", Offset = "0x1AF3BE0", VA = "0x1AF3BE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC19178", Offset = "0xC19178")]
	private IEnumerator ComputeLODWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1AF411C", Offset = "0x1AF411C", VA = "0x1AF411C")]
	public LODPreview()
	{
	}
}
[Token(Token = "0x20000D3")]
public class LODSampleLODScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000574")]
	public class SceneCamera
	{
		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera m_camera;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_near;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_far;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F9B")]
		[HideInInspector]
		public Vector3 m_v3InitialCameraPosition;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		[HideInInspector]
		public Vector3 m_v3ViewDir;

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x1AF83F4", Offset = "0x1AF83F4", VA = "0x1AF83F4")]
		public SceneCamera()
		{
		}
	}

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8B")]
	public SceneCamera[] SceneCameras;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material WireframeMaterial;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBB8")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SceneCamera m_selectedCamera;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool m_bWireframe;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<AutomaticLOD> m_sceneLODObjects;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F93")]
	private int m_nMaxLODLevels;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float m_fCurrentDistanceSlider;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBC8")]
	private int m_nCamMode;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1AF57EC", Offset = "0x1AF57EC", VA = "0x1AF57EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1AF6518", Offset = "0x1AF6518", VA = "0x1AF6518")]
	private void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1AF70F4", Offset = "0x1AF70F4", VA = "0x1AF70F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1AF61D0", Offset = "0x1AF61D0", VA = "0x1AF61D0")]
	private void SetActiveCamera(int index)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1AF67F0", Offset = "0x1AF67F0", VA = "0x1AF67F0")]
	private void UpdateCamera(float fPos)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1AF5D1C", Offset = "0x1AF5D1C", VA = "0x1AF5D1C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1AF6B70", Offset = "0x1AF6B70", VA = "0x1AF6B70")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1AF83C4", Offset = "0x1AF83C4", VA = "0x1AF83C4")]
	public LODSampleLODScene()
	{
	}
}
[Token(Token = "0x20000D4")]
public class LODSceneSelection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000575")]
	public class SceneOption
	{
		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public string m_sceneName;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBE8")]
		public string m_sceneDisplayName;

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x1AF8C20", Offset = "0x1AF8C20", VA = "0x1AF8C20")]
		public SceneOption()
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBD8")]
	public int BoxWidth;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int BoxHeight;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MarginH;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MarginV;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FA3")]
	public SceneOption[] SceneOptions;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1AF8424", Offset = "0x1AF8424", VA = "0x1AF8424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1AF8BA8", Offset = "0x1AF8BA8", VA = "0x1AF8BA8")]
	public LODSceneSelection()
	{
	}
}
[Token(Token = "0x20000D5")]
public class AutomaticLOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000576")]
	public enum EvalMode
	{
		[Token(Token = "0x40027AF")]
		CameraDistance,
		[Token(Token = "0x40027B0")]
		ScreenCoverage
	}

	[Serializable]
	[Token(Token = "0x2000577")]
	public enum LevelsToGenerate
	{
		[Token(Token = "0x40027B2")]
		_1 = 1,
		[Token(Token = "0x40027B3")]
		_2,
		[Token(Token = "0x40027B4")]
		_3,
		[Token(Token = "0x40027B5")]
		_4,
		[Token(Token = "0x40027B6")]
		_5,
		[Token(Token = "0x40027B7")]
		_6
	}

	[Serializable]
	[Token(Token = "0x2000578")]
	public enum SwitchMode
	{
		[Token(Token = "0x40027B9")]
		SwitchMesh,
		[Token(Token = "0x40027BA")]
		SwitchGameObject,
		[Token(Token = "0x40027BB")]
		UnityLODGroup
	}

	[Serializable]
	[Token(Token = "0x2000579")]
	public class LODLevelData
	{
		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fScreenCoverage;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fMaxCameraDistance;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FEB")]
		public float m_fMeshVerticesAmount;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public int m_nColorEditorBarIndex;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC78")]
		public Mesh m_mesh;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool m_bUsesOriginalMesh;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_gameObject;

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x2A71C5C", Offset = "0x2A71C5C", VA = "0x2A71C5C")]
		public LODLevelData GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x2A74CF0", Offset = "0x2A74CF0", VA = "0x2A74CF0")]
		public LODLevelData()
		{
		}
	}

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public EvalMode m_evalMode;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FAB")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public float m_fMaxCameraDistance;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FBF8")]
	[HideInInspector]
	public int m_nColorEditorBarNewIndex;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<LODLevelData> m_listLODLevels;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public AutomaticLOD m_LODObjectRoot;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<AutomaticLOD> m_listDependentChildren;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FB3")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC08")]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private LevelsToGenerate m_levelsToGenerate;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private SwitchMode m_switchMode;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FBB")]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLODDataDirty;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC18")]
	[SerializeField]
	[HideInInspector]
	private AutomaticLOD m_LODObjectRootPersist;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private LODGroup m_LODGroup;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool m_bUseAutomaticCameraLODSwitch;

	[Token(Token = "0x400077E")]
	private const int k_MaxLODChecksPerFrame = 4;

	[Token(Token = "0x400077F")]
	private const int k_MaxFrameCheckLoop = 100;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static int s_currentCheckIndex;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC28")]
	private static int s_currentFrameCheckIndex;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_checkLoopLength;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_lastFrameComputedModulus;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_currentFrameInLoop;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FCB")]
	private static Camera s_userDefinedCamera;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Camera m_renderCamera;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC38")]
	private int m_nCurrentLOD;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<Camera, int> m_cachedFrameLODLevel;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 m_localCenter;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] _corners;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD3")]
	private int m_frameToCheck;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool b_performCheck;

	[Token(Token = "0x1700001A")]
	public static Camera UserDefinedLODCamera
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x2A69FB4", Offset = "0x2A69FB4", VA = "0x2A69FB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x2A6A09C", Offset = "0x2A6A09C", VA = "0x2A6A09C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public SwitchMode LODSwitchMode
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x2A6A18C", Offset = "0x2A6A18C", VA = "0x2A6A18C")]
		get
		{
			return default(SwitchMode);
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x2A6A3B0", Offset = "0x2A6A3B0", VA = "0x2A6A3B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x2A6B950", Offset = "0x2A6B950", VA = "0x2A6B950")]
	private void Update()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x2A6D3BC", Offset = "0x2A6D3BC", VA = "0x2A6D3BC")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x2A6D3F8", Offset = "0x2A6D3F8", VA = "0x2A6D3F8")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x2A6D63C", Offset = "0x2A6D63C", VA = "0x2A6D63C")]
	public static bool IsRootOrBelongsToLODTree(AutomaticLOD automaticLOD, AutomaticLOD root)
	{
		return default(bool);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x2A6DA88", Offset = "0x2A6DA88", VA = "0x2A6DA88")]
	public int GetNumberOfLevelsToGenerate()
	{
		return default(int);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x2A6DAB8", Offset = "0x2A6DAB8", VA = "0x2A6DAB8")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x2A6DAFC", Offset = "0x2A6DAFC", VA = "0x2A6DAFC")]
	public bool IsRootAutomaticLOD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x2A6DC18", Offset = "0x2A6DC18", VA = "0x2A6DC18")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x2A6DD3C", Offset = "0x2A6DD3C", VA = "0x2A6DD3C")]
	public bool HasLODDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x2A6DD80", Offset = "0x2A6DD80", VA = "0x2A6DD80")]
	public bool SetLODDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x2A6DE14", Offset = "0x2A6DE14", VA = "0x2A6DE14")]
	public int GetLODLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x2A6DEEC", Offset = "0x2A6DEEC", VA = "0x2A6DEEC")]
	public float ComputeScreenCoverage(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x2A6AAD8", Offset = "0x2A6AAD8", VA = "0x2A6AAD8")]
	public Vector3 ComputeWorldCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x2A6F768", Offset = "0x2A6F768", VA = "0x2A6F768")]
	public float ComputeViewSpaceBounds(Vector3 v3CameraPos, Vector3 v3CameraDir, Vector3 v3CameraUp, out Vector3 v3Min, out Vector3 v3Max, out Vector3 v3Center)
	{
		return default(float);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x2A70830", Offset = "0x2A70830", VA = "0x2A70830")]
	public void SetAutomaticCameraLODSwitch(bool bEnabled)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x2A70950", Offset = "0x2A70950", VA = "0x2A70950")]
	private static void SetAutomaticCameraLODSwitchRecursive(AutomaticLOD root, GameObject gameObject, bool bEnabled)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x2A70D48", Offset = "0x2A70D48", VA = "0x2A70D48")]
	public void SetLODLevels(List<LODLevelData> listLODLevelData, EvalMode evalMode, float fMaxCameraDistance, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x2A71048", Offset = "0x2A71048", VA = "0x2A71048")]
	private static void SetLODLevelsRecursive(AutomaticLOD root, GameObject gameObject)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x2A727F0", Offset = "0x2A727F0", VA = "0x2A727F0")]
	public void AddLODLevel(int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x2A72968", Offset = "0x2A72968", VA = "0x2A72968")]
	public static void AddLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x2A74D20", Offset = "0x2A74D20", VA = "0x2A74D20")]
	public void RemoveLODLevel(int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x2A74E74", Offset = "0x2A74E74", VA = "0x2A74E74")]
	public static void RemoveLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x2A75D50", Offset = "0x2A75D50", VA = "0x2A75D50")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x2A75D80", Offset = "0x2A75D80", VA = "0x2A75D80")]
	public void ComputeLODData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x2A75E00", Offset = "0x2A75E00", VA = "0x2A75E00")]
	private void ComputeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x2A77510", Offset = "0x2A77510", VA = "0x2A77510")]
	public bool HasLODData()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x2A6CBD4", Offset = "0x2A6CBD4", VA = "0x2A6CBD4")]
	public int GetLODLevelUsingCamera(Camera currentCamera)
	{
		return default(int);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x2A776EC", Offset = "0x2A776EC", VA = "0x2A776EC")]
	public int GetCurrentLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x2A6D1AC", Offset = "0x2A6D1AC", VA = "0x2A6D1AC")]
	public void SwitchToLOD(int nLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x2A7771C", Offset = "0x2A7771C", VA = "0x2A7771C")]
	private static void SwitchToLODRecursive(AutomaticLOD root, GameObject gameObject, int nLODLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x2A78A3C", Offset = "0x2A78A3C", VA = "0x2A78A3C")]
	public void ComputeAllLODMeshes(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x2A7AAE0", Offset = "0x2A7AAE0", VA = "0x2A7AAE0")]
	public void ComputeLODMesh(int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x2A78CC4", Offset = "0x2A78CC4", VA = "0x2A78CC4")]
	private static void ComputeLODMeshRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x2A7AC2C", Offset = "0x2A7AC2C", VA = "0x2A7AC2C")]
	public void RestoreOriginalMesh(bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x2A7AE4C", Offset = "0x2A7AE4C", VA = "0x2A7AE4C")]
	private static void RestoreOriginalMeshRecursive(AutomaticLOD root, GameObject gameObject, bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x2A7BAB8", Offset = "0x2A7BAB8", VA = "0x2A7BAB8")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x2A7BBF4", Offset = "0x2A7BBF4", VA = "0x2A7BBF4")]
	private static bool HasOriginalMeshActiveRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x2A7C4D4", Offset = "0x2A7C4D4", VA = "0x2A7C4D4")]
	public bool HasVertexData(int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x2A7C620", Offset = "0x2A7C620", VA = "0x2A7C620")]
	private static bool HasVertexDataRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x2A7CDC8", Offset = "0x2A7CDC8", VA = "0x2A7CDC8")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x2A7CF00", Offset = "0x2A7CF00", VA = "0x2A7CF00")]
	private static void GetOriginalVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x2A7D420", Offset = "0x2A7D420", VA = "0x2A7D420")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x2A7D558", Offset = "0x2A7D558", VA = "0x2A7D558")]
	private static void GetOriginalTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x2A7DA98", Offset = "0x2A7DA98", VA = "0x2A7DA98")]
	public int GetCurrentVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x2A7DBD0", Offset = "0x2A7DBD0", VA = "0x2A7DBD0")]
	private static void GetCurrentVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x2A7E400", Offset = "0x2A7E400", VA = "0x2A7E400")]
	public int GetLODVertexCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x2A7E548", Offset = "0x2A7E548", VA = "0x2A7E548")]
	private static void GetLODVertexCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x2A7ECD4", Offset = "0x2A7ECD4", VA = "0x2A7ECD4")]
	public int GetLODTriangleCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x2A7EE1C", Offset = "0x2A7EE1C", VA = "0x2A7EE1C")]
	private static void GetLODTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x2A7F5F0", Offset = "0x2A7F5F0", VA = "0x2A7F5F0")]
	public void RemoveFromLODTree()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x2A773F0", Offset = "0x2A773F0", VA = "0x2A773F0")]
	public void FreeLODData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x2A7F76C", Offset = "0x2A7F76C", VA = "0x2A7F76C")]
	private static void FreeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x2A71DEC", Offset = "0x2A71DEC", VA = "0x2A71DEC")]
	private static Mesh CreateNewEmptyMesh(AutomaticLOD automaticLOD)
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x2A806B0", Offset = "0x2A806B0", VA = "0x2A806B0")]
	private static GameObject CreateBasicObjectCopy(GameObject gameObject, Mesh mesh, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x2A72014", Offset = "0x2A72014", VA = "0x2A72014")]
	private static void CheckForAdditionalLODSetup(AutomaticLOD root, AutomaticLOD automaticLOD, LODLevelData levelData, int level)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x2A7A228", Offset = "0x2A7A228", VA = "0x2A7A228")]
	public void SetupLODGroup()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x2A8109C", Offset = "0x2A8109C", VA = "0x2A8109C")]
	private static void SetupLODGroupRecursive(AutomaticLOD root, GameObject gameObject, ref List<List<Renderer>> renderers)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x2A8107C", Offset = "0x2A8107C", VA = "0x2A8107C")]
	private static Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x2A6EE5C", Offset = "0x2A6EE5C", VA = "0x2A6EE5C")]
	private void BuildCornerData(ref Vector3[] av3Corners, Bounds bounds)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x2A6B770", Offset = "0x2A6B770", VA = "0x2A6B770")]
	private bool IsDependent()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x2A81A7C", Offset = "0x2A81A7C", VA = "0x2A81A7C")]
	public AutomaticLOD()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057A")]
	public class ShowcaseObject
	{
		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_position;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_angles;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300B")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public string m_description;

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x1F251A4", Offset = "0x1F251A4", VA = "0x1F251A4")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB14", Offset = "0xBDEB14")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCB8")]
		private int <>1__state;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fAmount;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3013")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCC8")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1F250A4", Offset = "0x1F250A4", VA = "0x1F250A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x1F25174", Offset = "0x1F25174", VA = "0x1F25174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x1F23A2C", Offset = "0x1F23A2C", VA = "0x1F23A2C")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x1F23BAC", Offset = "0x1F23BAC", VA = "0x1F23BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x1F23DD8", Offset = "0x1F23DD8", VA = "0x1F23DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x1F23D44", Offset = "0x1F23D44", VA = "0x1F23D44")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x1F250D4", Offset = "0x1F250D4", VA = "0x1F250D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FF3")]
	public Material WireframeMaterial;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float MouseSensitvity;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC88")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FFB")]
	private bool m_bWireframe;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FC98")]
	private float m_fLastMouseX;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int m_nLastProgress;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string m_strLastTitle;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3003")]
	private string m_strLastMessage;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float m_fVertexAmount;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCA8")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1F20E14", Offset = "0x1F20E14", VA = "0x1F20E14")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1F21430", Offset = "0x1F21430", VA = "0x1F21430")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1F21638", Offset = "0x1F21638", VA = "0x1F21638")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1F2227C", Offset = "0x1F2227C", VA = "0x1F2227C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1F210A4", Offset = "0x1F210A4", VA = "0x1F210A4")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1F2361C", Offset = "0x1F2361C", VA = "0x1F2361C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1F21CF8", Offset = "0x1F21CF8", VA = "0x1F21CF8")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1F23538", Offset = "0x1F23538", VA = "0x1F23538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC19228", Offset = "0xC19228")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1F23A74", Offset = "0x1F23A74", VA = "0x1F23A74")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x20000D7")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301B")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCD8")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3023")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCE8")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x302B")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FCF8")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x1700001C")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x21ECCBC", Offset = "0x21ECCBC", VA = "0x21ECCBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x21ECD00", Offset = "0x21ECD00", VA = "0x21ECD00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x21ECD30", Offset = "0x21ECD30", VA = "0x21ECD30")]
		set
		{
		}
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x21ECD68", Offset = "0x21ECD68", VA = "0x21ECD68")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x21ECFAC", Offset = "0x21ECFAC", VA = "0x21ECFAC")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x21ED450", Offset = "0x21ED450", VA = "0x21ED450")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x21ED494", Offset = "0x21ED494", VA = "0x21ED494")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x21ED5B8", Offset = "0x21ED5B8", VA = "0x21ED5B8")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x21ED5FC", Offset = "0x21ED5FC", VA = "0x21ED5FC")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x21ED690", Offset = "0x21ED690", VA = "0x21ED690")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x21ED6F8", Offset = "0x21ED6F8", VA = "0x21ED6F8")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x21ED9E4", Offset = "0x21ED9E4", VA = "0x21ED9E4")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x21EE180", Offset = "0x21EE180", VA = "0x21EE180")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x21EE1B0", Offset = "0x21EE1B0", VA = "0x21EE1B0")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x21EE22C", Offset = "0x21EE22C", VA = "0x21EE22C")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x21EF944", Offset = "0x21EF944", VA = "0x21EF944")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x21EFBE4", Offset = "0x21EFBE4", VA = "0x21EFBE4")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x21EFD84", Offset = "0x21EFD84", VA = "0x21EFD84")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x21EFE00", Offset = "0x21EFE00", VA = "0x21EFE00")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x21F0B54", Offset = "0x21F0B54", VA = "0x21F0B54")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x21F0BC0", Offset = "0x21F0BC0", VA = "0x21F0BC0")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x21F11D0", Offset = "0x21F11D0", VA = "0x21F11D0")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x21F1268", Offset = "0x21F1268", VA = "0x21F1268")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x21F193C", Offset = "0x21F193C", VA = "0x21F193C")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x21F19C4", Offset = "0x21F19C4", VA = "0x21F19C4")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x21F21C4", Offset = "0x21F21C4", VA = "0x21F21C4")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x21F224C", Offset = "0x21F224C", VA = "0x21F224C")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x21F26AC", Offset = "0x21F26AC", VA = "0x21F26AC")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x21F2738", Offset = "0x21F2738", VA = "0x21F2738")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x21F2B74", Offset = "0x21F2B74", VA = "0x21F2B74")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x21F2C00", Offset = "0x21F2C00", VA = "0x21F2C00")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x21F305C", Offset = "0x21F305C", VA = "0x21F305C")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x21F30E8", Offset = "0x21F30E8", VA = "0x21F30E8")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x21F3524", Offset = "0x21F3524", VA = "0x21F3524")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x21F35B0", Offset = "0x21F35B0", VA = "0x21F35B0")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x21F3A0C", Offset = "0x21F3A0C", VA = "0x21F3A0C")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x21EF8D8", Offset = "0x21EF8D8", VA = "0x21EF8D8")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x21F3B9C", Offset = "0x21F3B9C", VA = "0x21F3B9C")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x21F092C", Offset = "0x21F092C", VA = "0x21F092C")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x21F4224", Offset = "0x21F4224", VA = "0x21F4224")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x20000D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2B68", Offset = "0xBD2B68")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB50", Offset = "0xBDEB50")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x303B")]
		private int <>1__state;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD18")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fAmount;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3043")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD28")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x1F73814", Offset = "0x1F73814", VA = "0x1F73814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0x1F738E4", Offset = "0x1F738E4", VA = "0x1F738E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x1F71954", Offset = "0x1F71954", VA = "0x1F71954")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x1F71A48", Offset = "0x1F71A48", VA = "0x1F71A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x1F71C84", Offset = "0x1F71C84", VA = "0x1F71C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x1F71BF0", Offset = "0x1F71BF0", VA = "0x1F71BF0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x1F73844", Offset = "0x1F73844", VA = "0x1F73844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3033")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool m_bFinished;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD08")]
	private Mesh m_newMesh;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int m_nLastProgress;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string m_strLastTitle;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string m_strLastMessage;

	[Token(Token = "0x1700001E")]
	public string ProgressTitle
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1F70EA0", Offset = "0x1F70EA0", VA = "0x1F70EA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public string ProgressMessage
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1F70ED0", Offset = "0x1F70ED0", VA = "0x1F70ED0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public int ProgressPercent
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x1F70F00", Offset = "0x1F70F00", VA = "0x1F70F00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000021")]
	public bool Finished
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1F70F30", Offset = "0x1F70F30", VA = "0x1F70F30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1F70F74", Offset = "0x1F70F74", VA = "0x1F70F74")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1F711A4", Offset = "0x1F711A4", VA = "0x1F711A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1F712D8", Offset = "0x1F712D8", VA = "0x1F712D8")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1F7174C", Offset = "0x1F7174C", VA = "0x1F7174C")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1F710C0", Offset = "0x1F710C0", VA = "0x1F710C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC192D8", Offset = "0xC192D8")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1F7199C", Offset = "0x1F7199C", VA = "0x1F7199C")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D9")]
public class ColorChangedEvent : UnityEvent<Color>
{
	[Token(Token = "0x6000503")]
	[Address(RVA = "0x21AC68C", Offset = "0x21AC68C", VA = "0x21AC68C")]
	public ColorChangedEvent()
	{
	}
}
[Token(Token = "0x20000DA")]
public class HSVChangedEvent : UnityEvent<float, float, float>
{
	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1AE58CC", Offset = "0x1AE58CC", VA = "0x1AE58CC")]
	public HSVChangedEvent()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TestCompression : MonoBehaviour
{
	[Token(Token = "0x6000505")]
	[Address(RVA = "0x29D037C", Offset = "0x29D037C", VA = "0x29D037C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x29D0390", Offset = "0x29D0390", VA = "0x29D0390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x29D03A4", Offset = "0x29D03A4", VA = "0x29D03A4")]
	public TestCompression()
	{
	}
}
[Token(Token = "0x20000DC")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class MicroSplatMeshTerrain : MicroSplatObject
{
	[Token(Token = "0x200057D")]
	public delegate void MaterialSyncAll();

	[Token(Token = "0x200057E")]
	public delegate void MaterialSync(Material m);

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304B")]
	private static List<MicroSplatMeshTerrain> sInstances;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer[] meshTerrains;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD38")]
	public Texture2D[] controlTextures;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Material meshBlendMat;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Material meshBlendMatInstance;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TerrainDescriptor terrainDescriptor;

	[Token(Token = "0x1400000A")]
	public static event MaterialSyncAll OnMaterialSyncAll
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x25661B4", Offset = "0x25661B4", VA = "0x25661B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19388", Offset = "0xC19388")]
		add
		{
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x25663E0", Offset = "0x25663E0", VA = "0x25663E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC193C4", Offset = "0xC193C4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event MaterialSync OnMaterialSync
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x256660C", Offset = "0x256660C", VA = "0x256660C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19400", Offset = "0xC19400")]
		add
		{
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x2566758", Offset = "0x2566758", VA = "0x2566758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1943C", Offset = "0xC1943C")]
		remove
		{
		}
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x25668A4", Offset = "0x25668A4", VA = "0x25668A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x25668B8", Offset = "0x25668B8", VA = "0x25668B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x25669C8", Offset = "0x25669C8", VA = "0x25669C8", Slot = "4")]
	public override TerrainDescriptor GetTerrainDescriptor()
	{
		return default(TerrainDescriptor);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x2566B14", Offset = "0x2566B14", VA = "0x2566B14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x25671D4", Offset = "0x25671D4", VA = "0x25671D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x25672FC", Offset = "0x25672FC", VA = "0x25672FC")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x256753C", Offset = "0x256753C", VA = "0x256753C")]
	private void SyncMeshBlendMat()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x2567720", Offset = "0x2567720", VA = "0x2567720")]
	private Material GetMeshBlendMatInstance()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x2567A60", Offset = "0x2567A60", VA = "0x2567A60")]
	private void ApplyMeshBlendMap()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x2566B44", Offset = "0x2566B44", VA = "0x2566B44")]
	public void Sync()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x2569070", Offset = "0x2569070", VA = "0x2569070", Slot = "5")]
	public override Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x2569380", Offset = "0x2569380", VA = "0x2569380")]
	public new static void SyncAll()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x2569928", Offset = "0x2569928", VA = "0x2569928")]
	public MicroSplatMeshTerrain()
	{
	}
}
[Token(Token = "0x20000DD")]
public class AndroidPermissionCallback : AndroidJavaProxy
{
	[Token(Token = "0x1400000C")]
	private event Action<string> OnPermissionGrantedAction
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x2AC6FF4", Offset = "0x2AC6FF4", VA = "0x2AC6FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19478", Offset = "0xC19478")]
		add
		{
		}
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x2AC7140", Offset = "0x2AC7140", VA = "0x2AC7140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC194B4", Offset = "0xC194B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	private event Action<string> OnPermissionDeniedAction
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x2AC728C", Offset = "0x2AC728C", VA = "0x2AC728C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC194F0", Offset = "0xC194F0")]
		add
		{
		}
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x2AC73D8", Offset = "0x2AC73D8", VA = "0x2AC73D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1952C", Offset = "0xC1952C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	private event Action<string> OnPermissionDeniedAndDontAskAgainAction
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x2AC7524", Offset = "0x2AC7524", VA = "0x2AC7524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19568", Offset = "0xC19568")]
		add
		{
		}
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x2AC7670", Offset = "0x2AC7670", VA = "0x2AC7670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC195A4", Offset = "0xC195A4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x2AC77BC", Offset = "0x2AC77BC", VA = "0x2AC77BC")]
	public AndroidPermissionCallback(Action<string> onGrantedCallback, Action<string> onDeniedCallback, Action<string> onDeniedAndDontAskAgainCallback)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x2AC7974", Offset = "0x2AC7974", VA = "0x2AC7974", Slot = "9")]
	public virtual void OnPermissionGranted(string permissionName)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x2AC7A40", Offset = "0x2AC7A40", VA = "0x2AC7A40", Slot = "10")]
	public virtual void OnPermissionDenied(string permissionName)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x2AC7B0C", Offset = "0x2AC7B0C", VA = "0x2AC7B0C", Slot = "11")]
	public virtual void OnPermissionDeniedAndDontAskAgain(string permissionName)
	{
	}
}
[Token(Token = "0x20000DE")]
public class AndroidPermissionsManager
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject m_Activity;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject m_PermissionService;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x2AC7C30", Offset = "0x2AC7C30", VA = "0x2AC7C30")]
	private static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x2AC7D7C", Offset = "0x2AC7D7C", VA = "0x2AC7D7C")]
	private static AndroidJavaObject GetPermissionsService()
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x2AC7ECC", Offset = "0x2AC7ECC", VA = "0x2AC7ECC")]
	public static bool IsPermissionGranted(string permissionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x2AC803C", Offset = "0x2AC803C", VA = "0x2AC803C")]
	public static void RequestPermission(string permissionName, AndroidPermissionCallback callback)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x2AC8120", Offset = "0x2AC8120", VA = "0x2AC8120")]
	public static void RequestPermission(string[] permissionNames, AndroidPermissionCallback callback)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x2AC82A4", Offset = "0x2AC82A4", VA = "0x2AC82A4")]
	public AndroidPermissionsManager()
	{
	}
}
[Token(Token = "0x20000DF")]
public abstract class BluetoothImports : IDisposable
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool FDisposed;

	[Token(Token = "0x40007C4")]
	protected internal const string WclGattClientDllName = "WclGattClientDll.dll";

	[Token(Token = "0x17000022")]
	protected bool Disposed
	{
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1D7B804", Offset = "0x1D7B804", VA = "0x1D7B804")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1D7B77C", Offset = "0x1D7B77C", VA = "0x1D7B77C")]
	private void Dispose(bool Disposing)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1D7B7F0", Offset = "0x1D7B7F0", VA = "0x1D7B7F0", Slot = "5")]
	protected virtual void Free()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1D7B848", Offset = "0x1D7B848", VA = "0x1D7B848")]
	public BluetoothImports()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1D7B890", Offset = "0x1D7B890", VA = "0x1D7B890", Slot = "1")]
	~BluetoothImports()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1D7B9DC", Offset = "0x1D7B9DC", VA = "0x1D7B9DC", Slot = "4")]
	public void Dispose()
	{
	}
}
[Token(Token = "0x20000E0")]
public delegate void DeviceFoundEvent(object sender, IntPtr Radio, long Address);
[Token(Token = "0x20000E1")]
public delegate void DiscoveringStartedEvent(object sender, IntPtr Radio);
[Token(Token = "0x20000E2")]
public delegate void DiscoveringCompletedEvent(object sender, IntPtr Radio, int Error);
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2C74", Offset = "0xBD2C74")]
public sealed class BluetoothManager : BluetoothImports
{
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBDEB8C", Offset = "0xBDEB8C")]
	private delegate void NOTIFY_EVENT([In] IntPtr sender);

	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBDEBCC", Offset = "0xBDEBCC")]
	private delegate void DEVICE_FOUND_EVENT([In] IntPtr sender, [In] IntPtr Radio, [In] long Address);

	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBDEC0C", Offset = "0xBDEC0C")]
	private delegate void DISCOVERING_STARTED_EVENT([In] IntPtr sender, [In] IntPtr Radio);

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBDEC4C", Offset = "0xBDEC4C")]
	private delegate void DISCOVERING_COMPLETED_EVENT([In] IntPtr sender, [In] IntPtr Radio, [In] int Error);

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private IntPtr FManager;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD58")]
	private NOTIFY_EVENT FAfterOpen;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NOTIFY_EVENT FBeforeClose;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private DEVICE_FOUND_EVENT FOnDeviceFound;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private DISCOVERING_STARTED_EVENT FOnDiscoveringStarted;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3063")]
	private DISCOVERING_COMPLETED_EVENT FOnDiscoveringCompleted;

	[Token(Token = "0x17000023")]
	public int Count
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1D7E244", Offset = "0x1D7E244", VA = "0x1D7E244")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	public IntPtr Item
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1D7E36C", Offset = "0x1D7E36C", VA = "0x1D7E36C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1400000F")]
	public event EventHandler AfterOpen
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1D7E4A4", Offset = "0x1D7E4A4", VA = "0x1D7E4A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC195E0", Offset = "0xC195E0")]
		add
		{
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1D7E5F0", Offset = "0x1D7E5F0", VA = "0x1D7E5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1961C", Offset = "0xC1961C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event EventHandler BeforeClose
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1D7E73C", Offset = "0x1D7E73C", VA = "0x1D7E73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19658", Offset = "0xC19658")]
		add
		{
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1D7E888", Offset = "0x1D7E888", VA = "0x1D7E888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19694", Offset = "0xC19694")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event DeviceFoundEvent OnDeviceFound
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1D7E9D4", Offset = "0x1D7E9D4", VA = "0x1D7E9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC196D0", Offset = "0xC196D0")]
		add
		{
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1D7EB20", Offset = "0x1D7EB20", VA = "0x1D7EB20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1970C", Offset = "0xC1970C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event DiscoveringStartedEvent OnDiscoveringStarted
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1D7EC6C", Offset = "0x1D7EC6C", VA = "0x1D7EC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19748", Offset = "0xC19748")]
		add
		{
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1D7EDB8", Offset = "0x1D7EDB8", VA = "0x1D7EDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19784", Offset = "0xC19784")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event DiscoveringCompletedEvent OnDiscoveringCompleted
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1D7EF04", Offset = "0x1D7EF04", VA = "0x1D7EF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC197C0", Offset = "0xC197C0")]
		add
		{
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1D7F050", Offset = "0x1D7F050", VA = "0x1D7F050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC197FC", Offset = "0xC197FC")]
		remove
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1D7BAD8", Offset = "0x1D7BAD8", VA = "0x1D7BAD8")]
	private static extern IntPtr ManagerCreate();

	[PreserveSig]
	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1D7BBCC", Offset = "0x1D7BBCC", VA = "0x1D7BBCC")]
	private static extern void ManagerDestroy([In] IntPtr Manager);

	[PreserveSig]
	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1D7BCC4", Offset = "0x1D7BCC4", VA = "0x1D7BCC4")]
	private static extern int ManagerOpen([In] IntPtr Manager);

	[PreserveSig]
	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1D7BDC4", Offset = "0x1D7BDC4", VA = "0x1D7BDC4")]
	private static extern int ManagerClose([In] IntPtr Manager);

	[PreserveSig]
	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1D7BEC4", Offset = "0x1D7BEC4", VA = "0x1D7BEC4")]
	private static extern int ManagerGetRadioCount([In] IntPtr Manager);

	[PreserveSig]
	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1D7BFC4", Offset = "0x1D7BFC4", VA = "0x1D7BFC4")]
	private static extern IntPtr ManagerGetRadio([In] IntPtr Manager, int Index);

	[PreserveSig]
	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1D7C0CC", Offset = "0x1D7C0CC", VA = "0x1D7C0CC")]
	private static extern void ManagerSetAfterOpen([In] IntPtr Manager, [In] NOTIFY_EVENT Event);

	[PreserveSig]
	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1D7C1EC", Offset = "0x1D7C1EC", VA = "0x1D7C1EC")]
	private static extern void ManagerSetBeforeClose([In] IntPtr Manager, [In] NOTIFY_EVENT Event);

	[PreserveSig]
	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1D7C30C", Offset = "0x1D7C30C", VA = "0x1D7C30C")]
	private static extern void ManagerSetOnDeviceFound([In] IntPtr Manager, [In] DEVICE_FOUND_EVENT Event);

	[PreserveSig]
	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1D7C42C", Offset = "0x1D7C42C", VA = "0x1D7C42C")]
	private static extern void ManagerSetOnDiscoveringStarted([In] IntPtr Manager, [In] DISCOVERING_STARTED_EVENT Event);

	[PreserveSig]
	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1D7C54C", Offset = "0x1D7C54C", VA = "0x1D7C54C")]
	private static extern void ManagerSetOnDiscoveringCompleted([In] IntPtr Manager, [In] DISCOVERING_COMPLETED_EVENT Event);

	[PreserveSig]
	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1D7C66C", Offset = "0x1D7C66C", VA = "0x1D7C66C")]
	private static extern int RadioDiscover([In] IntPtr Radio, [In] uint Timeout);

	[PreserveSig]
	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1D7C774", Offset = "0x1D7C774", VA = "0x1D7C774")]
	private static extern int RadioTerminate([In] IntPtr Radio);

	[PreserveSig]
	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1D7C874", Offset = "0x1D7C874", VA = "0x1D7C874")]
	private static extern bool RadioIsAvailable([In] IntPtr Radio);

	[PreserveSig]
	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1D7C994", Offset = "0x1D7C994", VA = "0x1D7C994")]
	private static extern int RadioGetDeviceName([In] IntPtr Radio, [In] long Address, [In] IntPtr Name, [In] int Len);

	[PreserveSig]
	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1D7CAAC", Offset = "0x1D7CAAC", VA = "0x1D7CAAC")]
	private static extern int RadioRemoteUnpair([In] IntPtr Radio, [In] long Address);

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1D7CBB4", Offset = "0x1D7CBB4", VA = "0x1D7CBB4")]
	private void DoAfterOpen(IntPtr sender)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1D7CCFC", Offset = "0x1D7CCFC", VA = "0x1D7CCFC")]
	private void DoBeofreClose(IntPtr sender)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1D7CE44", Offset = "0x1D7CE44", VA = "0x1D7CE44")]
	private void DoDeviceFound(IntPtr sender, IntPtr Radio, long Address)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1D7CEE0", Offset = "0x1D7CEE0", VA = "0x1D7CEE0")]
	private void DoDiscoveringStarted(IntPtr sender, IntPtr Radio)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1D7CF6C", Offset = "0x1D7CF6C", VA = "0x1D7CF6C")]
	private void DoDiscoveringCompleted(IntPtr sender, IntPtr Radio, int Error)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1D7D008", Offset = "0x1D7D008", VA = "0x1D7D008", Slot = "5")]
	protected override void Free()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1D7D2C0", Offset = "0x1D7D2C0", VA = "0x1D7D2C0")]
	public BluetoothManager()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1D7D788", Offset = "0x1D7D788", VA = "0x1D7D788")]
	public int Open()
	{
		return default(int);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1D7D198", Offset = "0x1D7D198", VA = "0x1D7D198")]
	public int Close()
	{
		return default(int);
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1D7D8B0", Offset = "0x1D7D8B0", VA = "0x1D7D8B0")]
	public int Discover(IntPtr Radio, uint Timeout)
	{
		return default(int);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1D7D9E8", Offset = "0x1D7D9E8", VA = "0x1D7D9E8")]
	public int Terminate(IntPtr Radio)
	{
		return default(int);
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1D7DB10", Offset = "0x1D7DB10", VA = "0x1D7DB10")]
	public bool IsRadioAvailable(IntPtr Radio)
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1D7DC4C", Offset = "0x1D7DC4C", VA = "0x1D7DC4C")]
	public int GetRemoteName(IntPtr Radio, long Address, out string Name)
	{
		return default(int);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1D7E10C", Offset = "0x1D7E10C", VA = "0x1D7E10C")]
	public int RemoteUnpair(IntPtr Radio, long Address)
	{
		return default(int);
	}
}
[Token(Token = "0x20000E4")]
public class BluetoothErrors
{
	[Token(Token = "0x40007D0")]
	public const int WCL_E_SUCCESS = 0;

	[Token(Token = "0x40007D1")]
	public const int WCL_E_BASE = 65536;

	[Token(Token = "0x40007D2")]
	public const int WCL_E_INVALID_ARGUMENT = 65536;

	[Token(Token = "0x40007D3")]
	public const int WCL_E_OUT_OF_MEMORY = 65537;

	[Token(Token = "0x40007D4")]
	public const int WCL_E_CONNECTION_BASE = 196608;

	[Token(Token = "0x40007D5")]
	public const int WCL_E_CONNECTION_ACTIVE = 196608;

	[Token(Token = "0x40007D6")]
	public const int WCL_E_CONNECTION_NOT_ACTIVE = 196609;

	[Token(Token = "0x40007D7")]
	public const int WCL_E_CONNECTION_UNABLE_CREATE_TERMINATE_EVENT = 196610;

	[Token(Token = "0x40007D8")]
	public const int WCL_E_CONNECTION_UNABLE_START_COMMUNICATION = 196612;

	[Token(Token = "0x40007D9")]
	public const int WCL_E_CONNECTION_UNABLE_CREATE_INIT_EVENT = 196615;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1D7B74C", Offset = "0x1D7B74C", VA = "0x1D7B74C")]
	public BluetoothErrors()
	{
	}
}
[Token(Token = "0x20000E5")]
public struct GattUuid
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x305B")]
	public bool IsShortUuid;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ushort ShortUuid;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD68")]
	public Guid LongUuid;
}
[Token(Token = "0x20000E6")]
public struct GattService
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GattUuid Uuid;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ushort Handle;
}
[Token(Token = "0x20000E7")]
public struct GattServices
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte Count;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3063")]
	public GattService[] Services;
}
[Token(Token = "0x20000E8")]
public struct GattCharacteristic
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ushort ServiceHandle;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD78")]
	public GattUuid Uuid;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ushort Handle;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ushort ValueHandle;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsBroadcastable;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x306B")]
	public bool IsReadable;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public bool IsWritable;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD88")]
	public bool IsWritableWithoutResponse;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsSignedWritable;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsNotifiable;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsIndicatable;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3073")]
	public bool HasExtendedProperties;
}
[Token(Token = "0x20000E9")]
public struct GattCharacteristics
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public byte Count;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FD98")]
	public GattCharacteristic[] Chars;
}
[Token(Token = "0x20000EA")]
public enum ClientState
{
	[Token(Token = "0x40007F0")]
	csDisconnected,
	[Token(Token = "0x40007F1")]
	csPreparing,
	[Token(Token = "0x40007F2")]
	csConnecting,
	[Token(Token = "0x40007F3")]
	csConnected,
	[Token(Token = "0x40007F4")]
	csDisconnecting
}
[Token(Token = "0x20000EB")]
public enum GattOperationFlag
{
	[Token(Token = "0x40007F6")]
	goNone,
	[Token(Token = "0x40007F7")]
	goReadFromDevice,
	[Token(Token = "0x40007F8")]
	goReadFromCache
}
[Token(Token = "0x20000EC")]
public enum GattProtectionLevel
{
	[Token(Token = "0x40007FA")]
	plNone,
	[Token(Token = "0x40007FB")]
	plAuthentication,
	[Token(Token = "0x40007FC")]
	plEncryption,
	[Token(Token = "0x40007FD")]
	plEncryptionAndAuthentication
}
[Token(Token = "0x20000ED")]
public delegate void ClietConnect(object sender, int Error);
[Token(Token = "0x20000EE")]
public delegate void ClientDisconnect(object sender, int Reason);
[Token(Token = "0x20000EF")]
public delegate void ClientChanged(object sender, ushort Handle, byte[] Value);
[Token(Token = "0x20000F0")]
[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD2CD8", Offset = "0xBD2CD8")]
public delegate void GATTCLIENT_CONNECT([In] IntPtr sender, [In] int Error);
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD2D18", Offset = "0xBD2D18")]
public delegate void GATTCLIENT_DISCONNECT([In] IntPtr sender, [In] int Reason);
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD2D58", Offset = "0xBD2D58")]
public delegate void GATTCLIENT_ONCHANGED([In] IntPtr sender, [In] ushort Handle, [In] IntPtr Value, [In] uint ValueLen);
[Token(Token = "0x20000F3")]
public sealed class GattClientConnection : BluetoothImports
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309B")]
	private IntPtr FClient;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GATTCLIENT_CONNECT FOnConnect;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FDD8")]
	private GATTCLIENT_DISCONNECT FOnDisconnect;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GATTCLIENT_ONCHANGED FOnChanged;

	[Token(Token = "0x17000025")]
	public ClientState State
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1AE16FC", Offset = "0x1AE16FC", VA = "0x1AE16FC")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x14000014")]
	public event ClietConnect OnConnect
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1AE1824", Offset = "0x1AE1824", VA = "0x1AE1824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19838", Offset = "0xC19838")]
		add
		{
		}
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1AE1970", Offset = "0x1AE1970", VA = "0x1AE1970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19874", Offset = "0xC19874")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event ClientDisconnect OnDisconnect
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1AE1ABC", Offset = "0x1AE1ABC", VA = "0x1AE1ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC198B0", Offset = "0xC198B0")]
		add
		{
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1AE1C08", Offset = "0x1AE1C08", VA = "0x1AE1C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC198EC", Offset = "0xC198EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event ClientChanged OnChanged
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1AE1D54", Offset = "0x1AE1D54", VA = "0x1AE1D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19928", Offset = "0xC19928")]
		add
		{
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1AE1EA0", Offset = "0x1AE1EA0", VA = "0x1AE1EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19964", Offset = "0xC19964")]
		remove
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1ADE9C8", Offset = "0x1ADE9C8", VA = "0x1ADE9C8")]
	private static extern IntPtr GattClientCreate();

	[PreserveSig]
	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1ADEABC", Offset = "0x1ADEABC", VA = "0x1ADEABC")]
	private static extern void GattClientDestroy([In] IntPtr Client);

	[PreserveSig]
	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1ADEBB4", Offset = "0x1ADEBB4", VA = "0x1ADEBB4")]
	private static extern void GattClientSetOnConnect([In] IntPtr Client, [In] GATTCLIENT_CONNECT Event);

	[PreserveSig]
	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1ADECD4", Offset = "0x1ADECD4", VA = "0x1ADECD4")]
	private static extern void GattClientSetOnDisconnect([In] IntPtr Client, [In] GATTCLIENT_DISCONNECT Event);

	[PreserveSig]
	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1ADEDF4", Offset = "0x1ADEDF4", VA = "0x1ADEDF4")]
	private static extern void GattClientSetOnChanged([In] IntPtr Client, [In] GATTCLIENT_ONCHANGED Event);

	[PreserveSig]
	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1ADEF14", Offset = "0x1ADEF14", VA = "0x1ADEF14")]
	private static extern int GattClientConnect([In] IntPtr Client, [In] IntPtr Radio, [In] long Address);

	[PreserveSig]
	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1ADF024", Offset = "0x1ADF024", VA = "0x1ADF024")]
	private static extern int GattClientDisconnect([In] IntPtr Client);

	[PreserveSig]
	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1ADF124", Offset = "0x1ADF124", VA = "0x1ADF124")]
	private static extern int GattClientGetServices([In] IntPtr Client, [In][Out] ref GattServices Services);

	[PreserveSig]
	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1ADF2DC", Offset = "0x1ADF2DC", VA = "0x1ADF2DC")]
	private static extern int GattClientGetCharas([In] IntPtr Client, [In] ref GattService Service, [In][Out] ref GattCharacteristics Chars);

	[PreserveSig]
	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1ADF4E0", Offset = "0x1ADF4E0", VA = "0x1ADF4E0")]
	private static extern int GattClientSubscribe([In] IntPtr Client, [In] ref GattCharacteristic Char);

	[PreserveSig]
	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1ADF630", Offset = "0x1ADF630", VA = "0x1ADF630")]
	private static extern int GattClientUnsubscribe([In] IntPtr Client, [In] ref GattCharacteristic Char);

	[PreserveSig]
	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1ADF780", Offset = "0x1ADF780", VA = "0x1ADF780")]
	private static extern int GattClientReadCharacteristicValue([In] IntPtr Client, [In] ref GattCharacteristic Char, [In][Out] ref IntPtr ppValue, [In][Out] ref uint pSize);

	[PreserveSig]
	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1ADF8E4", Offset = "0x1ADF8E4", VA = "0x1ADF8E4")]
	private static extern int GattClientWriteCharacteristicValue([In] IntPtr Client, [In] ref GattCharacteristic Char, [In] IntPtr pValue, [In] uint Size);

	[PreserveSig]
	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1ADFA48", Offset = "0x1ADFA48", VA = "0x1ADFA48")]
	private static extern void GattClientFreeMem([In] IntPtr pMem);

	[PreserveSig]
	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1ADFB40", Offset = "0x1ADFB40", VA = "0x1ADFB40")]
	private static extern ClientState GattClientGetState([In] IntPtr Client);

	[PreserveSig]
	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1ADFC40", Offset = "0x1ADFC40", VA = "0x1ADFC40")]
	private static extern int GattClientWriteClientConfiguration([In] IntPtr ClientClient, [In] ref GattCharacteristic Char, [In] bool Subscribe, [In] GattOperationFlag Flag, [In] GattProtectionLevel Protection);

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1ADFDBC", Offset = "0x1ADFDBC", VA = "0x1ADFDBC")]
	private void DoConnect(IntPtr sender, int Error)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1ADFE48", Offset = "0x1ADFE48", VA = "0x1ADFE48")]
	private void DoDisconnect(IntPtr sender, int Reason)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1ADFED4", Offset = "0x1ADFED4", VA = "0x1ADFED4")]
	private void DoChanged(IntPtr sender, ushort Handle, IntPtr Value, uint ValueLen)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1AE00EC", Offset = "0x1AE00EC", VA = "0x1AE00EC", Slot = "5")]
	protected override void Free()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1AE034C", Offset = "0x1AE034C", VA = "0x1AE034C")]
	public GattClientConnection()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1AE0570", Offset = "0x1AE0570", VA = "0x1AE0570")]
	public int Connect(IntPtr Radio, long Address)
	{
		return default(int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1AE0224", Offset = "0x1AE0224", VA = "0x1AE0224")]
	public int Disconnect()
	{
		return default(int);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1AE06B8", Offset = "0x1AE06B8", VA = "0x1AE06B8")]
	public int GetServices(out GattServices Services)
	{
		return default(int);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1AE0864", Offset = "0x1AE0864", VA = "0x1AE0864")]
	public int GetCharacteristics(GattService Service, out GattCharacteristics Chars)
	{
		return default(int);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1AE0A18", Offset = "0x1AE0A18", VA = "0x1AE0A18")]
	public int Subscribe(GattCharacteristic Char)
	{
		return default(int);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1AE0B48", Offset = "0x1AE0B48", VA = "0x1AE0B48")]
	public int Unsubscribe(GattCharacteristic Char)
	{
		return default(int);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1AE0C78", Offset = "0x1AE0C78", VA = "0x1AE0C78")]
	public int ReadValue(GattCharacteristic Char, out byte[] Value)
	{
		return default(int);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1AE0FD8", Offset = "0x1AE0FD8", VA = "0x1AE0FD8")]
	public int WriteValue(GattCharacteristic Char, byte[] Value)
	{
		return default(int);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1AE1588", Offset = "0x1AE1588", VA = "0x1AE1588")]
	public int WriteClientConfiguration(GattCharacteristic Char, bool Subscribe, GattOperationFlag Flag, GattProtectionLevel Protection)
	{
		return default(int);
	}
}
[Token(Token = "0x20000F4")]
public class GattClientThread : BluetoothImports
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private long FAddress;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FDE8")]
	private GattClientConnection FClient;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool FDoDisconnect;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ManualResetEvent FInitEvent;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int FInitResult;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AB")]
	private IntPtr FRadio;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MessageReceiver FReceiver;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FDF8")]
	private ManualResetEvent FTerminationEvent;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Thread FThread;

	[Token(Token = "0x17000026")]
	public long Address
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1AE3B1C", Offset = "0x1AE3B1C", VA = "0x1AE3B1C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000027")]
	public bool Connected
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1AE3688", Offset = "0x1AE3688", VA = "0x1AE3688")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000017")]
	public event ClietConnect OnConnect
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1AE3C34", Offset = "0x1AE3C34", VA = "0x1AE3C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC199A0", Offset = "0xC199A0")]
		add
		{
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1AE3D80", Offset = "0x1AE3D80", VA = "0x1AE3D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC199DC", Offset = "0xC199DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClientDisconnect OnDisconnect
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1AE3ECC", Offset = "0x1AE3ECC", VA = "0x1AE3ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19A18", Offset = "0xC19A18")]
		add
		{
		}
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1AE4018", Offset = "0x1AE4018", VA = "0x1AE4018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19A54", Offset = "0xC19A54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClientChanged OnChanged
	{
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1AE4164", Offset = "0x1AE4164", VA = "0x1AE4164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19A90", Offset = "0xC19A90")]
		add
		{
		}
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1AE42B0", Offset = "0x1AE42B0", VA = "0x1AE42B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19ACC", Offset = "0xC19ACC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1AE1FEC", Offset = "0x1AE1FEC", VA = "0x1AE1FEC")]
	private void ClientConnect(object sender, int Error)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1AE2058", Offset = "0x1AE2058", VA = "0x1AE2058")]
	private void ClientDisconnect(object sender, int Reason)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1AE20D4", Offset = "0x1AE20D4", VA = "0x1AE20D4")]
	private void ClientChanged(object sender, ushort Handle, byte[] Value)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1AE2148", Offset = "0x1AE2148", VA = "0x1AE2148")]
	private void ReceiverChanged(object sender, ushort Handle, byte[] Value)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1AE219C", Offset = "0x1AE219C", VA = "0x1AE219C")]
	private void ReceiverDisconnect(object sender, int Reason)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1AE2430", Offset = "0x1AE2430", VA = "0x1AE2430")]
	private void ReceiverConnect(object sender, int Error)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1AE249C", Offset = "0x1AE249C", VA = "0x1AE249C")]
	private void ThreadProc()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1AE28D4", Offset = "0x1AE28D4", VA = "0x1AE28D4", Slot = "5")]
	protected override void Free()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1AE2940", Offset = "0x1AE2940", VA = "0x1AE2940", Slot = "6")]
	protected virtual void DoConnect(int Error)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1AE29C8", Offset = "0x1AE29C8", VA = "0x1AE29C8", Slot = "7")]
	protected virtual void DoDisconnect(int Reason)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1AE2A50", Offset = "0x1AE2A50", VA = "0x1AE2A50", Slot = "8")]
	protected virtual void DoChanged(ushort Handle, byte[] Value)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1AE2AEC", Offset = "0x1AE2AEC", VA = "0x1AE2AEC")]
	public GattClientThread()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1AE2D84", Offset = "0x1AE2D84", VA = "0x1AE2D84")]
	public int Connect(IntPtr Radio, long Address)
	{
		return default(int);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1AE37F8", Offset = "0x1AE37F8", VA = "0x1AE37F8")]
	public int GetServices(out GattServices gattServices)
	{
		return default(int);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1AE3858", Offset = "0x1AE3858", VA = "0x1AE3858")]
	public int GetCharacteristics(GattService service, out GattCharacteristics chars)
	{
		return default(int);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1AE3904", Offset = "0x1AE3904", VA = "0x1AE3904")]
	public int SubscribeToChar(GattCharacteristic chara)
	{
		return default(int);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1AE39A0", Offset = "0x1AE39A0", VA = "0x1AE39A0")]
	public int UnsubscribeFromChar(GattCharacteristic chara)
	{
		return default(int);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1AE3A3C", Offset = "0x1AE3A3C", VA = "0x1AE3A3C")]
	public int WriteClientConfig(GattCharacteristic Chara, bool Subscribe, GattOperationFlag Flag, GattProtectionLevel Protection = GattProtectionLevel.plNone)
	{
		return default(int);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1AE21F8", Offset = "0x1AE21F8", VA = "0x1AE21F8")]
	public int Disconnect()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F5")]
public sealed class Helpers : BluetoothImports
{
	[Token(Token = "0x4000811")]
	public const uint WAIT_OBJECT_0 = 0u;

	[Token(Token = "0x4000812")]
	public const uint WAIT_IO_COMPLETION = 192u;

	[Token(Token = "0x4000813")]
	public const uint WAIT_TIMEOUT = 258u;

	[Token(Token = "0x4000814")]
	public const uint WAIT_FAILED = uint.MaxValue;

	[PreserveSig]
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1AE27BC", Offset = "0x1AE27BC", VA = "0x1AE27BC")]
	public static extern uint AlertableWait([In] IntPtr Handle, [In] bool Infinite);

	[PreserveSig]
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1AE7520", Offset = "0x1AE7520", VA = "0x1AE7520")]
	public static extern void ProcessApc();

	[PreserveSig]
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1AE760C", Offset = "0x1AE760C", VA = "0x1AE760C")]
	public static extern void SetApcSync();

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1AE76F8", Offset = "0x1AE76F8", VA = "0x1AE76F8")]
	public Helpers()
	{
	}
}
[Token(Token = "0x20000F6")]
public sealed class MessageReceiver : BluetoothImports
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private IntPtr FReceiver;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE08")]
	private GATTCLIENT_CONNECT FOnConnect;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GATTCLIENT_DISCONNECT FOnDisconnect;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GATTCLIENT_ONCHANGED FOnChanged;

	[Token(Token = "0x1400001A")]
	public event ClietConnect OnConnect
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x25656C4", Offset = "0x25656C4", VA = "0x25656C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19B08", Offset = "0xC19B08")]
		add
		{
		}
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x2565810", Offset = "0x2565810", VA = "0x2565810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19B44", Offset = "0xC19B44")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClientDisconnect OnDisconnect
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x256595C", Offset = "0x256595C", VA = "0x256595C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19B80", Offset = "0xC19B80")]
		add
		{
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x2565AA8", Offset = "0x2565AA8", VA = "0x2565AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19BBC", Offset = "0xC19BBC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClientChanged OnChanged
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x2565BF4", Offset = "0x2565BF4", VA = "0x2565BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19BF8", Offset = "0xC19BF8")]
		add
		{
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x2565D40", Offset = "0x2565D40", VA = "0x2565D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19C34", Offset = "0xC19C34")]
		remove
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x256404C", Offset = "0x256404C", VA = "0x256404C")]
	private static extern IntPtr MessageReciverCreate([In] GATTCLIENT_CONNECT OnConnect, [In] GATTCLIENT_DISCONNECT OnDisconnect, [In] GATTCLIENT_ONCHANGED OnChanged);

	[PreserveSig]
	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x25641A4", Offset = "0x25641A4", VA = "0x25641A4")]
	private static extern void MessageReciverDestroy([In] IntPtr Receiver);

	[PreserveSig]
	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x256429C", Offset = "0x256429C", VA = "0x256429C")]
	private static extern int MessageReciverOpen([In] IntPtr Receiver);

	[PreserveSig]
	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x256439C", Offset = "0x256439C", VA = "0x256439C")]
	private static extern int MessageReciverClose([In] IntPtr Receiver);

	[PreserveSig]
	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x256449C", Offset = "0x256449C", VA = "0x256449C")]
	private static extern void MessageReceiverNotifyConnect([In] IntPtr Receiver, [In] int Error);

	[PreserveSig]
	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x256459C", Offset = "0x256459C", VA = "0x256459C")]
	private static extern void MessageReceiverNotifyDisconnect([In] IntPtr Receiver, [In] int Result);

	[PreserveSig]
	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x256469C", Offset = "0x256469C", VA = "0x256469C")]
	private static extern void MessageReceiverNotifyChanged([In] IntPtr Receiver, [In] ushort Handle, [In] IntPtr Value, [In] ushort ValueLen);

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x25647B4", Offset = "0x25647B4", VA = "0x25647B4")]
	private void DoConnect(IntPtr sender, int Error)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x2564840", Offset = "0x2564840", VA = "0x2564840")]
	private void DoDisconnect(IntPtr sender, int Reason)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x25648CC", Offset = "0x25648CC", VA = "0x25648CC")]
	private void DoChanged(IntPtr sender, ushort Handle, IntPtr Value, uint ValueLen)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x2564AE4", Offset = "0x2564AE4", VA = "0x2564AE4", Slot = "5")]
	protected override void Free()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x2564BC8", Offset = "0x2564BC8", VA = "0x2564BC8")]
	public MessageReceiver()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x2564DA4", Offset = "0x2564DA4", VA = "0x2564DA4")]
	public int Open()
	{
		return default(int);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x2564ECC", Offset = "0x2564ECC", VA = "0x2564ECC")]
	public int Close()
	{
		return default(int);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x2564FF4", Offset = "0x2564FF4", VA = "0x2564FF4")]
	public void NotifyConnect(int Error)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x2565124", Offset = "0x2565124", VA = "0x2565124")]
	public void NotifyDisconnect(int Reason)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x2565254", Offset = "0x2565254", VA = "0x2565254")]
	public void NotifyChanged(ushort Handle, byte[] Value)
	{
	}
}
[Token(Token = "0x20000F7")]
public class CameraFarClipSetup : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE18")]
	[SerializeField]
	private int farClipPlane;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int farClipPlaneQuest;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera[] allCameras;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x218A110", Offset = "0x218A110", VA = "0x218A110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x218A20C", Offset = "0x218A20C", VA = "0x218A20C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x218A430", Offset = "0x218A430", VA = "0x218A430")]
	public CameraFarClipSetup()
	{
	}
}
[Token(Token = "0x20000F8")]
public class CameraSmooth : MonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Camera cameraTarget;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C3")]
	public Camera cameraSelf;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool enableSmooth;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE8404", Offset = "0xBE8404")]
	public float lerpPositionRate;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE844C", Offset = "0xBE844C")]
	public float lerpRotationRate;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE8498", Offset = "0xBE8498")]
	public float rotationOffset;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion targetRotation;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x218A488", Offset = "0x218A488", VA = "0x218A488")]
	public void Start()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x218A7E4", Offset = "0x218A7E4", VA = "0x218A7E4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x218AEE8", Offset = "0x218AEE8", VA = "0x218AEE8")]
	public CameraSmooth()
	{
	}
}
[Token(Token = "0x20000F9")]
public class EventCameraSetup : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30CB")]
	[SerializeField]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private GameObject[] rootObjects;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE38")]
	private Camera mainCam;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1C26AE8", Offset = "0x1C26AE8", VA = "0x1C26AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1C26B24", Offset = "0x1C26B24", VA = "0x1C26B24")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1C26E50", Offset = "0x1C26E50", VA = "0x1C26E50")]
	public EventCameraSetup()
	{
	}
}
[Token(Token = "0x20000FA")]
public class BasePlatformObject : MonoBehaviour
{
	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x2A81CD8", Offset = "0x2A81CD8", VA = "0x2A81CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x2A81CEC", Offset = "0x2A81CEC", VA = "0x2A81CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x2A81D00", Offset = "0x2A81D00", VA = "0x2A81D00")]
	public BasePlatformObject()
	{
	}
}
[Token(Token = "0x20000FB")]
public class EndscreenModifierEntry : MonoBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TextMeshProUGUI nameText;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TextMeshProUGUI multiplierText;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Color inactiveColor;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30D3")]
	private string multiplier;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Color nameColor;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE48")]
	private Color multiplierColor;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1C25B40", Offset = "0x1C25B40", VA = "0x1C25B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1C25C08", Offset = "0x1C25C08", VA = "0x1C25C08")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1C25C60", Offset = "0x1C25C60", VA = "0x1C25C60")]
	public void SetMultiplier(float multiplier)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1C25D20", Offset = "0x1C25D20", VA = "0x1C25D20")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1C25F50", Offset = "0x1C25F50", VA = "0x1C25F50")]
	public EndscreenModifierEntry()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Asteroid : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	public Vector3 tumble;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x2ACE654", Offset = "0x2ACE654", VA = "0x2ACE654")]
	internal void Play()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x2ACE7A8", Offset = "0x2ACE7A8", VA = "0x2ACE7A8")]
	internal void Stop()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x2ACE8FC", Offset = "0x2ACE8FC", VA = "0x2ACE8FC")]
	public Asteroid()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Asteroids : MonoBehaviour
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Asteroid[] actualAsteroids;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool currentlyFadingIn;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30DB")]
	private bool currentlyFadingOut;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Asteroid currentAsteroid;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE58")]
	private Vector3 direction;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 actualStartPoint;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 actualEndPoint;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x2ACE980", Offset = "0x2ACE980", VA = "0x2ACE980")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x2ACE9B0", Offset = "0x2ACE9B0", VA = "0x2ACE9B0")]
	private void Restart()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x2ACEBD4", Offset = "0x2ACEBD4", VA = "0x2ACEBD4")]
	public void SetupAsteroid(int nr, Vector3 startPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x2ACF1D4", Offset = "0x2ACF1D4", VA = "0x2ACF1D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x2ACFCD4", Offset = "0x2ACFCD4", VA = "0x2ACFCD4")]
	public Asteroids()
	{
	}
}
[Token(Token = "0x20000FE")]
public class BattleIsland : MonoBehaviour
{
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x2A81F2C", Offset = "0x2A81F2C", VA = "0x2A81F2C")]
	public BattleIsland()
	{
	}
}
[Token(Token = "0x20000FF")]
public abstract class EnvironmentHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly int MAX_COUNT;

	[Token(Token = "0x60005F4")]
	public abstract void HighlightSingle(float strength);

	[Token(Token = "0x60005F5")]
	public abstract void HighlightFlush();

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1C261E4", Offset = "0x1C261E4", VA = "0x1C261E4", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1C261F8", Offset = "0x1C261F8", VA = "0x1C261F8")]
	protected int GetCountFromStrength(float strength)
	{
		return default(int);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1C26388", Offset = "0x1C26388", VA = "0x1C26388")]
	protected EnvironmentHighlighter()
	{
	}
}
[Token(Token = "0x2000100")]
public class FlameBurst : MonoBehaviour
{
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1C30614", Offset = "0x1C30614", VA = "0x1C30614")]
	public FlameBurst()
	{
	}
}
[Token(Token = "0x2000101")]
public class LightBeam : MonoBehaviour
{
	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1AFD210", Offset = "0x1AFD210", VA = "0x1AFD210")]
	public LightBeam()
	{
	}
}
[Token(Token = "0x2000102")]
public class MedievalHighlighter : EnvironmentHighlighter
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30E3")]
	private List<FlameBurst> flames;

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x21E6478", Offset = "0x21E6478", VA = "0x21E6478")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x21E6540", Offset = "0x21E6540", VA = "0x21E6540")]
	private new void Update()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x21E6570", Offset = "0x21E6570", VA = "0x21E6570", Slot = "5")]
	public override void HighlightFlush()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x21E693C", Offset = "0x21E693C", VA = "0x21E693C", Slot = "4")]
	public override void HighlightSingle(float strength)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x21E6E00", Offset = "0x21E6E00", VA = "0x21E6E00")]
	public MedievalHighlighter()
	{
	}
}
[Token(Token = "0x2000103")]
public class NetherworldHighlighter : EnvironmentHighlighter
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<TechnoBurst> bursts;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x19DC514", Offset = "0x19DC514", VA = "0x19DC514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x19DC5DC", Offset = "0x19DC5DC", VA = "0x19DC5DC")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x19DC60C", Offset = "0x19DC60C", VA = "0x19DC60C", Slot = "5")]
	public override void HighlightFlush()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x19DC9D8", Offset = "0x19DC9D8", VA = "0x19DC9D8", Slot = "4")]
	public override void HighlightSingle(float strength)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x19DCE9C", Offset = "0x19DCE9C", VA = "0x19DCE9C")]
	public NetherworldHighlighter()
	{
	}
}
[Token(Token = "0x2000104")]
public class SkyHighlighter : EnvironmentHighlighter
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE68")]
	private List<LightBeam> beams;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1F25288", Offset = "0x1F25288", VA = "0x1F25288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1F25350", Offset = "0x1F25350", VA = "0x1F25350")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1F25380", Offset = "0x1F25380", VA = "0x1F25380", Slot = "5")]
	public override void HighlightFlush()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1F2574C", Offset = "0x1F2574C", VA = "0x1F2574C", Slot = "4")]
	public override void HighlightSingle(float strength)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1F25C10", Offset = "0x1F25C10", VA = "0x1F25C10")]
	public SkyHighlighter()
	{
	}
}
[Token(Token = "0x2000105")]
public class TechnoBurst : MonoBehaviour
{
	[Token(Token = "0x600060B")]
	[Address(RVA = "0x29CF880", Offset = "0x29CF880", VA = "0x29CF880")]
	public TechnoBurst()
	{
	}
}
[Token(Token = "0x2000106")]
public class MovingCylinder : MonoBehaviour
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject cylinder1;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject cylinder2;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject cylinder3;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30EB")]
	[SerializeField]
	private GameObject cylinder4;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x19D58DC", Offset = "0x19D58DC", VA = "0x19D58DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x19D63F0", Offset = "0x19D63F0", VA = "0x19D63F0")]
	public MovingCylinder()
	{
	}
}
[Token(Token = "0x2000107")]
public class NetherworldSphereMover : MonoBehaviour
{
	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private int pointCount;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE78")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxMovement;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x19DCFC8", Offset = "0x19DCFC8", VA = "0x19DCFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x19DD3FC", Offset = "0x19DD3FC", VA = "0x19DD3FC")]
	public NetherworldSphereMover()
	{
	}
}
[Token(Token = "0x2000108")]
public class Planet : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x19E5520", Offset = "0x19E5520", VA = "0x19E5520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x19E56DC", Offset = "0x19E56DC", VA = "0x19E56DC")]
	public Planet()
	{
	}
}
[Token(Token = "0x2000109")]
public class PlayspaceBoundaries : MonoBehaviour
{
	[Token(Token = "0x6000612")]
	[Address(RVA = "0x19E61AC", Offset = "0x19E61AC", VA = "0x19E61AC")]
	public PlayspaceBoundaries()
	{
	}
}
[Token(Token = "0x200010A")]
public class SatelliteMover : MonoBehaviour
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int pointCount;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30F3")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1F73914", Offset = "0x1F73914", VA = "0x1F73914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1F73CE8", Offset = "0x1F73CE8", VA = "0x1F73CE8")]
	public SatelliteMover()
	{
	}
}
[Token(Token = "0x200010B")]
public class ScoreComboPanel : MonoBehaviour
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1F73D44", Offset = "0x1F73D44", VA = "0x1F73D44")]
	public ScoreComboPanel()
	{
	}
}
[Token(Token = "0x200010C")]
public class ShuttleEngine : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private ParticleSystem[] particles;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1F76490", Offset = "0x1F76490", VA = "0x1F76490")]
	public void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1F7651C", Offset = "0x1F7651C", VA = "0x1F7651C")]
	public void ControlEngine(int power)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1F7666C", Offset = "0x1F7666C", VA = "0x1F7666C")]
	public ShuttleEngine()
	{
	}
}
[Token(Token = "0x200010D")]
public class SkyWheel : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE88")]
	public GameObject skyWheel;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1F25D3C", Offset = "0x1F25D3C", VA = "0x1F25D3C")]
	public void EnableSkyWheel()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1F25D94", Offset = "0x1F25D94", VA = "0x1F25D94")]
	public void DisableSkyWheel()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1F25DEC", Offset = "0x1F25DEC", VA = "0x1F25DEC")]
	public SkyWheel()
	{
	}
}
[Token(Token = "0x200010E")]
public class SkycityBattleIsland : MonoBehaviour
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject battleIsland;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float minSpawnTime;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxSpawnTime;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30FB")]
	[SerializeField]
	private float minFlightTime;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float maxFlightTime;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FE98")]
	[SerializeField]
	private float minY;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxY;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float minX;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxX;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3103")]
	[SerializeField]
	private float minZ;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float maxZ;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FEA8")]
	[SerializeField]
	private float maxBattleIslands;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeSinceLastSpawn;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float nextSpawnTime;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int existingBattleIslands;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1F25E1C", Offset = "0x1F25E1C", VA = "0x1F25E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1F25E7C", Offset = "0x1F25E7C", VA = "0x1F25E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1F2635C", Offset = "0x1F2635C", VA = "0x1F2635C")]
	private void DecreaseNumberOfBattleIslands()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1F263BC", Offset = "0x1F263BC", VA = "0x1F263BC")]
	public SkycityBattleIsland()
	{
	}
}
[Token(Token = "0x200010F")]
public class SkycityIslandMover : MonoBehaviour
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310B")]
	[SerializeField]
	private int pointCount;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FEB8")]
	[SerializeField]
	private float maxMovement;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float rotationBaseSpeed;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool rotate;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool isCrystall;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1F263EC", Offset = "0x1F263EC", VA = "0x1F263EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1F26B74", Offset = "0x1F26B74", VA = "0x1F26B74")]
	public SkycityIslandMover()
	{
	}
}
[Token(Token = "0x2000110")]
public class SpaceshipMover : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3113")]
	public GameObject spaceship;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float minSpawnTime;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FEC8")]
	[SerializeField]
	private float maxSpawnTime;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float minFlightTime;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxFlightTime;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float minY;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x311B")]
	[SerializeField]
	private float maxY;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float minX;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FED8")]
	[SerializeField]
	private float maxX;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float minZ;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float maxZ;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeSinceLastSpawn;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3123")]
	private float nextSpawnTime;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int existingSpaceships;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1F28E48", Offset = "0x1F28E48", VA = "0x1F28E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1F28EA8", Offset = "0x1F28EA8", VA = "0x1F28EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1F29594", Offset = "0x1F29594", VA = "0x1F29594")]
	private void DecreaseNumberOfShips()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1F295F4", Offset = "0x1F295F4", VA = "0x1F295F4")]
	public SpaceshipMover()
	{
	}
}
[Token(Token = "0x2000111")]
public class TerrainGrassWindSetter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000583")]
	private class TerrainGrassWindSettings
	{
		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312B")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14A9C", Offset = "0xC14A9C")]
		public float speed;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14AE4", Offset = "0xC14AE4")]
		public float size;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FEF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14B2C", Offset = "0xC14B2C")]
		public float bending;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color tint;

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x29CFC70", Offset = "0x29CFC70", VA = "0x29CFC70")]
		public void SetToTerrainData(TerrainData terrainData)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x29CFAE4", Offset = "0x29CFAE4", VA = "0x29CFAE4")]
		public static TerrainGrassWindSettings FromTerrainData(TerrainData terrainData)
		{
			return null;
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x29CFFC8", Offset = "0x29CFFC8", VA = "0x29CFFC8")]
		public TerrainGrassWindSettings()
		{
		}
	}

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FEE8")]
	[SerializeField]
	private Terrain _terrain;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TerrainGrassWindSettings _windSettings;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TerrainData _terrainData;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TerrainGrassWindSettings _previousSettings;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x29CF8B0", Offset = "0x29CF8B0", VA = "0x29CF8B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x29CFD68", Offset = "0x29CFD68", VA = "0x29CFD68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x29CFF98", Offset = "0x29CFF98", VA = "0x29CFF98")]
	public TerrainGrassWindSetter()
	{
	}
}
[Token(Token = "0x2000112")]
public class UpdateGlobalShaderTime : MonoBehaviour
{
	[Token(Token = "0x6000629")]
	[Address(RVA = "0x24CE5C0", Offset = "0x24CE5C0", VA = "0x24CE5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x24CE668", Offset = "0x24CE668", VA = "0x24CE668")]
	public UpdateGlobalShaderTime()
	{
	}
}
[Token(Token = "0x2000113")]
public class EnvironmentPreviewGenerator : MonoBehaviour
{
	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1C2643C", Offset = "0x1C2643C", VA = "0x1C2643C")]
	public Sprite GeneratePreview(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1C26AB8", Offset = "0x1C26AB8", VA = "0x1C26AB8")]
	public EnvironmentPreviewGenerator()
	{
	}
}
[Token(Token = "0x2000114")]
public class MenuEnvironment : MonoBehaviour
{
	[Token(Token = "0x600062D")]
	[Address(RVA = "0x21EB3BC", Offset = "0x21EB3BC", VA = "0x21EB3BC")]
	public MenuEnvironment()
	{
	}
}
[Token(Token = "0x2000115")]
public class TheSunAndOnly : MonoBehaviour
{
	[Token(Token = "0x600062E")]
	[Address(RVA = "0x29D2C90", Offset = "0x29D2C90", VA = "0x29D2C90")]
	public TheSunAndOnly()
	{
	}
}
[Token(Token = "0x2000116")]
public class CollidableHeadObject : CollidableObject
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameManager gameManager;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x2192BCC", Offset = "0x2192BCC", VA = "0x2192BCC", Slot = "4")]
	internal override Vector3 GetSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x2192C40", Offset = "0x2192C40", VA = "0x2192C40", Slot = "6")]
	internal override bool IsController()
	{
		return default(bool);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x2192C64", Offset = "0x2192C64", VA = "0x2192C64", Slot = "7")]
	internal override Controller GetController()
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x2192C80", Offset = "0x2192C80", VA = "0x2192C80", Slot = "5")]
	internal override GameManager GetGameManager()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x2192CB0", Offset = "0x2192CB0", VA = "0x2192CB0")]
	internal void Setup(GameManager manager)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x2192CE8", Offset = "0x2192CE8", VA = "0x2192CE8")]
	public CollidableHeadObject()
	{
	}
}
[Token(Token = "0x2000117")]
public abstract class CollidableObject : MonoBehaviour
{
	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public WeaponType weaponType;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3133")]
	private Dictionary<MovingElement, HashSet<Collider>> contacts;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x2192D48", Offset = "0x2192D48", VA = "0x2192D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x2192DEC", Offset = "0x2192DEC", VA = "0x2192DEC")]
	internal void PartTriggerEnter(CollidableObjectPart collidableObjectPart, Collider contactCollider)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x2193178", Offset = "0x2193178", VA = "0x2193178")]
	internal void PartTriggerExit(CollidableObjectPart collidableObjectPart, Collider contactCollider)
	{
	}

	[Token(Token = "0x6000638")]
	internal abstract Vector3 GetSpeed();

	[Token(Token = "0x6000639")]
	internal abstract GameManager GetGameManager();

	[Token(Token = "0x600063A")]
	internal abstract bool IsController();

	[Token(Token = "0x600063B")]
	internal abstract Controller GetController();

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x2192D18", Offset = "0x2192D18", VA = "0x2192D18")]
	protected CollidableObject()
	{
	}
}
[Token(Token = "0x2000118")]
public interface DestroyableElement
{
	[Token(Token = "0x600063D")]
	bool HasBeenHit();

	[Token(Token = "0x600063E")]
	void SetHit();

	[Token(Token = "0x600063F")]
	void CancelMovement();

	[Token(Token = "0x6000640")]
	void BounceOff(float objectVelocity);

	[Token(Token = "0x6000641")]
	void DestroyWithEffect(bool completeDestruction, CollidableObject co, float currentDebrisDuration, Vector3 hitSpeed);

	[Token(Token = "0x6000642")]
	void DestroyGameObject(float currentDebrisDuration);

	[Token(Token = "0x6000643")]
	void DeactivateSwingIndicator();

	[Token(Token = "0x6000644")]
	Vector3 ReturnPosition();

	[Token(Token = "0x6000645")]
	GameObject GetGameObject();
}
[Token(Token = "0x2000119")]
public class MultiplierIndicator : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	public enum Mode
	{
		[Token(Token = "0x40027E0")]
		OFF,
		[Token(Token = "0x40027E1")]
		COUNTDOWN,
		[Token(Token = "0x40027E2")]
		MULTIPLIER
	}

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private TextMeshProUGUI multiplierText;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF08")]
	[SerializeField]
	private TextMeshProUGUI multiplierLabel;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Slider multiplierSlider;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x19D79F8", Offset = "0x19D79F8", VA = "0x19D79F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x19D7D5C", Offset = "0x19D7D5C", VA = "0x19D7D5C")]
	public void SetSimpleValueOnly(string value)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x19D7DB4", Offset = "0x19D7DB4", VA = "0x19D7DB4")]
	public void SetMultiplier(float percentage)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x19D7A30", Offset = "0x19D7A30", VA = "0x19D7A30")]
	internal void SetMode(Mode mode)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x19D7FFC", Offset = "0x19D7FFC", VA = "0x19D7FFC")]
	internal Quaternion GetTextRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x19D8090", Offset = "0x19D8090", VA = "0x19D8090")]
	internal Vector3 GetTextPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x19D8104", Offset = "0x19D8104", VA = "0x19D8104")]
	internal Vector3 GetTextLocalScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x19D8178", Offset = "0x19D8178", VA = "0x19D8178")]
	internal GameObject GetTextComponent()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x19D81C8", Offset = "0x19D81C8", VA = "0x19D81C8")]
	public MultiplierIndicator()
	{
	}
}
[Token(Token = "0x200011A")]
public class PunchShockwaveEffect : MonoBehaviour
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0x19E8260", Offset = "0x19E8260", VA = "0x19E8260")]
	public PunchShockwaveEffect()
	{
	}
}
[Token(Token = "0x200011B")]
public class ShatterParticles : MonoBehaviour
{
	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1F75FD0", Offset = "0x1F75FD0", VA = "0x1F75FD0")]
	public ShatterParticles()
	{
	}
}
[Token(Token = "0x200011C")]
public class VFXConfiguration : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE905C", Offset = "0xBE905C")]
	private List<ParticleSystem> nonLoopingEffects;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x24CE6C8", Offset = "0x24CE6C8", VA = "0x24CE6C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x24CE6F8", Offset = "0x24CE6F8", VA = "0x24CE6F8")]
	private void CreatNonLoopingVFXList()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x24CE70C", Offset = "0x24CE70C", VA = "0x24CE70C")]
	public List<ParticleSystem> GetNonLoopingEffects()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x24CE73C", Offset = "0x24CE73C", VA = "0x24CE73C")]
	public VFXConfiguration()
	{
	}
}
[Token(Token = "0x200011D")]
public class VFXPoolManager : MonoBehaviour
{
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC8C", Offset = "0xBDEC8C")]
	private sealed class <_PutObjectBackInPool>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float delay;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314B")]
		public VFXPoolManager <>4__this;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ParticleSystem spawnedPS;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF38")]
		public ParticleSystem prefab;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x24CFAD8", Offset = "0x24CFAD8", VA = "0x24CFAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x24CFBA8", Offset = "0x24CFBA8", VA = "0x24CFBA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x24CF6A0", Offset = "0x24CF6A0", VA = "0x24CF6A0")]
		[DebuggerHidden]
		public <_PutObjectBackInPool>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x24CF848", Offset = "0x24CF848", VA = "0x24CF848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x24CF85C", Offset = "0x24CF85C", VA = "0x24CF85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x24CFB08", Offset = "0x24CFB08", VA = "0x24CFB08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int initialPoolSize;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool allowGrowing;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 startPosition;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3143")]
	private Quaternion startRotation;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Dictionary<ParticleSystem, Queue<ParticleSystem>> poolDictionary;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF28")]
	private VFXConfiguration vfxConfiguration;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x24CE7F4", Offset = "0x24CE7F4", VA = "0x24CE7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x24CE8D8", Offset = "0x24CE8D8", VA = "0x24CE8D8")]
	private void InstantiateGivenVFX()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x24CEEF4", Offset = "0x24CEEF4", VA = "0x24CEEF4")]
	private ParticleSystem GrowPool(ParticleSystem prefab)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x24CF088", Offset = "0x24CF088", VA = "0x24CF088")]
	private ParticleSystem GetObjectFromPool(ParticleSystem prefab)
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x24CF158", Offset = "0x24CF158", VA = "0x24CF158")]
	private void CreateNewPool(ParticleSystem prefab)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x24CEDB4", Offset = "0x24CEDB4", VA = "0x24CEDB4")]
	private void SetParticleSystem(ParticleSystem ps, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x24CF254", Offset = "0x24CF254", VA = "0x24CF254")]
	public ParticleSystem SpawnFromPool(ParticleSystem prefab, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x24CF56C", Offset = "0x24CF56C", VA = "0x24CF56C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC19C70", Offset = "0xC19C70")]
	private IEnumerator _PutObjectBackInPool(ParticleSystem prefab, ParticleSystem spawnedPS, float delay)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x24CF6E8", Offset = "0x24CF6E8", VA = "0x24CF6E8")]
	public VFXPoolManager()
	{
	}
}
[Token(Token = "0x200011E")]
public abstract class WeaponDeployer : MonoBehaviour
{
	[Token(Token = "0x600065E")]
	internal abstract void TriggerDeployment(bool turnOn);

	[Token(Token = "0x600065F")]
	internal abstract void ShowCollision();

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x24EFA54", Offset = "0x24EFA54", VA = "0x24EFA54")]
	protected WeaponDeployer()
	{
	}
}
[Token(Token = "0x200011F")]
public class WeaponDeployerShield : WeaponDeployer
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator animator;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x24EFA84", Offset = "0x24EFA84", VA = "0x24EFA84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x24EFB10", Offset = "0x24EFB10", VA = "0x24EFB10", Slot = "4")]
	internal override void TriggerDeployment(bool turnOn)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x24EFC68", Offset = "0x24EFC68", VA = "0x24EFC68", Slot = "5")]
	internal override void ShowCollision()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x24EFD04", Offset = "0x24EFD04", VA = "0x24EFD04")]
	public WeaponDeployerShield()
	{
	}
}
[Token(Token = "0x2000120")]
public class WeaponStartInfo : MonoBehaviour
{
	[Token(Token = "0x6000665")]
	[Address(RVA = "0x24EFD34", Offset = "0x24EFD34", VA = "0x24EFD34")]
	public WeaponStartInfo()
	{
	}
}
[Token(Token = "0x2000121")]
public class EditorPositionLocalizationString : MonoBehaviour
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float currentBeat;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int maxBeats;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3153")]
	public string timeLeft;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1C25888", Offset = "0x1C25888", VA = "0x1C25888")]
	public void SetPosition(float currentBeat, int maxBeat, string timeLeft)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1C25A04", Offset = "0x1C25A04", VA = "0x1C25A04")]
	public void SetEnd()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1C25B10", Offset = "0x1C25B10", VA = "0x1C25B10")]
	public EditorPositionLocalizationString()
	{
	}
}
[Token(Token = "0x2000122")]
public class PlaylistSongInfoLocalizationString : MonoBehaviour
{
	[Token(Token = "0x6000669")]
	[Address(RVA = "0x19E5CC4", Offset = "0x19E5CC4", VA = "0x19E5CC4")]
	internal void UpdateEntry(int numberOfFinishedSongs, int playlistSongCount, int playedRounds)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x19E617C", Offset = "0x19E617C", VA = "0x19E617C")]
	public PlaylistSongInfoLocalizationString()
	{
	}
}
[Token(Token = "0x2000123")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x2000586")]
	private enum AudioGroups
	{
		[Token(Token = "0x40027EA")]
		Music,
		[Token(Token = "0x40027EB")]
		SFX
	}

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static AudioManager instance;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF48")]
	public AudioSetting[] audioSettings;

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x2AD0528", Offset = "0x2AD0528", VA = "0x2AD0528")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x2AD05C8", Offset = "0x2AD05C8", VA = "0x2AD05C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x2AD071C", Offset = "0x2AD071C", VA = "0x2AD071C")]
	public AudioManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000124")]
public class AudioSetting
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x315B")]
	public Slider slider;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject redX;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF58")]
	public string exposedParam;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x2AD06AC", Offset = "0x2AD06AC", VA = "0x2AD06AC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x2AD074C", Offset = "0x2AD074C", VA = "0x2AD074C")]
	public AudioSetting()
	{
	}
}
[Token(Token = "0x2000125")]
public class AudioSourceEffects : MonoBehaviour
{
	[Token(Token = "0x6000670")]
	[Address(RVA = "0x2AD077C", Offset = "0x2AD077C", VA = "0x2AD077C")]
	public AudioSourceEffects()
	{
	}
}
[Token(Token = "0x2000126")]
public class AudioSourceMusic : MonoBehaviour
{
	[Token(Token = "0x6000671")]
	[Address(RVA = "0x2A69F84", Offset = "0x2A69F84", VA = "0x2A69F84")]
	public AudioSourceMusic()
	{
	}
}
[Token(Token = "0x2000127")]
public class ImageCycler : MonoBehaviour
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Sprite[] sprites;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float framesPerSecond;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Image image;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3163")]
	private int index;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1AE8F24", Offset = "0x1AE8F24", VA = "0x1AE8F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1AE8FB0", Offset = "0x1AE8FB0", VA = "0x1AE8FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1AE909C", Offset = "0x1AE909C", VA = "0x1AE909C")]
	public ImageCycler()
	{
	}
}
[Token(Token = "0x2000128")]
public class IngameMenuSoundConfiguration : MonoBehaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9138", Offset = "0xBE9138")]
	public AudioClip buttonHover;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF68")]
	public AudioClip buttonClick;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1AE9990", Offset = "0x1AE9990", VA = "0x1AE9990")]
	public IngameMenuSoundConfiguration()
	{
	}
}
[Token(Token = "0x2000129")]
public class LIVFakeShadow : MonoBehaviour
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Transform headCamera;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float lerpTime;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1AF14B8", Offset = "0x1AF14B8", VA = "0x1AF14B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1AF16EC", Offset = "0x1AF16EC", VA = "0x1AF16EC")]
	public LIVFakeShadow()
	{
	}
}
[Token(Token = "0x200012A")]
public class DriveNameHelper
{
	[Token(Token = "0x2000587")]
	public enum SIGDN : uint
	{
		[Token(Token = "0x40027ED")]
		NORMALDISPLAY = 0u,
		[Token(Token = "0x40027EE")]
		PARENTRELATIVEPARSING = 2147581953u,
		[Token(Token = "0x40027EF")]
		DESKTOPABSOLUTEPARSING = 2147647488u,
		[Token(Token = "0x40027F0")]
		PARENTRELATIVEEDITING = 2147684353u,
		[Token(Token = "0x40027F1")]
		DESKTOPABSOLUTEEDITING = 2147794944u,
		[Token(Token = "0x40027F2")]
		FILESYSPATH = 2147844096u,
		[Token(Token = "0x40027F3")]
		URL = 2147909632u,
		[Token(Token = "0x40027F4")]
		PARENTRELATIVEFORADDRESSBAR = 2147991553u,
		[Token(Token = "0x40027F5")]
		PARENTRELATIVE = 2148007937u
	}

	[Token(Token = "0x400088C")]
	public const string SHELL = "shell32.dll";

	[PreserveSig]
	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1C177E0", Offset = "0x1C177E0", VA = "0x1C177E0")]
	public static extern uint SHParseDisplayName(string pszName, IntPtr zero, out IntPtr ppidl, uint sfgaoIn, out uint psfgaoOut);

	[PreserveSig]
	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1C17924", Offset = "0x1C17924", VA = "0x1C17924")]
	public static extern uint SHGetNameFromIDList(IntPtr pidl, SIGDN sigdnName, out string ppszName);

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1C17A88", Offset = "0x1C17A88", VA = "0x1C17A88")]
	public static string GetDriveLabel(string driveNameAsLetterColonBackslash)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1C17BE4", Offset = "0x1C17BE4", VA = "0x1C17BE4")]
	public DriveNameHelper()
	{
	}
}
[Token(Token = "0x200012B")]
public interface IListItemWithIconAndText
{
	[Token(Token = "0x600067C")]
	void SetIcon(string text);

	[Token(Token = "0x600067D")]
	void SetText(string text);
}
[Token(Token = "0x200012C")]
public class MenuHoverTooltip : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject toolTip;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x21EB3EC", Offset = "0x21EB3EC", VA = "0x21EB3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x21EB534", Offset = "0x21EB534", VA = "0x21EB534", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x21EB680", Offset = "0x21EB680", VA = "0x21EB680", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x21EB7CC", Offset = "0x21EB7CC", VA = "0x21EB7CC")]
	public MenuHoverTooltip()
	{
	}
}
[Token(Token = "0x200012D")]
public class MenuLogoEffect : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9250", Offset = "0xBE9250")]
	[SerializeField]
	private DissolveSettings dissolveSettings;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float timeToDissolve;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x317B")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private ParticleSystem ballParticles;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FF98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9384", Offset = "0xBE9384")]
	[SerializeField]
	private GameObject trailObject;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private ParticleSystem trailObjectParticles;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 trailPosition1;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 trailPosition2;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3183")]
	[SerializeField]
	private Vector3 trailPosition3;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private Vector3 trailPosition4;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9530", Offset = "0xBE9530")]
	[SerializeField]
	private Vector3 startPosition;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 endPosition;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float timeToFly;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int timeToWait;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318B")]
	[SerializeField]
	private int firstWaitTime;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private AudioSource sfxAudioSource;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFB8")]
	[SerializeField]
	private AudioClip heartBeat;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeSinceLastEffect;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dissolve ballDissolve;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x21EB7FC", Offset = "0x21EB7FC", VA = "0x21EB7FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x21EBA60", Offset = "0x21EBA60", VA = "0x21EBA60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x21EC674", Offset = "0x21EC674", VA = "0x21EC674")]
	private void ResetBall()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x21EC834", Offset = "0x21EC834", VA = "0x21EC834")]
	private void DissolveBall()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x21EC8B8", Offset = "0x21EC8B8", VA = "0x21EC8B8")]
	private void DisableBall()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x21EC764", Offset = "0x21EC764", VA = "0x21EC764")]
	private void ResetTrailObject()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x21EC910", Offset = "0x21EC910", VA = "0x21EC910")]
	private void FadeOutTrail()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x21EC974", Offset = "0x21EC974", VA = "0x21EC974")]
	private void PlayHeartBeat()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x21EC9CC", Offset = "0x21EC9CC", VA = "0x21EC9CC")]
	private void DisableTrailObject()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x21ECA24", Offset = "0x21ECA24", VA = "0x21ECA24")]
	public MenuLogoEffect()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x21ECAAC", Offset = "0x21ECAAC", VA = "0x21ECAAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19D20", Offset = "0xC19D20")]
	private void <Update>b__20_0()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x21ECADC", Offset = "0x21ECADC", VA = "0x21ECADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19D5C", Offset = "0xC19D5C")]
	private void <Update>b__20_1()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x21ECB0C", Offset = "0x21ECB0C", VA = "0x21ECB0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19D98", Offset = "0xC19D98")]
	private void <Update>b__20_2()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x21ECB3C", Offset = "0x21ECB3C", VA = "0x21ECB3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19DD4", Offset = "0xC19DD4")]
	private void <Update>b__20_3()
	{
	}
}
[Token(Token = "0x200012E")]
public class MenuSoundConfiguration : MonoBehaviour
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9718", Offset = "0xBE9718")]
	public AudioClip weaponUnlockedVoice;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3193")]
	public AudioClip weaponUnlockedVoiceFemale;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioClip maleVoiceSampleClip;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFC8")]
	public AudioClip femaleVoiceSampleClip;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip weaponUnlockedJingle;

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x21ECB6C", Offset = "0x21ECB6C", VA = "0x21ECB6C")]
	public MenuSoundConfiguration()
	{
	}
}
[Token(Token = "0x200012F")]
[DisallowMultipleComponent]
public class Oscillator : MonoBehaviour
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector3 movementVector;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float period;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x319B")]
	private float movementFactor;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 startingPos;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x19DD870", Offset = "0x19DD870", VA = "0x19DD870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x19DD8E8", Offset = "0x19DD8E8", VA = "0x19DD8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x19DDBFC", Offset = "0x19DDBFC", VA = "0x19DDBFC")]
	public Oscillator()
	{
	}
}
[Token(Token = "0x2000130")]
public class WhiteFrame : MonoBehaviour
{
	[Token(Token = "0x6000694")]
	[Address(RVA = "0x24EFD64", Offset = "0x24EFD64", VA = "0x24EFD64")]
	public WhiteFrame()
	{
	}
}
[Token(Token = "0x2000131")]
public class ZeroZPosition : MonoBehaviour
{
	[Token(Token = "0x6000695")]
	[Address(RVA = "0x24EFD94", Offset = "0x24EFD94", VA = "0x24EFD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x24F011C", Offset = "0x24F011C", VA = "0x24F011C")]
	private void ZeroItAll(Transform transform)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x24F0484", Offset = "0x24F0484", VA = "0x24F0484")]
	public ZeroZPosition()
	{
	}
}
[Token(Token = "0x2000132")]
public class PlayPSOnVisible : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECC8", Offset = "0xBDECC8")]
	private sealed class <DisableGameObject>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFD8")]
		private int <>1__state;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float delay;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayPSOnVisible <>4__this;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x19E5BC4", Offset = "0x19E5BC4", VA = "0x19E5BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x19E5C94", Offset = "0x19E5C94", VA = "0x19E5C94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x19E5954", Offset = "0x19E5954", VA = "0x19E5954")]
		[DebuggerHidden]
		public <DisableGameObject>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x19E59CC", Offset = "0x19E59CC", VA = "0x19E59CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x19E59E0", Offset = "0x19E59E0", VA = "0x19E59E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x19E5BF4", Offset = "0x19E5BF4", VA = "0x19E5BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x19E5720", Offset = "0x19E5720", VA = "0x19E5720")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x19E5870", Offset = "0x19E5870", VA = "0x19E5870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC19E10", Offset = "0xC19E10")]
	private IEnumerator DisableGameObject(float delay)
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x19E599C", Offset = "0x19E599C", VA = "0x19E599C")]
	public PlayPSOnVisible()
	{
	}
}
[Token(Token = "0x2000133")]
public class OculusControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31A3")]
	public GameObject originalRift;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject questAndRiftS;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x19DD470", Offset = "0x19DD470", VA = "0x19DD470")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x19DD4F0", Offset = "0x19DD4F0", VA = "0x19DD4F0")]
	public OculusControllerVisual()
	{
	}
}
[Serializable]
[Token(Token = "0x2000134")]
public abstract class AbstractPCMobileSwitcher : MonoBehaviour
{
	[Token(Token = "0x600069D")]
	public abstract void SwitchToPC();

	[Token(Token = "0x600069E")]
	public abstract void SwitchToMobile();

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x2AC52D8", Offset = "0x2AC52D8", VA = "0x2AC52D8")]
	protected AbstractPCMobileSwitcher()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class QuestPCVRMaterialsAndRenderer
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFE8")]
	public Renderer renderer;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material materialForQuest;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material materialForPCVR;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x19E8290", Offset = "0x19E8290", VA = "0x19E8290")]
	public QuestPCVRMaterialsAndRenderer()
	{
	}
}
[Token(Token = "0x2000136")]
public class MobilePCMaterialSwitcher : AbstractPCMobileSwitcher
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public QuestPCVRMaterialsAndRenderer[] switchingMaterials;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x19D3110", Offset = "0x19D3110", VA = "0x19D3110", Slot = "4")]
	public override void SwitchToPC()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x19D3250", Offset = "0x19D3250", VA = "0x19D3250", Slot = "5")]
	public override void SwitchToMobile()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x19D3390", Offset = "0x19D3390", VA = "0x19D3390")]
	public MobilePCMaterialSwitcher()
	{
	}
}
[Token(Token = "0x2000137")]
public class MobilePCObjectSwitcher : AbstractPCMobileSwitcher
{
	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31AB")]
	[SerializeField]
	private List<GameObject> objectsToDisableOnQuest;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private List<GameObject> objectsToEnableOnQuest;

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x19D33C0", Offset = "0x19D33C0", VA = "0x19D33C0", Slot = "4")]
	public override void SwitchToPC()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x19D3A34", Offset = "0x19D3A34", VA = "0x19D3A34", Slot = "5")]
	public override void SwitchToMobile()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x19D40A8", Offset = "0x19D40A8", VA = "0x19D40A8")]
	public void EnableAllForBaking()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x19D471C", Offset = "0x19D471C", VA = "0x19D471C")]
	public MobilePCObjectSwitcher()
	{
	}
}
[Token(Token = "0x2000138")]
public class SideButtonPulse : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E1FFF8")]
	public float xScale;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yScale;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float finalalpha;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float firstLoopHalfDuration;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31B3")]
	public float secondloopHalfDuration;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float waitDuration;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E20008")]
	private Vector3 initialScale;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 initialPosition;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RawImage logoImage;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1F7669C", Offset = "0x1F7669C", VA = "0x1F7669C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1F76BC0", Offset = "0x1F76BC0", VA = "0x1F76BC0")]
	public SideButtonPulse()
	{
	}
}
[Token(Token = "0x2000139")]
public class BezierCPRuntimeEditor : MonoBehaviour
{
	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BezierPoint point;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31BB")]
	private bool precedingCP;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private BezierCPRuntimeEditor otherCP;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1D5CBC8", Offset = "0x1D5CBC8", VA = "0x1D5CBC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1D5CE10", Offset = "0x1D5CE10", VA = "0x1D5CE10")]
	public void Update()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1D5CF60", Offset = "0x1D5CF60", VA = "0x1D5CF60")]
	public void OnDrag()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1D5D940", Offset = "0x1D5D940", VA = "0x1D5D940")]
	public BezierCPRuntimeEditor()
	{
	}
}
[Token(Token = "0x200013A")]
public class LiveRecorderHand : MonoBehaviour
{
	[Token(Token = "0x2000589")]
	public delegate void OnFirstPlaneHit(Vector3 contactPoint);

	[Token(Token = "0x1400001D")]
	public event OnFirstPlaneHit onFirstPlaneHit
	{
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1AFEA10", Offset = "0x1AFEA10", VA = "0x1AFEA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19EC0", Offset = "0xC19EC0")]
		add
		{
		}
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x1AFEB5C", Offset = "0x1AFEB5C", VA = "0x1AFEB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC19EFC", Offset = "0xC19EFC")]
		remove
		{
		}
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1AFECA8", Offset = "0x1AFECA8", VA = "0x1AFECA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1AFF218", Offset = "0x1AFF218", VA = "0x1AFF218")]
	public LiveRecorderHand()
	{
	}
}
[Token(Token = "0x200013B")]
public class TextLogoAura : MonoBehaviour
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yShift;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float xScale;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float yScale;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C3")]
	public float loopDuration;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float waitDuration;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E20028")]
	private Vector3 initialScale;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 initialPosition;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RawImage logoImage;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x29D2600", Offset = "0x29D2600", VA = "0x29D2600")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x29D2BF0", Offset = "0x29D2BF0", VA = "0x29D2BF0")]
	public TextLogoAura()
	{
	}
}
[Token(Token = "0x200013C")]
public class RagdollForVideos : MonoBehaviour
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VRIK vrIKScript;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31CB")]
	public GameObject fireworks;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Collider headsetCollider;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E20038")]
	public GameObject[] hands;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody[] ragdollRigidbodies;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x2815230", Offset = "0x2815230", VA = "0x2815230")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x28153AC", Offset = "0x28153AC", VA = "0x28153AC")]
	public void ActivateRagdoll()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x2815614", Offset = "0x2815614", VA = "0x2815614")]
	public RagdollForVideos()
	{
	}
}
[Token(Token = "0x200013D")]
public class ScreenshotMaker : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int resWidth;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int resHeight;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31D3")]
	public Camera currentCamera;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110000")]
	private bool takeHiResShot;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1F73D74", Offset = "0x1F73D74", VA = "0x1F73D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1F73DE4", Offset = "0x1F73DE4", VA = "0x1F73DE4")]
	public void TakeHiResShot(Vector3 pos, Vector3 rot)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1F73EF4", Offset = "0x1F73EF4", VA = "0x1F73EF4")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1F74518", Offset = "0x1F74518", VA = "0x1F74518")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1F749B4", Offset = "0x1F749B4", VA = "0x1F749B4")]
	public ScreenshotMaker()
	{
	}
}
[Token(Token = "0x200013E")]
public static class Easings
{
	[Token(Token = "0x200058A")]
	public enum Functions
	{
		[Token(Token = "0x40027FB")]
		Linear,
		[Token(Token = "0x40027FC")]
		QuadraticEaseIn,
		[Token(Token = "0x40027FD")]
		QuadraticEaseOut,
		[Token(Token = "0x40027FE")]
		QuadraticEaseInOut,
		[Token(Token = "0x40027FF")]
		CubicEaseIn,
		[Token(Token = "0x4002800")]
		CubicEaseOut,
		[Token(Token = "0x4002801")]
		CubicEaseInOut,
		[Token(Token = "0x4002802")]
		QuarticEaseIn,
		[Token(Token = "0x4002803")]
		QuarticEaseOut,
		[Token(Token = "0x4002804")]
		QuarticEaseInOut,
		[Token(Token = "0x4002805")]
		QuinticEaseIn,
		[Token(Token = "0x4002806")]
		QuinticEaseOut,
		[Token(Token = "0x4002807")]
		QuinticEaseInOut,
		[Token(Token = "0x4002808")]
		SineEaseIn,
		[Token(Token = "0x4002809")]
		SineEaseOut,
		[Token(Token = "0x400280A")]
		SineEaseInOut,
		[Token(Token = "0x400280B")]
		CircularEaseIn,
		[Token(Token = "0x400280C")]
		CircularEaseOut,
		[Token(Token = "0x400280D")]
		CircularEaseInOut,
		[Token(Token = "0x400280E")]
		ExponentialEaseIn,
		[Token(Token = "0x400280F")]
		ExponentialEaseOut,
		[Token(Token = "0x4002810")]
		ExponentialEaseInOut,
		[Token(Token = "0x4002811")]
		ElasticEaseIn,
		[Token(Token = "0x4002812")]
		ElasticEaseOut,
		[Token(Token = "0x4002813")]
		ElasticEaseInOut,
		[Token(Token = "0x4002814")]
		BackEaseIn,
		[Token(Token = "0x4002815")]
		BackEaseOut,
		[Token(Token = "0x4002816")]
		BackEaseInOut,
		[Token(Token = "0x4002817")]
		BounceEaseIn,
		[Token(Token = "0x4002818")]
		BounceEaseOut,
		[Token(Token = "0x4002819")]
		BounceEaseInOut
	}

	[Token(Token = "0x40008D0")]
	private const float PI = (float)Math.PI;

	[Token(Token = "0x40008D1")]
	private const float HALFPI = (float)Math.PI / 2f;

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1C22960", Offset = "0x1C22960", VA = "0x1C22960")]
	public static float Interpolate(float p, Functions function)
	{
		return default(float);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1C23158", Offset = "0x1C23158", VA = "0x1C23158")]
	public static float Linear(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1C231E4", Offset = "0x1C231E4", VA = "0x1C231E4")]
	public static float QuadraticEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1C23178", Offset = "0x1C23178", VA = "0x1C23178")]
	public static float QuadraticEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1C23220", Offset = "0x1C23220", VA = "0x1C23220")]
	public static float QuadraticEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1C23320", Offset = "0x1C23320", VA = "0x1C23320")]
	public static float CubicEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1C2336C", Offset = "0x1C2336C", VA = "0x1C2336C")]
	public static float CubicEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1C233EC", Offset = "0x1C233EC", VA = "0x1C233EC")]
	public static float CubicEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1C23508", Offset = "0x1C23508", VA = "0x1C23508")]
	public static float QuarticEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1C23564", Offset = "0x1C23564", VA = "0x1C23564")]
	public static float QuarticEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1C23614", Offset = "0x1C23614", VA = "0x1C23614")]
	public static float QuarticEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1C23738", Offset = "0x1C23738", VA = "0x1C23738")]
	public static float QuinticEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1C237A4", Offset = "0x1C237A4", VA = "0x1C237A4")]
	public static float QuinticEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1C23844", Offset = "0x1C23844", VA = "0x1C23844")]
	public static float QuinticEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1C239A0", Offset = "0x1C239A0", VA = "0x1C239A0")]
	public static float SineEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1C23AC0", Offset = "0x1C23AC0", VA = "0x1C23AC0")]
	public static float SineEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1C23BC8", Offset = "0x1C23BC8", VA = "0x1C23BC8")]
	public static float SineEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1C23D00", Offset = "0x1C23D00", VA = "0x1C23D00")]
	public static float CircularEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1C23E2C", Offset = "0x1C23E2C", VA = "0x1C23E2C")]
	public static float CircularEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1C23F34", Offset = "0x1C23F34", VA = "0x1C23F34")]
	public static float CircularEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1C241FC", Offset = "0x1C241FC", VA = "0x1C241FC")]
	public static float ExponentialEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1C2437C", Offset = "0x1C2437C", VA = "0x1C2437C")]
	public static float ExponentialEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1C244F4", Offset = "0x1C244F4", VA = "0x1C244F4")]
	public static float ExponentialEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1C247BC", Offset = "0x1C247BC", VA = "0x1C247BC")]
	public static float ElasticEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1C2492C", Offset = "0x1C2492C", VA = "0x1C2492C")]
	public static float ElasticEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1C24AA8", Offset = "0x1C24AA8", VA = "0x1C24AA8")]
	public static float ElasticEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1C24DE0", Offset = "0x1C24DE0", VA = "0x1C24DE0")]
	public static float BackEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1C24F44", Offset = "0x1C24F44", VA = "0x1C24F44")]
	public static float BackEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1C250F0", Offset = "0x1C250F0", VA = "0x1C250F0")]
	public static float BackEaseInOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1C25468", Offset = "0x1C25468", VA = "0x1C25468")]
	public static float BounceEaseIn(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1C254D4", Offset = "0x1C254D4", VA = "0x1C254D4")]
	public static float BounceEaseOut(float p)
	{
		return default(float);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1C25780", Offset = "0x1C25780", VA = "0x1C25780")]
	public static float BounceEaseInOut(float p)
	{
		return default(float);
	}
}
[Token(Token = "0x200013F")]
public static class Extensions
{
	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1C27088", Offset = "0x1C27088", VA = "0x1C27088")]
	public static void SetTransparency(this Image p_image, float p_transparency)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1C271F0", Offset = "0x1C271F0", VA = "0x1C271F0")]
	public static void SetTransparency(this TextMeshProUGUI p_text, float p_transparency)
	{
	}

	[Token(Token = "0x60006DE")]
	public static T Next<T>(this T src) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x60006DF")]
	public static T Previous<T>(this T src) where T : struct
	{
		return (T)null;
	}
}
[Token(Token = "0x2000140")]
public class FlyingCameraControl : MonoBehaviour
{
	[Token(Token = "0x200058B")]
	private enum View
	{
		[Token(Token = "0x400281B")]
		BACK,
		[Token(Token = "0x400281C")]
		FRONT,
		[Token(Token = "0x400281D")]
		SIDE
	}

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject[] elementsToFollow;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int speedMultiplier;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31F6")]
	[SerializeField]
	private int startAtZ;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private int endAtZ;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4C804")]
	[SerializeField]
	private KeyCode keyForStartAndStop;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private KeyCode keyForSwitchingView;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private KeyCode keyForSwitchingObjects;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private KeyCode keyForLeft;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31FD")]
	[SerializeField]
	private KeyCode keyForRight;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	[SerializeField]
	private KeyCode keyForBack;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4E424")]
	[SerializeField]
	private KeyCode keyForForward;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private KeyCode keyForFaster;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private KeyCode keyForSlower;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE9BB4", Offset = "0xBE9BB4")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3205")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private int currentlyFollowingObjectIndex;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4E42C")]
	private GameObject currentlyFollowingObject;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private View currentView;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool flyingAfterTheItem;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentPositionOfCameraX;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320D")]
	private float currentPositionOfCameraY;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	private float currentCameraZOffset;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4E434")]
	private float currentPositionOfObjectZ;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1AD9F00", Offset = "0x1AD9F00", VA = "0x1AD9F00")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1AD9FAC", Offset = "0x1AD9FAC", VA = "0x1AD9FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1ADAEB0", Offset = "0x1ADAEB0", VA = "0x1ADAEB0")]
	private void SetViewToFront()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1ADAF84", Offset = "0x1ADAF84", VA = "0x1ADAF84")]
	public FlyingCameraControl()
	{
	}
}
[Token(Token = "0x2000141")]
public class FollowingCamera : MonoBehaviour
{
	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1ADB0A4", Offset = "0x1ADB0A4", VA = "0x1ADB0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1ADB0B8", Offset = "0x1ADB0B8", VA = "0x1ADB0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1ADB2B8", Offset = "0x1ADB2B8", VA = "0x1ADB2B8")]
	public FollowingCamera()
	{
	}
}
[Token(Token = "0x2000142")]
public enum HelpBoxMessageType
{
	[Token(Token = "0x40008EA")]
	None,
	[Token(Token = "0x40008EB")]
	Info,
	[Token(Token = "0x40008EC")]
	Warning,
	[Token(Token = "0x40008ED")]
	Error
}
[Token(Token = "0x2000143")]
public class HelpBoxAttribute : PropertyAttribute
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x321D")]
	public string text;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
	public HelpBoxMessageType messageType;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1AE74C0", Offset = "0x1AE74C0", VA = "0x1AE74C0")]
	public HelpBoxAttribute(string text, HelpBoxMessageType messageType = HelpBoxMessageType.None)
	{
	}
}
[Token(Token = "0x2000144")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1AFF380", Offset = "0x1AFF380", VA = "0x1AFF380")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1AFF42C", Offset = "0x1AFF42C", VA = "0x1AFF42C")]
	internal void ExchangeScreen(bool towardsGame)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1AFFA0C", Offset = "0x1AFFA0C", VA = "0x1AFFA0C")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x2000145")]
public class ReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1F59058", Offset = "0x1F59058", VA = "0x1F59058")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000146")]
public class SpecialAreaInfoDisplay : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4E444")]
	[SerializeField]
	private Text specialText;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1F29A48", Offset = "0x1F29A48", VA = "0x1F29A48")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1F29AA0", Offset = "0x1F29AA0", VA = "0x1F29AA0")]
	public SpecialAreaInfoDisplay()
	{
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x2000147")]
	public enum JSONNodeType
	{
		[Token(Token = "0x40008F2")]
		Array = 1,
		[Token(Token = "0x40008F3")]
		Object = 2,
		[Token(Token = "0x40008F4")]
		String = 3,
		[Token(Token = "0x40008F5")]
		Number = 4,
		[Token(Token = "0x40008F6")]
		NullValue = 5,
		[Token(Token = "0x40008F7")]
		Boolean = 6,
		[Token(Token = "0x40008F8")]
		None = 7,
		[Token(Token = "0x40008F9")]
		Custom = 255
	}
	[Token(Token = "0x2000148")]
	public enum JSONTextMode
	{
		[Token(Token = "0x40008FB")]
		Compact,
		[Token(Token = "0x40008FC")]
		Indent
	}
	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2E10", Offset = "0xBD2E10")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200058C")]
		public struct Enumerator
		{
			[Token(Token = "0x2000840")]
			private enum Type
			{
				[Token(Token = "0x40032E2")]
				None,
				[Token(Token = "0x40032E3")]
				Array,
				[Token(Token = "0x40032E4")]
				Object
			}

			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170004A7")]
			public bool IsValid
			{
				[Token(Token = "0x6002BBA")]
				[Address(RVA = "0x1F1AEA0", Offset = "0x1F1AEA0", VA = "0x1F1AEA0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A8")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002BBD")]
				[Address(RVA = "0x1F1B064", Offset = "0x1F1B064", VA = "0x1F1B064")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x1F1AF1C", Offset = "0x1F1AF1C", VA = "0x1F1AF1C")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x1F1AFC0", Offset = "0x1F1AFC0", VA = "0x1F1AFC0")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x1F1B258", Offset = "0x1F1B258", VA = "0x1F1B258")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200058D")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4002821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004A9")]
			public JSONNode Current
			{
				[Token(Token = "0x6002BC2")]
				[Address(RVA = "0x1F1C038", Offset = "0x1F1C038", VA = "0x1F1C038")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0x1F1BE24", Offset = "0x1F1BE24", VA = "0x1F1BE24")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x1F1BEF8", Offset = "0x1F1BEF8", VA = "0x1F1BEF8")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x1F1BFCC", Offset = "0x1F1BFCC", VA = "0x1F1BFCC")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x1F1C120", Offset = "0x1F1C120", VA = "0x1F1C120")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0x1F1C17C", Offset = "0x1F1C17C", VA = "0x1F1C17C")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x200058E")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4002822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004AA")]
			public JSONNode Current
			{
				[Token(Token = "0x6002BC8")]
				[Address(RVA = "0x1F1B5D4", Offset = "0x1F1B5D4", VA = "0x1F1B5D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0x1F1B3C0", Offset = "0x1F1B3C0", VA = "0x1F1B3C0")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1F1B494", Offset = "0x1F1B494", VA = "0x1F1B494")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x1F1B568", Offset = "0x1F1B568", VA = "0x1F1B568")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x1F1B740", Offset = "0x1F1B740", VA = "0x1F1B740")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x1F1B79C", Offset = "0x1F1B79C", VA = "0x1F1B79C")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x200058F")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4002823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3245")]
			private JSONNode m_Node;

			[Token(Token = "0x4002824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170004AB")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002BCC")]
				[Address(RVA = "0x1F1B97C", Offset = "0x1F1B97C", VA = "0x1F1B97C", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCD")]
				[Address(RVA = "0x1F1B9CC", Offset = "0x1F1B9CC", VA = "0x1F1B9CC", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x1F1B7C8", Offset = "0x1F1B7C8", VA = "0x1F1B7C8")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x1F1BAA0", Offset = "0x1F1BAA0", VA = "0x1F1BAA0", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x1F1BAFC", Offset = "0x1F1BAFC", VA = "0x1F1BAFC", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x1F1BB4C", Offset = "0x1F1BB4C", VA = "0x1F1BB4C", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x1F1BBF0", Offset = "0x1F1BBF0", VA = "0x1F1BBF0", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x1F1BD80", Offset = "0x1F1BD80", VA = "0x1F1BD80", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED04", Offset = "0xBDED04")]
		private sealed class <get_Children>d__40 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E46C")]
			private int <>1__state;

			[Token(Token = "0x4002826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170004AD")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002BD6")]
				[Address(RVA = "0x1F853C4", Offset = "0x1F853C4", VA = "0x1F853C4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD8")]
				[Address(RVA = "0x1F85494", Offset = "0x1F85494", VA = "0x1F85494", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x1F7C668", Offset = "0x1F7C668", VA = "0x1F7C668")]
			[DebuggerHidden]
			public <get_Children>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x1F8531C", Offset = "0x1F8531C", VA = "0x1F8531C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0x1F85330", Offset = "0x1F85330", VA = "0x1F85330", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x1F853F4", Offset = "0x1F853F4", VA = "0x1F853F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0x1F854C4", Offset = "0x1F854C4", VA = "0x1F854C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x1F855F8", Offset = "0x1F855F8", VA = "0x1F855F8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED40", Offset = "0xBDED40")]
		private sealed class <get_DeepChildren>d__42 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x324D")]
			private JSONNode <>2__current;

			[Token(Token = "0x400282A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400282B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C80C")]
			public JSONNode <>4__this;

			[Token(Token = "0x400282C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x400282D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170004AF")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002BE0")]
				[Address(RVA = "0x1F8601C", Offset = "0x1F8601C", VA = "0x1F8601C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE2")]
				[Address(RVA = "0x1F860EC", Offset = "0x1F860EC", VA = "0x1F860EC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0x1F7C788", Offset = "0x1F7C788", VA = "0x1F7C788")]
			[DebuggerHidden]
			public <get_DeepChildren>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0x1F85630", Offset = "0x1F85630", VA = "0x1F85630", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0x1F85ADC", Offset = "0x1F85ADC", VA = "0x1F85ADC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x1F85A04", Offset = "0x1F85A04", VA = "0x1F85A04")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0x1F8592C", Offset = "0x1F8592C", VA = "0x1F8592C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0x1F8604C", Offset = "0x1F8604C", VA = "0x1F8604C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x1F8611C", Offset = "0x1F8611C", VA = "0x1F8611C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x1F86278", Offset = "0x1F86278", VA = "0x1F86278", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool longAsString;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3235")]
		public static JSONContainerType VectorContainerType;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static JSONContainerType QuaternionContainerType;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E45C")]
		public static JSONContainerType RectContainerType;

		[Token(Token = "0x17000028")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x60006EE")]
			get;
		}

		[Token(Token = "0x17000029")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x1F7C27C", Offset = "0x1F7C27C", VA = "0x1F7C27C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x1F7C29C", Offset = "0x1F7C29C", VA = "0x1F7C29C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700002A")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x1F7C2B8", Offset = "0x1F7C2B8", VA = "0x1F7C2B8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x1F7C2D8", Offset = "0x1F7C2D8", VA = "0x1F7C2D8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public virtual string Value
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x1F7C2F4", Offset = "0x1F7C2F4", VA = "0x1F7C2F4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x1F7C368", Offset = "0x1F7C368", VA = "0x1F7C368", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700002C")]
		public virtual int Count
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x1F7C380", Offset = "0x1F7C380", VA = "0x1F7C380", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002D")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x1F7C39C", Offset = "0x1F7C39C", VA = "0x1F7C39C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002E")]
		public virtual bool IsString
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x1F7C3C0", Offset = "0x1F7C3C0", VA = "0x1F7C3C0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002F")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x1F7C3E4", Offset = "0x1F7C3E4", VA = "0x1F7C3E4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000030")]
		public virtual bool IsNull
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x1F7C408", Offset = "0x1F7C408", VA = "0x1F7C408", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000031")]
		public virtual bool IsArray
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x1F7C42C", Offset = "0x1F7C42C", VA = "0x1F7C42C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000032")]
		public virtual bool IsObject
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x1F7C450", Offset = "0x1F7C450", VA = "0x1F7C450", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000033")]
		public virtual bool Inline
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x1F7C474", Offset = "0x1F7C474", VA = "0x1F7C474", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x1F7C498", Offset = "0x1F7C498", VA = "0x1F7C498", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x1F7C5C8", Offset = "0x1F7C5C8", VA = "0x1F7C5C8", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1A028", Offset = "0xC1A028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x1F7C6CC", Offset = "0x1F7C6CC", VA = "0x1F7C6CC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1A0D8", Offset = "0xC1A0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x1F7CA18", Offset = "0x1F7CA18", VA = "0x1F7CA18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x1F7CAB0", Offset = "0x1F7CAB0", VA = "0x1F7CAB0")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x17000038")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x1F7CB44", Offset = "0x1F7CB44", VA = "0x1F7CB44")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x17000039")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x1F7CBD8", Offset = "0x1F7CBD8", VA = "0x1F7CBD8", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x1F7CDA0", Offset = "0x1F7CDA0", VA = "0x1F7CDA0", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public virtual int AsInt
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x1F7CEC4", Offset = "0x1F7CEC4", VA = "0x1F7CEC4", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x1F7CF04", Offset = "0x1F7CF04", VA = "0x1F7CF04", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x1F7CF48", Offset = "0x1F7CF48", VA = "0x1F7CF48", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x1F7CF84", Offset = "0x1F7CF84", VA = "0x1F7CF84", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x1F7CFC8", Offset = "0x1F7CFC8", VA = "0x1F7CFC8", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x1F7D194", Offset = "0x1F7D194", VA = "0x1F7D194", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public virtual long AsLong
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x1F7D2B4", Offset = "0x1F7D2B4", VA = "0x1F7D2B4", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x1F7D344", Offset = "0x1F7D344", VA = "0x1F7D344", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x1F7D398", Offset = "0x1F7D398", VA = "0x1F7D398", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x1F7D414", Offset = "0x1F7D414", VA = "0x1F7D414", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x1F7E410", Offset = "0x1F7E410", VA = "0x1F7E410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1F7C4B8", Offset = "0x1F7C4B8", VA = "0x1F7C4B8", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1F7C4D4", Offset = "0x1F7C4D4", VA = "0x1F7C4D4", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1F7C564", Offset = "0x1F7C564", VA = "0x1F7C564", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1F7C584", Offset = "0x1F7C584", VA = "0x1F7C584", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1F7C5A4", Offset = "0x1F7C5A4", VA = "0x1F7C5A4", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1F7C7EC", Offset = "0x1F7C7EC", VA = "0x1F7C7EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1F7C8F8", Offset = "0x1F7C8F8", VA = "0x1F7C8F8", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000707")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000708")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1F7D490", Offset = "0x1F7D490", VA = "0x1F7D490")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1F7D530", Offset = "0x1F7D530", VA = "0x1F7D530")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1F7D694", Offset = "0x1F7D694", VA = "0x1F7D694")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1F7D734", Offset = "0x1F7D734", VA = "0x1F7D734")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1F7D890", Offset = "0x1F7D890", VA = "0x1F7D890")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1F7D934", Offset = "0x1F7D934", VA = "0x1F7D934")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1F7DA90", Offset = "0x1F7DA90", VA = "0x1F7DA90")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1F7DB34", Offset = "0x1F7DB34", VA = "0x1F7DB34")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1F7DC8C", Offset = "0x1F7DC8C", VA = "0x1F7DC8C")]
		public static implicit operator JSONNode(long n)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1F7DE1C", Offset = "0x1F7DE1C", VA = "0x1F7DE1C")]
		public static implicit operator long(JSONNode d)
		{
			return default(long);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1F7DF74", Offset = "0x1F7DF74", VA = "0x1F7DF74")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1F7E028", Offset = "0x1F7E028", VA = "0x1F7E028")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1F7E1A8", Offset = "0x1F7E1A8", VA = "0x1F7E1A8")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1F78A34", Offset = "0x1F78A34", VA = "0x1F78A34")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1F7E230", Offset = "0x1F7E230", VA = "0x1F7E230")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1F7E384", Offset = "0x1F7E384", VA = "0x1F7E384", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1F7E3D8", Offset = "0x1F7E3D8", VA = "0x1F7E3D8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1F7E644", Offset = "0x1F7E644", VA = "0x1F7E644")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1F7EDE4", Offset = "0x1F7EDE4", VA = "0x1F7EDE4")]
		private static JSONNode ParseElement(string token, bool quoted)
		{
			return null;
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1F76D74", Offset = "0x1F76D74", VA = "0x1F76D74")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		public abstract void SerializeBinary(BinaryWriter aWriter);

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1F7F398", Offset = "0x1F7F398", VA = "0x1F7F398")]
		public void SaveToBinaryStream(System.IO.Stream aData)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1F7F474", Offset = "0x1F7F474", VA = "0x1F7F474")]
		public void SaveToCompressedStream(System.IO.Stream aData)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1F7F52C", Offset = "0x1F7F52C", VA = "0x1F7F52C")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1F7F5E4", Offset = "0x1F7F5E4", VA = "0x1F7F5E4")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1F7F698", Offset = "0x1F7F698", VA = "0x1F7F698")]
		public void SaveToBinaryFile(string aFileName)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1F7F974", Offset = "0x1F7F974", VA = "0x1F7F974")]
		public string SaveToBinaryBase64()
		{
			return null;
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1F7FCF4", Offset = "0x1F7FCF4", VA = "0x1F7FCF4")]
		public static JSONNode DeserializeBinary(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1F80444", Offset = "0x1F80444", VA = "0x1F80444")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1F804F8", Offset = "0x1F804F8", VA = "0x1F804F8")]
		public static JSONNode LoadFromCompressedStream(System.IO.Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1F805AC", Offset = "0x1F805AC", VA = "0x1F805AC")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1F80660", Offset = "0x1F80660", VA = "0x1F80660")]
		public static JSONNode LoadFromBinaryStream(System.IO.Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1F8095C", Offset = "0x1F8095C", VA = "0x1F8095C")]
		public static JSONNode LoadFromBinaryFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1F80C30", Offset = "0x1F80C30", VA = "0x1F80C30")]
		public static JSONNode LoadFromBinaryBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1F80E0C", Offset = "0x1F80E0C", VA = "0x1F80E0C")]
		private static JSONNode GetContainer(JSONContainerType aType)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1F80EF4", Offset = "0x1F80EF4", VA = "0x1F80EF4")]
		public static implicit operator JSONNode(Vector2 aVec)
		{
			return null;
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1F81390", Offset = "0x1F81390", VA = "0x1F81390")]
		public static implicit operator JSONNode(Vector3 aVec)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1F817DC", Offset = "0x1F817DC", VA = "0x1F817DC")]
		public static implicit operator JSONNode(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1F81EE8", Offset = "0x1F81EE8", VA = "0x1F81EE8")]
		public static implicit operator JSONNode(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1F825F4", Offset = "0x1F825F4", VA = "0x1F825F4")]
		public static implicit operator JSONNode(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1F82C18", Offset = "0x1F82C18", VA = "0x1F82C18")]
		public static implicit operator JSONNode(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1F83190", Offset = "0x1F83190", VA = "0x1F83190")]
		public static implicit operator Vector2(JSONNode aNode)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1F832B8", Offset = "0x1F832B8", VA = "0x1F832B8")]
		public static implicit operator Vector3(JSONNode aNode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1F83400", Offset = "0x1F83400", VA = "0x1F83400")]
		public static implicit operator Vector4(JSONNode aNode)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1F83558", Offset = "0x1F83558", VA = "0x1F83558")]
		public static implicit operator Quaternion(JSONNode aNode)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1F836B0", Offset = "0x1F836B0", VA = "0x1F836B0")]
		public static implicit operator Rect(JSONNode aNode)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1F8379C", Offset = "0x1F8379C", VA = "0x1F8379C")]
		public static implicit operator RectOffset(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1F83890", Offset = "0x1F83890", VA = "0x1F83890")]
		public Vector2 ReadVector2(Vector2 aDefault)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1F83B10", Offset = "0x1F83B10", VA = "0x1F83B10")]
		public Vector2 ReadVector2(string aXName, string aYName)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1F831DC", Offset = "0x1F831DC", VA = "0x1F831DC")]
		public Vector2 ReadVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1F810EC", Offset = "0x1F810EC", VA = "0x1F810EC")]
		public JSONNode WriteVector2(Vector2 aVec, string aXName = "x", string aYName = "y")
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1F83C8C", Offset = "0x1F83C8C", VA = "0x1F83C8C")]
		public Vector3 ReadVector3(Vector3 aDefault)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1F83F00", Offset = "0x1F83F00", VA = "0x1F83F00")]
		public Vector3 ReadVector3(string aXName, string aYName, string aZName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1F8330C", Offset = "0x1F8330C", VA = "0x1F8330C")]
		public Vector3 ReadVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1F814DC", Offset = "0x1F814DC", VA = "0x1F814DC")]
		public JSONNode WriteVector3(Vector3 aVec, string aXName = "x", string aYName = "y", string aZName = "z")
		{
			return null;
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1F840C8", Offset = "0x1F840C8", VA = "0x1F840C8")]
		public Vector4 ReadVector4(Vector4 aDefault)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1F8345C", Offset = "0x1F8345C", VA = "0x1F8345C")]
		public Vector4 ReadVector4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1F81A0C", Offset = "0x1F81A0C", VA = "0x1F81A0C")]
		public JSONNode WriteVector4(Vector4 aVec)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1F844A8", Offset = "0x1F844A8", VA = "0x1F844A8")]
		public Quaternion ReadQuaternion(Quaternion aDefault)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1F835B4", Offset = "0x1F835B4", VA = "0x1F835B4")]
		public Quaternion ReadQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1F82118", Offset = "0x1F82118", VA = "0x1F82118")]
		public JSONNode WriteQuaternion(Quaternion aRot)
		{
			return null;
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1F84888", Offset = "0x1F84888", VA = "0x1F84888")]
		public Rect ReadRect(Rect aDefault)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1F8370C", Offset = "0x1F8370C", VA = "0x1F8370C")]
		public Rect ReadRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1F82824", Offset = "0x1F82824", VA = "0x1F82824")]
		public JSONNode WriteRect(Rect aRect)
		{
			return null;
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1F84C68", Offset = "0x1F84C68", VA = "0x1F84C68")]
		public RectOffset ReadRectOffset(RectOffset aDefault)
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1F837E8", Offset = "0x1F837E8", VA = "0x1F837E8")]
		public RectOffset ReadRectOffset()
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1F82D48", Offset = "0x1F82D48", VA = "0x1F82D48")]
		public JSONNode WriteRectOffset(RectOffset aRect)
		{
			return null;
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1F84FB0", Offset = "0x1F84FB0", VA = "0x1F84FB0")]
		public Matrix4x4 ReadMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1F851E4", Offset = "0x1F851E4", VA = "0x1F851E4")]
		public JSONNode WriteMatrix(Matrix4x4 aMatrix)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1F79CB8", Offset = "0x1F79CB8", VA = "0x1F79CB8")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2E74", Offset = "0xBD2E74")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED7C", Offset = "0xBDED7C")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400282E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x400282F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E474")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002BE9")]
				[Address(RVA = "0x1F7A2FC", Offset = "0x1F7A2FC", VA = "0x1F7A2FC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BEB")]
				[Address(RVA = "0x1F7A3CC", Offset = "0x1F7A3CC", VA = "0x1F7A3CC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0x1F79578", Offset = "0x1F79578", VA = "0x1F79578")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x1F79CE8", Offset = "0x1F79CE8", VA = "0x1F79CE8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0x1F79F14", Offset = "0x1F79F14", VA = "0x1F79F14", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0x1F79E80", Offset = "0x1F79E80", VA = "0x1F79E80")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x1F7A32C", Offset = "0x1F7A32C", VA = "0x1F7A32C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0x1F7A3FC", Offset = "0x1F7A3FC", VA = "0x1F7A3FC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0x1F7A558", Offset = "0x1F7A558", VA = "0x1F7A558", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3254")]
		private bool inline;

		[Token(Token = "0x17000041")]
		public override bool Inline
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x1F78340", Offset = "0x1F78340", VA = "0x1F78340", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x1F78384", Offset = "0x1F78384", VA = "0x1F78384", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0x1F783D0", Offset = "0x1F783D0", VA = "0x1F783D0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000043")]
		public override bool IsArray
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x1F783EC", Offset = "0x1F783EC", VA = "0x1F783EC", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000044")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x1F7850C", Offset = "0x1F7850C", VA = "0x1F7850C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000766")]
			[Address(RVA = "0x1F7878C", Offset = "0x1F7878C", VA = "0x1F7878C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0x1F78D9C", Offset = "0x1F78D9C", VA = "0x1F78D9C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x1F78E38", Offset = "0x1F78E38", VA = "0x1F78E38", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public override int Count
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x1F79018", Offset = "0x1F79018", VA = "0x1F79018", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000047")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x1F794BC", Offset = "0x1F794BC", VA = "0x1F794BC", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1A188", Offset = "0xC1A188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1F78410", Offset = "0x1F78410", VA = "0x1F78410", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1F790B0", Offset = "0x1F790B0", VA = "0x1F790B0", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1F79290", Offset = "0x1F79290", VA = "0x1F79290", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1F7940C", Offset = "0x1F7940C", VA = "0x1F7940C", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1F795DC", Offset = "0x1F795DC", VA = "0x1F795DC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1F799B0", Offset = "0x1F799B0", VA = "0x1F799B0", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1F79B8C", Offset = "0x1F79B8C", VA = "0x1F79B8C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2ED8", Offset = "0xBD2ED8")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDB8", Offset = "0xBDEDB8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E47C")]
			public JSONNode aNode;

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0x1F1EE70", Offset = "0x1F1EE70", VA = "0x1F1EE70")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0x1F1FCA0", Offset = "0x1F1FCA0", VA = "0x1F1FCA0")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDF4", Offset = "0xBDEDF4")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3264")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B3")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002BF4")]
				[Address(RVA = "0x1F20460", Offset = "0x1F20460", VA = "0x1F20460", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF6")]
				[Address(RVA = "0x1F20530", Offset = "0x1F20530", VA = "0x1F20530", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0x1F1EF5C", Offset = "0x1F1EF5C", VA = "0x1F1EF5C")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0x1F1FDDC", Offset = "0x1F1FDDC", VA = "0x1F1FDDC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x1F20008", Offset = "0x1F20008", VA = "0x1F20008", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0x1F1FF74", Offset = "0x1F1FF74", VA = "0x1F1FF74")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x1F20490", Offset = "0x1F20490", VA = "0x1F20490", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0x1F20560", Offset = "0x1F20560", VA = "0x1F20560", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x1F206BC", Offset = "0x1F206BC", VA = "0x1F206BC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x325C")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool inline;

		[Token(Token = "0x17000048")]
		public override bool Inline
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x1F1D718", Offset = "0x1F1D718", VA = "0x1F1D718", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x1F1D75C", Offset = "0x1F1D75C", VA = "0x1F1D75C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x1F1D7A8", Offset = "0x1F1D7A8", VA = "0x1F1D7A8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700004A")]
		public override bool IsObject
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x1F1D7C4", Offset = "0x1F1D7C4", VA = "0x1F1D7C4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004B")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0x1F1D8E4", Offset = "0x1F1D8E4", VA = "0x1F1D8E4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000777")]
			[Address(RVA = "0x1F1DA34", Offset = "0x1F1DA34", VA = "0x1F1DA34", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0x1F1DCC0", Offset = "0x1F1DCC0", VA = "0x1F1DCC0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x1F1DE60", Offset = "0x1F1DE60", VA = "0x1F1DE60", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public override int Count
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x1F1E184", Offset = "0x1F1E184", VA = "0x1F1E184", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004E")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x1F1EEA0", Offset = "0x1F1EEA0", VA = "0x1F1EEA0", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1A238", Offset = "0xC1A238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1F1D7E8", Offset = "0x1F1D7E8", VA = "0x1F1D7E8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1F1E21C", Offset = "0x1F1E21C", VA = "0x1F1E21C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1F1E5E8", Offset = "0x1F1E5E8", VA = "0x1F1E5E8", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1F1E740", Offset = "0x1F1E740", VA = "0x1F1E740", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1F1E940", Offset = "0x1F1E940", VA = "0x1F1E940", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1F1EFC0", Offset = "0x1F1EFC0", VA = "0x1F1EFC0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1F1F758", Offset = "0x1F1F758", VA = "0x1F1F758", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1F1FB74", Offset = "0x1F1FB74", VA = "0x1F1FB74")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E484")]
		private string m_Data;

		[Token(Token = "0x1700004F")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x1F206F4", Offset = "0x1F206F4", VA = "0x1F206F4", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000050")]
		public override bool IsString
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x1F20710", Offset = "0x1F20710", VA = "0x1F20710", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public override string Value
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x1F20798", Offset = "0x1F20798", VA = "0x1F20798", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x1F207C8", Offset = "0x1F207C8", VA = "0x1F207C8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1F20734", Offset = "0x1F20734", VA = "0x1F20734", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1F20800", Offset = "0x1F20800", VA = "0x1F20800")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1F20900", Offset = "0x1F20900", VA = "0x1F20900", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1F20A78", Offset = "0x1F20A78", VA = "0x1F20A78", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1F20D38", Offset = "0x1F20D38", VA = "0x1F20D38", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1F20D88", Offset = "0x1F20D88", VA = "0x1F20D88", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double m_Data;

		[Token(Token = "0x17000052")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1F1C8B4", Offset = "0x1F1C8B4", VA = "0x1F1C8B4", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000053")]
		public override bool IsNumber
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x1F1C8D0", Offset = "0x1F1C8D0", VA = "0x1F1C8D0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000054")]
		public override string Value
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x1F1C958", Offset = "0x1F1C958", VA = "0x1F1C958", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x1F1CA64", Offset = "0x1F1CA64", VA = "0x1F1CA64", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public override double AsDouble
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x1F1CC18", Offset = "0x1F1CC18", VA = "0x1F1CC18", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000793")]
			[Address(RVA = "0x1F1CC48", Offset = "0x1F1CC48", VA = "0x1F1CC48", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public override long AsLong
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0x1F1CC80", Offset = "0x1F1CC80", VA = "0x1F1CC80", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x1F1CCB8", Offset = "0x1F1CCB8", VA = "0x1F1CCB8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1F1C8F4", Offset = "0x1F1C8F4", VA = "0x1F1C8F4", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1F1CCF4", Offset = "0x1F1CCF4", VA = "0x1F1CCF4")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1F1CDF4", Offset = "0x1F1CDF4", VA = "0x1F1CDF4")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1F1CF04", Offset = "0x1F1CF04", VA = "0x1F1CF04", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1F1CF70", Offset = "0x1F1CF70", VA = "0x1F1CF70")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1F1D2D0", Offset = "0x1F1D2D0", VA = "0x1F1D2D0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1F1D644", Offset = "0x1F1D644", VA = "0x1F1D644", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1F1D68C", Offset = "0x1F1D68C", VA = "0x1F1D68C", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Data;

		[Token(Token = "0x17000057")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x1F7A590", Offset = "0x1F7A590", VA = "0x1F7A590", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000058")]
		public override bool IsBoolean
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x1F7A5AC", Offset = "0x1F7A5AC", VA = "0x1F7A5AC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000059")]
		public override string Value
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x1F7A634", Offset = "0x1F7A634", VA = "0x1F7A634", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x1F7A67C", Offset = "0x1F7A67C", VA = "0x1F7A67C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public override bool AsBool
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x1F7A7BC", Offset = "0x1F7A7BC", VA = "0x1F7A7BC", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x1F7A800", Offset = "0x1F7A800", VA = "0x1F7A800", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1F7A5D0", Offset = "0x1F7A5D0", VA = "0x1F7A5D0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1F7A84C", Offset = "0x1F7A84C", VA = "0x1F7A84C")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1F7A960", Offset = "0x1F7A960", VA = "0x1F7A960")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1F7AA70", Offset = "0x1F7AA70", VA = "0x1F7AA70", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1F7AB9C", Offset = "0x1F7AB9C", VA = "0x1F7AB9C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1F7AD24", Offset = "0x1F7AD24", VA = "0x1F7AD24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1F7AD6C", Offset = "0x1F7AD6C", VA = "0x1F7AD6C", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x326C")]
		public static bool reuseSameInstance;

		[Token(Token = "0x1700005B")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x1F1C440", Offset = "0x1F1C440", VA = "0x1F1C440", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700005C")]
		public override bool IsNull
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x1F1C45C", Offset = "0x1F1C45C", VA = "0x1F1C45C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public override string Value
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x1F1C4E4", Offset = "0x1F1C4E4", VA = "0x1F1C4E4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x1F1C558", Offset = "0x1F1C558", VA = "0x1F1C558", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public override bool AsBool
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x1F1C570", Offset = "0x1F1C570", VA = "0x1F1C570", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x1F1C594", Offset = "0x1F1C594", VA = "0x1F1C594", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1F1C1A8", Offset = "0x1F1C1A8", VA = "0x1F1C1A8")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1F1C358", Offset = "0x1F1C358", VA = "0x1F1C358")]
		private JSONNull()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1F1C480", Offset = "0x1F1C480", VA = "0x1F1C480", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1F1C5B4", Offset = "0x1F1C5B4", VA = "0x1F1C5B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1F1C6D8", Offset = "0x1F1C6D8", VA = "0x1F1C6D8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1F1C6F4", Offset = "0x1F1C6F4", VA = "0x1F1C6F4", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1F1C79C", Offset = "0x1F1C79C", VA = "0x1F1C79C", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2F3C", Offset = "0xBD2F3C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private JSONNode m_Node;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E48C")]
		private string m_Key;

		[Token(Token = "0x1700005F")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x1F7AE04", Offset = "0x1F7AE04", VA = "0x1F7AE04", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000060")]
		public override JSONNode Item
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x1F7AF9C", Offset = "0x1F7AF9C", VA = "0x1F7AF9C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x1F7B038", Offset = "0x1F7B038", VA = "0x1F7B038", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public override JSONNode Item
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x1F7B120", Offset = "0x1F7B120", VA = "0x1F7B120", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x1F7B1C8", Offset = "0x1F7B1C8", VA = "0x1F7B1C8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public override int AsInt
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x1F7B68C", Offset = "0x1F7B68C", VA = "0x1F7B68C", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x1F7B75C", Offset = "0x1F7B75C", VA = "0x1F7B75C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public override float AsFloat
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x1F7B820", Offset = "0x1F7B820", VA = "0x1F7B820", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x1F7B8E8", Offset = "0x1F7B8E8", VA = "0x1F7B8E8", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public override double AsDouble
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0x1F7B9AC", Offset = "0x1F7B9AC", VA = "0x1F7B9AC", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x1F7BA6C", Offset = "0x1F7BA6C", VA = "0x1F7BA6C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public override long AsLong
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x1F7BB2C", Offset = "0x1F7BB2C", VA = "0x1F7BB2C", Slot = "37")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x1F7BCE8", Offset = "0x1F7BCE8", VA = "0x1F7BCE8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public override bool AsBool
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x1F7BEA8", Offset = "0x1F7BEA8", VA = "0x1F7BEA8", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x1F7BF78", Offset = "0x1F7BF78", VA = "0x1F7BF78", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x1F7C04C", Offset = "0x1F7C04C", VA = "0x1F7C04C", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x1F7C104", Offset = "0x1F7C104", VA = "0x1F7C104", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1F7AE20", Offset = "0x1F7AE20", VA = "0x1F7AE20", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1F78678", Offset = "0x1F78678", VA = "0x1F78678")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1F7AE84", Offset = "0x1F7AE84", VA = "0x1F7AE84")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60007BC")]
		private T Set<T>(T aVal) where T : JSONNode
		{
			return null;
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1F7B2BC", Offset = "0x1F7B2BC", VA = "0x1F7B2BC", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1F7B3A0", Offset = "0x1F7B3A0", VA = "0x1F7B3A0", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1F7B494", Offset = "0x1F7B494", VA = "0x1F7B494")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1F7B538", Offset = "0x1F7B538", VA = "0x1F7B538")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1F7B5D4", Offset = "0x1F7B5D4", VA = "0x1F7B5D4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1F7B670", Offset = "0x1F7B670", VA = "0x1F7B670", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1F7C1BC", Offset = "0x1F7C1BC", VA = "0x1F7C1BC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1F7C264", Offset = "0x1F7C264", VA = "0x1F7C264", Slot = "41")]
		public override void SerializeBinary(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public static class JSON
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1F76C7C", Offset = "0x1F76C7C", VA = "0x1F76C7C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
	[Token(Token = "0x2000152")]
	public enum JSONContainerType
	{
		[Token(Token = "0x400090F")]
		Array,
		[Token(Token = "0x4000910")]
		Object
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2FA0", Offset = "0xBD2FA0")]
	public class GamePadInputModule : BaseInputModule
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3274")]
		private float m_PrevActionTime;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 m_LastMoveVector;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E494")]
		private int m_ConsecutiveMoveCount;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x327C")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E49C")]
		[SerializeField]
		private float m_RepeatDelay;

		[Token(Token = "0x17000069")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x20B9420", Offset = "0x20B9420", VA = "0x20B9420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x20B9450", Offset = "0x20B9450", VA = "0x20B9450")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public float repeatDelay
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x20B9488", Offset = "0x20B9488", VA = "0x20B9488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x20B94B8", Offset = "0x20B94B8", VA = "0x20B94B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public string horizontalAxis
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x20B94F0", Offset = "0x20B94F0", VA = "0x20B94F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x20B9520", Offset = "0x20B9520", VA = "0x20B9520")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public string verticalAxis
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x20B9558", Offset = "0x20B9558", VA = "0x20B9558")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x20B9588", Offset = "0x20B9588", VA = "0x20B9588")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public string submitButton
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x20B95C0", Offset = "0x20B95C0", VA = "0x20B95C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x20B95F0", Offset = "0x20B95F0", VA = "0x20B95F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public string cancelButton
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x20B9628", Offset = "0x20B9628", VA = "0x20B9628")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x20B9658", Offset = "0x20B9658", VA = "0x20B9658")]
			set
			{
			}
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x20B9308", Offset = "0x20B9308", VA = "0x20B9308")]
		protected GamePadInputModule()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x20B9690", Offset = "0x20B9690", VA = "0x20B9690", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x20B9908", Offset = "0x20B9908", VA = "0x20B9908", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x20B9C74", Offset = "0x20B9C74", VA = "0x20B9C74", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x20B9CA4", Offset = "0x20B9CA4", VA = "0x20B9CA4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x20BA6F8", Offset = "0x20BA6F8", VA = "0x20BA6F8")]
		protected bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x20BAAF4", Offset = "0x20BAAF4", VA = "0x20BAAF4")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x20BA084", Offset = "0x20BA084", VA = "0x20BA084")]
		protected bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x20B9DE8", Offset = "0x20B9DE8", VA = "0x20B9DE8")]
		protected bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}
	}
}
namespace UnityEngine.EventSystems.Extensions
{
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3004", Offset = "0xBD3004")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3004", Offset = "0xBD3004")]
	public class AimerInputModule : PointerInputModule
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string activateAxis;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 aimerOffset;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject objectUnderAimer;

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x20B7BAC", Offset = "0x20B7BAC", VA = "0x20B7BAC")]
		protected AimerInputModule()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x20B7CE4", Offset = "0x20B7CE4", VA = "0x20B7CE4", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x20B7EF4", Offset = "0x20B7EF4", VA = "0x20B7EF4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x20B8FB4", Offset = "0x20B8FB4", VA = "0x20B8FB4", Slot = "30")]
		protected virtual PointerEventData GetAimerPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x20B8054", Offset = "0x20B8054", VA = "0x20B8054")]
		private void ProcessInteraction(PointerEventData pointer, bool pressed, bool released)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x20B92C8", Offset = "0x20B92C8", VA = "0x20B92C8", Slot = "22")]
		public override void DeactivateModule()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD30FC", Offset = "0xBD30FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD30FC", Offset = "0xBD30FC")]
	public class ExtensionsToggle : Selectable, IPointerClickHandler, IEventSystemHandler, ISubmitHandler, ICanvasElement
	{
		[Token(Token = "0x2000595")]
		public enum ToggleTransition
		{
			[Token(Token = "0x400283A")]
			None,
			[Token(Token = "0x400283B")]
			Fade
		}

		[Serializable]
		[Token(Token = "0x2000596")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x2169FB0", Offset = "0x2169FB0", VA = "0x2169FB0")]
			public ToggleEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		public class ToggleEventObject : UnityEvent<ExtensionsToggle>
		{
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0x216A02C", Offset = "0x216A02C", VA = "0x216A02C")]
			public ToggleEventObject()
			{
			}
		}

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3284")]
		public string UniqueID;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ToggleTransition toggleTransition;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4A4")]
		public Graphic graphic;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ExtensionsToggleGroup m_Group;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE9E8C", Offset = "0xBE9E8C")]
		public ToggleEvent onValueChanged;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE9EF0", Offset = "0xBE9EF0")]
		public ToggleEventObject onToggleChanged;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE9F54", Offset = "0xBE9F54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE9F54", Offset = "0xBE9F54")]
		[SerializeField]
		private bool m_IsOn;

		[Token(Token = "0x1700006F")]
		public ExtensionsToggleGroup Group
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x21696FC", Offset = "0x21696FC", VA = "0x21696FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x216972C", Offset = "0x216972C", VA = "0x216972C")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public bool IsOn
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x216AA40", Offset = "0x216AA40", VA = "0x216AA40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x216AA84", Offset = "0x216AA84", VA = "0x216AA84")]
			set
			{
			}
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x2169E54", Offset = "0x2169E54", VA = "0x2169E54")]
		protected ExtensionsToggle()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x216A0A8", Offset = "0x216A0A8", VA = "0x216A0A8", Slot = "46")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x216A0C0", Offset = "0x216A0C0", VA = "0x216A0C0", Slot = "47")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x216A0D4", Offset = "0x216A0D4", VA = "0x216A0D4", Slot = "48")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x216A0E8", Offset = "0x216A0E8", VA = "0x216A0E8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x216A164", Offset = "0x216A164", VA = "0x216A164", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x216A1B4", Offset = "0x216A1B4", VA = "0x216A1B4", Slot = "13")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x21697AC", Offset = "0x21697AC", VA = "0x21697AC")]
		private void SetToggleGroup(ExtensionsToggleGroup newGroup, bool setMemberValue)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x216A3F4", Offset = "0x216A3F4", VA = "0x216A3F4")]
		private void Set(bool value)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x216AAD8", Offset = "0x216AAD8", VA = "0x216AAD8")]
		private void Set(bool value, bool sendCallback)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x2169BD4", Offset = "0x2169BD4", VA = "0x2169BD4")]
		private void PlayEffect(bool instant)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x216B180", Offset = "0x216B180", VA = "0x216B180", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x216B1B8", Offset = "0x216B1B8", VA = "0x216B1B8")]
		private void InternalToggle()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x216B298", Offset = "0x216B298", VA = "0x216B298", Slot = "49")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x216B300", Offset = "0x216B300", VA = "0x216B300", Slot = "50")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[SpecialName]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x216B334", Offset = "0x216B334", VA = "0x216B334", Slot = "42")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3200", Offset = "0xBD3200")]
	[DisallowMultipleComponent]
	public class ExtensionsToggleGroup : UIBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000598")]
		public class ToggleGroupEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x216B578", Offset = "0x216B578", VA = "0x216B578")]
			public ToggleGroupEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEE30", Offset = "0xBDEE30")]
		private sealed class <>c
		{
			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<ExtensionsToggle> <>9__18_0;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ExtensionsToggle, bool> <>9__19_0;

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x216C064", Offset = "0x216C064", VA = "0x216C064")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x216C094", Offset = "0x216C094", VA = "0x216C094")]
			internal bool <AnyTogglesOn>b__18_0(ExtensionsToggle x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0x216C0F8", Offset = "0x216C0F8", VA = "0x216C0F8")]
			internal bool <ActiveToggles>b__19_0(ExtensionsToggle x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_AllowSwitchOff;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ExtensionsToggle> m_Toggles;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3294")]
		public ToggleGroupEvent onToggleGroupChanged;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ToggleGroupEvent onToggleGroupToggleChanged;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA058", Offset = "0xBEA058")]
		private ExtensionsToggle <SelectedToggle>k__BackingField;

		[Token(Token = "0x17000071")]
		public bool AllowSwitchOff
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x216B36C", Offset = "0x216B36C", VA = "0x216B36C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x216B3B0", Offset = "0x216B3B0", VA = "0x216B3B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public ExtensionsToggle SelectedToggle
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x216B3FC", Offset = "0x216B3FC", VA = "0x216B3FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A2E8", Offset = "0xC1A2E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x216B42C", Offset = "0x216B42C", VA = "0x216B42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A324", Offset = "0xC1A324")]
			private set
			{
			}
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x216B464", Offset = "0x216B464", VA = "0x216B464")]
		protected ExtensionsToggleGroup()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x216B5F4", Offset = "0x216B5F4", VA = "0x216B5F4")]
		private void ValidateToggleIsInGroup(ExtensionsToggle toggle)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x216A768", Offset = "0x216A768", VA = "0x216A768")]
		public void NotifyToggleOn(ExtensionsToggle toggle)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x216A450", Offset = "0x216A450", VA = "0x216A450")]
		public void UnregisterToggle(ExtensionsToggle toggle)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x216B868", Offset = "0x216B868", VA = "0x216B868")]
		private void NotifyToggleChanged(bool isOn)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x216A5DC", Offset = "0x216A5DC", VA = "0x216A5DC")]
		public void RegisterToggle(ExtensionsToggle toggle)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x216AE58", Offset = "0x216AE58", VA = "0x216AE58")]
		public bool AnyTogglesOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x216B91C", Offset = "0x216B91C", VA = "0x216B91C")]
		public IEnumerable<ExtensionsToggle> ActiveToggles()
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x216BB90", Offset = "0x216BB90", VA = "0x216BB90")]
		public void SetAllTogglesOff()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x216BD4C", Offset = "0x216BD4C", VA = "0x216BD4C")]
		public void HasTheGroupToggle(bool value)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x216BE88", Offset = "0x216BE88", VA = "0x216BE88")]
		public void HasAToggleFlipped(bool value)
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3280", Offset = "0xBD3280")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3280", Offset = "0xBD3280")]
	public class ReturnKeyTriggersButton : MonoBehaviour, ISubmitHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x329C")]
		private EventSystem _system;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Button button;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4BC")]
		private bool highlight;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float highlightDuration;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x216C15C", Offset = "0x216C15C", VA = "0x216C15C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x216C250", Offset = "0x216C250", VA = "0x216C250")]
		private void RemoveHighlight()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x216C320", Offset = "0x216C320", VA = "0x216C320", Slot = "4")]
		public void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x216C4C0", Offset = "0x216C4C0", VA = "0x216C4C0")]
		public ReturnKeyTriggersButton()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3378", Offset = "0xBD3378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3378", Offset = "0xBD3378")]
	public class Accordion : MonoBehaviour
	{
		[Token(Token = "0x200059A")]
		public enum Transition
		{
			[Token(Token = "0x4002840")]
			Instant,
			[Token(Token = "0x4002841")]
			Tween
		}

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transition m_Transition;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_TransitionDuration;

		[Token(Token = "0x17000073")]
		public Transition transition
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x20BAD8C", Offset = "0x20BAD8C", VA = "0x20BAD8C")]
			get
			{
				return default(Transition);
			}
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x20BADBC", Offset = "0x20BADBC", VA = "0x20BADBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float transitionDuration
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x20BADF4", Offset = "0x20BADF4", VA = "0x20BADF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x20BAE24", Offset = "0x20BAE24", VA = "0x20BAE24")]
			set
			{
			}
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x20BAE5C", Offset = "0x20BAE5C", VA = "0x20BAE5C")]
		public Accordion()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD34B8", Offset = "0xBD34B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD34B8", Offset = "0xBD34B8")]
	public class AccordionElement : Toggle
	{
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_MinHeight;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Accordion m_Accordion;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform m_RectTransform;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32AB")]
		private LayoutElement m_LayoutElement;

		[NonSerialized]
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly TweenRunner<FloatTween> m_FloatTweenRunner;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x20BAEA4", Offset = "0x20BAEA4", VA = "0x20BAEA4")]
		protected AccordionElement()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x20BAFD0", Offset = "0x20BAFD0", VA = "0x20BAFD0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x20BB1C4", Offset = "0x20BB1C4", VA = "0x20BB1C4")]
		public void OnValueChanged(bool state)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x20BB508", Offset = "0x20BB508", VA = "0x20BB508")]
		protected float GetExpandedHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x20BB704", Offset = "0x20BB704", VA = "0x20BB704")]
		protected void StartTween(float startFloat, float targetFloat)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x20BBA4C", Offset = "0x20BBA4C", VA = "0x20BBA4C")]
		protected void SetHeight(float height)
		{
		}
	}
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD35D4", Offset = "0xBD35D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD35D4", Offset = "0xBD35D4")]
	public class BoxSlider : Selectable, IDragHandler, IEventSystemHandler, IInitializePotentialDragHandler, ICanvasElement
	{
		[Token(Token = "0x200059B")]
		public enum Direction
		{
			[Token(Token = "0x4002843")]
			LeftToRight,
			[Token(Token = "0x4002844")]
			RightToLeft,
			[Token(Token = "0x4002845")]
			BottomToTop,
			[Token(Token = "0x4002846")]
			TopToBottom
		}

		[Serializable]
		[Token(Token = "0x200059C")]
		public class BoxSliderEvent : UnityEvent<float, float>
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x20C5518", Offset = "0x20C5518", VA = "0x20C5518")]
			public BoxSliderEvent()
			{
			}
		}

		[Token(Token = "0x200059D")]
		private enum Axis
		{
			[Token(Token = "0x4002848")]
			Horizontal,
			[Token(Token = "0x4002849")]
			Vertical
		}

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4C4")]
		[SerializeField]
		private RectTransform m_HandleRect;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBEA184", Offset = "0xBEA184")]
		[SerializeField]
		private float m_MinValue;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_MaxValue;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_WholeNumbers;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32B3")]
		[SerializeField]
		private float m_ValueX;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float m_ValueY;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4CC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBEA2D8", Offset = "0xBEA2D8")]
		[SerializeField]
		private BoxSliderEvent m_OnValueChanged;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform m_HandleTransform;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform m_HandleContainerRect;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 m_Offset;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32BB")]
		private DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x17000075")]
		public RectTransform HandleRect
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x20C3ED4", Offset = "0x20C3ED4", VA = "0x20C3ED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x20C3F04", Offset = "0x20C3F04", VA = "0x20C3F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public float MinValue
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x20C4524", Offset = "0x20C4524", VA = "0x20C4524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x20C4554", Offset = "0x20C4554", VA = "0x20C4554")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public float MaxValue
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x20C46E0", Offset = "0x20C46E0", VA = "0x20C46E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x20C4710", Offset = "0x20C4710", VA = "0x20C4710")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public bool WholeNumbers
		{
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x20C480C", Offset = "0x20C480C", VA = "0x20C480C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600082A")]
			[Address(RVA = "0x20C4850", Offset = "0x20C4850", VA = "0x20C4850")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public float ValueX
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0x20C4960", Offset = "0x20C4960", VA = "0x20C4960")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x20C4A9C", Offset = "0x20C4A9C", VA = "0x20C4A9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public float NormalizedValueX
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x20C4ADC", Offset = "0x20C4ADC", VA = "0x20C4ADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x20C4CC8", Offset = "0x20C4CC8", VA = "0x20C4CC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public float ValueY
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x20C4DF8", Offset = "0x20C4DF8", VA = "0x20C4DF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x20C4F34", Offset = "0x20C4F34", VA = "0x20C4F34")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float NormalizedValueY
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x20C4F74", Offset = "0x20C4F74", VA = "0x20C4F74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x20C5160", Offset = "0x20C5160", VA = "0x20C5160")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public BoxSliderEvent OnValueChanged
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x20C5290", Offset = "0x20C5290", VA = "0x20C5290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x20C52C0", Offset = "0x20C52C0", VA = "0x20C52C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		private float StepSize
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x20C52F8", Offset = "0x20C52F8", VA = "0x20C52F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x20C53A4", Offset = "0x20C53A4", VA = "0x20C53A4")]
		protected BoxSlider()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x20C5594", Offset = "0x20C5594", VA = "0x20C5594", Slot = "46")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x20C55AC", Offset = "0x20C55AC", VA = "0x20C55AC", Slot = "43")]
		public void LayoutComplete()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x20C55C0", Offset = "0x20C55C0", VA = "0x20C55C0", Slot = "44")]
		public void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x600083A")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x600083B")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x20C55D4", Offset = "0x20C55D4", VA = "0x20C55D4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x20C5BC0", Offset = "0x20C5BC0", VA = "0x20C5BC0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x20C3FD4", Offset = "0x20C3FD4", VA = "0x20C3FD4")]
		private void UpdateCachedReferences()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x20C4650", Offset = "0x20C4650", VA = "0x20C4650")]
		private void SetX(float input)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x20C5670", Offset = "0x20C5670", VA = "0x20C5670")]
		private void SetX(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x20C4698", Offset = "0x20C4698", VA = "0x20C4698")]
		private void SetY(float input)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x20C5918", Offset = "0x20C5918", VA = "0x20C5918")]
		private void SetY(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x20C5C0C", Offset = "0x20C5C0C", VA = "0x20C5C0C", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x20C423C", Offset = "0x20C423C", VA = "0x20C423C")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x20C5C4C", Offset = "0x20C5C4C", VA = "0x20C5C4C")]
		private void UpdateDrag(PointerEventData eventData, Camera cam)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x20C6280", Offset = "0x20C6280", VA = "0x20C6280")]
		private bool CanDrag(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x20C637C", Offset = "0x20C637C", VA = "0x20C637C", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x20C6790", Offset = "0x20C6790", VA = "0x20C6790", Slot = "47")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x20C6830", Offset = "0x20C6830", VA = "0x20C6830", Slot = "48")]
		public virtual void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[SpecialName]
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x20C6888", Offset = "0x20C6888", VA = "0x20C6888", Slot = "42")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x200015B")]
	public class TiltWindow : MonoBehaviour
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 range;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform mTrans;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion mStart;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32CB")]
		private Vector2 mRot;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x2382E70", Offset = "0x2382E70", VA = "0x2382E70")]
		private void Start()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x2382F00", Offset = "0x2382F00", VA = "0x2382F00")]
		private void Update()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x2383368", Offset = "0x2383368", VA = "0x2383368")]
		public TiltWindow()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public enum AutoCompleteSearchType
	{
		[Token(Token = "0x4000944")]
		ArraySort,
		[Token(Token = "0x4000945")]
		Linq
	}
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD36CC", Offset = "0xBD36CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD36CC", Offset = "0xBD36CC")]
	public class AutoCompleteComboBox : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059E")]
		public class SelectionChangedEvent : UnityEvent<string, bool>
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x20BF858", Offset = "0x20BF858", VA = "0x20BF858")]
			public SelectionChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059F")]
		public class SelectionTextChangedEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x20BF8D4", Offset = "0x20BF8D4", VA = "0x20BF8D4")]
			public SelectionTextChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A0")]
		public class SelectionValidityChangedEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0x20BF950", Offset = "0x20BF950", VA = "0x20BF950")]
			public SelectionValidityChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEE6C", Offset = "0xBDEE6C")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x400284A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public string textOfItem;

			[Token(Token = "0x400284B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C81C")]
			public AutoCompleteComboBox <>4__this;

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x20BE734", Offset = "0x20BE734", VA = "0x20BE734")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x20BF6E0", Offset = "0x20BF6E0", VA = "0x20BF6E0")]
			internal void <RebuildPanel>b__0()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEA8", Offset = "0xBDEEA8")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string currText;

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0x20BF5C0", Offset = "0x20BF5C0", VA = "0x20BF5C0")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x20BF738", Offset = "0x20BF738", VA = "0x20BF738")]
			internal bool <PruneItemsLinq>b__0(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0x20BF7E4", Offset = "0x20BF7E4", VA = "0x20BF7E4")]
			internal bool <PruneItemsLinq>b__1(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color disabledTextColor;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA33C", Offset = "0xBEA33C")]
		private DropDownListItem <SelectedItem>k__BackingField;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32D3")]
		public List<string> AvailableOptions;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _isPanelActive;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4EC")]
		private bool _hasDrawnOnce;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InputField _mainInput;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _inputRT;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _rectTransform;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32DB")]
		private RectTransform _overlayRT;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _scrollPanelRT;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4F4")]
		private RectTransform _scrollBarRT;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _slidingAreaRT;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _itemsPanelRT;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Canvas _canvas;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32E3")]
		private RectTransform _canvasRT;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E4FC")]
		private List<string> _panelItems;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> _prunedPanelItems;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, GameObject> panelObjects;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject itemTemplate;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA378", Offset = "0xBEA378")]
		private string <Text>k__BackingField;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _scrollBarWidth;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E504")]
		[SerializeField]
		private int _itemsToDisplay;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool SelectFirstItemOnStart;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEA42C", Offset = "0xBEA42C")]
		private bool _ChangeInputTextColorBasedOnMatchingItems;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color ValidSelectionTextColor;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32F3")]
		public Color MatchingItemsRemainingTextColor;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color NoItemsRemainingTextColor;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E50C")]
		public AutoCompleteSearchType autocompleteSearchType;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _selectionIsValid;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectionTextChangedEvent OnSelectionTextChanged;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectionValidityChangedEvent OnSelectionValidityChanged;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32FB")]
		public SelectionChangedEvent OnSelectionChanged;

		[Token(Token = "0x1700007F")]
		public DropDownListItem SelectedItem
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x20BBC00", Offset = "0x20BBC00", VA = "0x20BBC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A360", Offset = "0xC1A360")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x20BBC30", Offset = "0x20BBC30", VA = "0x20BBC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A39C", Offset = "0xC1A39C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public string Text
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x20BBC68", Offset = "0x20BBC68", VA = "0x20BBC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A3D8", Offset = "0xC1A3D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x20BBC98", Offset = "0x20BBC98", VA = "0x20BBC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A414", Offset = "0xC1A414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public float ScrollBarWidth
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x20BBCD0", Offset = "0x20BBCD0", VA = "0x20BBCD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x20BBD00", Offset = "0x20BBD00", VA = "0x20BBD00")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public int ItemsToDisplay
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x20BC818", Offset = "0x20BC818", VA = "0x20BC818")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x20BC848", Offset = "0x20BC848", VA = "0x20BC848")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public bool InputColorMatching
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x20BC894", Offset = "0x20BC894", VA = "0x20BC894")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x20BC8D8", Offset = "0x20BC8D8", VA = "0x20BC8D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x20BCB84", Offset = "0x20BCB84", VA = "0x20BCB84")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x20BD6D4", Offset = "0x20BD6D4", VA = "0x20BD6D4")]
		public void Start()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x20BCBB4", Offset = "0x20BCBB4", VA = "0x20BCBB4")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x20BD9E8", Offset = "0x20BD9E8", VA = "0x20BD9E8")]
		private void RebuildPanel()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x20BD954", Offset = "0x20BD954", VA = "0x20BD954")]
		private void OnItemClicked(string item)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x20BBD4C", Offset = "0x20BBD4C", VA = "0x20BBD4C")]
		private void RedrawPanel()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x20BE764", Offset = "0x20BE764", VA = "0x20BE764")]
		public void OnValueChanged(string currText)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x20BC958", Offset = "0x20BC958", VA = "0x20BC958")]
		private void SetInputTextColor()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x20BD818", Offset = "0x20BD818", VA = "0x20BD818")]
		public void ToggleDropdownPanel(bool directClick)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x20BEB2C", Offset = "0x20BEB2C", VA = "0x20BEB2C")]
		private void PruneItems(string currText)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x20BEBB8", Offset = "0x20BEBB8", VA = "0x20BEBB8")]
		private void PruneItemsLinq(string currText)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x20BF104", Offset = "0x20BF104", VA = "0x20BF104")]
		private void PruneItemsArray(string currText)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x20BF5F0", Offset = "0x20BF5F0", VA = "0x20BF5F0")]
		public AutoCompleteComboBox()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD37C4", Offset = "0xBD37C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD37C4", Offset = "0xBD37C4")]
	public class ComboBox : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A3")]
		public class SelectionChangedEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0x20E11E8", Offset = "0x20E11E8", VA = "0x20E11E8")]
			public SelectionChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEE4", Offset = "0xBDEEE4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string textOfItem;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComboBox <>4__this;

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x20E0DCC", Offset = "0x20E0DCC", VA = "0x20E0DCC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0x20E1190", Offset = "0x20E1190", VA = "0x20E1190")]
			internal void <RebuildPanel>b__0()
			{
			}
		}

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color disabledTextColor;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA4B4", Offset = "0xBEA4B4")]
		private DropDownListItem <SelectedItem>k__BackingField;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3302")]
		public List<string> AvailableOptions;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _scrollBarWidth;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E514")]
		[SerializeField]
		private int _itemsToDisplay;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectionChangedEvent OnSelectionChanged;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isPanelActive;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasDrawnOnce;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330A")]
		private InputField _mainInput;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _inputRT;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E51C")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _overlayRT;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _scrollPanelRT;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _scrollBarRT;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3312")]
		private RectTransform _slidingAreaRT;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _itemsPanelRT;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E524")]
		private Canvas _canvas;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _canvasRT;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> _panelItems;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x331A")]
		private Dictionary<string, GameObject> panelObjects;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject itemTemplate;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E52C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA568", Offset = "0xBEA568")]
		private string <Text>k__BackingField;

		[Token(Token = "0x17000084")]
		public DropDownListItem SelectedItem
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x20DE8D4", Offset = "0x20DE8D4", VA = "0x20DE8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A450", Offset = "0xC1A450")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x20DE904", Offset = "0x20DE904", VA = "0x20DE904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A48C", Offset = "0xC1A48C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public string Text
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x20DE93C", Offset = "0x20DE93C", VA = "0x20DE93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A4C8", Offset = "0xC1A4C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x20DE96C", Offset = "0x20DE96C", VA = "0x20DE96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A504", Offset = "0xC1A504")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public float ScrollBarWidth
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x20DE9A4", Offset = "0x20DE9A4", VA = "0x20DE9A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x20DE9D4", Offset = "0x20DE9D4", VA = "0x20DE9D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public int ItemsToDisplay
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x20DF4EC", Offset = "0x20DF4EC", VA = "0x20DF4EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x20DF51C", Offset = "0x20DF51C", VA = "0x20DF51C")]
			set
			{
			}
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x20DF568", Offset = "0x20DF568", VA = "0x20DF568")]
		public void Awake()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x20DF598", Offset = "0x20DF598", VA = "0x20DF598")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x20E0080", Offset = "0x20E0080", VA = "0x20E0080")]
		private void RebuildPanel()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x20E0DFC", Offset = "0x20E0DFC", VA = "0x20E0DFC")]
		private void OnItemClicked(string item)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x20DEA20", Offset = "0x20DEA20", VA = "0x20DEA20")]
		private void RedrawPanel()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x20E0FCC", Offset = "0x20E0FCC", VA = "0x20E0FCC")]
		public void OnValueChanged(string currText)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x20E0E90", Offset = "0x20E0E90", VA = "0x20E0E90")]
		public void ToggleDropdownPanel(bool directClick)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x20E114C", Offset = "0x20E114C", VA = "0x20E114C")]
		public ComboBox()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD38BC", Offset = "0xBD38BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD38BC", Offset = "0xBD38BC")]
	public class DropDownList : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A5")]
		public class SelectionChangedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0x1E40E20", Offset = "0x1E40E20", VA = "0x1E40E20")]
			public SelectionChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF20", Offset = "0xBDEF20")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int ii;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DropDownListItem item;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3342")]
			public DropDownList <>4__this;

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x1E40D24", Offset = "0x1E40D24", VA = "0x1E40D24")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x1E40D54", Offset = "0x1E40D54", VA = "0x1E40D54")]
			internal void <RebuildPanel>b__0()
			{
			}
		}

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color disabledTextColor;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA5A4", Offset = "0xBEA5A4")]
		private DropDownListItem <SelectedItem>k__BackingField;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public List<DropDownListItem> Items;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E534")]
		public bool OverrideHighlighted;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isPanelActive;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasDrawnOnce;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DropDownListButton _mainButton;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x332A")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _overlayRT;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E53C")]
		private RectTransform _scrollPanelRT;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _scrollBarRT;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _slidingAreaRT;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _itemsPanelRT;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3332")]
		private Canvas _canvas;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _canvasRT;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E544")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<DropDownListButton> _panelItems;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _itemTemplate;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _scrollBarWidth;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x333A")]
		private int _selectedIndex;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int _itemsToDisplay;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E54C")]
		public bool SelectFirstItemOnStart;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectionChangedEvent OnSelectionChanged;

		[Token(Token = "0x17000088")]
		public DropDownListItem SelectedItem
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x20E4064", Offset = "0x20E4064", VA = "0x20E4064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A540", Offset = "0xC1A540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x20E4094", Offset = "0x20E4094", VA = "0x20E4094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A57C", Offset = "0xC1A57C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public float ScrollBarWidth
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x20E40CC", Offset = "0x20E40CC", VA = "0x20E40CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x20E40FC", Offset = "0x20E40FC", VA = "0x20E40FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public int ItemsToDisplay
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x20E4C50", Offset = "0x20E4C50", VA = "0x20E4C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x20E4C80", Offset = "0x20E4C80", VA = "0x20E4C80")]
			set
			{
			}
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x20E4CCC", Offset = "0x20E4CCC", VA = "0x20E4CCC")]
		public void Start()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x20E4DE8", Offset = "0x20E4DE8", VA = "0x20E4DE8")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x20E5BDC", Offset = "0x20E5BDC", VA = "0x20E5BDC")]
		private void RebuildPanel()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x20E5A9C", Offset = "0x20E5A9C", VA = "0x20E5A9C")]
		private void OnItemClicked(int indx)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x20E6A24", Offset = "0x20E6A24", VA = "0x20E6A24")]
		private void UpdateSelected()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x20E4148", Offset = "0x20E4148", VA = "0x20E4148")]
		private void RedrawPanel()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x20E5870", Offset = "0x20E5870", VA = "0x20E5870")]
		public void ToggleDropdownPanel(bool directClick)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x20E71C8", Offset = "0x20E71C8", VA = "0x20E71C8")]
		public DropDownList()
		{
		}
	}
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD39B4", Offset = "0xBD39B4")]
	public class DropDownListButton
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RectTransform rectTransform;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E554")]
		public Button btn;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text txt;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image btnImg;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image img;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334A")]
		public GameObject gameobject;

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1E40E9C", Offset = "0x1E40E9C", VA = "0x1E40E9C")]
		public DropDownListButton(GameObject btnObj)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class DropDownListItem
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private string _caption;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E55C")]
		[SerializeField]
		private Sprite _image;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _isDisabled;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action OnSelect;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3352")]
		internal Action OnUpdate;

		[Token(Token = "0x1700008B")]
		public string Caption
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x1E410B4", Offset = "0x1E410B4", VA = "0x1E410B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x1E410E4", Offset = "0x1E410E4", VA = "0x1E410E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public Sprite Image
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x1E41170", Offset = "0x1E41170", VA = "0x1E41170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x1E411A0", Offset = "0x1E411A0", VA = "0x1E411A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public bool IsDisabled
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x1E4122C", Offset = "0x1E4122C", VA = "0x1E4122C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x1E41270", Offset = "0x1E41270", VA = "0x1E41270")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public string ID
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x1E41310", Offset = "0x1E41310", VA = "0x1E41310")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x1E41340", Offset = "0x1E41340", VA = "0x1E41340")]
			set
			{
			}
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1E41378", Offset = "0x1E41378", VA = "0x1E41378")]
		public DropDownListItem(string caption = "", string inId = "", [Optional] Sprite image, bool disabled = false, [Optional] Action onSelect)
		{
		}
	}
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3A88", Offset = "0xBD3A88")]
	public class CooldownButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x20005A7")]
		public class CooldownButtonEvent : UnityEvent<PointerEventData.InputButton>
		{
			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0x20E1C60", Offset = "0x20E1C60", VA = "0x20E1C60")]
			public CooldownButtonEvent()
			{
			}
		}

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float cooldownTimeout;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C824")]
		[SerializeField]
		private float cooldownSpeed;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ReadOnly]
		private bool cooldownActive;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ReadOnly]
		private bool cooldownInEffect;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ReadOnly]
		private float cooldownTimeElapsed;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3359")]
		[SerializeField]
		[ReadOnly]
		private float cooldownTimeRemaining;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[ReadOnly]
		private int cooldownPercentRemaining;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E564")]
		[SerializeField]
		[ReadOnly]
		private int cooldownPercentComplete;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PointerEventData buttonSource;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEA9E8", Offset = "0xBEA9E8")]
		public CooldownButtonEvent OnCooldownStart;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAA4C", Offset = "0xBEAA4C")]
		public CooldownButtonEvent OnButtonClickDuringCooldown;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3361")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAAB0", Offset = "0xBEAAB0")]
		public CooldownButtonEvent OnCoolDownFinish;

		[Token(Token = "0x1700008F")]
		public float CooldownTimeout
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x20E1264", Offset = "0x20E1264", VA = "0x20E1264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x20E1294", Offset = "0x20E1294", VA = "0x20E1294")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public float CooldownSpeed
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x20E12CC", Offset = "0x20E12CC", VA = "0x20E12CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x20E12FC", Offset = "0x20E12FC", VA = "0x20E12FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public bool CooldownInEffect
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x20E1334", Offset = "0x20E1334", VA = "0x20E1334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public bool CooldownActive
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x20E1378", Offset = "0x20E1378", VA = "0x20E1378")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x20E13BC", Offset = "0x20E13BC", VA = "0x20E13BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float CooldownTimeElapsed
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x20E1408", Offset = "0x20E1408", VA = "0x20E1408")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x20E1438", Offset = "0x20E1438", VA = "0x20E1438")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float CooldownTimeRemaining
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x20E1470", Offset = "0x20E1470", VA = "0x20E1470")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000095")]
		public int CooldownPercentRemaining
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x20E14A0", Offset = "0x20E14A0", VA = "0x20E14A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000096")]
		public int CooldownPercentComplete
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x20E14D0", Offset = "0x20E14D0", VA = "0x20E14D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x20E1500", Offset = "0x20E1500", VA = "0x20E1500")]
		private void Update()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x20E1890", Offset = "0x20E1890", VA = "0x20E1890")]
		public void PauseCooldown()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x20E18F0", Offset = "0x20E18F0", VA = "0x20E18F0")]
		public void RestartCooldown()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x20E16E0", Offset = "0x20E16E0", VA = "0x20E16E0")]
		public void StopCooldown()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x20E1950", Offset = "0x20E1950", VA = "0x20E1950")]
		public void CancelCooldown()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x20E19D0", Offset = "0x20E19D0", VA = "0x20E19D0", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x20E1C1C", Offset = "0x20E1C1C", VA = "0x20E1C1C")]
		public CooldownButton()
		{
		}
	}
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3AEC", Offset = "0xBD3AEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3AEC", Offset = "0xBD3AEC")]
	public class InputFocus : MonoBehaviour
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected InputField _inputField;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E56C")]
		public bool _ignoreNextActivation;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1E57024", Offset = "0x1E57024", VA = "0x1E57024")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1E570B0", Offset = "0x1E570B0", VA = "0x1E570B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1E571BC", Offset = "0x1E571BC", VA = "0x1E571BC")]
		public void buttonPressed()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1E572F8", Offset = "0x1E572F8", VA = "0x1E572F8")]
		public void OnEndEdit(string textString)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1E57424", Offset = "0x1E57424", VA = "0x1E57424")]
		public InputFocus()
		{
		}
	}
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3BE4", Offset = "0xBD3BE4")]
	public class MultiTouchScrollRect : ScrollRect
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int pid;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1E5BAC8", Offset = "0x1E5BAC8", VA = "0x1E5BAC8", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1E5BB38", Offset = "0x1E5BB38", VA = "0x1E5BB38", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1E5BBC0", Offset = "0x1E5BBC0", VA = "0x1E5BBC0", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1E5BC14", Offset = "0x1E5BC14", VA = "0x1E5BC14")]
		public MultiTouchScrollRect()
		{
		}
	}
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3C48", Offset = "0xBD3C48")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3C48", Offset = "0xBD3C48")]
	public class RadialSlider : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Serializable]
		[Token(Token = "0x20005A8")]
		public class RadialSliderValueChangedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x1E60538", Offset = "0x1E60538", VA = "0x1E60538")]
			public RadialSliderValueChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A9")]
		public class RadialSliderTextValueChangedEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x1E605B4", Offset = "0x1E605B4", VA = "0x1E605B4")]
			public RadialSliderTextValueChangedEvent()
			{
			}
		}

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPointerDown;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPointerReleased;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3369")]
		private bool lerpInProgress;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 m_localPos;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E574")]
		private float m_targetAngle;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_lerpTargetAngle;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_startAngle;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_currentLerpTime;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3371")]
		private float m_lerpTime;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera m_eventCamera;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E57C")]
		private Image m_image;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAB14", Offset = "0xBEAB14")]
		private Color m_startColor;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAB9C", Offset = "0xBEAB9C")]
		private Color m_endColor;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAC24", Offset = "0xBEAC24")]
		[SerializeField]
		private bool m_lerpToTarget;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3379")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEACA4", Offset = "0xBEACA4")]
		[SerializeField]
		private AnimationCurve m_lerpCurve;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAD24", Offset = "0xBEAD24")]
		[SerializeField]
		private RadialSliderValueChangedEvent _onValueChanged;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E584")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEADA4", Offset = "0xBEADA4")]
		[SerializeField]
		private RadialSliderTextValueChangedEvent _onTextValueChanged;

		[Token(Token = "0x17000097")]
		public float Angle
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x1E5EE74", Offset = "0x1E5EE74", VA = "0x1E5EE74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x1E49B54", Offset = "0x1E49B54", VA = "0x1E49B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public float Value
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x1E5F2B0", Offset = "0x1E5F2B0", VA = "0x1E5F2B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x1E49A34", Offset = "0x1E49A34", VA = "0x1E49A34")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public Color EndColor
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x1E5F304", Offset = "0x1E5F304", VA = "0x1E5F304")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x1E5F34C", Offset = "0x1E5F34C", VA = "0x1E5F34C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public Color StartColor
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x1E5F47C", Offset = "0x1E5F47C", VA = "0x1E5F47C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x1E5F4C4", Offset = "0x1E5F4C4", VA = "0x1E5F4C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool LerpToTarget
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x1E5F5F4", Offset = "0x1E5F5F4", VA = "0x1E5F5F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x1E5F638", Offset = "0x1E5F638", VA = "0x1E5F638")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public AnimationCurve LerpCurve
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x1E5F684", Offset = "0x1E5F684", VA = "0x1E5F684")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x1E5F6B4", Offset = "0x1E5F6B4", VA = "0x1E5F6B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool LerpInProgress
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x1E5F7C8", Offset = "0x1E5F7C8", VA = "0x1E5F7C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public Image RadialImage
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x1E5EEDC", Offset = "0x1E5EEDC", VA = "0x1E5EEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public RadialSliderValueChangedEvent onValueChanged
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x1E5F80C", Offset = "0x1E5F80C", VA = "0x1E5F80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x1E5F83C", Offset = "0x1E5F83C", VA = "0x1E5F83C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public RadialSliderTextValueChangedEvent onTextValueChanged
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x1E5F874", Offset = "0x1E5F874", VA = "0x1E5F874")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x1E5F8A4", Offset = "0x1E5F8A4", VA = "0x1E5F8A4")]
			set
			{
			}
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1E5F8DC", Offset = "0x1E5F8DC", VA = "0x1E5F8DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1E5FA70", Offset = "0x1E5FA70", VA = "0x1E5FA70")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1E5F0DC", Offset = "0x1E5F0DC", VA = "0x1E5F0DC")]
		private void StartLerp(float targetAngle)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1E5FF64", Offset = "0x1E5FF64", VA = "0x1E5FF64")]
		private float GetAngleFromMousePoint()
		{
			return default(float);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1E5F188", Offset = "0x1E5F188", VA = "0x1E5F188")]
		private void UpdateRadialImage(float targetAngle)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1E601C0", Offset = "0x1E601C0", VA = "0x1E601C0")]
		private void NotifyValueChanged()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1E602FC", Offset = "0x1E602FC", VA = "0x1E602FC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1E60354", Offset = "0x1E60354", VA = "0x1E60354", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1E603C4", Offset = "0x1E603C4", VA = "0x1E603C4", Slot = "6")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1E60410", Offset = "0x1E60410", VA = "0x1E60410")]
		public RadialSlider()
		{
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3D40", Offset = "0xBD3D40")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3D40", Offset = "0xBD3D40")]
	public class ReorderableList : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AA")]
		public struct ReorderableListEventStruct
		{
			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E584")]
			public GameObject DroppedObject;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int FromIndex;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReorderableList FromList;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsAClone;

			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3381")]
			public GameObject SourceObject;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int ToIndex;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E58C")]
			public ReorderableList ToList;

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x1E62C48", Offset = "0x1E62C48", VA = "0x1E62C48")]
			public void Cancel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AB")]
		public class ReorderableListHandler : UnityEvent<ReorderableListEventStruct>
		{
			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x1E62BCC", Offset = "0x1E62BCC", VA = "0x1E62BCC")]
			public ReorderableListHandler()
			{
			}
		}

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAE24", Offset = "0xBEAE24")]
		public LayoutGroup ContentLayout;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAE88", Offset = "0xBEAE88")]
		public RectTransform DraggableArea;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAEEC", Offset = "0xBEAEEC")]
		public bool IsDraggable;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3381")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAF50", Offset = "0xBEAF50")]
		public bool CloneDraggedObject;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEAFB4", Offset = "0xBEAFB4")]
		public bool IsDropable;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E58C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEB018", Offset = "0xBEB018")]
		public ReorderableListHandler OnElementDropped;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReorderableListHandler OnElementGrabbed;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReorderableListHandler OnElementRemoved;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReorderableListHandler OnElementAdded;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3389")]
		private RectTransform _content;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ReorderableListContent _listContent;

		[Token(Token = "0x170000A1")]
		public RectTransform Content
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x1E61E7C", Offset = "0x1E61E7C", VA = "0x1E61E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1E61FE4", Offset = "0x1E61FE4", VA = "0x1E61FE4")]
		private Canvas GetCanvas()
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1E622AC", Offset = "0x1E622AC", VA = "0x1E622AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1E6292C", Offset = "0x1E6292C", VA = "0x1E6292C")]
		public void TestReOrderableListTarget(ReorderableListEventStruct item)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1E62A88", Offset = "0x1E62A88", VA = "0x1E62A88")]
		public ReorderableList()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class ReorderableListContent : MonoBehaviour
	{
		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF5C", Offset = "0xBDEF5C")]
		private sealed class <RefreshChildren>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5A4")]
			private int <>1__state;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReorderableListContent <>4__this;

			[Token(Token = "0x170004B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C17")]
				[Address(RVA = "0x1E63920", Offset = "0x1E63920", VA = "0x1E63920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C19")]
				[Address(RVA = "0x1E639F0", Offset = "0x1E639F0", VA = "0x1E639F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0x1E62F50", Offset = "0x1E62F50", VA = "0x1E62F50")]
			[DebuggerHidden]
			public <RefreshChildren>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0x1E62FC8", Offset = "0x1E62FC8", VA = "0x1E62FC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0x1E62FDC", Offset = "0x1E62FDC", VA = "0x1E62FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x1E63950", Offset = "0x1E63950", VA = "0x1E63950", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Transform> _cachedChildren;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ReorderableListElement> _cachedListElement;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReorderableListElement _ele;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3399")]
		private ReorderableList _extList;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform _rect;

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1E62CFC", Offset = "0x1E62CFC", VA = "0x1E62CFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1E62EE4", Offset = "0x1E62EE4", VA = "0x1E62EE4")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1E627D8", Offset = "0x1E627D8", VA = "0x1E627D8")]
		public void Init(ReorderableList extList)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1E62E28", Offset = "0x1E62E28", VA = "0x1E62E28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1A5B8", Offset = "0xC1A5B8")]
		private IEnumerator RefreshChildren()
		{
			return null;
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1E62F98", Offset = "0x1E62F98", VA = "0x1E62F98")]
		public ReorderableListContent()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class ReorderableListDebug : MonoBehaviour
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text DebugLabel;

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1E63A20", Offset = "0x1E63A20", VA = "0x1E63A20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1E63C54", Offset = "0x1E63C54", VA = "0x1E63C54")]
		private void ElementDropped(ReorderableList.ReorderableListEventStruct droppedStruct)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1E64190", Offset = "0x1E64190", VA = "0x1E64190")]
		public ReorderableListDebug()
		{
		}
	}
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3E54", Offset = "0xBD3E54")]
	public class ReorderableListElement : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33A1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB07C", Offset = "0xBEB07C")]
		public bool IsGrabbable;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB0E0", Offset = "0xBEB0E0")]
		public bool IsTransferable;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB144", Offset = "0xBEB144")]
		public bool isDroppableInSpace;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<RaycastResult> _raycastResults;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReorderableList _currentReorderableListRaycasted;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform _draggingObject;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33A9")]
		private LayoutElement _draggingObjectLE;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 _draggingObjectOriginalSize;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C82C")]
		private RectTransform _fakeElement;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LayoutElement _fakeElementLE;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _fromIndex;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isDragging;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33B0")]
		private RectTransform _rect;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ReorderableList _reorderableList;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5B4")]
		internal bool isValid;

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1E641C0", Offset = "0x1E641C0", VA = "0x1E641C0", Slot = "5")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1E65844", Offset = "0x1E65844", VA = "0x1E65844", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1E6646C", Offset = "0x1E6646C", VA = "0x1E6646C", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1E651F4", Offset = "0x1E651F4", VA = "0x1E651F4")]
		private void CancelDrag()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1E64D50", Offset = "0x1E64D50", VA = "0x1E64D50")]
		private void RefreshSizes()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1E6387C", Offset = "0x1E6387C", VA = "0x1E6387C")]
		public void Init(ReorderableList reorderableList)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1E66FCC", Offset = "0x1E66FCC", VA = "0x1E66FCC")]
		public ReorderableListElement()
		{
		}
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3F04", Offset = "0xBD3F04")]
	public class RescaleDragPanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 pointerOffset;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform canvasRectTransform;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform panelRectTransform;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33B8")]
		private Transform goTransform;

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1E670A8", Offset = "0x1E670A8", VA = "0x1E670A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1E672DC", Offset = "0x1E672DC", VA = "0x1E672DC", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1E6742C", Offset = "0x1E6742C", VA = "0x1E6742C", Slot = "5")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1E677F0", Offset = "0x1E677F0", VA = "0x1E677F0")]
		private Vector2 ClampToWindow(PointerEventData data)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1E67A4C", Offset = "0x1E67A4C", VA = "0x1E67A4C")]
		public RescaleDragPanel()
		{
		}
	}
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3F68", Offset = "0xBD3F68")]
	public class RescalePanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector2 minSize;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5BC")]
		public Vector2 maxSize;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform rectTransform;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform goTransform;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 currentPointerPosition;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C0")]
		private Vector2 previousPointerPosition;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform thisRectTransform;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5C4")]
		private Vector2 sizeDelta;

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1E67A7C", Offset = "0x1E67A7C", VA = "0x1E67A7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1E67BC0", Offset = "0x1E67BC0", VA = "0x1E67BC0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1E67D10", Offset = "0x1E67D10", VA = "0x1E67D10", Slot = "5")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1E68380", Offset = "0x1E68380", VA = "0x1E68380")]
		public RescalePanel()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3FCC", Offset = "0xBD3FCC")]
	public class ResizePanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 minSize;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 maxSize;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform rectTransform;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C8")]
		private Vector2 currentPointerPosition;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 previousPointerPosition;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5CC")]
		private float ratio;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1E683B0", Offset = "0x1E683B0", VA = "0x1E683B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1E68628", Offset = "0x1E68628", VA = "0x1E68628", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1E68778", Offset = "0x1E68778", VA = "0x1E68778", Slot = "5")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1E68C58", Offset = "0x1E68C58", VA = "0x1E68C58")]
		public ResizePanel()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4030", Offset = "0xBD4030")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4030", Offset = "0xBD4030")]
	public class SegmentedControl : UIBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AD")]
		public class SegmentSelectedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x236D444", Offset = "0x236D444", VA = "0x236D444")]
			public SegmentSelectedEvent()
			{
			}
		}

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Selectable[] m_segments;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB1A8", Offset = "0xBEB1A8")]
		private Graphic m_separator;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_separatorWidth;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB230", Offset = "0xBEB230")]
		private bool m_allowSwitchingOff;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB2B8", Offset = "0xBEB2B8")]
		private int m_selectedSegmentIndex;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5D4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB340", Offset = "0xBEB340")]
		private SegmentSelectedEvent m_onValueChanged;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected internal Selectable selectedSegment;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Color selectedColor;

		[Token(Token = "0x170000A2")]
		protected float SeparatorWidth
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x236BE94", Offset = "0x236BE94", VA = "0x236BE94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A3")]
		public Selectable[] segments
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x2369CB8", Offset = "0x2369CB8", VA = "0x2369CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public Graphic separator
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x236C47C", Offset = "0x236C47C", VA = "0x236C47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x236C4AC", Offset = "0x236C4AC", VA = "0x236C4AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public bool allowSwitchingOff
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x236CEAC", Offset = "0x236CEAC", VA = "0x236CEAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x236CEF0", Offset = "0x236CEF0", VA = "0x236CEF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public int selectedSegmentIndex
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x236CF3C", Offset = "0x236CF3C", VA = "0x236CF3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x236CFE8", Offset = "0x236CFE8", VA = "0x236CFE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public SegmentSelectedEvent onValueChanged
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x236D328", Offset = "0x236D328", VA = "0x236D328")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x236D358", Offset = "0x236D358", VA = "0x236D358")]
			set
			{
			}
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x236D390", Offset = "0x236D390", VA = "0x236D390")]
		protected SegmentedControl()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x236D4C0", Offset = "0x236D4C0", VA = "0x236D4C0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x236C110", Offset = "0x236C110", VA = "0x236C110")]
		private Selectable[] GetChildSegments()
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x236D54C", Offset = "0x236D54C", VA = "0x236D54C")]
		public void SetAllSegmentsOff()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x236D57C", Offset = "0x236D57C", VA = "0x236D57C")]
		private void RecreateSprites()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x236C50C", Offset = "0x236C50C", VA = "0x236C50C")]
		public void LayoutSegments()
		{
		}
	}
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4128", Offset = "0xBD4128")]
	public class Segment : UIBehaviour, IPointerClickHandler, IEventSystemHandler, ISubmitHandler, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, ISelectHandler, IDeselectHandler
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int index;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D8")]
		[SerializeField]
		private Color textColor;

		[Token(Token = "0x170000A8")]
		internal bool leftmost
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x2369B04", Offset = "0x2369B04", VA = "0x2369B04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		internal bool rightmost
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x2369B70", Offset = "0x2369B70", VA = "0x2369B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AA")]
		public bool selected
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x2369D60", Offset = "0x2369D60", VA = "0x2369D60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x2369F20", Offset = "0x2369F20", VA = "0x2369F20")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		internal SegmentedControl segmentControl
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0x2369C34", Offset = "0x2369C34", VA = "0x2369C34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		internal Selectable button
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x2369E9C", Offset = "0x2369E9C", VA = "0x2369E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x236A4FC", Offset = "0x236A4FC", VA = "0x236A4FC")]
		protected Segment()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x236A52C", Offset = "0x236A52C", VA = "0x236A52C", Slot = "25")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x236A59C", Offset = "0x236A59C", VA = "0x236A59C", Slot = "26")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x236A720", Offset = "0x236A720", VA = "0x236A720", Slot = "27")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x236A754", Offset = "0x236A754", VA = "0x236A754", Slot = "28")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x236A788", Offset = "0x236A788", VA = "0x236A788", Slot = "29")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x236A7BC", Offset = "0x236A7BC", VA = "0x236A7BC", Slot = "30")]
		public virtual void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x236A7F0", Offset = "0x236A7F0", VA = "0x236A7F0", Slot = "31")]
		public virtual void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x236A824", Offset = "0x236A824", VA = "0x236A824", Slot = "32")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x2369F74", Offset = "0x2369F74", VA = "0x2369F74")]
		private void SetSelected(bool value)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x236A860", Offset = "0x236A860", VA = "0x236A860")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x236A5D0", Offset = "0x236A5D0", VA = "0x236A5D0")]
		private void MaintainSelection()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x236A95C", Offset = "0x236A95C", VA = "0x236A95C")]
		internal void TransitionButton()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x236AAD8", Offset = "0x236AAD8", VA = "0x236AAD8")]
		internal void TransitionButton(bool instant)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x236B154", Offset = "0x236B154", VA = "0x236B154")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x236A994", Offset = "0x236A994", VA = "0x236A994")]
		internal void StoreTextColor()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x236B63C", Offset = "0x236B63C", VA = "0x236B63C")]
		private void ChangeTextColor(Color targetColor)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x236B8AC", Offset = "0x236B8AC", VA = "0x236B8AC")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x236BA30", Offset = "0x236BA30", VA = "0x236BA30")]
		private void TriggerAnimation(string triggername)
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class ExampleSelectable : MonoBehaviour, IBoxSelectable
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _selected;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5DC")]
		private bool _preSelected;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image image;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text text;

		[Token(Token = "0x170000AD")]
		public bool selected
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x1E41434", Offset = "0x1E41434", VA = "0x1E41434", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x1E41478", Offset = "0x1E41478", VA = "0x1E41478", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public bool preSelected
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x1E414C4", Offset = "0x1E414C4", VA = "0x1E414C4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x1E41508", Offset = "0x1E41508", VA = "0x1E41508", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1E41554", Offset = "0x1E41554", VA = "0x1E41554")]
		private void Start()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1E41688", Offset = "0x1E41688", VA = "0x1E41688")]
		private void Update()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1E41ADC", Offset = "0x1E41ADC", VA = "0x1E41ADC")]
		public ExampleSelectable()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1E41B0C", Offset = "0x1E41B0C", VA = "0x1E41B0C", Slot = "8")]
		private Transform UnityEngine.UI.Extensions.IBoxSelectable.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public interface IBoxSelectable
	{
		[Token(Token = "0x170000AF")]
		bool selected
		{
			[Token(Token = "0x6000917")]
			get;
			[Token(Token = "0x6000918")]
			set;
		}

		[Token(Token = "0x170000B0")]
		bool preSelected
		{
			[Token(Token = "0x6000919")]
			get;
			[Token(Token = "0x600091A")]
			set;
		}

		[Token(Token = "0x170000B1")]
		Transform transform
		{
			[Token(Token = "0x600091B")]
			get;
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD41D8", Offset = "0xBD41D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD41D8", Offset = "0xBD41D8")]
	public class SelectionBox : MonoBehaviour
	{
		[Token(Token = "0x20005AE")]
		public class SelectionEvent : UnityEvent<IBoxSelectable[]>
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x2372168", Offset = "0x2372168", VA = "0x2372168")]
			public SelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33E0")]
		public Color color;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Sprite art;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5E4")]
		private Vector2 origin;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform selectionMask;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform boxRect;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IBoxSelectable[] selectables;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33E8")]
		private MonoBehaviour[] selectableGroup;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private IBoxSelectable clickedBeforeDrag;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5EC")]
		private IBoxSelectable clickedAfterDrag;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectionEvent onSelectionChange;

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x236EEDC", Offset = "0x236EEDC", VA = "0x236EEDC")]
		private void ValidateCanvas()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x236F328", Offset = "0x236F328", VA = "0x236F328")]
		private void SetSelectableGroup(IEnumerable<MonoBehaviour> behaviourCollection)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x236F74C", Offset = "0x236F74C", VA = "0x236F74C")]
		private void CreateBoxRect()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x236F8F8", Offset = "0x236F8F8", VA = "0x236F8F8")]
		private void ResetBoxRect()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x236FBE8", Offset = "0x236FBE8", VA = "0x236FBE8")]
		private void BeginSelection()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x237004C", Offset = "0x237004C", VA = "0x237004C")]
		private bool PointIsValidAgainstSelectionMask(Vector2 screenPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x2370310", Offset = "0x2370310", VA = "0x2370310")]
		private IBoxSelectable GetSelectableAtMousePosition()
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x2371088", Offset = "0x2371088", VA = "0x2371088")]
		private void DragSelection()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x23717A8", Offset = "0x23717A8", VA = "0x23717A8")]
		private void ApplySingleClickDeselection()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x2371A38", Offset = "0x2371A38", VA = "0x2371A38")]
		private void ApplyPreSelections()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x2370D54", Offset = "0x2370D54", VA = "0x2370D54")]
		private Vector2 GetScreenPointOfSelectable(IBoxSelectable selectable)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x237091C", Offset = "0x237091C", VA = "0x237091C")]
		private Camera GetScreenPointCamera(RectTransform rectTransform)
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x2371C30", Offset = "0x2371C30", VA = "0x2371C30")]
		public IBoxSelectable[] GetAllSelected()
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x2371EC0", Offset = "0x2371EC0", VA = "0x2371EC0")]
		private void EndSelection()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x2372028", Offset = "0x2372028", VA = "0x2372028")]
		private void Start()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x2372074", Offset = "0x2372074", VA = "0x2372074")]
		private void Update()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x23720C0", Offset = "0x23720C0", VA = "0x23720C0")]
		public SelectionBox()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD42D0", Offset = "0xBD42D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD42D0", Offset = "0xBD42D0")]
	public class Stepper : UIBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AF")]
		public class StepperValueChangedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x2376DD0", Offset = "0x2376DD0", VA = "0x2376DD0")]
			public StepperValueChangedEvent()
			{
			}
		}

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Selectable[] _sides;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB440", Offset = "0xBEB440")]
		private int _value;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33F0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB4C8", Offset = "0xBEB4C8")]
		private int _minimum;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB550", Offset = "0xBEB550")]
		private int _maximum;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5F4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB5D8", Offset = "0xBEB5D8")]
		private int _step;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB660", Offset = "0xBEB660")]
		private bool _wrap;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB6E8", Offset = "0xBEB6E8")]
		private Graphic _separator;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _separatorWidth;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33F8")]
		[SerializeField]
		private StepperValueChangedEvent _onValueChanged;

		[Token(Token = "0x170000B2")]
		private float separatorWidth
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x2375924", Offset = "0x2375924", VA = "0x2375924")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B3")]
		public Selectable[] sides
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x2375BA0", Offset = "0x2375BA0", VA = "0x2375BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public int value
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x2375FA8", Offset = "0x2375FA8", VA = "0x2375FA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x2375FD8", Offset = "0x2375FD8", VA = "0x2375FD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public int minimum
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x2376010", Offset = "0x2376010", VA = "0x2376010")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x2376040", Offset = "0x2376040", VA = "0x2376040")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public int maximum
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x2376078", Offset = "0x2376078", VA = "0x2376078")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x23760A8", Offset = "0x23760A8", VA = "0x23760A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public int step
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x23760E0", Offset = "0x23760E0", VA = "0x23760E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x2376110", Offset = "0x2376110", VA = "0x2376110")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool wrap
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x2376148", Offset = "0x2376148", VA = "0x2376148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x237618C", Offset = "0x237618C", VA = "0x237618C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public Graphic separator
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x23761D8", Offset = "0x23761D8", VA = "0x23761D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x2376208", Offset = "0x2376208", VA = "0x2376208")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public StepperValueChangedEvent onValueChanged
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x2376C9C", Offset = "0x2376C9C", VA = "0x2376C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x2376CCC", Offset = "0x2376CCC", VA = "0x2376CCC")]
			set
			{
			}
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x2376D04", Offset = "0x2376D04", VA = "0x2376D04")]
		protected Stepper()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x2375C48", Offset = "0x2375C48", VA = "0x2375C48")]
		private Selectable[] GetSides()
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x23770DC", Offset = "0x23770DC", VA = "0x23770DC")]
		public void StepUp()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x2377418", Offset = "0x2377418", VA = "0x2377418")]
		public void StepDown()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x2377124", Offset = "0x2377124", VA = "0x2377124")]
		private void Step(int amount)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x2376E4C", Offset = "0x2376E4C", VA = "0x2376E4C")]
		private void DisableAtExtremes(Selectable[] sides)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x2377470", Offset = "0x2377470", VA = "0x2377470")]
		private void RecreateSprites(Selectable[] sides)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x237627C", Offset = "0x237627C", VA = "0x237627C")]
		public void LayoutSides([Optional] Selectable[] sides)
		{
		}
	}
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD43C8", Offset = "0xBD43C8")]
	public class StepperSide : UIBehaviour, IPointerClickHandler, IEventSystemHandler, ISubmitHandler
	{
		[Token(Token = "0x170000BB")]
		private Selectable button
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x2377964", Offset = "0x2377964", VA = "0x2377964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private Stepper stepper
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x23779E8", Offset = "0x23779E8", VA = "0x23779E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private bool leftmost
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x2377A6C", Offset = "0x2377A6C", VA = "0x2377A6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x2377BD0", Offset = "0x2377BD0", VA = "0x2377BD0")]
		protected StepperSide()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x2377C00", Offset = "0x2377C00", VA = "0x2377C00", Slot = "19")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x2377D94", Offset = "0x2377D94", VA = "0x2377D94", Slot = "20")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x2377C68", Offset = "0x2377C68", VA = "0x2377C68")]
		private void Press()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4478", Offset = "0xBD4478")]
	[ExecuteInEditMode]
	public class TextPic : Text, IPointerClickHandler, IEventSystemHandler, IPointerExitHandler, IPointerEnterHandler, ISelectHandler
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		public struct IconName
		{
			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3407")]
			public Sprite sprite;

			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public Vector2 offset;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E604")]
			public Vector2 scale;
		}

		[Serializable]
		[Token(Token = "0x20005B1")]
		public class HrefClickEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x2381B40", Offset = "0x2381B40", VA = "0x2381B40")]
			public HrefClickEvent()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		private class HrefInfo
		{
			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int startIndex;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int endIndex;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x341F")]
			public readonly List<Rect> boxes;

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x237FF88", Offset = "0x237FF88", VA = "0x237FF88")]
			public HrefInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF98", Offset = "0xBDEF98")]
		private sealed class <>c
		{
			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E61C")]
			public static Predicate<Image> <>9__24_0;

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x2381DAC", Offset = "0x2381DAC", VA = "0x2381DAC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x2381DDC", Offset = "0x2381DDC", VA = "0x2381DDC")]
			internal bool <UpdateQuadImage>b__24_0(Image image)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly List<Image> m_ImagesPool;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E5FC")]
		private readonly List<GameObject> culled_ImagesPool;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool clearImages;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Object thisLock;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<int> m_ImagesVertexIndex;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3400")]
		private static readonly Regex s_Regex;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string fixedString;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C834")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB7AC", Offset = "0xBEB7AC")]
		private bool m_ClickParents;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_OutputText;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IconName[] inspectorIconList;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB834", Offset = "0xBEB834")]
		public float ImageScalingFactor;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3407")]
		public string hyperlinkColor;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public Vector2 imageOffset;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E604")]
		private Button button;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Selectable highlightselectable;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector2> positions;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string previousText;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340F")]
		public bool isCreating_m_HrefInfos;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly List<HrefInfo> m_HrefInfos;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E60C")]
		private static readonly StringBuilder s_TextBuilder;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex s_HrefRegex;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private HrefClickEvent m_OnHrefClick;

		[Token(Token = "0x170000BE")]
		public bool AllowClickParents
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x237B2F4", Offset = "0x237B2F4", VA = "0x237B2F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x237B338", Offset = "0x237B338", VA = "0x237B338")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public HrefClickEvent onHrefClick
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x237FF20", Offset = "0x237FF20", VA = "0x237FF20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x237FF50", Offset = "0x237FF50", VA = "0x237FF50")]
			set
			{
			}
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x237B384", Offset = "0x237B384", VA = "0x237B384", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x237D258", Offset = "0x237D258", VA = "0x237D258")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x237B3C4", Offset = "0x237B3C4", VA = "0x237B3C4")]
		protected void UpdateQuadImage()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x237EBF4", Offset = "0x237EBF4", VA = "0x237EBF4", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper toFill)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x237D614", Offset = "0x237D614", VA = "0x237D614")]
		protected string GetOutputText()
		{
			return null;
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x2380040", Offset = "0x2380040", VA = "0x2380040", Slot = "85")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x2380550", Offset = "0x2380550", VA = "0x2380550", Slot = "87")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x23809D8", Offset = "0x23809D8", VA = "0x23809D8", Slot = "86")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x2380EE0", Offset = "0x2380EE0", VA = "0x2380EE0", Slot = "88")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x2381368", Offset = "0x2381368", VA = "0x2381368")]
		private void Update()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x237D550", Offset = "0x237D550", VA = "0x237D550")]
		private void Reset_m_HrefInfos()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x2381884", Offset = "0x2381884", VA = "0x2381884")]
		public TextPic()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD44F8", Offset = "0xBD44F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD44F8", Offset = "0xBD44F8")]
	public class UI_Knob : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IBeginDragHandler, IDragHandler
	{
		[Token(Token = "0x20005B4")]
		public enum Direction
		{
			[Token(Token = "0x4002867")]
			CW,
			[Token(Token = "0x4002868")]
			CCW
		}

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB910", Offset = "0xBEB910")]
		public Direction direction;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float knobValue;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEB9B0", Offset = "0xBEB9B0")]
		public float maxValue;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3427")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBA14", Offset = "0xBEBA14")]
		public int loops;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBA78", Offset = "0xBEBA78")]
		public bool clampOutput01;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E624")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBADC", Offset = "0xBEBADC")]
		public bool snapToPosition;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBB40", Offset = "0xBEBB40")]
		public int snapStepsPerLoop;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBEBBA4", Offset = "0xBEBBA4")]
		public KnobFloatValueEvent OnValueChanged;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _currentLoops;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x342F")]
		private float _previousValue;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _initAngle;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E62C")]
		private float _currentAngle;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _currentVector;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion _initRotation;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _canDrag;

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x21626CC", Offset = "0x21626CC", VA = "0x21626CC", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x2162700", Offset = "0x2162700", VA = "0x2162700", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x2162734", Offset = "0x2162734", VA = "0x2162734", Slot = "6")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x2162768", Offset = "0x2162768", VA = "0x2162768", Slot = "7")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x216279C", Offset = "0x216279C", VA = "0x216279C", Slot = "8")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x21627DC", Offset = "0x21627DC", VA = "0x21627DC")]
		private void SetInitPointerData(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x2162A50", Offset = "0x2162A50", VA = "0x2162A50", Slot = "9")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x216397C", Offset = "0x216397C", VA = "0x216397C")]
		private void SnapToPosition(ref float knobValue)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x2163AF0", Offset = "0x2163AF0", VA = "0x2163AF0")]
		private void InvokeEvents(float value)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x2163BD8", Offset = "0x2163BD8", VA = "0x2163BD8")]
		public UI_Knob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class KnobFloatValueEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1E57454", Offset = "0x1E57454", VA = "0x1E57454")]
		public KnobFloatValueEvent()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD45F0", Offset = "0xBD45F0")]
	public class BestFitOutline : Shadow
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x20BF9CC", Offset = "0x20BF9CC", VA = "0x20BF9CC")]
		protected BestFitOutline()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x20BF9FC", Offset = "0x20BF9FC", VA = "0x20BF9FC", Slot = "19")]
		public override void ModifyMesh(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class CUIBezierCurve : MonoBehaviour
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int CubicBezierCurvePtNum;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected Vector3[] controlPoints;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action OnRefresh;

		[Token(Token = "0x170000C0")]
		public Vector3[] ControlPoints
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x20C92D0", Offset = "0x20C92D0", VA = "0x20C92D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x20C9300", Offset = "0x20C9300", VA = "0x20C9300")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x20C9374", Offset = "0x20C9374", VA = "0x20C9374")]
		public Vector3 GetPoint(float _time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x20C978C", Offset = "0x20C978C", VA = "0x20C978C")]
		public Vector3 GetTangent(float _time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x20C9C24", Offset = "0x20C9C24", VA = "0x20C9C24")]
		public void ReportSet()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x20C9F88", Offset = "0x20C9F88", VA = "0x20C9F88")]
		public CUIBezierCurve()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4654", Offset = "0xBD4654")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4654", Offset = "0xBD4654")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4654", Offset = "0xBD4654")]
	public class CUIGraphic : BaseMeshEffect
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x343F")]
		public static readonly int bottomCurveIdx;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly int topCurveIdx;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E63C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBC24", Offset = "0xBEBC24")]
		[SerializeField]
		protected bool isCurved;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBCA4", Offset = "0xBEBCA4")]
		[SerializeField]
		protected bool isLockWithRatio;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBD24", Offset = "0xBEBD24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEBD24", Offset = "0xBEBD24")]
		protected float resolution;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RectTransform rectTrans;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3447")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBDE4", Offset = "0xBEBDE4")]
		[SerializeField]
		protected Graphic uiGraphic;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBE64", Offset = "0xBEBE64")]
		[SerializeField]
		protected CUIGraphic refCUIGraphic;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E644")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBEE4", Offset = "0xBEBEE4")]
		[SerializeField]
		protected CUIBezierCurve[] refCurves;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		[SerializeField]
		protected Vector3_Array2D[] refCurvesControlRatioPoints;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<UIVertex> reuse_quads;

		[Token(Token = "0x170000C1")]
		public bool IsCurved
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x20CA03C", Offset = "0x20CA03C", VA = "0x20CA03C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		public bool IsLockWithRatio
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x20CA080", Offset = "0x20CA080", VA = "0x20CA080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		public RectTransform RectTrans
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x20CA0C4", Offset = "0x20CA0C4", VA = "0x20CA0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public Graphic UIGraphic
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x20CA0F4", Offset = "0x20CA0F4", VA = "0x20CA0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public CUIGraphic RefCUIGraphic
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x20CA124", Offset = "0x20CA124", VA = "0x20CA124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public CUIBezierCurve[] RefCurves
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x20CA154", Offset = "0x20CA154", VA = "0x20CA154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public Vector3_Array2D[] RefCurvesControlRatioPoints
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x20CA184", Offset = "0x20CA184", VA = "0x20CA184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x20CA1B4", Offset = "0x20CA1B4", VA = "0x20CA1B4")]
		protected void solveDoubleEquationWithVector(float _x_1, float _y_1, float _x_2, float _y_2, Vector3 _constant_1, Vector3 _contant_2, out Vector3 _x, out Vector3 _y)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x20CACA8", Offset = "0x20CACA8", VA = "0x20CACA8")]
		protected UIVertex uiVertexLerp(UIVertex _a, UIVertex _b, float _time)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x20CB594", Offset = "0x20CB594", VA = "0x20CB594")]
		protected UIVertex uiVertexBerp(UIVertex v_bottomLeft, UIVertex v_topLeft, UIVertex v_topRight, UIVertex v_bottomRight, float _xTime, float _yTime)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x20CB83C", Offset = "0x20CB83C", VA = "0x20CB83C")]
		protected void tessellateQuad(List<UIVertex> _quads, int _thisQuadIdx)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x20CCD28", Offset = "0x20CCD28", VA = "0x20CCD28")]
		protected void tessellateGraphic(List<UIVertex> _verts)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x20CD6B4", Offset = "0x20CD6B4", VA = "0x20CD6B4", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x20CDBD8", Offset = "0x20CDBD8", VA = "0x20CDBD8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x20CE1F4", Offset = "0x20CE1F4", VA = "0x20CE1F4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x20CE238", Offset = "0x20CE238", VA = "0x20CE238", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x20CE27C", Offset = "0x20CE27C", VA = "0x20CE27C", Slot = "21")]
		public virtual void ReportSet()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x20CEBC8", Offset = "0x20CEBC8", VA = "0x20CEBC8")]
		public void FixTextToRectTrans()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x20CF254", Offset = "0x20CF254", VA = "0x20CF254")]
		public void ReferenceCUIForBCurves()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x20D0C80", Offset = "0x20D0C80", VA = "0x20D0C80", Slot = "19")]
		public override void ModifyMesh(Mesh _mesh)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x20D0F38", Offset = "0x20D0F38", VA = "0x20D0F38", Slot = "20")]
		public override void ModifyMesh(VertexHelper _vh)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x20D10B0", Offset = "0x20D10B0", VA = "0x20D10B0", Slot = "22")]
		protected virtual void modifyVertices(List<UIVertex> _verts)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x20CD708", Offset = "0x20CD708", VA = "0x20CD708")]
		public void UpdateCurveControlPointPositions()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x20D0A38", Offset = "0x20D0A38", VA = "0x20D0A38")]
		public Vector3 GetBCurveSandwichSpacePoint(float _xTime, float _yTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x20D1780", Offset = "0x20D1780", VA = "0x20D1780")]
		public Vector3 GetBCurveSandwichSpaceTangent(float _xTime, float _yTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x20D19C8", Offset = "0x20D19C8", VA = "0x20D19C8")]
		public CUIGraphic()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD47B4", Offset = "0xBD47B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD47B4", Offset = "0xBD47B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD47B4", Offset = "0xBD47B4")]
	public class CUIImage : CUIGraphic
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SlicedImageCornerRefVertexIdx;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344F")]
		public static int FilledImageCornerRefVertexIdx;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEBFC0", Offset = "0xBEBFC0")]
		[HideInInspector]
		[SerializeField]
		public Vector2 cornerPosRatio;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E64C")]
		[HideInInspector]
		[SerializeField]
		protected Vector2 oriCornerPosRatio;

		[Token(Token = "0x170000C8")]
		public Vector2 OriCornerPosRatio
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x20D1CF8", Offset = "0x20D1CF8", VA = "0x20D1CF8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000C9")]
		public Image UIImage
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x20D1D30", Offset = "0x20D1D30", VA = "0x20D1D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x20D1B5C", Offset = "0x20D1B5C", VA = "0x20D1B5C")]
		public static int ImageTypeCornerRefVertexIdx(Image.Type _type)
		{
			return default(int);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x20D1DB8", Offset = "0x20D1DB8", VA = "0x20D1DB8", Slot = "21")]
		public override void ReportSet()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x20D1F08", Offset = "0x20D1F08", VA = "0x20D1F08", Slot = "22")]
		protected override void modifyVertices(List<UIVertex> _verts)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x20D34D8", Offset = "0x20D34D8", VA = "0x20D34D8")]
		public CUIImage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD48F8", Offset = "0xBD48F8")]
	public struct Vector3_Array2D
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Vector3[] array;

		[Token(Token = "0x170000CA")]
		public Vector3 Item
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x2167380", Offset = "0x2167380", VA = "0x2167380")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x21673EC", Offset = "0x21673EC", VA = "0x21673EC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD495C", Offset = "0xBD495C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD495C", Offset = "0xBD495C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD495C", Offset = "0xBD495C")]
	public class CUIText : CUIGraphic
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x20D370C", Offset = "0x20D370C", VA = "0x20D370C", Slot = "21")]
		public override void ReportSet()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x20D385C", Offset = "0x20D385C", VA = "0x20D385C")]
		public CUIText()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4AA0", Offset = "0xBD4AA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4AA0", Offset = "0xBD4AA0")]
	public class CurvedText : BaseMeshEffect
	{
		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AnimationCurve _curveForText;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _curveMultiplier;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3457")]
		private RectTransform rectTrans;

		[Token(Token = "0x170000CB")]
		public AnimationCurve CurveForText
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x20E25F8", Offset = "0x20E25F8", VA = "0x20E25F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x20E2628", Offset = "0x20E2628", VA = "0x20E2628")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float CurveMultiplier
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x20E2694", Offset = "0x20E2694", VA = "0x20E2694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x20E26C4", Offset = "0x20E26C4", VA = "0x20E26C4")]
			set
			{
			}
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x20E2730", Offset = "0x20E2730", VA = "0x20E2730", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x20E27E8", Offset = "0x20E27E8", VA = "0x20E27E8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x20E28A0", Offset = "0x20E28A0", VA = "0x20E28A0", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x20E2CA8", Offset = "0x20E2CA8", VA = "0x20E2CA8", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x20E2F24", Offset = "0x20E2F24", VA = "0x20E2F24")]
		public CurvedText()
		{
		}
	}
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4BBC", Offset = "0xBD4BBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4BBC", Offset = "0xBD4BBC")]
	public class CylinderText : BaseMeshEffect
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float radius;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C83C")]
		private RectTransform rectTrans;

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x20E2FB0", Offset = "0x20E2FB0", VA = "0x20E2FB0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x20E3068", Offset = "0x20E3068", VA = "0x20E3068", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x20E3120", Offset = "0x20E3120", VA = "0x20E3120", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x20E3558", Offset = "0x20E3558", VA = "0x20E3558")]
		public CylinderText()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4CD8", Offset = "0xBD4CD8")]
	public class Gradient : BaseMeshEffect
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GradientMode _gradientMode;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GradientDir _gradientDir;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _overwriteAllColor;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x345E")]
		[SerializeField]
		private Color _vertex1;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Color _vertex2;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E654")]
		private Graphic targetGraphic;

		[Token(Token = "0x170000CD")]
		public GradientMode GradientMode
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x1E4D090", Offset = "0x1E4D090", VA = "0x1E4D090")]
			get
			{
				return default(GradientMode);
			}
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x1E4D0C0", Offset = "0x1E4D0C0", VA = "0x1E4D0C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public GradientDir GradientDir
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x1E4D12C", Offset = "0x1E4D12C", VA = "0x1E4D12C")]
			get
			{
				return default(GradientDir);
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x1E4D15C", Offset = "0x1E4D15C", VA = "0x1E4D15C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool OverwriteAllColor
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x1E4D1C8", Offset = "0x1E4D1C8", VA = "0x1E4D1C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x1E4D20C", Offset = "0x1E4D20C", VA = "0x1E4D20C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public Color Vertex1
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x1E4D28C", Offset = "0x1E4D28C", VA = "0x1E4D28C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x1E4D2D4", Offset = "0x1E4D2D4", VA = "0x1E4D2D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Color Vertex2
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x1E4D438", Offset = "0x1E4D438", VA = "0x1E4D438")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x1E4D480", Offset = "0x1E4D480", VA = "0x1E4D480")]
			set
			{
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1E4D5E4", Offset = "0x1E4D5E4", VA = "0x1E4D5E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1E4D670", Offset = "0x1E4D670", VA = "0x1E4D670", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1E4EF14", Offset = "0x1E4EF14", VA = "0x1E4EF14")]
		private bool CompareCarefully(Color col1, Color col2)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1E4F250", Offset = "0x1E4F250", VA = "0x1E4F250")]
		public Gradient()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public enum GradientMode
	{
		[Token(Token = "0x4000A59")]
		Global,
		[Token(Token = "0x4000A5A")]
		Local
	}
	[Token(Token = "0x2000181")]
	public enum GradientDir
	{
		[Token(Token = "0x4000A5C")]
		Vertical,
		[Token(Token = "0x4000A5D")]
		Horizontal,
		[Token(Token = "0x4000A5E")]
		DiagonalLeftToRight,
		[Token(Token = "0x4000A5F")]
		DiagonalRightToLeft
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4D3C", Offset = "0xBD4D3C")]
	public class Gradient2 : BaseMeshEffect
	{
		[Token(Token = "0x20005B5")]
		public enum Type
		{
			[Token(Token = "0x400286A")]
			Horizontal,
			[Token(Token = "0x400286B")]
			Vertical,
			[Token(Token = "0x400286C")]
			Radial,
			[Token(Token = "0x400286D")]
			Diamond
		}

		[Token(Token = "0x20005B6")]
		public enum Blend
		{
			[Token(Token = "0x400286F")]
			Override,
			[Token(Token = "0x4002870")]
			Add,
			[Token(Token = "0x4002871")]
			Multiply
		}

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x346E")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEC310", Offset = "0xBEC310")]
		private float _offset;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E664")]
		[SerializeField]
		private UnityEngine.Gradient _effectGradient;

		[Token(Token = "0x170000D2")]
		public Blend BlendMode
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1E4F2F0", Offset = "0x1E4F2F0", VA = "0x1E4F2F0")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1E4F320", Offset = "0x1E4F320", VA = "0x1E4F320")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public UnityEngine.Gradient EffectGradient
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x1E4F38C", Offset = "0x1E4F38C", VA = "0x1E4F38C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x1E4F3BC", Offset = "0x1E4F3BC", VA = "0x1E4F3BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public Type GradientType
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x1E4F428", Offset = "0x1E4F428", VA = "0x1E4F428")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x1E4F458", Offset = "0x1E4F458", VA = "0x1E4F458")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public float Offset
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x1E4F4C4", Offset = "0x1E4F4C4", VA = "0x1E4F4C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x1E42340", Offset = "0x1E42340", VA = "0x1E42340")]
			set
			{
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1E4F4F4", Offset = "0x1E4F4F4", VA = "0x1E4F4F4", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1E52578", Offset = "0x1E52578", VA = "0x1E52578")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1E526EC", Offset = "0x1E526EC", VA = "0x1E526EC")]
		public Gradient2()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4DA0", Offset = "0xBD4DA0")]
	public class LetterSpacing : BaseMeshEffect
	{
		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x347E")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x170000D6")]
		public float spacing
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x1E57500", Offset = "0x1E57500", VA = "0x1E57500")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x1E421A4", Offset = "0x1E421A4", VA = "0x1E421A4")]
			set
			{
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1E574D0", Offset = "0x1E574D0", VA = "0x1E574D0")]
		protected LetterSpacing()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1E57530", Offset = "0x1E57530", VA = "0x1E57530", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4E04", Offset = "0xBD4E04")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4E04", Offset = "0xBD4E04")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4E04", Offset = "0xBD4E04")]
	public class MonoSpacing : BaseMeshEffect
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E674")]
		public float HalfCharWidth;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool UseHalfCharWidth;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform rectTransform;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text text;

		[Token(Token = "0x170000D7")]
		public float Spacing
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x1E59FD0", Offset = "0x1E59FD0", VA = "0x1E59FD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x1E5A000", Offset = "0x1E5A000", VA = "0x1E5A000")]
			set
			{
			}
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1E59D74", Offset = "0x1E59D74", VA = "0x1E59D74")]
		protected MonoSpacing()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1E59DB8", Offset = "0x1E59DB8", VA = "0x1E59DB8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1E5A19C", Offset = "0x1E5A19C", VA = "0x1E5A19C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4F48", Offset = "0xBD4F48")]
	public class NicerOutline : BaseMeshEffect
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3486")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Vector2 m_EffectDistance;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E67C")]
		[SerializeField]
		private bool m_UseGraphicAlpha;

		[Token(Token = "0x170000D8")]
		public Color effectColor
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x1E5BC58", Offset = "0x1E5BC58", VA = "0x1E5BC58")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x1E5BCA0", Offset = "0x1E5BCA0", VA = "0x1E5BCA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public Vector2 effectDistance
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x1E5BEF8", Offset = "0x1E5BEF8", VA = "0x1E5BEF8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x1E5BF30", Offset = "0x1E5BF30", VA = "0x1E5BF30")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool useGraphicAlpha
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x1E5C21C", Offset = "0x1E5C21C", VA = "0x1E5C21C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x1E5C260", Offset = "0x1E5C260", VA = "0x1E5C260")]
			set
			{
			}
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1E5C3D8", Offset = "0x1E5C3D8", VA = "0x1E5C3D8")]
		protected void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1E5C97C", Offset = "0x1E5C97C", VA = "0x1E5C97C")]
		protected void ApplyShadow(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1E5CB8C", Offset = "0x1E5CB8C", VA = "0x1E5CB8C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1E5D610", Offset = "0x1E5D610", VA = "0x1E5D610")]
		public NicerOutline()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4FAC", Offset = "0xBD4FAC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD4FAC", Offset = "0xBD4FAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4FAC", Offset = "0xBD4FAC")]
	public class RaycastMask : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image _image;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Sprite _sprite;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1E60630", Offset = "0x1E60630", VA = "0x1E60630")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x1E606BC", Offset = "0x1E606BC", VA = "0x1E606BC", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x1E617C0", Offset = "0x1E617C0", VA = "0x1E617C0")]
		public RaycastMask()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD50F0", Offset = "0xBD50F0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD50F0", Offset = "0xBD50F0")]
	public class UIAdditiveEffect : MonoBehaviour
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x2384CF4", Offset = "0x2384CF4", VA = "0x2384CF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x2384D24", Offset = "0x2384D24", VA = "0x2384D24")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x23850C4", Offset = "0x23850C4", VA = "0x23850C4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x23850F4", Offset = "0x23850F4", VA = "0x23850F4")]
		public UIAdditiveEffect()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5204", Offset = "0xBD5204")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5204", Offset = "0xBD5204")]
	public class UIImageCrop : MonoBehaviour
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348E")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material mat;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E684")]
		private int XCropProperty;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int YCropProperty;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float XCrop;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float YCrop;

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x238DB7C", Offset = "0x238DB7C", VA = "0x238DB7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x238DBAC", Offset = "0x238DBAC", VA = "0x238DBAC")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x238DFE0", Offset = "0x238DFE0", VA = "0x238DFE0")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x238E04C", Offset = "0x238E04C", VA = "0x238E04C")]
		public void SetXCrop(float xcrop)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x238E190", Offset = "0x238E190", VA = "0x238E190")]
		public void SetYCrop(float ycrop)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x238E2D4", Offset = "0x238E2D4", VA = "0x238E2D4")]
		public UIImageCrop()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5318", Offset = "0xBD5318")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5318", Offset = "0xBD5318")]
	public class UILinearDodgeEffect : MonoBehaviour
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3496")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x2392F04", Offset = "0x2392F04", VA = "0x2392F04")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x2392F34", Offset = "0x2392F34", VA = "0x2392F34")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x23932D4", Offset = "0x23932D4", VA = "0x23932D4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x2393304", Offset = "0x2393304", VA = "0x2393304")]
		public UILinearDodgeEffect()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD542C", Offset = "0xBD542C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD542C", Offset = "0xBD542C")]
	public class UIMultiplyEffect : MonoBehaviour
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x2393334", Offset = "0x2393334", VA = "0x2393334")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x2393364", Offset = "0x2393364", VA = "0x2393364")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x2393704", Offset = "0x2393704", VA = "0x2393704")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x2393734", Offset = "0x2393734", VA = "0x2393734")]
		public UIMultiplyEffect()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5540", Offset = "0xBD5540")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5540", Offset = "0xBD5540")]
	public class UIScreenEffect : MonoBehaviour
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E68C")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x2159884", Offset = "0x2159884", VA = "0x2159884")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x21598B4", Offset = "0x21598B4", VA = "0x21598B4")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x2159C54", Offset = "0x2159C54", VA = "0x2159C54")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x2159C84", Offset = "0x2159C84", VA = "0x2159C84")]
		public UIScreenEffect()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5654", Offset = "0xBD5654")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5654", Offset = "0xBD5654")]
	public class UISoftAdditiveEffect : MonoBehaviour
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MaskableGraphic mGraphic;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x215C9C8", Offset = "0x215C9C8", VA = "0x215C9C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x215C9F8", Offset = "0x215C9F8", VA = "0x215C9F8")]
		public void SetMaterial()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x215CD98", Offset = "0x215CD98", VA = "0x215CD98")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x215CDC8", Offset = "0x215CDC8", VA = "0x215CDC8")]
		public UISoftAdditiveEffect()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class ShineEffect : MaskableGraphic
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float yoffset;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float width;

		[Token(Token = "0x170000DB")]
		public float Yoffset
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x2372480", Offset = "0x2372480", VA = "0x2372480")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x23724B0", Offset = "0x23724B0", VA = "0x23724B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public float Width
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x23724F8", Offset = "0x23724F8", VA = "0x23724F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x2372528", Offset = "0x2372528", VA = "0x2372528")]
			set
			{
			}
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x2372570", Offset = "0x2372570", VA = "0x2372570", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x2373418", Offset = "0x2373418", VA = "0x2373418")]
		public void Triangulate(VertexHelper vh)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x2373708", Offset = "0x2373708", VA = "0x2373708")]
		public ShineEffect()
		{
		}
	}
	[Token(Token = "0x200018E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5768", Offset = "0xBD5768")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5768", Offset = "0xBD5768")]
	public class ShineEffector : MonoBehaviour
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x349E")]
		public ShineEffect effector;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[HideInInspector]
		private GameObject effectRoot;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E694")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEC5C8", Offset = "0xBEC5C8")]
		public float yOffset;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEC614", Offset = "0xBEC614")]
		public float width;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform effectorRect;

		[Token(Token = "0x170000DD")]
		public float YOffset
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x2373764", Offset = "0x2373764", VA = "0x2373764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x2373794", Offset = "0x2373794", VA = "0x2373794")]
			set
			{
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x237393C", Offset = "0x237393C", VA = "0x237393C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x2374284", Offset = "0x2374284", VA = "0x2374284")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x23737E8", Offset = "0x23737E8", VA = "0x23737E8")]
		private void ChangeVal(float value)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x2374418", Offset = "0x2374418", VA = "0x2374418")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x23745B4", Offset = "0x23745B4", VA = "0x23745B4")]
		public ShineEffector()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD587C", Offset = "0xBD587C")]
	public class SoftMaskScript : MonoBehaviour
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material mat;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34A6")]
		private Canvas cachedCanvas;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Transform cachedCanvasTransform;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E69C")]
		private readonly Vector3[] m_WorldCorners;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3[] m_CanvasCorners;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC664", Offset = "0xBEC664")]
		public RectTransform MaskArea;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC6C8", Offset = "0xBEC6C8")]
		public Texture AlphaMask;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34AE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC72C", Offset = "0xBEC72C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEC72C", Offset = "0xBEC72C")]
		public float CutOff;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC7C8", Offset = "0xBEC7C8")]
		public bool HardBlend;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C844")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC82C", Offset = "0xBEC82C")]
		public bool FlipAlphaMask;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC890", Offset = "0xBEC890")]
		public bool DontClipMaskScalingRect;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 maskOffset;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 maskScale;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x2374610", Offset = "0x2374610", VA = "0x2374610")]
		private void Start()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x2374C60", Offset = "0x2374C60", VA = "0x2374C60")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x2374D84", Offset = "0x2374D84", VA = "0x2374D84")]
		private void SetMask()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x23753A0", Offset = "0x23753A0", VA = "0x23753A0")]
		public Rect GetCanvasRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x23757D8", Offset = "0x23757D8", VA = "0x23757D8")]
		public SoftMaskScript()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5904", Offset = "0xBD5904")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5904", Offset = "0xBD5904")]
	public class UIFlippable : BaseMeshEffect
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34B5")]
		[SerializeField]
		private bool m_Horizontal;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool m_Veritical;

		[Token(Token = "0x170000DE")]
		public bool horizontal
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x2389B98", Offset = "0x2389B98", VA = "0x2389B98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x2389BDC", Offset = "0x2389BDC", VA = "0x2389BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool vertical
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x2389C28", Offset = "0x2389C28", VA = "0x2389C28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x2389C6C", Offset = "0x2389C6C", VA = "0x2389C6C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x2389CB8", Offset = "0x2389CB8", VA = "0x2389CB8", Slot = "20")]
		public override void ModifyMesh(VertexHelper verts)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x238A414", Offset = "0x238A414", VA = "0x238A414")]
		public UIFlippable()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5A3C", Offset = "0xBD5A3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5A3C", Offset = "0xBD5A3C")]
	public class UIParticleSystem : MaskableGraphic
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC96C", Offset = "0xBEC96C")]
		public bool fixedTime;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform _transform;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34BD")]
		private UIVertex[] _quad;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector4 imageUV;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6AC")]
		private ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int textureSheetAnimationFrames;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 textureSheetAnimationFrameSize;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C5")]
		private Material currentMaterial;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Texture currentTexture;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6B4")]
		private ParticleSystem.MainModule mainModule;

		[Token(Token = "0x170000E0")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x2393764", Offset = "0x2393764", VA = "0x2393764", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x2393794", Offset = "0x2393794", VA = "0x2393794")]
		protected bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x2394144", Offset = "0x2394144", VA = "0x2394144", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x23941B4", Offset = "0x23941B4", VA = "0x23941B4", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x2396274", Offset = "0x2396274", VA = "0x2396274")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x239677C", Offset = "0x239677C", VA = "0x239677C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x2396D84", Offset = "0x2396D84", VA = "0x2396D84")]
		public UIParticleSystem()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5B74", Offset = "0xBD5B74")]
	public class CurvedLayout : LayoutGroup
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 CurveOffset;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEC9D0", Offset = "0xBEC9D0")]
		public Vector3 itemAxis;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBECA34", Offset = "0xBECA34")]
		public float itemSize;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34CD")]
		public float centerpoint;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x20E1CDC", Offset = "0x20E1CDC", VA = "0x20E1CDC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x20E252C", Offset = "0x20E252C", VA = "0x20E252C", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x20E2540", Offset = "0x20E2540", VA = "0x20E2540", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x20E2554", Offset = "0x20E2554", VA = "0x20E2554", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x20E2584", Offset = "0x20E2584", VA = "0x20E2584", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x20E1D1C", Offset = "0x20E1D1C", VA = "0x20E1D1C")]
		private void CalculateRadial()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x20E25B4", Offset = "0x20E25B4", VA = "0x20E25B4")]
		public CurvedLayout()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class FancyScrollView<TData, TContext> : MonoBehaviour where TContext : class
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBECA98", Offset = "0xBECA98")]
		private float cellInterval;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBECB14", Offset = "0xBECB14")]
		private float cellOffset;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject cellBase;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentPosition;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<FancyScrollViewCell<TData, TContext>> cells;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TContext context;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TData> cellData;

		[Token(Token = "0x6000A14")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000A15")]
		protected void SetContext(TContext context)
		{
		}

		[Token(Token = "0x6000A16")]
		private FancyScrollViewCell<TData, TContext> CreateCell()
		{
			return null;
		}

		[Token(Token = "0x6000A17")]
		private void UpdateCellForIndex(FancyScrollViewCell<TData, TContext> cell, int dataIndex)
		{
		}

		[Token(Token = "0x6000A18")]
		private int GetLoopIndex(int index, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000A19")]
		protected void UpdateContents()
		{
		}

		[Token(Token = "0x6000A1A")]
		protected void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000A1B")]
		public FancyScrollView()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public sealed class FancyScrollViewNullContext
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1E4AD4C", Offset = "0x1E4AD4C", VA = "0x1E4AD4C")]
		public FancyScrollViewNullContext()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class FancyScrollView<TData> : FancyScrollView<TData, FancyScrollViewNullContext>
	{
		[Token(Token = "0x6000A1D")]
		public FancyScrollView()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class FancyScrollViewCell<TData, TContext> : MonoBehaviour where TContext : class
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBECC04", Offset = "0xBECC04")]
		private int <DataIndex>k__BackingField;

		[Token(Token = "0x170000E1")]
		public int DataIndex
		{
			[Token(Token = "0x6000A22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A668", Offset = "0xC1A668")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A6A4", Offset = "0xC1A6A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000A1E")]
		public virtual void SetContext(TContext context)
		{
		}

		[Token(Token = "0x6000A1F")]
		public virtual void UpdateContent(TData itemData)
		{
		}

		[Token(Token = "0x6000A20")]
		public virtual void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000A21")]
		public virtual void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000A24")]
		public FancyScrollViewCell()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class FancyScrollViewCell<TData> : FancyScrollViewCell<TData, FancyScrollViewNullContext>
	{
		[Token(Token = "0x6000A25")]
		public FancyScrollViewCell()
		{
		}
	}
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5BD8", Offset = "0xBD5BD8")]
	public class FlowLayoutGroup : LayoutGroup
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float SpacingX;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6BC")]
		public float SpacingY;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool ExpandHorizontalSpacing;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool ChildForceExpandWidth;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool ChildForceExpandHeight;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34D5")]
		private float _layoutHeight;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly IList<RectTransform> _rowList;

		[Token(Token = "0x170000E2")]
		protected bool IsCenterAlign
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x1E4BF48", Offset = "0x1E4BF48", VA = "0x1E4BF48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		protected bool IsRightAlign
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x1E4C04C", Offset = "0x1E4C04C", VA = "0x1E4C04C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		protected bool IsMiddleAlign
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x1E4C15C", Offset = "0x1E4C15C", VA = "0x1E4C15C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E5")]
		protected bool IsLowerAlign
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x1E4C26C", Offset = "0x1E4C26C", VA = "0x1E4C26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1E4AD7C", Offset = "0x1E4AD7C", VA = "0x1E4AD7C", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1E4B064", Offset = "0x1E4B064", VA = "0x1E4B064", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1E4BE00", Offset = "0x1E4BE00", VA = "0x1E4BE00", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1E4BE9C", Offset = "0x1E4BE9C", VA = "0x1E4BE9C", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1E4B100", Offset = "0x1E4B100", VA = "0x1E4B100")]
		public float SetLayout(float width, int axis, bool layoutInput)
		{
			return default(float);
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1E4C37C", Offset = "0x1E4C37C", VA = "0x1E4C37C")]
		private float CalculateRowVerticalOffset(float groupHeight, float yOffset, float currentRowHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1E4C4BC", Offset = "0x1E4C4BC", VA = "0x1E4C4BC")]
		protected void LayoutRow(IList<RectTransform> contents, float rowWidth, float rowHeight, float maxWidth, float xOffset, float yOffset, int axis)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1E4AE70", Offset = "0x1E4AE70", VA = "0x1E4AE70")]
		public float GetGreatestMinimumChildWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1E4CFD8", Offset = "0x1E4CFD8", VA = "0x1E4CFD8")]
		public FlowLayoutGroup()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5C3C", Offset = "0xBD5C3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5C3C", Offset = "0xBD5C3C")]
	public class HorizontalScrollSnap : ScrollSnapBase, IEndDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1E52904", Offset = "0x1E52904", VA = "0x1E52904")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1E52B90", Offset = "0x1E52B90", VA = "0x1E52B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1E531AC", Offset = "0x1E531AC", VA = "0x1E531AC")]
		private bool IsRectMovingSlowerThanThreshold(float startingSpeed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1E53364", Offset = "0x1E53364", VA = "0x1E53364")]
		private void DistributePages()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1E49F5C", Offset = "0x1E49F5C", VA = "0x1E49F5C")]
		public void AddChild(GameObject GO)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1E538D0", Offset = "0x1E538D0", VA = "0x1E538D0")]
		public void AddChild(GameObject GO, bool WorldPositionStays)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1E4A25C", Offset = "0x1E4A25C", VA = "0x1E4A25C")]
		public void RemoveChild(int index, out GameObject ChildRemoved)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1E53B90", Offset = "0x1E53B90", VA = "0x1E53B90")]
		public void RemoveChild(int index, bool WorldPositionStays, out GameObject ChildRemoved)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1E4A8A0", Offset = "0x1E4A8A0", VA = "0x1E4A8A0")]
		public void RemoveAllChildren(out GameObject[] ChildrenRemoved)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1E53F1C", Offset = "0x1E53F1C", VA = "0x1E53F1C")]
		public void RemoveAllChildren(bool WorldPositionStays, out GameObject[] ChildrenRemoved)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1E53AA4", Offset = "0x1E53AA4", VA = "0x1E53AA4")]
		private void SetScrollContainerPosition()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1E52A34", Offset = "0x1E52A34", VA = "0x1E52A34")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1E54304", Offset = "0x1E54304", VA = "0x1E54304")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1E54414", Offset = "0x1E54414", VA = "0x1E54414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1E545D4", Offset = "0x1E545D4", VA = "0x1E545D4", Slot = "10")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1E549DC", Offset = "0x1E549DC", VA = "0x1E549DC")]
		public HorizontalScrollSnap()
		{
		}
	}
	[Token(Token = "0x200019A")]
	internal interface IScrollSnap
	{
		[Token(Token = "0x6000A43")]
		void ChangePage(int page);

		[Token(Token = "0x6000A44")]
		void SetLerp(bool value);

		[Token(Token = "0x6000A45")]
		int CurrentPage();

		[Token(Token = "0x6000A46")]
		void StartScreenChange();
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5D34", Offset = "0xBD5D34")]
	public class RadialLayout : LayoutGroup
	{
		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6C4")]
		public float fDistance;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBECC40", Offset = "0xBECC40")]
		public float MinAngle;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBECC88", Offset = "0xBECC88")]
		public float MaxAngle;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBECCD0", Offset = "0xBECCD0")]
		public float StartAngle;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x1E5E7CC", Offset = "0x1E5E7CC", VA = "0x1E5E7CC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1E5EDBC", Offset = "0x1E5EDBC", VA = "0x1E5EDBC", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1E5EDD0", Offset = "0x1E5EDD0", VA = "0x1E5EDD0", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x1E5EDE4", Offset = "0x1E5EDE4", VA = "0x1E5EDE4", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x1E5EE14", Offset = "0x1E5EE14", VA = "0x1E5EE14", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1E5E80C", Offset = "0x1E5E80C", VA = "0x1E5E80C")]
		private void CalculateRadial()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1E5EE44", Offset = "0x1E5EE44", VA = "0x1E5EE44")]
		public RadialLayout()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class ScrollPositionController : UIBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Serializable]
		[Token(Token = "0x20005B7")]
		public class UpdatePositionEvent : UnityEvent<float>
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x1E6B194", Offset = "0x1E6B194", VA = "0x1E6B194")]
			public UpdatePositionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B8")]
		public class ItemSelectedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x1E6B118", Offset = "0x1E6B118", VA = "0x1E6B118")]
			public ItemSelectedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B9")]
		private struct Snap
		{
			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Enable;

			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float VelocityThreshold;

			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Duration;
		}

		[Token(Token = "0x20005BA")]
		private enum ScrollDirection
		{
			[Token(Token = "0x4002876")]
			Vertical,
			[Token(Token = "0x4002877")]
			Horizontal
		}

		[Token(Token = "0x20005BB")]
		private enum MovementType
		{
			[Token(Token = "0x4002879")]
			Unrestricted,
			[Token(Token = "0x400287A")]
			Elastic,
			[Token(Token = "0x400287B")]
			Clamped
		}

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34DD")]
		[SerializeField]
		private RectTransform viewport;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ScrollDirection directionOfRecognize;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6CC")]
		[SerializeField]
		private MovementType movementType;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float elasticity;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float scrollSensitivity;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool inertia;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34E5")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBECE80", Offset = "0xBECE80")]
		private float decelerationRate;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBECF08", Offset = "0xBECF08")]
		private Snap snap;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6D4")]
		[SerializeField]
		private int dataCount;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBECFCC", Offset = "0xBECFCC")]
		public UpdatePositionEvent OnUpdatePosition;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED030", Offset = "0xBED030")]
		public ItemSelectedEvent OnItemSelected;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 pointerStartLocalPosition;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34ED")]
		private float dragStartScrollPosition;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float currentScrollPosition;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6DC")]
		private bool dragging;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float velocity;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float prevScrollPosition;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool autoScrolling;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34F5")]
		private float autoScrollDuration;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float autoScrollStartTime;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6E4")]
		private float autoScrollPosition;

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1E69424", Offset = "0x1E69424", VA = "0x1E69424", Slot = "17")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1E69628", Offset = "0x1E69628", VA = "0x1E69628", Slot = "19")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1E69EDC", Offset = "0x1E69EDC", VA = "0x1E69EDC", Slot = "18")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1E69A84", Offset = "0x1E69A84", VA = "0x1E69A84")]
		private float GetViewportSize()
		{
			return default(float);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1E69BB0", Offset = "0x1E69BB0", VA = "0x1E69BB0")]
		private float CalculateOffset(float position)
		{
			return default(float);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1E69DF8", Offset = "0x1E69DF8", VA = "0x1E69DF8")]
		private void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1E69CD4", Offset = "0x1E69CD4", VA = "0x1E69CD4")]
		private float RubberDelta(float overStretching, float viewSize)
		{
			return default(float);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1E69F48", Offset = "0x1E69F48", VA = "0x1E69F48")]
		public void SetDataCount(int dataCont)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1E69F80", Offset = "0x1E69F80", VA = "0x1E69F80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1E44E08", Offset = "0x1E44E08", VA = "0x1E44E08")]
		public void ScrollTo(int index, float duration)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1E6AD30", Offset = "0x1E6AD30", VA = "0x1E6AD30")]
		private float CalculateClosestPosition(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1E6AC04", Offset = "0x1E6AC04", VA = "0x1E6AC04")]
		private float GetLoopPosition(float position, int length)
		{
			return default(float);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1E6AA48", Offset = "0x1E6AA48", VA = "0x1E6AA48")]
		private float EaseInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1E6AF88", Offset = "0x1E6AF88", VA = "0x1E6AF88")]
		public ScrollPositionController()
		{
		}
	}
	[Token(Token = "0x200019D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5D98", Offset = "0xBD5D98")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5D98", Offset = "0xBD5D98")]
	public class ScrollSnap : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler, IScrollSnap
	{
		[Token(Token = "0x20005BC")]
		public enum ScrollDirection
		{
			[Token(Token = "0x400287D")]
			Horizontal,
			[Token(Token = "0x400287E")]
			Vertical
		}

		[Token(Token = "0x20005BD")]
		public delegate void PageSnapChange(int page);

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ScrollRect _scroll_rect;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C84C")]
		private RectTransform _scrollRectTransform;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform _listContainerTransform;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _pages;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _startingPage;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350C")]
		private Vector3[] _pageAnchorPositions;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 _lerpTarget;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6F4")]
		private bool _lerp;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _listContainerMinPosition;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _listContainerMaxPosition;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _listContainerSize;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3514")]
		private RectTransform _listContainerRectTransform;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 _listContainerCachedSize;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E6FC")]
		private float _itemSize;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _itemsCount;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _startDrag;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _positionOnDragStart;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x351C")]
		private int _pageOnDragStart;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _fastSwipeTimer;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E704")]
		private int _fastSwipeCounter;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _fastSwipeTarget;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED094", Offset = "0xBED094")]
		public Button NextButton;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED0F8", Offset = "0xBED0F8")]
		public Button PrevButton;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3524")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED15C", Offset = "0xBED15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBED15C", Offset = "0xBED15C")]
		public int ItemsVisibleAtOnce;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED1FC", Offset = "0xBED1FC")]
		public bool AutoLayoutItems;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E70C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED260", Offset = "0xBED260")]
		public bool LinkScrolbarSteps;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED2C4", Offset = "0xBED2C4")]
		public bool LinkScrolrectScrollSensitivity;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool UseFastSwipe;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int FastSwipeThreshold;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ScrollDirection direction;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E714")]
		private bool fastSwipe;

		[Token(Token = "0x1400001E")]
		public event PageSnapChange onPageChange
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x1E6E0B4", Offset = "0x1E6E0B4", VA = "0x1E6E0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A6E0", Offset = "0xC1A6E0")]
			add
			{
			}
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x1E6E200", Offset = "0x1E6E200", VA = "0x1E6E200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A71C", Offset = "0xC1A71C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1E6E34C", Offset = "0x1E6E34C", VA = "0x1E6E34C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1E6EA2C", Offset = "0x1E6EA2C", VA = "0x1E6EA2C")]
		public void UpdateListItemsSize()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1E6F60C", Offset = "0x1E6F60C", VA = "0x1E6F60C")]
		public void UpdateListItemPositions()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1E70F04", Offset = "0x1E70F04", VA = "0x1E70F04")]
		public void ResetPage()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1E70A2C", Offset = "0x1E70A2C", VA = "0x1E70A2C")]
		private void UpdateScrollbar(bool linkSteps)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1E71120", Offset = "0x1E71120", VA = "0x1E71120")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1E7162C", Offset = "0x1E7162C", VA = "0x1E7162C")]
		public void NextScreen()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1E71778", Offset = "0x1E71778", VA = "0x1E71778")]
		public void PreviousScreen()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1E718A0", Offset = "0x1E718A0", VA = "0x1E718A0")]
		private void NextScreenCommand()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1E71A88", Offset = "0x1E71A88", VA = "0x1E71A88")]
		private void PrevScreenCommand()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1E70460", Offset = "0x1E70460", VA = "0x1E70460", Slot = "9")]
		public int CurrentPage()
		{
			return default(int);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1E71C28", Offset = "0x1E71C28", VA = "0x1E71C28", Slot = "8")]
		public void SetLerp(bool value)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1E71C74", Offset = "0x1E71C74", VA = "0x1E71C74", Slot = "7")]
		public void ChangePage(int page)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1E70730", Offset = "0x1E70730", VA = "0x1E70730")]
		private void PageChanged(int currentPage)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1E71D6C", Offset = "0x1E71D6C", VA = "0x1E71D6C", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1E71ECC", Offset = "0x1E71ECC", VA = "0x1E71ECC", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x1E72284", Offset = "0x1E72284", VA = "0x1E72284", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1E72310", Offset = "0x1E72310", VA = "0x1E72310", Slot = "10")]
		public void StartScreenChange()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1E72324", Offset = "0x1E72324", VA = "0x1E72324")]
		public ScrollSnap()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1E723CC", Offset = "0x1E723CC", VA = "0x1E723CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A758", Offset = "0xC1A758")]
		private void <Start>b__35_0()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1E723FC", Offset = "0x1E723FC", VA = "0x1E723FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A794", Offset = "0xC1A794")]
		private void <Start>b__35_1()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class ScrollSnapBase : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IScrollSnap
	{
		[Serializable]
		[Token(Token = "0x20005BE")]
		public class SelectionChangeStartEvent : UnityEvent
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x23695B4", Offset = "0x23695B4", VA = "0x23695B4")]
			public SelectionChangeStartEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005BF")]
		public class SelectionPageChangedEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x23695E4", Offset = "0x23695E4", VA = "0x23695E4")]
			public SelectionPageChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C0")]
		public class SelectionChangeEndEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x2369660", Offset = "0x2369660", VA = "0x2369660")]
			public SelectionChangeEndEvent()
			{
			}
		}

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3534")]
		internal Rect panelDimensions;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal RectTransform _screensContainer;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E71C")]
		internal bool _isVertical;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int _screens;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float _scrollStartPosition;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float _childSize;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x353C")]
		private float _childPos;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _maskSize;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E724")]
		internal Vector2 _childAnchorPoint;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ScrollRect _scroll_rect;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 _lerp_target;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool _lerp;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3544")]
		internal bool _pointerDown;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal bool _settled;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E72C")]
		internal Vector3 _startPosition;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED364", Offset = "0xBED364")]
		internal int _currentPage;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int _previousPage;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int _halfNoVisibleItems;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354C")]
		internal bool _moveStarted;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _bottomItem;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E734")]
		private int _topItem;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED3C8", Offset = "0xBED3C8")]
		[SerializeField]
		public int StartingScreen;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED448", Offset = "0xBED448")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBED448", Offset = "0xBED448")]
		public float PageStep;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED500", Offset = "0xBED500")]
		public GameObject Pagination;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED564", Offset = "0xBED564")]
		public GameObject PrevButton;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED5C8", Offset = "0xBED5C8")]
		public GameObject NextButton;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E73C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED62C", Offset = "0xBED62C")]
		public float transitionSpeed;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED690", Offset = "0xBED690")]
		public bool UseFastSwipe;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED6F4", Offset = "0xBED6F4")]
		public int FastSwipeThreshold;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED758", Offset = "0xBED758")]
		public int SwipeVelocityThreshold;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x355C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED7BC", Offset = "0xBED7BC")]
		public RectTransform MaskArea;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED820", Offset = "0xBED820")]
		public float MaskBuffer;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C53C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED884", Offset = "0xBED884")]
		public bool JumpOnEnable;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED8E8", Offset = "0xBED8E8")]
		public bool RestartOnEnable;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED94C", Offset = "0xBED94C")]
		public bool UseParentTransform;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBED9B0", Offset = "0xBED9B0")]
		public GameObject[] ChildObjects;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3562")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDA14", Offset = "0xBEDA14")]
		private SelectionChangeStartEvent m_OnSelectionChangeStartEvent;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDA9C", Offset = "0xBEDA9C")]
		private SelectionPageChangedEvent m_OnSelectionPageChangedEvent;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C854")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDB24", Offset = "0xBEDB24")]
		private SelectionChangeEndEvent m_OnSelectionChangeEndEvent;

		[Token(Token = "0x170000E6")]
		public int CurrentPage
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x2365944", Offset = "0x2365944", VA = "0x2365944")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x2365974", Offset = "0x2365974", VA = "0x2365974")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public SelectionChangeStartEvent OnSelectionChangeStartEvent
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x236677C", Offset = "0x236677C", VA = "0x236677C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x23667AC", Offset = "0x23667AC", VA = "0x23667AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public SelectionPageChangedEvent OnSelectionPageChangedEvent
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x23667E4", Offset = "0x23667E4", VA = "0x23667E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x2366814", Offset = "0x2366814", VA = "0x2366814")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public SelectionChangeEndEvent OnSelectionChangeEndEvent
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x236684C", Offset = "0x236684C", VA = "0x236684C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x236687C", Offset = "0x236687C", VA = "0x236687C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x23668B4", Offset = "0x23668B4", VA = "0x23668B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x2366F78", Offset = "0x2366F78", VA = "0x2366F78")]
		internal void InitialiseChildObjects()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x23676A8", Offset = "0x23676A8", VA = "0x23676A8")]
		internal void InitialiseChildObjectsFromScene()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x2367140", Offset = "0x2367140", VA = "0x2367140")]
		internal void InitialiseChildObjectsFromArray()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x2365BF0", Offset = "0x2365BF0", VA = "0x2365BF0")]
		internal void UpdateVisible()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x2367A10", Offset = "0x2367A10", VA = "0x2367A10")]
		public void NextScreen()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x2367CC4", Offset = "0x2367CC4", VA = "0x2367CC4")]
		public void PreviousScreen()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x2367DD8", Offset = "0x2367DD8", VA = "0x2367DD8")]
		public void GoToScreen(int screenIndex)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x2367F00", Offset = "0x2367F00", VA = "0x2367F00")]
		internal int GetPageforPosition(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x23680E0", Offset = "0x23680E0", VA = "0x23680E0")]
		internal bool IsRectSettledOnaPage(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x2367BC0", Offset = "0x2367BC0", VA = "0x2367BC0")]
		internal void GetPositionforPage(int page, ref Vector3 target)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x2368380", Offset = "0x2368380", VA = "0x2368380")]
		internal void ScrollToClosestElement()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x2366720", Offset = "0x2366720", VA = "0x2366720")]
		internal void OnCurrentScreenChange(int currentScreen)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x2368464", Offset = "0x2368464", VA = "0x2368464")]
		private void ChangeBulletsInfo(int targetScreen)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x2368734", Offset = "0x2368734", VA = "0x2368734")]
		private void ToggleNavigationButtons(int targetScreen)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x2368A38", Offset = "0x2368A38", VA = "0x2368A38")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x2367B40", Offset = "0x2367B40", VA = "0x2367B40", Slot = "9")]
		public void StartScreenChange()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x2366674", Offset = "0x2366674", VA = "0x2366674")]
		internal void ScreenChange()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x2369040", Offset = "0x2369040", VA = "0x2369040")]
		internal void EndScreenChange()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x236911C", Offset = "0x236911C", VA = "0x236911C")]
		public Transform CurrentPageObject()
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x2369180", Offset = "0x2369180", VA = "0x2369180")]
		public void CurrentPageObject(out Transform returnObject)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x2369204", Offset = "0x2369204", VA = "0x2369204", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x23692A4", Offset = "0x23692A4", VA = "0x23692A4", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x23692D8", Offset = "0x23692D8", VA = "0x23692D8", Slot = "8")]
		private int UnityEngine.UI.Extensions.IScrollSnap.CurrentPage()
		{
			return default(int);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2369388", Offset = "0x2369388", VA = "0x2369388", Slot = "7")]
		public void SetLerp(bool value)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x23693D4", Offset = "0x23693D4", VA = "0x23693D4", Slot = "6")]
		public void ChangePage(int page)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x2369414", Offset = "0x2369414", VA = "0x2369414")]
		public ScrollSnapBase()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x23696DC", Offset = "0x23696DC", VA = "0x23696DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A7D0", Offset = "0xC1A7D0")]
		private void <Awake>b__54_0()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x236970C", Offset = "0x236970C", VA = "0x236970C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A80C", Offset = "0xC1A80C")]
		private void <Awake>b__54_1()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class ScrollSnapScrollbarHelper : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IBeginDragHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal IScrollSnap ss;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x236973C", Offset = "0x236973C", VA = "0x236973C", Slot = "6")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x236987C", Offset = "0x236987C", VA = "0x236987C", Slot = "8")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x2369920", Offset = "0x2369920", VA = "0x2369920", Slot = "7")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x2369A6C", Offset = "0x2369A6C", VA = "0x2369A6C", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x2369AA0", Offset = "0x2369AA0", VA = "0x2369AA0", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x2369770", Offset = "0x2369770", VA = "0x2369770")]
		private void OnScrollBarDown()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x2369954", Offset = "0x2369954", VA = "0x2369954")]
		private void OnScrollBarUp()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x2369AD4", Offset = "0x2369AD4", VA = "0x2369AD4")]
		public ScrollSnapScrollbarHelper()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5EAC", Offset = "0xBD5EAC")]
	public class TableLayoutGroup : LayoutGroup
	{
		[Token(Token = "0x20005C1")]
		public enum Corner
		{
			[Token(Token = "0x4002880")]
			UpperLeft,
			[Token(Token = "0x4002881")]
			UpperRight,
			[Token(Token = "0x4002882")]
			LowerLeft,
			[Token(Token = "0x4002883")]
			LowerRight
		}

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected Corner startCorner;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected float[] columnWidths;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3569")]
		[SerializeField]
		protected float minimumRowHeight;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		protected bool flexibleRowHeight;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E744")]
		[SerializeField]
		protected float columnSpacing;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected float rowSpacing;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] preferredRowHeights;

		[Token(Token = "0x170000EA")]
		public Corner StartCorner
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x2379508", Offset = "0x2379508", VA = "0x2379508")]
			get
			{
				return default(Corner);
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x2379538", Offset = "0x2379538", VA = "0x2379538")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public float[] ColumnWidths
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x23795D4", Offset = "0x23795D4", VA = "0x23795D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x2379604", Offset = "0x2379604", VA = "0x2379604")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float MinimumRowHeight
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x23796A0", Offset = "0x23796A0", VA = "0x23796A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x23796D0", Offset = "0x23796D0", VA = "0x23796D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public bool FlexibleRowHeight
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x237976C", Offset = "0x237976C", VA = "0x237976C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x23797B0", Offset = "0x23797B0", VA = "0x23797B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public float ColumnSpacing
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x2379860", Offset = "0x2379860", VA = "0x2379860")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x2379890", Offset = "0x2379890", VA = "0x2379890")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public float RowSpacing
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x237992C", Offset = "0x237992C", VA = "0x237992C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x237995C", Offset = "0x237995C", VA = "0x237995C")]
			set
			{
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x23799F8", Offset = "0x23799F8", VA = "0x23799F8", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x2379CC8", Offset = "0x2379CC8", VA = "0x2379CC8", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x237A4CC", Offset = "0x237A4CC", VA = "0x237A4CC", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x237ABAC", Offset = "0x237ABAC", VA = "0x237ABAC", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x237B1EC", Offset = "0x237B1EC", VA = "0x237B1EC")]
		public TableLayoutGroup()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD5F10", Offset = "0xBD5F10")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5F10", Offset = "0xBD5F10")]
	public class TileSizeFitter : UIBehaviour, ILayoutSelfController, ILayoutController
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector2 m_Border;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector2 m_TileSize;

		[NonSerialized]
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3579")]
		private RectTransform m_Rect;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x170000F0")]
		public Vector2 Border
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x2381EF8", Offset = "0x2381EF8", VA = "0x2381EF8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x2381F30", Offset = "0x2381F30", VA = "0x2381F30")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Vector2 TileSize
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x23820F8", Offset = "0x23820F8", VA = "0x23820F8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x2382130", Offset = "0x2382130", VA = "0x2382130")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x2382294", Offset = "0x2382294", VA = "0x2382294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x23823E8", Offset = "0x23823E8", VA = "0x23823E8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x2382428", Offset = "0x2382428", VA = "0x2382428", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x2382544", Offset = "0x2382544", VA = "0x2382544", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x2382574", Offset = "0x2382574", VA = "0x2382574")]
		private void UpdateRect()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x2382B74", Offset = "0x2382B74", VA = "0x2382B74")]
		private Vector2 GetParentSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x2382D4C", Offset = "0x2382D4C", VA = "0x2382D4C", Slot = "19")]
		public virtual void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x2382D60", Offset = "0x2382D60", VA = "0x2382D60", Slot = "20")]
		public virtual void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x2382094", Offset = "0x2382094", VA = "0x2382094")]
		protected void SetDirty()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x2382D74", Offset = "0x2382D74", VA = "0x2382D74")]
		public TileSizeFitter()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6024", Offset = "0xBD6024")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6024", Offset = "0xBD6024")]
	public class UIVerticalScroller : MonoBehaviour
	{
		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFD4", Offset = "0xBDEFD4")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UIVerticalScroller <>4__this;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x215DE80", Offset = "0x215DE80", VA = "0x215DE80")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x215EEB8", Offset = "0x215EEB8", VA = "0x215EEB8")]
			internal void <AddListener>b__0()
			{
			}
		}

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E754")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDD8C", Offset = "0xBEDD8C")]
		public RectTransform _scrollingPanel;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDDF0", Offset = "0xBEDDF0")]
		public GameObject[] _arrayOfElements;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDE54", Offset = "0xBEDE54")]
		public RectTransform _center;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDEB8", Offset = "0xBEDEB8")]
		public int StartingIndex;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3581")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDF1C", Offset = "0xBEDF1C")]
		public GameObject ScrollUpButton;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDF80", Offset = "0xBEDF80")]
		public GameObject ScrollDownButton;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E75C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEDFE4", Offset = "0xBEDFE4")]
		public UnityEvent<int> ButtonClicked;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] distReposition;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] distance;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int minElementsNum;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3589")]
		private int elementLength;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float deltaY;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E764")]
		private string result;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x215CDF8", Offset = "0x215CDF8", VA = "0x215CDF8")]
		public UIVerticalScroller()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x215CE3C", Offset = "0x215CE3C", VA = "0x215CE3C")]
		public UIVerticalScroller(RectTransform scrollingPanel, GameObject[] arrayOfElements, RectTransform center)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x215CEC8", Offset = "0x215CEC8", VA = "0x215CEC8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x215D39C", Offset = "0x215D39C", VA = "0x215D39C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x215DB44", Offset = "0x215DB44", VA = "0x215DB44")]
		private void AddListener(GameObject button, int index)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x215DEB0", Offset = "0x215DEB0", VA = "0x215DEB0")]
		private void DoSomething(int index)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x215DF7C", Offset = "0x215DF7C", VA = "0x215DF7C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x215E7C0", Offset = "0x215E7C0", VA = "0x215E7C0")]
		private void ScrollingElements(float position)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x215E998", Offset = "0x215E998", VA = "0x215E998")]
		public string GetResults()
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x215DCDC", Offset = "0x215DCDC", VA = "0x215DCDC")]
		public void SnapToElement(int element)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x215E9C8", Offset = "0x215E9C8", VA = "0x215E9C8")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x215EC6C", Offset = "0x215EC6C", VA = "0x215EC6C")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x215EE58", Offset = "0x215EE58", VA = "0x215EE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A848", Offset = "0xC1A848")]
		private void <Start>b__16_0()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x215EE88", Offset = "0x215EE88", VA = "0x215EE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A884", Offset = "0xC1A884")]
		private void <Start>b__16_1()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD611C", Offset = "0xBD611C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD611C", Offset = "0xBD611C")]
	public class VerticalScrollSnap : ScrollSnapBase, IEndDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x2167470", Offset = "0x2167470", VA = "0x2167470")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x21676FC", Offset = "0x21676FC", VA = "0x21676FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x2167D18", Offset = "0x2167D18", VA = "0x2167D18")]
		private bool IsRectMovingSlowerThanThreshold(float startingSpeed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x2167ED0", Offset = "0x2167ED0", VA = "0x2167ED0")]
		public void DistributePages()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x21684C0", Offset = "0x21684C0", VA = "0x21684C0")]
		public void AddChild(GameObject GO)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x2168508", Offset = "0x2168508", VA = "0x2168508")]
		public void AddChild(GameObject GO, bool WorldPositionStays)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x21687C8", Offset = "0x21687C8", VA = "0x21687C8")]
		public void RemoveChild(int index, out GameObject ChildRemoved)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x2168820", Offset = "0x2168820", VA = "0x2168820")]
		public void RemoveChild(int index, bool WorldPositionStays, out GameObject ChildRemoved)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x2168BAC", Offset = "0x2168BAC", VA = "0x2168BAC")]
		public void RemoveAllChildren(out GameObject[] ChildrenRemoved)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x2168BF4", Offset = "0x2168BF4", VA = "0x2168BF4")]
		public void RemoveAllChildren(bool WorldPositionStays, out GameObject[] ChildrenRemoved)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x21686DC", Offset = "0x21686DC", VA = "0x21686DC")]
		private void SetScrollContainerPosition()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x21675A0", Offset = "0x21675A0", VA = "0x21675A0")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x2168FDC", Offset = "0x2168FDC", VA = "0x2168FDC")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x21690EC", Offset = "0x21690EC", VA = "0x21690EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x21692AC", Offset = "0x21692AC", VA = "0x21692AC", Slot = "10")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x21696CC", Offset = "0x21696CC", VA = "0x21696CC")]
		public VerticalScrollSnap()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public abstract class AdamKaposMenu<T> : AdamKaposMenu where T : AdamKaposMenu<T>
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEE048", Offset = "0xBEE048")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x170000F3")]
		public static T Instance
		{
			[Token(Token = "0x6000ADD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A8C0", Offset = "0xC1A8C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ADE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A8FC", Offset = "0xC1A8FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ADF")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AE0")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE1")]
		protected static void Open()
		{
		}

		[Token(Token = "0x6000AE2")]
		protected static void Close()
		{
		}

		[Token(Token = "0x6000AE3")]
		public override void OnBackPressed()
		{
		}

		[Token(Token = "0x6000AE4")]
		protected AdamKaposMenu()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public abstract class AdamKaposMenu : MonoBehaviour
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE084", Offset = "0xBEE084")]
		public bool DestroyWhenClosed;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3591")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE0E8", Offset = "0xBEE0E8")]
		public bool DisableMenusUnderneath;

		[Token(Token = "0x6000AE5")]
		public abstract void OnBackPressed();

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x20BBBA4", Offset = "0x20BBBA4", VA = "0x20BBBA4")]
		protected AdamKaposMenu()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6214", Offset = "0xBD6214")]
	[DisallowMultipleComponent]
	public class MenuManager : MonoBehaviour
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AdamKaposMenu[] MenuScreens;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E76C")]
		public int StartScreen;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<AdamKaposMenu> menuStack;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEE14C", Offset = "0xBEE14C")]
		private static MenuManager <Instance>k__BackingField;

		[Token(Token = "0x170000F4")]
		public static MenuManager Instance
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x1E58798", Offset = "0x1E58798", VA = "0x1E58798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A938", Offset = "0xC1A938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x1E58818", Offset = "0x1E58818", VA = "0x1E58818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1A974", Offset = "0xC1A974")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1E588A0", Offset = "0x1E588A0", VA = "0x1E588A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1E590D0", Offset = "0x1E590D0", VA = "0x1E590D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AEB")]
		public void CreateInstance<T>() where T : AdamKaposMenu
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1E58AA4", Offset = "0x1E58AA4", VA = "0x1E58AA4")]
		public void CreateInstance(string MenuName)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1E58BD0", Offset = "0x1E58BD0", VA = "0x1E58BD0")]
		public void OpenMenu(AdamKaposMenu instance)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1E59104", Offset = "0x1E59104", VA = "0x1E59104")]
		private GameObject GetPrefab(string PrefabName)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		private T GetPrefab<T>() where T : AdamKaposMenu
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1E59324", Offset = "0x1E59324", VA = "0x1E59324")]
		public void CloseMenu(AdamKaposMenu menu)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1E596E0", Offset = "0x1E596E0", VA = "0x1E596E0")]
		public void CloseTopMenu()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1E59B84", Offset = "0x1E59B84", VA = "0x1E59B84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1E59CBC", Offset = "0x1E59CBC", VA = "0x1E59CBC")]
		public MenuManager()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public abstract class SimpleMenu<T> : AdamKaposMenu<T> where T : SimpleMenu<T>
	{
		[Token(Token = "0x6000AF4")]
		public static void Show()
		{
		}

		[Token(Token = "0x6000AF5")]
		public static void Hide()
		{
		}

		[Token(Token = "0x6000AF6")]
		protected SimpleMenu()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6294", Offset = "0xBD6294")]
	public class DiamondGraph : UIPrimitiveBase
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_a;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3599")]
		[SerializeField]
		private float m_b;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float m_c;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E774")]
		[SerializeField]
		private float m_d;

		[Token(Token = "0x170000F5")]
		public float A
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x20E3588", Offset = "0x20E3588", VA = "0x20E3588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x20E35B8", Offset = "0x20E35B8", VA = "0x20E35B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float B
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x20E35F0", Offset = "0x20E35F0", VA = "0x20E35F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x20E3620", Offset = "0x20E3620", VA = "0x20E3620")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public float C
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x20E3658", Offset = "0x20E3658", VA = "0x20E3658")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x20E3688", Offset = "0x20E3688", VA = "0x20E3688")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float D
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x20E36C0", Offset = "0x20E36C0", VA = "0x20E36C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x20E36F0", Offset = "0x20E36F0", VA = "0x20E36F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x20E3728", Offset = "0x20E3728", VA = "0x20E3728", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x20E3D2C", Offset = "0x20E3D2C", VA = "0x20E3D2C")]
		public DiamondGraph()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD62F8", Offset = "0xBD62F8")]
	public class UICircle : UIPrimitiveBase
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE278", Offset = "0xBEE278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEE278", Offset = "0xBEE278")]
		[SerializeField]
		private int m_fillPercent;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE330", Offset = "0xBEE330")]
		public bool FixedToSegments;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE394", Offset = "0xBEE394")]
		[SerializeField]
		private bool m_fill;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35A1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE414", Offset = "0xBEE414")]
		[SerializeField]
		private float m_thickness;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE494", Offset = "0xBEE494")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEE494", Offset = "0xBEE494")]
		[SerializeField]
		private int m_segments;

		[Token(Token = "0x170000F9")]
		public int FillPercent
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x2385124", Offset = "0x2385124", VA = "0x2385124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x2385154", Offset = "0x2385154", VA = "0x2385154")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool Fill
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x23851A0", Offset = "0x23851A0", VA = "0x23851A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x23851E4", Offset = "0x23851E4", VA = "0x23851E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public float Thickness
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x2385244", Offset = "0x2385244", VA = "0x2385244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x2385274", Offset = "0x2385274", VA = "0x2385274")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public int Segments
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x23853F0", Offset = "0x23853F0", VA = "0x23853F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x2385420", Offset = "0x2385420", VA = "0x2385420")]
			set
			{
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x23852C0", Offset = "0x23852C0", VA = "0x23852C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x238546C", Offset = "0x238546C", VA = "0x238546C", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x23864D0", Offset = "0x23864D0", VA = "0x23864D0")]
		private void StepThroughPointsAndFill(float outer, float inner, ref Vector2 prevX, ref Vector2 prevY, out Vector2 pos0, out Vector2 pos1, out Vector2 pos2, out Vector2 pos3, float c, float s)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x23867B0", Offset = "0x23867B0", VA = "0x23867B0")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD635C", Offset = "0xBD635C")]
	public class UICornerCut : UIPrimitiveBase
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E77C")]
		public Vector2 cornerSize;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEE54C", Offset = "0xBEE54C")]
		[SerializeField]
		private bool m_cutUL;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_cutUR;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_cutLL;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35A9")]
		[SerializeField]
		private bool m_cutLR;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE680", Offset = "0xBEE680")]
		[SerializeField]
		private bool m_makeColumns;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E784")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEE700", Offset = "0xBEE700")]
		[SerializeField]
		private bool m_useColorUp;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color32 m_colorUp;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_useColorDown;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color32 m_colorDown;

		[Token(Token = "0x170000FD")]
		public bool CutUL
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x23868EC", Offset = "0x23868EC", VA = "0x23868EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x2386930", Offset = "0x2386930", VA = "0x2386930")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool CutUR
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x2386990", Offset = "0x2386990", VA = "0x2386990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x23869D4", Offset = "0x23869D4", VA = "0x23869D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public bool CutLL
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x2386A34", Offset = "0x2386A34", VA = "0x2386A34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x2386A78", Offset = "0x2386A78", VA = "0x2386A78")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool CutLR
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x2386AD8", Offset = "0x2386AD8", VA = "0x2386AD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x2386B1C", Offset = "0x2386B1C", VA = "0x2386B1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool MakeColumns
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x2386B7C", Offset = "0x2386B7C", VA = "0x2386B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x2386BC0", Offset = "0x2386BC0", VA = "0x2386BC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public bool UseColorUp
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x2386C20", Offset = "0x2386C20", VA = "0x2386C20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x2386C64", Offset = "0x2386C64", VA = "0x2386C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public Color32 ColorUp
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x2386CB0", Offset = "0x2386CB0", VA = "0x2386CB0")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x2386CFC", Offset = "0x2386CFC", VA = "0x2386CFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool UseColorDown
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x2386D88", Offset = "0x2386D88", VA = "0x2386D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x2386DCC", Offset = "0x2386DCC", VA = "0x2386DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public Color32 ColorDown
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x2386E18", Offset = "0x2386E18", VA = "0x2386E18")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x2386E64", Offset = "0x2386E64", VA = "0x2386E64")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2386EF0", Offset = "0x2386EF0", VA = "0x2386EF0", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x2388E10", Offset = "0x2388E10", VA = "0x2388E10")]
		private static void AddSquare(Rect rect, Rect rectUV, Color32 color32, VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x238864C", Offset = "0x238864C", VA = "0x238864C")]
		private static void AddSquare(Vector2 a, Vector2 b, Vector2 c, Vector2 d, Rect rectUV, Color32 color32, VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x23894B4", Offset = "0x23894B4", VA = "0x23894B4")]
		private static int AddVert(float x, float y, Rect area, Color32 color32, VertexHelper vh)
		{
			return default(int);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2389700", Offset = "0x2389700", VA = "0x2389700")]
		public UICornerCut()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD63C0", Offset = "0xBD63C0")]
	public class UIGridRenderer : UILineRenderer
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35B1")]
		[SerializeField]
		private int m_GridColumns;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int m_GridRows;

		[Token(Token = "0x17000106")]
		public int GridColumns
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x238A444", Offset = "0x238A444", VA = "0x238A444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x238A474", Offset = "0x238A474", VA = "0x238A474")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public int GridRows
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x238A4F4", Offset = "0x238A4F4", VA = "0x238A4F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x238A524", Offset = "0x238A524", VA = "0x238A524")]
			set
			{
			}
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x238A5A4", Offset = "0x238A5A4", VA = "0x238A5A4", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x238D1F4", Offset = "0x238D1F4", VA = "0x238D1F4")]
		public UIGridRenderer()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6424", Offset = "0xBD6424")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6424", Offset = "0xBD6424")]
	public class UILineRenderer : UIPrimitiveBase
	{
		[Token(Token = "0x20005C3")]
		private enum SegmentType
		{
			[Token(Token = "0x4002887")]
			Start,
			[Token(Token = "0x4002888")]
			Middle,
			[Token(Token = "0x4002889")]
			End,
			[Token(Token = "0x400288A")]
			Full
		}

		[Token(Token = "0x20005C4")]
		public enum JoinType
		{
			[Token(Token = "0x400288C")]
			Bevel,
			[Token(Token = "0x400288D")]
			Miter
		}

		[Token(Token = "0x20005C5")]
		public enum BezierType
		{
			[Token(Token = "0x400288F")]
			None,
			[Token(Token = "0x4002890")]
			Quick,
			[Token(Token = "0x4002891")]
			Basic,
			[Token(Token = "0x4002892")]
			Improved,
			[Token(Token = "0x4002893")]
			Catenary
		}

		[Token(Token = "0x4000B46")]
		private const float MIN_MITER_JOIN = (float)Math.PI / 12f;

		[Token(Token = "0x4000B47")]
		private const float MIN_BEVEL_NICE_JOIN = (float)Math.PI / 6f;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_TOP_LEFT;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_BOTTOM_LEFT;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35B9")]
		private static Vector2 UV_TOP_CENTER_LEFT;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Vector2 UV_TOP_CENTER_RIGHT;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C85C")]
		private static Vector2 UV_BOTTOM_CENTER_LEFT;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_BOTTOM_CENTER_RIGHT;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_TOP_RIGHT;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_BOTTOM_RIGHT;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C0")]
		private static Vector2[] startUvs;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Vector2[] middleUvs;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E794")]
		private static Vector2[] endUvs;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] fullUvs;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE8AC", Offset = "0xBEE8AC")]
		internal Vector2[] m_points;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE934", Offset = "0xBEE934")]
		internal float lineThickness;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEE9BC", Offset = "0xBEE9BC")]
		internal bool relativeSize;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEA44", Offset = "0xBEEA44")]
		internal bool lineList;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E79C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEACC", Offset = "0xBEEACC")]
		internal bool lineCaps;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEB54", Offset = "0xBEEB54")]
		internal int bezierSegmentsPerCurve;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEBDC", Offset = "0xBEEBDC")]
		public JoinType LineJoins;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEC40", Offset = "0xBEEC40")]
		public BezierType BezierMode;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35D0")]
		[HideInInspector]
		public bool drivenExternally;

		[Token(Token = "0x17000108")]
		public float LineThickness
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x238EEB8", Offset = "0x238EEB8", VA = "0x238EEB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x238EEE8", Offset = "0x238EEE8", VA = "0x238EEE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public bool RelativeSize
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x238EF34", Offset = "0x238EF34", VA = "0x238EF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x238EE28", Offset = "0x238EE28", VA = "0x238EE28")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public bool LineList
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x238EF78", Offset = "0x238EF78", VA = "0x238EF78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x238EFBC", Offset = "0x238EFBC", VA = "0x238EFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public bool LineCaps
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x238F01C", Offset = "0x238F01C", VA = "0x238F01C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x238F060", Offset = "0x238F060", VA = "0x238F060")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public int BezierSegmentsPerCurve
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x238F0C0", Offset = "0x238F0C0", VA = "0x238F0C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x238F0F0", Offset = "0x238F0F0", VA = "0x238F0F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public Vector2[] Points
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x238F128", Offset = "0x238F128", VA = "0x238F128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x238EDA8", Offset = "0x238EDA8", VA = "0x238EDA8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x238AFF4", Offset = "0x238AFF4", VA = "0x238AFF4", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x238F158", Offset = "0x238F158", VA = "0x238F158")]
		private UIVertex[] CreateLineCap(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x238F5B0", Offset = "0x238F5B0", VA = "0x238F5B0")]
		private UIVertex[] CreateLineSegment(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x238FDF4", Offset = "0x238FDF4", VA = "0x238FDF4", Slot = "75")]
		protected override void GeneratedUVs()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x2390A1C", Offset = "0x2390A1C", VA = "0x2390A1C", Slot = "76")]
		protected override void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x238D248", Offset = "0x238D248", VA = "0x238D248")]
		public UILineRenderer()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD651C", Offset = "0xBD651C")]
	public class UILineTextureRenderer : UIPrimitiveBase
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Rect m_UVRect;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector2[] m_points;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float LineThickness;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35E8")]
		public bool UseMargins;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector2 Margin;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7BC")]
		public bool relativeSize;

		[Token(Token = "0x1700010E")]
		public Rect uvRect
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x2390B74", Offset = "0x2390B74", VA = "0x2390B74")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x2390BBC", Offset = "0x2390BBC", VA = "0x2390BBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public Vector2[] Points
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x2390C98", Offset = "0x2390C98", VA = "0x2390C98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x2390CC8", Offset = "0x2390CC8", VA = "0x2390CC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2390D48", Offset = "0x2390D48", VA = "0x2390D48", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2392A28", Offset = "0x2392A28", VA = "0x2392A28")]
		public Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x2392D24", Offset = "0x2392D24", VA = "0x2392D24")]
		public UILineTextureRenderer()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6580", Offset = "0xBD6580")]
	public class UIPolygon : UIPrimitiveBase
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool fill;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float thickness;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEED58", Offset = "0xBEED58")]
		public int sides;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEEDA4", Offset = "0xBEEDA4")]
		public float rotation;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBEEDEC", Offset = "0xBEEDEC")]
		public float[] VerticesDistances;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7C4")]
		private float size;

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2396E98", Offset = "0x2396E98", VA = "0x2396E98")]
		public void DrawPolygon(int _sides)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x239702C", Offset = "0x239702C", VA = "0x239702C")]
		public void DrawPolygon(int _sides, float[] _VerticesDistances)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x23970A4", Offset = "0x23970A4", VA = "0x23970A4")]
		public void DrawPolygon(int _sides, float[] _VerticesDistances, float _rotation)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x2397120", Offset = "0x2397120", VA = "0x2397120")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x2397400", Offset = "0x2397400", VA = "0x2397400", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x2397EE0", Offset = "0x2397EE0", VA = "0x2397EE0")]
		public UIPolygon()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public enum ResolutionMode
	{
		[Token(Token = "0x4000B6A")]
		None,
		[Token(Token = "0x4000B6B")]
		PerSegment,
		[Token(Token = "0x4000B6C")]
		PerLine
	}
	[Token(Token = "0x20001B0")]
	public class UIPrimitiveBase : MaskableGraphic, ILayoutElement, ICanvasRaycastFilter
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected static Material s_ETC1DefaultUI;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7CC")]
		[SerializeField]
		private Sprite m_Sprite;

		[NonSerialized]
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Sprite m_OverrideSprite;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float m_EventAlphaThreshold;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ResolutionMode m_improveResolution;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3600")]
		[SerializeField]
		protected float m_Resolution;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool m_useNativeSize;

		[Token(Token = "0x17000110")]
		public Sprite sprite
		{
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x21565E4", Offset = "0x21565E4", VA = "0x21565E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x2156614", Offset = "0x2156614", VA = "0x2156614")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public Sprite overrideSprite
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x21566DC", Offset = "0x21566DC", VA = "0x21566DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x2156864", Offset = "0x2156864", VA = "0x2156864")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		protected Sprite activeSprite
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x2156714", Offset = "0x2156714", VA = "0x2156714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public float eventAlphaThreshold
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x215692C", Offset = "0x215692C", VA = "0x215692C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x215695C", Offset = "0x215695C", VA = "0x215695C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public ResolutionMode ImproveResolution
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x2156994", Offset = "0x2156994", VA = "0x2156994")]
			get
			{
				return default(ResolutionMode);
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x21569C4", Offset = "0x21569C4", VA = "0x21569C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public float Resoloution
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x2156A10", Offset = "0x2156A10", VA = "0x2156A10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x2156A40", Offset = "0x2156A40", VA = "0x2156A40")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public bool UseNativeSize
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x2156A8C", Offset = "0x2156A8C", VA = "0x2156A8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x2156AD0", Offset = "0x2156AD0", VA = "0x2156AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public static Material defaultETC1GraphicMaterial
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x2156B90", Offset = "0x2156B90", VA = "0x2156B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x2156E28", Offset = "0x2156E28", VA = "0x2156E28", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public bool hasBorder
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x2157198", Offset = "0x2157198", VA = "0x2157198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011A")]
		public float pixelsPerUnit
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x21572F0", Offset = "0x21572F0", VA = "0x21572F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011B")]
		public override Material material
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x215753C", Offset = "0x215753C", VA = "0x215753C", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x2157868", Offset = "0x2157868", VA = "0x2157868", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public virtual float minWidth
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x21586DC", Offset = "0x21586DC", VA = "0x21586DC", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011D")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x21586F4", Offset = "0x21586F4", VA = "0x21586F4", Slot = "80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011E")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x215886C", Offset = "0x215886C", VA = "0x215886C", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011F")]
		public virtual float minHeight
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x2158888", Offset = "0x2158888", VA = "0x2158888", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000120")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x21588A0", Offset = "0x21588A0", VA = "0x21588A0", Slot = "83")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000121")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x2158A18", Offset = "0x2158A18", VA = "0x2158A18", Slot = "84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000122")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x2158A34", Offset = "0x2158A34", VA = "0x2158A34", Slot = "85")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x2156B30", Offset = "0x2156B30", VA = "0x2156B30")]
		protected UIPrimitiveBase()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x21578A8", Offset = "0x21578A8", VA = "0x21578A8")]
		protected UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x2157C78", Offset = "0x2157C78", VA = "0x2157C78")]
		protected Vector2[] IncreaseResolution(Vector2[] input)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x2158688", Offset = "0x2158688", VA = "0x2158688", Slot = "75")]
		protected virtual void GeneratedUVs()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x215869C", Offset = "0x215869C", VA = "0x215869C", Slot = "76")]
		protected virtual void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x21586B4", Offset = "0x21586B4", VA = "0x21586B4", Slot = "77")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x21586C8", Offset = "0x21586C8", VA = "0x21586C8", Slot = "78")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x2158A50", Offset = "0x2158A50", VA = "0x2158A50", Slot = "86")]
		public virtual bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x21593F8", Offset = "0x21593F8", VA = "0x21593F8")]
		private Vector2 MapCoordinate(Vector2 local, Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x2159504", Offset = "0x2159504", VA = "0x2159504")]
		private Vector4 GetAdjustedBorders(Vector4 border, Rect rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x2159830", Offset = "0x2159830", VA = "0x2159830", Slot = "5")]
		protected override void OnEnable()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public enum NavigationMode
	{
		[Token(Token = "0x4000B75")]
		Auto,
		[Token(Token = "0x4000B76")]
		Manual
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD65E4", Offset = "0xBD65E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD65E4", Offset = "0xBD65E4")]
	public class TabNavigationHelper : MonoBehaviour
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventSystem _system;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3608")]
		private Selectable StartingObject;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Selectable LastObject;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEF24", Offset = "0xBEEF24")]
		public Selectable[] NavigationPath;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEF88", Offset = "0xBEEF88")]
		public NavigationMode NavigationMode;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEEFEC", Offset = "0xBEEFEC")]
		public bool CircularNavigation;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x2377DC8", Offset = "0x2377DC8", VA = "0x2377DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x2378308", Offset = "0x2378308", VA = "0x2378308")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x2378140", Offset = "0x2378140", VA = "0x2378140")]
		private void SelectDefaultObject(out Selectable next)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x23791F4", Offset = "0x23791F4", VA = "0x23791F4")]
		private void selectGameObject(Selectable selectable)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x23794D8", Offset = "0x23794D8", VA = "0x23794D8")]
		public TabNavigationHelper()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD66DC", Offset = "0xBD66DC")]
	public class BoundTooltipItem : MonoBehaviour
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text TooltipText;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3610")]
		public Vector3 ToolTipOffset;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static BoundTooltipItem instance;

		[Token(Token = "0x17000123")]
		public bool IsActive
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x20C3454", Offset = "0x20C3454", VA = "0x20C3454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000124")]
		public static BoundTooltipItem Instance
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x20C3894", Offset = "0x20C3894", VA = "0x20C3894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x20C34BC", Offset = "0x20C34BC", VA = "0x20C34BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x20C3680", Offset = "0x20C3680", VA = "0x20C3680")]
		public void ShowTooltip(string text, Vector3 pos)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x20C3624", Offset = "0x20C3624", VA = "0x20C3624")]
		public void HideTooltip()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x20C3A6C", Offset = "0x20C3A6C", VA = "0x20C3A6C")]
		public BoundTooltipItem()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6740", Offset = "0xBD6740")]
	public class BoundTooltipTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, ISelectHandler, IDeselectHandler
	{
		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C864")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xBEF050", Offset = "0xBEF050")]
		public string text;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useMousePosition;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 offset;

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x20C3A9C", Offset = "0x20C3A9C", VA = "0x20C3A9C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x20C3D74", Offset = "0x20C3D74", VA = "0x20C3D74", Slot = "6")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x20C3DF4", Offset = "0x20C3DF4", VA = "0x20C3DF4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x20C3E70", Offset = "0x20C3E70", VA = "0x20C3E70", Slot = "7")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x20C3CE8", Offset = "0x20C3CE8", VA = "0x20C3CE8")]
		private void StartHover(Vector3 position)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x20C3E28", Offset = "0x20C3E28", VA = "0x20C3E28")]
		private void StopHover()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x20C3EA4", Offset = "0x20C3EA4", VA = "0x20C3EA4")]
		public BoundTooltipTrigger()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD67A4", Offset = "0xBD67A4")]
	public class HoverTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int horizontalPadding;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3617")]
		public int verticalPadding;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text thisText;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7E4")]
		public HorizontalLayoutGroup hlG;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform bgImage;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image bgImageSource;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool firstUpdate;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x361F")]
		private bool inside;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderMode GUIMode;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7EC")]
		private Camera GUICamera;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 lowerLeft;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 upperRight;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentYScaleFactor;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3627")]
		private float currentXScaleFactor;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float defaultYOffset;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7F4")]
		private float defaultXOffset;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float tooltipRealHeight;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float tooltipRealWidth;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1E54A0C", Offset = "0x1E54A0C", VA = "0x1E54A0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1E54E5C", Offset = "0x1E54E5C", VA = "0x1E54E5C")]
		public void SetTooltip(string text)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1E56288", Offset = "0x1E56288", VA = "0x1E56288")]
		public void SetTooltip(string[] texts)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1E564DC", Offset = "0x1E564DC", VA = "0x1E564DC")]
		public void SetTooltip(string text, bool test)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1E551E4", Offset = "0x1E551E4", VA = "0x1E551E4")]
		public void OnScreenSpaceCamera()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1E56560", Offset = "0x1E56560", VA = "0x1E56560")]
		public void HideTooltip()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1E56718", Offset = "0x1E56718", VA = "0x1E56718")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1E567A4", Offset = "0x1E567A4", VA = "0x1E567A4")]
		private void LayoutInit()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1E54ED4", Offset = "0x1E54ED4", VA = "0x1E54ED4")]
		private void NewTooltip()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1E56AD4", Offset = "0x1E56AD4", VA = "0x1E56AD4")]
		public void ActivateTooltipVisibility()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1E54C14", Offset = "0x1E54C14", VA = "0x1E54C14")]
		public void HideTooltipVisibility()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1E56D1C", Offset = "0x1E56D1C", VA = "0x1E56D1C")]
		public HoverTooltip()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6808", Offset = "0xBD6808")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6808", Offset = "0xBD6808")]
	public class ToolTip : MonoBehaviour
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text _text;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x362F")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _inside;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E7FC")]
		private float width;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float height;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float YShift;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float xShift;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3637")]
		private RenderMode _guiMode;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera _guiCamera;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x2383470", Offset = "0x2383470", VA = "0x2383470")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x2383630", Offset = "0x2383630", VA = "0x2383630")]
		public void SetTooltip(string ttext)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x2384448", Offset = "0x2384448", VA = "0x2384448")]
		public void HideTooltip()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x23844E0", Offset = "0x23844E0", VA = "0x23844E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x2383818", Offset = "0x2383818", VA = "0x2383818")]
		public void OnScreenSpaceCamera()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x2384560", Offset = "0x2384560", VA = "0x2384560")]
		public ToolTip()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6900", Offset = "0xBD6900")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6900", Offset = "0xBD6900")]
	public class UIWindowBase : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E804")]
		private RectTransform m_transform;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isDragging;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ResetCoords;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_originalCoods;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x363F")]
		private Canvas m_canvas;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RectTransform m_canvasRectTransform;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E80C")]
		public int KeepWindowInCanvas;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x215EF10", Offset = "0x215EF10", VA = "0x215EF10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x215F030", Offset = "0x215F030", VA = "0x215F030")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x215F248", Offset = "0x215F248", VA = "0x215F248", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x2160054", Offset = "0x2160054", VA = "0x2160054", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x21602B0", Offset = "0x21602B0", VA = "0x21602B0", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x215F140", Offset = "0x215F140", VA = "0x215F140")]
		private void resetCoordinatePosition()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x215F5EC", Offset = "0x215F5EC", VA = "0x215F5EC")]
		private Vector3 ScreenToCanvas(Vector3 screenPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x21602E4", Offset = "0x21602E4", VA = "0x21602E4")]
		public UIWindowBase()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class BezierPath
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SegmentsPerCurve;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float MINIMUM_SQR_DISTANCE;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float DIVISION_THRESHOLD;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3647")]
		private List<Vector2> controlPoints;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int curveCount;

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x20C057C", Offset = "0x20C057C", VA = "0x20C057C")]
		public BezierPath()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x20C0678", Offset = "0x20C0678", VA = "0x20C0678")]
		public void SetControlPoints(List<Vector2> newControlPoints)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x20C07B4", Offset = "0x20C07B4", VA = "0x20C07B4")]
		public void SetControlPoints(Vector2[] newControlPoints)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x20C08F0", Offset = "0x20C08F0", VA = "0x20C08F0")]
		public List<Vector2> GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x20C0920", Offset = "0x20C0920", VA = "0x20C0920")]
		public void Interpolate(List<Vector2> segmentPoints, float scale)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x20C1548", Offset = "0x20C1548", VA = "0x20C1548")]
		public void SamplePoints(List<Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x20C1DF4", Offset = "0x20C1DF4", VA = "0x20C1DF4")]
		public Vector2 CalculateBezierPoint(int curveIndex, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x20C23A0", Offset = "0x20C23A0", VA = "0x20C23A0")]
		public List<Vector2> GetDrawingPoints0()
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x20C2600", Offset = "0x20C2600", VA = "0x20C2600")]
		public List<Vector2> GetDrawingPoints1()
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x20C2AD0", Offset = "0x20C2AD0", VA = "0x20C2AD0")]
		public List<Vector2> GetDrawingPoints2()
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x20C2C9C", Offset = "0x20C2C9C", VA = "0x20C2C9C")]
		private List<Vector2> FindDrawingPoints(int curveIndex)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x20C2E50", Offset = "0x20C2E50", VA = "0x20C2E50")]
		private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector2> pointList, int insertionIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x20C2090", Offset = "0x20C2090", VA = "0x20C2090")]
		private Vector2 CalculateBezierPoint(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20001B9")]
	public static class CLZF2
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E814")]
		private static readonly uint HLOG;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint HSIZE;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint MAX_LIT;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint MAX_OFF;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364F")]
		private static readonly uint MAX_REF;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly long[] HashTable;

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x20C68C0", Offset = "0x20C68C0", VA = "0x20C68C0")]
		public static byte[] Compress(byte[] inputBytes)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x20C8740", Offset = "0x20C8740", VA = "0x20C8740")]
		public static byte[] Decompress(byte[] inputBytes)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x20C6B94", Offset = "0x20C6B94", VA = "0x20C6B94")]
		public static int lzf_compress(byte[] input, ref byte[] output)
		{
			return default(int);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x20C8A14", Offset = "0x20C8A14", VA = "0x20C8A14")]
		public static int lzf_decompress(byte[] input, ref byte[] output)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class CableCurve
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E81C")]
		[SerializeField]
		private Vector2 m_start;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector2 m_end;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_slack;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_steps;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3657")]
		[SerializeField]
		private bool m_regen;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Vector2[] emptyCurve;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E824")]
		[SerializeField]
		private Vector2[] points;

		[Token(Token = "0x17000125")]
		public bool regenPoints
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x20D3944", Offset = "0x20D3944", VA = "0x20D3944")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x20D3988", Offset = "0x20D3988", VA = "0x20D3988")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public Vector2 start
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x20D39D4", Offset = "0x20D39D4", VA = "0x20D39D4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x20D3A0C", Offset = "0x20D3A0C", VA = "0x20D3A0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public Vector2 end
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x20D3B3C", Offset = "0x20D3B3C", VA = "0x20D3B3C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x20D3B74", Offset = "0x20D3B74", VA = "0x20D3B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public float slack
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x20D3CA4", Offset = "0x20D3CA4", VA = "0x20D3CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x20D3CD4", Offset = "0x20D3CD4", VA = "0x20D3CD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public int steps
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x20D3E24", Offset = "0x20D3E24", VA = "0x20D3E24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x20D3E54", Offset = "0x20D3E54", VA = "0x20D3E54")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public Vector2 midPoint
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x20D3F9C", Offset = "0x20D3F9C", VA = "0x20D3F9C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x20D4394", Offset = "0x20D4394", VA = "0x20D4394")]
		public CableCurve()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x20D4564", Offset = "0x20D4564", VA = "0x20D4564")]
		public CableCurve(Vector2[] inputPoints)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x20D4658", Offset = "0x20D4658", VA = "0x20D4658")]
		public CableCurve(CableCurve v)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x20D47BC", Offset = "0x20D47BC", VA = "0x20D47BC")]
		public Vector2[] Points()
		{
			return null;
		}
	}
	[Token(Token = "0x20001BB")]
	public class Circle
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float xAxis;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float yAxis;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int steps;

		[Token(Token = "0x1700012B")]
		public float X
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x20D56F0", Offset = "0x20D56F0", VA = "0x20D56F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x20D5720", Offset = "0x20D5720", VA = "0x20D5720")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float Y
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x20D5758", Offset = "0x20D5758", VA = "0x20D5758")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x20D5788", Offset = "0x20D5788", VA = "0x20D5788")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public int Steps
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x20D57C0", Offset = "0x20D57C0", VA = "0x20D57C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x20D57F0", Offset = "0x20D57F0", VA = "0x20D57F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x20D5828", Offset = "0x20D5828", VA = "0x20D5828")]
		public Circle(float radius)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x20D5898", Offset = "0x20D5898", VA = "0x20D5898")]
		public Circle(float radius, int steps)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x20D590C", Offset = "0x20D590C", VA = "0x20D590C")]
		public Circle(float xAxis, float yAxis)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x20D5980", Offset = "0x20D5980", VA = "0x20D5980")]
		public Circle(float xAxis, float yAxis, int steps)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x20D59F8", Offset = "0x20D59F8", VA = "0x20D59F8")]
		public Vector2 Evaluate(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x20D5BF4", Offset = "0x20D5BF4", VA = "0x20D5BF4")]
		public void Evaluate(float t, out Vector2 eval)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD69F8", Offset = "0xBD69F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD69F8", Offset = "0xBD69F8")]
	public class DragCorrector : MonoBehaviour
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x365F")]
		public int baseTH;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int basePPI;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E82C")]
		public int dragTH;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x20E3E4C", Offset = "0x20E3E4C", VA = "0x20E3E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x20E400C", Offset = "0x20E400C", VA = "0x20E400C")]
		public DragCorrector()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6AF0", Offset = "0xBD6AF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6AF0", Offset = "0xBD6AF0")]
	public class InputFieldEnterSubmit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C6")]
		public class EnterSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x1E56FA8", Offset = "0x1E56FA8", VA = "0x1E56FA8")]
			public EnterSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EnterSubmitEvent EnterSubmit;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InputField _input;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1E56D4C", Offset = "0x1E56D4C", VA = "0x1E56D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1E56E7C", Offset = "0x1E56E7C", VA = "0x1E56E7C")]
		public void OnEndEdit(string txt)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1E56F78", Offset = "0x1E56F78", VA = "0x1E56F78")]
		public InputFieldEnterSubmit()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6BE8", Offset = "0xBD6BE8")]
	public class NonDrawingGraphic : MaskableGraphic
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1E5D7F0", Offset = "0x1E5D7F0", VA = "0x1E5D7F0", Slot = "29")]
		public override void SetMaterialDirty()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1E5D804", Offset = "0x1E5D804", VA = "0x1E5D804", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1E5D818", Offset = "0x1E5D818", VA = "0x1E5D818", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1E5D860", Offset = "0x1E5D860", VA = "0x1E5D860")]
		public NonDrawingGraphic()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6C4C", Offset = "0xBD6C4C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6C4C", Offset = "0xBD6C4C")]
	public class PPIViewer : MonoBehaviour
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text label;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1E5D890", Offset = "0x1E5D890", VA = "0x1E5D890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1E5D91C", Offset = "0x1E5D91C", VA = "0x1E5D91C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1E5DABC", Offset = "0x1E5DABC", VA = "0x1E5DABC")]
		public PPIViewer()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6D44", Offset = "0xBD6D44")]
	public class PaginationManager : ToggleGroup
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3667")]
		private List<Toggle> m_PaginationChildren;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ScrollSnapBase scrollSnap;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C86C")]
		private bool isAClick;

		[Token(Token = "0x1700012E")]
		public int CurrentPage
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x1E5DAEC", Offset = "0x1E5DAEC", VA = "0x1E5DAEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1E5DB3C", Offset = "0x1E5DB3C", VA = "0x1E5DB3C")]
		protected PaginationManager()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1E5DB6C", Offset = "0x1E5DB6C", VA = "0x1E5DB6C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1E5E454", Offset = "0x1E5E454", VA = "0x1E5E454")]
		public void GoToScreen(int pageNo)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1E5E4AC", Offset = "0x1E5E4AC", VA = "0x1E5E4AC")]
		private void ToggleClick(Toggle target)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1E5E5B0", Offset = "0x1E5E5B0", VA = "0x1E5E5B0")]
		private void ToggleClick(bool toggle)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1E5E744", Offset = "0x1E5E744", VA = "0x1E5E744")]
		private void ToggleClick(int target)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1E5E360", Offset = "0x1E5E360", VA = "0x1E5E360")]
		private void SetToggleGraphics(int pageNo)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1E5E798", Offset = "0x1E5E798", VA = "0x1E5E798")]
		private void OnPageChangeEnd(int pageNo)
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1E617F0", Offset = "0x1E617F0", VA = "0x1E617F0")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6DA8", Offset = "0xBD6DA8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6DA8", Offset = "0xBD6DA8")]
	public class ScrollConflictManager : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScrollRect ParentScrollRect;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollRect _myScrollRect;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool scrollOther;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x366E")]
		private bool scrollOtherHorizontally;

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1E68C88", Offset = "0x1E68C88", VA = "0x1E68C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1E68FC4", Offset = "0x1E68FC4", VA = "0x1E68FC4", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1E692B4", Offset = "0x1E692B4", VA = "0x1E692B4", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1E69378", Offset = "0x1E69378", VA = "0x1E69378", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1E693F4", Offset = "0x1E693F4", VA = "0x1E693F4")]
		public ScrollConflictManager()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6EA0", Offset = "0xBD6EA0")]
	public class ScrollRectEx : ScrollRect
	{
		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF010", Offset = "0xBDF010")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E834")]
			public PointerEventData eventData;

			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x1E6B384", Offset = "0x1E6B384", VA = "0x1E6B384")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0x1E6BFCC", Offset = "0x1E6BFCC", VA = "0x1E6BFCC")]
			internal void <OnInitializePotentialDrag>b__0(IInitializePotentialDragHandler parent)
			{
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF04C", Offset = "0xBDF04C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PointerEventData eventData;

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0x1E6B54C", Offset = "0x1E6B54C", VA = "0x1E6B54C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002C31")]
			[Address(RVA = "0x1E6C07C", Offset = "0x1E6C07C", VA = "0x1E6C07C")]
			internal void <OnDrag>b__0(IDragHandler parent)
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF088", Offset = "0xBDF088")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PointerEventData eventData;

			[Token(Token = "0x6002C32")]
			[Address(RVA = "0x1E6B970", Offset = "0x1E6B970", VA = "0x1E6B970")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0x1E6C12C", Offset = "0x1E6C12C", VA = "0x1E6C12C")]
			internal void <OnBeginDrag>b__0(IBeginDragHandler parent)
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0C4", Offset = "0xBDF0C4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PointerEventData eventData;

			[Token(Token = "0x6002C34")]
			[Address(RVA = "0x1E6BB48", Offset = "0x1E6BB48", VA = "0x1E6BB48")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0x1E6C1DC", Offset = "0x1E6C1DC", VA = "0x1E6C1DC")]
			internal void <OnEndDrag>b__0(IEndDragHandler parent)
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF100", Offset = "0xBDF100")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3676")]
			public PointerEventData eventData;

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x1E6BF6C", Offset = "0x1E6BF6C", VA = "0x1E6BF6C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0x1E6C28C", Offset = "0x1E6C28C", VA = "0x1E6C28C")]
			internal void <OnScroll>b__0(IScrollHandler parent)
			{
			}
		}

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool routeToParent;

		[Token(Token = "0x6000BE5")]
		private void DoForParents<T>(Action<T> action) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1E6B210", Offset = "0x1E6B210", VA = "0x1E6B210", Slot = "43")]
		public override void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1E6B3B4", Offset = "0x1E6B3B4", VA = "0x1E6B3B4", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1E6B57C", Offset = "0x1E6B57C", VA = "0x1E6B57C", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1E6B9A0", Offset = "0x1E6B9A0", VA = "0x1E6B9A0", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1E6BB78", Offset = "0x1E6BB78", VA = "0x1E6BB78", Slot = "42")]
		public override void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1E6BF9C", Offset = "0x1E6BF9C", VA = "0x1E6BF9C")]
		public ScrollRectEx()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public static class ScrollRectExtensions
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1E6C33C", Offset = "0x1E6C33C", VA = "0x1E6C33C")]
		public static void ScrollToTop(this ScrollRect scrollRect)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1E6C420", Offset = "0x1E6C420", VA = "0x1E6C420")]
		public static void ScrollToBottom(this ScrollRect scrollRect)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6F40", Offset = "0xBD6F40")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6F40", Offset = "0xBD6F40")]
	public class ScrollRectLinker : MonoBehaviour
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool clamp;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E83C")]
		[SerializeField]
		private ScrollRect controllingScrollRect;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1E6C4F8", Offset = "0x1E6C4F8", VA = "0x1E6C4F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1E6C6D8", Offset = "0x1E6C6D8", VA = "0x1E6C6D8")]
		private void MirrorPos(Vector2 scrollPos)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1E6C9E8", Offset = "0x1E6C9E8", VA = "0x1E6C9E8")]
		public ScrollRectLinker()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7038", Offset = "0xBD7038")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7038", Offset = "0xBD7038")]
	public class ScrollRectTweener : MonoBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF13C", Offset = "0xBDF13C")]
		private sealed class <DoMove>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3686")]
			private object <>2__current;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float duration;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E84C")]
			public ScrollRectTweener <>4__this;

			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2 <posOffset>5__2;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <currentTime>5__3;

			[Token(Token = "0x170004B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C3B")]
				[Address(RVA = "0x1E6DFB4", Offset = "0x1E6DFB4", VA = "0x1E6DFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C3D")]
				[Address(RVA = "0x1E6E084", Offset = "0x1E6E084", VA = "0x1E6E084", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x1E6D69C", Offset = "0x1E6D69C", VA = "0x1E6D69C")]
			[DebuggerHidden]
			public <DoMove>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0x1E6DB64", Offset = "0x1E6DB64", VA = "0x1E6DB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x1E6DB78", Offset = "0x1E6DB78", VA = "0x1E6DB78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x1E6DFE4", Offset = "0x1E6DFE4", VA = "0x1E6DFE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollRect scrollRect;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 startPos;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x367E")]
		private Vector2 targetPos;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool wasHorizontal;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E844")]
		private bool wasVertical;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float moveSpeed;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool disableDragWhileTweening;

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1E6CA2C", Offset = "0x1E6CA2C", VA = "0x1E6CA2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1E6CB38", Offset = "0x1E6CB38", VA = "0x1E6CB38")]
		public void ScrollHorizontal(float normalizedX)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1E6CD90", Offset = "0x1E6CD90", VA = "0x1E6CD90")]
		public void ScrollHorizontal(float normalizedX, float duration)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1E6CF80", Offset = "0x1E6CF80", VA = "0x1E6CF80")]
		public void ScrollVertical(float normalizedY)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1E6D078", Offset = "0x1E6D078", VA = "0x1E6D078")]
		public void ScrollVertical(float normalizedY, float duration)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1E6CC30", Offset = "0x1E6CC30", VA = "0x1E6CC30")]
		public void Scroll(Vector2 normalizedPos)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1E6D180", Offset = "0x1E6D180", VA = "0x1E6D180")]
		private float GetScrollDuration(Vector2 normalizedPos)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1E6D3A4", Offset = "0x1E6D3A4", VA = "0x1E6D3A4")]
		private Vector2 DeNormalize(Vector2 normalizedPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1E6D2EC", Offset = "0x1E6D2EC", VA = "0x1E6D2EC")]
		private Vector2 GetCurrentPos()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1E6CE98", Offset = "0x1E6CE98", VA = "0x1E6CE98")]
		public void Scroll(Vector2 normalizedPos, float duration)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1E6D5B8", Offset = "0x1E6D5B8", VA = "0x1E6D5B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1AA28", Offset = "0xC1AA28")]
		private IEnumerator DoMove(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1E6D6E4", Offset = "0x1E6D6E4", VA = "0x1E6D6E4")]
		public Vector2 EaseVector(float currentTime, Vector2 startValue, Vector2 changeInValue, float duration)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1E6D9C0", Offset = "0x1E6D9C0", VA = "0x1E6D9C0", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1E6DA1C", Offset = "0x1E6DA1C", VA = "0x1E6DA1C")]
		private void StopScroll()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1E6D538", Offset = "0x1E6D538", VA = "0x1E6D538")]
		private void LockScrollability()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1E6DA7C", Offset = "0x1E6DA7C", VA = "0x1E6DA7C")]
		private void RestoreScrollability()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1E6DB1C", Offset = "0x1E6DB1C", VA = "0x1E6DB1C")]
		public ScrollRectTweener()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7130", Offset = "0xBD7130")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7130", Offset = "0xBD7130")]
	public class SelectableScaler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF178", Offset = "0xBDF178")]
		private sealed class <ScaleIN>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40028A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3696")]
			public SelectableScaler <>4__this;

			[Token(Token = "0x40028A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <t>5__2;

			[Token(Token = "0x40028A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E85C")]
			private float <maxT>5__3;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C41")]
				[Address(RVA = "0x236E818", Offset = "0x236E818", VA = "0x236E818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C43")]
				[Address(RVA = "0x236E8E8", Offset = "0x236E8E8", VA = "0x236E8E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x236E1EC", Offset = "0x236E1EC", VA = "0x236E1EC")]
			[DebuggerHidden]
			public <ScaleIN>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x236E37C", Offset = "0x236E37C", VA = "0x236E37C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x236E390", Offset = "0x236E390", VA = "0x236E390", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0x236E848", Offset = "0x236E848", VA = "0x236E848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1B4", Offset = "0xBDF1B4")]
		private sealed class <ScaleOUT>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40028A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectableScaler <>4__this;

			[Token(Token = "0x40028A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x369E")]
			private float <t>5__2;

			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <maxT>5__3;

			[Token(Token = "0x170004BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C47")]
				[Address(RVA = "0x236EDDC", Offset = "0x236EDDC", VA = "0x236EDDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C49")]
				[Address(RVA = "0x236EEAC", Offset = "0x236EEAC", VA = "0x236EEAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x236E2F0", Offset = "0x236E2F0", VA = "0x236E2F0")]
			[DebuggerHidden]
			public <ScaleOUT>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x236E918", Offset = "0x236E918", VA = "0x236E918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x236E92C", Offset = "0x236E92C", VA = "0x236E92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C48")]
			[Address(RVA = "0x236EE0C", Offset = "0x236EE0C", VA = "0x236EE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve animCurve;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF320", Offset = "0xBEF320")]
		public float speed;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 initScale;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E854")]
		public Transform target;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Selectable selectable;

		[Token(Token = "0x1700012F")]
		public Selectable Target
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x236DADC", Offset = "0x236DADC", VA = "0x236DADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x236DC30", Offset = "0x236DC30", VA = "0x236DC30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x236DD78", Offset = "0x236DD78", VA = "0x236DD78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x236DDE8", Offset = "0x236DDE8", VA = "0x236DDE8", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x236DF8C", Offset = "0x236DF8C", VA = "0x236DF8C", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x236E130", Offset = "0x236E130", VA = "0x236E130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1AAD8", Offset = "0xC1AAD8")]
		private IEnumerator ScaleIN()
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x236E234", Offset = "0x236E234", VA = "0x236E234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1AB88", Offset = "0xC1AB88")]
		private IEnumerator ScaleOUT()
		{
			return null;
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x236E338", Offset = "0x236E338", VA = "0x236E338")]
		public SelectableScaler()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x23721E4", Offset = "0x23721E4", VA = "0x23721E4")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C9")]
	public static class UIExtensionMethods
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x23898A0", Offset = "0x23898A0", VA = "0x23898A0")]
		public static Canvas GetParentCanvas(this RectTransform rt)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7264", Offset = "0xBD7264")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7264", Offset = "0xBD7264")]
	public class UIHighlightable : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Serializable]
		[Token(Token = "0x20005CF")]
		public class InteractableChangedEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x238DB00", Offset = "0x238DB00", VA = "0x238DB00")]
			public InteractableChangedEvent()
			{
			}
		}

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E864")]
		private Graphic m_Graphic;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Highlighted;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Pressed;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF384", Offset = "0xBEF384")]
		private bool m_Interactable;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A6")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF40C", Offset = "0xBEF40C")]
		private bool m_ClickToHold;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF494", Offset = "0xBEF494")]
		public Color NormalColor;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E86C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF4F8", Offset = "0xBEF4F8")]
		public Color HighlightedColor;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF55C", Offset = "0xBEF55C")]
		public Color PressedColor;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF5C0", Offset = "0xBEF5C0")]
		public Color DisabledColor;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF624", Offset = "0xBEF624")]
		public InteractableChangedEvent OnInteractableChanged;

		[Token(Token = "0x17000130")]
		public bool Interactable
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x238D354", Offset = "0x238D354", VA = "0x238D354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x238D398", Offset = "0x238D398", VA = "0x238D398")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public bool ClickToHold
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x238D5E8", Offset = "0x238D5E8", VA = "0x238D5E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x238D62C", Offset = "0x238D62C", VA = "0x238D62C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x238D678", Offset = "0x238D678", VA = "0x238D678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x238D704", Offset = "0x238D704", VA = "0x238D704", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x238D7CC", Offset = "0x238D7CC", VA = "0x238D7CC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x238D894", Offset = "0x238D894", VA = "0x238D894", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x238D978", Offset = "0x238D978", VA = "0x238D978", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x238D494", Offset = "0x238D494", VA = "0x238D494")]
		private void HighlightInteractable(Graphic graphic)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x238D9E4", Offset = "0x238D9E4", VA = "0x238D9E4")]
		public UIHighlightable()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7380", Offset = "0xBD7380")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7380", Offset = "0xBD7380")]
	[ExecuteInEditMode]
	public class UILineConnector : MonoBehaviour
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36AE")]
		public RectTransform[] transforms;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2[] previousPositions;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E874")]
		private RectTransform canvas;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform rt;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UILineRenderer lr;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x238E304", Offset = "0x238E304", VA = "0x238E304")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x238E41C", Offset = "0x238E41C", VA = "0x238E41C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x238EE88", Offset = "0x238EE88", VA = "0x238EE88")]
		public UILineConnector()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7494", Offset = "0xBD7494")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7494", Offset = "0xBD7494")]
	public class UIScrollToSelection : MonoBehaviour
	{
		[Token(Token = "0x20005D0")]
		public enum ScrollType
		{
			[Token(Token = "0x40028AA")]
			VERTICAL,
			[Token(Token = "0x40028AB")]
			HORIZONTAL,
			[Token(Token = "0x40028AC")]
			BOTH
		}

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEF688", Offset = "0xBEF688")]
		[SerializeField]
		private ScrollType scrollDirection;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B6")]
		[SerializeField]
		private float scrollSpeed;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEF744", Offset = "0xBEF744")]
		[SerializeField]
		private bool cancelScrollOnInput;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E87C")]
		[SerializeField]
		private List<KeyCode> cancelScrollKeycodes;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEF800", Offset = "0xBEF800")]
		private RectTransform <ScrollWindow>k__BackingField;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEF83C", Offset = "0xBEF83C")]
		private ScrollRect <TargetScrollRect>k__BackingField;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEF878", Offset = "0xBEF878")]
		private GameObject <LastCheckedGameObject>k__BackingField;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEF8B4", Offset = "0xBEF8B4")]
		private RectTransform <CurrentTargetRectTransform>k__BackingField;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEF8F0", Offset = "0xBEF8F0")]
		private bool <IsManualScrollingAvailable>k__BackingField;

		[Token(Token = "0x17000132")]
		protected RectTransform LayoutListGroup
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x2159CB4", Offset = "0x2159CB4", VA = "0x2159CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		protected ScrollType ScrollDirection
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x2159E1C", Offset = "0x2159E1C", VA = "0x2159E1C")]
			get
			{
				return default(ScrollType);
			}
		}

		[Token(Token = "0x17000134")]
		protected float ScrollSpeed
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x2159E4C", Offset = "0x2159E4C", VA = "0x2159E4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000135")]
		protected bool CancelScrollOnInput
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x2159E7C", Offset = "0x2159E7C", VA = "0x2159E7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		protected List<KeyCode> CancelScrollKeycodes
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x2159EC0", Offset = "0x2159EC0", VA = "0x2159EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		protected RectTransform ScrollWindow
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x2159EF0", Offset = "0x2159EF0", VA = "0x2159EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AC74", Offset = "0xC1AC74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x2159F20", Offset = "0x2159F20", VA = "0x2159F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1ACB0", Offset = "0xC1ACB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		protected ScrollRect TargetScrollRect
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x2159F58", Offset = "0x2159F58", VA = "0x2159F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1ACEC", Offset = "0xC1ACEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x2159F88", Offset = "0x2159F88", VA = "0x2159F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AD28", Offset = "0xC1AD28")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		protected EventSystem CurrentEventSystem
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x2159FC0", Offset = "0x2159FC0", VA = "0x2159FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		protected GameObject LastCheckedGameObject
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x215A0AC", Offset = "0x215A0AC", VA = "0x215A0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AD64", Offset = "0xC1AD64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x215A0DC", Offset = "0x215A0DC", VA = "0x215A0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1ADA0", Offset = "0xC1ADA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		protected GameObject CurrentSelectedGameObject
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x215A114", Offset = "0x215A114", VA = "0x215A114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		protected RectTransform CurrentTargetRectTransform
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x215A218", Offset = "0x215A218", VA = "0x215A218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1ADDC", Offset = "0xC1ADDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x215A248", Offset = "0x215A248", VA = "0x215A248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AE18", Offset = "0xC1AE18")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		protected bool IsManualScrollingAvailable
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x215A280", Offset = "0x215A280", VA = "0x215A280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AE54", Offset = "0xC1AE54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x215A2C4", Offset = "0x215A2C4", VA = "0x215A2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AE90", Offset = "0xC1AE90")]
			set
			{
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x215A310", Offset = "0x215A310", VA = "0x215A310", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x215A3F0", Offset = "0x215A3F0", VA = "0x215A3F0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x215A404", Offset = "0x215A404", VA = "0x215A404", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x215A450", Offset = "0x215A450", VA = "0x215A450")]
		private void UpdateReferences()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x215A894", Offset = "0x215A894", VA = "0x215A894")]
		private void CheckIfScrollingShouldBeLocked()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x215AA48", Offset = "0x215AA48", VA = "0x215AA48")]
		private void ScrollRectToLevelSelection()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x215AF98", Offset = "0x215AF98", VA = "0x215AF98")]
		private void UpdateVerticalScrollPosition(RectTransform selection)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x215B358", Offset = "0x215B358", VA = "0x215B358")]
		private void UpdateHorizontalScrollPosition(RectTransform selection)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x215B720", Offset = "0x215B720", VA = "0x215B720")]
		private float GetScrollOffset(float position, float listAnchorPosition, float targetLength, float maskLength)
		{
			return default(float);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x215B8C4", Offset = "0x215B8C4", VA = "0x215B8C4")]
		public UIScrollToSelection()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD758C", Offset = "0xBD758C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD758C", Offset = "0xBD758C")]
	public class UIScrollToSelectionXY : MonoBehaviour
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C5")]
		public float scrollSpeed;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private RectTransform layoutListGroup;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E884")]
		private RectTransform targetScrollObject;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool scrollToSelection;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform scrollWindow;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform currentCanvas;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36CD")]
		private ScrollRect targetScrollRect;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x215B98C", Offset = "0x215B98C", VA = "0x215B98C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x215BA58", Offset = "0x215BA58", VA = "0x215BA58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x215BA88", Offset = "0x215BA88", VA = "0x215BA88")]
		private void ScrollRectToLevelSelection()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x215C50C", Offset = "0x215C50C", VA = "0x215C50C")]
		public UIScrollToSelectionXY()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7684", Offset = "0xBD7684")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7684", Offset = "0xBD7684")]
	public class UISelectableExtension : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Serializable]
		[Token(Token = "0x20005D1")]
		public class UIButtonEvent : UnityEvent<PointerEventData.InputButton>
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x215C94C", Offset = "0x215C94C", VA = "0x215C94C")]
			public UIButtonEvent()
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF968", Offset = "0xBEF968")]
		public UIButtonEvent OnButtonPress;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E88C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEF9CC", Offset = "0xBEF9CC")]
		public UIButtonEvent OnButtonRelease;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFA30", Offset = "0xBEFA30")]
		public UIButtonEvent OnButtonHeld;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _pressed;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PointerEventData _heldEventData;

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x215C568", Offset = "0x215C568", VA = "0x215C568", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x215C678", Offset = "0x215C678", VA = "0x215C678", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x215C788", Offset = "0x215C788", VA = "0x215C788")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x215C89C", Offset = "0x215C89C", VA = "0x215C89C")]
		public void TestClicked()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x215C8B0", Offset = "0x215C8B0", VA = "0x215C8B0")]
		public void TestPressed()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x215C8C4", Offset = "0x215C8C4", VA = "0x215C8C4")]
		public void TestReleased()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x215C8D8", Offset = "0x215C8D8", VA = "0x215C8D8")]
		public void TestHold()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x215C8EC", Offset = "0x215C8EC", VA = "0x215C8EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x215C91C", Offset = "0x215C91C", VA = "0x215C91C")]
		public UISelectableExtension()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD777C", Offset = "0xBD777C")]
	public class UI_InfiniteScroll : MonoBehaviour
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36D5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFA94", Offset = "0xBEFA94")]
		public bool InitByUser;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E894")]
		private ContentSizeFitter _contentSizeFitter;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VerticalLayoutGroup _verticalLayoutGroup;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HorizontalLayoutGroup _horizontalLayoutGroup;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GridLayoutGroup _gridLayoutGroup;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36DD")]
		private bool _isVertical;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _isHorizontal;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E89C")]
		private float _disableMarginX;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _disableMarginY;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasDisabledGridComponents;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RectTransform> items;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36E5")]
		private Vector2 _newAnchoredPosition;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _treshold;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8A4")]
		private int _itemCount;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _recordOffsetX;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _recordOffsetY;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x21603E4", Offset = "0x21603E4", VA = "0x21603E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x216043C", Offset = "0x216043C", VA = "0x216043C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x2160F8C", Offset = "0x2160F8C", VA = "0x2160F8C")]
		private void DisableGridComponents()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x216157C", Offset = "0x216157C", VA = "0x216157C")]
		public void OnScroll(Vector2 pos)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x21625B4", Offset = "0x21625B4", VA = "0x21625B4")]
		public UI_InfiniteScroll()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD77E0", Offset = "0xBD77E0")]
	public class UI_ScrollRectOcclusion : MonoBehaviour
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool InitByUser;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36ED")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ContentSizeFitter _contentSizeFitter;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8AC")]
		private VerticalLayoutGroup _verticalLayoutGroup;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HorizontalLayoutGroup _horizontalLayoutGroup;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GridLayoutGroup _gridLayoutGroup;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isVertical;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36F5")]
		private bool _isHorizontal;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _disableMarginX;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8B4")]
		private float _disableMarginY;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasDisabledGridComponents;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RectTransform> items;

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x2163C30", Offset = "0x2163C30", VA = "0x2163C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x2163C88", Offset = "0x2163C88", VA = "0x2163C88")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x216455C", Offset = "0x216455C", VA = "0x216455C")]
		private void DisableGridComponents()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x2164A9C", Offset = "0x2164A9C", VA = "0x2164A9C")]
		public void OnScroll(Vector2 pos)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x2165888", Offset = "0x2165888", VA = "0x2165888")]
		public UI_ScrollRectOcclusion()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7844", Offset = "0xBD7844")]
	public class UI_TweenScale : MonoBehaviour
	{
		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1F0", Offset = "0xBDF1F0")]
		private sealed class <Tween>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8C4")]
			private int <>1__state;

			[Token(Token = "0x40028AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UI_TweenScale <>4__this;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <t>5__2;

			[Token(Token = "0x40028B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x370D")]
			private float <maxT>5__3;

			[Token(Token = "0x170004BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C4F")]
				[Address(RVA = "0x2166490", Offset = "0x2166490", VA = "0x2166490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C51")]
				[Address(RVA = "0x2166560", Offset = "0x2166560", VA = "0x2166560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0x2165B78", Offset = "0x2165B78", VA = "0x2165B78")]
			[DebuggerHidden]
			public <Tween>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x2165D7C", Offset = "0x2165D7C", VA = "0x2165D7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0x2165D90", Offset = "0x2165D90", VA = "0x2165D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x21664C0", Offset = "0x21664C0", VA = "0x21664C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve animCurve;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36FD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFAF8", Offset = "0xBEFAF8")]
		public float speed;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFB5C", Offset = "0xBEFB5C")]
		public bool isLoop;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFBC0", Offset = "0xBEFBC0")]
		public bool playAtAwake;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBEFC24", Offset = "0xBEFC24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBEFC24", Offset = "0xBEFC24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBEFC24", Offset = "0xBEFC24")]
		public bool isUniform;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve animCurveY;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 initScale;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3705")]
		private Transform myTransform;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 newScale;

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x2165940", Offset = "0x2165940", VA = "0x2165940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x2165A34", Offset = "0x2165A34", VA = "0x2165A34")]
		public void Play()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x2165ABC", Offset = "0x2165ABC", VA = "0x2165ABC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1AECC", Offset = "0xC1AECC")]
		private IEnumerator Tween()
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x2165BC0", Offset = "0x2165BC0", VA = "0x2165BC0")]
		public void ResetTween()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x2165C80", Offset = "0x2165C80", VA = "0x2165C80")]
		public UI_TweenScale()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public static class RectTransformExtension
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1E61820", Offset = "0x1E61820", VA = "0x1E61820")]
		public static Vector2 switchToRectTransform(this RectTransform from, RectTransform to)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD78E4", Offset = "0xBD78E4")]
	public class VRCursor : MonoBehaviour
	{
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float xSens;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8CC")]
		public float ySens;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Collider currentCollider;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x2166590", Offset = "0x2166590", VA = "0x2166590")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x2166B20", Offset = "0x2166B20", VA = "0x2166B20")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x2166EB8", Offset = "0x2166EB8", VA = "0x2166EB8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x2167150", Offset = "0x2167150", VA = "0x2167150")]
		public VRCursor()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7948", Offset = "0xBD7948")]
	public class VRInputModule : BaseInputModule
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject targetObject;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRInputModule _singleton;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3715")]
		private int counter;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static bool mouseClicked;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C87C")]
		public static Vector3 cursorPosition;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x2167180", Offset = "0x2167180", VA = "0x2167180", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x2167200", Offset = "0x2167200", VA = "0x2167200", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x2166864", Offset = "0x2166864", VA = "0x2166864")]
		public static void PointerSubmit(GameObject obj)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x2166F24", Offset = "0x2166F24", VA = "0x2166F24")]
		public static void PointerExit(GameObject obj)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x2166B8C", Offset = "0x2166B8C", VA = "0x2166B8C")]
		public static void PointerEnter(GameObject obj)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x2167350", Offset = "0x2167350", VA = "0x2167350")]
		public VRInputModule()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions.ColorPicker
{
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD79AC", Offset = "0xBD79AC")]
	public class ColorImage : MonoBehaviour
	{
		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerControl picker;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image image;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x20D5DC8", Offset = "0x20D5DC8", VA = "0x20D5DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x20D5EEC", Offset = "0x20D5EEC", VA = "0x20D5EEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x20D5FE4", Offset = "0x20D5FE4", VA = "0x20D5FE4")]
		private void ColorChanged(Color newColor)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x20D6138", Offset = "0x20D6138", VA = "0x20D6138")]
		public ColorImage()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7A5C", Offset = "0xBD7A5C")]
	public class ColorLabel : MonoBehaviour
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerControl picker;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x371C")]
		public ColorValues type;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string prefix;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8D4")]
		public float minValue;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxValue;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int precision;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text label;

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x20D6168", Offset = "0x20D6168", VA = "0x20D6168")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x20D61F4", Offset = "0x20D61F4", VA = "0x20D61F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x20D645C", Offset = "0x20D645C", VA = "0x20D645C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x20D66A4", Offset = "0x20D66A4", VA = "0x20D66A4")]
		private void ColorChanged(Color color)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x20D69CC", Offset = "0x20D69CC", VA = "0x20D69CC")]
		private void HSVChanged(float hue, float sateration, float value)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x20D6734", Offset = "0x20D6734", VA = "0x20D6734")]
		private void UpdateValue()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x20D6C60", Offset = "0x20D6C60", VA = "0x20D6C60")]
		private string ConvertToDisplayString(float value)
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x20D6E48", Offset = "0x20D6E48", VA = "0x20D6E48")]
		public ColorLabel()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class ColorPickerControl : MonoBehaviour
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3724")]
		private float _hue;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _saturation;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8DC")]
		private float _brightness;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _red;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _green;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _blue;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x372C")]
		private float _alpha;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ColorChangedEvent onValueChanged;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8E4")]
		public HSVChangedEvent onHSVChanged;

		[Token(Token = "0x1700013E")]
		public Color CurrentColor
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x20D6EF0", Offset = "0x20D6EF0", VA = "0x20D6EF0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x20D6FA0", Offset = "0x20D6FA0", VA = "0x20D6FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public float H
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x20D734C", Offset = "0x20D734C", VA = "0x20D734C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x20D737C", Offset = "0x20D737C", VA = "0x20D737C")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public float S
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x20D7538", Offset = "0x20D7538", VA = "0x20D7538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x20D7568", Offset = "0x20D7568", VA = "0x20D7568")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float V
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x20D75F8", Offset = "0x20D75F8", VA = "0x20D75F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x20D7628", Offset = "0x20D7628", VA = "0x20D7628")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float R
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x20D76B8", Offset = "0x20D76B8", VA = "0x20D76B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x20D76E8", Offset = "0x20D76E8", VA = "0x20D76E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public float G
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x20D7778", Offset = "0x20D7778", VA = "0x20D7778")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x20D77A8", Offset = "0x20D77A8", VA = "0x20D77A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float B
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x20D7838", Offset = "0x20D7838", VA = "0x20D7838")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x20D7868", Offset = "0x20D7868", VA = "0x20D7868")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		private float A
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x20D78F8", Offset = "0x20D78F8", VA = "0x20D78F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x20D7928", Offset = "0x20D7928", VA = "0x20D7928")]
			set
			{
			}
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x20D731C", Offset = "0x20D731C", VA = "0x20D731C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x20D712C", Offset = "0x20D712C", VA = "0x20D712C")]
		private void RGBChanged()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x20D740C", Offset = "0x20D740C", VA = "0x20D740C")]
		private void HSVChanged()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x20D7214", Offset = "0x20D7214", VA = "0x20D7214")]
		private void SendChangedEvent()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x20D80F8", Offset = "0x20D80F8", VA = "0x20D80F8")]
		public void AssignColor(ColorValues type, float value)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x20D6A08", Offset = "0x20D6A08", VA = "0x20D6A08")]
		public float GetValue(ColorValues type)
		{
			return default(float);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x20D82B4", Offset = "0x20D82B4", VA = "0x20D82B4")]
		public ColorPickerControl()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class ColorPickerPresets : MonoBehaviour
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerControl picker;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject[] presets;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image createPresetImage;

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x20D83A0", Offset = "0x20D83A0", VA = "0x20D83A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x20D8498", Offset = "0x20D8498", VA = "0x20D8498")]
		public void CreatePresetButton()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x20D86B8", Offset = "0x20D86B8", VA = "0x20D86B8")]
		public void PresetSelect(Image sender)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x20D8740", Offset = "0x20D8740", VA = "0x20D8740")]
		private void ColorChanged(Color color)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x20D8894", Offset = "0x20D8894", VA = "0x20D8894")]
		public ColorPickerPresets()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class ColorPickerTester : MonoBehaviour
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3734")]
		public Renderer pickerRenderer;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ColorPickerControl picker;

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x20D88C4", Offset = "0x20D88C4", VA = "0x20D88C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x20D8950", Offset = "0x20D8950", VA = "0x20D8950")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x20D8A48", Offset = "0x20D8A48", VA = "0x20D8A48")]
		public ColorPickerTester()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x20D8A78", Offset = "0x20D8A78", VA = "0x20D8A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1AFB8", Offset = "0xC1AFB8")]
		private void <Start>b__3_0(Color color)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7B0C", Offset = "0xBD7B0C")]
	public class ColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8EC")]
		public ColorPickerControl ColorPicker;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorValues type;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Slider slider;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool listen;

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x20D8BE4", Offset = "0x20D8BE4", VA = "0x20D8BE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x20D8E4C", Offset = "0x20D8E4C", VA = "0x20D8E4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x20D9080", Offset = "0x20D9080", VA = "0x20D9080")]
		private void ColorChanged(Color newColor)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x20D9338", Offset = "0x20D9338", VA = "0x20D9338")]
		private void HSVChanged(float hue, float saturation, float value)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x20D948C", Offset = "0x20D948C", VA = "0x20D948C")]
		private void SliderChanged(float newValue)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x20D9550", Offset = "0x20D9550", VA = "0x20D9550")]
		public ColorSlider()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7BBC", Offset = "0xBD7BBC")]
	[ExecuteInEditMode]
	public class ColorSliderImage : MonoBehaviour
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x373C")]
		public ColorPickerControl picker;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ColorValues type;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8F4")]
		public Slider.Direction direction;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RawImage image;

		[Token(Token = "0x17000146")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x20D9594", Offset = "0x20D9594", VA = "0x20D9594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x20D9628", Offset = "0x20D9628", VA = "0x20D9628")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x20DAE30", Offset = "0x20DAE30", VA = "0x20DAE30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x20DB098", Offset = "0x20DB098", VA = "0x20DB098")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x20DB2E0", Offset = "0x20DB2E0", VA = "0x20DB2E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x20DB4A8", Offset = "0x20DB4A8", VA = "0x20DB4A8")]
		private void ColorChanged(Color newColor)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x20DB620", Offset = "0x20DB620", VA = "0x20DB620")]
		private void ColorChanged(float hue, float saturation, float value)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x20D9838", Offset = "0x20D9838", VA = "0x20D9838")]
		private void RegenerateTexture()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x20DB744", Offset = "0x20DB744", VA = "0x20DB744")]
		public ColorSliderImage()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public enum ColorValues
	{
		[Token(Token = "0x4000C49")]
		R,
		[Token(Token = "0x4000C4A")]
		G,
		[Token(Token = "0x4000C4B")]
		B,
		[Token(Token = "0x4000C4C")]
		A,
		[Token(Token = "0x4000C4D")]
		Hue,
		[Token(Token = "0x4000C4E")]
		Saturation,
		[Token(Token = "0x4000C4F")]
		Value
	}
	[Token(Token = "0x20001DD")]
	public static class HSVUtil
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x20D79AC", Offset = "0x20D79AC", VA = "0x20D79AC")]
		public static HsvColor ConvertRgbToHsv(Color color)
		{
			return default(HsvColor);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x20DB774", Offset = "0x20DB774", VA = "0x20DB774")]
		public static HsvColor ConvertRgbToHsv(double r, double b, double g)
		{
			return default(HsvColor);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x20D7BF4", Offset = "0x20D7BF4", VA = "0x20D7BF4")]
		public static Color ConvertHsvToRgb(double h, double s, double v, float alpha)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20001DE")]
	public struct HsvColor
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x373C")]
		public double H;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public double S;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E8F4")]
		public double V;

		[Token(Token = "0x17000147")]
		public float NormalizedH
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x20D7B44", Offset = "0x20D7B44", VA = "0x20D7B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x20DD538", Offset = "0x20DD538", VA = "0x20DD538")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float NormalizedS
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x20D7B8C", Offset = "0x20D7B8C", VA = "0x20D7B8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x20DD58C", Offset = "0x20DD58C", VA = "0x20DD58C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float NormalizedV
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x20D7BC0", Offset = "0x20D7BC0", VA = "0x20D7BC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x20DD5C8", Offset = "0x20DD5C8", VA = "0x20DD5C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x20DD604", Offset = "0x20DD604", VA = "0x20DD604")]
		public HsvColor(double h, double s, double v)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x20DD66C", Offset = "0x20DD66C", VA = "0x20DD66C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7C88", Offset = "0xBD7C88")]
	public class HexColorField : MonoBehaviour
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerControl ColorPicker;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool displayAlpha;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InputField hexInputField;

		[Token(Token = "0x4000C56")]
		private const string hexRegex = "^#?(?:[0-9a-fA-F]{3,4}){1,2}$";

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x20DBC70", Offset = "0x20DBC70", VA = "0x20DBC70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x20DBE38", Offset = "0x20DBE38", VA = "0x20DBE38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x20DBFD4", Offset = "0x20DBFD4", VA = "0x20DBFD4")]
		private void UpdateHex(Color newColor)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x20DC5B0", Offset = "0x20DC5B0", VA = "0x20DC5B0")]
		private void UpdateColor(string newHex)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x20DC188", Offset = "0x20DC188", VA = "0x20DC188")]
		private string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x20DC71C", Offset = "0x20DC71C", VA = "0x20DC71C")]
		public static bool HexToColor(string hex, out Color32 color)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x20DD508", Offset = "0x20DD508", VA = "0x20DD508")]
		public HexColorField()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7D38", Offset = "0xBD7D38")]
	[ExecuteInEditMode]
	public class SVBoxSlider : MonoBehaviour
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ColorPickerControl picker;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E90C")]
		private BoxSlider slider;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RawImage image;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastH;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool listen;

		[Token(Token = "0x1700014A")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x20DD93C", Offset = "0x20DD93C", VA = "0x20DD93C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x20DD9D0", Offset = "0x20DD9D0", VA = "0x20DD9D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x20DDF84", Offset = "0x20DDF84", VA = "0x20DDF84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x20DE1F0", Offset = "0x20DE1F0", VA = "0x20DE1F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x20DE43C", Offset = "0x20DE43C", VA = "0x20DE43C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x20DE604", Offset = "0x20DE604", VA = "0x20DE604")]
		private void SliderChanged(float saturation, float value)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x20DE6D4", Offset = "0x20DE6D4", VA = "0x20DE6D4")]
		private void HSVChanged(float h, float s, float v)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x20DDA9C", Offset = "0x20DDA9C", VA = "0x20DDA9C")]
		private void RegenerateSVTexture()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x20DE878", Offset = "0x20DE878", VA = "0x20DE878")]
		public SVBoxSlider()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions.Tweens
{
	[Token(Token = "0x20001E1")]
	public struct FloatTween : ITweenValue
	{
		[Token(Token = "0x20005D3")]
		public class FloatTweenCallback : UnityEvent<float>
		{
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0x2384A64", Offset = "0x2384A64", VA = "0x2384A64")]
			public FloatTweenCallback()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		public class FloatFinishCallback : UnityEvent
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x2384BDC", Offset = "0x2384BDC", VA = "0x2384BDC")]
			public FloatFinishCallback()
			{
			}
		}

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374C")]
		private float m_StartFloat;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		private float m_TargetFloat;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E904")]
		private float m_Duration;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_IgnoreTimeScale;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FloatTweenCallback m_Target;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FloatFinishCallback m_Finish;

		[Token(Token = "0x1700014B")]
		public float startFloat
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x2384590", Offset = "0x2384590", VA = "0x2384590")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x23845C0", Offset = "0x23845C0", VA = "0x23845C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public float targetFloat
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x23845F8", Offset = "0x23845F8", VA = "0x23845F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x2384628", Offset = "0x2384628", VA = "0x2384628")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public float duration
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x2384660", Offset = "0x2384660", VA = "0x2384660", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x2384690", Offset = "0x2384690", VA = "0x2384690")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool ignoreTimeScale
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x23846C8", Offset = "0x23846C8", VA = "0x23846C8", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x238470C", Offset = "0x238470C", VA = "0x238470C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x2384758", Offset = "0x2384758", VA = "0x2384758", Slot = "4")]
		public void TweenValue(float floatPercentage)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x2384958", Offset = "0x2384958", VA = "0x2384958")]
		public void AddOnChangedCallback(UnityAction<float> callback)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x2384AE0", Offset = "0x2384AE0", VA = "0x2384AE0")]
		public void AddOnFinishCallback(UnityAction callback)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x2384C0C", Offset = "0x2384C0C", VA = "0x2384C0C")]
		public bool GetIgnoreTimescale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x2384C50", Offset = "0x2384C50", VA = "0x2384C50")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x23848D0", Offset = "0x23848D0", VA = "0x23848D0", Slot = "7")]
		public bool ValidTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x2384C80", Offset = "0x2384C80", VA = "0x2384C80", Slot = "8")]
		public void Finished()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	internal interface ITweenValue
	{
		[Token(Token = "0x1700014F")]
		bool ignoreTimeScale
		{
			[Token(Token = "0x6000CC4")]
			get;
		}

		[Token(Token = "0x17000150")]
		float duration
		{
			[Token(Token = "0x6000CC5")]
			get;
		}

		[Token(Token = "0x6000CC3")]
		void TweenValue(float floatPercentage);

		[Token(Token = "0x6000CC6")]
		bool ValidTarget();

		[Token(Token = "0x6000CC7")]
		void Finished();
	}
	[Token(Token = "0x20001E3")]
	internal class TweenRunner<T> where T : struct, ITweenValue
	{
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF22C", Offset = "0xBDF22C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40028B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T tweenInfo;

			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170004BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C57")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C59")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C54")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002C55")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C56")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C58")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MonoBehaviour m_CoroutineContainer;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IEnumerator m_Tween;

		[Token(Token = "0x6000CC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1AFF4", Offset = "0xC1AFF4")]
		private static IEnumerator Start(T tweenInfo)
		{
			return null;
		}

		[Token(Token = "0x6000CC9")]
		public void Init(MonoBehaviour coroutineContainer)
		{
		}

		[Token(Token = "0x6000CCA")]
		public void StartTween(T info)
		{
		}

		[Token(Token = "0x6000CCB")]
		public TweenRunner()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions.Examples
{
	[Token(Token = "0x20001E4")]
	public class ComboBoxChanged : MonoBehaviour
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1E427B0", Offset = "0x1E427B0", VA = "0x1E427B0")]
		public void ComboBoxChangedEvent(string text)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1E428DC", Offset = "0x1E428DC", VA = "0x1E428DC")]
		public void AutoCompleteComboBoxChangedEvent(string text)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1E42A08", Offset = "0x1E42A08", VA = "0x1E42A08")]
		public void AutoCompleteComboBoxSelectionChangedEvent(string text, bool valid)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1E42C98", Offset = "0x1E42C98", VA = "0x1E42C98")]
		public void DropDownChangedEvent(int newValue)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1E42DEC", Offset = "0x1E42DEC", VA = "0x1E42DEC")]
		public ComboBoxChanged()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7E28", Offset = "0xBD7E28")]
	public class CooldownEffect_Image : MonoBehaviour
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3764")]
		public CooldownButton cooldown;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text displayText;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E91C")]
		private Image target;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string originalText;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1E42E1C", Offset = "0x1E42E1C", VA = "0x1E42E1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1E42FF0", Offset = "0x1E42FF0", VA = "0x1E42FF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1E432B4", Offset = "0x1E432B4", VA = "0x1E432B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1E433FC", Offset = "0x1E433FC", VA = "0x1E433FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1E43544", Offset = "0x1E43544", VA = "0x1E43544")]
		public CooldownEffect_Image()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7ED8", Offset = "0xBD7ED8")]
	public class CooldownEffect_SAUIM : MonoBehaviour
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CooldownButton cooldown;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SoftMaskScript sauim;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1E43574", Offset = "0x1E43574", VA = "0x1E43574")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1E43748", Offset = "0x1E43748", VA = "0x1E43748")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1E438BC", Offset = "0x1E438BC", VA = "0x1E438BC")]
		public CooldownEffect_SAUIM()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class Example01CellDto
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x376C")]
		public string Message;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1E438EC", Offset = "0x1E438EC", VA = "0x1E438EC")]
		public Example01CellDto()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class Example01Scene : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF268", Offset = "0xBDF268")]
		private sealed class <>c
		{
			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C884")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<int, Example01CellDto> <>9__1_0;

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x1E43DB8", Offset = "0x1E43DB8", VA = "0x1E43DB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x1E43DE8", Offset = "0x1E43DE8", VA = "0x1E43DE8")]
			internal Example01CellDto <Start>b__1_0(int i)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Example01ScrollView scrollView;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1E4391C", Offset = "0x1E4391C", VA = "0x1E4391C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1E43CE8", Offset = "0x1E43CE8", VA = "0x1E43CE8")]
		public Example01Scene()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class Example01ScrollView : FancyScrollView<Example01CellDto>
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ScrollPositionController scrollPositionController;

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1E43EF8", Offset = "0x1E43EF8", VA = "0x1E43EF8")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1E43BF4", Offset = "0x1E43BF4", VA = "0x1E43BF4")]
		public void UpdateData(List<Example01CellDto> data)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1E4400C", Offset = "0x1E4400C", VA = "0x1E4400C")]
		public Example01ScrollView()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class Example01ScrollViewCell : FancyScrollViewCell<Example01CellDto>
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3773")]
		[SerializeField]
		private Text message;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly int scrollTriggerHash;

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1E44088", Offset = "0x1E44088", VA = "0x1E44088")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1E44264", Offset = "0x1E44264", VA = "0x1E44264", Slot = "5")]
		public override void UpdateContent(Example01CellDto itemData)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1E442D0", Offset = "0x1E442D0", VA = "0x1E442D0", Slot = "6")]
		public override void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1E44370", Offset = "0x1E44370", VA = "0x1E44370")]
		public Example01ScrollViewCell()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Example02CellDto
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E924")]
		public string Message;

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1E44420", Offset = "0x1E44420", VA = "0x1E44420")]
		public Example02CellDto()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class Example02Scene : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2A4", Offset = "0xBDF2A4")]
		private sealed class <>c
		{
			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<int, Example02CellDto> <>9__1_0;

			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x1E448EC", Offset = "0x1E448EC", VA = "0x1E448EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x1E4491C", Offset = "0x1E4491C", VA = "0x1E4491C")]
			internal Example02CellDto <Start>b__1_0(int i)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Example02ScrollView scrollView;

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1E44450", Offset = "0x1E44450", VA = "0x1E44450")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1E4481C", Offset = "0x1E4481C", VA = "0x1E4481C")]
		public Example02Scene()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class Example02ScrollView : FancyScrollView<Example02CellDto, Example02ScrollViewContext>
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x377B")]
		[SerializeField]
		private ScrollPositionController scrollPositionController;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1E44A2C", Offset = "0x1E44A2C", VA = "0x1E44A2C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1E44728", Offset = "0x1E44728", VA = "0x1E44728")]
		public void UpdateData(List<Example02CellDto> data)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1E44CD4", Offset = "0x1E44CD4", VA = "0x1E44CD4")]
		private void OnPressedCell(Example02ScrollViewCell cell)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1E44F44", Offset = "0x1E44F44", VA = "0x1E44F44")]
		private void CellSelected(int cellIndex)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1E44FEC", Offset = "0x1E44FEC", VA = "0x1E44FEC")]
		public Example02ScrollView()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class Example02ScrollViewCell : FancyScrollViewCell<Example02CellDto, Example02ScrollViewContext>
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E92C")]
		[SerializeField]
		private Text message;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int scrollTriggerHash;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3783")]
		private Example02ScrollViewContext context;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1E45068", Offset = "0x1E45068", VA = "0x1E45068")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1E452B0", Offset = "0x1E452B0", VA = "0x1E452B0", Slot = "4")]
		public override void SetContext(Example02ScrollViewContext context)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1E452E8", Offset = "0x1E452E8", VA = "0x1E452E8", Slot = "5")]
		public override void UpdateContent(Example02CellDto itemData)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1E4551C", Offset = "0x1E4551C", VA = "0x1E4551C", Slot = "6")]
		public override void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1E455BC", Offset = "0x1E455BC", VA = "0x1E455BC")]
		public void OnPressedCell()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1E45690", Offset = "0x1E45690", VA = "0x1E45690")]
		public Example02ScrollViewCell()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class Example02ScrollViewContext
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Action<Example02ScrollViewCell> OnPressedCell;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E934")]
		public int SelectedIndex;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1E44CA4", Offset = "0x1E44CA4", VA = "0x1E44CA4")]
		public Example02ScrollViewContext()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class Example03CellDto
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Message;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1E45740", Offset = "0x1E45740", VA = "0x1E45740")]
		public Example03CellDto()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class Example03Scene : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2E0", Offset = "0xBDF2E0")]
		private sealed class <>c
		{
			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x378B")]
			public static Func<int, Example03CellDto> <>9__1_0;

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0x1E45C0C", Offset = "0x1E45C0C", VA = "0x1E45C0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C62")]
			[Address(RVA = "0x1E45C3C", Offset = "0x1E45C3C", VA = "0x1E45C3C")]
			internal Example03CellDto <Start>b__1_0(int i)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Example03ScrollView scrollView;

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1E45770", Offset = "0x1E45770", VA = "0x1E45770")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1E45B3C", Offset = "0x1E45B3C", VA = "0x1E45B3C")]
		public Example03Scene()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class Example03ScrollView : FancyScrollView<Example03CellDto, Example03ScrollViewContext>
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ScrollPositionController scrollPositionController;

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1E45D4C", Offset = "0x1E45D4C", VA = "0x1E45D4C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1E45A48", Offset = "0x1E45A48", VA = "0x1E45A48")]
		public void UpdateData(List<Example03CellDto> data)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1E45FF4", Offset = "0x1E45FF4", VA = "0x1E45FF4")]
		private void OnPressedCell(Example03ScrollViewCell cell)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1E46128", Offset = "0x1E46128", VA = "0x1E46128")]
		private void CellSelected(int cellIndex)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1E461D0", Offset = "0x1E461D0", VA = "0x1E461D0")]
		public Example03ScrollView()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class Example03ScrollViewCell : FancyScrollViewCell<Example03CellDto, Example03ScrollViewContext>
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E93C")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text message;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3793")]
		private readonly int scrollTriggerHash;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Example03ScrollViewContext context;

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1E4624C", Offset = "0x1E4624C", VA = "0x1E4624C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1E46494", Offset = "0x1E46494", VA = "0x1E46494", Slot = "4")]
		public override void SetContext(Example03ScrollViewContext context)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1E464CC", Offset = "0x1E464CC", VA = "0x1E464CC", Slot = "5")]
		public override void UpdateContent(Example03CellDto itemData)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1E46700", Offset = "0x1E46700", VA = "0x1E46700", Slot = "6")]
		public override void UpdatePosition(float position)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1E467A0", Offset = "0x1E467A0", VA = "0x1E467A0")]
		public void OnPressedCell()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1E46874", Offset = "0x1E46874", VA = "0x1E46874")]
		public Example03ScrollViewCell()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class Example03ScrollViewContext
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E944")]
		public Action<Example03ScrollViewCell> OnPressedCell;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SelectedIndex;

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1E45FC4", Offset = "0x1E45FC4", VA = "0x1E45FC4")]
		public Example03ScrollViewContext()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class PaginationScript : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HorizontalScrollSnap hss;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Page;

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1E474FC", Offset = "0x1E474FC", VA = "0x1E474FC", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1E47648", Offset = "0x1E47648", VA = "0x1E47648")]
		public PaginationScript()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class UpdateScrollSnap : MonoBehaviour
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x379B")]
		public HorizontalScrollSnap HSS;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public VerticalScrollSnap VSS;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E94C")]
		public GameObject HorizontalPagePrefab;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject VerticalPagePrefab;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputField JumpPage;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1E49C20", Offset = "0x1E49C20", VA = "0x1E49C20")]
		public void AddButton()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1E49FA4", Offset = "0x1E49FA4", VA = "0x1E49FA4")]
		public void RemoveButton()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1E4A2B4", Offset = "0x1E4A2B4", VA = "0x1E4A2B4")]
		public void JumpToPage()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1E4A4F0", Offset = "0x1E4A4F0", VA = "0x1E4A4F0")]
		public void SelectionStartChange()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1E4A5E8", Offset = "0x1E4A5E8", VA = "0x1E4A5E8")]
		public void SelectionEndChange()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1E4A6E0", Offset = "0x1E4A6E0", VA = "0x1E4A6E0")]
		public void PageChange(int page)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1E4A820", Offset = "0x1E4A820", VA = "0x1E4A820")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1E4A8E8", Offset = "0x1E4A8E8", VA = "0x1E4A8E8")]
		public void JumpToSelectedToggle(int page)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1E4A940", Offset = "0x1E4A940", VA = "0x1E4A940")]
		public UpdateScrollSnap()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class AwesomeMenu : AdamKaposMenu<AwesomeMenu>
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image Background;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37A3")]
		public Text Title;

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1E424D0", Offset = "0x1E424D0", VA = "0x1E424D0")]
		public static void Show(float awesomeness)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1E426C0", Offset = "0x1E426C0", VA = "0x1E426C0")]
		public static void Hide()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1E42734", Offset = "0x1E42734", VA = "0x1E42734")]
		public AwesomeMenu()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class GameMenu : SimpleMenu<GameMenu>
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1E46924", Offset = "0x1E46924", VA = "0x1E46924", Slot = "4")]
		public override void OnBackPressed()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1E4699C", Offset = "0x1E4699C", VA = "0x1E4699C")]
		public GameMenu()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class MainMenu : SimpleMenu<MainMenu>
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1E47288", Offset = "0x1E47288", VA = "0x1E47288")]
		public void OnPlayPressed()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1E47300", Offset = "0x1E47300", VA = "0x1E47300")]
		public void OnOptionsPressed()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1E47378", Offset = "0x1E47378", VA = "0x1E47378", Slot = "4")]
		public override void OnBackPressed()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1E473A4", Offset = "0x1E473A4", VA = "0x1E473A4")]
		public MainMenu()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class OptionsMenu : SimpleMenu<OptionsMenu>
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Slider Slider;

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1E47420", Offset = "0x1E47420", VA = "0x1E47420")]
		public void OnMagicButtonPressed()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1E47480", Offset = "0x1E47480", VA = "0x1E47480")]
		public OptionsMenu()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class PauseMenu : SimpleMenu<PauseMenu>
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1E47678", Offset = "0x1E47678", VA = "0x1E47678")]
		public void OnQuitPressed()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1E477A0", Offset = "0x1E477A0", VA = "0x1E477A0")]
		public PauseMenu()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class UpdateRadialValue : MonoBehaviour
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E954")]
		public InputField input;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RadialSlider slider;

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1E49984", Offset = "0x1E49984", VA = "0x1E49984")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1E49998", Offset = "0x1E49998", VA = "0x1E49998")]
		public void UpdateSliderValue()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1E49AB8", Offset = "0x1E49AB8", VA = "0x1E49AB8")]
		public void UpdateSliderAndle()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1E49BF0", Offset = "0x1E49BF0", VA = "0x1E49BF0")]
		public UpdateRadialValue()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class AnimateEffects : MonoBehaviour
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LetterSpacing letterSpacing;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float letterSpacingMax;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37AB")]
		private float letterSpacingMin;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float letterSpacingModifier;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E95C")]
		public CurvedText curvedText;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float curvedTextMax;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float curvedTextMin;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float curvedTextModifier;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37B3")]
		public Gradient2 gradient2;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float gradient2Max;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E964")]
		private float gradient2Min;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float gradient2Modifier;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CylinderText cylinderText;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform cylinderTextRT;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37BB")]
		private Vector3 cylinderRotation;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public SoftMaskScript SAUIM;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E96C")]
		private float SAUIMMax;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float SAUIMMin;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float SAUIMModifier;

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1E41B44", Offset = "0x1E41B44", VA = "0x1E41B44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1E41BE4", Offset = "0x1E41BE4", VA = "0x1E41BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1E423AC", Offset = "0x1E423AC", VA = "0x1E423AC")]
		public AnimateEffects()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class testHref : MonoBehaviour
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextPic textPic;

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1E4A970", Offset = "0x1E4A970", VA = "0x1E4A970")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1E4A9FC", Offset = "0x1E4A9FC", VA = "0x1E4A9FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1E4AB00", Offset = "0x1E4AB00", VA = "0x1E4AB00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1E4AC04", Offset = "0x1E4AC04", VA = "0x1E4AC04")]
		private void OnHrefClick(string hrefName)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1E4AD1C", Offset = "0x1E4AD1C", VA = "0x1E4AD1C")]
		public testHref()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7F88", Offset = "0xBD7F88")]
	public class LineRendererOrbit : MonoBehaviour
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C3")]
		private UILineRenderer lr;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Circle circle;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C88C")]
		public GameObject OrbitGO;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform orbitGOrt;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float orbitTime;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _xAxis;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37CA")]
		[SerializeField]
		private float _yAxis;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int _steps;

		[Token(Token = "0x17000151")]
		public float xAxis
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x1E46A18", Offset = "0x1E46A18", VA = "0x1E46A18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x1E46A48", Offset = "0x1E46A48", VA = "0x1E46A48")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public float yAxis
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x1E46D04", Offset = "0x1E46D04", VA = "0x1E46D04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x1E46D34", Offset = "0x1E46D34", VA = "0x1E46D34")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public int Steps
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x1E46D80", Offset = "0x1E46D80", VA = "0x1E46D80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x1E46DB0", Offset = "0x1E46DB0", VA = "0x1E46DB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1E46DFC", Offset = "0x1E46DFC", VA = "0x1E46DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1E46EDC", Offset = "0x1E46EDC", VA = "0x1E46EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1E46A94", Offset = "0x1E46A94", VA = "0x1E46A94")]
		private void GenerateOrbit()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1E470FC", Offset = "0x1E470FC", VA = "0x1E470FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1E47220", Offset = "0x1E47220", VA = "0x1E47220")]
		public LineRendererOrbit()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class TestAddingPoints : MonoBehaviour
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E974")]
		public UILineRenderer LineRenderer;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text XValue;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text YValue;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1E495CC", Offset = "0x1E495CC", VA = "0x1E495CC")]
		public void AddNewPoint()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1E498A0", Offset = "0x1E498A0", VA = "0x1E498A0")]
		public void ClearPoints()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1E49954", Offset = "0x1E49954", VA = "0x1E49954")]
		public TestAddingPoints()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class ScrollingCalendar : MonoBehaviour
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform monthsScrollingPanel;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37D2")]
		public RectTransform yearsScrollingPanel;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RectTransform daysScrollingPanel;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E97C")]
		public GameObject yearsButtonPrefab;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject monthsButtonPrefab;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject daysButtonPrefab;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject[] monthsButtons;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37DA")]
		private GameObject[] yearsButtons;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject[] daysButtons;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E984")]
		public RectTransform monthCenter;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform yearsCenter;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform daysCenter;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UIVerticalScroller yearsVerticalScroller;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37E2")]
		private UIVerticalScroller monthsVerticalScroller;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private UIVerticalScroller daysVerticalScroller;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E98C")]
		public InputField inputFieldDays;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputField inputFieldMonths;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputField inputFieldYears;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text dateText;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37EA")]
		private int daysSet;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int monthsSet;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E994")]
		private int yearsSet;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1E4781C", Offset = "0x1E4781C", VA = "0x1E4781C")]
		private void InitializeYears()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1E47E64", Offset = "0x1E47E64", VA = "0x1E47E64")]
		private void InitializeMonths()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1E484F4", Offset = "0x1E484F4", VA = "0x1E484F4")]
		private void InitializeDays()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1E48A84", Offset = "0x1E48A84", VA = "0x1E48A84")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1E48C84", Offset = "0x1E48C84", VA = "0x1E48C84")]
		public void SetDate()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1E48E6C", Offset = "0x1E48E6C", VA = "0x1E48E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1E493EC", Offset = "0x1E493EC", VA = "0x1E493EC")]
		public void DaysScrollUp()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1E49434", Offset = "0x1E49434", VA = "0x1E49434")]
		public void DaysScrollDown()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1E4947C", Offset = "0x1E4947C", VA = "0x1E4947C")]
		public void MonthsScrollUp()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1E494C4", Offset = "0x1E494C4", VA = "0x1E494C4")]
		public void MonthsScrollDown()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1E4950C", Offset = "0x1E4950C", VA = "0x1E4950C")]
		public void YearsScrollUp()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1E49554", Offset = "0x1E49554", VA = "0x1E49554")]
		public void YearsScrollDown()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1E4959C", Offset = "0x1E4959C", VA = "0x1E4959C")]
		public ScrollingCalendar()
		{
		}
	}
}
namespace MK.Glow
{
	[Token(Token = "0x2000202")]
	internal abstract class CameraData
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int width;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int height;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool stereoEnabled;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37F2")]
		internal float aspect;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Matrix4x4 worldToCameraMatrix;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E99C")]
		internal bool overwriteDescriptor;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x21C2748", Offset = "0x21C2748", VA = "0x21C2748")]
		protected CameraData()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public enum Workflow
	{
		[Token(Token = "0x4000CCE")]
		Threshold,
		[Token(Token = "0x4000CCF")]
		Selective,
		[Token(Token = "0x4000CD0")]
		Natural
	}
	[Token(Token = "0x2000204")]
	public enum AntiFlickerMode
	{
		[Token(Token = "0x4000CD2")]
		Balanced,
		[Token(Token = "0x4000CD3")]
		Strong
	}
	[Token(Token = "0x2000205")]
	public enum Quality
	{
		[Token(Token = "0x4000CD5")]
		Ultra = 1,
		[Token(Token = "0x4000CD6")]
		High = 2,
		[Token(Token = "0x4000CD7")]
		Medium = 4,
		[Token(Token = "0x4000CD8")]
		Low = 8,
		[Token(Token = "0x4000CD9")]
		VeryLow = 12
	}
	[Token(Token = "0x2000206")]
	public enum DebugView
	{
		[Token(Token = "0x4000CDB")]
		None,
		[Token(Token = "0x4000CDC")]
		RawBloom,
		[Token(Token = "0x4000CDD")]
		RawLensFlare,
		[Token(Token = "0x4000CDE")]
		RawGlare,
		[Token(Token = "0x4000CDF")]
		Bloom,
		[Token(Token = "0x4000CE0")]
		LensFlare,
		[Token(Token = "0x4000CE1")]
		Glare,
		[Token(Token = "0x4000CE2")]
		Composite
	}
	[Token(Token = "0x2000207")]
	public enum RenderPriority
	{
		[Token(Token = "0x4000CE4")]
		Quality,
		[Token(Token = "0x4000CE5")]
		Balanced,
		[Token(Token = "0x4000CE6")]
		Performance
	}
	[Token(Token = "0x2000208")]
	public enum LensFlareStyle
	{
		[Token(Token = "0x4000CE8")]
		Custom,
		[Token(Token = "0x4000CE9")]
		Average,
		[Token(Token = "0x4000CEA")]
		MultiAverage,
		[Token(Token = "0x4000CEB")]
		Old,
		[Token(Token = "0x4000CEC")]
		OldFocused,
		[Token(Token = "0x4000CED")]
		Distorted
	}
	[Token(Token = "0x2000209")]
	public enum GlareStyle
	{
		[Token(Token = "0x4000CEF")]
		Custom,
		[Token(Token = "0x4000CF0")]
		Line,
		[Token(Token = "0x4000CF1")]
		Tri,
		[Token(Token = "0x4000CF2")]
		Cross,
		[Token(Token = "0x4000CF3")]
		DistortedCross,
		[Token(Token = "0x4000CF4")]
		Star,
		[Token(Token = "0x4000CF5")]
		Flake
	}
	[Token(Token = "0x200020A")]
	internal struct RenderDimension : IDimension
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF0170", Offset = "0xBF0170")]
		private int <width>k__BackingField;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF01AC", Offset = "0xBF01AC")]
		private int <height>k__BackingField;

		[Token(Token = "0x17000154")]
		public int width
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x21E154C", Offset = "0x21E154C", VA = "0x21E154C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B0A4", Offset = "0xC1B0A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x21E157C", Offset = "0x21E157C", VA = "0x21E157C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B0E0", Offset = "0xC1B0E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public int height
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x21E15B4", Offset = "0x21E15B4", VA = "0x21E15B4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B11C", Offset = "0xC1B11C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x21E15E4", Offset = "0x21E15E4", VA = "0x21E15E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B158", Offset = "0xC1B158")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x21E161C", Offset = "0x21E161C", VA = "0x21E161C", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x21C76C8", Offset = "0x21C76C8", VA = "0x21C76C8")]
		public RenderDimension(int width, int height)
		{
		}
	}
	[Token(Token = "0x200020B")]
	internal enum RenderPipeline
	{
		[Token(Token = "0x4000CF9")]
		Legacy,
		[Token(Token = "0x4000CFA")]
		SRP
	}
	[Token(Token = "0x200020C")]
	public static class Compatibility
	{
		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly bool _defaultHDRFormatSupported;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9D4")]
		private static readonly bool _11R11G10BFormatSupported;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool _2A10R10G10BFormatSupported;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool IsSupported;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x21C28B4", Offset = "0x21C28B4", VA = "0x21C28B4")]
		public static bool CheckGeometryShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x21C2BA0", Offset = "0x21C2BA0", VA = "0x21C2BA0")]
		public static bool CheckComputeShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x21C2DD8", Offset = "0x21C2DD8", VA = "0x21C2DD8")]
		public static bool CheckLensFlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x21C32D8", Offset = "0x21C32D8", VA = "0x21C32D8")]
		public static bool CheckGlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x21C369C", Offset = "0x21C369C", VA = "0x21C369C")]
		internal static RenderTextureFormat CheckSupportedRenderTextureFormat()
		{
			return default(RenderTextureFormat);
		}
	}
	[Token(Token = "0x200020D")]
	internal sealed class ComputeShaderVariants
	{
		[Token(Token = "0x20005D9")]
		internal static class KeywordValues
		{
			[Token(Token = "0x40028BC")]
			internal const int BLOOM = 1;

			[Token(Token = "0x40028BD")]
			internal const int LENS_SURFACE = 1;

			[Token(Token = "0x40028BE")]
			internal const int LENS_FLARE = 1;

			[Token(Token = "0x40028BF")]
			internal const int GLARE = 4;

			[Token(Token = "0x40028C0")]
			internal const int MK_NATURAL = 1;

			[Token(Token = "0x40028C1")]
			internal const int RENDER_PRIORITY = 2;
		}

		[Token(Token = "0x20005DA")]
		internal struct KeywordState
		{
			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3829")]
			public int bloom;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int lensSurface;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9CC")]
			public int lensFlare;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int glare;

			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int natural;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int renderPriority;

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0x21C3F8C", Offset = "0x21C3F8C", VA = "0x21C3F8C")]
			public KeywordState(int bloom, int lensSurface, int lensFlare, int glare, int natural, int renderPriority)
			{
			}
		}

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<KeywordState, int> variants;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x21C3AE0", Offset = "0x21C3AE0", VA = "0x21C3AE0")]
		internal void GetVariantNumber(KeywordState features, out int index)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x21C3BCC", Offset = "0x21C3BCC", VA = "0x21C3BCC")]
		public ComputeShaderVariants(int offset)
		{
		}
	}
	[Token(Token = "0x200020E")]
	internal sealed class Effect
	{
		[Token(Token = "0x20005DB")]
		internal enum ShaderRenderPass
		{
			[Token(Token = "0x40028C9")]
			Presample,
			[Token(Token = "0x40028CA")]
			Downsample,
			[Token(Token = "0x40028CB")]
			Upsample,
			[Token(Token = "0x40028CC")]
			Composite,
			[Token(Token = "0x40028CD")]
			Debug
		}

		[Token(Token = "0x20005DC")]
		internal enum MaterialKeywords
		{
			[Token(Token = "0x40028CF")]
			Bloom,
			[Token(Token = "0x40028D0")]
			LensSurface,
			[Token(Token = "0x40028D1")]
			LensFlare,
			[Token(Token = "0x40028D2")]
			Glare1,
			[Token(Token = "0x40028D3")]
			DebugRawBloom,
			[Token(Token = "0x40028D4")]
			DebugRawLensFlare,
			[Token(Token = "0x40028D5")]
			DebugRawGlare,
			[Token(Token = "0x40028D6")]
			DebugBloom,
			[Token(Token = "0x40028D7")]
			DebugLensFlare,
			[Token(Token = "0x40028D8")]
			DebugGlare,
			[Token(Token = "0x40028D9")]
			DebugComposite,
			[Token(Token = "0x40028DA")]
			LegacyBlit,
			[Token(Token = "0x40028DB")]
			RenderPriorityQuality,
			[Token(Token = "0x40028DC")]
			Natural,
			[Token(Token = "0x40028DD")]
			Glare2,
			[Token(Token = "0x40028DE")]
			Glare3,
			[Token(Token = "0x40028DF")]
			Glare4,
			[Token(Token = "0x40028E0")]
			Null,
			[Token(Token = "0x40028E1")]
			RenderPriorityBalanced,
			[Token(Token = "0x40028E2")]
			HQAntiFlickerFilter
		}

		[Token(Token = "0x20005DD")]
		internal struct Keyword
		{
			[Token(Token = "0x40028E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			internal string name;

			[Token(Token = "0x40028E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA44")]
			internal bool enabled;

			[Token(Token = "0x6002C64")]
			[Address(RVA = "0x21C4F74", Offset = "0x21C4F74", VA = "0x21C4F74")]
			internal Keyword(string name, bool enabled)
			{
			}
		}

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3841")]
		private static Resources _resources;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Vector2 _referenceResolution;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9E4")]
		private static readonly float _referenceAspectRatio;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 _selectiveWorkflowThreshold;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _cArgBufferSize;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _glareIterationsBase;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3849")]
		private static readonly RenderDimension _directComputeSize;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly float naturalIntensityMult;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9EC")]
		private static readonly string _selectiveReplacementTag;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string _selectiveGlowCameraObjectName;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _selectiveGlowCameraObject;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera _selectiveGlowCamera;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3851")]
		private ComputeShaderVariants _presampleComputeVariants;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ComputeShaderVariants _downsampleComputeVariants;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9F4")]
		private ComputeShaderVariants _upsampleComputeVariants;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CommandBuffer _commandBuffer;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _finalBlit;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget _selectiveRenderTarget;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3859")]
		private MipBuffer _bloomDownsampleBuffer;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MipBuffer _bloomUpsampleBuffer;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E9FC")]
		private MipBuffer _lensFlareDownsampleBuffer;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _lensFlareUpsampleBuffer;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareDownsampleBuffer0;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareDownsampleBuffer1;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3861")]
		private MipBuffer _glareDownsampleBuffer2;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MipBuffer _glareDownsampleBuffer3;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA04")]
		private MipBuffer _glareUpsampleBuffer0;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareUpsampleBuffer1;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareUpsampleBuffer2;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareUpsampleBuffer3;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3869")]
		private RenderTarget _sourceFrameBuffer;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTarget _destinationFrameBuffer;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA0C")]
		private Keyword[] _shaderKeywords;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useGeometryShaders;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useComputeShaders;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useLensSurface;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3871")]
		private bool _useLensFlare;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _useGlare;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C89C")]
		private List<RenderTarget> _renderTargetsBundle;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<MaterialKeywords> _renderKeywordsBundle;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _bloomIterations;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _lensFlareIterations;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3878")]
		private int _minIterations;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _glareIterations;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA14")]
		private int _currentRenderIndex;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float bloomUpsampleSpread;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _lensFlareUpsampleSpread;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _glareScatteringMult;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3880")]
		private Vector2 _resolutionScale;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2[] glareAngles;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA1C")]
		private RenderTextureFormat _renderTextureFormat;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ComputeShaderVariants.KeywordState computeShaderFeatures;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderContext[] _sourceContext;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderContext[] _renderContext;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3888")]
		private RenderContext _selectiveRenderContext;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera _renderingCamera;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA24")]
		private CameraData _cameraData;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderPipeline _renderPipeline;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _renderMaterialNoGeometry;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _renderMaterialGeometry;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3890")]
		private float[] _cArgArray;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ComputeBuffer _cArgsComputeBuffer;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA2C")]
		private RenderDimension _computeThreadGroups;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Settings _settings;

		[Token(Token = "0x17000157")]
		private RenderTarget sourceFrameBuffer
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x21C4FD8", Offset = "0x21C4FD8", VA = "0x21C4FD8")]
			get
			{
				return default(RenderTarget);
			}
		}

		[Token(Token = "0x17000158")]
		internal int currentRenderIndex
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x21C5098", Offset = "0x21C5098", VA = "0x21C5098")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000159")]
		internal RenderTextureFormat renderTextureFormat
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x21C50C8", Offset = "0x21C50C8", VA = "0x21C50C8")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x1700015A")]
		internal Material renderMaterialNoGeometry
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x21C50F8", Offset = "0x21C50F8", VA = "0x21C50F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private GameObject selectiveGlowCameraObject
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x21C81A4", Offset = "0x21C81A4", VA = "0x21C81A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private Camera selectiveGlowCamera
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x21C83E4", Offset = "0x21C83E4", VA = "0x21C83E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x21C403C", Offset = "0x21C403C", VA = "0x21C403C")]
		internal Effect()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x21C5128", Offset = "0x21C5128", VA = "0x21C5128")]
		internal void Enable(RenderPipeline renderPipeline, [Optional] Shader shaderOverwrite, [Optional] Shader shaderGeometryOverwrite)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x21C64E8", Offset = "0x21C64E8", VA = "0x21C64E8", Slot = "1")]
		~Effect()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x21C6634", Offset = "0x21C6634", VA = "0x21C6634")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x21C67DC", Offset = "0x21C67DC", VA = "0x21C67DC")]
		private void PrepareScattering(float Scattering, float scale, ref int iterations, ref float spread)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x21C6A34", Offset = "0x21C6A34", VA = "0x21C6A34")]
		private void UpdateRenderBuffers()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x21C85B0", Offset = "0x21C85B0", VA = "0x21C85B0")]
		private void SetupSelectiveGlowCamera()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x21C8930", Offset = "0x21C8930", VA = "0x21C8930")]
		private void CheckFeatureSupport()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x21C8E44", Offset = "0x21C8E44", VA = "0x21C8E44")]
		private void BeginProfileSample(string text)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x21C8EC8", Offset = "0x21C8EC8", VA = "0x21C8EC8")]
		private void EndProfileSample(string text)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x21C8F4C", Offset = "0x21C8F4C", VA = "0x21C8F4C")]
		internal void Build(RenderTarget source, RenderTarget destination, Settings settings, CommandBuffer cmd, CameraData cameraData, [Optional] Camera renderingCamera, bool finalBlit = true)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x21C99BC", Offset = "0x21C99BC", VA = "0x21C99BC")]
		private void UpdateConstantBuffers()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x21D66C0", Offset = "0x21D66C0", VA = "0x21D66C0")]
		private void SetKeyword(MaterialKeywords keyword, bool enable)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x21D654C", Offset = "0x21D654C", VA = "0x21D654C")]
		private Vector2 AngleToDirection(float angleDegree)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x21D5DE4", Offset = "0x21D5DE4", VA = "0x21D5DE4")]
		private float ConvertGammaValue(float gammaSpacedValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x21D633C", Offset = "0x21D633C", VA = "0x21D633C")]
		private Vector4 ConvertGammaValue(Vector4 gammaSpacedVector)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x21D6960", Offset = "0x21D6960", VA = "0x21D6960")]
		private void UpdateComputeShaderThreadGroups(RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x21D6CC8", Offset = "0x21D6CC8", VA = "0x21D6CC8")]
		private void UpdateRenderIndex(int v)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x21D6D00", Offset = "0x21D6D00", VA = "0x21D6D00")]
		private void UpdateRenderIndex(ComputeShaderVariants variants, ComputeShaderVariants.KeywordState features)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x21D6DA0", Offset = "0x21D6DA0", VA = "0x21D6DA0")]
		private void AttachCArgBufferToComputeKernel()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x21D56DC", Offset = "0x21D56DC", VA = "0x21D56DC")]
		private void SetFloat(PipelineProperties.ShaderProperties.CBufferProperty property, float value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x21D5868", Offset = "0x21D5868", VA = "0x21D5868")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector4 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x21D5F28", Offset = "0x21D5F28", VA = "0x21D5F28")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector3 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x21D52CC", Offset = "0x21D52CC", VA = "0x21D52CC")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector2 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x21D71A4", Offset = "0x21D71A4", VA = "0x21D71A4")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, RenderTarget rt, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x21D7664", Offset = "0x21D7664", VA = "0x21D7664")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, Texture tex, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x21D7AB4", Offset = "0x21D7AB4", VA = "0x21D7AB4")]
		private void PrepareDraw(int variant, RenderDimension renderDimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x21D82A0", Offset = "0x21D82A0", VA = "0x21D82A0")]
		private void PrepareDraw(int materialPass, ComputeShaderVariants variants, bool enableBloom, bool enableLensflare, bool enableGlare, RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x21D8ADC", Offset = "0x21D8ADC", VA = "0x21D8ADC")]
		private void Draw(RenderDimension dimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x21D9AE0", Offset = "0x21D9AE0", VA = "0x21D9AE0")]
		private MaterialKeywords GetGlareKeyword(int streaks)
		{
			return default(MaterialKeywords);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x21D8114", Offset = "0x21D8114", VA = "0x21D8114")]
		private void DisableRenderKeywords()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x21D9BC4", Offset = "0x21D9BC4", VA = "0x21D9BC4")]
		private void DisableDebugKeywords()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x21D7FC4", Offset = "0x21D7FC4", VA = "0x21D7FC4")]
		private void SetRenderPriority()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x21CCE5C", Offset = "0x21CCE5C", VA = "0x21CCE5C")]
		private void PreSample()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x21CE5AC", Offset = "0x21CE5AC", VA = "0x21CE5AC")]
		private void Downsample()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x21D0170", Offset = "0x21D0170", VA = "0x21D0170")]
		private void Upsample()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x21D37D0", Offset = "0x21D37D0", VA = "0x21D37D0")]
		private void Composite()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x21D9FCC", Offset = "0x21D9FCC", VA = "0x21D9FCC")]
		internal void AfterCompositeCleanup()
		{
		}
	}
	[Token(Token = "0x200020F")]
	internal interface IDimension
	{
		[Token(Token = "0x1700015D")]
		int width
		{
			[Token(Token = "0x6000D7C")]
			get;
		}

		[Token(Token = "0x1700015E")]
		int height
		{
			[Token(Token = "0x6000D7D")]
			get;
		}

		[Token(Token = "0x1700015F")]
		RenderDimension renderDimension
		{
			[Token(Token = "0x6000D7E")]
			get;
		}
	}
	[Token(Token = "0x2000210")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minLimit;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxLimit;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x21DEC14", Offset = "0x21DEC14", VA = "0x21DEC14")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public struct MinMaxRange
	{
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minValue;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38B0")]
		public float maxValue;

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x21DC848", Offset = "0x21DC848", VA = "0x21DC848")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x2000212")]
	internal sealed class MipBuffer
	{
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTarget[] _renderTargets;

		[Token(Token = "0x17000160")]
		internal RenderTarget[] renderTargets
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x21DEC74", Offset = "0x21DEC74", VA = "0x21DEC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x21C5FC8", Offset = "0x21C5FC8", VA = "0x21C5FC8")]
		public MipBuffer(string name, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x21D9CD0", Offset = "0x21D9CD0", VA = "0x21D9CD0")]
		internal void CreateTemporary(RenderContext[] renderContext, int level, CommandBuffer cmd, RenderTextureFormat format, bool useComputeShaders, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x21D9ED0", Offset = "0x21D9ED0", VA = "0x21D9ED0")]
		internal void ClearTemporary(CommandBuffer cmd, int level, RenderPipeline renderPipeline)
		{
		}
	}
	[Token(Token = "0x2000213")]
	internal static class PipelineExtensions
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA5C")]
		private static Mesh _screenMesh;

		[Token(Token = "0x17000161")]
		private static Mesh screenMesh
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x21DED30", Offset = "0x21DED30", VA = "0x21DED30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x21D683C", Offset = "0x21D683C", VA = "0x21D683C")]
		internal static void SetKeyword(this CommandBuffer cmd, string keyword, bool enable)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x21D68E4", Offset = "0x21D68E4", VA = "0x21D68E4")]
		internal static void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x21D927C", Offset = "0x21D927C", VA = "0x21D927C")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass, Rect viewport)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x21D97C8", Offset = "0x21D97C8", VA = "0x21D97C8")]
		internal static void Draw(List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x21D91D4", Offset = "0x21D91D4", VA = "0x21D91D4")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x21D9730", Offset = "0x21D9730", VA = "0x21D9730")]
		internal static void Draw(List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x21DFCBC", Offset = "0x21DFCBC", VA = "0x21DFCBC")]
		private static int SinglePassStereoDownscale(bool cameraIsStereo, int size, int scale)
		{
			return default(int);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x21C7E68", Offset = "0x21C7E68", VA = "0x21C7E68")]
		internal static void UpdateMipRenderContext(this CameraData cameraData, RenderContext[] renderContexts, RenderDimension rawDimension, int levels, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x21DECA4", Offset = "0x21DECA4", VA = "0x21DECA4")]
		internal static RenderTexture GetTemporary(RenderContext renderContext, RenderTextureFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x2000214")]
	internal static class PipelineProperties
	{
		[Token(Token = "0x20005DE")]
		internal static class ShaderProperties
		{
			[Token(Token = "0x2000841")]
			internal class DefaultProperty
			{
				[Token(Token = "0x40032E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA8C")]
				protected string _name;

				[Token(Token = "0x40032E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				protected int _id;

				[Token(Token = "0x170005FB")]
				internal string name
				{
					[Token(Token = "0x60032F0")]
					[Address(RVA = "0x21E1468", Offset = "0x21E1468", VA = "0x21E1468")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005FC")]
				internal int id
				{
					[Token(Token = "0x60032F1")]
					[Address(RVA = "0x21E1498", Offset = "0x21E1498", VA = "0x21E1498")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60032F2")]
				[Address(RVA = "0x21E1398", Offset = "0x21E1398", VA = "0x21E1398")]
				internal DefaultProperty(string name)
				{
				}
			}

			[Token(Token = "0x2000842")]
			internal sealed class CBufferProperty : DefaultProperty
			{
				[Token(Token = "0x40032E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int _index;

				[Token(Token = "0x40032E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int _size;

				[Token(Token = "0x170005FD")]
				internal int index
				{
					[Token(Token = "0x60032F3")]
					[Address(RVA = "0x21E1408", Offset = "0x21E1408", VA = "0x21E1408")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170005FE")]
				internal int size
				{
					[Token(Token = "0x60032F4")]
					[Address(RVA = "0x21E1438", Offset = "0x21E1438", VA = "0x21E1438")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60032F5")]
				[Address(RVA = "0x21E12A4", Offset = "0x21E12A4", VA = "0x21E12A4")]
				internal CBufferProperty(string name, int index, int size)
				{
				}
			}

			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty screenSize;

			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty singlePassStereoScale;

			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38C8")]
			internal static readonly CBufferProperty viewMatrix;

			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty cArgBuffer;

			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C544")]
			internal static readonly DefaultProperty sourceTex;

			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty targetTex;

			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty copyTargetTex;

			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty bloomTex;

			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38CE")]
			internal static readonly DefaultProperty bloomTargetTex;

			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty bloomSpread;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8A4")]
			internal static readonly CBufferProperty bloomThreshold;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lumaScale;

			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty bloomIntensity;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty blooming;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38D5")]
			internal static readonly DefaultProperty higherMipBloomTex;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty resolutionScale;

			[Token(Token = "0x40028F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA64")]
			internal static readonly CBufferProperty renderTargetSize;

			[Token(Token = "0x40028F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensSurfaceDirtTex;

			[Token(Token = "0x40028F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensSurfaceDiffractionTex;

			[Token(Token = "0x40028F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensSurfaceDirtIntensity;

			[Token(Token = "0x40028F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38DD")]
			internal static readonly CBufferProperty lensSurfaceDiffractionIntensity;

			[Token(Token = "0x40028FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty lensSurfaceDirtTexST;

			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA6C")]
			internal static readonly CBufferProperty lensFlareThreshold;

			[Token(Token = "0x40028FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareGhostParams;

			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareHaloParams;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensFlareTex;

			[Token(Token = "0x40028FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38E5")]
			internal static readonly DefaultProperty lensFlareTargetTex;

			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty lensFlareSpread;

			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA74")]
			internal static readonly CBufferProperty lensFlareChromaticAberration;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensFlareColorRamp;

			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareThreshold;

			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareBlend;

			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38ED")]
			internal static readonly CBufferProperty glareGlobalIntensity;

			[Token(Token = "0x4002906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty glareIntensity;

			[Token(Token = "0x4002907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA7C")]
			internal static readonly CBufferProperty glareScattering;

			[Token(Token = "0x4002908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareDirection01;

			[Token(Token = "0x4002909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareDirection23;

			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareOffset;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38F5")]
			internal static readonly DefaultProperty glare0Tex;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty glare0TargetTex;

			[Token(Token = "0x400290D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA84")]
			internal static readonly DefaultProperty glare1Tex;

			[Token(Token = "0x400290E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare1TargetTex;

			[Token(Token = "0x400290F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare2Tex;

			[Token(Token = "0x4002910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare2TargetTex;

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38FD")]
			internal static readonly DefaultProperty glare3Tex;

			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty glare3TargetTex;
		}

		[Token(Token = "0x20005DF")]
		internal static class CommandBufferProperties
		{
			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3905")]
			internal static readonly string commandBufferName;

			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string selectiveRenderBuffer;

			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA94")]
			internal static readonly string bloomDownsampleBuffer;

			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string bloomUpsampleBuffer;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sourceBuffer;

			[Token(Token = "0x4002918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareDownsampleBuffer0;

			[Token(Token = "0x4002919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x390D")]
			internal static readonly string glareDownsampleBuffer1;

			[Token(Token = "0x400291A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string glareDownsampleBuffer2;

			[Token(Token = "0x400291B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EA9C")]
			internal static readonly string glareDownsampleBuffer3;

			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareUpsampleBuffer0;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareUpsampleBuffer1;

			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareUpsampleBuffer2;

			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3915")]
			internal static readonly string glareUpsampleBuffer3;

			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string lensFlareDownsampleBuffer;

			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAA4")]
			internal static readonly string lensFlareUpsampleBuffer;

			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleDownsample;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string samplePreSample;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleUpsample;

			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x391D")]
			internal static readonly string sampleComposite;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string sampleCreateBuffers;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAAC")]
			internal static readonly string sampleClearBuffers;

			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleSetup;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleCopySource;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleReplacement;

			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3925")]
			internal static readonly string samplePrepare;
		}

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int renderBufferSize;

		[Token(Token = "0x17000162")]
		internal static bool scriptableRenderPipelineActive
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x21DFE6C", Offset = "0x21DFE6C", VA = "0x21DFE6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		internal static bool xrEnabled
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x21DB15C", Offset = "0x21DB15C", VA = "0x21DB15C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		internal static bool singlePassStereoDoubleWideEnabled
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x21D5628", Offset = "0x21D5628", VA = "0x21D5628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		internal static bool singlePassStereoInstancedEnabled
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x21C31D4", Offset = "0x21C31D4", VA = "0x21C31D4")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000215")]
	internal sealed class RenderContext : IDimension
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x17000166")]
		public RenderTextureDescriptor descriptor
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x21E14C8", Offset = "0x21E14C8", VA = "0x21E14C8")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x17000167")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x21C9918", Offset = "0x21C9918", VA = "0x21C9918", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x17000168")]
		public bool enableRandomWrite
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x21E14F0", Offset = "0x21E14F0", VA = "0x21E14F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public int width
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x21C7DD8", Offset = "0x21C7DD8", VA = "0x21C7DD8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public int height
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x21C7E20", Offset = "0x21C7E20", VA = "0x21C7E20", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x21C5D94", Offset = "0x21C5D94", VA = "0x21C5D94")]
		internal RenderContext()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x21C7BE8", Offset = "0x21C7BE8", VA = "0x21C7BE8")]
		internal void SinglePassStereoAdjustWidth(bool stereoEnabled)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x21C7738", Offset = "0x21C7738", VA = "0x21C7738")]
		internal void UpdateRenderContext(CameraData cameraData, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite, RenderDimension dimension)
		{
		}
	}
	[Token(Token = "0x2000216")]
	internal struct RenderTarget
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C89C")]
		internal RenderTexture renderTexture;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RenderTargetIdentifier renderTargetIdentifier;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int identifier;
	}
	[Token(Token = "0x2000217")]
	internal static class RenderTargetContext
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _renderTargetCount;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x392C")]
		private static RenderTargetSetup[] _mrtBindingsLegacy;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static RenderTargetBinding[] _mrtBindingsSRP;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x21DF104", Offset = "0x21DF104", VA = "0x21DF104")]
		internal static void SetRenderTargetContext(this CommandBuffer cmd, List<RenderTarget> renderTargets)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x21DF6B4", Offset = "0x21DF6B4", VA = "0x21DF6B4")]
		internal static void SetRenderTargetContext(List<RenderTarget> renderTargets)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public sealed class Resources : ScriptableObject
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAB4")]
		[SerializeField]
		private Texture2D _lensSurfaceDirtTextureDefault;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _lensSurfaceDiffractionTextureDefault;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _lensFlareColorRampDefault;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _selectiveRenderShader;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3934")]
		[SerializeField]
		private Shader _sm20Shader;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Shader _sm25Shader;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EABC")]
		[SerializeField]
		private Shader _sm30Shader;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm35Shader;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm40Shader;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm40GeometryShader;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x393C")]
		[SerializeField]
		private ComputeShader _computeShader;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ComputeShader _computeShaderGles;

		[Token(Token = "0x1700016B")]
		internal Texture2D lensSurfaceDirtTextureDefault
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x21E2AB8", Offset = "0x21E2AB8", VA = "0x21E2AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		internal Texture2D lensSurfaceDiffractionTextureDefault
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x21E2AE8", Offset = "0x21E2AE8", VA = "0x21E2AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		internal Texture2D lensFlareColorRampDefault
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x21E2B18", Offset = "0x21E2B18", VA = "0x21E2B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		internal Shader selectiveRenderShader
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x21E2B48", Offset = "0x21E2B48", VA = "0x21E2B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		internal Shader sm20Shader
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x21E2B78", Offset = "0x21E2B78", VA = "0x21E2B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		internal Shader sm25Shader
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x21E2BA8", Offset = "0x21E2BA8", VA = "0x21E2BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		internal Shader sm30Shader
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x21E2BD8", Offset = "0x21E2BD8", VA = "0x21E2BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		internal Shader sm35Shader
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x21E2C08", Offset = "0x21E2C08", VA = "0x21E2C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		internal Shader sm40Shader
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x21E2C38", Offset = "0x21E2C38", VA = "0x21E2C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		internal Shader sm40GeometryShader
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x21E2C68", Offset = "0x21E2C68", VA = "0x21E2C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		internal ComputeShader computeShader
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x21D7120", Offset = "0x21D7120", VA = "0x21D7120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x21E29C4", Offset = "0x21E29C4", VA = "0x21E29C4")]
		internal static void ResourcesNotAvailableWarning()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x21C5D04", Offset = "0x21C5D04", VA = "0x21C5D04")]
		internal static Resources LoadResourcesAsset()
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x21E2C98", Offset = "0x21E2C98", VA = "0x21E2C98")]
		public Resources()
		{
		}
	}
	[Token(Token = "0x2000219")]
	internal abstract class Settings
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAC4")]
		protected bool _allowGeometryShaders;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowComputeShaders;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RenderPriority _renderPriority;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected DebugView _debugView;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3944")]
		protected Quality _quality;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected AntiFlickerMode _antiFlickerMode;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EACC")]
		protected Workflow _workflow;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected LayerMask _selectiveRenderLayerMask;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _anamorphicRatio;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lumaScale;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394C")]
		protected float _blooming;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected MinMaxRange _bloomThreshold;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAD4")]
		protected float _bloomScattering;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _bloomIntensity;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowLensSurface;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Texture2D _lensSurfaceDirtTexture;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3954")]
		protected float _lensSurfaceDirtIntensity;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected Texture2D _lensSurfaceDirtDistortionTexture;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EADC")]
		protected float _lensSurfaceDirtDistortion;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Texture2D _lensSurfaceDiffractionTexture;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensSurfaceDiffractionIntensity;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowLensFlare;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x395C")]
		protected LensFlareStyle _lensFlareStyle;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _lensFlareGhostFade;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAE4")]
		protected float _lensFlareGhostIntensity;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MinMaxRange _lensFlareThreshold;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareScattering;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Texture2D _lensFlareColorRamp;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3964")]
		protected float _lensFlareChromaticAberration;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected int _lensFlareGhostCount;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAEC")]
		protected float _lensFlareGhostDispersal;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareHaloFade;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareHaloIntensity;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareHaloSize;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x396C")]
		protected bool _allowGlare;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareBlend;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAF4")]
		protected float _glareIntensity;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareAngle;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MinMaxRange _glareThreshold;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int _glareStreaks;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3974")]
		protected float _glareScattering;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected GlareStyle _glareStyle;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EAFC")]
		protected float _glareSample0Scattering;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Angle;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Intensity;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Offset;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x397C")]
		protected float _glareSample1Scattering;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareSample1Angle;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8B4")]
		protected float _glareSample1Intensity;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample1Offset;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample2Scattering;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample2Angle;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3983")]
		protected float _glareSample2Intensity;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareSample2Offset;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB04")]
		protected float _glareSample3Scattering;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Angle;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Intensity;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Offset;

		[Token(Token = "0x17000176")]
		internal bool allowGeometryShaders
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x21E2CC8", Offset = "0x21E2CC8", VA = "0x21E2CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x21E2D0C", Offset = "0x21E2D0C", VA = "0x21E2D0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		internal bool allowComputeShaders
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x21E2D58", Offset = "0x21E2D58", VA = "0x21E2D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x21E2D9C", Offset = "0x21E2D9C", VA = "0x21E2D9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		internal RenderPriority renderPriority
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x21E2DE8", Offset = "0x21E2DE8", VA = "0x21E2DE8")]
			get
			{
				return default(RenderPriority);
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x21E2E18", Offset = "0x21E2E18", VA = "0x21E2E18")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		internal DebugView debugView
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x21E2E50", Offset = "0x21E2E50", VA = "0x21E2E50")]
			get
			{
				return default(DebugView);
			}
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x21E2E80", Offset = "0x21E2E80", VA = "0x21E2E80")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		internal Quality quality
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x21E2EB8", Offset = "0x21E2EB8", VA = "0x21E2EB8")]
			get
			{
				return default(Quality);
			}
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x21E2EE8", Offset = "0x21E2EE8", VA = "0x21E2EE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		internal AntiFlickerMode antiFlickerMode
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x21E2F20", Offset = "0x21E2F20", VA = "0x21E2F20")]
			get
			{
				return default(AntiFlickerMode);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x21E2F50", Offset = "0x21E2F50", VA = "0x21E2F50")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		internal Workflow workflow
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x21E2F88", Offset = "0x21E2F88", VA = "0x21E2F88")]
			get
			{
				return default(Workflow);
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x21E2FB8", Offset = "0x21E2FB8", VA = "0x21E2FB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		internal LayerMask selectiveRenderLayerMask
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x21E2FF0", Offset = "0x21E2FF0", VA = "0x21E2FF0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x21E3038", Offset = "0x21E3038", VA = "0x21E3038")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		internal float anamorphicRatio
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x21E30C0", Offset = "0x21E30C0", VA = "0x21E30C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x21DC8C8", Offset = "0x21DC8C8", VA = "0x21DC8C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		internal float lumaScale
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x21E30F0", Offset = "0x21E30F0", VA = "0x21E30F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x21DC9E8", Offset = "0x21DC9E8", VA = "0x21DC9E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		internal float blooming
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x21E3120", Offset = "0x21E3120", VA = "0x21E3120")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x21DCD10", Offset = "0x21DCD10", VA = "0x21DCD10")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		internal MinMaxRange bloomThreshold
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x21E3150", Offset = "0x21E3150", VA = "0x21E3150")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x21E3188", Offset = "0x21E3188", VA = "0x21E3188")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		internal float bloomScattering
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x21E3258", Offset = "0x21E3258", VA = "0x21E3258")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x21DCAEC", Offset = "0x21DCAEC", VA = "0x21DCAEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		internal float bloomIntensity
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x21E3288", Offset = "0x21E3288", VA = "0x21E3288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x21DCC08", Offset = "0x21DCC08", VA = "0x21DCC08")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		internal bool allowLensSurface
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x21E32B8", Offset = "0x21E32B8", VA = "0x21E32B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x21E32FC", Offset = "0x21E32FC", VA = "0x21E32FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		internal Texture2D lensSurfaceDirtTexture
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x21E3348", Offset = "0x21E3348", VA = "0x21E3348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x21E3378", Offset = "0x21E3378", VA = "0x21E3378")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		internal float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x21E33B0", Offset = "0x21E33B0", VA = "0x21E33B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x21DCE14", Offset = "0x21DCE14", VA = "0x21DCE14")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		internal Texture2D lensSurfaceDirtDistortionTexture
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x21E33E0", Offset = "0x21E33E0", VA = "0x21E33E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x21E3410", Offset = "0x21E3410", VA = "0x21E3410")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		internal float lensSurfaceDirtDistortion
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x21E3448", Offset = "0x21E3448", VA = "0x21E3448")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x21E3478", Offset = "0x21E3478", VA = "0x21E3478")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		internal Texture2D lensSurfaceDiffractionTexture
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x21E3580", Offset = "0x21E3580", VA = "0x21E3580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x21E35B0", Offset = "0x21E35B0", VA = "0x21E35B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		internal float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x21E35E8", Offset = "0x21E35E8", VA = "0x21E35E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x21DCF1C", Offset = "0x21DCF1C", VA = "0x21DCF1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		internal bool allowLensFlare
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x21E3618", Offset = "0x21E3618", VA = "0x21E3618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x21E365C", Offset = "0x21E365C", VA = "0x21E365C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		internal LensFlareStyle lensFlareStyle
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x21E36A8", Offset = "0x21E36A8", VA = "0x21E36A8")]
			get
			{
				return default(LensFlareStyle);
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x21E36D8", Offset = "0x21E36D8", VA = "0x21E36D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		internal float lensFlareGhostFade
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x21E3710", Offset = "0x21E3710", VA = "0x21E3710")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x21DD024", Offset = "0x21DD024", VA = "0x21DD024")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		internal float lensFlareGhostIntensity
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x21E3740", Offset = "0x21E3740", VA = "0x21E3740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x21DD12C", Offset = "0x21DD12C", VA = "0x21DD12C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		internal MinMaxRange lensFlareThreshold
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x21E3770", Offset = "0x21E3770", VA = "0x21E3770")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x21E37A8", Offset = "0x21E37A8", VA = "0x21E37A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		internal float lensFlareScattering
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x21E3878", Offset = "0x21E3878", VA = "0x21E3878")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x21DD234", Offset = "0x21DD234", VA = "0x21DD234")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		internal Texture2D lensFlareColorRamp
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x21E38A8", Offset = "0x21E38A8", VA = "0x21E38A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x21E38D8", Offset = "0x21E38D8", VA = "0x21E38D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		internal float lensFlareChromaticAberration
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x21E3910", Offset = "0x21E3910", VA = "0x21E3910")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x21E3940", Offset = "0x21E3940", VA = "0x21E3940")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		internal int lensFlareGhostCount
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x21E3978", Offset = "0x21E3978", VA = "0x21E3978")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x21DD350", Offset = "0x21DD350", VA = "0x21DD350")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		internal float lensFlareGhostDispersal
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x21E39A8", Offset = "0x21E39A8", VA = "0x21E39A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x21DD45C", Offset = "0x21DD45C", VA = "0x21DD45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		internal float lensFlareHaloFade
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x21E39D8", Offset = "0x21E39D8", VA = "0x21E39D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x21DD57C", Offset = "0x21DD57C", VA = "0x21DD57C")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		internal float lensFlareHaloIntensity
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x21E3A08", Offset = "0x21E3A08", VA = "0x21E3A08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x21DD684", Offset = "0x21DD684", VA = "0x21DD684")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		internal float lensFlareHaloSize
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x21E3A38", Offset = "0x21E3A38", VA = "0x21E3A38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x21DD78C", Offset = "0x21DD78C", VA = "0x21DD78C")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		internal bool allowGlare
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x21E3A68", Offset = "0x21E3A68", VA = "0x21E3A68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x21E3AAC", Offset = "0x21E3AAC", VA = "0x21E3AAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		internal float glareBlend
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x21E3AF8", Offset = "0x21E3AF8", VA = "0x21E3AF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x21DDC00", Offset = "0x21DDC00", VA = "0x21DDC00")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		internal float glareIntensity
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x21E3B28", Offset = "0x21E3B28", VA = "0x21E3B28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x21DDD04", Offset = "0x21DDD04", VA = "0x21DDD04")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		internal float glareAngle
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x21E3B58", Offset = "0x21E3B58", VA = "0x21E3B58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x21DE020", Offset = "0x21DE020", VA = "0x21DE020")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		internal MinMaxRange glareThreshold
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x21E3B88", Offset = "0x21E3B88", VA = "0x21E3B88")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x21E3BC0", Offset = "0x21E3BC0", VA = "0x21E3BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		internal int glareStreaks
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x21E3C90", Offset = "0x21E3C90", VA = "0x21E3C90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x21DDE0C", Offset = "0x21DDE0C", VA = "0x21DDE0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		internal float glareScattering
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x21E3CC0", Offset = "0x21E3CC0", VA = "0x21E3CC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x21DDF18", Offset = "0x21DDF18", VA = "0x21DDF18")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		internal GlareStyle glareStyle
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x21E3CF0", Offset = "0x21E3CF0", VA = "0x21E3CF0")]
			get
			{
				return default(GlareStyle);
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x21E3D20", Offset = "0x21E3D20", VA = "0x21E3D20")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		internal float glareSample0Scattering
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x21E3D58", Offset = "0x21E3D58", VA = "0x21E3D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x21E3D88", Offset = "0x21E3D88", VA = "0x21E3D88")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		internal float glareSample0Angle
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x21E3DC0", Offset = "0x21E3DC0", VA = "0x21E3DC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x21E3DF0", Offset = "0x21E3DF0", VA = "0x21E3DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		internal float glareSample0Intensity
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x21E3E28", Offset = "0x21E3E28", VA = "0x21E3E28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x21DE13C", Offset = "0x21DE13C", VA = "0x21DE13C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		internal float glareSample0Offset
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x21E3E58", Offset = "0x21E3E58", VA = "0x21E3E58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x21E3E88", Offset = "0x21E3E88", VA = "0x21E3E88")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		internal float glareSample1Scattering
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x21E3EC0", Offset = "0x21E3EC0", VA = "0x21E3EC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x21E3EF0", Offset = "0x21E3EF0", VA = "0x21E3EF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		internal float glareSample1Angle
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x21E3F28", Offset = "0x21E3F28", VA = "0x21E3F28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x21E3F58", Offset = "0x21E3F58", VA = "0x21E3F58")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		internal float glareSample1Intensity
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x21E3F90", Offset = "0x21E3F90", VA = "0x21E3F90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x21DE244", Offset = "0x21DE244", VA = "0x21DE244")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		internal float glareSample1Offset
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x21E3FC0", Offset = "0x21E3FC0", VA = "0x21E3FC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x21E3FF0", Offset = "0x21E3FF0", VA = "0x21E3FF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		internal float glareSample2Scattering
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x21E4028", Offset = "0x21E4028", VA = "0x21E4028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x21E4058", Offset = "0x21E4058", VA = "0x21E4058")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		internal float glareSample2Angle
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x21E4090", Offset = "0x21E4090", VA = "0x21E4090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x21E40C0", Offset = "0x21E40C0", VA = "0x21E40C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		internal float glareSample2Intensity
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x21E40F8", Offset = "0x21E40F8", VA = "0x21E40F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x21DE34C", Offset = "0x21DE34C", VA = "0x21DE34C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		internal float glareSample2Offset
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x21E4128", Offset = "0x21E4128", VA = "0x21E4128")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x21E4158", Offset = "0x21E4158", VA = "0x21E4158")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		internal float glareSample3Scattering
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x21E4190", Offset = "0x21E4190", VA = "0x21E4190")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x21E41C0", Offset = "0x21E41C0", VA = "0x21E41C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		internal float glareSample3Angle
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x21E41F8", Offset = "0x21E41F8", VA = "0x21E41F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x21E4228", Offset = "0x21E4228", VA = "0x21E4228")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		internal float glareSample3Intensity
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x21E4260", Offset = "0x21E4260", VA = "0x21E4260")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x21DE454", Offset = "0x21DE454", VA = "0x21DE454")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		internal float glareSample3Offset
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x21E4290", Offset = "0x21E4290", VA = "0x21E4290")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x21E42C0", Offset = "0x21E42C0", VA = "0x21E42C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x21DD890", Offset = "0x21DD890", VA = "0x21DD890")]
		internal void SetLensFlarePreset(LensFlareStyle lensFlareStyle)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x21DE55C", Offset = "0x21DE55C", VA = "0x21DE55C")]
		internal void SetGlarePreset(GlareStyle glareStyle)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x21DEBE4", Offset = "0x21DEBE4", VA = "0x21DEBE4")]
		protected Settings()
		{
		}
	}
}
namespace MK.Glow.Legacy
{
	[Token(Token = "0x200021A")]
	internal class CameraDataLegacy : CameraData
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x21DA6B4", Offset = "0x21DA6B4", VA = "0x21DA6B4")]
		public static implicit operator CameraDataLegacy(Camera input)
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x21DA8BC", Offset = "0x21DA8BC", VA = "0x21DA8BC")]
		public CameraDataLegacy()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD80B0", Offset = "0xBD80B0")]
	public class MKGlow : MonoBehaviour
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398B")]
		public bool allowGeometryShaders;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool allowComputeShaders;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB0C")]
		public RenderPriority renderPriority;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DebugView debugView;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quality quality;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AntiFlickerMode antiFlickerMode;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3993")]
		public Workflow workflow;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LayerMask selectiveRenderLayerMask;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF04B8", Offset = "0xBF04B8")]
		public float anamorphicRatio;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0504", Offset = "0xBF0504")]
		public float lumaScale;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF054C", Offset = "0xBF054C")]
		public float blooming;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0xBF0594", Offset = "0xBF0594")]
		public MinMaxRange bloomThreshold;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x399B")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF05DC", Offset = "0xBF05DC")]
		public float bloomScattering;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float bloomIntensity;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB1C")]
		public bool allowLensSurface;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lensSurfaceDirtTexture;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensSurfaceDirtIntensity;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lensSurfaceDiffractionTexture;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39A3")]
		public float lensSurfaceDiffractionIntensity;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool allowLensFlare;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB24")]
		public LensFlareStyle lensFlareStyle;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0628", Offset = "0xBF0628")]
		public float lensFlareGhostFade;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensFlareGhostIntensity;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0xBF0670", Offset = "0xBF0670")]
		public MinMaxRange lensFlareThreshold;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39AB")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF06B8", Offset = "0xBF06B8")]
		public float lensFlareScattering;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D lensFlareColorRamp;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0700", Offset = "0xBF0700")]
		public float lensFlareChromaticAberration;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF074C", Offset = "0xBF074C")]
		public int lensFlareGhostCount;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0798", Offset = "0xBF0798")]
		public float lensFlareGhostDispersal;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF07E4", Offset = "0xBF07E4")]
		public float lensFlareHaloFade;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39B3")]
		public float lensFlareHaloIntensity;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF082C", Offset = "0xBF082C")]
		public float lensFlareHaloSize;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB34")]
		public bool allowGlare;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0874", Offset = "0xBF0874")]
		public float glareBlend;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float glareIntensity;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF08BC", Offset = "0xBF08BC")]
		public float glareAngle;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39BB")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0xBF0904", Offset = "0xBF0904")]
		public MinMaxRange glareThreshold;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF094C", Offset = "0xBF094C")]
		public int glareStreaks;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB3C")]
		public GlareStyle glareStyle;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0998", Offset = "0xBF0998")]
		public float glareScattering;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF09E0", Offset = "0xBF09E0")]
		public float glareSample0Scattering;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0A28", Offset = "0xBF0A28")]
		public float glareSample0Angle;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C3")]
		public float glareSample0Intensity;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0A70", Offset = "0xBF0A70")]
		public float glareSample0Offset;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0ABC", Offset = "0xBF0ABC")]
		public float glareSample1Scattering;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0B04", Offset = "0xBF0B04")]
		public float glareSample1Angle;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float glareSample1Intensity;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0B4C", Offset = "0xBF0B4C")]
		public float glareSample1Offset;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39CB")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0B98", Offset = "0xBF0B98")]
		public float glareSample2Scattering;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0BE0", Offset = "0xBF0BE0")]
		public float glareSample2Angle;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB4C")]
		public float glareSample2Intensity;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0C28", Offset = "0xBF0C28")]
		public float glareSample2Offset;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0C74", Offset = "0xBF0C74")]
		public float glareSample3Scattering;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0CBC", Offset = "0xBF0CBC")]
		public float glareSample3Angle;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39D3")]
		public float glareSample3Intensity;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0D04", Offset = "0xBF0D04")]
		public float glareSample3Offset;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8BC")]
		private Effect _effect;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget _source;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget _destination;

		[Token(Token = "0x170001B0")]
		private Camera renderingCamera
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x21DA8EC", Offset = "0x21DA8EC", VA = "0x21DA8EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x21DA970", Offset = "0x21DA970", VA = "0x21DA970")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC1B2C0", Offset = "0xC1B2C0")]
		private void LoadMobilePreset()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x21DAA10", Offset = "0x21DAA10", VA = "0x21DAA10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xC1B324", Offset = "0xC1B324")]
		private void LoadQualityPreset()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x21DAAB8", Offset = "0x21DAAB8", VA = "0x21DAAB8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x21DAC34", Offset = "0x21DAC34", VA = "0x21DAC34")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x21DAC7C", Offset = "0x21DAC7C", VA = "0x21DAC7C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x21DC340", Offset = "0x21DC340", VA = "0x21DC340")]
		public MKGlow()
		{
		}
	}
	[Token(Token = "0x200021C")]
	internal sealed class SettingsLegacy : Settings
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x21DB1A0", Offset = "0x21DB1A0", VA = "0x21DB1A0")]
		public static implicit operator SettingsLegacy(MKGlow input)
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x21DC898", Offset = "0x21DC898", VA = "0x21DC898")]
		public SettingsLegacy()
		{
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x200021D")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VolumetricFog fog;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39DA")]
		private bool isSpherical;

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x24CFBD8", Offset = "0x24CFBD8", VA = "0x24CFBD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x24CFDB0", Offset = "0x24CFDB0", VA = "0x24CFDB0")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x24CFEF8", Offset = "0x24CFEF8", VA = "0x24CFEF8")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x24D0040", Offset = "0x24D0040", VA = "0x24D0040")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x24D0298", Offset = "0x24D0298", VA = "0x24D0298")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x24D02C8", Offset = "0x24D02C8", VA = "0x24D02C8")]
		public void UpdateFogAreaExtents()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x24D0B68", Offset = "0x24D0B68", VA = "0x24D0B68")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4000DD1")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0D50", Offset = "0xBF0D50")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0DB4", Offset = "0xBF0DB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0DB4", Offset = "0xBF0DB4")]
		public float targetFogAlpha;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0E50", Offset = "0xBF0E50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF0E50", Offset = "0xBF0E50")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0EEC", Offset = "0xBF0EEC")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39E2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0F50", Offset = "0xBF0F50")]
		public Color targetFogColor;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF0FB4", Offset = "0xBF0FB4")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF1018", Offset = "0xBF1018")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF107C", Offset = "0xBF107C")]
		public bool enableLightColorTransition;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF10E0", Offset = "0xBF10E0")]
		public Color targetLightColor;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF1144", Offset = "0xBF1144")]
		public float transitionDuration;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39EA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF11A8", Offset = "0xBF11A8")]
		public Collider targetCollider;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool cameraInside;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EB64")]
		private VolumetricFog fog;

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x24D0B98", Offset = "0x24D0B98", VA = "0x24D0B98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x24D1038", Offset = "0x24D1038", VA = "0x24D1038")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x24D1880", Offset = "0x24D1880", VA = "0x24D1880")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x24D1E44", Offset = "0x24D1E44", VA = "0x24D1E44")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x200021F")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x170001B1")]
		VolumetricFog fog
		{
			[Token(Token = "0x6000E3A")]
			get;
			[Token(Token = "0x6000E3B")]
			set;
		}

		[Token(Token = "0x6000E3C")]
		void DestroySelf();
	}
	[Token(Token = "0x2000220")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4000DE0")]
		Clear = 0,
		[Token(Token = "0x4000DE1")]
		Mist = 10,
		[Token(Token = "0x4000DE2")]
		WindyMist = 11,
		[Token(Token = "0x4000DE3")]
		LowClouds = 20,
		[Token(Token = "0x4000DE4")]
		SeaClouds = 21,
		[Token(Token = "0x4000DE5")]
		GroundFog = 30,
		[Token(Token = "0x4000DE6")]
		FrostedGround = 31,
		[Token(Token = "0x4000DE7")]
		FoggyLake = 32,
		[Token(Token = "0x4000DE8")]
		Fog = 41,
		[Token(Token = "0x4000DE9")]
		HeavyFog = 42,
		[Token(Token = "0x4000DEA")]
		SandStorm1 = 50,
		[Token(Token = "0x4000DEB")]
		Smoke = 51,
		[Token(Token = "0x4000DEC")]
		ToxicSwamp = 52,
		[Token(Token = "0x4000DED")]
		SandStorm2 = 53,
		[Token(Token = "0x4000DEE")]
		WorldEdge = 200,
		[Token(Token = "0x4000DEF")]
		Custom = 1000
	}
	[Token(Token = "0x2000221")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x4000DF1")]
		AutoDetectInEditor,
		[Token(Token = "0x4000DF2")]
		ForcedOn,
		[Token(Token = "0x4000DF3")]
		ForcedOff
	}
	[Token(Token = "0x2000222")]
	public enum TRANSPARENT_PASS_MODE
	{
		[Token(Token = "0x4000DF5")]
		None,
		[Token(Token = "0x4000DF6")]
		ScreenDirect,
		[Token(Token = "0x4000DF7")]
		BlendPass
	}
	[Token(Token = "0x2000223")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x4000DF9")]
		Classic,
		[Token(Token = "0x4000DFA")]
		Natural,
		[Token(Token = "0x4000DFB")]
		SingleLight
	}
	[Token(Token = "0x2000224")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x4000DFD")]
		Realtime,
		[Token(Token = "0x4000DFE")]
		Discrete
	}
	[Token(Token = "0x2000225")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD81B4", Offset = "0xBD81B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD81B4", Offset = "0xBD81B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD81B4", Offset = "0xBD81B4")]
	public class VolumetricFog : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		private class FogOfWarTransition
		{
			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int y;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B0F")]
			public float startTime;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float startDelay;

			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC74")]
			public float duration;

			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte initialAlpha;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte targetAlpha;

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0x24ED938", Offset = "0x24ED938", VA = "0x24ED938")]
			public FogOfWarTransition()
			{
			}
		}

		[Token(Token = "0x4000DFF")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x4000E00")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x4000E01")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x4000E02")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x4000E03")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x4000E04")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x4000E05")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x4000E06")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x4000E07")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x4000E08")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x4000E09")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x4000E0A")]
		public const string SKW_FOG_TRANSPARENT_BLENDPASS = "FOG_TRANSPARENCY_BLEND_PASS";

		[Token(Token = "0x4000E0B")]
		private const float TIME_BETWEEN_TEXTURE_UPDATES = 0.2f;

		[Token(Token = "0x4000E0C")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x4000E0D")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x4000E0E")]
		private const string VFM_BUILD_HINT = "VFMBuildHint743";

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VolumetricFog _fog;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A31")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _debugDepthPass;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBA4")]
		[SerializeField]
		private TRANSPARENT_PASS_MODE _transparencyMode;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _renderOpaque;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A39")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _density;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBAC")]
		[SerializeField]
		private float _noiseStrength;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _maxFogLength;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A41")]
		[SerializeField]
		private float _distanceFallOff;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _height;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBB4")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A49")]
		[SerializeField]
		private float _alpha;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBBC")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _specularThreshold;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _specularIntensity;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A51")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBC4")]
		[SerializeField]
		private int _updateTextureSpread;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A59")]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _skySpeed;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBCC")]
		[SerializeField]
		private float _skyNoiseStrength;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _skyAlpha;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _skyDepth;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A61")]
		[SerializeField]
		private float _fogVoidFallOff;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBD4")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A69")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _fogAreaFallOff;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBDC")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x4000E42")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBE4")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A79")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBEC")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _downsampling;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A81")]
		[SerializeField]
		private float _edgeThreshold;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _stepping;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8CC")]
		[SerializeField]
		private float _steppingNear;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _ditherStrength;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A88")]
		[SerializeField]
		private float _lightScatteringSpread;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int _lightScatteringSamples;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBF4")]
		[SerializeField]
		private float _lightScatteringWeight;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _lightScatteringIllumination;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _lightScatteringDecay;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _lightScatteringExposure;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A90")]
		[SerializeField]
		private float _lightScatteringJittering;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EBFC")]
		[SerializeField]
		private float _fogBlurDepth;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsStrength;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A98")]
		[SerializeField]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int _sunShadowsResolution;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC04")]
		[SerializeField]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsCancellation;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AA0")]
		[SerializeField]
		private float _turbulenceStrength;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC0C")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initialFogAlpha;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float targetFogAlpha;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AA8")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC14")]
		private bool transitionAlpha;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionColor;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionSpecularColor;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionLightColor;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AB0")]
		private bool targetColorActive;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC1C")]
		private bool targetLightColorActive;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color initialFogColor;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color targetFogColor;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AB8")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color initialLightColor;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC24")]
		private Color targetLightColor;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float transitionDuration;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float transitionStartTime;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentFogAlpha;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC0")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color currentFogColor;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC2C")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color currentLightColor;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentFogAltitude;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC8")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera mainCamera;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC34")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material blurMat;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMat;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AD0")]
		private RenderTexture depthTexture;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC3C")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light[] pointLightComponents;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light[] lastFoundLights;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light[] lightBuffer;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AD8")]
		private GameObject[] currentLights;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8D4")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader depthShader;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject depthCamObj;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera depthCam;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3ADF")]
		private float lastTextureUpdate;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC44")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] noiseColors;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] adjustedColors;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunLightIntensity;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AE7")]
		private bool needUpdateTexture;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC4C")]
		private int updatingTextureSlice;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AEF")]
		private Light sunLight;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 oldSunPos;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC54")]
		private float sunFade;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera depthSunCam;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader depthSunShader;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AF7")]
		private bool needUpdateDepthSunTexture;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC5C")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material chaosLerpMat;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float turbAcum;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTextureDescriptor defaultDesc;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AFF")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC64")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B07")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC6C")]
		private List<FogOfWarTransition> fowTransitionList;

		[Token(Token = "0x170001B2")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x24D0BD4", Offset = "0x24D0BD4", VA = "0x24D0BD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x24D1F74", Offset = "0x24D1F74", VA = "0x24D1F74")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x24D1FA4", Offset = "0x24D1FA4", VA = "0x24D1FA4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x24D4B98", Offset = "0x24D4B98", VA = "0x24D4B98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x24D4BDC", Offset = "0x24D4BDC", VA = "0x24D4BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x24D4C90", Offset = "0x24D4C90", VA = "0x24D4C90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x24D4CD4", Offset = "0x24D4CD4", VA = "0x24D4CD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public TRANSPARENT_PASS_MODE transparencyMode
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x24D4D88", Offset = "0x24D4D88", VA = "0x24D4D88")]
			get
			{
				return default(TRANSPARENT_PASS_MODE);
			}
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x24D4DB8", Offset = "0x24D4DB8", VA = "0x24D4DB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x24D65F4", Offset = "0x24D65F4", VA = "0x24D65F4")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x24D6624", Offset = "0x24D6624", VA = "0x24D6624")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public bool renderOpaque
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x24D6EB8", Offset = "0x24D6EB8", VA = "0x24D6EB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x24D6EFC", Offset = "0x24D6EFC", VA = "0x24D6EFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public GameObject sun
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x24D7000", Offset = "0x24D7000", VA = "0x24D7000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x24D7030", Offset = "0x24D7030", VA = "0x24D7030")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x24D72DC", Offset = "0x24D72DC", VA = "0x24D72DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x24D7320", Offset = "0x24D7320", VA = "0x24D7320")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float density
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x24D73E8", Offset = "0x24D73E8", VA = "0x24D73E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x24D7418", Offset = "0x24D7418", VA = "0x24D7418")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float noiseStrength
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x24D7768", Offset = "0x24D7768", VA = "0x24D7768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x24D7798", Offset = "0x24D7798", VA = "0x24D7798")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float distance
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x24D7858", Offset = "0x24D7858", VA = "0x24D7858")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x24D7888", Offset = "0x24D7888", VA = "0x24D7888")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float maxFogLength
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x24D7930", Offset = "0x24D7930", VA = "0x24D7930")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x24D7960", Offset = "0x24D7960", VA = "0x24D7960")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x24D79FC", Offset = "0x24D79FC", VA = "0x24D79FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x24D7A2C", Offset = "0x24D7A2C", VA = "0x24D7A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x24D7AC8", Offset = "0x24D7AC8", VA = "0x24D7AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x24D7AF8", Offset = "0x24D7AF8", VA = "0x24D7AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float height
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x24D7BA0", Offset = "0x24D7BA0", VA = "0x24D7BA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x24D7BD0", Offset = "0x24D7BD0", VA = "0x24D7BD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float baselineHeight
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x24D7D54", Offset = "0x24D7D54", VA = "0x24D7D54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x24D7D84", Offset = "0x24D7D84", VA = "0x24D7D84")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x24D7E80", Offset = "0x24D7E80", VA = "0x24D7E80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x24D7EC4", Offset = "0x24D7EC4", VA = "0x24D7EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x24D7F98", Offset = "0x24D7F98", VA = "0x24D7F98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x24D7FC8", Offset = "0x24D7FC8", VA = "0x24D7FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float noiseScale
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x24D8064", Offset = "0x24D8064", VA = "0x24D8064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x24D8094", Offset = "0x24D8094", VA = "0x24D8094")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float alpha
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x24D813C", Offset = "0x24D813C", VA = "0x24D813C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x24D816C", Offset = "0x24D816C", VA = "0x24D816C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public Color color
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x24D822C", Offset = "0x24D822C", VA = "0x24D822C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x24D8274", Offset = "0x24D8274", VA = "0x24D8274")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public Color specularColor
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x24D83A0", Offset = "0x24D83A0", VA = "0x24D83A0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x24D83E8", Offset = "0x24D83E8", VA = "0x24D83E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float specularThreshold
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x24D8524", Offset = "0x24D8524", VA = "0x24D8524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x24D8554", Offset = "0x24D8554", VA = "0x24D8554")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public float specularIntensity
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x24D85FC", Offset = "0x24D85FC", VA = "0x24D85FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x24D862C", Offset = "0x24D862C", VA = "0x24D862C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x24D86E0", Offset = "0x24D86E0", VA = "0x24D86E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x24D8720", Offset = "0x24D8720", VA = "0x24D8720")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float lightIntensity
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x24D88B8", Offset = "0x24D88B8", VA = "0x24D88B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x24D88E8", Offset = "0x24D88E8", VA = "0x24D88E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public Color lightColor
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x24D899C", Offset = "0x24D899C", VA = "0x24D899C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x24D89E4", Offset = "0x24D89E4", VA = "0x24D89E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x24D8B20", Offset = "0x24D8B20", VA = "0x24D8B20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x24D8B50", Offset = "0x24D8B50", VA = "0x24D8B50")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public float speed
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x24D8BD0", Offset = "0x24D8BD0", VA = "0x24D8BD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x24D8C00", Offset = "0x24D8C00", VA = "0x24D8C00")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x24D914C", Offset = "0x24D914C", VA = "0x24D914C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x24D918C", Offset = "0x24D918C", VA = "0x24D918C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public Color skyColor
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x24D9314", Offset = "0x24D9314", VA = "0x24D9314")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x24D935C", Offset = "0x24D935C", VA = "0x24D935C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public float skyHaze
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x24D9450", Offset = "0x24D9450", VA = "0x24D9450")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x24D9480", Offset = "0x24D9480", VA = "0x24D9480")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public float skySpeed
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x24D9528", Offset = "0x24D9528", VA = "0x24D9528")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x24D9558", Offset = "0x24D9558", VA = "0x24D9558")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x24D95EC", Offset = "0x24D95EC", VA = "0x24D95EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x24D961C", Offset = "0x24D961C", VA = "0x24D961C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public float skyAlpha
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x24D96C4", Offset = "0x24D96C4", VA = "0x24D96C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x24D96F4", Offset = "0x24D96F4", VA = "0x24D96F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public float skyDepth
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x24D979C", Offset = "0x24D979C", VA = "0x24D979C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x24D97CC", Offset = "0x24D97CC", VA = "0x24D97CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public GameObject character
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x24D9868", Offset = "0x24D9868", VA = "0x24D9868")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x24D9898", Offset = "0x24D9898", VA = "0x24D9898")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x24D9AD0", Offset = "0x24D9AD0", VA = "0x24D9AD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x24D9B00", Offset = "0x24D9B00", VA = "0x24D9B00")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x24D9BA8", Offset = "0x24D9BA8", VA = "0x24D9BA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x24D9A28", Offset = "0x24D9A28", VA = "0x24D9A28")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x24D9BD8", Offset = "0x24D9BD8", VA = "0x24D9BD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x24D9C18", Offset = "0x24D9C18", VA = "0x24D9C18")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x24D9DA0", Offset = "0x24D9DA0", VA = "0x24D9DA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x24D9DD0", Offset = "0x24D9DD0", VA = "0x24D9DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x24D9E78", Offset = "0x24D9E78", VA = "0x24D9E78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x24D9EA8", Offset = "0x24D9EA8", VA = "0x24D9EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC3918C", Offset = "0xC3918C")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x24D9F50", Offset = "0x24D9F50", VA = "0x24D9F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x24D9F94", Offset = "0x24D9F94", VA = "0x24D9F94")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x24D9FE0", Offset = "0x24D9FE0", VA = "0x24D9FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x24DA010", Offset = "0x24DA010", VA = "0x24DA010")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x24DA158", Offset = "0x24DA158", VA = "0x24DA158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x24DA188", Offset = "0x24DA188", VA = "0x24DA188")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x24DA224", Offset = "0x24DA224", VA = "0x24DA224")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x24D0994", Offset = "0x24D0994", VA = "0x24D0994")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x24DA254", Offset = "0x24DA254", VA = "0x24DA254")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x24D07F4", Offset = "0x24D07F4", VA = "0x24D07F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x24DA294", Offset = "0x24DA294", VA = "0x24DA294")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x24D0ACC", Offset = "0x24D0ACC", VA = "0x24D0ACC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x24DA2C4", Offset = "0x24DA2C4", VA = "0x24DA2C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x24D0A30", Offset = "0x24D0A30", VA = "0x24D0A30")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x24DA2F4", Offset = "0x24DA2F4", VA = "0x24DA2F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x24DA338", Offset = "0x24DA338", VA = "0x24DA338")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x24DAA58", Offset = "0x24DAA58", VA = "0x24DAA58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x24DAA88", Offset = "0x24DAA88", VA = "0x24DAA88")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x24DABE8", Offset = "0x24DABE8", VA = "0x24DABE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x24DAC18", Offset = "0x24DAC18", VA = "0x24DAC18")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public int downsampling
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x24DACB4", Offset = "0x24DACB4", VA = "0x24DACB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x24DACE4", Offset = "0x24DACE4", VA = "0x24DACE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool edgeImprove
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x24DAD70", Offset = "0x24DAD70", VA = "0x24DAD70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x24DADB4", Offset = "0x24DADB4", VA = "0x24DADB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x24DAE88", Offset = "0x24DAE88", VA = "0x24DAE88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x24DAEB8", Offset = "0x24DAEB8", VA = "0x24DAEB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float stepping
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x24DAF60", Offset = "0x24DAF60", VA = "0x24DAF60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x24DAF90", Offset = "0x24DAF90", VA = "0x24DAF90")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float steppingNear
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x24DB038", Offset = "0x24DB038", VA = "0x24DB038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x24DB068", Offset = "0x24DB068", VA = "0x24DB068")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public bool dithering
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x24DB110", Offset = "0x24DB110", VA = "0x24DB110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x24DB154", Offset = "0x24DB154", VA = "0x24DB154")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public float ditherStrength
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x24DB21C", Offset = "0x24DB21C", VA = "0x24DB21C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x24DB24C", Offset = "0x24DB24C", VA = "0x24DB24C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x24DB2E8", Offset = "0x24DB2E8", VA = "0x24DB2E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x24DB32C", Offset = "0x24DB32C", VA = "0x24DB32C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x24DB3F4", Offset = "0x24DB3F4", VA = "0x24DB3F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x24DB424", Offset = "0x24DB424", VA = "0x24DB424")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x24DB4C0", Offset = "0x24DB4C0", VA = "0x24DB4C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x24DB4F0", Offset = "0x24DB4F0", VA = "0x24DB4F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x24DB584", Offset = "0x24DB584", VA = "0x24DB584")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x24DB5B4", Offset = "0x24DB5B4", VA = "0x24DB5B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x24DB650", Offset = "0x24DB650", VA = "0x24DB650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x24DB680", Offset = "0x24DB680", VA = "0x24DB680")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x24DB71C", Offset = "0x24DB71C", VA = "0x24DB71C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x24DB74C", Offset = "0x24DB74C", VA = "0x24DB74C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x24DB7E8", Offset = "0x24DB7E8", VA = "0x24DB7E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x24DB818", Offset = "0x24DB818", VA = "0x24DB818")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x24DB8B4", Offset = "0x24DB8B4", VA = "0x24DB8B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x24DB8E4", Offset = "0x24DB8E4", VA = "0x24DB8E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public bool fogBlur
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x24DB980", Offset = "0x24DB980", VA = "0x24DB980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x24DB9C4", Offset = "0x24DB9C4", VA = "0x24DB9C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x24DBA8C", Offset = "0x24DBA8C", VA = "0x24DBA8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x24DBABC", Offset = "0x24DBABC", VA = "0x24DBABC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool sunShadows
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x24DBB58", Offset = "0x24DBB58", VA = "0x24DBB58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x24DBB9C", Offset = "0x24DBB9C", VA = "0x24DBB9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x24DBDEC", Offset = "0x24DBDEC", VA = "0x24DBDEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x24DBE1C", Offset = "0x24DBE1C", VA = "0x24DBE1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x24DBEB8", Offset = "0x24DBEB8", VA = "0x24DBEB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x24DBEE8", Offset = "0x24DBEE8", VA = "0x24DBEE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x24DBF94", Offset = "0x24DBF94", VA = "0x24DBF94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x24DBFC4", Offset = "0x24DBFC4", VA = "0x24DBFC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x24DC060", Offset = "0x24DC060", VA = "0x24DC060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x24DC090", Offset = "0x24DC090", VA = "0x24DC090")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x24DC140", Offset = "0x24DC140", VA = "0x24DC140")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x24DC170", Offset = "0x24DC170", VA = "0x24DC170")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x24DC21C", Offset = "0x24DC21C", VA = "0x24DC21C")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x24DC24C", Offset = "0x24DC24C", VA = "0x24DC24C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x24DC2F0", Offset = "0x24DC2F0", VA = "0x24DC2F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x24DC320", Offset = "0x24DC320", VA = "0x24DC320")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x24DC3BC", Offset = "0x24DC3BC", VA = "0x24DC3BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x24DC3EC", Offset = "0x24DC3EC", VA = "0x24DC3EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x24DC488", Offset = "0x24DC488", VA = "0x24DC488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x24DC4B8", Offset = "0x24DC4B8", VA = "0x24DC4B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public bool useXYPlane
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x24DC594", Offset = "0x24DC594", VA = "0x24DC594")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x24DC5D8", Offset = "0x24DC5D8", VA = "0x24DC5D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x24DC6D0", Offset = "0x24DC6D0", VA = "0x24DC6D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x24DC714", Offset = "0x24DC714", VA = "0x24DC714")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x24DC7C8", Offset = "0x24DC7C8", VA = "0x24DC7C8")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x24DC7F8", Offset = "0x24DC7F8", VA = "0x24DC7F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x24DC878", Offset = "0x24DC878", VA = "0x24DC878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x24EB30C", Offset = "0x24EB30C", VA = "0x24EB30C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x24EB350", Offset = "0x24EB350", VA = "0x24EB350")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x24EB424", Offset = "0x24EB424", VA = "0x24EB424")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x24EB464", Offset = "0x24EB464", VA = "0x24EB464")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x24EB5E0", Offset = "0x24EB5E0", VA = "0x24EB5E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x24EB620", Offset = "0x24EB620", VA = "0x24EB620")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x24EB7FC", Offset = "0x24EB7FC", VA = "0x24EB7FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x24EB82C", Offset = "0x24EB82C", VA = "0x24EB82C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x24EB8F0", Offset = "0x24EB8F0", VA = "0x24EB8F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x24EB920", Offset = "0x24EB920", VA = "0x24EB920")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x24EB9A8", Offset = "0x24EB9A8", VA = "0x24EB9A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x24EB9D8", Offset = "0x24EB9D8", VA = "0x24EB9D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x24ED6A4", Offset = "0x24ED6A4", VA = "0x24ED6A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x24ED6D4", Offset = "0x24ED6D4", VA = "0x24ED6D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x24DC8A8", Offset = "0x24DC8A8", VA = "0x24DC8A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x24DCC0C", Offset = "0x24DCC0C", VA = "0x24DCC0C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x24DD684", Offset = "0x24DD684", VA = "0x24DD684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x24D0178", Offset = "0x24D0178", VA = "0x24D0178")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x24DE088", Offset = "0x24DE088", VA = "0x24DE088")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x24DE118", Offset = "0x24DE118", VA = "0x24DE118")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x24D64C0", Offset = "0x24D64C0", VA = "0x24D64C0")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6000EEA")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000EEB")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x24E2500", Offset = "0x24E2500", VA = "0x24E2500")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x24E2174", Offset = "0x24E2174", VA = "0x24E2174")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x24E2E18", Offset = "0x24E2E18", VA = "0x24E2E18")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x24E43D8", Offset = "0x24E43D8", VA = "0x24E43D8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x24E4550", Offset = "0x24E4550", VA = "0x24E4550")]
		internal void DoOnPreRender()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x24E46F0", Offset = "0x24E46F0", VA = "0x24E46F0")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x24E69E8", Offset = "0x24E69E8", VA = "0x24E69E8")]
		private void SetMaterialLightData(int k, Light lightComponent)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x24E75B0", Offset = "0x24E75B0", VA = "0x24E75B0")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x24E7658", Offset = "0x24E7658", VA = "0x24E7658")]
		private void SetBlurTexture(RenderTexture source)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x24E7C24", Offset = "0x24E7C24", VA = "0x24E7C24")]
		internal void DoOnPostRender()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x24E7E40", Offset = "0x24E7E40", VA = "0x24E7E40")]
		internal void DoOnPostRenderBlend(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x24DDF50", Offset = "0x24DDF50", VA = "0x24DDF50")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x24DBCA0", Offset = "0x24DBCA0", VA = "0x24DBCA0")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x24E807C", Offset = "0x24E807C", VA = "0x24E807C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x24D2038", Offset = "0x24D2038", VA = "0x24D2038")]
		private void UpdatePreset()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x24E826C", Offset = "0x24E826C", VA = "0x24E826C")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x24E8824", Offset = "0x24E8824", VA = "0x24E8824")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x24E0184", Offset = "0x24E0184", VA = "0x24E0184")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x24E0268", Offset = "0x24E0268", VA = "0x24E0268")]
		private void UpdateMaterialHeights()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x24D4E58", Offset = "0x24D4E58", VA = "0x24D4E58")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x24E3F78", Offset = "0x24E3F78", VA = "0x24E3F78")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x24D8CA8", Offset = "0x24D8CA8", VA = "0x24D8CA8")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x24E60A4", Offset = "0x24E60A4", VA = "0x24E60A4")]
		private void UpdateScatteringData()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x24D716C", Offset = "0x24D716C", VA = "0x24D716C")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x24DFF2C", Offset = "0x24DFF2C", VA = "0x24DFF2C")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x24DD0A4", Offset = "0x24DD0A4", VA = "0x24DD0A4")]
		private void UpdatePointLights()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x24D74D8", Offset = "0x24D74D8", VA = "0x24D74D8")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x24D66C4", Offset = "0x24D66C4", VA = "0x24D66C4")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x24E09BC", Offset = "0x24E09BC", VA = "0x24E09BC")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x24E6F80", Offset = "0x24E6F80", VA = "0x24E6F80")]
		private void ApplyChaos()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x24DD58C", Offset = "0x24DD58C", VA = "0x24DD58C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x24D145C", Offset = "0x24D145C", VA = "0x24D145C")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x24D1C84", Offset = "0x24D1C84", VA = "0x24D1C84")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x24D1554", Offset = "0x24D1554", VA = "0x24D1554")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x24D1CD0", Offset = "0x24D1CD0", VA = "0x24D1CD0")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x24D1660", Offset = "0x24D1660", VA = "0x24D1660")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x24D1D4C", Offset = "0x24D1D4C", VA = "0x24D1D4C")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x24D176C", Offset = "0x24D176C", VA = "0x24D176C")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x24D1DC8", Offset = "0x24D1DC8", VA = "0x24D1DC8")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x24E8B34", Offset = "0x24E8B34", VA = "0x24E8B34")]
		public GameObject GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x24E8C18", Offset = "0x24E8C18", VA = "0x24E8C18")]
		public void SetPointLight(int index, GameObject pointLight)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x24E8E48", Offset = "0x24E8E48", VA = "0x24E8E48")]
		public float GetPointLightRange(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x24E8F24", Offset = "0x24E8F24", VA = "0x24E8F24")]
		public void SetPointLightRange(int index, float range)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x24E9084", Offset = "0x24E9084", VA = "0x24E9084")]
		public float GetPointLightIntensity(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x24E9160", Offset = "0x24E9160", VA = "0x24E9160")]
		public void SetPointLightIntensity(int index, float intensity)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x24E92C0", Offset = "0x24E92C0", VA = "0x24E92C0")]
		public float GetPointLightIntensityMultiplier(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x24E939C", Offset = "0x24E939C", VA = "0x24E939C")]
		public void SetPointLightIntensityMultiplier(int index, float intensityMultiplier)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x24E94FC", Offset = "0x24E94FC", VA = "0x24E94FC")]
		public Vector3 GetPointLightPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x24E9658", Offset = "0x24E9658", VA = "0x24E9658")]
		public void SetPointLightPosition(int index, Vector3 position)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x24E987C", Offset = "0x24E987C", VA = "0x24E987C")]
		public Color GetPointLightColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x24E9968", Offset = "0x24E9968", VA = "0x24E9968")]
		public void SetPointLightColor(int index, Color color)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x24E9AF8", Offset = "0x24E9AF8", VA = "0x24E9AF8")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x24DA400", Offset = "0x24DA400", VA = "0x24DA400")]
		private void TrackPointLights()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x24E9BF4", Offset = "0x24E9BF4", VA = "0x24E9BF4")]
		private GameObject GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x24EA0EC", Offset = "0x24EA0EC", VA = "0x24EA0EC")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius)
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x24EA18C", Offset = "0x24EA18C", VA = "0x24EA18C")]
		public static VolumetricFog CreateFogArea(GameObject cameraGameObject, Vector3 position, float radius)
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x24EA7A8", Offset = "0x24EA7A8", VA = "0x24EA7A8")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x24EA870", Offset = "0x24EA870", VA = "0x24EA870")]
		public static VolumetricFog CreateFogArea(GameObject cameraGameObject, Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x24EA44C", Offset = "0x24EA44C", VA = "0x24EA44C")]
		private static void CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x24EABF8", Offset = "0x24EABF8", VA = "0x24EABF8")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x24EAC4C", Offset = "0x24EAC4C", VA = "0x24EAC4C")]
		public static void RemoveAllFogAreas(GameObject cameraGameObject)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x24DD334", Offset = "0x24DD334", VA = "0x24DD334")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x24DD3D8", Offset = "0x24DD3D8", VA = "0x24DD3D8")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x24E1AE8", Offset = "0x24E1AE8", VA = "0x24E1AE8")]
		private void FogOfWarUpdate()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x24EC270", Offset = "0x24EC270", VA = "0x24EC270")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x24EC2F8", Offset = "0x24EC2F8", VA = "0x24EC2F8")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x24ECE0C", Offset = "0x24ECE0C", VA = "0x24ECE0C")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x24EBA60", Offset = "0x24EBA60", VA = "0x24EBA60")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x24EBE64", Offset = "0x24EBE64", VA = "0x24EBE64")]
		private void AddFowOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x24ED968", Offset = "0x24ED968", VA = "0x24ED968")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8310", Offset = "0xBD8310")]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF2850", Offset = "0xBF2850")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x1700020D")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x24EE31C", Offset = "0x24EE31C", VA = "0x24EE31C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B388", Offset = "0xC1B388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x24EE34C", Offset = "0x24EE34C", VA = "0x24EE34C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B3C4", Offset = "0xC1B3C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x24EE384", Offset = "0x24EE384", VA = "0x24EE384")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x24EE67C", Offset = "0x24EE67C", VA = "0x24EE67C", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x24EE764", Offset = "0x24EE764", VA = "0x24EE764")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8400", Offset = "0xBD8400")]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF31C", Offset = "0xBDF31C")]
		private sealed class <OnPostRender>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC7C")]
			private object <>2__current;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VolumetricFogPreT <>4__this;

			[Token(Token = "0x170004C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C6B")]
				[Address(RVA = "0x24EF180", Offset = "0x24EF180", VA = "0x24EF180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C6D")]
				[Address(RVA = "0x24EF250", Offset = "0x24EF250", VA = "0x24EF250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0x24EEC2C", Offset = "0x24EEC2C", VA = "0x24EEC2C")]
			[DebuggerHidden]
			public <OnPostRender>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0x24EED8C", Offset = "0x24EED8C", VA = "0x24EED8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0x24EEDA0", Offset = "0x24EEDA0", VA = "0x24EEDA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0x24EF1B0", Offset = "0x24EF1B0", VA = "0x24EF1B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF288C", Offset = "0xBF288C")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x1700020E")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x24EE794", Offset = "0x24EE794", VA = "0x24EE794", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B400", Offset = "0xC1B400")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x24EE7C4", Offset = "0x24EE7C4", VA = "0x24EE7C4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B43C", Offset = "0xC1B43C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x24EE7FC", Offset = "0x24EE7FC", VA = "0x24EE7FC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x24EE93C", Offset = "0x24EE93C", VA = "0x24EE93C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x24EEB70", Offset = "0x24EEB70", VA = "0x24EEB70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B4B4", Offset = "0xC1B4B4")]
		private IEnumerator OnPostRender()
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x24EEC74", Offset = "0x24EEC74", VA = "0x24EEC74", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x24EED5C", Offset = "0x24EED5C", VA = "0x24EED5C")]
		public VolumetricFogPreT()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x2000228")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x4000EBA")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x4000EBB")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x4000EBC")]
		MobileFogOnlyGround,
		[Token(Token = "0x4000EBD")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x4000EBE")]
		MobileFogSimple,
		[Token(Token = "0x4000EBF")]
		MobileFogBasic
	}
	[Token(Token = "0x2000229")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1C1C45C", Offset = "0x1C1C45C", VA = "0x1C1C45C")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022A")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4000EC1")]
		Clear,
		[Token(Token = "0x4000EC2")]
		Mist,
		[Token(Token = "0x4000EC3")]
		WindyMist,
		[Token(Token = "0x4000EC4")]
		GroundFog,
		[Token(Token = "0x4000EC5")]
		Fog,
		[Token(Token = "0x4000EC6")]
		HeavyFog,
		[Token(Token = "0x4000EC7")]
		SandStorm,
		[Token(Token = "0x4000EC8")]
		Custom
	}
	[Token(Token = "0x200022B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD852C", Offset = "0xBD852C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD852C", Offset = "0xBD852C")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : MonoBehaviour
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8DC")]
		public FOG_TYPE effectType;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FOG_PRESET preset;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useFogVolumes;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableDithering;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B36")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF28C8", Offset = "0xBF28C8")]
		public float alpha;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2910", Offset = "0xBF2910")]
		public float noiseStrength;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2958", Offset = "0xBF2958")]
		public float distance;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF29A4", Offset = "0xBF29A4")]
		public float distanceFallOff;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF29F4", Offset = "0xBF29F4")]
		public float maxDistance;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2A40", Offset = "0xBF2A40")]
		public float maxDistanceFallOff;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B3E")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2A90", Offset = "0xBF2A90")]
		public float height;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2AD8", Offset = "0xBF2AD8")]
		public float heightFallOff;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EC9C")]
		public float baselineHeight;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool clipUnderBaseline;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2B20", Offset = "0xBF2B20")]
		public float turbulence;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2B68", Offset = "0xBF2B68")]
		public float speed;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B46")]
		public Color color;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color color2;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2BB4", Offset = "0xBF2BB4")]
		public float skyHaze;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2BFC", Offset = "0xBF2BFC")]
		public float skySpeed;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2C44", Offset = "0xBF2C44")]
		public float skyNoiseStrength;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2C8C", Offset = "0xBF2C8C")]
		public float skyAlpha;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4E")]
		public GameObject sun;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool fogOfWarEnabled;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECAC")]
		public Vector3 fogOfWarCenter;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 fogOfWarSize;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B56")]
		private Material fogMatAdv;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material fogMatFogSky;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECB4")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatVol;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatSimple;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatBasic;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B5E")]
		[SerializeField]
		private Material fogMat;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float initialFogAlpha;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECBC")]
		private float targetFogAlpha;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float transitionDuration;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B66")]
		private float transitionStartTime;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float currentFogAlpha;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECC4")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera currentCamera;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B6E")]
		private Light sunLight;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 sunDirection;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECCC")]
		private Color sunColor;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunIntensity;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B76")]
		private bool matOrtho;

		[Token(Token = "0x1700020F")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1C17C14", Offset = "0x1C17C14", VA = "0x1C17C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x1C180E4", Offset = "0x1C180E4", VA = "0x1C180E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1C17EF4", Offset = "0x1C17EF4", VA = "0x1C17EF4")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1C18114", Offset = "0x1C18114", VA = "0x1C18114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1C19B1C", Offset = "0x1C19B1C", VA = "0x1C19B1C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1C19B4C", Offset = "0x1C19B4C", VA = "0x1C19B4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1C18154", Offset = "0x1C18154", VA = "0x1C18154")]
		private void Init()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1C1A5C0", Offset = "0x1C1A5C0", VA = "0x1C1A5C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1C1B994", Offset = "0x1C1B994", VA = "0x1C1B994")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1C1C518", Offset = "0x1C1C518", VA = "0x1C1C518")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1C1CBF0", Offset = "0x1C1CBF0", VA = "0x1C1CBF0")]
		private void ResetMaterial()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1C182A4", Offset = "0x1C182A4", VA = "0x1C182A4")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1C1B018", Offset = "0x1C1B018", VA = "0x1C1B018")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1C1B1CC", Offset = "0x1C1B1CC", VA = "0x1C1B1CC")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1C1CC80", Offset = "0x1C1CC80", VA = "0x1C1CC80")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1C1CD60", Offset = "0x1C1CD60", VA = "0x1C1CD60")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1C1A404", Offset = "0x1C1A404", VA = "0x1C1A404")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1C1D210", Offset = "0x1C1D210", VA = "0x1C1D210")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1C1DC24", Offset = "0x1C1DC24", VA = "0x1C1DC24")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1C1CE54", Offset = "0x1C1CE54", VA = "0x1C1CE54")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1C1CDAC", Offset = "0x1C1CDAC", VA = "0x1C1CDAC")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1C1E4BC", Offset = "0x1C1E4BC", VA = "0x1C1E4BC")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x200022C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD865C", Offset = "0xBD865C")]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2D10", Offset = "0xBF2D10")]
		public float alpha;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2D58", Offset = "0xBF2D58")]
		public float noiseStrength;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2DA0", Offset = "0xBF2DA0")]
		public float distance;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2DEC", Offset = "0xBF2DEC")]
		public float distanceFallOff;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2E34", Offset = "0xBF2E34")]
		public float height;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B7E")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2E7C", Offset = "0xBF2E7C")]
		public float heightFallOff;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float baselineHeight;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECDC")]
		public Color color;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject sun;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light sunLight;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 sunDirection;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B86")]
		private Color sunColor;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float sunIntensity;

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1C1E788", Offset = "0x1C1E788", VA = "0x1C1E788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1C1E7F8", Offset = "0x1C1E7F8", VA = "0x1C1E7F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1C1E828", Offset = "0x1C1E828", VA = "0x1C1E828")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1C1E7B8", Offset = "0x1C1E7B8", VA = "0x1C1E7B8")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1C1F288", Offset = "0x1C1F288", VA = "0x1C1F288")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1C1EC2C", Offset = "0x1C1EC2C", VA = "0x1C1EC2C")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1C1F500", Offset = "0x1C1F500", VA = "0x1C1F500")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8E4")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMat;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8D")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x17000211")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x1C1F6D0", Offset = "0x1C1F6D0", VA = "0x1C1F6D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1C1F8A8", Offset = "0x1C1F8A8", VA = "0x1C1F8A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1C1FB24", Offset = "0x1C1FB24", VA = "0x1C1FB24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1C1FCD0", Offset = "0x1C1FCD0", VA = "0x1C1FCD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1C1F960", Offset = "0x1C1F960", VA = "0x1C1F960")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1C1FE84", Offset = "0x1C1FE84", VA = "0x1C1FE84")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1C202E8", Offset = "0x1C202E8", VA = "0x1C202E8")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1C1FF2C", Offset = "0x1C1FF2C", VA = "0x1C1FF2C")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1C20DB4", Offset = "0x1C20DB4", VA = "0x1C20DB4")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1C2150C", Offset = "0x1C2150C", VA = "0x1C2150C")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF2EC4", Offset = "0xBF2EC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2EC4", Offset = "0xBF2EC4")]
		public float targetFogAlpha;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF2F60", Offset = "0xBF2F60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF2F60", Offset = "0xBF2F60")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF2FFC", Offset = "0xBF2FFC")]
		public float transitionDuration;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DynamicFog fog;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool cameraInside;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1C21550", Offset = "0x1C21550", VA = "0x1C21550")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1C2158C", Offset = "0x1C2158C", VA = "0x1C2158C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1C2179C", Offset = "0x1C2179C", VA = "0x1C2179C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1C21990", Offset = "0x1C21990", VA = "0x1C21990")]
		public FogVolume()
		{
		}
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x200022F")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20005E2")]
		public class ListIndices
		{
			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<int> m_listIndices;

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x279EFD0", Offset = "0x279EFD0", VA = "0x279EFD0")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E3")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4002938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int _boneIndex0;

			[Token(Token = "0x4002939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B9D")]
			public int _boneIndex1;

			[Token(Token = "0x400293A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int _boneIndex2;

			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECF4")]
			public int _boneIndex3;

			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float _boneWeight0;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float _boneWeight1;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float _boneWeight2;

			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BA5")]
			public float _boneWeight3;

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0x279F30C", Offset = "0x279F30C", VA = "0x279F30C")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6002C70")]
			[Address(RVA = "0x279F4E4", Offset = "0x279F4E4", VA = "0x279F4E4")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20005E4")]
		public class UniqueVertex
		{
			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int m_nFixedX;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECFC")]
			private int m_nFixedY;

			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_nFixedZ;

			[Token(Token = "0x4002943")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0x279F630", Offset = "0x279F630", VA = "0x279F630", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0x279F7DC", Offset = "0x279F7DC", VA = "0x279F7DC", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0x279F088", Offset = "0x279F088", VA = "0x279F088")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x279F938", Offset = "0x279F938", VA = "0x279F938")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x279FA90", Offset = "0x279FA90", VA = "0x279FA90")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x279FB00", Offset = "0x279FB00", VA = "0x279FB00")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0x279F854", Offset = "0x279F854", VA = "0x279F854")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0x279FBA0", Offset = "0x279FBA0", VA = "0x279FBA0")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0x279FA10", Offset = "0x279FA10", VA = "0x279FA10")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20005E5")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _nFaceIndex;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BAD")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x170004C3")]
			public int FaceIndex
			{
				[Token(Token = "0x6002C7A")]
				[Address(RVA = "0x279F454", Offset = "0x279F454", VA = "0x279F454")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004C4")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6002C7B")]
				[Address(RVA = "0x279F484", Offset = "0x279F484", VA = "0x279F484")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0x279F0FC", Offset = "0x279F0FC", VA = "0x279F0FC")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20005E6")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED04")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x170004C5")]
			public int UniqueIndex
			{
				[Token(Token = "0x6002C7D")]
				[Address(RVA = "0x279F4B4", Offset = "0x279F4B4", VA = "0x279F4B4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0x279F1FC", Offset = "0x279F1FC", VA = "0x279F1FC")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0x279F15C", Offset = "0x279F15C", VA = "0x279F15C")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B95")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ECEC")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000212")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x279E3F0", Offset = "0x279E3F0", VA = "0x279E3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x279E420", Offset = "0x279E420", VA = "0x279E420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x279E450", Offset = "0x279E450", VA = "0x279E450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x279E480", Offset = "0x279E480", VA = "0x279E480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x279E4B0", Offset = "0x279E4B0", VA = "0x279E4B0")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x279F424", Offset = "0x279F424", VA = "0x279F424")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000230")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool m_bExpanded;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BB5")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float m_fRelevance;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x279FD24", Offset = "0x279FD24", VA = "0x279FD24")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x279FE04", Offset = "0x279FE04", VA = "0x279FE04")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20005E7")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20005E8")]
		private class Triangle
		{
			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED24")]
			private bool m_bUVData;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int[] m_aUV;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int[] m_aIndices;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BD5")]
			private int m_nSubMesh;

			[Token(Token = "0x170004C6")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6002C84")]
				[Address(RVA = "0x20B4590", Offset = "0x20B4590", VA = "0x20B4590")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			public bool HasUVData
			{
				[Token(Token = "0x6002C85")]
				[Address(RVA = "0x20B45C0", Offset = "0x20B45C0", VA = "0x20B45C0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004C8")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6002C86")]
				[Address(RVA = "0x20B4604", Offset = "0x20B4604", VA = "0x20B4604")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002C87")]
				[Address(RVA = "0x20B4634", Offset = "0x20B4634", VA = "0x20B4634")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004CA")]
			public int[] Indices
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0x20B4674", Offset = "0x20B4674", VA = "0x20B4674")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0x20B46A4", Offset = "0x20B46A4", VA = "0x20B46A4")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0x20B510C", Offset = "0x20B510C", VA = "0x20B510C")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x20B5758", Offset = "0x20B5758", VA = "0x20B5758")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x20B4D68", Offset = "0x20B4D68", VA = "0x20B4D68")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0x20B58DC", Offset = "0x20B58DC", VA = "0x20B58DC")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0x20B5ACC", Offset = "0x20B5ACC", VA = "0x20B5ACC")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0x20B5B30", Offset = "0x20B5B30", VA = "0x20B5B30")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6002C90")]
			[Address(RVA = "0x20B5D14", Offset = "0x20B5D14", VA = "0x20B5D14")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6002C91")]
			[Address(RVA = "0x20B5D78", Offset = "0x20B5D78", VA = "0x20B5D78")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20005E9")]
		private class TriangleList
		{
			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x20B4258", Offset = "0x20B4258", VA = "0x20B4258")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20005EA")]
		private class Vertex
		{
			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED2C")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BDD")]
			public int m_nID;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8EC")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_fObjDist;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vertex m_collapse;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_nHeapSpot;

			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x20B6340", Offset = "0x20B6340", VA = "0x20B6340")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x20B653C", Offset = "0x20B653C", VA = "0x20B653C")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x20B555C", Offset = "0x20B555C", VA = "0x20B555C")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x20B6734", Offset = "0x20B6734", VA = "0x20B6734")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EB")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0x20B72DC", Offset = "0x20B72DC", VA = "0x20B72DC", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x20B788C", Offset = "0x20B788C", VA = "0x20B788C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x20B78DC", Offset = "0x20B78DC", VA = "0x20B78DC")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20005EC")]
		private class VertexDataHash
		{
			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BE4")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Vector3 _v3Normal;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED34")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Color32 _color;

			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x170004CB")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0x20B69B8", Offset = "0x20B69B8", VA = "0x20B69B8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004CC")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002C9B")]
				[Address(RVA = "0x20B69F8", Offset = "0x20B69F8", VA = "0x20B69F8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004CD")]
			public Vector2 UV1
			{
				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0x20B6A38", Offset = "0x20B6A38", VA = "0x20B6A38")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170004CE")]
			public Vector2 UV2
			{
				[Token(Token = "0x6002C9D")]
				[Address(RVA = "0x20B6A70", Offset = "0x20B6A70", VA = "0x20B6A70")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170004CF")]
			public Color32 Color
			{
				[Token(Token = "0x6002C9E")]
				[Address(RVA = "0x20B6AA8", Offset = "0x20B6AA8", VA = "0x20B6AA8")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0x20B6AF4", Offset = "0x20B6AF4", VA = "0x20B6AF4")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0x20B6CB4", Offset = "0x20B6CB4", VA = "0x20B6CB4", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0x20B717C", Offset = "0x20B717C", VA = "0x20B717C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0x20B71CC", Offset = "0x20B71CC", VA = "0x20B71CC")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0x20B723C", Offset = "0x20B723C", VA = "0x20B723C")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF358", Offset = "0xBDF358")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BEC")]
			private int <>1__state;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED3C")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sourceMesh;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gameObject;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BF4")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED44")]
			private int <nVertices>5__2;

			[Token(Token = "0x170004D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CA7")]
				[Address(RVA = "0x20B4310", Offset = "0x20B4310", VA = "0x20B4310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CA9")]
				[Address(RVA = "0x20B43E0", Offset = "0x20B43E0", VA = "0x20B43E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x20B26D4", Offset = "0x20B26D4", VA = "0x20B26D4")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0x20B271C", Offset = "0x20B271C", VA = "0x20B271C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x20B2730", Offset = "0x20B2730", VA = "0x20B2730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0x20B4340", Offset = "0x20B4340", VA = "0x20B4340", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF394", Offset = "0xBDF394")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Simplifier <>4__this;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3BFC")]
			public int nVertices;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Mesh meshOut;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED4C")]
			public GameObject gameObject;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProgressDelegate progress;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C04")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x170004D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CAD")]
				[Address(RVA = "0x27A881C", Offset = "0x27A881C", VA = "0x27A881C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CAF")]
				[Address(RVA = "0x27A88EC", Offset = "0x27A88EC", VA = "0x27A88EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0x27A0A1C", Offset = "0x27A0A1C", VA = "0x27A0A1C")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0x27A6E64", Offset = "0x27A6E64", VA = "0x27A6E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0x27A6E78", Offset = "0x27A6E78", VA = "0x27A6E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x27A884C", Offset = "0x27A884C", VA = "0x27A884C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF3D0", Offset = "0xBDF3D0")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED54")]
			private object <>2__current;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh meshIn;

			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C0C")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Mesh meshOut;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED5C")]
			public GameObject gameObject;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C14")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED64")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C1C")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED6C")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C24")]
			private bool <bUV1>5__17;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private bool <bUV2>5__18;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED74")]
			private bool <bNormal>5__19;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <bTangent>5__20;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C2C")]
			private string <strMesh>5__23;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <i>5__24;

			[Token(Token = "0x170004D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB3")]
				[Address(RVA = "0x27AB090", Offset = "0x27AB090", VA = "0x27AB090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB5")]
				[Address(RVA = "0x27AB160", Offset = "0x27AB160", VA = "0x27AB160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0x27A2184", Offset = "0x27A2184", VA = "0x27A2184")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0x27A891C", Offset = "0x27A891C", VA = "0x27A891C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0x27A8930", Offset = "0x27A8930", VA = "0x27A8930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0x27AB0C0", Offset = "0x27AB0C0", VA = "0x27AB0C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF40C", Offset = "0xBDF40C")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED7C")]
			private int <>1__state;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C34")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Transform transform;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C54C")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x170004D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB9")]
				[Address(RVA = "0x27A6D64", Offset = "0x27A6D64", VA = "0x27A6D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CBB")]
				[Address(RVA = "0x27A6E34", Offset = "0x27A6E34", VA = "0x27A6E34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0x27A3970", Offset = "0x27A3970", VA = "0x27A3970")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0x27A6418", Offset = "0x27A6418", VA = "0x27A6418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0x27A642C", Offset = "0x27A642C", VA = "0x27A642C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0x27A6D94", Offset = "0x27A6D94", VA = "0x27A6D94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF3150", Offset = "0xBF3150")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF318C", Offset = "0xBF318C")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4000F21")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BBD")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED14")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC5")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED1C")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BCD")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000216")]
		public static bool Cancelled
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x27A006C", Offset = "0x27A006C", VA = "0x27A006C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B5A0", Offset = "0xC1B5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x27A0168", Offset = "0x27A0168", VA = "0x27A0168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B5DC", Offset = "0xC1B5DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x27A026C", Offset = "0x27A026C", VA = "0x27A026C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x27A0354", Offset = "0x27A0354", VA = "0x27A0354")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x27A0444", Offset = "0x27A0444", VA = "0x27A0444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B618", Offset = "0xC1B618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x27A0488", Offset = "0x27A0488", VA = "0x27A0488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1B654", Offset = "0xC1B654")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x27A04D4", Offset = "0x27A04D4", VA = "0x27A04D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x27A0518", Offset = "0x27A0518", VA = "0x27A0518")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool UseCurvature
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x27A0564", Offset = "0x27A0564", VA = "0x27A0564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x27A05A8", Offset = "0x27A05A8", VA = "0x27A05A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x27A05F4", Offset = "0x27A05F4", VA = "0x27A05F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x27A0638", Offset = "0x27A0638", VA = "0x27A0638")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public bool LockBorder
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x27A0684", Offset = "0x27A0684", VA = "0x27A0684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x27A06C8", Offset = "0x27A06C8", VA = "0x27A06C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x27A0714", Offset = "0x27A0714", VA = "0x27A0714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B690", Offset = "0xC1B690")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x27A0898", Offset = "0x27A0898", VA = "0x27A0898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B740", Offset = "0xC1B740")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x27A0A64", Offset = "0x27A0A64", VA = "0x27A0A64")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x27A0A94", Offset = "0x27A0A94", VA = "0x27A0A94")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x27A0B04", Offset = "0x27A0B04", VA = "0x27A0B04")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x27A1FEC", Offset = "0x27A1FEC", VA = "0x27A1FEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B7F0", Offset = "0xC1B7F0")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x27A21CC", Offset = "0x27A21CC", VA = "0x27A21CC")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x27A22E8", Offset = "0x27A22E8", VA = "0x27A22E8")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x27A2F84", Offset = "0x27A2F84", VA = "0x27A2F84")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x27A3814", Offset = "0x27A3814", VA = "0x27A3814")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B8A0", Offset = "0xC1B8A0")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x27A39B8", Offset = "0x27A39B8", VA = "0x27A39B8")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x27A4F38", Offset = "0x27A4F38", VA = "0x27A4F38")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x27A5408", Offset = "0x27A5408", VA = "0x27A5408")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x27A5908", Offset = "0x27A5908", VA = "0x27A5908")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x27A5F28", Offset = "0x27A5F28", VA = "0x27A5F28")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x27A6080", Offset = "0x27A6080", VA = "0x27A6080")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x27A478C", Offset = "0x27A478C", VA = "0x27A478C")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x27A4A90", Offset = "0x27A4A90", VA = "0x27A4A90")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x27A6240", Offset = "0x27A6240", VA = "0x27A6240")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x27A5F60", Offset = "0x27A5F60", VA = "0x27A5F60")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x27A6364", Offset = "0x27A6364", VA = "0x27A6364")]
		public Simplifier()
		{
		}
	}
}
namespace THOR
{
	[Token(Token = "0x2000232")]
	public class THOR_DemoCameraController : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF448", Offset = "0xBDF448")]
		private sealed class <LerpTimeScale>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public THOR_DemoCameraController <>4__this;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C59")]
			private float <startValue>5__2;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <delta>5__3;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED9C")]
			private float <tStamp>5__4;

			[Token(Token = "0x170004D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CBF")]
				[Address(RVA = "0x1F44D14", Offset = "0x1F44D14", VA = "0x1F44D14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CC1")]
				[Address(RVA = "0x1F44DE4", Offset = "0x1F44DE4", VA = "0x1F44DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0x1F44744", Offset = "0x1F44744", VA = "0x1F44744")]
			[DebuggerHidden]
			public <LerpTimeScale>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0x1F448F0", Offset = "0x1F448F0", VA = "0x1F448F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0x1F44904", Offset = "0x1F44904", VA = "0x1F44904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0x1F44D44", Offset = "0x1F44D44", VA = "0x1F44D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF3560", Offset = "0xBF3560")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3560", Offset = "0xBF3560")]
		public float lookSensitivity;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3604", Offset = "0xBF3604")]
		public float moveSensitivity;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C3A")]
		public Vector3 worldLimits;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF3654", Offset = "0xBF3654")]
		public float slowMotionFactor;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8F4")]
		public float slowMotionLerpDuration;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF36B8", Offset = "0xBF36B8")]
		public GameObject terrain;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF371C", Offset = "0xBF371C")]
		public Texture logo;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture guiBG;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C41")]
		public Texture gui;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF3780", Offset = "0xBF3780")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xBF3780", Offset = "0xBF3780")]
		public string infoText;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED84")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xBF3818", Offset = "0xBF3818")]
		public string controlsText;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float targetValue;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform t;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform child;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C49")]
		private Transform camT;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RaycastHit hit;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED8C")]
		private Ray ray;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rect r;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color linkColor;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool showInfo;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C51")]
		private string buttonTextTerrain;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string buttonTextInfo;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4ED94")]
		private THOR_Thunderstorm rt;

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1F41A44", Offset = "0x1F41A44", VA = "0x1F41A44")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1F42B34", Offset = "0x1F42B34", VA = "0x1F42B34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1F431B8", Offset = "0x1F431B8", VA = "0x1F431B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1F43310", Offset = "0x1F43310", VA = "0x1F43310")]
		private void CameraControl()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1F42C30", Offset = "0x1F42C30", VA = "0x1F42C30")]
		private void SetupCameraRig()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1F44688", Offset = "0x1F44688", VA = "0x1F44688")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1B950", Offset = "0xC1B950")]
		private IEnumerator LerpTimeScale()
		{
			return null;
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1F4478C", Offset = "0x1F4478C", VA = "0x1F4478C")]
		public THOR_DemoCameraController()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class THOR_Lightning : MonoBehaviour
	{
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF484", Offset = "0xBDF484")]
		private sealed class <LerpEvolution>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C79")]
			public THOR_Lightning <>4__this;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <distToMultiClouds>5__2;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDBC")]
			private float <distToMultiBolts>5__3;

			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <flicker>5__4;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__5;

			[Token(Token = "0x170004DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CC5")]
				[Address(RVA = "0x1F48444", Offset = "0x1F48444", VA = "0x1F48444", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CC7")]
				[Address(RVA = "0x1F48514", Offset = "0x1F48514", VA = "0x1F48514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0x1F46100", Offset = "0x1F46100", VA = "0x1F46100")]
			[DebuggerHidden]
			public <LerpEvolution>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0x1F47400", Offset = "0x1F47400", VA = "0x1F47400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0x1F47414", Offset = "0x1F47414", VA = "0x1F47414", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0x1F48474", Offset = "0x1F48474", VA = "0x1F48474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF4C0", Offset = "0xBDF4C0")]
		private sealed class <LerpAudio>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C81")]
			private object <>2__current;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public THOR_Lightning <>4__this;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDC4")]
			private float <volumeDistanceMulti>5__2;

			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <randomPitch>5__3;

			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__4;

			[Token(Token = "0x170004DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CCB")]
				[Address(RVA = "0x1F47300", Offset = "0x1F47300", VA = "0x1F47300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CCD")]
				[Address(RVA = "0x1F473D0", Offset = "0x1F473D0", VA = "0x1F473D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0x1F46148", Offset = "0x1F46148", VA = "0x1F46148")]
			[DebuggerHidden]
			public <LerpAudio>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0x1F4638C", Offset = "0x1F4638C", VA = "0x1F4638C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0x1F463A0", Offset = "0x1F463A0", VA = "0x1F463A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0x1F47330", Offset = "0x1F47330", VA = "0x1F47330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform lightningBoltT;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform lightningCloudT;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform spotLightT;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C61")]
		public MeshFilter lightningBoltMF;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MeshRenderer lightningBoltMR;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDA4")]
		public MeshRenderer lightningCloudMR;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material lightningBoltMaterial;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material lightningCloudMaterial;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioSource audioSource;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C69")]
		public Light spotLight;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private THOR_Thunderstorm rt;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDAC")]
		private Transform t;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 initScale;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lightdist;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float duration;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C71")]
		private float distance;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float distanceFlat;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDB4")]
		private float pan;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool noSound;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1F44E14", Offset = "0x1F44E14", VA = "0x1F44E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1F4544C", Offset = "0x1F4544C", VA = "0x1F4544C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1F45F88", Offset = "0x1F45F88", VA = "0x1F45F88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BA00", Offset = "0xC1BA00")]
		private IEnumerator LerpEvolution()
		{
			return null;
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1F46044", Offset = "0x1F46044", VA = "0x1F46044")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BAB0", Offset = "0xC1BAB0")]
		private IEnumerator LerpAudio()
		{
			return null;
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1F46190", Offset = "0x1F46190", VA = "0x1F46190")]
		private void BackToPool()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1F46348", Offset = "0x1F46348", VA = "0x1F46348")]
		public THOR_Lightning()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class THOR_SheetLightning : MonoBehaviour
	{
		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF4FC", Offset = "0xBDF4FC")]
		private sealed class <LerpEvolution>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public THOR_SheetLightning <>4__this;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C91")]
			private bool <flicker>5__2;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <distToMultiClouds>5__3;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C8FC")]
			private float <duration>5__4;

			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__5;

			[Token(Token = "0x170004DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CD1")]
				[Address(RVA = "0x1F49374", Offset = "0x1F49374", VA = "0x1F49374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD3")]
				[Address(RVA = "0x1F49444", Offset = "0x1F49444", VA = "0x1F49444", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0x1F48A00", Offset = "0x1F48A00", VA = "0x1F48A00")]
			[DebuggerHidden]
			public <LerpEvolution>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0x1F48A78", Offset = "0x1F48A78", VA = "0x1F48A78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x1F48A8C", Offset = "0x1F48A8C", VA = "0x1F48A8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0x1F493A4", Offset = "0x1F493A4", VA = "0x1F493A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material lightningCloudMaterial;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C89")]
		public MeshRenderer lightningCloudMR;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float distance;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDCC")]
		private THOR_Thunderstorm rt;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1F48544", Offset = "0x1F48544", VA = "0x1F48544")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1F48700", Offset = "0x1F48700", VA = "0x1F48700")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1F48944", Offset = "0x1F48944", VA = "0x1F48944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BB60", Offset = "0xC1BB60")]
		private IEnumerator LerpEvolution()
		{
			return null;
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1F48A48", Offset = "0x1F48A48", VA = "0x1F48A48")]
		public THOR_SheetLightning()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class THOR_Thunderstorm : MonoBehaviour
	{
		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF538", Offset = "0xBDF538")]
		private sealed class <FadeUp>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3CFF")]
			private int <>1__state;

			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE34")]
			public THOR_Thunderstorm <>4__this;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <startVal>5__2;

			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__3;

			[Token(Token = "0x170004E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CD7")]
				[Address(RVA = "0x1F4EB78", Offset = "0x1F4EB78", VA = "0x1F4EB78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD9")]
				[Address(RVA = "0x1F4EC48", Offset = "0x1F4EC48", VA = "0x1F4EC48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0x1F4D648", Offset = "0x1F4D648", VA = "0x1F4D648")]
			[DebuggerHidden]
			public <FadeUp>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0x1F4E668", Offset = "0x1F4E668", VA = "0x1F4E668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0x1F4E67C", Offset = "0x1F4E67C", VA = "0x1F4E67C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x1F4EBA8", Offset = "0x1F4EBA8", VA = "0x1F4EBA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF574", Offset = "0xBDF574")]
		private sealed class <FadeDown>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D07")]
			private object <>2__current;

			[Token(Token = "0x40029BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public THOR_Thunderstorm <>4__this;

			[Token(Token = "0x40029BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE3C")]
			private float <startVal>5__2;

			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__3;

			[Token(Token = "0x170004E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CDD")]
				[Address(RVA = "0x1F4E568", Offset = "0x1F4E568", VA = "0x1F4E568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CDF")]
				[Address(RVA = "0x1F4E638", Offset = "0x1F4E638", VA = "0x1F4E638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0x1F4D74C", Offset = "0x1F4D74C", VA = "0x1F4D74C")]
			[DebuggerHidden]
			public <FadeDown>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0x1F4E1AC", Offset = "0x1F4E1AC", VA = "0x1F4E1AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0x1F4E1C0", Offset = "0x1F4E1C0", VA = "0x1F4E1C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0x1F4E598", Offset = "0x1F4E598", VA = "0x1F4E598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF5B0", Offset = "0xBDF5B0")]
		private sealed class <CtrlThunderstorm>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40029BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D0F")]
			public THOR_Thunderstorm <>4__this;

			[Token(Token = "0x40029C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float transitionDuration;

			[Token(Token = "0x40029C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE44")]
			public float targetIntensity;

			[Token(Token = "0x40029C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <startIntensity>5__2;

			[Token(Token = "0x40029C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tStamp>5__3;

			[Token(Token = "0x170004E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CE3")]
				[Address(RVA = "0x1F4E0AC", Offset = "0x1F4E0AC", VA = "0x1F4E0AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CE5")]
				[Address(RVA = "0x1F4E17C", Offset = "0x1F4E17C", VA = "0x1F4E17C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x1F4DC48", Offset = "0x1F4DC48", VA = "0x1F4DC48")]
			[DebuggerHidden]
			public <CtrlThunderstorm>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0x1F4DD2C", Offset = "0x1F4DD2C", VA = "0x1F4DD2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0x1F4DD40", Offset = "0x1F4DD40", VA = "0x1F4DD40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0x1F4E0DC", Offset = "0x1F4E0DC", VA = "0x1F4E0DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static THOR_Thunderstorm instance;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera cam;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C98")]
		public Transform camT;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool followCamera;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDD4")]
		private bool followCameraVertically;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF385C", Offset = "0xBF385C")]
		public float probability;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF38A4", Offset = "0xBF38A4")]
		public float flickerProbability;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF38EC", Offset = "0xBF38EC")]
		public float preferCameraView;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CA0")]
		public float minDuration;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxDuration;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDDC")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3934", Offset = "0xBF3934")]
		public Color colorLightningCore;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3978", Offset = "0xBF3978")]
		public Color colorLightningGlow;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF39BC", Offset = "0xBF39BC")]
		public Color colorCloudCore;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3A00", Offset = "0xBF3A00")]
		public Color colorCloudGlow;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CA8")]
		public float minDistance;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxDistance;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDE4")]
		public float spawnHeight;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scaleMulti;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableDepthBlending;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float depthBlend;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CB0")]
		public AnimationCurve distanceToMultiBolts;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve distanceToMultiClouds;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDEC")]
		public AnimationCurve flickerBolts;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve flickerClouds;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useLight;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lightIntensityMulti;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CB8")]
		public Gradient lightColor;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxLightDistance;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDF4")]
		public AnimationCurve lightIntensityCurve;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve lightDistanceCurve;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lightRange;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3A44", Offset = "0xBF3A44")]
		public float lightAngle;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC0")]
		public Texture lightCookie;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LightShadows lightShadows;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EDFC")]
		public LightShadowResolution shadowResolution;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3A90", Offset = "0xBF3A90")]
		public float shadowStrength;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3AD8", Offset = "0xBF3AD8")]
		public float shadowBias;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3B20", Offset = "0xBF3B20")]
		public float shadowNormalBias;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3B68", Offset = "0xBF3B68")]
		public float shadowNearPlane;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip thunderLoop;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE04")]
		public AnimationCurve thunderLoopVolume;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip[] thunderClipsVeryClose;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float thunderVeryCloseDistance;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip[] thunderClipsClose;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CD0")]
		public float thunderCloseDistance;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip[] thunderClipsMedium;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE0C")]
		public float thunderMediumDistance;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip[] thunderClipsFar;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float thunderFarDistance;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve distanceToVolume;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CD8")]
		public AnimationCurve audioFade;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve panMulti;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE14")]
		public float SpeedOfSound;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lerpSpeedUp;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lerpSpeedDown;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioMixerGroup audioMixerGroup;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE0")]
		public GameObject R_LightningPrefab;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int poolSize;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE1C")]
		public List<GameObject> poolUnused;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObject> poolUsed;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject R_SheetLightningPrefab;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int poolSizeSheetLightning;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE8")]
		public List<GameObject> poolSheetLightningUnused;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public List<GameObject> poolSheetLightningUsed;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C904")]
		public int layer;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh[] lightningBoltMeshes;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnimationCurve minDelayCurve;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnimationCurve maxDelayCurve;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CEF")]
		[HideInInspector]
		public bool lightIsActive;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 spawnPos;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE24")]
		private Vector3 camPos;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float nextLightningIn;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float nextSheetLightningIn;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeSinceLastLightning;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CF7")]
		private float timeSinceLastSheetLightning;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AudioSource aS;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE2C")]
		private float loopVol;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator fadeUp;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator fadeDown;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator ctrlThunderstorm;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1F49474", Offset = "0x1F49474", VA = "0x1F49474")]
		private THOR_Thunderstorm()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1F4AD00", Offset = "0x1F4AD00", VA = "0x1F4AD00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1F4AF6C", Offset = "0x1F4AF6C", VA = "0x1F4AF6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1F4BCA4", Offset = "0x1F4BCA4", VA = "0x1F4BCA4")]
		private void OnDetroy()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1F4BD2C", Offset = "0x1F4BD2C", VA = "0x1F4BD2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1F4CB3C", Offset = "0x1F4CB3C", VA = "0x1F4CB3C")]
		private void Lightning()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1F4CCAC", Offset = "0x1F4CCAC", VA = "0x1F4CCAC")]
		private void CameraLightning()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1F4CFC8", Offset = "0x1F4CFC8", VA = "0x1F4CFC8")]
		private void RandomPosLightning()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1F4D2A0", Offset = "0x1F4D2A0", VA = "0x1F4D2A0")]
		private void ActivateLightning()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1F4C4A8", Offset = "0x1F4C4A8", VA = "0x1F4C4A8")]
		private void SheetLightning()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1F47244", Offset = "0x1F47244", VA = "0x1F47244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BC10", Offset = "0xC1BC10")]
		public IEnumerator FadeUp()
		{
			return null;
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1F4D690", Offset = "0x1F4D690", VA = "0x1F4D690")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BCC0", Offset = "0xC1BCC0")]
		private IEnumerator FadeDown()
		{
			return null;
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1F46268", Offset = "0x1F46268", VA = "0x1F46268")]
		public void BackToPool(GameObject go)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1F49294", Offset = "0x1F49294", VA = "0x1F49294")]
		public void BackToPoolSheetLightning(GameObject go)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1F4D794", Offset = "0x1F4D794", VA = "0x1F4D794")]
		public static void ControlThunderstorm(float targetIntensity = 1f, float transitionDuration = 20f)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1F4DB3C", Offset = "0x1F4DB3C", VA = "0x1F4DB3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1BD70", Offset = "0xC1BD70")]
		public IEnumerator CtrlThunderstorm(float targetIntensity, float transitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1F4DC90", Offset = "0x1F4DC90", VA = "0x1F4DC90")]
		public static void SetProbability(float value)
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8720", Offset = "0xBD8720")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera cam;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1F36C78", Offset = "0x1F36C78", VA = "0x1F36C78")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1F36DB4", Offset = "0x1F36DB4", VA = "0x1F36DB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1F36FDC", Offset = "0x1F36FDC", VA = "0x1F36FDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1F37114", Offset = "0x1F37114", VA = "0x1F37114")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x2000237")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD87EC", Offset = "0xBD87EC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD87EC", Offset = "0xBD87EC")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D17")]
		public string[] shaderNames;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int shaderIndex;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE4C")]
		public Shader shader;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader DesktopShader;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3BF4", Offset = "0xBF3BF4")]
		public int renderQueue;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D1F")]
		public bool enableVertexColors;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool enableDepthTex;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE54")]
		public bool isUnlit;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableGradient;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Gradient colorGradient;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3C40", Offset = "0xBF3C40")]
		public Color waterShallowColor;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D27")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3C88", Offset = "0xBF3C88")]
		public float depth;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3CD0", Offset = "0xBF3CD0")]
		public Color waterColor;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE5C")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3D18", Offset = "0xBF3D18")]
		public Color fresnelColor;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fresnel;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xBF3D60", Offset = "0xBF3D60")]
		public Color rimColor;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3DA8", Offset = "0xBF3DA8")]
		public float waveTint;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D2F")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3DF4", Offset = "0xBF3DF4")]
		public float transparency;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3E3C", Offset = "0xBF3E3C")]
		public float glossiness;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3E8C", Offset = "0xBF3E8C")]
		public float metallicness;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3ED4", Offset = "0xBF3ED4")]
		public float edgeFade;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float worldSpaceTiling;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D37")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3F1C", Offset = "0xBF3F1C")]
		public float refractionAmount;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool enableNormalMap;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3F68", Offset = "0xBF3F68")]
		public float normalStrength;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableMacroNormals;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF3FB0", Offset = "0xBF3FB0")]
		public float macroNormalsDistance;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4000", Offset = "0xBF4000")]
		public float normalTiling;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D3F")]
		public int intersectionSolver;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C90C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4048", Offset = "0xBF4048")]
		public float rimSize;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4090", Offset = "0xBF4090")]
		public float rimFalloff;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rimTiling;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF40E0", Offset = "0xBF40E0")]
		public float rimDistortion;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D46")]
		public bool enableVCIntersection;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int foamSolver;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE74")]
		public string[] foamSolverNames;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4128", Offset = "0xBF4128")]
		public float foamOpacity;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float foamTiling;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4174", Offset = "0xBF4174")]
		public float foamSize;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4E")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF41BC", Offset = "0xBF41BC")]
		public float foamDistortion;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4204", Offset = "0xBF4204")]
		public float foamSpeed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF424C", Offset = "0xBF424C")]
		public float waveFoam;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4294", Offset = "0xBF4294")]
		public float reflectionStrength;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF42DC", Offset = "0xBF42DC")]
		public float reflectionFresnel;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool showReflection;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D56")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF432C", Offset = "0xBF432C")]
		public float reflectionRefraction;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4378", Offset = "0xBF4378")]
		public float waveSpeed;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF43C8", Offset = "0xBF43C8")]
		public float waveStrength;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4410", Offset = "0xBF4410")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D customIntersection;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D5E")]
		public Texture2D customNormal;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D customHeightmap;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE8C")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int intersectionStyle;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] waveStyleNames;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int waveStyle;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D66")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int waveHeightmapStyle;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE94")]
		public float waveSize;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useCustomIntersection;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useCustomNormals;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useCustomHeightmap;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D6E")]
		public Texture2D normals;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D shadermap;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EE9C")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useCompression;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera reflectionCamera;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D76")]
		private Camera refractCamera;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool useReflection;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEA4")]
		public bool useRefractionCam;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableReflectionBlur;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF445C", Offset = "0xBF445C")]
		public float reflectionBlurLength;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF44A8", Offset = "0xBF44A8")]
		public int reflectionBlurPasses;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D7E")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string[] refractionSolverNames;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEAC")]
		public int refractionSolver;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] resolutionNames;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int reflectionRes;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int refractRes;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D86")]
		public int reflectionTextureSize;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int refractTextureSize;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF44F4", Offset = "0xBF44F4")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8E")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEBC")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D96")]
		private bool s_InsideRendering;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int lightingMethod;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C914")]
		public string[] lightingMethodNames;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableShadows;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D9D")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Material material;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEC4")]
		public bool isMobileAdvanced;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isMobilePlatform;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string shaderName;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isWaterLayer;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DA5")]
		public bool hasShaderParams;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool hasMaterial;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EECC")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool hideMeshRenderer;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1F37144", Offset = "0x1F37144", VA = "0x1F37144")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1F37400", Offset = "0x1F37400", VA = "0x1F37400")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1F37298", Offset = "0x1F37298", VA = "0x1F37298")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1F37414", Offset = "0x1F37414", VA = "0x1F37414")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1F388B4", Offset = "0x1F388B4", VA = "0x1F388B4")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1F388C8", Offset = "0x1F388C8", VA = "0x1F388C8")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1F372AC", Offset = "0x1F372AC", VA = "0x1F372AC")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1F39060", Offset = "0x1F39060", VA = "0x1F39060")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1F3AB88", Offset = "0x1F3AB88", VA = "0x1F3AB88")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1F3A654", Offset = "0x1F3A654", VA = "0x1F3A654")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1F388DC", Offset = "0x1F388DC", VA = "0x1F388DC")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1F38A74", Offset = "0x1F38A74", VA = "0x1F38A74")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1F3B1B8", Offset = "0x1F3B1B8", VA = "0x1F3B1B8")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1F3B1CC", Offset = "0x1F3B1CC", VA = "0x1F3B1CC")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1F3E83C", Offset = "0x1F3E83C", VA = "0x1F3E83C")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1F3EB18", Offset = "0x1F3EB18", VA = "0x1F3EB18")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1F3C448", Offset = "0x1F3C448", VA = "0x1F3C448")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1F3EF2C", Offset = "0x1F3EF2C", VA = "0x1F3EF2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1F3F0D0", Offset = "0x1F3F0D0", VA = "0x1F3F0D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1F3F100", Offset = "0x1F3F100", VA = "0x1F3F100")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8900", Offset = "0xBD8900")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera cam;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float length;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DAD")]
		public int passes;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EED4")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CommandBuffer cmd;

		[Token(Token = "0x1700021D")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1F3F410", Offset = "0x1F3F410", VA = "0x1F3F410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x1F3F5AC", Offset = "0x1F3F5AC", VA = "0x1F3F5AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1F3F794", Offset = "0x1F3F794", VA = "0x1F3F794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1F3F8DC", Offset = "0x1F3F8DC", VA = "0x1F3F8DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1F3E094", Offset = "0x1F3E094", VA = "0x1F3E094")]
		public void Render()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1F3FA58", Offset = "0x1F3FA58", VA = "0x1F3FA58")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD89CC", Offset = "0xBD89CC")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CommandBuffer cmd;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Light dirLight;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1F3FAB0", Offset = "0x1F3FAB0", VA = "0x1F3FAB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1F3FE40", Offset = "0x1F3FE40", VA = "0x1F3FE40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1F3FF6C", Offset = "0x1F3FF6C", VA = "0x1F3FF6C")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x20005F8")]
		public static class CameraUtils
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x1F3DC68", Offset = "0x1F3DC68", VA = "0x1F3DC68")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0x1F3D708", Offset = "0x1F3D708", VA = "0x1F3D708")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0x1F3D304", Offset = "0x1F3D304", VA = "0x1F3D304")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DB5")]
		public static bool DEBUG;

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1F3FF9C", Offset = "0x1F3FF9C", VA = "0x1F3FF9C")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1F40358", Offset = "0x1F40358", VA = "0x1F40358")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1F40430", Offset = "0x1F40430", VA = "0x1F40430")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
}
namespace sourcenity
{
	[Token(Token = "0x200023B")]
	[ExecuteInEditMode]
	public class ShowLaserEffect : MonoBehaviour
	{
		[Token(Token = "0x20005F9")]
		public enum ScLaserEffectType
		{
			[Token(Token = "0x40029C5")]
			Plane,
			[Token(Token = "0x40029C6")]
			Fan,
			[Token(Token = "0x40029C7")]
			Cone
		}

		[Token(Token = "0x20005FA")]
		public enum ScLaserEffectVisual
		{
			[Token(Token = "0x40029C9")]
			Plain,
			[Token(Token = "0x40029CA")]
			Textured,
			[Token(Token = "0x40029CB")]
			CustomMaterial
		}

		[Token(Token = "0x20005FB")]
		public enum ScLaserEffectVisualTextured
		{
			[Token(Token = "0x40029CD")]
			Clouds,
			[Token(Token = "0x40029CE")]
			Smoke,
			[Token(Token = "0x40029CF")]
			Custom
		}

		[Token(Token = "0x20005FC")]
		public enum ScLaserEffectAlignment
		{
			[Token(Token = "0x40029D1")]
			Left,
			[Token(Token = "0x40029D2")]
			Center
		}

		[Serializable]
		[Token(Token = "0x20005FD")]
		private class Shadow
		{
			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScLaserEffectType type;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScLaserEffectAlignment alignment;

			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float width;

			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3DFC")]
			public float length;

			[Token(Token = "0x40029D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float radius;

			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF1C")]
			public Color mainColor;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fill;

			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int numberOfElements;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float gapBetweenElements;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E04")]
			public float leftSideOffset;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Color leftSideColor;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF24")]
			public float rightSideOffset;

			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color rightSideColor;

			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScLaserEffectVisual visualization;

			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScLaserEffectVisualTextured textureType;

			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E0C")]
			public Texture2D customTexture;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float noiseScaling;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF2C")]
			public float timeScaling;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distortionStrength;

			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeOutValue;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float gammaValue;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E14")]
			public float generalTransparency;

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x3CE71BC", Offset = "0x3CE71BC", VA = "0x3CE71BC")]
			public Shadow()
			{
			}
		}

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF453C", Offset = "0xBF453C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF453C", Offset = "0xBF453C")]
		public bool show;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF45E8", Offset = "0xBF45E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF45E8", Offset = "0xBF45E8")]
		public ScLaserEffectType type;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4694", Offset = "0xBF4694")]
		public ScLaserEffectAlignment alignment;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF46F8", Offset = "0xBF46F8")]
		public float width;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF475C", Offset = "0xBF475C")]
		public float length;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DBD")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF47C0", Offset = "0xBF47C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF47C0", Offset = "0xBF47C0")]
		public float radius;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF48F8", Offset = "0xBF48F8")]
		public Color mainColor;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF495C", Offset = "0xBF495C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF495C", Offset = "0xBF495C")]
		public float fill;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF49F4", Offset = "0xBF49F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF49F4", Offset = "0xBF49F4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBF49F4", Offset = "0xBF49F4")]
		public int numberOfSegments;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF4AE8", Offset = "0xBF4AE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4AE8", Offset = "0xBF4AE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBF4AE8", Offset = "0xBF4AE8")]
		public float gapBetweenSegments;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF4C64", Offset = "0xBF4C64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4C64", Offset = "0xBF4C64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4C64", Offset = "0xBF4C64")]
		public float leftSideOffset;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC5")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF4D48", Offset = "0xBF4D48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4D48", Offset = "0xBF4D48")]
		public Color leftSideColor;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF4E80", Offset = "0xBF4E80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4E80", Offset = "0xBF4E80")]
		public float rightSideOffset;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEEC")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF4F14", Offset = "0xBF4F14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF4F14", Offset = "0xBF4F14")]
		public Color rightSideColor;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF504C", Offset = "0xBF504C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF504C", Offset = "0xBF504C")]
		public ScLaserEffectVisual visualization;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF50F8", Offset = "0xBF50F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF50F8", Offset = "0xBF50F8")]
		public ScLaserEffectVisualTextured textureType;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF5230", Offset = "0xBF5230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5230", Offset = "0xBF5230")]
		public Texture2D customTexture;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DCD")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF5368", Offset = "0xBF5368")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5368", Offset = "0xBF5368")]
		public float noiseScaling;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF54A0", Offset = "0xBF54A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF54A0", Offset = "0xBF54A0")]
		public float timeScaling;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEF4")]
		[AttributeAttribute(Name = "DependsOnAttribute", RVA = "0xBF55D8", Offset = "0xBF55D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF55D8", Offset = "0xBF55D8")]
		public float distortionStrength;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF5710", Offset = "0xBF5710")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5710", Offset = "0xBF5710")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5710", Offset = "0xBF5710")]
		public float fadeOutValue;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF57F4", Offset = "0xBF57F4")]
		public float gammaValue;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5858", Offset = "0xBF5858")]
		public float generalTransparency;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DD5")]
		private readonly int MAX_FACES;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float prevWidth;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EEFC")]
		private float prevGap;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevNumberOfElements;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool prevShow;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shadow shadow;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DDD")]
		private Mesh cachedMesh;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material cachedMaterial;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF04")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D cloudsTexture;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D smokeTexture;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1916E94", Offset = "0x1916E94", VA = "0x1916E94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1918BEC", Offset = "0x1918BEC", VA = "0x1918BEC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1919488", Offset = "0x1919488", VA = "0x1919488")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x19172E8", Offset = "0x19172E8", VA = "0x19172E8")]
		private void RefreshMesh()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x19177DC", Offset = "0x19177DC", VA = "0x19177DC")]
		private void RefreshMaterial()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1918430", Offset = "0x1918430", VA = "0x1918430")]
		private void ApplyMeshAndMaterialToGameObject()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1919E94", Offset = "0x1919E94", VA = "0x1919E94")]
		private float GetStartForEffect()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x191A13C", Offset = "0x191A13C", VA = "0x191A13C")]
		private float GetWidthPerElement()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1919330", Offset = "0x1919330", VA = "0x1919330")]
		private float GetFullWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1919F38", Offset = "0x1919F38", VA = "0x1919F38")]
		private Mesh GenerateElement(float startPosition)
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x191A2B8", Offset = "0x191A2B8", VA = "0x191A2B8")]
		private Mesh GenerateRectangle(float rectStart, float rectWidth, float rectLength)
		{
			return null;
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x191B644", Offset = "0x191B644", VA = "0x191B644")]
		private Mesh GenerateArc(float fromAngle, float toAngle, float beamLength)
		{
			return null;
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x191C854", Offset = "0x191C854", VA = "0x191C854")]
		private Mesh GenerateCone(float fromAngle, float toAngle, float outerRadius, float beamLength)
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x19186C8", Offset = "0x19186C8", VA = "0x19186C8")]
		private Shadow CloneValues()
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1919640", Offset = "0x1919640", VA = "0x1919640")]
		private bool IsMeshBasedValuesChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1919908", Offset = "0x1919908", VA = "0x1919908")]
		private bool IsMaterialRelevantValuesChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x191DA2C", Offset = "0x191DA2C", VA = "0x191DA2C")]
		public ShowLaserEffect()
		{
		}
	}
}
namespace RhythmTool
{
	[Token(Token = "0x200023C")]
	public abstract class Analysis : MonoBehaviour
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF58BC", Offset = "0xBF58BC")]
		private Track <track>k__BackingField;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF58F8", Offset = "0xBF58F8")]
		private int <sampleRate>k__BackingField;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5934", Offset = "0xBF5934")]
		private int <frameSize>k__BackingField;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5970", Offset = "0xBF5970")]
		private int <hopSize>k__BackingField;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF59AC", Offset = "0xBF59AC")]
		private int <frameIndex>k__BackingField;

		[Token(Token = "0x1700021F")]
		public Track track
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x1F5AFBC", Offset = "0x1F5AFBC", VA = "0x1F5AFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BE20", Offset = "0xC1BE20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x1F5AFEC", Offset = "0x1F5AFEC", VA = "0x1F5AFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BE5C", Offset = "0xC1BE5C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public int sampleRate
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x1F5B024", Offset = "0x1F5B024", VA = "0x1F5B024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BE98", Offset = "0xC1BE98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x1F5B054", Offset = "0x1F5B054", VA = "0x1F5B054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BED4", Offset = "0xC1BED4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public int frameSize
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x1F5B08C", Offset = "0x1F5B08C", VA = "0x1F5B08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BF10", Offset = "0xC1BF10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x1F5B0BC", Offset = "0x1F5B0BC", VA = "0x1F5B0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BF4C", Offset = "0xC1BF4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public int hopSize
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x1F5B0F4", Offset = "0x1F5B0F4", VA = "0x1F5B0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BF88", Offset = "0xC1BF88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x1F5B124", Offset = "0x1F5B124", VA = "0x1F5B124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1BFC4", Offset = "0xC1BFC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public new abstract string name
		{
			[Token(Token = "0x6001004")]
			get;
		}

		[Token(Token = "0x17000224")]
		protected int frameIndex
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x1F5B15C", Offset = "0x1F5B15C", VA = "0x1F5B15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C000", Offset = "0xC1C000")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x1F5B18C", Offset = "0x1F5B18C", VA = "0x1F5B18C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C03C", Offset = "0xC1C03C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1F5B1C4", Offset = "0x1F5B1C4", VA = "0x1F5B1C4", Slot = "5")]
		public virtual void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1F5B240", Offset = "0x1F5B240", VA = "0x1F5B240", Slot = "6")]
		public virtual void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1F5B288", Offset = "0x1F5B288", VA = "0x1F5B288")]
		protected float FrameIndexToSeconds(float frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1F5B2F8", Offset = "0x1F5B2F8", VA = "0x1F5B2F8")]
		protected Analysis()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[ExecuteInEditMode]
	public abstract class Analysis<T> : Analysis where T : IFeature
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF59E8", Offset = "0xBF59E8")]
		private Track<T> <track>k__BackingField;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> toAdd;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> toRemove;

		[Token(Token = "0x17000225")]
		public new Track<T> track
		{
			[Token(Token = "0x600100B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C078", Offset = "0xC1C078")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C0B4", Offset = "0xC1C0B4")]
			private set
			{
			}
		}

		[Token(Token = "0x600100D")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x600100E")]
		protected void AddFeature(T feature)
		{
		}

		[Token(Token = "0x600100F")]
		protected void RemoveFeature(T feature)
		{
		}

		[Token(Token = "0x6001010")]
		private void Update()
		{
		}

		[Token(Token = "0x6001011")]
		protected Analysis()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class BeatTrack : Track<Beat>
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1F5B370", Offset = "0x1F5B370", VA = "0x1F5B370")]
		public BeatTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023F")]
	public struct Beat : IFeature
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0C")]
		public float timestamp;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float bpm;

		[Token(Token = "0x17000226")]
		private float RhythmTool.IFeature.timestamp
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1F5B328", Offset = "0x1F5B328", VA = "0x1F5B328", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000227")]
		private float RhythmTool.IFeature.length
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1F5B358", Offset = "0x1F5B358", VA = "0x1F5B358", Slot = "5")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x2000240")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8B10", Offset = "0xBD8B10")]
	public class BeatTracker : Analysis<Beat>
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF3C")]
		private float[] signalBuffer;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] signal;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] smoothedSignal;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] autoCorrelation;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E24")]
		private float[] combFilter;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float[] lengthScore;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF44")]
		private float[] offsetScore;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] signalWindow;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] offsetWindow;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] kernel;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E2C")]
		private float[] prevMagnitude;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float prevSpectralFlux;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF4C")]
		private int maxBeatLength;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int minBeatLength;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int beatLength;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBeatLength;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E34")]
		private int beatOffset;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int updateOffset;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF54")]
		private int bufferSize;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int resolution;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int combElements;

		[Token(Token = "0x17000228")]
		public override string name
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1F5B460", Offset = "0x1F5B460", VA = "0x1F5B460", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1F5B4D4", Offset = "0x1F5B4D4", VA = "0x1F5B4D4", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1F5BE5C", Offset = "0x1F5BE5C", VA = "0x1F5BE5C", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1F5C1FC", Offset = "0x1F5C1FC", VA = "0x1F5C1FC")]
		private float GetSample(float[] magnitude)
		{
			return default(float);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1F5C494", Offset = "0x1F5C494", VA = "0x1F5C494")]
		private void UpdateSignal()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1F5C9BC", Offset = "0x1F5C9BC", VA = "0x1F5C9BC")]
		private void UpdateOffset()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1F5C840", Offset = "0x1F5C840", VA = "0x1F5C840")]
		private void UpdateLength()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1F5DAC8", Offset = "0x1F5DAC8", VA = "0x1F5DAC8")]
		private void UpdateAutoCorrelation()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1F5DF68", Offset = "0x1F5DF68", VA = "0x1F5DF68")]
		private void UpdateLengthScore()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1F5E644", Offset = "0x1F5E644", VA = "0x1F5E644")]
		public BeatTracker()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ChromaTrack : Track<Chroma>
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1F5F064", Offset = "0x1F5F064", VA = "0x1F5F064")]
		public ChromaTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public struct Chroma : IFeature
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timestamp;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E2C")]
		public float length;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Note note;

		[Token(Token = "0x17000229")]
		private float RhythmTool.IFeature.timestamp
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x1F5E6E4", Offset = "0x1F5E6E4", VA = "0x1F5E6E4", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022A")]
		private float RhythmTool.IFeature.length
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x1F5E714", Offset = "0x1F5E714", VA = "0x1F5E714", Slot = "5")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x2000243")]
	public enum Note
	{
		[Token(Token = "0x400106D")]
		A,
		[Token(Token = "0x400106E")]
		ASharp,
		[Token(Token = "0x400106F")]
		B,
		[Token(Token = "0x4001070")]
		C,
		[Token(Token = "0x4001071")]
		CSHARP,
		[Token(Token = "0x4001072")]
		D,
		[Token(Token = "0x4001073")]
		DSHARP,
		[Token(Token = "0x4001074")]
		E,
		[Token(Token = "0x4001075")]
		F,
		[Token(Token = "0x4001076")]
		FSHARP,
		[Token(Token = "0x4001077")]
		G,
		[Token(Token = "0x4001078")]
		GSHARP
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8B98", Offset = "0xBD8B98")]
	public class Chromagram : Analysis<Chroma>
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int startNote;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int endNote;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int bufferSize;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E53")]
		private int downsampleFactor;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int chromaInterval;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF6C")]
		private int[] noteIndices;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] downsampled;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] spectrum;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] magnitude;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E5B")]
		private float[] window;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float[] pitchWindow;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF74")]
		private float[] pitch;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] chroma;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int offset;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] chromaHistory;

		[Token(Token = "0x1700022B")]
		public override string name
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x1F5F154", Offset = "0x1F5F154", VA = "0x1F5F154", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1F5F1C8", Offset = "0x1F5F1C8", VA = "0x1F5F1C8", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1F5FB94", Offset = "0x1F5FB94", VA = "0x1F5FB94", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1F5FC50", Offset = "0x1F5FC50", VA = "0x1F5FC50")]
		private void Downsample(float[] samples)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1F5FFC4", Offset = "0x1F5FFC4", VA = "0x1F5FFC4")]
		private void UpdateChroma()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1F5F950", Offset = "0x1F5F950", VA = "0x1F5F950")]
		private static int FrequencyToIndex(float frequency, int length, int samplerate)
		{
			return default(int);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1F5F820", Offset = "0x1F5F820", VA = "0x1F5F820")]
		private static float GetMidiFrequency(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1F6149C", Offset = "0x1F6149C", VA = "0x1F6149C")]
		public Chromagram()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8BFC", Offset = "0xBD8BFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8BFC", Offset = "0xBD8BFC")]
	public class DebugDrawer : MonoBehaviour
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E63")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5A24", Offset = "0xBF5A24")]
		private RhythmPlayer <rhythmPlayer>k__BackingField;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float width;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF7C")]
		private float height;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float padding;

		[Token(Token = "0x1700022C")]
		public RhythmPlayer rhythmPlayer
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1F61578", Offset = "0x1F61578", VA = "0x1F61578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C0F0", Offset = "0xC1C0F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x1F615A8", Offset = "0x1F615A8", VA = "0x1F615A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C12C", Offset = "0xC1C12C")]
			private set
			{
			}
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1F615E0", Offset = "0x1F615E0", VA = "0x1F615E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1F61678", Offset = "0x1F61678", VA = "0x1F61678")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1F6239C", Offset = "0x1F6239C", VA = "0x1F6239C")]
		public DebugDrawer()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public abstract class TrackDrawer
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, TrackDrawer> trackDrawers;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D texture;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1F6ED88", Offset = "0x1F6ED88", VA = "0x1F6ED88")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xC1C168", Offset = "0xC1C168")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1F61E8C", Offset = "0x1F61E8C", VA = "0x1F61E8C")]
		public static void Draw(Track track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6001031")]
		protected abstract void DrawTrack(Track track, Rect rect, float start, float end);

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1F6EEE8", Offset = "0x1F6EEE8", VA = "0x1F6EEE8")]
		public static TrackDrawer GetTrackDrawer(Track track)
		{
			return null;
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1F5EC90", Offset = "0x1F5EC90", VA = "0x1F5EC90")]
		protected static float GetFeaturePosition(IFeature feature, Rect rect, float start, float end)
		{
			return default(float);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1F5EE04", Offset = "0x1F5EE04", VA = "0x1F5EE04")]
		protected static void DrawRect(Rect position)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1F6F124", Offset = "0x1F6F124", VA = "0x1F6F124")]
		private static Type GetTrackDrawerType(Type featureType)
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x1F6F494", Offset = "0x1F6F494", VA = "0x1F6F494")]
		protected TrackDrawer()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class TrackDrawer<T> : TrackDrawer where T : IFeature
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> features;

		[Token(Token = "0x6001037")]
		public TrackDrawer()
		{
		}

		[Token(Token = "0x6001038")]
		protected override void DrawTrack(Track track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6001039")]
		protected virtual void DrawTrack(Track<T> track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x600103A")]
		protected virtual void DrawFeature(T feature, Rect rect, float start, float end)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class OnsetDrawer : TrackDrawer<Onset>
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1F67944", Offset = "0x1F67944", VA = "0x1F67944", Slot = "6")]
		protected override void DrawFeature(Onset feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1F67CDC", Offset = "0x1F67CDC", VA = "0x1F67CDC")]
		public OnsetDrawer()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class ChromaDrawer : TrackDrawer<Chroma>
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1F5E744", Offset = "0x1F5E744", VA = "0x1F5E744", Slot = "6")]
		protected override void DrawFeature(Chroma feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1F5EFE8", Offset = "0x1F5EFE8", VA = "0x1F5EFE8")]
		public ChromaDrawer()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class ValueDrawer : TrackDrawer<Value>
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1F6FE90", Offset = "0x1F6FE90", VA = "0x1F6FE90", Slot = "6")]
		protected override void DrawFeature(Value feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1F7004C", Offset = "0x1F7004C", VA = "0x1F7004C")]
		public ValueDrawer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024B")]
	public class Feature
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E6B")]
		public float timestamp;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float length;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1F64CB4", Offset = "0x1F64CB4", VA = "0x1F64CB4")]
		public Feature()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public interface IFeature
	{
		[Token(Token = "0x1700022D")]
		float timestamp
		{
			[Token(Token = "0x6001042")]
			get;
		}

		[Token(Token = "0x1700022E")]
		float length
		{
			[Token(Token = "0x6001043")]
			get;
		}
	}
	[Token(Token = "0x200024D")]
	public class LomontFFT
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF84")]
		private float[] cosTable;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] sinTable;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1F64CE4", Offset = "0x1F64CE4", VA = "0x1F64CE4")]
		public void FFT(float[] data, bool forward)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1F65C24", Offset = "0x1F65C24", VA = "0x1F65C24")]
		public void RealFFT(float[] data, bool forward)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1F65F98", Offset = "0x1F65F98", VA = "0x1F65F98")]
		private void Reconstruct(float[] data, bool forward)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1F657E0", Offset = "0x1F657E0", VA = "0x1F657E0")]
		private void InitializeTables(int length)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1F65588", Offset = "0x1F65588", VA = "0x1F65588")]
		private static void BitReverse(float[] data)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1F669FC", Offset = "0x1F669FC", VA = "0x1F669FC")]
		private static void Swap(float[] data, int a, int b)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1F66B0C", Offset = "0x1F66B0C", VA = "0x1F66B0C")]
		public LomontFFT()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8D00", Offset = "0xBD8D00")]
	public class OnsetDetector : Analysis<Onset>
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5A60", Offset = "0xBF5A60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5A60", Offset = "0xBF5A60")]
		public float normalization;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5AF4", Offset = "0xBF5AF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5AF4", Offset = "0xBF5AF4")]
		public float threshold;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E73")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5B88", Offset = "0xBF5B88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5B88", Offset = "0xBF5B88")]
		public int bufferSize;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int start;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF8C")]
		private int end;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] buffer;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float mean;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m2;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E7B")]
		private float[] prevMagnitude;

		[Token(Token = "0x1700022F")]
		public override string name
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1F66B84", Offset = "0x1F66B84", VA = "0x1F66B84", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1F66BF8", Offset = "0x1F66BF8", VA = "0x1F66BF8", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1F66D40", Offset = "0x1F66D40", VA = "0x1F66D40", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1F672A8", Offset = "0x1F672A8", VA = "0x1F672A8")]
		private float SpectralDifference(float[] magnitude)
		{
			return default(float);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1F675B0", Offset = "0x1F675B0", VA = "0x1F675B0")]
		private float Normalize(float sample)
		{
			return default(float);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1F6786C", Offset = "0x1F6786C", VA = "0x1F6786C")]
		public OnsetDetector()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class OnsetTrack : Track<Onset>
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1F67D58", Offset = "0x1F67D58", VA = "0x1F67D58")]
		public OnsetTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000250")]
	public struct Onset : IFeature
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float timestamp;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF84")]
		public float strength;

		[Token(Token = "0x17000230")]
		private float RhythmTool.IFeature.timestamp
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1F66B3C", Offset = "0x1F66B3C", VA = "0x1F66B3C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000231")]
		private float RhythmTool.IFeature.length
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x1F66B6C", Offset = "0x1F66B6C", VA = "0x1F66B6C", Slot = "5")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x2000251")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8D64", Offset = "0xBD8D64")]
	public class RhythmAnalyzer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF5EC", Offset = "0xBDF5EC")]
		private sealed class <>c
		{
			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<Analysis> <>9__41_0;

			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3EA2")]
			public static Func<Analysis, Track> <>9__41_1;

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x1F6A0F0", Offset = "0x1F6A0F0", VA = "0x1F6A0F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x1F6A120", Offset = "0x1F6A120", VA = "0x1F6A120")]
			internal bool <Initialize>b__41_0(Analysis a)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CED")]
			[Address(RVA = "0x1F6A1BC", Offset = "0x1F6A1BC", VA = "0x1F6A1BC")]
			internal Track <Initialize>b__41_1(Analysis a)
			{
				return null;
			}
		}

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5C5C", Offset = "0xBF5C5C")]
		private RhythmData <rhythmData>k__BackingField;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5C98", Offset = "0xBF5C98")]
		private float <progress>k__BackingField;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E83")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5CD4", Offset = "0xBF5CD4")]
		private bool <isDone>k__BackingField;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5D10", Offset = "0xBF5D10")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EF9C")]
		private AudioClip audioClip;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int hopSize;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int frameSize;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int bufferCount;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8B")]
		private int channels;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int sampleRate;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFA4")]
		private int totalFrames;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastFrame;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] buffer;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] window;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E93")]
		private float[] samples;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float[] monoSamples;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFAC")]
		private float[] spectrum;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] magnitude;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Thread analyze;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AutoResetEvent waitForMainThread;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E9B")]
		private bool getData;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool abort;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C92C")]
		private int initialLength;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Analysis> analyses;

		[Token(Token = "0x17000232")]
		public RhythmData rhythmData
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1F67F94", Offset = "0x1F67F94", VA = "0x1F67F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C220", Offset = "0xC1C220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1F67FC4", Offset = "0x1F67FC4", VA = "0x1F67FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C25C", Offset = "0xC1C25C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float progress
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1F67FFC", Offset = "0x1F67FFC", VA = "0x1F67FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C298", Offset = "0xC1C298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x1F6802C", Offset = "0x1F6802C", VA = "0x1F6802C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C2D4", Offset = "0xC1C2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public bool isDone
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x1F68064", Offset = "0x1F68064", VA = "0x1F68064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C310", Offset = "0xC1C310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1F680A8", Offset = "0x1F680A8", VA = "0x1F680A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C34C", Offset = "0xC1C34C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public bool initialized
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x1F680F4", Offset = "0x1F680F4", VA = "0x1F680F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C388", Offset = "0xC1C388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x1F68138", Offset = "0x1F68138", VA = "0x1F68138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C3C4", Offset = "0xC1C3C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<RhythmData> Initialized
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x1F62E90", Offset = "0x1F62E90", VA = "0x1F62E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C1A8", Offset = "0xC1C1A8")]
			add
			{
			}
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x1F67E48", Offset = "0x1F67E48", VA = "0x1F67E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C1E4", Offset = "0xC1C1E4")]
			remove
			{
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1F62748", Offset = "0x1F62748", VA = "0x1F62748")]
		public RhythmData Analyze(AudioClip audioClip, int initialLength = 5)
		{
			return null;
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1F68184", Offset = "0x1F68184", VA = "0x1F68184")]
		public void Abort()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1F682A8", Offset = "0x1F682A8", VA = "0x1F682A8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1F68D10", Offset = "0x1F68D10", VA = "0x1F68D10")]
		private void StartAnalyze()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1F690B4", Offset = "0x1F690B4", VA = "0x1F690B4")]
		private void Analyze()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1F6979C", Offset = "0x1F6979C", VA = "0x1F6979C")]
		private void OnAnalysisDone()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1F69334", Offset = "0x1F69334", VA = "0x1F69334")]
		private void ProcessFrame(float[] samples)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1F692DC", Offset = "0x1F692DC", VA = "0x1F692DC")]
		private void FillBuffer()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1F69C04", Offset = "0x1F69C04", VA = "0x1F69C04")]
		private void GetData()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1F69DD8", Offset = "0x1F69DD8", VA = "0x1F69DD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1F69F4C", Offset = "0x1F69F4C", VA = "0x1F69F4C")]
		public RhythmAnalyzer()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class RhythmData : ScriptableObject, IEnumerable<Track>, IEnumerable
	{
		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF628", Offset = "0xBDF628")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<Track>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Track <>2__current;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RhythmData <>4__this;

			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3EAA")]
			private List<Track>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004E6")]
			private Track System.Collections.Generic.IEnumerator<RhythmTool.Track>.Current
			{
				[Token(Token = "0x6002CF2")]
				[Address(RVA = "0x1F6AF9C", Offset = "0x1F6AF9C", VA = "0x1F6AF9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CF4")]
				[Address(RVA = "0x1F6B06C", Offset = "0x1F6B06C", VA = "0x1F6B06C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0x1F6A328", Offset = "0x1F6A328", VA = "0x1F6A328")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0x1F6A988", Offset = "0x1F6A988", VA = "0x1F6A988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x1F6ABB4", Offset = "0x1F6ABB4", VA = "0x1F6ABB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x1F6AB20", Offset = "0x1F6AB20", VA = "0x1F6AB20")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x1F6AFCC", Offset = "0x1F6AFCC", VA = "0x1F6AFCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFB4")]
		[SerializeField]
		private List<Track> _tracks;

		[Token(Token = "0x17000236")]
		public new string name
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x1F6A20C", Offset = "0x1F6A20C", VA = "0x1F6A20C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public List<Track> tracks
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x1F6A23C", Offset = "0x1F6A23C", VA = "0x1F6A23C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106B")]
		public Track<T> GetTrack<T>() where T : IFeature
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		public Track<T> GetTrack<T>(string trackName) where T : IFeature
		{
			return null;
		}

		[Token(Token = "0x600106D")]
		public void GetTracks<T>(List<Track<T>> tracks) where T : IFeature
		{
		}

		[Token(Token = "0x600106E")]
		public void GetTracks<T>(List<Track<T>> tracks, string trackName) where T : IFeature
		{
		}

		[Token(Token = "0x600106F")]
		public void GetFeatures<T>(List<T> features, float start, float end) where T : IFeature
		{
		}

		[Token(Token = "0x6001070")]
		public void GetFeatures<T>(List<T> features, float start, float end, string trackName) where T : IFeature
		{
		}

		[Token(Token = "0x6001071")]
		public void GetIntersectingFeatures<T>(List<T> features, float start, float end) where T : IFeature
		{
		}

		[Token(Token = "0x6001072")]
		public void GetIntersectingFeatures<T>(List<T> features, float start, float end, string trackName) where T : IFeature
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1F6A26C", Offset = "0x1F6A26C", VA = "0x1F6A26C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1C400", Offset = "0xC1C400")]
		public IEnumerator<Track> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1F6A370", Offset = "0x1F6A370", VA = "0x1F6A370", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1F6A450", Offset = "0x1F6A450", VA = "0x1F6A450")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1F68C08", Offset = "0x1F68C08", VA = "0x1F68C08")]
		public static RhythmData Create(string name, IEnumerable<Track> tracks)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1F6A8D0", Offset = "0x1F6A8D0", VA = "0x1F6A8D0")]
		public RhythmData()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD8DF8", Offset = "0xBD8DF8")]
	public class RhythmEventProvider : RhythmTarget
	{
		[Token(Token = "0x2000600")]
		private abstract class RhythmEvent : IDisposable
		{
			[Token(Token = "0x6002CF5")]
			public abstract void Process(RhythmData rhythmData, float start, float end);

			[Token(Token = "0x6002CF6")]
			public abstract void Dispose();

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x1F6BAE4", Offset = "0x1F6BAE4", VA = "0x1F6BAE4")]
			protected RhythmEvent()
			{
			}
		}

		[Token(Token = "0x2000601")]
		private class RhythmEvent<T> : RhythmEvent where T : IFeature
		{
			[Token(Token = "0x40029F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<T> _action;

			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> _features;

			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string trackName;

			[Token(Token = "0x6002CF8")]
			public RhythmEvent(string trackName)
			{
			}

			[Token(Token = "0x6002CF9")]
			public override void Process(RhythmData rhythmData, float start, float end)
			{
			}

			[Token(Token = "0x6002CFA")]
			public void Register(Action<T> action)
			{
			}

			[Token(Token = "0x6002CFB")]
			public void Unregister(Action<T> action)
			{
			}

			[Token(Token = "0x6002CFC")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5DC4", Offset = "0xBF5DC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5DC4", Offset = "0xBF5DC4")]
		public float offset;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFBC")]
		private Dictionary<int, RhythmEvent> _events;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1F6B09C", Offset = "0x1F6B09C", VA = "0x1F6B09C", Slot = "4")]
		public override void Process(RhythmData rhythmData, float start, float end)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1F6B480", Offset = "0x1F6B480", VA = "0x1F6B480", Slot = "5")]
		public override void Reset(RhythmData rhythmData, float time)
		{
		}

		[Token(Token = "0x600107A")]
		public void Register<T>(Action<T> action) where T : IFeature
		{
		}

		[Token(Token = "0x600107B")]
		public void Unregister<T>(Action<T> action) where T : IFeature
		{
		}

		[Token(Token = "0x600107C")]
		public void Register<T>(Action<T> action, string trackName) where T : IFeature
		{
		}

		[Token(Token = "0x600107D")]
		public void Unregister<T>(Action<T> action, string trackName) where T : IFeature
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1F6B538", Offset = "0x1F6B538", VA = "0x1F6B538")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1F6B8B8", Offset = "0x1F6B8B8", VA = "0x1F6B8B8")]
		private static int GetHashCode(Type type, string trackName)
		{
			return default(int);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1F6B9A4", Offset = "0x1F6B9A4", VA = "0x1F6B9A4")]
		private static int CombineHashCodes(int h1, int h2)
		{
			return default(int);
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1F6B9FC", Offset = "0x1F6B9FC", VA = "0x1F6B9FC")]
		public RhythmEventProvider()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8EA8", Offset = "0xBD8EA8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8EA8", Offset = "0xBD8EA8")]
	public class RhythmPlayer : MonoBehaviour
	{
		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EB2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5F10", Offset = "0xBF5F10")]
		private AudioSource <audioSource>k__BackingField;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF5F4C", Offset = "0xBF5F4C")]
		private float <prevTime>k__BackingField;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFC4")]
		public RhythmData rhythmData;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<RhythmTarget> targets;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AudioClip _audioClip;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _time;

		[Token(Token = "0x17000238")]
		public AudioSource audioSource
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x1F6C190", Offset = "0x1F6C190", VA = "0x1F6C190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C618", Offset = "0xC1C618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x1F6C1C0", Offset = "0x1F6C1C0", VA = "0x1F6C1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C654", Offset = "0xC1C654")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public AudioClip audioClip
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x1F6C1F8", Offset = "0x1F6C1F8", VA = "0x1F6C1F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x1F627CC", Offset = "0x1F627CC", VA = "0x1F627CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float time
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x1F6C228", Offset = "0x1F6C228", VA = "0x1F6C228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x1F6C258", Offset = "0x1F6C258", VA = "0x1F6C258")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public float volume
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x1F6C2CC", Offset = "0x1F6C2CC", VA = "0x1F6C2CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x1F6C320", Offset = "0x1F6C320", VA = "0x1F6C320")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float pitch
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x1F6C37C", Offset = "0x1F6C37C", VA = "0x1F6C37C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x1F6C3D0", Offset = "0x1F6C3D0", VA = "0x1F6C3D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool isPlaying
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x1F6319C", Offset = "0x1F6319C", VA = "0x1F6319C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023E")]
		public float prevTime
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x1F6C42C", Offset = "0x1F6C42C", VA = "0x1F6C42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C690", Offset = "0xC1C690")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x1F6C45C", Offset = "0x1F6C45C", VA = "0x1F6C45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C6CC", Offset = "0xC1C6CC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action SongLoaded
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x1F6BB14", Offset = "0x1F6BB14", VA = "0x1F6BB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C4B0", Offset = "0xC1C4B0")]
			add
			{
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x1F6BC60", Offset = "0x1F6BC60", VA = "0x1F6BC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C4EC", Offset = "0xC1C4EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action SongEnded
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x1F6BDAC", Offset = "0x1F6BDAC", VA = "0x1F6BDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C528", Offset = "0xC1C528")]
			add
			{
			}
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x1F6BEF8", Offset = "0x1F6BEF8", VA = "0x1F6BEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C564", Offset = "0xC1C564")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action Reset
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x1F62FDC", Offset = "0x1F62FDC", VA = "0x1F62FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C5A0", Offset = "0xC1C5A0")]
			add
			{
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x1F6C044", Offset = "0x1F6C044", VA = "0x1F6C044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C5DC", Offset = "0xC1C5DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1F63B68", Offset = "0x1F63B68", VA = "0x1F63B68")]
		public void Play()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1F62AB4", Offset = "0x1F62AB4", VA = "0x1F62AB4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1F6C9F4", Offset = "0x1F6C9F4", VA = "0x1F6C9F4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1F6CA40", Offset = "0x1F6CA40", VA = "0x1F6CA40")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1F6CA8C", Offset = "0x1F6CA8C", VA = "0x1F6CA8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1F6CB24", Offset = "0x1F6CB24", VA = "0x1F6CB24")]
		private void Update()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1F6D3B4", Offset = "0x1F6D3B4", VA = "0x1F6D3B4")]
		private void OnSongLoaded()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1F6D544", Offset = "0x1F6D544", VA = "0x1F6D544")]
		private void OnSongEnded()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1F6C494", Offset = "0x1F6C494", VA = "0x1F6C494")]
		private void OnReset()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1F6D5B8", Offset = "0x1F6D5B8", VA = "0x1F6D5B8")]
		public RhythmPlayer()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public abstract class RhythmTarget : ScriptableObject
	{
		[Token(Token = "0x600109F")]
		public abstract void Process(RhythmData rhythmData, float start, float end);

		[Token(Token = "0x60010A0")]
		public abstract void Reset(RhythmData rhythmData, float time);

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1F6BAB4", Offset = "0x1F6BAB4", VA = "0x1F6BAB4")]
		protected RhythmTarget()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD8FAC", Offset = "0xBD8FAC")]
	public class Segmenter : Analysis<Value>
	{
		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EBA")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF5F88", Offset = "0xBF5F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF5F88", Offset = "0xBF5F88")]
		public float threshold;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF601C", Offset = "0xBF601C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF601C", Offset = "0xBF601C")]
		public int smoothing;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFCC")]
		private Vector2 changeWeight;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float changeStartSlope;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float changeEndSlope;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int iterations;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC2")]
		private int bufferSize;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float[][] buffer;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFD4")]
		private float[] kernel;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float w;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float current;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float next;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3ECA")]
		private bool change;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float changeSign;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFDC")]
		private Vector2 changeStart;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maxSlope;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int maxSlopeIndex;

		[Token(Token = "0x1700023F")]
		public override string name
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x1F6D5E8", Offset = "0x1F6D5E8", VA = "0x1F6D5E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1F6D65C", Offset = "0x1F6D65C", VA = "0x1F6D65C", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1F6D9EC", Offset = "0x1F6D9EC", VA = "0x1F6D9EC", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1F6E328", Offset = "0x1F6E328", VA = "0x1F6E328")]
		private void FindSegments()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1F6E4FC", Offset = "0x1F6E4FC", VA = "0x1F6E4FC")]
		private void FindChangeEnd(float slope)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1F6E910", Offset = "0x1F6E910", VA = "0x1F6E910")]
		private void FindChangeStart(float slope)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1F6EB74", Offset = "0x1F6EB74", VA = "0x1F6EB74")]
		public Segmenter()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public abstract class Track : ScriptableObject
	{
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x17000240")]
		public new string name
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x1F6ED28", Offset = "0x1F6ED28", VA = "0x1F6ED28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1F6ED58", Offset = "0x1F6ED58", VA = "0x1F6ED58")]
		protected Track()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD9010", Offset = "0xBD9010")]
	public abstract class Track<T> : Track where T : IFeature
	{
		[Serializable]
		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF664", Offset = "0xBDF664")]
		private sealed class <>c
		{
			[Token(Token = "0x40029F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<T> <>9__11_0;

			[Token(Token = "0x6002CFE")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CFF")]
			internal int <Sort>b__11_0(T a, T b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> _features;

		[NonSerialized]
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> cachedTimestamps;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, int> cachedIndices;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type concreteType;

		[Token(Token = "0x17000241")]
		public T Item
		{
			[Token(Token = "0x60010AB")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000242")]
		public int count
		{
			[Token(Token = "0x60010AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010AD")]
		static Track()
		{
		}

		[Token(Token = "0x60010AE")]
		public void Add(T feature)
		{
		}

		[Token(Token = "0x60010AF")]
		public void Remove(T feature)
		{
		}

		[Token(Token = "0x60010B0")]
		public void Sort()
		{
		}

		[Token(Token = "0x60010B1")]
		public void GetFeatures(List<T> features, float start, float end)
		{
		}

		[Token(Token = "0x60010B2")]
		public void GetIntersectingFeatures(List<T> features, float start, float end)
		{
		}

		[Token(Token = "0x60010B3")]
		public int GetIndex(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60010B4")]
		private int BinarySearch(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60010B5")]
		private int GetIntersectingIndex(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60010B6")]
		private int GetCacheIndex(int timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60010B7")]
		private void ClearCache(float timestamp)
		{
		}

		[Token(Token = "0x60010B8")]
		public static Track<T> Create(string name)
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		protected Track()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Util
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3ED2")]
		private static LomontFFT fft;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1F697D4", Offset = "0x1F697D4", VA = "0x1F697D4")]
		public static void GetMono(float[] samples, float[] monoSamples, int channels = 0)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1F60D94", Offset = "0x1F60D94", VA = "0x1F60D94")]
		public static void GetSpectrum(float[] samples)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1F60EB4", Offset = "0x1F60EB4", VA = "0x1F60EB4")]
		public static void GetSpectrumMagnitude(float[] spectrum, float[] magnitude)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1F6F4C4", Offset = "0x1F6F4C4", VA = "0x1F6F4C4")]
		public static void GetSpectrumPhase(float[] spectrum, float[] phase)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1F60C80", Offset = "0x1F60C80", VA = "0x1F60C80")]
		internal static void ApplyWindow(float[] array, float[] window)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1F61340", Offset = "0x1F61340", VA = "0x1F61340")]
		public static float Mean(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1F6E0F0", Offset = "0x1F6E0F0", VA = "0x1F6E0F0")]
		public static float WeightedSum(float[] array, float[] kernel, int index)
		{
			return default(float);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1F5D94C", Offset = "0x1F5D94C", VA = "0x1F5D94C")]
		public static int MaxIndex(float[] array, int start = 0, int end = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1F6F8E4", Offset = "0x1F6F8E4", VA = "0x1F6F8E4")]
		public static int MinIndex(float[] array, int start = 0, int end = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1F5E4FC", Offset = "0x1F5E4FC", VA = "0x1F5E4FC")]
		public static float Max(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1F6FA60", Offset = "0x1F6FA60", VA = "0x1F6FA60")]
		public static float Min(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1F5D534", Offset = "0x1F5D534", VA = "0x1F5D534")]
		public static void Smooth(float[] array, float[] smoothedArray, float[] kernel)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1F5D708", Offset = "0x1F5D708", VA = "0x1F5D708")]
		public static float Interpolate(float[] array, float index)
		{
			return default(float);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1F6FBA8", Offset = "0x1F6FBA8", VA = "0x1F6FBA8")]
		public static void HannWindow(float[] array)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1F5FA78", Offset = "0x1F5FA78", VA = "0x1F5FA78")]
		public static float[] HannWindow(int length)
		{
			return null;
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1F5BCF0", Offset = "0x1F5BCF0", VA = "0x1F5BCF0")]
		public static float HannWindow(int n, int windowSize)
		{
			return default(float);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1F6FD54", Offset = "0x1F6FD54", VA = "0x1F6FD54")]
		public Util()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class ValueTrack : Track<Value>
	{
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1F700C8", Offset = "0x1F700C8", VA = "0x1F700C8")]
		public ValueTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025B")]
	public struct Value : IFeature
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float timestamp;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFD4")]
		public float length;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x17000243")]
		private float RhythmTool.IFeature.timestamp
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x1F6FE30", Offset = "0x1F6FE30", VA = "0x1F6FE30", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000244")]
		private float RhythmTool.IFeature.length
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x1F6FE60", Offset = "0x1F6FE60", VA = "0x1F6FE60", Slot = "5")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9074", Offset = "0xBD9074")]
	public class VolumeSampler : Analysis<Value>
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF612C", Offset = "0xBF612C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF612C", Offset = "0xBF612C")]
		private int _interval;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF61F0", Offset = "0xBF61F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF61F0", Offset = "0xBF61F0")]
		private int _smoothing;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EDA")]
		private int bufferSize;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int smoothingBufferSize;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFEC")]
		private float[] buffer;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] smoothingBuffer;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] smoothingKernel;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float w;

		[Token(Token = "0x17000245")]
		public override string name
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x1F701B8", Offset = "0x1F701B8", VA = "0x1F701B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public int interval
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x1F7022C", Offset = "0x1F7022C", VA = "0x1F7022C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x1F7025C", Offset = "0x1F7025C", VA = "0x1F7025C")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public int smoothing
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x1F70368", Offset = "0x1F70368", VA = "0x1F70368")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x1F70398", Offset = "0x1F70398", VA = "0x1F70398")]
			set
			{
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1F704A4", Offset = "0x1F704A4", VA = "0x1F704A4", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1F707B8", Offset = "0x1F707B8", VA = "0x1F707B8", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1F70D10", Offset = "0x1F70D10", VA = "0x1F70D10")]
		public VolumeSampler()
		{
		}
	}
}
namespace RhythmTool.Examples
{
	[Token(Token = "0x200025D")]
	public abstract class SongSelector : MonoBehaviour
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EE2")]
		public RhythmAnalyzer analyzer;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RhythmPlayer player;

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1F62700", Offset = "0x1F62700", VA = "0x1F62700", Slot = "4")]
		public virtual void NextSong()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1F6286C", Offset = "0x1F6286C", VA = "0x1F6286C")]
		protected SongSelector()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class AudioClipSelector : SongSelector
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFF4")]
		public List<AudioClip> songs;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentSong;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1F62410", Offset = "0x1F62410", VA = "0x1F62410")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1F62440", Offset = "0x1F62440", VA = "0x1F62440", Slot = "4")]
		public override void NextSong()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1F62828", Offset = "0x1F62828", VA = "0x1F62828")]
		public AudioClipSelector()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class Line : MonoBehaviour
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF62B0", Offset = "0xBF62B0")]
		private float <timestamp>k__BackingField;

		[Token(Token = "0x17000248")]
		public float timestamp
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x1F6289C", Offset = "0x1F6289C", VA = "0x1F6289C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C708", Offset = "0xC1C708")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x1F628CC", Offset = "0x1F628CC", VA = "0x1F628CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C744", Offset = "0xC1C744")]
			private set
			{
			}
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1F62904", Offset = "0x1F62904", VA = "0x1F62904")]
		public void Init(Color color, float opacity, float timestamp)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1F62A84", Offset = "0x1F62A84", VA = "0x1F62A84")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class Visualizer : MonoBehaviour
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RhythmAnalyzer analyzer;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EEA")]
		public RhythmPlayer player;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RhythmEventProvider eventProvider;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4EFFC")]
		public Text textBPM;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Line linePrefab;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Line> lines;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Chroma> chromaFeatures;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EF2")]
		private Note lastNote;

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1F62B00", Offset = "0x1F62B00", VA = "0x1F62B00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1F63128", Offset = "0x1F63128", VA = "0x1F63128")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1F63204", Offset = "0x1F63204", VA = "0x1F63204")]
		private void UpdateLines()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1F63B1C", Offset = "0x1F63B1C", VA = "0x1F63B1C")]
		private void OnInitialized(RhythmData rhythmData)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1F63D04", Offset = "0x1F63D04", VA = "0x1F63D04")]
		private void OnReset()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1F6411C", Offset = "0x1F6411C", VA = "0x1F6411C")]
		private void OnBeat(Beat beat)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1F6457C", Offset = "0x1F6457C", VA = "0x1F6457C")]
		private void OnOnset(Onset onset)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1F64BB4", Offset = "0x1F64BB4", VA = "0x1F64BB4")]
		private void OnSegment(Value segment)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1F642E4", Offset = "0x1F642E4", VA = "0x1F642E4")]
		private void CreateLine(float timestamp, float position, float scale, Color color, float opacity)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1F64C70", Offset = "0x1F64C70", VA = "0x1F64C70")]
		public Visualizer()
		{
		}
	}
}
namespace DigitalRuby.ThunderAndLightning
{
	[Token(Token = "0x2000261")]
	public class DemoConfigureScript : MonoBehaviour
	{
		[Token(Token = "0x40010F3")]
		private const string scriptTemplate = "// Important, make sure this script is assigned properly, or you will get null ref exceptions.\r\n    DigitalRuby.ThunderAndLightning.LightningBoltScript script = gameObject.GetComponent<DigitalRuby.ThunderAndLightning.LightningBoltScript>();\r\n    int count = {0};\r\n    float duration = {1}f;\r\n    float delay = 0.0f;\r\n    int seed = {2};\r\n    System.Random r = new System.Random(seed);\r\n    Vector3 start = new Vector3({3}f, {4}f, {5}f);\r\n    Vector3 end = new Vector3({6}f, {7}f, {8}f);\r\n    int generations = {9};\r\n    float chaosFactor = {10}f;\r\n    float trunkWidth = {11}f;\r\n    float intensity = {12}f;\r\n    float glowIntensity = {13}f;\r\n    float glowWidthMultiplier = {14}f;\r\n    float forkedness = {15}f;\r\n    float singleDuration = Mathf.Max(1.0f / 30.0f, (duration / (float)count));\r\n    float fadePercent = {16}f;\r\n    float growthMultiplier = {17}f;\r\n    System.Collections.Generic.List<LightningBoltParameters> paramList = new System.Collections.Generic.List<LightningBoltParameters>();\r\n    while (count-- > 0)\r\n    {{\r\n        DigitalRuby.ThunderAndLightning.LightningBoltParameters parameters = new DigitalRuby.ThunderAndLightning.LightningBoltParameters\r\n        {{\r\n            Start = start,\r\n            End = end,\r\n            Generations = generations,\r\n            LifeTime = (count == 1 ? singleDuration : (singleDuration * (((float)r.NextDouble() * 0.4f) + 0.8f))),\r\n            Delay = delay,\r\n            ChaosFactor = chaosFactor,\r\n            ChaosFactorForks = chaosFactor,\r\n            TrunkWidth = trunkWidth,\r\n            GlowIntensity = glowIntensity,\r\n            GlowWidthMultiplier = glowWidthMultiplier,\r\n            Forkedness = forkedness,\r\n            Random = r,\r\n            FadePercent = fadePercent, // set to 0 to disable fade in / out\r\n            GrowthMultiplier = growthMultiplier\r\n        }};\r\n        paramList.Add(parameters);\r\n        delay += (singleDuration * (((float)r.NextDouble() * 0.8f) + 0.4f));\r\n    }}\r\n    script.CreateLightningBolts(paramList);\r\n";

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C934")]
		private int lastSeed;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 lastStart;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 lastEnd;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningBoltScript LightningBoltScript;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EF9")]
		public Slider GenerationsSlider;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Slider BoltCountSlider;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F004")]
		public Slider DurationSlider;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider ChaosSlider;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider TrunkWidthSlider;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider ForkednessSlider;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F01")]
		public Slider IntensitySlider;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text IntensityValueLabel;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F00C")]
		public Slider GlowIntensitySlider;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider GlowWidthSlider;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider FadePercentSlider;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider GrowthMultiplierSlider;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F09")]
		public Slider DistanceSlider;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text GenerationsValueLabel;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F014")]
		public Text BoltCountValueLabel;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text DurationValueLabel;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text ChaosValueLabel;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text TrunkWidthValueLabel;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F11")]
		public Text ForkednessValueLabel;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text GlowIntensityValueLabel;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F01C")]
		public Text GlowWidthValueLabel;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text FadePercentValueLabel;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text GrowthMultiplierValueLabel;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text DistanceValueLabel;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F19")]
		public Text SeedLabel;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RawImage StartImage;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F024")]
		public RawImage EndImage;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button CopySeedButton;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputField SeedInputField;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text SpaceBarLabel;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F21")]
		public Toggle OrthographicToggle;

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1BD31B0", Offset = "0x1BD31B0", VA = "0x1BD31B0")]
		public void GenerationsSliderChanged(float value)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1BD376C", Offset = "0x1BD376C", VA = "0x1BD376C")]
		public void BoltCountSliderChanged(float value)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1BD37A0", Offset = "0x1BD37A0", VA = "0x1BD37A0")]
		public void DurationSliderChanged(float value)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1BD37D4", Offset = "0x1BD37D4", VA = "0x1BD37D4")]
		public void LengthSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1BD3808", Offset = "0x1BD3808", VA = "0x1BD3808")]
		public void TrunkSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1BD383C", Offset = "0x1BD383C", VA = "0x1BD383C")]
		public void IntensitySliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1BD3870", Offset = "0x1BD3870", VA = "0x1BD3870")]
		public void GlowSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1BD38A4", Offset = "0x1BD38A4", VA = "0x1BD38A4")]
		public void FadePercentValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1BD38D8", Offset = "0x1BD38D8", VA = "0x1BD38D8")]
		public void GrowthMultiplierValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1BD390C", Offset = "0x1BD390C", VA = "0x1BD390C")]
		public void DistanceValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1BD3940", Offset = "0x1BD3940", VA = "0x1BD3940")]
		public void StartLightningDrag()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1BD39CC", Offset = "0x1BD39CC", VA = "0x1BD39CC")]
		public void EndLightningDrag()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1BD3A58", Offset = "0x1BD3A58", VA = "0x1BD3A58")]
		public void CreateButtonClicked()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1BD48F4", Offset = "0x1BD48F4", VA = "0x1BD48F4")]
		public void OrthographicToggleClicked()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1BD4A80", Offset = "0x1BD4A80", VA = "0x1BD4A80")]
		public void CopyButtonClicked()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1BD54AC", Offset = "0x1BD54AC", VA = "0x1BD54AC")]
		public void ClearButtonClicked()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1BD31E4", Offset = "0x1BD31E4", VA = "0x1BD31E4")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1BD3A88", Offset = "0x1BD3A88", VA = "0x1BD3A88")]
		private void CallLightning()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1BD6100", Offset = "0x1BD6100", VA = "0x1BD6100")]
		private void UpdateStatusLabel(TimeSpan time)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1BD67E4", Offset = "0x1BD67E4", VA = "0x1BD67E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1BD692C", Offset = "0x1BD692C", VA = "0x1BD692C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1BD69C0", Offset = "0x1BD69C0", VA = "0x1BD69C0")]
		public DemoConfigureScript()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class DemoMeshScript : MonoBehaviour
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1BD69F0", Offset = "0x1BD69F0", VA = "0x1BD69F0")]
		public DemoMeshScript()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class DemoPathScript : MonoBehaviour
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameObject Crate;

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1BD6A20", Offset = "0x1BD6A20", VA = "0x1BD6A20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1BD6B08", Offset = "0x1BD6B08", VA = "0x1BD6B08")]
		public DemoPathScript()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class DemoPlayerControllerScript : MonoBehaviour
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F02C")]
		public Text SpellLabel;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Speed;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float RotateSpeed;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningSpellScript[] Spells;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F29")]
		private int spellIndex;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool spellMouseButtonDown;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F034")]
		private GameObject rightHand;

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1BD6B38", Offset = "0x1BD6B38", VA = "0x1BD6B38")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1BD6EFC", Offset = "0x1BD6EFC", VA = "0x1BD6EFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1BD7114", Offset = "0x1BD7114", VA = "0x1BD7114")]
		private void Update()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1BD7E30", Offset = "0x1BD7E30", VA = "0x1BD7E30")]
		private bool GuiElementShouldPassThrough()
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1BD7014", Offset = "0x1BD7014", VA = "0x1BD7014")]
		private void UpdateSpell()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1BD85E0", Offset = "0x1BD85E0", VA = "0x1BD85E0")]
		private void ChangeSpell(int dir)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1BD7DF8", Offset = "0x1BD7DF8", VA = "0x1BD7DF8")]
		public void PreviousSpell()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1BD7DC0", Offset = "0x1BD7DC0", VA = "0x1BD7DC0")]
		public void NextSpell()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1BD87D4", Offset = "0x1BD87D4", VA = "0x1BD87D4")]
		public DemoPlayerControllerScript()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x2000603")]
		private enum RotationAxes
		{
			[Token(Token = "0x40029F6")]
			MouseXAndY,
			[Token(Token = "0x40029F7")]
			MouseX,
			[Token(Token = "0x40029F8")]
			MouseY
		}

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ThunderAndLightningScript ThunderAndLightningScript;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningBoltScript LightningBoltScript;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParticleSystem CloudParticleSystem;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F31")]
		public float MoveSpeed;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool EnableMouseLook;

		[Token(Token = "0x4001124")]
		private const float fastCloudSpeed = 50f;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float deltaTime;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fpsIncrement;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string fpsText;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F39")]
		private RotationAxes axes;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float sensitivityX;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F044")]
		private float sensitivityY;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float minimumX;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maximumX;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float minimumY;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F41")]
		private float maximumY;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float rotationX;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F04C")]
		private float rotationY;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly GUIStyle style;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1BD8828", Offset = "0x1BD8828", VA = "0x1BD8828")]
		private void UpdateThunder()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1BD8BC8", Offset = "0x1BD8BC8", VA = "0x1BD8BC8")]
		private void UpdateMovement()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1BD8ED8", Offset = "0x1BD8ED8", VA = "0x1BD8ED8")]
		private void UpdateMouseLook()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1BD9B34", Offset = "0x1BD9B34", VA = "0x1BD9B34")]
		private void UpdateQuality()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1BD9C94", Offset = "0x1BD9C94", VA = "0x1BD9C94")]
		private void UpdateOther()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1BD9E98", Offset = "0x1BD9E98", VA = "0x1BD9E98")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1BDA408", Offset = "0x1BDA408", VA = "0x1BDA408")]
		private void Update()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1BDA46C", Offset = "0x1BDA46C", VA = "0x1BDA46C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1BD997C", Offset = "0x1BD997C", VA = "0x1BD997C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1BD7CD4", Offset = "0x1BD7CD4", VA = "0x1BD7CD4")]
		public static void ReloadCurrentScene()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1BDA5EC", Offset = "0x1BDA5EC", VA = "0x1BDA5EC")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class DemoScript2D : MonoBehaviour
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject SpriteToRotate;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningBoltPrefabScriptBase LightningScript;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1BDA778", Offset = "0x1BDA778", VA = "0x1BDA778")]
		private void Start()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1BDA78C", Offset = "0x1BDA78C", VA = "0x1BDA78C")]
		private void Update()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1BDA974", Offset = "0x1BDA974", VA = "0x1BDA974")]
		public DemoScript2D()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class DemoScriptManualAutomatic : MonoBehaviour
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject LightningPrefab;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F50")]
		public Toggle AutomaticToggle;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform a;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F054")]
		public Transform b;

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1BDA9A4", Offset = "0x1BDA9A4", VA = "0x1BDA9A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1BDACCC", Offset = "0x1BDACCC", VA = "0x1BDACCC")]
		public void AutomaticToggled()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1BDADE4", Offset = "0x1BDADE4", VA = "0x1BDADE4")]
		public void ManualTriggerClicked()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1BDAECC", Offset = "0x1BDAECC", VA = "0x1BDAECC")]
		public DemoScriptManualAutomatic()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class DemoScriptMoveRandomly : MonoBehaviour
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float elapsed;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 startStartPos;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 startEndPos;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F58")]
		private Vector3 endStartPos;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 endEndPos;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F05C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF62EC", Offset = "0xBF62EC")]
		public Transform Transform1;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6350", Offset = "0xBF6350")]
		public Transform Transform2;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF63B4", Offset = "0xBF63B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF63B4", Offset = "0xBF63B4")]
		public float MoveTimeSeconds;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1BDAEFC", Offset = "0x1BDAEFC", VA = "0x1BDAEFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1BDAF10", Offset = "0x1BDAF10", VA = "0x1BDAF10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1BDB614", Offset = "0x1BDB614", VA = "0x1BDB614")]
		public DemoScriptMoveRandomly()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class DemoScriptPrefabTutorial : MonoBehaviour
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningBoltPrefabScript LightningScript;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1BDB670", Offset = "0x1BDB670", VA = "0x1BDB670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1BDB684", Offset = "0x1BDB684", VA = "0x1BDB684")]
		private void Update()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1BDB6F4", Offset = "0x1BDB6F4", VA = "0x1BDB6F4")]
		public DemoScriptPrefabTutorial()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class DemoScriptReloadSceneEsc : MonoBehaviour
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1BDB724", Offset = "0x1BDB724", VA = "0x1BDB724")]
		private void Start()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1BDB738", Offset = "0x1BDB738", VA = "0x1BDB738")]
		private void Update()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1BDB844", Offset = "0x1BDB844", VA = "0x1BDB844")]
		public DemoScriptReloadSceneEsc()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class DemoScriptRotate : MonoBehaviour
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F60")]
		public Vector3 Rotation;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1BDB874", Offset = "0x1BDB874", VA = "0x1BDB874")]
		private void Update()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1BDBA14", Offset = "0x1BDBA14", VA = "0x1BDBA14")]
		public DemoScriptRotate()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class DemoScriptTriggerPath : MonoBehaviour
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LightningSplineScript Script;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F064")]
		public Toggle SplineToggle;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<Vector3> points;

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1BDBA44", Offset = "0x1BDBA44", VA = "0x1BDBA44")]
		private void Start()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1BDBA90", Offset = "0x1BDBA90", VA = "0x1BDBA90")]
		private void Update()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1BDBFC0", Offset = "0x1BDBFC0", VA = "0x1BDBFC0")]
		public DemoScriptTriggerPath()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public enum LightningBoltQualitySetting
	{
		[Token(Token = "0x4001147")]
		UseScript,
		[Token(Token = "0x4001148")]
		LimitToQualitySetting
	}
	[Token(Token = "0x200026E")]
	public enum CameraMode
	{
		[Token(Token = "0x400114A")]
		Auto,
		[Token(Token = "0x400114B")]
		Perspective,
		[Token(Token = "0x400114C")]
		OrthographicXY,
		[Token(Token = "0x400114D")]
		OrthographicXZ,
		[Token(Token = "0x400114E")]
		Unknown
	}
	[Token(Token = "0x200026F")]
	public enum LightningCustomTransformState
	{
		[Token(Token = "0x4001150")]
		Started,
		[Token(Token = "0x4001151")]
		Executing,
		[Token(Token = "0x4001152")]
		Ended
	}
	[Token(Token = "0x2000270")]
	public class LightningCustomTransformStateInfo
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6450", Offset = "0xBF6450")]
		private LightningCustomTransformState <State>k__BackingField;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF648C", Offset = "0xBF648C")]
		private LightningBoltParameters <Parameters>k__BackingField;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 BoltStartPosition;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F07C")]
		public Vector3 BoltEndPosition;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Transform;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform StartTransform;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform EndTransform;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F80")]
		public object UserInfo;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly List<LightningCustomTransformStateInfo> cache;

		[Token(Token = "0x17000249")]
		public LightningCustomTransformState State
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x1BFBF88", Offset = "0x1BFBF88", VA = "0x1BFBF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C780", Offset = "0xC1C780")]
			get
			{
				return default(LightningCustomTransformState);
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x1BFBFB8", Offset = "0x1BFBFB8", VA = "0x1BFBFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C7BC", Offset = "0xC1C7BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public LightningBoltParameters Parameters
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1BFBFF0", Offset = "0x1BFBFF0", VA = "0x1BFBFF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C7F8", Offset = "0xC1C7F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1BFC020", Offset = "0x1BFC020", VA = "0x1BFC020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C834", Offset = "0xC1C834")]
			set
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1BFC058", Offset = "0x1BFC058", VA = "0x1BFC058")]
		public static LightningCustomTransformStateInfo GetOrCreateStateInfo()
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1BFC320", Offset = "0x1BFC320", VA = "0x1BFC320")]
		public static void ReturnStateInfoToCache(LightningCustomTransformStateInfo info)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1BFC2F0", Offset = "0x1BFC2F0", VA = "0x1BFC2F0")]
		public LightningCustomTransformStateInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000271")]
	public class LightningCustomTransformDelegate : UnityEvent<LightningCustomTransformStateInfo>
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1BFBF0C", Offset = "0x1BFBF0C", VA = "0x1BFBF0C")]
		public LightningCustomTransformDelegate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000272")]
	public class LightningLightParameters
	{
		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F084")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF64C8", Offset = "0xBF64C8")]
		[HideInInspector]
		public LightRenderMode RenderMode;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6548", Offset = "0xBF6548")]
		public Color LightColor;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF65AC", Offset = "0xBF65AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF65AC", Offset = "0xBF65AC")]
		public float LightPercent;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6648", Offset = "0xBF6648")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6648", Offset = "0xBF6648")]
		public float LightShadowPercent;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF66E4", Offset = "0xBF66E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF66E4", Offset = "0xBF66E4")]
		public float LightIntensity;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6780", Offset = "0xBF6780")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6780", Offset = "0xBF6780")]
		public float BounceIntensity;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F08C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF681C", Offset = "0xBF681C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF681C", Offset = "0xBF681C")]
		public float ShadowStrength;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF68B8", Offset = "0xBF68B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF68B8", Offset = "0xBF68B8")]
		public float ShadowBias;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6954", Offset = "0xBF6954")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6954", Offset = "0xBF6954")]
		public float ShadowNormalBias;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF69F0", Offset = "0xBF69F0")]
		public float LightRange;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6A54", Offset = "0xBF6A54")]
		public LayerMask CullingMask;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6AB8", Offset = "0xBF6AB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6AB8", Offset = "0xBF6AB8")]
		public float OrthographicOffset;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F094")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6B58", Offset = "0xBF6B58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6B58", Offset = "0xBF6B58")]
		public float FadeInMultiplier;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6BF4", Offset = "0xBF6BF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6BF4", Offset = "0xBF6BF4")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6C90", Offset = "0xBF6C90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6C90", Offset = "0xBF6C90")]
		public float FadeOutMultiplier;

		[Token(Token = "0x1700024B")]
		public bool HasLight
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x1C01B2C", Offset = "0x1C01B2C", VA = "0x1C01B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1C01C80", Offset = "0x1C01C80", VA = "0x1C01C80")]
		public LightningLightParameters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000273")]
	public sealed class LightningBoltParameters
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomSeed;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F98")]
		private static readonly List<LightningBoltParameters> cache;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int generationWhereForksStop;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F09C")]
		internal int forkednessCalculated;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal LightningBoltQualitySetting quality;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float delaySeconds;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int maxLights;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FA0")]
		public static float Scale;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly Dictionary<int, LightningQualityMaximum> QualityMaximums;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C554")]
		public LightningGenerator Generator;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Start;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 End;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 StartVariance;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FA6")]
		public Vector3 EndVariance;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Action<LightningCustomTransformStateInfo> CustomTransform;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C944")]
		private int generations;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float LifeTime;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Delay;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RangeOfFloats DelayRange;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FAD")]
		public float ChaosFactor;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float ChaosFactorForks;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0A4")]
		public float TrunkWidth;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float EndWidthMultiplier;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Intensity;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float GlowIntensity;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FB5")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float Forkedness;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0AC")]
		public int GenerationWhereForksStopSubtractor;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color32 Color;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color32 MainTrunkTintColor;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private System.Random random;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FBD")]
		private System.Random currentRandom;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private System.Random randomOverride;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0B4")]
		public float FadePercent;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FadeInMultiplier;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FadeOutMultiplier;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC5")]
		private float growthMultiplier;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float ForkLengthMultiplier;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0BC")]
		public float ForkLengthVariance;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ForkEndWidthMultiplier;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6D2C", Offset = "0xBF6D2C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FCD")]
		public int SmoothingFactor;

		[Token(Token = "0x1700024C")]
		public int Generations
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1BEE230", Offset = "0x1BEE230", VA = "0x1BEE230")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x1BD5950", Offset = "0x1BD5950", VA = "0x1BD5950")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public System.Random Random
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1BEE260", Offset = "0x1BEE260", VA = "0x1BEE260")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x1BEE290", Offset = "0x1BEE290", VA = "0x1BEE290")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public System.Random RandomOverride
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x1BEE3D4", Offset = "0x1BEE3D4", VA = "0x1BEE3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x1BD5D1C", Offset = "0x1BD5D1C", VA = "0x1BD5D1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float GrowthMultiplier
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x1BEE404", Offset = "0x1BEE404", VA = "0x1BEE404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x1BD5DEC", Offset = "0x1BD5DEC", VA = "0x1BD5DEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x1BEE434", Offset = "0x1BEE434", VA = "0x1BEE434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C870", Offset = "0xC1C870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x1BEE464", Offset = "0x1BEE464", VA = "0x1BEE464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C8AC", Offset = "0xC1C8AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1BED99C", Offset = "0x1BED99C", VA = "0x1BED99C")]
		static LightningBoltParameters()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1BD5558", Offset = "0x1BD5558", VA = "0x1BD5558")]
		public LightningBoltParameters()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1BEE49C", Offset = "0x1BEE49C", VA = "0x1BEE49C")]
		public float ForkMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1BEE520", Offset = "0x1BEE520", VA = "0x1BEE520")]
		public Vector3 ApplyVariance(Vector3 pos, Vector3 variance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1BEE7D8", Offset = "0x1BEE7D8", VA = "0x1BEE7D8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1BEE99C", Offset = "0x1BEE99C", VA = "0x1BEE99C")]
		public static LightningBoltParameters GetOrCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1BEB7B0", Offset = "0x1BEB7B0", VA = "0x1BEB7B0")]
		public static void ReturnParametersToCache(LightningBoltParameters p)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class LightningBoltSegmentGroup
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float LineWidth;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0C4")]
		public int StartIndex;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Generation;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Delay;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float PeakStart;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FD5")]
		public float PeakEnd;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float LifeTime;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0CC")]
		public float EndWidthMultiplier;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color32 Color;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly List<LightningBoltSegment> Segments;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly List<Light> Lights;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FDD")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x17000251")]
		public int SegmentCount
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x1BE40DC", Offset = "0x1BE40DC", VA = "0x1BE40DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1BE0B74", Offset = "0x1BE0B74", VA = "0x1BE0B74")]
		public void Reset()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1BE0A78", Offset = "0x1BE0A78", VA = "0x1BE0A78")]
		public LightningBoltSegmentGroup()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public struct LightningBoltSegment
	{
		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Vector3 Start;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0C4")]
		public Vector3 End;

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1BF7718", Offset = "0x1BF7718", VA = "0x1BF7718", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000276")]
	public class LightningQualityMaximum
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6D68", Offset = "0xBF6D68")]
		private int <MaximumGenerations>k__BackingField;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6DA4", Offset = "0xBF6DA4")]
		private float <MaximumLightPercent>k__BackingField;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6DE0", Offset = "0xBF6DE0")]
		private float <MaximumShadowPercent>k__BackingField;

		[Token(Token = "0x17000252")]
		public int MaximumGenerations
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x1C0770C", Offset = "0x1C0770C", VA = "0x1C0770C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C8E8", Offset = "0xC1C8E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x1C0773C", Offset = "0x1C0773C", VA = "0x1C0773C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C924", Offset = "0xC1C924")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float MaximumLightPercent
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x1C07774", Offset = "0x1C07774", VA = "0x1C07774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C960", Offset = "0xC1C960")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x1C077A4", Offset = "0x1C077A4", VA = "0x1C077A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C99C", Offset = "0xC1C99C")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public float MaximumShadowPercent
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x1C077DC", Offset = "0x1C077DC", VA = "0x1C077DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1C9D8", Offset = "0xC1C9D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x1C0780C", Offset = "0x1C0780C", VA = "0x1C0780C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CA14", Offset = "0xC1CA14")]
			set
			{
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1C07844", Offset = "0x1C07844", VA = "0x1C07844")]
		public LightningQualityMaximum()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class LightningBoltDependencies
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FE5")]
		public GameObject Parent;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Material LightningMaterialMesh;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0DC")]
		public Material LightningMaterialMeshNoGlow;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParticleSystem OriginParticleSystem;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParticleSystem DestParticleSystem;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 CameraPos;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FED")]
		public bool CameraIsOrthographic;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public CameraMode CameraMode;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0E4")]
		public bool UseWorldSpace;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float LevelOfDetailDistance;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string SortLayerName;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SortOrderInLayer;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FF5")]
		public ICollection<LightningBoltParameters> Parameters;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LightningThreadState ThreadState;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0EC")]
		public Func<IEnumerator, Coroutine> StartCoroutine;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Light> LightAdded;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Light> LightRemoved;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<LightningBolt> AddActiveBolt;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FFD")]
		public Action<LightningBoltDependencies> ReturnToCache;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningBoltStarted;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C94C")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningBoltEnded;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1BED96C", Offset = "0x1BED96C", VA = "0x1BED96C")]
		public LightningBoltDependencies()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class LightningBolt
	{
		[Token(Token = "0x2000604")]
		public class LineRendererMesh
		{
			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14B74", Offset = "0xC14B74")]
			private GameObject <GameObject>k__BackingField;

			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14BB0", Offset = "0xC14BB0")]
			private int <Tag>k__BackingField;

			[Token(Token = "0x40029FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x401C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14BEC", Offset = "0xC14BEC")]
			private Action<LightningCustomTransformStateInfo> <CustomTransform>k__BackingField;

			[Token(Token = "0x40029FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14C28", Offset = "0xC14C28")]
			private Transform <Transform>k__BackingField;

			[Token(Token = "0x40029FD")]
			private const int defaultListCapacity = 2048;

			[Token(Token = "0x40029FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Vector2 uv1;

			[Token(Token = "0x40029FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Vector2 uv2;

			[Token(Token = "0x4002A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Vector2 uv3;

			[Token(Token = "0x4002A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4024")]
			private static readonly Vector2 uv4;

			[Token(Token = "0x4002A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private readonly List<int> indices;

			[Token(Token = "0x4002A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F114")]
			private readonly List<Vector3> vertices;

			[Token(Token = "0x4002A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<Vector4> lineDirs;

			[Token(Token = "0x4002A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<Color32> colors;

			[Token(Token = "0x4002A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<Vector3> ends;

			[Token(Token = "0x4002A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x402C")]
			private readonly List<Vector4> texCoordsAndGlowModifiers;

			[Token(Token = "0x4002A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private readonly List<Vector4> fadeLifetimes;

			[Token(Token = "0x4002A09")]
			private const int boundsPadder = 1000000000;

			[Token(Token = "0x4002A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int currentBoundsMinX;

			[Token(Token = "0x4002A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int currentBoundsMinY;

			[Token(Token = "0x4002A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int currentBoundsMinZ;

			[Token(Token = "0x4002A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4034")]
			private int currentBoundsMaxX;

			[Token(Token = "0x4002A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int currentBoundsMaxY;

			[Token(Token = "0x4002A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F124")]
			private int currentBoundsMaxZ;

			[Token(Token = "0x4002A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Mesh mesh;

			[Token(Token = "0x4002A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MeshFilter meshFilterGlow;

			[Token(Token = "0x4002A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MeshFilter meshFilterBolt;

			[Token(Token = "0x4002A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x403C")]
			private MeshRenderer meshRendererGlow;

			[Token(Token = "0x4002A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private MeshRenderer meshRendererBolt;

			[Token(Token = "0x170004E8")]
			public GameObject GameObject
			{
				[Token(Token = "0x6002D00")]
				[Address(RVA = "0x1BEBAB4", Offset = "0x1BEBAB4", VA = "0x1BEBAB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC30130", Offset = "0xC30130")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D01")]
				[Address(RVA = "0x1BEBAE4", Offset = "0x1BEBAE4", VA = "0x1BEBAE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC3016C", Offset = "0xC3016C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E9")]
			public Material MaterialGlow
			{
				[Token(Token = "0x6002D02")]
				[Address(RVA = "0x1BEBB1C", Offset = "0x1BEBB1C", VA = "0x1BEBB1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D03")]
				[Address(RVA = "0x1BE2F2C", Offset = "0x1BE2F2C", VA = "0x1BE2F2C")]
				set
				{
				}
			}

			[Token(Token = "0x170004EA")]
			public Material MaterialBolt
			{
				[Token(Token = "0x6002D04")]
				[Address(RVA = "0x1BEBB6C", Offset = "0x1BEBB6C", VA = "0x1BEBB6C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D05")]
				[Address(RVA = "0x1BE2F84", Offset = "0x1BE2F84", VA = "0x1BE2F84")]
				set
				{
				}
			}

			[Token(Token = "0x170004EB")]
			public MeshRenderer MeshRendererGlow
			{
				[Token(Token = "0x6002D06")]
				[Address(RVA = "0x1BEBBBC", Offset = "0x1BEBBBC", VA = "0x1BEBBBC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			public MeshRenderer MeshRendererBolt
			{
				[Token(Token = "0x6002D07")]
				[Address(RVA = "0x1BEBBEC", Offset = "0x1BEBBEC", VA = "0x1BEBBEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004ED")]
			public int Tag
			{
				[Token(Token = "0x6002D08")]
				[Address(RVA = "0x1BEBC1C", Offset = "0x1BEBC1C", VA = "0x1BEBC1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC301A8", Offset = "0xC301A8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002D09")]
				[Address(RVA = "0x1BEBC4C", Offset = "0x1BEBC4C", VA = "0x1BEBC4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC301E4", Offset = "0xC301E4")]
				set
				{
				}
			}

			[Token(Token = "0x170004EE")]
			public Action<LightningCustomTransformStateInfo> CustomTransform
			{
				[Token(Token = "0x6002D0A")]
				[Address(RVA = "0x1BEBC84", Offset = "0x1BEBC84", VA = "0x1BEBC84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC30220", Offset = "0xC30220")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D0B")]
				[Address(RVA = "0x1BEBCB4", Offset = "0x1BEBCB4", VA = "0x1BEBCB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC3025C", Offset = "0xC3025C")]
				set
				{
				}
			}

			[Token(Token = "0x170004EF")]
			public Transform Transform
			{
				[Token(Token = "0x6002D0C")]
				[Address(RVA = "0x1BEBCEC", Offset = "0x1BEBCEC", VA = "0x1BEBCEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC30298", Offset = "0xC30298")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D0D")]
				[Address(RVA = "0x1BEBD1C", Offset = "0x1BEBD1C", VA = "0x1BEBD1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC302D4", Offset = "0xC302D4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004F0")]
			public bool Empty
			{
				[Token(Token = "0x6002D0E")]
				[Address(RVA = "0x1BE75B4", Offset = "0x1BE75B4", VA = "0x1BE75B4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0x1BE26E4", Offset = "0x1BE26E4", VA = "0x1BE26E4")]
			public LineRendererMesh()
			{
			}

			[Token(Token = "0x6002D10")]
			[Address(RVA = "0x1BE1930", Offset = "0x1BE1930", VA = "0x1BE1930")]
			public void PopulateMesh()
			{
			}

			[Token(Token = "0x6002D11")]
			[Address(RVA = "0x1BE4188", Offset = "0x1BE4188", VA = "0x1BE4188")]
			public bool PrepareForLines(int lineCount)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D12")]
			[Address(RVA = "0x1BE450C", Offset = "0x1BE450C", VA = "0x1BE450C")]
			public void BeginLine(Vector3 start, Vector3 end, float radius, Color32 color, float colorIntensity, Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}

			[Token(Token = "0x6002D13")]
			[Address(RVA = "0x1BE4788", Offset = "0x1BE4788", VA = "0x1BE4788")]
			public void AppendLine(Vector3 start, Vector3 end, float radius, Color32 color, float colorIntensity, Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}

			[Token(Token = "0x6002D14")]
			[Address(RVA = "0x1BE0168", Offset = "0x1BE0168", VA = "0x1BE0168")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D15")]
			[Address(RVA = "0x1BEBD54", Offset = "0x1BEBD54", VA = "0x1BEBD54")]
			private void PopulateMeshInternal()
			{
			}

			[Token(Token = "0x6002D16")]
			[Address(RVA = "0x1BECE28", Offset = "0x1BECE28", VA = "0x1BECE28")]
			private void UpdateBounds(ref Vector3 point1, ref Vector3 point2)
			{
			}

			[Token(Token = "0x6002D17")]
			[Address(RVA = "0x1BED448", Offset = "0x1BED448", VA = "0x1BED448")]
			private void AddIndices()
			{
			}

			[Token(Token = "0x6002D18")]
			[Address(RVA = "0x1BEC290", Offset = "0x1BEC290", VA = "0x1BEC290")]
			private void AppendLineInternal(ref Vector3 start, ref Vector3 end, ref Vector4 dir, ref Vector4 dirPrev1, ref Vector4 dirPrev2, Color32 color, float colorIntensity, ref Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}
		}

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6A0", Offset = "0xBDF6A0")]
		private sealed class <EnableLastRendererCoRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F12C")]
			private int <>1__state;

			[Token(Token = "0x4002A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningBolt <>4__this;

			[Token(Token = "0x4002A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LineRendererMesh <lineRenderer>5__2;

			[Token(Token = "0x4002A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4044")]
			private int <tag>5__3;

			[Token(Token = "0x170004F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D1D")]
				[Address(RVA = "0x1BEA728", Offset = "0x1BEA728", VA = "0x1BEA728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D1F")]
				[Address(RVA = "0x1BEA7F8", Offset = "0x1BEA7F8", VA = "0x1BEA7F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0x1BE1AC8", Offset = "0x1BE1AC8", VA = "0x1BE1AC8")]
			[DebuggerHidden]
			public <EnableLastRendererCoRoutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0x1BEA3A8", Offset = "0x1BEA3A8", VA = "0x1BEA3A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0x1BEA3BC", Offset = "0x1BEA3BC", VA = "0x1BEA3BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0x1BEA758", Offset = "0x1BEA758", VA = "0x1BEA758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6DC", Offset = "0xBDF6DC")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public LightningBolt <>4__this;

			[Token(Token = "0x4002A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F134")]
			public LineRendererMesh currentLineRenderer;

			[Token(Token = "0x6002D20")]
			[Address(RVA = "0x1BE40AC", Offset = "0x1BE40AC", VA = "0x1BE40AC")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002D21")]
			[Address(RVA = "0x1BE9D38", Offset = "0x1BE9D38", VA = "0x1BE9D38")]
			internal void <RenderGroup>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF718", Offset = "0xBDF718")]
		private sealed class <NotifyBolt>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningBoltParameters p;

			[Token(Token = "0x4002A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x404C")]
			public LightningBoltDependencies dependencies;

			[Token(Token = "0x4002A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Vector3 start;

			[Token(Token = "0x4002A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F13C")]
			public Vector3 end;

			[Token(Token = "0x4002A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[Token(Token = "0x4002A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <lifeTime>5__2;

			[Token(Token = "0x4002A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LightningCustomTransformStateInfo <state>5__3;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D25")]
				[Address(RVA = "0x1BEB9B4", Offset = "0x1BEB9B4", VA = "0x1BEB9B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D27")]
				[Address(RVA = "0x1BEBA84", Offset = "0x1BEBA84", VA = "0x1BEBA84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D22")]
			[Address(RVA = "0x1BE4CC4", Offset = "0x1BE4CC4", VA = "0x1BE4CC4")]
			[DebuggerHidden]
			public <NotifyBolt>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002D23")]
			[Address(RVA = "0x1BEAE68", Offset = "0x1BEAE68", VA = "0x1BEAE68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D24")]
			[Address(RVA = "0x1BEAE7C", Offset = "0x1BEAE7C", VA = "0x1BEAE7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D26")]
			[Address(RVA = "0x1BEB9E4", Offset = "0x1BEB9E4", VA = "0x1BEB9E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF754", Offset = "0xBDF754")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4002A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4054")]
			public LightningBoltDependencies dependenciesRef;

			[Token(Token = "0x6002D28")]
			[Address(RVA = "0x1BE597C", Offset = "0x1BE597C", VA = "0x1BE597C")]
			public <>c__DisplayClass44_0()
			{
			}
		}

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF790", Offset = "0xBDF790")]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x4002A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public LightningBoltParameters parameters;

			[Token(Token = "0x4002A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C954")]
			public <>c__DisplayClass44_0 CS$<>8__locals1;

			[Token(Token = "0x6002D29")]
			[Address(RVA = "0x1BE59AC", Offset = "0x1BE59AC", VA = "0x1BE59AC")]
			public <>c__DisplayClass44_1()
			{
			}
		}

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7CC", Offset = "0xBDF7CC")]
		private sealed class <>c__DisplayClass44_2
		{
			[Token(Token = "0x4002A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[Token(Token = "0x4002A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass44_1 CS$<>8__locals2;

			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0x1BE59DC", Offset = "0x1BE59DC", VA = "0x1BE59DC")]
			public <>c__DisplayClass44_2()
			{
			}

			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0x1BE9DDC", Offset = "0x1BE9DDC", VA = "0x1BE9DDC")]
			internal void <ProcessAllLightningParameters>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF808", Offset = "0xBDF808")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningBolt <>4__this;

			[Token(Token = "0x4002A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x405B")]
			public Vector3 start;

			[Token(Token = "0x4002A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Vector3 end;

			[Token(Token = "0x4002A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F144")]
			public LightningBoltParameters parameters;

			[Token(Token = "0x4002A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningLightParameters lp;

			[Token(Token = "0x4002A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int startGroupIndex;

			[Token(Token = "0x4002A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningBoltQualitySetting quality;

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0x1BE7554", Offset = "0x1BE7554", VA = "0x1BE7554")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0x1BEA038", Offset = "0x1BEA038", VA = "0x1BEA038")]
			internal void <RenderLightningBolt>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF844", Offset = "0xBDF844")]
		private sealed class <>c__DisplayClass48_1
		{
			[Token(Token = "0x4002A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4063")]
			public LineRendererMesh currentLineRenderer;

			[Token(Token = "0x4002A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public <>c__DisplayClass48_0 CS$<>8__locals1;

			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0x1BE7584", Offset = "0x1BE7584", VA = "0x1BE7584")]
			public <>c__DisplayClass48_1()
			{
			}

			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0x1BEA2DC", Offset = "0x1BEA2DC", VA = "0x1BEA2DC")]
			internal void <RenderLightningBolt>b__1(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF880", Offset = "0xBDF880")]
		private sealed class <GenerateParticleCoRoutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F14C")]
			private int <>1__state;

			[Token(Token = "0x4002A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x4002A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ParticleSystem p;

			[Token(Token = "0x4002A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x406B")]
			public Vector3 pos;

			[Token(Token = "0x170004F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D33")]
				[Address(RVA = "0x1BEAD68", Offset = "0x1BEAD68", VA = "0x1BEAD68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D35")]
				[Address(RVA = "0x1BEAE38", Offset = "0x1BEAE38", VA = "0x1BEAE38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D30")]
			[Address(RVA = "0x1BE9B6C", Offset = "0x1BE9B6C", VA = "0x1BE9B6C")]
			[DebuggerHidden]
			public <GenerateParticleCoRoutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6002D31")]
			[Address(RVA = "0x1BEA828", Offset = "0x1BEA828", VA = "0x1BEA828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D32")]
			[Address(RVA = "0x1BEA83C", Offset = "0x1BEA83C", VA = "0x1BEA83C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D34")]
			[Address(RVA = "0x1BEAD98", Offset = "0x1BEAD98", VA = "0x1BEAD98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaximumLightCount;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaximumLightsPerBatch;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6E1C", Offset = "0xBF6E1C")]
		private float <MinimumDelay>k__BackingField;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6E58", Offset = "0xBF6E58")]
		private bool <HasGlow>k__BackingField;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF6E94", Offset = "0xBF6E94")]
		private CameraMode <CameraMode>k__BackingField;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0F4")]
		private DateTime startTimeOffset;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LightningBoltDependencies dependencies;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float elapsedTime;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lifeTime;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400C")]
		private float maxLifeTime;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool hasLight;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F0FC")]
		private float timeSinceLevelLoad;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LightningBoltSegmentGroup> segmentGroups;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LightningBoltSegmentGroup> segmentGroupsWithLight;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LineRendererMesh> activeLineRenderers;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4014")]
		private static int lightCount;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly List<LineRendererMesh> lineRendererCache;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F104")]
		private static readonly List<LightningBoltSegmentGroup> groupCache;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Light> lightCache;

		[Token(Token = "0x17000255")]
		public float MinimumDelay
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x1BDCB2C", Offset = "0x1BDCB2C", VA = "0x1BDCB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CA50", Offset = "0xC1CA50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1BDCB5C", Offset = "0x1BDCB5C", VA = "0x1BDCB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CA8C", Offset = "0xC1CA8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public bool HasGlow
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x1BDCB94", Offset = "0x1BDCB94", VA = "0x1BDCB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CAC8", Offset = "0xC1CAC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x1BDCBD8", Offset = "0x1BDCBD8", VA = "0x1BDCBD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CB04", Offset = "0xC1CB04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsActive
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x1BDCC24", Offset = "0x1BDCC24", VA = "0x1BDCC24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public CameraMode CameraMode
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x1BDCCA8", Offset = "0x1BDCCA8", VA = "0x1BDCCA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CB40", Offset = "0xC1CB40")]
			get
			{
				return default(CameraMode);
			}
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x1BDCCD8", Offset = "0x1BDCCD8", VA = "0x1BDCCD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CB7C", Offset = "0xC1CB7C")]
			private set
			{
			}
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1BDCD10", Offset = "0x1BDCD10", VA = "0x1BDCD10")]
		public LightningBolt()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1BDCE38", Offset = "0x1BDCE38", VA = "0x1BDCE38")]
		public void SetupLightningBolt(LightningBoltDependencies dependencies)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1BDEB08", Offset = "0x1BDEB08", VA = "0x1BDEB08")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1BDF09C", Offset = "0x1BDF09C", VA = "0x1BDF09C")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1BE0490", Offset = "0x1BE0490", VA = "0x1BE0490")]
		public LightningBoltSegmentGroup AddGroup()
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1BE0C60", Offset = "0x1BE0C60", VA = "0x1BE0C60")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1BDFEB4", Offset = "0x1BDFEB4", VA = "0x1BDFEB4")]
		private void CleanupLight(Light l)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1BE1738", Offset = "0x1BE1738", VA = "0x1BE1738")]
		private void EnableLineRenderer(LineRendererMesh lineRenderer, int tag)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1BE1A0C", Offset = "0x1BE1A0C", VA = "0x1BE1A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1CBB8", Offset = "0xC1CBB8")]
		private IEnumerator EnableLastRendererCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1BE1B10", Offset = "0x1BE1B10", VA = "0x1BE1B10")]
		private LineRendererMesh GetOrCreateLineRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x1BE2FDC", Offset = "0x1BE2FDC", VA = "0x1BE2FDC")]
		private void RenderGroup(LightningBoltSegmentGroup group, LightningBoltParameters p)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x1BE4B34", Offset = "0x1BE4B34", VA = "0x1BE4B34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1CC68", Offset = "0xC1CC68")]
		private static IEnumerator NotifyBolt(LightningBoltDependencies dependencies, LightningBoltParameters p, Transform transform, Vector3 start, Vector3 end)
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x1BE4D0C", Offset = "0x1BE4D0C", VA = "0x1BE4D0C")]
		private void ProcessParameters(LightningBoltParameters p, RangeOfFloats delay, LightningBoltDependencies depends)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1BDD8A8", Offset = "0x1BDD8A8", VA = "0x1BDD8A8")]
		private void ProcessAllLightningParameters()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x1BE6E44", Offset = "0x1BE6E44", VA = "0x1BE6E44")]
		private void EnableCurrentLineRendererFromThread(bool inDestroy)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1BE42A4", Offset = "0x1BE42A4", VA = "0x1BE42A4")]
		private void EnableCurrentLineRenderer()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x1BE70A8", Offset = "0x1BE70A8", VA = "0x1BE70A8")]
		private void RenderParticleSystems(Vector3 start, Vector3 end, float trunkWidth, float lifeTime, float delaySeconds)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1BE5A0C", Offset = "0x1BE5A0C", VA = "0x1BE5A0C")]
		private Transform RenderLightningBolt(LightningBoltQualitySetting quality, int generations, int startGroupIndex, int endGroupIndex, LightningBoltParameters parameters)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1BE7688", Offset = "0x1BE7688", VA = "0x1BE7688")]
		private void CreateLightsForGroup(LightningBoltSegmentGroup group, LightningLightParameters lp, LightningBoltQualitySetting quality, int maxLights)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1BE8198", Offset = "0x1BE8198", VA = "0x1BE8198")]
		private bool AddLightToGroup(LightningBoltSegmentGroup group, LightningLightParameters lp, int segmentIndex, int nthLight, int nthShadows, ref int maxLights, ref int nthShadowCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1BE89AC", Offset = "0x1BE89AC", VA = "0x1BE89AC")]
		private Light GetOrCreateLight(LightningLightParameters lp)
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1BE9030", Offset = "0x1BE9030", VA = "0x1BE9030")]
		private void UpdateLight(LightningLightParameters lp, IEnumerable<Light> lights, float delay, float peakStart, float peakEnd, float lifeTime)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1BDECB0", Offset = "0x1BDECB0", VA = "0x1BDECB0")]
		private void UpdateLights()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1BE7438", Offset = "0x1BE7438", VA = "0x1BE7438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1CD18", Offset = "0xC1CD18")]
		private IEnumerator GenerateParticleCoRoutine(ParticleSystem p, Vector3 pos, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1BDD30C", Offset = "0x1BDD30C", VA = "0x1BDD30C")]
		private void CheckForGlow(IEnumerable<LightningBoltParameters> parameters)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class LightningThreadState
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Thread lightningThread;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F154")]
		private AutoResetEvent lightningThreadEvent;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<Action> actionsForBackgroundThread;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<KeyValuePair<Action<bool>, ManualResetEvent>> actionsForMainThread;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Running;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4073")]
		private bool isTerminating;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1C0B018", Offset = "0x1C0B018", VA = "0x1C0B018")]
		private bool UpdateMainThreadActionsOnce(bool inDestroy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1C0B5E8", Offset = "0x1C0B5E8", VA = "0x1C0B5E8")]
		private void BackgroundThreadMethod()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1C0BE04", Offset = "0x1C0BE04", VA = "0x1C0BE04")]
		public LightningThreadState()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1C0C048", Offset = "0x1C0C048", VA = "0x1C0C048")]
		public void TerminateAndWaitForEnd(bool inDestroy)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1C0C388", Offset = "0x1C0C388", VA = "0x1C0C388")]
		public void UpdateMainThreadActions()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1C0C3E0", Offset = "0x1C0C3E0", VA = "0x1C0C3E0")]
		public bool AddActionForMainThread(Action<bool> action, bool waitForAction = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1C0C7F0", Offset = "0x1C0C7F0", VA = "0x1C0C7F0")]
		public bool AddActionForBackgroundThread(Action action)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200027A")]
	public abstract class LightningBoltPathScriptBase : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF6ED0", Offset = "0xBF6ED0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6ED0", Offset = "0xBF6ED0")]
		public List<GameObject> LightningPath;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F15C")]
		private readonly List<GameObject> currentPathObjects;

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1BEF788", Offset = "0x1BEF788", VA = "0x1BEF788")]
		protected List<GameObject> GetCurrentPathObjects()
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1BEFEE4", Offset = "0x1BEFEE4", VA = "0x1BEFEE4", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1BEFE2C", Offset = "0x1BEFE2C", VA = "0x1BEFE2C")]
		protected LightningBoltPathScriptBase()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class LightningBoltPathScript : LightningBoltPathScriptBase
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF6F7C", Offset = "0xBF6F7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF6F7C", Offset = "0xBF6F7C")]
		public float Speed;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7020", Offset = "0xBF7020")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBF7020", Offset = "0xBF7020")]
		public RangeOfFloats SpeedIntervalRange;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF70F0", Offset = "0xBF70F0")]
		public bool Repeat;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x407B")]
		private float nextInterval;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int nextIndex;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F164")]
		private Vector3? lastPoint;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1BEEC4C", Offset = "0x1BEEC4C", VA = "0x1BEEC4C", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1BEFC94", Offset = "0x1BEFC94", VA = "0x1BEFC94")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1BEFD00", Offset = "0x1BEFD00", VA = "0x1BEFD00")]
		public LightningBoltPathScript()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public abstract class LightningBoltPrefabScriptBase : LightningBoltScript
	{
		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LightningBoltParameters> batchParameters;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly System.Random random;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF7154", Offset = "0xBF7154")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBF7154", Offset = "0xBF7154")]
		public RangeOfFloats IntervalRange;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4083")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBF722C", Offset = "0xBF722C")]
		public RangeOfIntegers CountRange;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF72AC", Offset = "0xBF72AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF72AC", Offset = "0xBF72AC")]
		public float CountProbabilityModifier;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F16C")]
		public RangeOfFloats DelayRange;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBF7348", Offset = "0xBF7348")]
		public RangeOfFloats DurationRange;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF73D8", Offset = "0xBF73D8")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBF73D8", Offset = "0xBF73D8")]
		public RangeOfFloats TrunkWidthRange;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF74B0", Offset = "0xBF74B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF74B0", Offset = "0xBF74B0")]
		public float LifeTime;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF754C", Offset = "0xBF754C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF754C", Offset = "0xBF754C")]
		public int Generations;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF75EC", Offset = "0xBF75EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF75EC", Offset = "0xBF75EC")]
		public float ChaosFactor;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7688", Offset = "0xBF7688")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7688", Offset = "0xBF7688")]
		public float ChaosFactorForks;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7724", Offset = "0xBF7724")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7724", Offset = "0xBF7724")]
		public float Intensity;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF77C0", Offset = "0xBF77C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF77C0", Offset = "0xBF77C0")]
		public float GlowIntensity;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF785C", Offset = "0xBF785C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF785C", Offset = "0xBF785C")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4093")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF78F8", Offset = "0xBF78F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF78F8", Offset = "0xBF78F8")]
		public float FadePercent;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7994", Offset = "0xBF7994")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7994", Offset = "0xBF7994")]
		public float FadeInMultiplier;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7A30", Offset = "0xBF7A30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7A30", Offset = "0xBF7A30")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7ACC", Offset = "0xBF7ACC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7ACC", Offset = "0xBF7ACC")]
		public float FadeOutMultiplier;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7B68", Offset = "0xBF7B68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7B68", Offset = "0xBF7B68")]
		public float GrowthMultiplier;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7C04", Offset = "0xBF7C04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7C04", Offset = "0xBF7C04")]
		public float EndWidthMultiplier;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x409B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7CA0", Offset = "0xBF7CA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7CA0", Offset = "0xBF7CA0")]
		public float Forkedness;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7D3C", Offset = "0xBF7D3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7D3C", Offset = "0xBF7D3C")]
		public float ForkLengthMultiplier;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F184")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7DD0", Offset = "0xBF7DD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7DD0", Offset = "0xBF7DD0")]
		public float ForkLengthVariance;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7E64", Offset = "0xBF7E64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7E64", Offset = "0xBF7E64")]
		public float ForkEndWidthMultiplier;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF7F00", Offset = "0xBF7F00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7F00", Offset = "0xBF7F00")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF7FAC", Offset = "0xBF7FAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF7FAC", Offset = "0xBF7FAC")]
		public int MaximumLightsPerBatch;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40A3")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF8048", Offset = "0xBF8048")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8048", Offset = "0xBF8048")]
		public bool ManualMode;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF80F4", Offset = "0xBF80F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF80F4", Offset = "0xBF80F4")]
		public float AutomaticModeSeconds;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F18C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF8190", Offset = "0xBF8190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8190", Offset = "0xBF8190")]
		public LightningCustomTransformDelegate CustomTransformHandler;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF823C", Offset = "0xBF823C")]
		private System.Random <RandomOverride>k__BackingField;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float nextLightningTimestamp;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lifeTimeRemaining;

		[Token(Token = "0x17000259")]
		public System.Random RandomOverride
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x1BF0B5C", Offset = "0x1BF0B5C", VA = "0x1BF0B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CDC8", Offset = "0xC1CDC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1BF0B8C", Offset = "0x1BF0B8C", VA = "0x1BF0B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CE04", Offset = "0xC1CE04")]
			set
			{
			}
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1BF0BC4", Offset = "0x1BF0BC4", VA = "0x1BF0BC4")]
		private void CalculateNextLightningTimestamp(float offset)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1BF0CE8", Offset = "0x1BF0CE8", VA = "0x1BF0CE8")]
		private void CustomTransform(LightningCustomTransformStateInfo state)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1BF0DB4", Offset = "0x1BF0DB4", VA = "0x1BF0DB4")]
		private void CallLightning()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1BF0EB0", Offset = "0x1BF0EB0", VA = "0x1BF0EB0")]
		private void CallLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1BF1430", Offset = "0x1BF1430", VA = "0x1BF1430")]
		protected void CreateLightningBoltsNow()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1BF15A0", Offset = "0x1BF15A0", VA = "0x1BF15A0", Slot = "10")]
		protected override void PopulateParameters(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1BF1A70", Offset = "0x1BF1A70", VA = "0x1BF1A70", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1BF1D10", Offset = "0x1BF1D10", VA = "0x1BF1D10", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1BEFBF4", Offset = "0x1BEFBF4", VA = "0x1BEFBF4", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters p)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1BDAE94", Offset = "0x1BDAE94", VA = "0x1BDAE94")]
		public void Trigger()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1BF2808", Offset = "0x1BF2808", VA = "0x1BF2808")]
		public void Trigger(float seconds)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1BDABE8", Offset = "0x1BDABE8", VA = "0x1BDABE8")]
		public void Trigger(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1BF00F0", Offset = "0x1BF00F0", VA = "0x1BF00F0")]
		protected LightningBoltPrefabScriptBase()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class LightningBoltPrefabScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40AB")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF8278", Offset = "0xBF8278")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8278", Offset = "0xBF8278")]
		public GameObject Source;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8324", Offset = "0xBF8324")]
		public GameObject Destination;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C95C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8388", Offset = "0xBF8388")]
		public Vector3 StartVariance;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF83EC", Offset = "0xBF83EC")]
		public Vector3 EndVariance;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1BF0714", Offset = "0x1BF0714", VA = "0x1BF0714", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1BF0B2C", Offset = "0x1BF0B2C", VA = "0x1BF0B2C")]
		public LightningBoltPrefabScript()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF8450", Offset = "0xBF8450")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8450", Offset = "0xBF8450")]
		public Camera Camera;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF84FC", Offset = "0xBF84FC")]
		public CameraMode CameraMode;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40B2")]
		internal CameraMode calculatedCameraMode;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8560", Offset = "0xBF8560")]
		public bool UseWorldSpace;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF85C4", Offset = "0xBF85C4")]
		public bool CompensateForParentTransform;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8628", Offset = "0xBF8628")]
		public LightningBoltQualitySetting QualitySetting;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF868C", Offset = "0xBF868C")]
		public bool MultiThreaded;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF86F0", Offset = "0xBF86F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF86F0", Offset = "0xBF86F0")]
		public float LevelOfDetailDistance;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40BA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8784", Offset = "0xBF8784")]
		public bool UseGameTime;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF87E8", Offset = "0xBF87E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF87E8", Offset = "0xBF87E8")]
		public string SortLayerName;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8894", Offset = "0xBF8894")]
		public int SortOrderInLayer;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF88F8", Offset = "0xBF88F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF88F8", Offset = "0xBF88F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBF88F8", Offset = "0xBF88F8")]
		public float SoftParticlesFactor;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF89E4", Offset = "0xBF89E4")]
		public int RenderQueue;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8A48", Offset = "0xBF8A48")]
		public Material LightningMaterialMesh;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8AAC", Offset = "0xBF8AAC")]
		public Material LightningMaterialMeshNoGlow;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8B10", Offset = "0xBF8B10")]
		public Texture2D LightningTexture;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8B74", Offset = "0xBF8B74")]
		public Texture2D LightningGlowTexture;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8BD8", Offset = "0xBF8BD8")]
		public ParticleSystem LightningOriginParticleSystem;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8C3C", Offset = "0xBF8C3C")]
		public ParticleSystem LightningDestinationParticleSystem;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8CA0", Offset = "0xBF8CA0")]
		public Color LightningTintColor;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40CA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8D04", Offset = "0xBF8D04")]
		public Color GlowTintColor;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8D68", Offset = "0xBF8D68")]
		public Color MainTrunkTintColor;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8DCC", Offset = "0xBF8DCC")]
		public BlendMode SourceBlendMode;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8E30", Offset = "0xBF8E30")]
		public BlendMode DestinationBlendMode;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF8E94", Offset = "0xBF8E94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8E94", Offset = "0xBF8E94")]
		public float JitterMultiplier;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8F40", Offset = "0xBF8F40")]
		public float Turbulence;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40D2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF8FA4", Offset = "0xBF8FA4")]
		public Vector3 TurbulenceVelocity;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9008", Offset = "0xBF9008")]
		public Vector4 IntensityFlicker;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1B4")]
		private static readonly Vector4 intensityFlickerDefault;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF906C", Offset = "0xBF906C")]
		public Texture2D IntensityFlickerTexture;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF90D0", Offset = "0xBF90D0")]
		private Action<LightningBoltParameters, Vector3, Vector3> <LightningStartedCallback>k__BackingField;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF910C", Offset = "0xBF910C")]
		private Action<LightningBoltParameters, Vector3, Vector3> <LightningEndedCallback>k__BackingField;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9148", Offset = "0xBF9148")]
		private Action<Light> <LightAddedCallback>k__BackingField;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9184", Offset = "0xBF9184")]
		private Action<Light> <LightRemovedCallback>k__BackingField;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF91C0", Offset = "0xBF91C0")]
		private static Vector4 <TimeVectorSinceStart>k__BackingField;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF91FC", Offset = "0xBF91FC")]
		private static float <TimeSinceStart>k__BackingField;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9238", Offset = "0xBF9238")]
		private static float <DeltaTime>k__BackingField;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float TimeScale;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40E2")]
		private static bool needsTimeUpdate;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9274", Offset = "0xBF9274")]
		private Material <lightningMaterialMeshInternal>k__BackingField;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF92B0", Offset = "0xBF92B0")]
		private Material <lightningMaterialMeshNoGlowInternal>k__BackingField;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D lastLightningTexture;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D lastLightningGlowTexture;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LightningBolt> activeBolts;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40EA")]
		private readonly LightningBoltParameters[] oneParameterArray;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly List<LightningBolt> lightningBoltCache;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1CC")]
		private readonly List<LightningBoltDependencies> dependenciesCache;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LightningThreadState threadState;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderId_MainTex;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderId_TintColor;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40F2")]
		private static int shaderId_JitterMultiplier;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int shaderId_Turbulence;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1D4")]
		private static int shaderId_TurbulenceVelocity;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderId_SrcBlendMode;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderId_DstBlendMode;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderId_InvFade;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40FA")]
		private static int shaderId_LightningTime;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int shaderId_IntensityFlicker;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1DC")]
		private static int shaderId_IntensityFlickerTexture;

		[Token(Token = "0x1700025A")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningStartedCallback
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x1BF2CA4", Offset = "0x1BF2CA4", VA = "0x1BF2CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CE40", Offset = "0xC1CE40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x1BF2CD4", Offset = "0x1BF2CD4", VA = "0x1BF2CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CE7C", Offset = "0xC1CE7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningEndedCallback
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x1BF2D0C", Offset = "0x1BF2D0C", VA = "0x1BF2D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CEB8", Offset = "0xC1CEB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x1BF2D3C", Offset = "0x1BF2D3C", VA = "0x1BF2D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CEF4", Offset = "0xC1CEF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Action<Light> LightAddedCallback
		{
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x1BF2D74", Offset = "0x1BF2D74", VA = "0x1BF2D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CF30", Offset = "0xC1CF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x1BF2DA4", Offset = "0x1BF2DA4", VA = "0x1BF2DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CF6C", Offset = "0xC1CF6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Action<Light> LightRemovedCallback
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x1BF2DDC", Offset = "0x1BF2DDC", VA = "0x1BF2DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CFA8", Offset = "0xC1CFA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x1BF2E0C", Offset = "0x1BF2E0C", VA = "0x1BF2E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1CFE4", Offset = "0xC1CFE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool HasActiveBolts
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x1BF2E44", Offset = "0x1BF2E44", VA = "0x1BF2E44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public static Vector4 TimeVectorSinceStart
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x1BF2F28", Offset = "0x1BF2F28", VA = "0x1BF2F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D020", Offset = "0xC1D020")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x1BF2FF4", Offset = "0x1BF2FF4", VA = "0x1BF2FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D05C", Offset = "0xC1D05C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public static float TimeSinceStart
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x1BF31DC", Offset = "0x1BF31DC", VA = "0x1BF31DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D098", Offset = "0xC1D098")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x1BF32C4", Offset = "0x1BF32C4", VA = "0x1BF32C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D0D4", Offset = "0xC1D0D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public static float DeltaTime
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x1BF33B4", Offset = "0x1BF33B4", VA = "0x1BF33B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D110", Offset = "0xC1D110")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x1BF349C", Offset = "0x1BF349C", VA = "0x1BF349C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D14C", Offset = "0xC1D14C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000262")]
		internal Material lightningMaterialMeshInternal
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x1BF6004", Offset = "0x1BF6004", VA = "0x1BF6004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D188", Offset = "0xC1D188")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x1BF6034", Offset = "0x1BF6034", VA = "0x1BF6034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D1C4", Offset = "0xC1D1C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000263")]
		internal Material lightningMaterialMeshNoGlowInternal
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x1BF606C", Offset = "0x1BF606C", VA = "0x1BF606C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D200", Offset = "0xC1D200")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x1BF609C", Offset = "0x1BF609C", VA = "0x1BF609C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D23C", Offset = "0xC1D23C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1BF358C", Offset = "0x1BF358C", VA = "0x1BF358C", Slot = "4")]
		public virtual void CreateLightningBolt(LightningBoltParameters p)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1BD5F0C", Offset = "0x1BD5F0C", VA = "0x1BD5F0C")]
		public void CreateLightningBolts(ICollection<LightningBoltParameters> parameters)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1BF4384", Offset = "0x1BF4384", VA = "0x1BF4384", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1BF1B54", Offset = "0x1BF1B54", VA = "0x1BF1B54", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1BF2200", Offset = "0x1BF2200", VA = "0x1BF2200", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1BF5F10", Offset = "0x1BF5F10", VA = "0x1BF5F10", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1BF0004", Offset = "0x1BF0004", VA = "0x1BF0004", Slot = "9")]
		protected virtual LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1BF1398", Offset = "0x1BF1398", VA = "0x1BF1398")]
		protected LightningBoltParameters CreateParameters()
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1BF19E4", Offset = "0x1BF19E4", VA = "0x1BF19E4", Slot = "10")]
		protected virtual void PopulateParameters(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1BF60D4", Offset = "0x1BF60D4", VA = "0x1BF60D4")]
		private Coroutine StartCoroutineWrapper(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1BF6160", Offset = "0x1BF6160", VA = "0x1BF6160")]
		private void OnSceneLoaded(Scene arg0, LoadSceneMode arg1)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1BF3CB8", Offset = "0x1BF3CB8", VA = "0x1BF3CB8")]
		private LightningBoltDependencies CreateLightningBoltDependencies(ICollection<LightningBoltParameters> parameters)
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1BF6254", Offset = "0x1BF6254", VA = "0x1BF6254")]
		private void ReturnLightningDependenciesToCache(LightningBoltDependencies d)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1BF6398", Offset = "0x1BF6398", VA = "0x1BF6398")]
		internal void OnLightAdded(Light l)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1BF6474", Offset = "0x1BF6474", VA = "0x1BF6474")]
		internal void OnLightRemoved(Light l)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1BF6550", Offset = "0x1BF6550", VA = "0x1BF6550")]
		internal void AddActiveBolt(LightningBolt bolt)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1BF43B4", Offset = "0x1BF43B4", VA = "0x1BF43B4")]
		private void UpdateShaderIds()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1BF49E0", Offset = "0x1BF49E0", VA = "0x1BF49E0")]
		private void UpdateMaterialsForLastTexture()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1BF377C", Offset = "0x1BF377C", VA = "0x1BF377C")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1BF682C", Offset = "0x1BF682C", VA = "0x1BF682C")]
		private void SetMaterialPerspective()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1BF69FC", Offset = "0x1BF69FC", VA = "0x1BF69FC")]
		private void SetMaterialOrthographicXY()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1BF6BCC", Offset = "0x1BF6BCC", VA = "0x1BF6BCC")]
		private void SetMaterialOrthographicXZ()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1BF65F0", Offset = "0x1BF65F0", VA = "0x1BF65F0")]
		private void SetupMaterialCamera()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1BF6D9C", Offset = "0x1BF6D9C", VA = "0x1BF6D9C")]
		private void EnableKeyword(string keyword, bool enable, Material m)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1BF4DCC", Offset = "0x1BF4DCC", VA = "0x1BF4DCC")]
		private void UpdateShaderParameters()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1BF59C4", Offset = "0x1BF59C4", VA = "0x1BF59C4")]
		private void CheckCompensateForParentTransform()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1BF4770", Offset = "0x1BF4770", VA = "0x1BF4770")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1BF3AC8", Offset = "0x1BF3AC8", VA = "0x1BF3AC8")]
		private LightningBolt GetOrCreateLightningBolt()
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1BF5CF4", Offset = "0x1BF5CF4", VA = "0x1BF5CF4")]
		private void UpdateActiveBolts()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1BF6E48", Offset = "0x1BF6E48", VA = "0x1BF6E48")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1BF6EC0", Offset = "0x1BF6EC0", VA = "0x1BF6EC0")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1BF7214", Offset = "0x1BF7214", VA = "0x1BF7214")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1BF7540", Offset = "0x1BF7540", VA = "0x1BF7540")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1BF2948", Offset = "0x1BF2948", VA = "0x1BF2948")]
		public LightningBoltScript()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class WaitForSecondsLightning : CustomYieldInstruction
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float remaining;

		[Token(Token = "0x17000264")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x1C16A44", Offset = "0x1C16A44", VA = "0x1C16A44", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1C08948", Offset = "0x1C08948", VA = "0x1C08948")]
		public WaitForSecondsLightning(float time)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class LightningBoltShapeConeScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF92EC", Offset = "0xBF92EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF92EC", Offset = "0xBF92EC")]
		public float InnerRadius;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9398", Offset = "0xBF9398")]
		public float OuterRadius;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4102")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF93FC", Offset = "0xBF93FC")]
		public float Length;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1BF77E4", Offset = "0x1BF77E4", VA = "0x1BF77E4", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1BF7D04", Offset = "0x1BF7D04", VA = "0x1BF7D04")]
		public LightningBoltShapeConeScript()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class LightningBoltShapeSphereScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF9460", Offset = "0xBF9460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9460", Offset = "0xBF9460")]
		public float InnerRadius;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C964")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF950C", Offset = "0xBF950C")]
		public float Radius;

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1BF7D70", Offset = "0x1BF7D70", VA = "0x1BF7D70", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x1BF7FA0", Offset = "0x1BF7FA0", VA = "0x1BF7FA0")]
		public LightningBoltShapeSphereScript()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class LightningBoltTransformTrackerScript : MonoBehaviour
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9570", Offset = "0xBF9570")]
		public LightningBoltPrefabScript LightningScript;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF95D4", Offset = "0xBF95D4")]
		public Transform StartTarget;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9638", Offset = "0xBF9638")]
		public Transform EndTarget;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4109")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0xBF969C", Offset = "0xBF969C")]
		public RangeOfFloats ScaleLimit;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly Dictionary<Transform, LightningCustomTransformStateInfo> transformStartPositions;

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1BF8000", Offset = "0x1BF8000", VA = "0x1BF8000")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1BF81E4", Offset = "0x1BF81E4", VA = "0x1BF81E4")]
		private static float AngleBetweenVector2(Vector2 vec1, Vector2 vec2)
		{
			return default(float);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1BF83E4", Offset = "0x1BF83E4", VA = "0x1BF83E4")]
		private static void UpdateTransform(LightningCustomTransformStateInfo state, LightningBoltPrefabScript script, RangeOfFloats scaleLimit)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1BF98BC", Offset = "0x1BF98BC", VA = "0x1BF98BC")]
		public void CustomTransformHandler(LightningCustomTransformStateInfo state)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x1BF9BC4", Offset = "0x1BF9BC4", VA = "0x1BF9BC4")]
		public LightningBoltTransformTrackerScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public struct RangeOfIntegers
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9700", Offset = "0xBF9700")]
		public int Minimum;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9764", Offset = "0xBF9764")]
		public int Maximum;

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1C12858", Offset = "0x1C12858", VA = "0x1C12858")]
		public int Random()
		{
			return default(int);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1C128D8", Offset = "0x1C128D8", VA = "0x1C128D8")]
		public int Random(System.Random r)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	public struct RangeOfFloats
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF97C8", Offset = "0xBF97C8")]
		public float Minimum;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF982C", Offset = "0xBF982C")]
		public float Maximum;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1C12744", Offset = "0x1C12744", VA = "0x1C12744")]
		public float Random()
		{
			return default(float);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1C1279C", Offset = "0x1C1279C", VA = "0x1C1279C")]
		public float Random(System.Random r)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000285")]
	public class SingleLineAttribute : PropertyAttribute
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4111")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9890", Offset = "0xBF9890")]
		private string <Tooltip>k__BackingField;

		[Token(Token = "0x17000265")]
		public string Tooltip
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x1C129C8", Offset = "0x1C129C8", VA = "0x1C129C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D278", Offset = "0xC1D278")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x1C129F8", Offset = "0x1C129F8", VA = "0x1C129F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D2B4", Offset = "0xC1D2B4")]
			private set
			{
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1C12978", Offset = "0x1C12978", VA = "0x1C12978")]
		public SingleLineAttribute(string tooltip)
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class SingleLineClampAttribute : SingleLineAttribute
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF98CC", Offset = "0xBF98CC")]
		private double <MinValue>k__BackingField;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBF9908", Offset = "0xBF9908")]
		private double <MaxValue>k__BackingField;

		[Token(Token = "0x17000266")]
		public double MinValue
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x1C12AAC", Offset = "0x1C12AAC", VA = "0x1C12AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D2F0", Offset = "0xC1D2F0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1C12ADC", Offset = "0x1C12ADC", VA = "0x1C12ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D32C", Offset = "0xC1D32C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public double MaxValue
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x1C12B14", Offset = "0x1C12B14", VA = "0x1C12B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D368", Offset = "0xC1D368")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x1C12B44", Offset = "0x1C12B44", VA = "0x1C12B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D3A4", Offset = "0xC1D3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1C12A30", Offset = "0x1C12A30", VA = "0x1C12A30")]
		public SingleLineClampAttribute(string tooltip, double minValue, double maxValue)
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class LightningFieldScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF9944", Offset = "0xBF9944")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9944", Offset = "0xBF9944")]
		public float MinimumLength;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float minimumLengthSquared;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF99F0", Offset = "0xBF99F0")]
		public Bounds FieldBounds;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4119")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9A54", Offset = "0xBF9A54")]
		public Light Light;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x1BFC5B8", Offset = "0x1BFC5B8", VA = "0x1BFC5B8")]
		private Vector3 RandomPointInBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1BFC7A4", Offset = "0x1BFC7A4", VA = "0x1BFC7A4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x1BFC8F8", Offset = "0x1BFC8F8", VA = "0x1BFC8F8", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1BFCAC8", Offset = "0x1BFCAC8", VA = "0x1BFCAC8", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x1BFCE54", Offset = "0x1BFCE54", VA = "0x1BFCE54")]
		public LightningFieldScript()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class LightningGenerator
	{
		[Token(Token = "0x4001254")]
		internal const float oneOver255 = 0.003921569f;

		[Token(Token = "0x4001255")]
		internal const float mainTrunkMultiplier = 0.003921569f;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LightningGenerator GeneratorInstance;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x1BFCE9C", Offset = "0x1BFCE9C", VA = "0x1BFCE9C")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x1BFD3EC", Offset = "0x1BFD3EC", VA = "0x1BFD3EC", Slot = "4")]
		protected virtual void OnGenerateLightningBolt(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1BFE4D0", Offset = "0x1BFE4D0", VA = "0x1BFE4D0")]
		public bool ShouldCreateFork(LightningBoltParameters parameters, int generation, int totalGenerations)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x1BFE66C", Offset = "0x1BFE66C", VA = "0x1BFE66C")]
		public void CreateFork(LightningBolt bolt, LightningBoltParameters parameters, int generation, int totalGenerations, Vector3 start, Vector3 midPoint)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x1BFD4F8", Offset = "0x1BFD4F8", VA = "0x1BFD4F8")]
		public void GenerateLightningBoltStandard(LightningBolt bolt, Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x1BFF4F4", Offset = "0x1BFF4F4", VA = "0x1BFF4F4")]
		public Vector3 RandomDirection3D(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x1BFF708", Offset = "0x1BFF708", VA = "0x1BFF708")]
		public Vector3 RandomDirection2D(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1BFF8D4", Offset = "0x1BFF8D4", VA = "0x1BFF8D4")]
		public Vector3 RandomDirection2DXZ(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1BFE988", Offset = "0x1BFE988", VA = "0x1BFE988")]
		public void RandomVector(LightningBolt bolt, ref Vector3 start, ref Vector3 end, float offsetAmount, System.Random random, out Vector3 result)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1BFFAA0", Offset = "0x1BFFAA0", VA = "0x1BFFAA0")]
		public void GenerateLightningBolt(LightningBolt bolt, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1BFFB44", Offset = "0x1BFFB44", VA = "0x1BFFB44")]
		public void GenerateLightningBolt(LightningBolt bolt, LightningBoltParameters parameters, out Vector3 start, out Vector3 end)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x1BFFD9C", Offset = "0x1BFFD9C", VA = "0x1BFFD9C")]
		public LightningGenerator()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class LightningGeneratorPath : LightningGenerator
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LightningGeneratorPath PathGeneratorInstance;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1BFFE6C", Offset = "0x1BFFE6C", VA = "0x1BFFE6C")]
		public void GenerateLightningBoltPath(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1C018B8", Offset = "0x1C018B8", VA = "0x1C018B8", Slot = "4")]
		protected override void OnGenerateLightningBolt(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1C01974", Offset = "0x1C01974", VA = "0x1C01974")]
		public LightningGeneratorPath()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class LightningGizmoScript : MonoBehaviour
	{
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1C01AFC", Offset = "0x1C01AFC", VA = "0x1C01AFC")]
		public LightningGizmoScript()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class LightningLightsabreScript : LightningBoltPrefabScript
	{
		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF9AB8", Offset = "0xBF9AB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9AB8", Offset = "0xBF9AB8")]
		public float BladeHeight;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4121")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9B64", Offset = "0xBF9B64")]
		public float ActivationTime;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9BC8", Offset = "0xBF9BC8")]
		public AudioSource StartSound;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9C2C", Offset = "0xBF9C2C")]
		public AudioSource StopSound;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9C90", Offset = "0xBF9C90")]
		public AudioSource ConstantSound;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int state;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 bladeStart;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4129")]
		private Vector3 bladeDir;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float bladeTime;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F204")]
		private float bladeIntensity;

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1C01D84", Offset = "0x1C01D84", VA = "0x1C01D84", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1C01DB4", Offset = "0x1C01DB4", VA = "0x1C01DB4", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1C022C8", Offset = "0x1C022C8", VA = "0x1C022C8")]
		public bool TurnOn(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1C02884", Offset = "0x1C02884", VA = "0x1C02884")]
		public void TurnOnGUI(bool value)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1C028D8", Offset = "0x1C028D8", VA = "0x1C028D8")]
		public LightningLightsabreScript()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class LightningMeshSurfaceScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF9CF4", Offset = "0xBF9CF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9CF4", Offset = "0xBF9CF4")]
		public MeshFilter MeshFilter;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9DA0", Offset = "0xBF9DA0")]
		public Collider MeshCollider;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0xBF9E04", Offset = "0xBF9E04")]
		public RangeOfFloats MeshOffsetRange;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4131")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBF9E68", Offset = "0xBF9E68")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0xBF9E68", Offset = "0xBF9E68")]
		public RangeOfIntegers PathLengthCount;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0xBF9F14", Offset = "0xBF9F14")]
		public RangeOfFloats MinimumPathDistanceRange;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9F78", Offset = "0xBF9F78")]
		public float MaximumPathDistance;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maximumPathDistanceSquared;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBF9FDC", Offset = "0xBF9FDC")]
		public bool Spline;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA040", Offset = "0xBFA040")]
		public float DistancePerSegmentHint;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4139")]
		private readonly List<Vector3> sourcePoints;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Mesh previousMesh;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F214")]
		private MeshHelper meshHelper;

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1C02934", Offset = "0x1C02934", VA = "0x1C02934")]
		private void CheckMesh()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1C02D2C", Offset = "0x1C02D2C", VA = "0x1C02D2C", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1C02E4C", Offset = "0x1C02E4C", VA = "0x1C02E4C", Slot = "11")]
		protected virtual void PopulateSourcePoints(List<Vector3> points)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1C02EC0", Offset = "0x1C02EC0", VA = "0x1C02EC0")]
		public void CreateRandomLightningPath(List<Vector3> points)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1C04410", Offset = "0x1C04410", VA = "0x1C04410", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1C04440", Offset = "0x1C04440", VA = "0x1C04440", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1C044B0", Offset = "0x1C044B0", VA = "0x1C044B0", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1C04C38", Offset = "0x1C04C38", VA = "0x1C04C38")]
		public LightningMeshSurfaceScript()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class LightningSplineScript : LightningBoltPathScriptBase
	{
		[Token(Token = "0x400126E")]
		public const int MaxSplineGenerations = 5;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA0A4", Offset = "0xBFA0A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA0A4", Offset = "0xBFA0A4")]
		public float DistancePerSegmentHint;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<Vector3> prevSourcePoints;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4141")]
		private readonly List<Vector3> sourcePoints;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Vector3> savedSplinePoints;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F21C")]
		private int previousGenerations;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float previousDistancePerSegment;

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1C08A90", Offset = "0x1C08A90", VA = "0x1C08A90")]
		private bool SourceChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1C08D40", Offset = "0x1C08D40", VA = "0x1C08D40", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1C08D70", Offset = "0x1C08D70", VA = "0x1C08D70", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1C08DA0", Offset = "0x1C08DA0", VA = "0x1C08DA0", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1C097D0", Offset = "0x1C097D0", VA = "0x1C097D0", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1C09960", Offset = "0x1C09960", VA = "0x1C09960")]
		public void Trigger(List<Vector3> points, bool spline)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1C04930", Offset = "0x1C04930", VA = "0x1C04930")]
		public static void PopulateSpline(List<Vector3> splinePoints, List<Vector3> sourcePoints, int generations, float distancePerSegmentHit, Camera camera)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1C0AE4C", Offset = "0x1C0AE4C", VA = "0x1C0AE4C")]
		public LightningSplineScript()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD90D8", Offset = "0xBD90D8")]
	public class LightningWhipScript : MonoBehaviour
	{
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8BC", Offset = "0xBDF8BC")]
		private sealed class <WhipForward>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F22C")]
			private int <>1__state;

			[Token(Token = "0x4002A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightningWhipScript <>4__this;

			[Token(Token = "0x170004F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D39")]
				[Address(RVA = "0x1C0DF5C", Offset = "0x1C0DF5C", VA = "0x1C0DF5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D3B")]
				[Address(RVA = "0x1C0E02C", Offset = "0x1C0E02C", VA = "0x1C0E02C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D36")]
			[Address(RVA = "0x1C0CBB4", Offset = "0x1C0CBB4", VA = "0x1C0CBB4")]
			[DebuggerHidden]
			public <WhipForward>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D37")]
			[Address(RVA = "0x1C0D394", Offset = "0x1C0D394", VA = "0x1C0D394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D38")]
			[Address(RVA = "0x1C0D3A8", Offset = "0x1C0D3A8", VA = "0x1C0D3A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0x1C0DF8C", Offset = "0x1C0DF8C", VA = "0x1C0DF8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip WhipCrack;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip WhipCrackThunder;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4149")]
		private AudioSource audioSource;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject whipStart;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F224")]
		private GameObject whipEndStrike;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject whipHandle;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject whipSpring;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 prevDrag;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4151")]
		private bool dragging;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool canWhip;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1C0CAF8", Offset = "0x1C0CAF8", VA = "0x1C0CAF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1D3E0", Offset = "0xC1D3E0")]
		private IEnumerator WhipForward()
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1C0CBFC", Offset = "0x1C0CBFC", VA = "0x1C0CBFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1C0CD40", Offset = "0x1C0CD40", VA = "0x1C0CD40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1C0D350", Offset = "0x1C0D350", VA = "0x1C0D350")]
		public LightningWhipScript()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class MeshHelper
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4159")]
		private int[] triangles;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3[] vertices;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C96C")]
		private Vector3[] normals;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] normalizedAreaWeights;

		[Token(Token = "0x17000268")]
		public Mesh Mesh
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x1C100A4", Offset = "0x1C100A4", VA = "0x1C100A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public int[] Triangles
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x1C100D4", Offset = "0x1C100D4", VA = "0x1C100D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x1C10104", Offset = "0x1C10104", VA = "0x1C10104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public Vector3[] Normals
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x1C10134", Offset = "0x1C10134", VA = "0x1C10134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1C02C50", Offset = "0x1C02C50", VA = "0x1C02C50")]
		public MeshHelper(Mesh mesh)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1C03934", Offset = "0x1C03934", VA = "0x1C03934")]
		public void GenerateRandomPoint(ref RaycastHit hit, out int triangleIndex)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1C039B8", Offset = "0x1C039B8", VA = "0x1C039B8")]
		public void GetRaycastFromTriangleIndex(int triangleIndex, ref RaycastHit hit)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1C10164", Offset = "0x1C10164", VA = "0x1C10164")]
		private float[] CalculateSurfaceAreas(out float totalSurfaceArea)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1C0FB14", Offset = "0x1C0FB14", VA = "0x1C0FB14")]
		private void CalculateNormalizedAreaWeights()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1C0FCBC", Offset = "0x1C0FCBC", VA = "0x1C0FCBC")]
		private int SelectRandomTriangle()
		{
			return default(int);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1C0FE48", Offset = "0x1C0FE48", VA = "0x1C0FE48")]
		private Vector3 GenerateRandomBarycentricCoordinates()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000290")]
	public static class PathGenerator
	{
		[Token(Token = "0x4001284")]
		public const int MinPointsForSpline = 4;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Is2D;

		[Token(Token = "0x4001286")]
		private const float curveMultiplier = 3f;

		[Token(Token = "0x4001287")]
		private const float splineMultiplier1 = -3f;

		[Token(Token = "0x4001288")]
		private const float splineMultiplier2 = 3f;

		[Token(Token = "0x4001289")]
		private const float splineMultiplier3 = 2f;

		[Token(Token = "0x400128A")]
		private const float splineDistanceClamp = 1f;

		[Token(Token = "0x400128B")]
		private const float splineEpsilon = 0.0001f;

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1C017C4", Offset = "0x1C017C4", VA = "0x1C017C4")]
		public static float SquareRoot(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1C10848", Offset = "0x1C10848", VA = "0x1C10848")]
		private static float Distance2D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1C10944", Offset = "0x1C10944", VA = "0x1C10944")]
		private static float Distance3D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1C10AD4", Offset = "0x1C10AD4", VA = "0x1C10AD4")]
		private static void GetCurvePoint2D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1C10FE8", Offset = "0x1C10FE8", VA = "0x1C10FE8")]
		private static void GetCurvePoint3D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1C11650", Offset = "0x1C11650", VA = "0x1C11650")]
		private static void CalculateNonuniformCatmullRom(float p1, float p2, float p3, float p4, float distance1, float distance2, float distance3, out Vector4 point)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1C11A40", Offset = "0x1C11A40", VA = "0x1C11A40")]
		private static float CalculatePolynomial(ref Vector4 point, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1C11B84", Offset = "0x1C11B84", VA = "0x1C11B84")]
		private static void ClampSplineDistances(ref float distance1, ref float distance2, ref float distance3)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1C11CB0", Offset = "0x1C11CB0", VA = "0x1C11CB0")]
		private static void GetSplinePoint2D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1C11FE4", Offset = "0x1C11FE4", VA = "0x1C11FE4")]
		private static void GetSplinePoint3D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1C123EC", Offset = "0x1C123EC", VA = "0x1C123EC")]
		public static float CreateCurve(ICollection<Vector3> path, Vector3 start, Vector3 end, Vector3 ctr1, Vector3 ctr2, int numberOfSegments, float startT)
		{
			return default(float);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1C0A604", Offset = "0x1C0A604", VA = "0x1C0A604")]
		public static bool CreateSpline(ICollection<Vector3> path, IList<Vector3> points, int numberOfSegments, bool closePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1C09D50", Offset = "0x1C09D50", VA = "0x1C09D50")]
		public static bool CreateSplineWithSegmentDistance(ICollection<Vector3> path, IList<Vector3> points, float distancePerSegment, bool closePath)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000291")]
	public class LightningBeamSpellScript : LightningSpellScript
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA150", Offset = "0xBFA150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA150", Offset = "0xBFA150")]
		public LightningBoltPathScriptBase LightningPathScript;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA1FC", Offset = "0xBFA1FC")]
		public float EndPointRandomization;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F23C")]
		[HideInInspector]
		public Action<RaycastHit> CollisionCallback;

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1BDC078", Offset = "0x1BDC078", VA = "0x1BDC078")]
		private void CheckCollision()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1BDC988", Offset = "0x1BDC988", VA = "0x1BDC988", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1BDC9E4", Offset = "0x1BDC9E4", VA = "0x1BDC9E4", Slot = "6")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1BDCA50", Offset = "0x1BDCA50", VA = "0x1BDCA50", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1BDCA9C", Offset = "0x1BDCA9C", VA = "0x1BDCA9C", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1BDCAE8", Offset = "0x1BDCAE8", VA = "0x1BDCAE8")]
		public LightningBeamSpellScript()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public interface ICollisionHandler
	{
		[Token(Token = "0x600122F")]
		void HandleCollision(GameObject obj, List<ParticleCollisionEvent> collision, int collisionCount);
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9188", Offset = "0xBD9188")]
	public class LightningParticleCollisionForwarder : MonoBehaviour
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA29C", Offset = "0xBFA29C")]
		public MonoBehaviour CollisionHandler;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1C04F1C", Offset = "0x1C04F1C", VA = "0x1C04F1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1C04FA8", Offset = "0x1C04FA8", VA = "0x1C04FA8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1C05120", Offset = "0x1C05120", VA = "0x1C05120")]
		public LightningParticleCollisionForwarder()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class LightningParticleSpellScript : LightningSpellScript, ICollisionHandler
	{
		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA300", Offset = "0xBFA300")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA364", Offset = "0xBFA364")]
		public float CollisionInterval;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F244")]
		protected float collisionTimer;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Action<GameObject, List<ParticleCollisionEvent>, int> CollisionCallback;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA404", Offset = "0xBFA404")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA404", Offset = "0xBFA404")]
		public bool EnableParticleLights;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBFA4B0", Offset = "0xBFA4B0")]
		public RangeOfFloats ParticleLightRange;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4178")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0xBFA540", Offset = "0xBFA540")]
		public RangeOfFloats ParticleLightIntensity;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA5CC", Offset = "0xBFA5CC")]
		public Color ParticleLightColor1;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F24C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA630", Offset = "0xBFA630")]
		public Color ParticleLightColor2;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA694", Offset = "0xBFA694")]
		public LayerMask ParticleLightCullingMask;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<GameObject> particleLights;

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1C051D8", Offset = "0x1C051D8", VA = "0x1C051D8")]
		private void PopulateParticleLight(Light src)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1C05584", Offset = "0x1C05584", VA = "0x1C05584")]
		private void UpdateParticleLights()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1C05AAC", Offset = "0x1C05AAC", VA = "0x1C05AAC")]
		private void UpdateParticleSystems()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1C05EAC", Offset = "0x1C05EAC", VA = "0x1C05EAC", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1C0624C", Offset = "0x1C0624C", VA = "0x1C0624C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1C063C4", Offset = "0x1C063C4", VA = "0x1C063C4", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1C066F4", Offset = "0x1C066F4", VA = "0x1C066F4", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1C06838", Offset = "0x1C06838", VA = "0x1C06838", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1C06970", Offset = "0x1C06970", VA = "0x1C06970", Slot = "12")]
		private void DigitalRuby.ThunderAndLightning.ICollisionHandler.HandleCollision(GameObject obj, List<ParticleCollisionEvent> collisions, int collisionCount)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1C07328", Offset = "0x1C07328", VA = "0x1C07328")]
		public LightningParticleSpellScript()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public abstract class LightningSpellScript : MonoBehaviour
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8F8", Offset = "0xBDF8F8")]
		private sealed class <StopAfterSecondsCoRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41A0")]
			public LightningSpellScript <>4__this;

			[Token(Token = "0x4002A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float seconds;

			[Token(Token = "0x4002A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F274")]
			private int <token>5__2;

			[Token(Token = "0x170004F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D3F")]
				[Address(RVA = "0x1C08990", Offset = "0x1C08990", VA = "0x1C08990", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D41")]
				[Address(RVA = "0x1C08A60", Offset = "0x1C08A60", VA = "0x1C08A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0x1C07958", Offset = "0x1C07958", VA = "0x1C07958")]
			[DebuggerHidden]
			public <StopAfterSecondsCoRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0x1C08710", Offset = "0x1C08710", VA = "0x1C08710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0x1C08724", Offset = "0x1C08724", VA = "0x1C08724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D40")]
			[Address(RVA = "0x1C089C0", Offset = "0x1C089C0", VA = "0x1C089C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA6F8", Offset = "0xBFA6F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA6F8", Offset = "0xBFA6F8")]
		public GameObject SpellStart;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA7A4", Offset = "0xBFA7A4")]
		public GameObject SpellEnd;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F254")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA808", Offset = "0xBFA808")]
		public Vector3 Direction;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA890", Offset = "0xBFA890")]
		public float MaxDistance;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFA8F4", Offset = "0xBFA8F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA8F4", Offset = "0xBFA8F4")]
		public bool CollisionIsExplosion;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFA9A0", Offset = "0xBFA9A0")]
		public float CollisionRadius;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAA04", Offset = "0xBFAA04")]
		public float CollisionForce;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAA68", Offset = "0xBFAA68")]
		public ForceMode CollisionForceMode;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F25C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAACC", Offset = "0xBFAACC")]
		public ParticleSystem CollisionParticleSystem;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAB30", Offset = "0xBFAB30")]
		public LayerMask CollisionMask;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAB94", Offset = "0xBFAB94")]
		public AudioSource CollisionAudioSource;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFABF8", Offset = "0xBFABF8")]
		public AudioClip[] CollisionAudioClips;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAC5C", Offset = "0xBFAC5C")]
		public RangeOfFloats CollisionVolumeRange;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFACC0", Offset = "0xBFACC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFACC0", Offset = "0xBFACC0")]
		public float Duration;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F264")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAD6C", Offset = "0xBFAD6C")]
		public float Cooldown;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFADD0", Offset = "0xBFADD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFADD0", Offset = "0xBFADD0")]
		public AudioSource EmissionSound;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAE7C", Offset = "0xBFAE7C")]
		public ParticleSystem EmissionParticleSystem;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAEE0", Offset = "0xBFAEE0")]
		public Light EmissionLight;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4198")]
		private int stopToken;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFAF44", Offset = "0xBFAF44")]
		private float <DurationTimer>k__BackingField;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFAF80", Offset = "0xBFAF80")]
		private float <CooldownTimer>k__BackingField;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFAFBC", Offset = "0xBFAFBC")]
		private bool <Casting>k__BackingField;

		[Token(Token = "0x1700026C")]
		protected float DurationTimer
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x1C079A0", Offset = "0x1C079A0", VA = "0x1C079A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D540", Offset = "0xC1D540")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1C079D0", Offset = "0x1C079D0", VA = "0x1C079D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D57C", Offset = "0xC1D57C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		protected float CooldownTimer
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1C07A08", Offset = "0x1C07A08", VA = "0x1C07A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D5B8", Offset = "0xC1D5B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1C07A38", Offset = "0x1C07A38", VA = "0x1C07A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D5F4", Offset = "0xC1D5F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public bool Casting
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x1C08680", Offset = "0x1C08680", VA = "0x1C08680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D630", Offset = "0xC1D630")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x1C086C4", Offset = "0x1C086C4", VA = "0x1C086C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D66C", Offset = "0xC1D66C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public bool CanCastSpell
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1C07E7C", Offset = "0x1C07E7C", VA = "0x1C07E7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1C07874", Offset = "0x1C07874", VA = "0x1C07874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1D490", Offset = "0xC1D490")]
		private IEnumerator StopAfterSecondsCoRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1C06EC8", Offset = "0x1C06EC8", VA = "0x1C06EC8")]
		protected void ApplyCollisionForce(Vector3 point)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1C06BE4", Offset = "0x1C06BE4", VA = "0x1C06BE4")]
		protected void PlayCollisionSound(Vector3 pos)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1C0627C", Offset = "0x1C0627C", VA = "0x1C0627C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1C064EC", Offset = "0x1C064EC", VA = "0x1C064EC", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1C07A70", Offset = "0x1C07A70", VA = "0x1C07A70", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1C06238", Offset = "0x1C06238", VA = "0x1C06238", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001248")]
		protected abstract void OnCastSpell();

		[Token(Token = "0x6001249")]
		protected abstract void OnStopSpell();

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1C07A84", Offset = "0x1C07A84", VA = "0x1C07A84", Slot = "10")]
		protected virtual void OnActivated()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1C07A98", Offset = "0x1C07A98", VA = "0x1C07A98", Slot = "11")]
		protected virtual void OnDeactivated()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1C07AAC", Offset = "0x1C07AAC", VA = "0x1C07AAC")]
		public bool CastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1C07FC8", Offset = "0x1C07FC8", VA = "0x1C07FC8")]
		public void StopSpell()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1C08368", Offset = "0x1C08368", VA = "0x1C08368")]
		public void ActivateSpell()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1C08398", Offset = "0x1C08398", VA = "0x1C08398")]
		public void DeactivateSpell()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1C07F70", Offset = "0x1C07F70", VA = "0x1C07F70")]
		public void StopAfterSeconds(float seconds)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1C083C8", Offset = "0x1C083C8", VA = "0x1C083C8")]
		public static GameObject FindChildRecursively(Transform t, string name)
		{
			return null;
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1C07534", Offset = "0x1C07534", VA = "0x1C07534")]
		protected LightningSpellScript()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class LightningWhipSpell : LightningSpellScript
	{
		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF934", Offset = "0xBDF934")]
		private sealed class <WhipForward>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41B0")]
			public LightningWhipSpell <>4__this;

			[Token(Token = "0x4002A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Vector3 <whipPositionForwards>5__2;

			[Token(Token = "0x170004FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D45")]
				[Address(RVA = "0x1C0FA14", Offset = "0x1C0FA14", VA = "0x1C0FA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D47")]
				[Address(RVA = "0x1C0FAE4", Offset = "0x1C0FAE4", VA = "0x1C0FAE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D42")]
			[Address(RVA = "0x1C0E118", Offset = "0x1C0E118", VA = "0x1C0E118")]
			[DebuggerHidden]
			public <WhipForward>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D43")]
			[Address(RVA = "0x1C0E4A8", Offset = "0x1C0E4A8", VA = "0x1C0E4A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D44")]
			[Address(RVA = "0x1C0E4BC", Offset = "0x1C0E4BC", VA = "0x1C0E4BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0x1C0FA44", Offset = "0x1C0FA44", VA = "0x1C0FA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFAFF8", Offset = "0xBFAFF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFAFF8", Offset = "0xBFAFF8")]
		public GameObject AttachTo;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB0A4", Offset = "0xBFB0A4")]
		public GameObject RotateWith;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB108", Offset = "0xBFB108")]
		public GameObject WhipHandle;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB16C", Offset = "0xBFB16C")]
		public GameObject WhipStart;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB1D0", Offset = "0xBFB1D0")]
		public GameObject WhipSpring;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F27C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB234", Offset = "0xBFB234")]
		public AudioSource WhipCrackAudioSource;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Action<Vector3> CollisionCallback;

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1C0E05C", Offset = "0x1C0E05C", VA = "0x1C0E05C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1D6A8", Offset = "0xC1D6A8")]
		private IEnumerator WhipForward()
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1C0E160", Offset = "0x1C0E160", VA = "0x1C0E160", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1C0E1EC", Offset = "0x1C0E1EC", VA = "0x1C0E1EC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1C0E354", Offset = "0x1C0E354", VA = "0x1C0E354", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1C0E39C", Offset = "0x1C0E39C", VA = "0x1C0E39C", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1C0E3B0", Offset = "0x1C0E3B0", VA = "0x1C0E3B0", Slot = "10")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1C0E414", Offset = "0x1C0E414", VA = "0x1C0E414", Slot = "11")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1C0E478", Offset = "0x1C0E478", VA = "0x1C0E478")]
		public LightningWhipSpell()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class ThunderAndLightningScript : MonoBehaviour
	{
		[Token(Token = "0x2000611")]
		private class LightningBoltHandler
		{
			[Token(Token = "0x2000843")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3174", Offset = "0xBE3174")]
			private sealed class <ProcessLightning>d__9 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40032E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xD4F29C")]
				private int <>1__state;

				[Token(Token = "0x40032EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x40032EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public LightningBoltHandler <>4__this;

				[Token(Token = "0x40032EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public bool intense;

				[Token(Token = "0x40032ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x41D7")]
				public Vector3? _start;

				[Token(Token = "0x40032EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
				public Vector3? _end;

				[Token(Token = "0x40032EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2A4")]
				public bool visible;

				[Token(Token = "0x40032F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private AudioClip[] <sounds>5__2;

				[Token(Token = "0x40032F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private float <intensity>5__3;

				[Token(Token = "0x170005FF")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60032F9")]
					[Address(RVA = "0x1C16944", Offset = "0x1C16944", VA = "0x1C16944", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000600")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60032FB")]
					[Address(RVA = "0x1C16A14", Offset = "0x1C16A14", VA = "0x1C16A14", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60032F6")]
				[Address(RVA = "0x1C14368", Offset = "0x1C14368", VA = "0x1C14368")]
				[DebuggerHidden]
				public <ProcessLightning>d__9(int <>1__state)
				{
				}

				[Token(Token = "0x60032F7")]
				[Address(RVA = "0x1C15938", Offset = "0x1C15938", VA = "0x1C15938", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60032F8")]
				[Address(RVA = "0x1C1594C", Offset = "0x1C1594C", VA = "0x1C1594C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60032FA")]
				[Address(RVA = "0x1C16974", Offset = "0x1C16974", VA = "0x1C16974", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC14C64", Offset = "0xC14C64")]
			private float <VolumeMultiplier>k__BackingField;

			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41CF")]
			private ThunderAndLightningScript script;

			[Token(Token = "0x4002A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private readonly System.Random random;

			[Token(Token = "0x170004FD")]
			public float VolumeMultiplier
			{
				[Token(Token = "0x6002D48")]
				[Address(RVA = "0x1C13B88", Offset = "0x1C13B88", VA = "0x1C13B88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC30A18", Offset = "0xC30A18")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002D49")]
				[Address(RVA = "0x1C13BB8", Offset = "0x1C13BB8", VA = "0x1C13BB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC30A54", Offset = "0xC30A54")]
				set
				{
				}
			}

			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0x1C130DC", Offset = "0x1C130DC", VA = "0x1C130DC")]
			public LightningBoltHandler(ThunderAndLightningScript script)
			{
			}

			[Token(Token = "0x6002D4B")]
			[Address(RVA = "0x1C13E90", Offset = "0x1C13E90", VA = "0x1C13E90")]
			private void UpdateLighting()
			{
			}

			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0x1C13BF0", Offset = "0x1C13BF0", VA = "0x1C13BF0")]
			private void CalculateNextLightningTime()
			{
			}

			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0x1C134CC", Offset = "0x1C134CC", VA = "0x1C134CC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC30A90", Offset = "0xC30A90")]
			public IEnumerator ProcessLightning(Vector3? _start, Vector3? _end, bool intense, bool visible)
			{
				return null;
			}

			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0x1C143B0", Offset = "0x1C143B0", VA = "0x1C143B0")]
			private void Strike(Vector3? _start, Vector3? _end, bool intense, float intensity, Camera camera, Camera visibleInCamera)
			{
			}

			[Token(Token = "0x6002D4F")]
			[Address(RVA = "0x1C14124", Offset = "0x1C14124", VA = "0x1C14124")]
			private void CheckForLightning()
			{
			}

			[Token(Token = "0x6002D50")]
			[Address(RVA = "0x1C13270", Offset = "0x1C13270", VA = "0x1C13270")]
			public void Update()
			{
			}
		}

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C974")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB2D4", Offset = "0xBFB2D4")]
		public LightningBoltPrefabScript LightningBoltScript;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB338", Offset = "0xBFB338")]
		public Camera Camera;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0xBFB39C", Offset = "0xBFB39C")]
		public RangeOfFloats LightningIntervalTimeRange;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB400", Offset = "0xBFB400")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFB400", Offset = "0xBFB400")]
		public float LightningIntenseProbability;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41B7")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB49C", Offset = "0xBFB49C")]
		public AudioClip[] ThunderSoundsNormal;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB500", Offset = "0xBFB500")]
		public AudioClip[] ThunderSoundsIntense;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F284")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB564", Offset = "0xBFB564")]
		public bool LightningAlwaysVisible;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB5C8", Offset = "0xBFB5C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFB5C8", Offset = "0xBFB5C8")]
		public float CloudLightningChance;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB664", Offset = "0xBFB664")]
		public bool ModifySkyboxExposure;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB6C8", Offset = "0xBFB6C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFB6C8", Offset = "0xBFB6C8")]
		public float BaseLightRange;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41BF")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB76C", Offset = "0xBFB76C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFB76C", Offset = "0xBFB76C")]
		public float LightningYStart;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFB80C", Offset = "0xBFB80C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFB80C", Offset = "0xBFB80C")]
		public float VolumeMultiplier;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F28C")]
		private float skyboxExposureOriginal;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float skyboxExposureStorm;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float nextLightningTime;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool lightningInProgress;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C7")]
		private AudioSource audioSourceThunder;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private LightningBoltHandler lightningBoltHandler;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F294")]
		private Material skyboxMaterial;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AudioClip lastThunderSound;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB8A8", Offset = "0xBFB8A8")]
		private bool <EnableLightning>k__BackingField;

		[Token(Token = "0x17000270")]
		public float SkyboxExposureOriginal
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x1C1392C", Offset = "0x1C1392C", VA = "0x1C1392C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000271")]
		public bool EnableLightning
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x1C1395C", Offset = "0x1C1395C", VA = "0x1C1395C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D758", Offset = "0xC1D758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x1C139A0", Offset = "0x1C139A0", VA = "0x1C139A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D794", Offset = "0xC1D794")]
			set
			{
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1C12B7C", Offset = "0x1C12B7C", VA = "0x1C12B7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1C131A8", Offset = "0x1C131A8", VA = "0x1C131A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1C132A0", Offset = "0x1C132A0", VA = "0x1C132A0")]
		public void CallNormalLightning()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1C1339C", Offset = "0x1C1339C", VA = "0x1C1339C")]
		public void CallNormalLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1C13708", Offset = "0x1C13708", VA = "0x1C13708")]
		public void CallIntenseLightning()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1C13804", Offset = "0x1C13804", VA = "0x1C13804")]
		public void CallIntenseLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1C139EC", Offset = "0x1C139EC", VA = "0x1C139EC")]
		public ThunderAndLightningScript()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x2000298")]
	internal class Behavior
	{
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool poly;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41DF")]
		private bool quality;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool varArea;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2AC")]
		private bool convex;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool jettison;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool boundaryMarkers;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool noHoles;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41E7")]
		private bool conformDel;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2B4")]
		private int noBisect;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double minAngle;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double maxAngle;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double maxArea;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41EF")]
		internal bool fixedArea;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal bool useSegments;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2BC")]
		internal bool useRegions;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double goodAngle;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double maxGoodAngle;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double offconstant;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB8E4", Offset = "0xBFB8E4")]
		private static bool <NoExact>k__BackingField;

		[Token(Token = "0x17000272")]
		public static bool NoExact
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x29D3494", Offset = "0x29D3494", VA = "0x29D3494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D7D0", Offset = "0xC1D7D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x29D3528", Offset = "0x29D3528", VA = "0x29D3528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D80C", Offset = "0xC1D80C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public bool Quality
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x29D35C4", Offset = "0x29D35C4", VA = "0x29D35C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x29D3608", Offset = "0x29D3608", VA = "0x29D3608")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public double MinAngle
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x29D3688", Offset = "0x29D3688", VA = "0x29D3688")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x29D36B8", Offset = "0x29D36B8", VA = "0x29D36B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public double MaxAngle
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x29D3704", Offset = "0x29D3704", VA = "0x29D3704")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x29D3734", Offset = "0x29D3734", VA = "0x29D3734")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public double MaxArea
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x29D3780", Offset = "0x29D3780", VA = "0x29D3780")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x29D37B0", Offset = "0x29D37B0", VA = "0x29D37B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool VarArea
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x29D3840", Offset = "0x29D3840", VA = "0x29D3840")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x29D3884", Offset = "0x29D3884", VA = "0x29D3884")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool Poly
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x29D38D0", Offset = "0x29D38D0", VA = "0x29D38D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x29D3914", Offset = "0x29D3914", VA = "0x29D3914")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x29D3960", Offset = "0x29D3960", VA = "0x29D3960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x29D3990", Offset = "0x29D3990", VA = "0x29D3990")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public bool Convex
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x29D39C8", Offset = "0x29D39C8", VA = "0x29D39C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x29D3A0C", Offset = "0x29D3A0C", VA = "0x29D3A0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x29D3A58", Offset = "0x29D3A58", VA = "0x29D3A58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x29D3A9C", Offset = "0x29D3A9C", VA = "0x29D3A9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public int NoBisect
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x29D3AE8", Offset = "0x29D3AE8", VA = "0x29D3AE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x29D3B18", Offset = "0x29D3B18", VA = "0x29D3B18")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x29D3BBC", Offset = "0x29D3BBC", VA = "0x29D3BBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x29D3C00", Offset = "0x29D3C00", VA = "0x29D3C00")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool NoHoles
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x29D3C4C", Offset = "0x29D3C4C", VA = "0x29D3C4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x29D3C90", Offset = "0x29D3C90", VA = "0x29D3C90")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public bool Jettison
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x29D3CDC", Offset = "0x29D3CDC", VA = "0x29D3CDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x29D3D20", Offset = "0x29D3D20", VA = "0x29D3D20")]
			set
			{
			}
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x29D2CF0", Offset = "0x29D2CF0", VA = "0x29D2CF0")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x29D2DBC", Offset = "0x29D2DBC", VA = "0x29D2DBC")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class Configuration
	{
		[Serializable]
		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF970", Offset = "0xBDF970")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<IPredicates> <>9__0_0;

			[Token(Token = "0x4002A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<TrianglePool> <>9__0_1;

			[Token(Token = "0x4002A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41FF")]
			public static Func<TrianglePool> <>9__1_0;

			[Token(Token = "0x6002D52")]
			[Address(RVA = "0x29D462C", Offset = "0x29D462C", VA = "0x29D462C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D53")]
			[Address(RVA = "0x29D465C", Offset = "0x29D465C", VA = "0x29D465C")]
			internal IPredicates <.ctor>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x6002D54")]
			[Address(RVA = "0x29D4748", Offset = "0x29D4748", VA = "0x29D4748")]
			internal TrianglePool <.ctor>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x6002D55")]
			[Address(RVA = "0x29D47DC", Offset = "0x29D47DC", VA = "0x29D47DC")]
			internal TrianglePool <.ctor>b__1_0()
			{
				return null;
			}
		}

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB920", Offset = "0xBFB920")]
		private Func<IPredicates> <Predicates>k__BackingField;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB95C", Offset = "0xBFB95C")]
		private Func<TrianglePool> <TrianglePool>k__BackingField;

		[Token(Token = "0x17000280")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x29D44BC", Offset = "0x29D44BC", VA = "0x29D44BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D848", Offset = "0xC1D848")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x29D44EC", Offset = "0x29D44EC", VA = "0x29D44EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D884", Offset = "0xC1D884")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x29D4524", Offset = "0x29D4524", VA = "0x29D4524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D8C0", Offset = "0xC1D8C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x29D4554", Offset = "0x29D4554", VA = "0x29D4554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D8FC", Offset = "0xC1D8FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x29D3D6C", Offset = "0x29D3D6C", VA = "0x29D3D6C")]
		public Configuration()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x29D422C", Offset = "0x29D422C", VA = "0x29D422C")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x29D41C0", Offset = "0x29D41C0", VA = "0x29D41C0")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public enum VertexType
	{
		[Token(Token = "0x40012E7")]
		InputVertex,
		[Token(Token = "0x40012E8")]
		SegmentVertex,
		[Token(Token = "0x40012E9")]
		FreeVertex,
		[Token(Token = "0x40012EA")]
		DeadVertex,
		[Token(Token = "0x40012EB")]
		UndeadVertex
	}
	[Token(Token = "0x200029B")]
	public enum NodeNumbering
	{
		[Token(Token = "0x40012ED")]
		None,
		[Token(Token = "0x40012EE")]
		Linear,
		[Token(Token = "0x40012EF")]
		CuthillMcKee
	}
	[Token(Token = "0x200029C")]
	public enum LocateResult
	{
		[Token(Token = "0x40012F1")]
		InTriangle,
		[Token(Token = "0x40012F2")]
		OnEdge,
		[Token(Token = "0x40012F3")]
		OnVertex,
		[Token(Token = "0x40012F4")]
		Outside
	}
	[Token(Token = "0x200029D")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x40012F6")]
		Successful,
		[Token(Token = "0x40012F7")]
		Encroaching,
		[Token(Token = "0x40012F8")]
		Violating,
		[Token(Token = "0x40012F9")]
		Duplicate
	}
	[Token(Token = "0x200029E")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x40012FB")]
		Within,
		[Token(Token = "0x40012FC")]
		Leftcollinear,
		[Token(Token = "0x40012FD")]
		Rightcollinear
	}
	[Token(Token = "0x200029F")]
	public interface IPredicates
	{
		[Token(Token = "0x600128D")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x600128E")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x600128F")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x6001290")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x20002A0")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB998", Offset = "0xBFB998")]
		private static bool <Verbose>k__BackingField;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2E4")]
		private List<LogItem> log;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LogLevel level;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log instance;

		[Token(Token = "0x17000282")]
		public static bool Verbose
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x29ED810", Offset = "0x29ED810", VA = "0x29ED810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D938", Offset = "0xC1D938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x29ED90C", Offset = "0x29ED90C", VA = "0x29ED90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1D974", Offset = "0xC1D974")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x29EDB68", Offset = "0x29EDB68", VA = "0x29EDB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x29EE26C", Offset = "0x29EE26C", VA = "0x29EE26C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public LogLevel Level
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x29EE29C", Offset = "0x29EE29C", VA = "0x29EE29C", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x29EDA10", Offset = "0x29EDA10", VA = "0x29EDA10")]
		static Log()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x29EDAB0", Offset = "0x29EDAB0", VA = "0x29EDAB0")]
		private Log()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x29EDC50", Offset = "0x29EDC50", VA = "0x29EDC50", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x29EDCF0", Offset = "0x29EDCF0", VA = "0x29EDCF0", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x29EDD80", Offset = "0x29EDD80", VA = "0x29EDD80", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x29EDF08", Offset = "0x29EDF08", VA = "0x29EDF08", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x29EE17C", Offset = "0x29EE17C", VA = "0x29EE17C", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF9AC", Offset = "0xBDF9AC")]
		private sealed class <get_Edges>d__39 : IEnumerable<Edge>, IEnumerable, IEnumerator<Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x424E")]
			private int <>1__state;

			[Token(Token = "0x4002A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Edge <>2__current;

			[Token(Token = "0x4002A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F314")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh <>4__this;

			[Token(Token = "0x4002A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x170004FE")]
			private Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x6002D59")]
				[Address(RVA = "0x29F70B8", Offset = "0x29F70B8", VA = "0x29F70B8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D5B")]
				[Address(RVA = "0x29F7188", Offset = "0x29F7188", VA = "0x29F7188", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D56")]
			[Address(RVA = "0x29EE57C", Offset = "0x29EE57C", VA = "0x29EE57C")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002D57")]
			[Address(RVA = "0x29F6E9C", Offset = "0x29F6E9C", VA = "0x29F6E9C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D58")]
			[Address(RVA = "0x29F6EB0", Offset = "0x29F6EB0", VA = "0x29F6EB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0x29F70E8", Offset = "0x29F70E8", VA = "0x29F70E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0x29F71B8", Offset = "0x29F71B8", VA = "0x29F71B8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0x29F7314", Offset = "0x29F7314", VA = "0x29F7314", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPredicates predicates;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4226")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2EC")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TrianglePool triangles;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x422E")]
		internal int hash_vtx;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int hash_seg;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2F4")]
		internal int hash_tri;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal List<Point> holes;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Rectangle bounds;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4236")]
		internal int invertices;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int insegments;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F2FC")]
		internal int undeads;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int mesh_dim;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int nextras;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int hullsize;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x423E")]
		internal int steinerleft;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal bool checksegments;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F304")]
		internal bool checkquality;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4246")]
		internal TriangleLocator locator;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Behavior behavior;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F30C")]
		internal NodeNumbering numbering;

		[Token(Token = "0x400131E")]
		internal const int DUMMY = -1;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle dummytri;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment dummysub;

		[Token(Token = "0x17000286")]
		public Rectangle Bounds
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x29EE398", Offset = "0x29EE398", VA = "0x29EE398", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x29DDD0C", Offset = "0x29DDD0C", VA = "0x29DDD0C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public IList<Point> Holes
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x29EE3C8", Offset = "0x29EE3C8", VA = "0x29EE3C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public ICollection<Triangle> Triangles
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x29EE3F8", Offset = "0x29EE3F8", VA = "0x29EE3F8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x29EE428", Offset = "0x29EE428", VA = "0x29EE428", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public IEnumerable<Edge> Edges
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x29EE4C0", Offset = "0x29EE4C0", VA = "0x29EE4C0", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1D9B0", Offset = "0xC1D9B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x29EE5E0", Offset = "0x29EE5E0", VA = "0x29EE5E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028D")]
		public int NumberOfEdges
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x29ECD74", Offset = "0x29ECD74", VA = "0x29ECD74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028E")]
		public bool IsPolygon
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x29EE610", Offset = "0x29EE610", VA = "0x29EE610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x29EE67C", Offset = "0x29EE67C", VA = "0x29EE67C")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x29EE6AC", Offset = "0x29EE6AC", VA = "0x29EE6AC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x29EEA60", Offset = "0x29EEA60", VA = "0x29EEA60")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x29EEE34", Offset = "0x29EEE34", VA = "0x29EEE34", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x29E98F0", Offset = "0x29E98F0", VA = "0x29E98F0", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x29EF2EC", Offset = "0x29EF2EC", VA = "0x29EF2EC")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x29EFB80", Offset = "0x29EFB80", VA = "0x29EFB80")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x29EFBB8", Offset = "0x29EFBB8", VA = "0x29EFBB8")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x29EFDA8", Offset = "0x29EFDA8", VA = "0x29EFDA8")]
		private void ResetData()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x29EF128", Offset = "0x29EF128", VA = "0x29EF128")]
		private void Reset()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x29EFF88", Offset = "0x29EFF88", VA = "0x29EFF88")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x29F07D4", Offset = "0x29F07D4", VA = "0x29F07D4")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x29F0C18", Offset = "0x29F0C18", VA = "0x29F0C18")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x29F0E64", Offset = "0x29F0E64", VA = "0x29F0E64")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x29F1144", Offset = "0x29F1144", VA = "0x29F1144")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x29F4308", Offset = "0x29F4308", VA = "0x29F4308")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x29F4718", Offset = "0x29F4718", VA = "0x29F4718")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x29F4E90", Offset = "0x29F4E90", VA = "0x29F4E90")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x29F5608", Offset = "0x29F5608", VA = "0x29F5608")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x29F5C68", Offset = "0x29F5C68", VA = "0x29F5C68")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x29F65CC", Offset = "0x29F65CC", VA = "0x29F65CC")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x29F64AC", Offset = "0x29F64AC", VA = "0x29F64AC")]
		internal void TriangleDealloc(Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x29F63D4", Offset = "0x29F63D4", VA = "0x29F63D4")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x29F6DCC", Offset = "0x29F6DCC", VA = "0x29F6DCC")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public static class MeshValidator
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x29F734C", Offset = "0x29F734C", VA = "0x29F734C")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x29F8544", Offset = "0x29F8544", VA = "0x29F8544")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x29F9724", Offset = "0x29F9724", VA = "0x29F9724")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x29F8658", Offset = "0x29F8658", VA = "0x29F8658")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002A3")]
	internal class NewLocation
	{
		[Token(Token = "0x4001322")]
		private const double EPS = 1E-50;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private IPredicates predicates;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F31C")]
		private Mesh mesh;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Behavior behavior;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] petalx;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] petaly;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x425E")]
		private double[] petalr;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] wedges;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C984")]
		private double[] initialConvexPoly;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] points_p;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] points_q;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] points_r;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4265")]
		private double[] poly1;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] poly2;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F324")]
		private double[][] polys;

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x3166EF0", Offset = "0x3166EF0", VA = "0x3166EF0")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x316DC80", Offset = "0x316DC80", VA = "0x316DC80")]
		public Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x316E1EC", Offset = "0x316E1EC", VA = "0x316E1EC")]
		private Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x3172FCC", Offset = "0x3172FCC", VA = "0x3172FCC")]
		private Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x317D548", Offset = "0x317D548", VA = "0x317D548")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x317D7B4", Offset = "0x317D7B4", VA = "0x317D7B4")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x3182C74", Offset = "0x3182C74", VA = "0x3182C74")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x317E73C", Offset = "0x317E73C", VA = "0x317E73C")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x3183CA0", Offset = "0x3183CA0", VA = "0x3183CA0")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x3187DCC", Offset = "0x3187DCC", VA = "0x3187DCC")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x31835E8", Offset = "0x31835E8", VA = "0x31835E8")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x3190AA0", Offset = "0x3190AA0", VA = "0x3190AA0")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x3181874", Offset = "0x3181874", VA = "0x3181874")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x318FE24", Offset = "0x318FE24", VA = "0x318FE24")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x3190EA4", Offset = "0x3190EA4", VA = "0x3190EA4")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x31935C0", Offset = "0x31935C0", VA = "0x31935C0")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x3192E4C", Offset = "0x3192E4C", VA = "0x3192E4C")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x31906C0", Offset = "0x31906C0", VA = "0x31906C0")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x317FBD4", Offset = "0x317FBD4", VA = "0x317FBD4")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x3180724", Offset = "0x3180724", VA = "0x3180724")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x3180A20", Offset = "0x3180A20", VA = "0x3180A20")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x3180EC0", Offset = "0x3180EC0", VA = "0x3180EC0")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x3181FA8", Offset = "0x3181FA8", VA = "0x3181FA8")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002A4")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates _default;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double epsilon;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x426D")]
		private static double splitter;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static double resulterrbound;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F32C")]
		private static double ccwerrboundA;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double ccwerrboundB;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double ccwerrboundC;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double iccerrboundA;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4275")]
		private static double iccerrboundB;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static double iccerrboundC;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F334")]
		private double[] fin1;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] fin2;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] abdet;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] axbc;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x427D")]
		private double[] axxbc;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] aybc;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F33C")]
		private double[] ayybc;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] adet;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] bxca;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] bxxca;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4285")]
		private double[] byca;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] byyca;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F344")]
		private double[] bdet;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] cxab;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] cxxab;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] cyab;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428D")]
		private double[] cyyab;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] cdet;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F34C")]
		private double[] temp8;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] temp16a;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] temp16b;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] temp16c;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4295")]
		private double[] temp32a;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double[] temp32b;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F354")]
		private double[] temp48;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double[] temp64;

		[Token(Token = "0x17000290")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x3649EB8", Offset = "0x3649EB8", VA = "0x3649EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x364A414", Offset = "0x364A414", VA = "0x364A414")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x364A3D4", Offset = "0x364A3D4", VA = "0x364A3D4")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x364AE94", Offset = "0x364AE94", VA = "0x364AE94", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x364E048", Offset = "0x364E048", VA = "0x364E048", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x365C040", Offset = "0x365C040", VA = "0x365C040")]
		public double NonRegular(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x365C0B8", Offset = "0x365C0B8", VA = "0x365C0B8", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x365D194", Offset = "0x365D194", VA = "0x365D194", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x365D94C", Offset = "0x365D94C", VA = "0x365D94C")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x365E79C", Offset = "0x365E79C", VA = "0x365E79C")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x365F220", Offset = "0x365F220", VA = "0x365F220")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x364B4DC", Offset = "0x364B4DC", VA = "0x364B4DC")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x364E994", Offset = "0x364E994", VA = "0x364E994")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x364AAB0", Offset = "0x364AAB0", VA = "0x364AAB0")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x365F344", Offset = "0x365F344", VA = "0x365F344")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TriangleLocator
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TriangleSampler sampler;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x429D")]
		private IPredicates predicates;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Otri recenttri;

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x278C008", Offset = "0x278C008", VA = "0x278C008")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x278C110", Offset = "0x278C110", VA = "0x278C110")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x278C2B4", Offset = "0x278C2B4", VA = "0x278C2B4")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x278C304", Offset = "0x278C304", VA = "0x278C304")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x278C3B0", Offset = "0x278C3B0", VA = "0x278C3B0")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x278CBDC", Offset = "0x278CBDC", VA = "0x278CBDC")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x20002A6")]
	public class TrianglePool : ICollection<Triangle>, IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x2000614")]
		private class Enumerator : IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int count;

			[Token(Token = "0x4002A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F364")]
			private Triangle[][] pool;

			[Token(Token = "0x4002A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Triangle current;

			[Token(Token = "0x4002A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4002A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int offset;

			[Token(Token = "0x17000500")]
			public Triangle Current
			{
				[Token(Token = "0x6002D5F")]
				[Address(RVA = "0x278FF6C", Offset = "0x278FF6C", VA = "0x278FF6C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000501")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D61")]
				[Address(RVA = "0x278FFB0", Offset = "0x278FFB0", VA = "0x278FFB0", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0x278F7E0", Offset = "0x278F7E0", VA = "0x278F7E0")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x6002D60")]
			[Address(RVA = "0x278FF9C", Offset = "0x278FF9C", VA = "0x278FF9C", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002D62")]
			[Address(RVA = "0x278FFE0", Offset = "0x278FFE0", VA = "0x278FFE0", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D63")]
			[Address(RVA = "0x27901D8", Offset = "0x27901D8", VA = "0x27901D8", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF9E8", Offset = "0xBDF9E8")]
		private sealed class <Sample>d__9 : IEnumerable<Triangle>, IEnumerable, IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42AD")]
			private int <>1__state;

			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Triangle <>2__current;

			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F36C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrianglePool <>4__this;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int k;

			[Token(Token = "0x4002A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>3__k;

			[Token(Token = "0x4002A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42B5")]
			private System.Random random;

			[Token(Token = "0x4002A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public System.Random <>3__random;

			[Token(Token = "0x4002A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C98C")]
			private int <count>5__2;

			[Token(Token = "0x17000502")]
			private Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x6002D67")]
				[Address(RVA = "0x278FC88", Offset = "0x278FC88", VA = "0x278FC88", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D69")]
				[Address(RVA = "0x278FD58", Offset = "0x278FD58", VA = "0x278FD58", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D64")]
			[Address(RVA = "0x278EF50", Offset = "0x278EF50", VA = "0x278EF50")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002D65")]
			[Address(RVA = "0x278F8C4", Offset = "0x278F8C4", VA = "0x278F8C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D66")]
			[Address(RVA = "0x278F8D8", Offset = "0x278F8D8", VA = "0x278F8D8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D68")]
			[Address(RVA = "0x278FCB8", Offset = "0x278FCB8", VA = "0x278FCB8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002D6A")]
			[Address(RVA = "0x278FD88", Offset = "0x278FD88", VA = "0x278FD88", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0x278FF34", Offset = "0x278FF34", VA = "0x278FF34", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400135A")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Triangle[][] pool;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42A5")]
		private Stack<Triangle> stack;

		[Token(Token = "0x17000291")]
		public int Count
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x278F66C", Offset = "0x278F66C", VA = "0x278F66C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000292")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x278F718", Offset = "0x278F718", VA = "0x278F718", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x278DF40", Offset = "0x278DF40", VA = "0x278DF40")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x278E13C", Offset = "0x278E13C", VA = "0x278E13C")]
		public Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x278E948", Offset = "0x278E948", VA = "0x278E948")]
		public void Release(Triangle triangle)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x278EA58", Offset = "0x278EA58", VA = "0x278EA58")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x278EE44", Offset = "0x278EE44", VA = "0x278EE44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1DA60", Offset = "0xC1DA60")]
		internal IEnumerable<Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x278E76C", Offset = "0x278E76C", VA = "0x278E76C")]
		private void Cleanup(Triangle triangle)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x278EFB4", Offset = "0x278EFB4", VA = "0x278EFB4", Slot = "6")]
		public void Add(Triangle item)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x278F058", Offset = "0x278F058", VA = "0x278F058", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x278F320", Offset = "0x278F320", VA = "0x278F320", Slot = "8")]
		public bool Contains(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x278F4DC", Offset = "0x278F4DC", VA = "0x278F4DC", Slot = "9")]
		public void CopyTo(Triangle[] array, int index)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x278F73C", Offset = "0x278F73C", VA = "0x278F73C", Slot = "10")]
		public bool Remove(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x27779B0", Offset = "0x27779B0", VA = "0x27779B0", Slot = "11")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x278F88C", Offset = "0x278F88C", VA = "0x278F88C", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A7")]
	internal class TriangleSampler : IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x400135F")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x4001360")]
		private const int samplefactor = 11;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private System.Random random;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42BC")]
		private Mesh mesh;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int samples;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F374")]
		private int triangleCount;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x278C1F4", Offset = "0x278C1F4", VA = "0x278C1F4")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x2790228", Offset = "0x2790228", VA = "0x2790228")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x278C36C", Offset = "0x278C36C", VA = "0x278C36C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x278DCE4", Offset = "0x278DCE4", VA = "0x278DCE4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x278DE44", Offset = "0x278DE44", VA = "0x278DE44", Slot = "4")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x279029C", Offset = "0x279029C", VA = "0x279029C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x20002A8")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int offset;

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x27902D4", Offset = "0x27902D4", VA = "0x27902D4")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x2790438", Offset = "0x2790438", VA = "0x2790438")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x2790668", Offset = "0x2790668", VA = "0x2790668")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x2790B54", Offset = "0x2790B54", VA = "0x2790B54")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x2791120", Offset = "0x2791120", VA = "0x2791120")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x27917D0", Offset = "0x27917D0", VA = "0x27917D0", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x27917F0", Offset = "0x27917F0", VA = "0x27917F0", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x2791804", Offset = "0x2791804", VA = "0x2791804", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x27918B8", Offset = "0x27918B8", VA = "0x27918B8", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x279196C", Offset = "0x279196C", VA = "0x279196C", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x2790408", Offset = "0x2790408", VA = "0x2790408")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x600130F")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x6001310")]
		void Reset();

		[Token(Token = "0x6001311")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x6001312")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x6001313")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x20002AB")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x6001314")]
		[Address(RVA = "0x279B110", Offset = "0x279B110", VA = "0x279B110")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x279B328", Offset = "0x279B328", VA = "0x279B328")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x279B264", Offset = "0x279B264", VA = "0x279B264")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x279B46C", Offset = "0x279B46C", VA = "0x279B46C")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IPredicates predicates;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C4")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x27905B8", Offset = "0x27905B8", VA = "0x27905B8")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x279B874", Offset = "0x279B874", VA = "0x279B874")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x279C03C", Offset = "0x279C03C", VA = "0x279C03C")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x279C6D8", Offset = "0x279C6D8", VA = "0x279C6D8")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x279D69C", Offset = "0x279D69C", VA = "0x279D69C", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x279DD98", Offset = "0x279DD98", VA = "0x279DD98", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBD9238", Offset = "0xBD9238")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private IPredicates predicates;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F37C")]
		private Mesh mesh;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Point[] points;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Point> segPoints;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42CC")]
		private int segIndex;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F384")]
		private bool includeBoundary;

		[Token(Token = "0x17000293")]
		public Point[] Points
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x27923B8", Offset = "0x27923B8", VA = "0x27923B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x27923E8", Offset = "0x27923E8", VA = "0x27923E8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x2792418", Offset = "0x2792418", VA = "0x2792418", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x2791A10", Offset = "0x2791A10", VA = "0x2791A10")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x2791A58", Offset = "0x2791A58", VA = "0x2791A58")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x2791BC0", Offset = "0x2791BC0", VA = "0x2791BC0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x2792CF0", Offset = "0x2792CF0", VA = "0x2792CF0")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x27931E4", Offset = "0x27931E4", VA = "0x27931E4")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x2796A80", Offset = "0x2796A80", VA = "0x2796A80")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x2794018", Offset = "0x2794018", VA = "0x2794018")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x2794E9C", Offset = "0x2794E9C", VA = "0x2794E9C")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x2796DA4", Offset = "0x2796DA4", VA = "0x2796DA4")]
		private bool SegmentsIntersect(Point p1, Point p2, Point p3, Point p4, out Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x2792450", Offset = "0x2792450", VA = "0x2792450")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AE")]
	public interface IVoronoi
	{
		[Token(Token = "0x17000296")]
		Point[] Points
		{
			[Token(Token = "0x600132B")]
			get;
		}

		[Token(Token = "0x17000297")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x600132C")]
			get;
		}

		[Token(Token = "0x17000298")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600132D")]
			get;
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBD929C", Offset = "0xBD929C")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPredicates predicates;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Point[] points;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42D4")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<int, Point> rayPoints;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F38C")]
		private int rayIndex;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rectangle bounds;

		[Token(Token = "0x17000299")]
		public Point[] Points
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x27983F4", Offset = "0x27983F4", VA = "0x27983F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x2798424", Offset = "0x2798424", VA = "0x2798424", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x27984BC", Offset = "0x27984BC", VA = "0x27984BC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x2797AC4", Offset = "0x2797AC4", VA = "0x2797AC4")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x2797BE8", Offset = "0x2797BE8", VA = "0x2797BE8")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x2798D94", Offset = "0x2798D94", VA = "0x2798D94")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x27993DC", Offset = "0x27993DC", VA = "0x27993DC")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x279A698", Offset = "0x279A698", VA = "0x279A698")]
		private bool BoxRayIntersection(Point pt, double dx, double dy, out Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x27984F4", Offset = "0x27984F4", VA = "0x27984F4")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B0")]
	public class VoronoiRegion
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int id;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Point generator;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42DC")]
		private List<Point> vertices;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool bounded;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F394")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x1700029C")]
		public int ID
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x279AD7C", Offset = "0x279AD7C", VA = "0x279AD7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029D")]
		public Point Generator
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x279ADAC", Offset = "0x279ADAC", VA = "0x279ADAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public ICollection<Point> Vertices
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x279ADDC", Offset = "0x279ADDC", VA = "0x279ADDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public bool Bounded
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x279AE0C", Offset = "0x279AE0C", VA = "0x279AE0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x279AE50", Offset = "0x279AE50", VA = "0x279AE50")]
			set
			{
			}
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x27978D0", Offset = "0x27978D0", VA = "0x27978D0")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x279AE9C", Offset = "0x279AE9C", VA = "0x279AE9C")]
		public void Add(Point point)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x2797A24", Offset = "0x2797A24", VA = "0x2797A24")]
		public void Add(List<Point> points)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x279AF3C", Offset = "0x279AF3C", VA = "0x279AF3C")]
		public VoronoiRegion GetNeighbor(Point p)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x279A5E8", Offset = "0x279A5E8", VA = "0x279A5E8")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x279B044", Offset = "0x279B044", VA = "0x279B044", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x20002B1")]
	public struct Osub
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int orient;

		[Token(Token = "0x170002A0")]
		public SubSegment Segment
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x2787438", Offset = "0x2787438", VA = "0x2787438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x2787468", Offset = "0x2787468", VA = "0x2787468", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x278759C", Offset = "0x278759C", VA = "0x278759C")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x2787628", Offset = "0x2787628", VA = "0x2787628")]
		public void Sym()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x2787688", Offset = "0x2787688", VA = "0x2787688")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x2787744", Offset = "0x2787744", VA = "0x2787744")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x2787800", Offset = "0x2787800", VA = "0x2787800")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x27878CC", Offset = "0x27878CC", VA = "0x27878CC")]
		public void Next()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x278798C", Offset = "0x278798C", VA = "0x278798C")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x2787A04", Offset = "0x2787A04", VA = "0x2787A04")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x2787A8C", Offset = "0x2787A8C", VA = "0x2787A8C")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x2787B10", Offset = "0x2787B10", VA = "0x2787B10")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x2787BB0", Offset = "0x2787BB0", VA = "0x2787BB0")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x2787C38", Offset = "0x2787C38", VA = "0x2787C38")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x2787CC0", Offset = "0x2787CC0", VA = "0x2787CC0")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x2787D60", Offset = "0x2787D60", VA = "0x2787D60")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x2787E00", Offset = "0x2787E00", VA = "0x2787E00")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2787F8C", Offset = "0x2787F8C", VA = "0x2787F8C")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x2788008", Offset = "0x2788008", VA = "0x2788008")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x2788130", Offset = "0x2788130", VA = "0x2788130")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x27881AC", Offset = "0x27881AC", VA = "0x27881AC")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x2788250", Offset = "0x2788250", VA = "0x2788250")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public struct Otri
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42D4")]
		internal int orient;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F39C")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170002A1")]
		public Triangle Triangle
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x27882F8", Offset = "0x27882F8", VA = "0x27882F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x2788328", Offset = "0x2788328", VA = "0x2788328")]
			set
			{
			}
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x2788360", Offset = "0x2788360", VA = "0x2788360", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x2788494", Offset = "0x2788494", VA = "0x2788494")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x2788580", Offset = "0x2788580", VA = "0x2788580")]
		public void Sym()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x2788668", Offset = "0x2788668", VA = "0x2788668")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x27887BC", Offset = "0x27887BC", VA = "0x27887BC")]
		public void Lnext()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x27888E4", Offset = "0x27888E4", VA = "0x27888E4")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x2788A38", Offset = "0x2788A38", VA = "0x2788A38")]
		public void Lprev()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x2788B60", Offset = "0x2788B60", VA = "0x2788B60")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x2788DA4", Offset = "0x2788DA4", VA = "0x2788DA4")]
		public void Onext()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x2788F94", Offset = "0x2788F94", VA = "0x2788F94")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x2789198", Offset = "0x2789198", VA = "0x2789198")]
		public void Oprev()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x2789388", Offset = "0x2789388", VA = "0x2789388")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x278958C", Offset = "0x278958C", VA = "0x278958C")]
		public void Dnext()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x278977C", Offset = "0x278977C", VA = "0x278977C")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x27899C0", Offset = "0x27899C0", VA = "0x27899C0")]
		public void Dprev()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x2789BB0", Offset = "0x2789BB0", VA = "0x2789BB0")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x2789EAC", Offset = "0x2789EAC", VA = "0x2789EAC")]
		public void Rnext()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x278A160", Offset = "0x278A160", VA = "0x278A160")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x278A45C", Offset = "0x278A45C", VA = "0x278A45C")]
		public void Rprev()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x277A408", Offset = "0x277A408", VA = "0x277A408")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x277A570", Offset = "0x277A570", VA = "0x277A570")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x277A6D8", Offset = "0x277A6D8", VA = "0x277A6D8")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x278A710", Offset = "0x278A710", VA = "0x278A710")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x278A774", Offset = "0x278A774", VA = "0x278A774")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x278A89C", Offset = "0x278A89C", VA = "0x278A89C")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x278AA10", Offset = "0x278AA10", VA = "0x278AA10")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x278AB84", Offset = "0x278AB84", VA = "0x278AB84")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x278AC08", Offset = "0x278AC08", VA = "0x278AC08")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x278ADCC", Offset = "0x278ADCC", VA = "0x278ADCC")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x278AEA0", Offset = "0x278AEA0", VA = "0x278AEA0")]
		internal void Infect()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x278AEEC", Offset = "0x278AEEC", VA = "0x278AEEC")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x278AF38", Offset = "0x278AF38", VA = "0x278AF38")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x278AF90", Offset = "0x278AF90", VA = "0x278AF90")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x278B04C", Offset = "0x278B04C", VA = "0x278B04C")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x278B1D8", Offset = "0x278B1D8", VA = "0x278B1D8")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x278B254", Offset = "0x278B254", VA = "0x278B254")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x278B2F8", Offset = "0x278B2F8", VA = "0x278B2F8")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int hash;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Osub[] subsegs;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42EC")]
		internal Otri[] triangles;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int boundary;

		[Token(Token = "0x170002A2")]
		public int P0
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x278B634", Offset = "0x278B634", VA = "0x278B634", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A3")]
		public int P1
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x278B69C", Offset = "0x278B69C", VA = "0x278B69C", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A4")]
		public int Label
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x278B710", Offset = "0x278B710", VA = "0x278B710", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x278B514", Offset = "0x278B514", VA = "0x278B514")]
		public SubSegment()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x278B740", Offset = "0x278B740", VA = "0x278B740", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x278B7A4", Offset = "0x278B7A4", VA = "0x278B7A4", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x278B890", Offset = "0x278B890", VA = "0x278B890", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x278B8C0", Offset = "0x278B8C0", VA = "0x278B8C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B4")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3A4")]
		internal int hash;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int id;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Otri[] neighbors;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42F4")]
		internal Osub[] subsegs;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int label;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3AC")]
		internal double area;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool infected;

		[Token(Token = "0x170002A5")]
		public int ID
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x278BA8C", Offset = "0x278BA8C", VA = "0x278BA8C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x278BABC", Offset = "0x278BABC", VA = "0x278BABC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public int Label
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x278BAF4", Offset = "0x278BAF4", VA = "0x278BAF4", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x278BB24", Offset = "0x278BB24", VA = "0x278BB24", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public double Area
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x278BB5C", Offset = "0x278BB5C", VA = "0x278BB5C", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x278BB8C", Offset = "0x278BB8C", VA = "0x278BB8C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x278B98C", Offset = "0x278B98C", VA = "0x278B98C")]
		public Triangle()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x2778F78", Offset = "0x2778F78", VA = "0x2778F78", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x278BBC4", Offset = "0x278BBC4", VA = "0x278BBC4", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x278BC3C", Offset = "0x278BC3C", VA = "0x278BC3C", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x278BD28", Offset = "0x278BD28", VA = "0x278BD28", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x278BE20", Offset = "0x278BE20", VA = "0x278BE20", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x278BF0C", Offset = "0x278BF0C", VA = "0x278BF0C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x278BF3C", Offset = "0x278BF3C", VA = "0x278BF3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x20002B5")]
	public class DcelMesh
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<Vertex> vertices;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42FC")]
		protected List<Face> faces;

		[Token(Token = "0x170002A8")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x27837F0", Offset = "0x27837F0", VA = "0x27837F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x2783820", Offset = "0x2783820", VA = "0x2783820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public List<Face> Faces
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x2783850", Offset = "0x2783850", VA = "0x2783850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x2783880", Offset = "0x2783880", VA = "0x2783880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x2783650", Offset = "0x2783650", VA = "0x2783650")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x2783688", Offset = "0x2783688", VA = "0x2783688")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x27838B8", Offset = "0x27838B8", VA = "0x27838B8", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2784F60", Offset = "0x2784F60", VA = "0x2784F60")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x27859A4", Offset = "0x27859A4", VA = "0x27859A4", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	public class Face
	{
		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA24", Offset = "0xBDFA24")]
		private sealed class <EnumerateEdges>d__18 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3BC")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Face <>4__this;

			[Token(Token = "0x4002A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x430C")]
			private int <first>5__3;

			[Token(Token = "0x17000504")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6002D6F")]
				[Address(RVA = "0x2786610", Offset = "0x2786610", VA = "0x2786610", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D71")]
				[Address(RVA = "0x27866E0", Offset = "0x27866E0", VA = "0x27866E0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0x27862D0", Offset = "0x27862D0", VA = "0x27862D0")]
			[DebuggerHidden]
			public <EnumerateEdges>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0x2786400", Offset = "0x2786400", VA = "0x2786400", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0x2786414", Offset = "0x2786414", VA = "0x2786414", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D70")]
			[Address(RVA = "0x2786640", Offset = "0x2786640", VA = "0x2786640", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002D72")]
			[Address(RVA = "0x2786710", Offset = "0x2786710", VA = "0x2786710", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002D73")]
			[Address(RVA = "0x278686C", Offset = "0x278686C", VA = "0x278686C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly Face Empty;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3B4")]
		internal int id;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int mark;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Point generator;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal HalfEdge edge;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4304")]
		internal bool bounded;

		[Token(Token = "0x170002AC")]
		public int ID
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x2785FD4", Offset = "0x2785FD4", VA = "0x2785FD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x2786004", Offset = "0x2786004", VA = "0x2786004")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public HalfEdge Edge
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x278603C", Offset = "0x278603C", VA = "0x278603C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x278606C", Offset = "0x278606C", VA = "0x278606C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public bool Bounded
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x27860A4", Offset = "0x27860A4", VA = "0x27860A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x27860E8", Offset = "0x27860E8", VA = "0x27860E8")]
			set
			{
			}
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x2785EB0", Offset = "0x2785EB0", VA = "0x2785EB0")]
		static Face()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x2785F8C", Offset = "0x2785F8C", VA = "0x2785F8C")]
		public Face(Point generator)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x2786134", Offset = "0x2786134", VA = "0x2786134")]
		public Face(Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x2786214", Offset = "0x2786214", VA = "0x2786214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1DB10", Offset = "0xC1DB10")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x2786334", Offset = "0x2786334", VA = "0x2786334", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public class HalfEdge
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int id;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C55C")]
		internal int mark;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vertex origin;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Face face;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal HalfEdge twin;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4312")]
		internal HalfEdge next;

		[Token(Token = "0x170002AF")]
		public int ID
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x27868A4", Offset = "0x27868A4", VA = "0x27868A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x27868D4", Offset = "0x27868D4", VA = "0x27868D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public int Boundary
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x278690C", Offset = "0x278690C", VA = "0x278690C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x278693C", Offset = "0x278693C", VA = "0x278693C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public Vertex Origin
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x2786974", Offset = "0x2786974", VA = "0x2786974")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x27869A4", Offset = "0x27869A4", VA = "0x27869A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public Face Face
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x27869DC", Offset = "0x27869DC", VA = "0x27869DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x2786A0C", Offset = "0x2786A0C", VA = "0x2786A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public HalfEdge Twin
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x2786A44", Offset = "0x2786A44", VA = "0x2786A44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x2786A74", Offset = "0x2786A74", VA = "0x2786A74")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public HalfEdge Next
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x2786AAC", Offset = "0x2786AAC", VA = "0x2786AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x2786ADC", Offset = "0x2786ADC", VA = "0x2786ADC")]
			set
			{
			}
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x2786B14", Offset = "0x2786B14", VA = "0x2786B14")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x27858C8", Offset = "0x27858C8", VA = "0x27858C8")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2786B5C", Offset = "0x2786B5C", VA = "0x2786B5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B8")]
	public class Vertex : Point
	{
		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA60", Offset = "0xBDFA60")]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C994")]
			private int <>1__state;

			[Token(Token = "0x4002A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vertex <>4__this;

			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4319")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <first>5__3;

			[Token(Token = "0x17000506")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6002D77")]
				[Address(RVA = "0x27871A4", Offset = "0x27871A4", VA = "0x27871A4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000507")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D79")]
				[Address(RVA = "0x2787274", Offset = "0x2787274", VA = "0x2787274", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D74")]
			[Address(RVA = "0x2786E4C", Offset = "0x2786E4C", VA = "0x2786E4C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002D75")]
			[Address(RVA = "0x2786F7C", Offset = "0x2786F7C", VA = "0x2786F7C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D76")]
			[Address(RVA = "0x2786F90", Offset = "0x2786F90", VA = "0x2786F90", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D78")]
			[Address(RVA = "0x27871D4", Offset = "0x27871D4", VA = "0x27871D4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0x27872A4", Offset = "0x27872A4", VA = "0x27872A4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0x2787400", Offset = "0x2787400", VA = "0x2787400", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal HalfEdge leaving;

		[Token(Token = "0x170002B5")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x2786C70", Offset = "0x2786C70", VA = "0x2786C70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x2786CA0", Offset = "0x2786CA0", VA = "0x2786CA0")]
			set
			{
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x2786CD8", Offset = "0x2786CD8", VA = "0x2786CD8")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x2786D28", Offset = "0x2786D28", VA = "0x2786D28")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x2786D90", Offset = "0x2786D90", VA = "0x2786D90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1DBC0", Offset = "0xC1DBC0")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x2786EB0", Offset = "0x2786EB0", VA = "0x2786EB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x20002B9")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3C4")]
		private int nnz;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] pcol;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] irow;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int N;

		[Token(Token = "0x170002B6")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x3661B84", Offset = "0x3661B84", VA = "0x3661B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public int[] RowIndices
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x3661BB4", Offset = "0x3661BB4", VA = "0x3661BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x3661BE4", Offset = "0x3661BE4", VA = "0x3661BE4")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x3663B0C", Offset = "0x3663B0C", VA = "0x3663B0C")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x3663D58", Offset = "0x3663D58", VA = "0x3663D58")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x3661D64", Offset = "0x3661D64", VA = "0x3661D64")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x3662AF0", Offset = "0x3662AF0", VA = "0x3662AF0")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x3663910", Offset = "0x3663910", VA = "0x3663910")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class CuthillMcKee
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4321")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x3664094", Offset = "0x3664094", VA = "0x3664094")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x3664174", Offset = "0x3664174", VA = "0x3664174")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x36646BC", Offset = "0x36646BC", VA = "0x36646BC")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x36657F0", Offset = "0x36657F0", VA = "0x36657F0")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x36650EC", Offset = "0x36650EC", VA = "0x36650EC")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x3666C00", Offset = "0x3666C00", VA = "0x3666C00")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x3666138", Offset = "0x3666138", VA = "0x3666138")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x3664C80", Offset = "0x3664C80", VA = "0x3664C80")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x3664AE4", Offset = "0x3664AE4", VA = "0x3664AE4")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x36669F4", Offset = "0x36669F4", VA = "0x36669F4")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x36644F8", Offset = "0x36644F8", VA = "0x36644F8")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x366730C", Offset = "0x366730C", VA = "0x366730C")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public static class Interpolation
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x366733C", Offset = "0x366733C", VA = "0x366733C")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x3667944", Offset = "0x3667944", VA = "0x3667944")]
		public static void IntersectSegments(Point p0, Point p1, Point q0, Point q1, ref Point c0)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x3667D38", Offset = "0x3667D38", VA = "0x3667D38")]
		public static bool LiangBarsky(Rectangle rect, Point p0, Point p1, ref Point c0, ref Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x36684D8", Offset = "0x36684D8", VA = "0x36684D8")]
		public static bool BoxRayIntersection(Rectangle rect, Point p0, Point p1, ref Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BD")]
	public static class PolygonValidator
	{
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x3668BB4", Offset = "0x3668BB4", VA = "0x3668BB4")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x366AA94", Offset = "0x366AA94", VA = "0x366AA94")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x366AE7C", Offset = "0x366AE7C", VA = "0x366AE7C")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x366B644", Offset = "0x366B644", VA = "0x366B644")]
		private static bool IsBadAngle(Point a, Point b, Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x366B79C", Offset = "0x366B79C", VA = "0x366B79C")]
		private static double DotProduct(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x366B934", Offset = "0x366B934", VA = "0x366B934")]
		private static double CrossProductLength(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x3669E68", Offset = "0x3669E68", VA = "0x3669E68")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x366A580", Offset = "0x366A580", VA = "0x366A580")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002BE")]
	public class QualityMeasure
	{
		[Token(Token = "0x2000618")]
		private class AreaMeasure
		{
			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double area_min;

			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4329")]
			public double area_max;

			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public double area_total;

			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3D4")]
			public int area_zero;

			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0x2776D60", Offset = "0x2776D60", VA = "0x2776D60")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0x2777A48", Offset = "0x2777A48", VA = "0x2777A48")]
			public double Measure(Point a, Point b, Point c)
			{
				return default(double);
			}

			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0x27768E4", Offset = "0x27768E4", VA = "0x27768E4")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x2000619")]
		private class AlphaMeasure
		{
			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double alpha_min;

			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double alpha_max;

			[Token(Token = "0x4002A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double alpha_ave;

			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4331")]
			public double alpha_area;

			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0x2776DD0", Offset = "0x2776DD0", VA = "0x2776DD0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D80")]
			[Address(RVA = "0x2778FDC", Offset = "0x2778FDC", VA = "0x2778FDC")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0x2777DD4", Offset = "0x2777DD4", VA = "0x2777DD4")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6002D82")]
			[Address(RVA = "0x27787B4", Offset = "0x27787B4", VA = "0x27787B4")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0x2776940", Offset = "0x2776940", VA = "0x2776940")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x200061A")]
		private class Q_Measure
		{
			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public double q_min;

			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3DC")]
			public double q_max;

			[Token(Token = "0x4002A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double q_ave;

			[Token(Token = "0x4002A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double q_area;

			[Token(Token = "0x6002D84")]
			[Address(RVA = "0x2776E38", Offset = "0x2776E38", VA = "0x2776E38")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0x27784B0", Offset = "0x27784B0", VA = "0x27784B0")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6002D86")]
			[Address(RVA = "0x2778898", Offset = "0x2778898", VA = "0x2778898")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0x2776970", Offset = "0x2776970", VA = "0x2776970")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3CC")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Q_Measure qMeasure;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x170002B8")]
		public double AreaMinimum
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x27769A0", Offset = "0x27769A0", VA = "0x27769A0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002B9")]
		public double AreaMaximum
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x27769E4", Offset = "0x27769E4", VA = "0x27769E4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BA")]
		public double AreaRatio
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x2776A28", Offset = "0x2776A28", VA = "0x2776A28")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BB")]
		public double AlphaMinimum
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x2776A94", Offset = "0x2776A94", VA = "0x2776A94")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BC")]
		public double AlphaMaximum
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x2776AD8", Offset = "0x2776AD8", VA = "0x2776AD8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BD")]
		public double AlphaAverage
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x2776B1C", Offset = "0x2776B1C", VA = "0x2776B1C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BE")]
		public double AlphaArea
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x2776B60", Offset = "0x2776B60", VA = "0x2776B60")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BF")]
		public double Q_Minimum
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x2776BA4", Offset = "0x2776BA4", VA = "0x2776BA4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C0")]
		public double Q_Maximum
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x2776BE8", Offset = "0x2776BE8", VA = "0x2776BE8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C1")]
		public double Q_Average
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x2776C2C", Offset = "0x2776C2C", VA = "0x2776C2C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C2")]
		public double Q_Area
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x2776C70", Offset = "0x2776C70", VA = "0x2776C70")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x27767D4", Offset = "0x27767D4", VA = "0x27767D4")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x2776CB4", Offset = "0x2776CB4", VA = "0x2776CB4")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x2776EA0", Offset = "0x2776EA0", VA = "0x2776EA0")]
		private void Compute()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x277897C", Offset = "0x277897C", VA = "0x277897C")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002BF")]
	public class Statistic
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4339")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3E4")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long Orient3dCount;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long HyperbolaCount;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long CircumcenterCount;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4341")]
		public static long CircleTopCount;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static long RelocationCount;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3EC")]
		private double minEdge;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double maxEdge;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double minAspect;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double maxAspect;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4349")]
		private double minArea;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double maxArea;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3F4")]
		private double minAngle;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double maxAngle;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] angleTable;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] minAngles;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4351")]
		private int[] maxAngles;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F3FC")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170002C3")]
		public double ShortestEdge
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x277914C", Offset = "0x277914C", VA = "0x277914C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C4")]
		public double LongestEdge
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x277917C", Offset = "0x277917C", VA = "0x277917C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C5")]
		public double ShortestAltitude
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x27791AC", Offset = "0x27791AC", VA = "0x27791AC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C6")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x27791DC", Offset = "0x27791DC", VA = "0x27791DC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C7")]
		public double SmallestArea
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x277920C", Offset = "0x277920C", VA = "0x277920C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C8")]
		public double LargestArea
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x277923C", Offset = "0x277923C", VA = "0x277923C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002C9")]
		public double SmallestAngle
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x277926C", Offset = "0x277926C", VA = "0x277926C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CA")]
		public double LargestAngle
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x277929C", Offset = "0x277929C", VA = "0x277929C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CB")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x27792CC", Offset = "0x27792CC", VA = "0x27792CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x27792FC", Offset = "0x27792FC", VA = "0x27792FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x277932C", Offset = "0x277932C", VA = "0x277932C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x277935C", Offset = "0x277935C", VA = "0x277935C")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x277A750", Offset = "0x277A750", VA = "0x277A750")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x277CE4C", Offset = "0x277CE4C", VA = "0x277CE4C")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x200061B")]
		private class QuadNode
		{
			[Token(Token = "0x4002A76")]
			private const int SW = 0;

			[Token(Token = "0x4002A77")]
			private const int SE = 1;

			[Token(Token = "0x4002A78")]
			private const int NW = 2;

			[Token(Token = "0x4002A79")]
			private const int NE = 3;

			[Token(Token = "0x4002A7A")]
			private const double EPS = 1E-06;

			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4361")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x4002A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Rectangle bounds;

			[Token(Token = "0x4002A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F40C")]
			private Point pivot;

			[Token(Token = "0x4002A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TriangleQuadTree tree;

			[Token(Token = "0x4002A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private QuadNode[] regions;

			[Token(Token = "0x4002A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<int> triangles;

			[Token(Token = "0x4002A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4369")]
			private byte bitRegions;

			[Token(Token = "0x6002D88")]
			[Address(RVA = "0x277EE88", Offset = "0x277EE88", VA = "0x277EE88")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0x277D27C", Offset = "0x277D27C", VA = "0x277D27C")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0x277E720", Offset = "0x277E720", VA = "0x277E720")]
			public List<int> FindTriangles(Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0x277D698", Offset = "0x277D698", VA = "0x277D698")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0x277EFF0", Offset = "0x277EFF0", VA = "0x277EFF0")]
			private void AddTriangleToRegion(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0x277F604", Offset = "0x277F604", VA = "0x277F604")]
			private void FindTriangleIntersections(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0x277F934", Offset = "0x277F934", VA = "0x277F934")]
			private void FindIntersectionsWithX(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0x2780314", Offset = "0x2780314", VA = "0x2780314")]
			private void FindIntersectionsWithY(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002D90")]
			[Address(RVA = "0x277EEE0", Offset = "0x277EEE0", VA = "0x277EEE0")]
			private int FindRegion(Point point)
			{
				return default(int);
			}

			[Token(Token = "0x6002D91")]
			[Address(RVA = "0x277F358", Offset = "0x277F358", VA = "0x277F358")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private QuadNode root;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ITriangle[] triangles;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int sizeBound;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4359")]
		internal int maxDepth;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x277D0A4", Offset = "0x277D0A4", VA = "0x277D0A4")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x277E20C", Offset = "0x277E20C", VA = "0x277E20C")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x277E858", Offset = "0x277E858", VA = "0x277E858")]
		internal static bool IsPointInTriangle(Point p, Point t0, Point t1, Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x277EDBC", Offset = "0x277EDBC", VA = "0x277EDBC")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002C1")]
	public class VertexSorter
	{
		[Token(Token = "0x40013C3")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C99C")]
		private System.Random rand;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x2780DFC", Offset = "0x2780DFC", VA = "0x2780DFC")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x2780ECC", Offset = "0x2780ECC", VA = "0x2780ECC")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x2781B04", Offset = "0x2781B04", VA = "0x2781B04")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x2780FDC", Offset = "0x2780FDC", VA = "0x2780FDC")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x2781D1C", Offset = "0x2781D1C", VA = "0x2781D1C")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x2782080", Offset = "0x2782080", VA = "0x2782080")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x2782B68", Offset = "0x2782B68", VA = "0x2782B68")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x20002C2")]
	public interface ISmoother
	{
		[Token(Token = "0x6001408")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x6001409")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x20002C3")]
	public class SimpleSmoother : ISmoother
	{
		[Serializable]
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA9C", Offset = "0xBDFA9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F414")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<IPredicates> <>9__5_0;

			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Converter<SubSegment, ISegment> <>9__11_0;

			[Token(Token = "0x6002D94")]
			[Address(RVA = "0x3660E5C", Offset = "0x3660E5C", VA = "0x3660E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D95")]
			[Address(RVA = "0x3660E8C", Offset = "0x3660E8C", VA = "0x3660E8C")]
			internal IPredicates <.ctor>b__5_0()
			{
				return null;
			}

			[Token(Token = "0x6002D96")]
			[Address(RVA = "0x3660F78", Offset = "0x3660F78", VA = "0x3660F78")]
			internal ISegment <Rebuild>b__11_0(SubSegment x)
			{
				return null;
			}
		}

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TrianglePool pool;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Configuration config;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4370")]
		private IVoronoiFactory factory;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ConstraintOptions options;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x365F358", Offset = "0x365F358", VA = "0x365F358")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x365F54C", Offset = "0x365F54C", VA = "0x365F54C")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x365F8E8", Offset = "0x365F8E8", VA = "0x365F8E8")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x365F9EC", Offset = "0x365F9EC", VA = "0x365F9EC", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x365FA34", Offset = "0x365FA34", VA = "0x365FA34", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x365FD48", Offset = "0x365FD48", VA = "0x365FD48")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x3660950", Offset = "0x3660950", VA = "0x3660950")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x3660188", Offset = "0x3660188", VA = "0x3660188")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x3660D6C", Offset = "0x3660D6C", VA = "0x3660D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DC70", Offset = "0xC1DC70")]
		private TrianglePool <.ctor>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C4")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x200061D")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x17000508")]
			public int Count
			{
				[Token(Token = "0x6002D97")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000509")]
			public int Capacity
			{
				[Token(Token = "0x6002D98")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002D99")]
				set
				{
				}
			}

			[Token(Token = "0x6002D9A")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x6002D9B")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x6002D9C")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9D")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x6002D9E")]
			public void Release()
			{
			}

			[Token(Token = "0x6002D9F")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4378")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x365F3F8", Offset = "0x365F3F8", VA = "0x365F3F8")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x3660F9C", Offset = "0x3660F9C", VA = "0x3660F9C", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x3661424", Offset = "0x3661424", VA = "0x3661424", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x3661514", Offset = "0x3661514", VA = "0x3661514", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x3661708", Offset = "0x3661708", VA = "0x3661708", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x366198C", Offset = "0x366198C", VA = "0x366198C", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x20002C5")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F41C")]
		private IPredicates predicates;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Behavior behavior;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TriangleLocator locator;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4380")]
		private List<Triangle> viri;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ILog<LogItem> logger;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x3154710", Offset = "0x3154710", VA = "0x3154710")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x3154914", Offset = "0x3154914", VA = "0x3154914")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x3155994", Offset = "0x3155994", VA = "0x3155994")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x3154ED8", Offset = "0x3154ED8", VA = "0x3154ED8")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x3156B38", Offset = "0x3156B38", VA = "0x3156B38")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x31570B0", Offset = "0x31570B0", VA = "0x31570B0")]
		private void Plague()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x3158DA8", Offset = "0x3158DA8", VA = "0x3158DA8")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x3159578", Offset = "0x3159578", VA = "0x3159578")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x315A3FC", Offset = "0x315A3FC", VA = "0x315A3FC")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x315ABD0", Offset = "0x315ABD0", VA = "0x315ABD0")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x315B1BC", Offset = "0x315B1BC", VA = "0x315B1BC")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x3158434", Offset = "0x3158434", VA = "0x3158434")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x3158B38", Offset = "0x3158B38", VA = "0x3158B38")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class ConstraintOptions
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFB9D4", Offset = "0xBFB9D4")]
		private bool <UseRegions>k__BackingField;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBA10", Offset = "0xBFBA10")]
		private bool <ConformingDelaunay>k__BackingField;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBA4C", Offset = "0xBFBA4C")]
		private bool <Convex>k__BackingField;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBA88", Offset = "0xBFBA88")]
		private int <SegmentSplitting>k__BackingField;

		[Token(Token = "0x170002CE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC391F0", Offset = "0xC391F0")]
		public bool UseRegions
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x315B880", Offset = "0x315B880", VA = "0x315B880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DCAC", Offset = "0xC1DCAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x315B8C4", Offset = "0x315B8C4", VA = "0x315B8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DCE8", Offset = "0xC1DCE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x315B910", Offset = "0x315B910", VA = "0x315B910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DD24", Offset = "0xC1DD24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x315B954", Offset = "0x315B954", VA = "0x315B954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DD60", Offset = "0xC1DD60")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public bool Convex
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x315B9A0", Offset = "0x315B9A0", VA = "0x315B9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DD9C", Offset = "0xC1DD9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x315B9E4", Offset = "0x315B9E4", VA = "0x315B9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DDD8", Offset = "0xC1DDD8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public int SegmentSplitting
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x315BA30", Offset = "0x315BA30", VA = "0x315BA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DE14", Offset = "0xC1DE14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x315BA60", Offset = "0x315BA60", VA = "0x315BA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DE50", Offset = "0xC1DE50")]
			set
			{
			}
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x315BA98", Offset = "0x315BA98", VA = "0x315BA98")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public static class Converter
	{
		[Token(Token = "0x600142F")]
		[Address(RVA = "0x315BAC8", Offset = "0x315BAC8", VA = "0x315BAC8")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x315BB7C", Offset = "0x315BB7C", VA = "0x315BB7C")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x315C184", Offset = "0x315C184", VA = "0x315C184")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x315D684", Offset = "0x315D684", VA = "0x315D684")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x315EC58", Offset = "0x315EC58", VA = "0x315EC58")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C8")]
	public class GenericMesher
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4388")]
		private Configuration config;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ITriangulator triangulator;

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x31617B4", Offset = "0x31617B4", VA = "0x31617B4")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x31618E0", Offset = "0x31618E0", VA = "0x31618E0")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x3161990", Offset = "0x3161990", VA = "0x3161990")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x3161880", Offset = "0x3161880", VA = "0x3161880")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x3161A40", Offset = "0x3161A40", VA = "0x3161A40")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x3161B08", Offset = "0x3161B08", VA = "0x3161B08")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x3161DC0", Offset = "0x3161DC0", VA = "0x3161DC0")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x3161E20", Offset = "0x3161E20", VA = "0x3161E20")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x3161B60", Offset = "0x3161B60", VA = "0x3161B60")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x31626F8", Offset = "0x31626F8", VA = "0x31626F8")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x31628C8", Offset = "0x31628C8", VA = "0x31628C8")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C9")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x600143F")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x6001440")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x20002CA")]
	public interface IMesh
	{
		[Token(Token = "0x170002D2")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x6001441")]
			get;
		}

		[Token(Token = "0x170002D3")]
		IEnumerable<Edge> Edges
		{
			[Token(Token = "0x6001442")]
			get;
		}

		[Token(Token = "0x170002D4")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x6001443")]
			get;
		}

		[Token(Token = "0x170002D5")]
		ICollection<Triangle> Triangles
		{
			[Token(Token = "0x6001444")]
			get;
		}

		[Token(Token = "0x170002D6")]
		IList<Point> Holes
		{
			[Token(Token = "0x6001445")]
			get;
		}

		[Token(Token = "0x170002D7")]
		Rectangle Bounds
		{
			[Token(Token = "0x6001446")]
			get;
		}

		[Token(Token = "0x6001447")]
		void Renumber();

		[Token(Token = "0x6001448")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x20002CB")]
	public interface IQualityMesher
	{
		[Token(Token = "0x6001449")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x600144A")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x20002CC")]
	public interface ITriangulator
	{
		[Token(Token = "0x600144B")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x20002CD")]
	internal class QualityMesher
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F42C")]
		private IPredicates predicates;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BadTriQueue queue;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh mesh;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4390")]
		private Behavior behavior;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private NewLocation newLocation;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F434")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Triangle newvertex_tri;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x3161E80", Offset = "0x3161E80", VA = "0x3161E80")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x3162114", Offset = "0x3162114", VA = "0x3162114")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x3167640", Offset = "0x3167640", VA = "0x3167640")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x31676E0", Offset = "0x31676E0", VA = "0x31676E0")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x3168B04", Offset = "0x3168B04", VA = "0x3168B04")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x316A428", Offset = "0x316A428", VA = "0x316A428")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x316A850", Offset = "0x316A850", VA = "0x316A850")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x316CA30", Offset = "0x316CA30", VA = "0x316CA30")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x316CE20", Offset = "0x316CE20", VA = "0x316CE20")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x3167154", Offset = "0x3167154", VA = "0x3167154")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class QualityOptions
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBAC4", Offset = "0xBFBAC4")]
		private double <MaximumAngle>k__BackingField;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBB00", Offset = "0xBFBB00")]
		private double <MinimumAngle>k__BackingField;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBB3C", Offset = "0xBFBB3C")]
		private double <MaximumArea>k__BackingField;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBB78", Offset = "0xBFBB78")]
		private Func<ITriangle, double, bool> <UserTest>k__BackingField;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBBB4", Offset = "0xBFBBB4")]
		private bool <VariableArea>k__BackingField;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBBF0", Offset = "0xBFBBF0")]
		private int <SteinerPoints>k__BackingField;

		[Token(Token = "0x170002D8")]
		public double MaximumAngle
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x316DF24", Offset = "0x316DF24", VA = "0x316DF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DE8C", Offset = "0xC1DE8C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x316DF54", Offset = "0x316DF54", VA = "0x316DF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DEC8", Offset = "0xC1DEC8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public double MinimumAngle
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x316DF8C", Offset = "0x316DF8C", VA = "0x316DF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DF04", Offset = "0xC1DF04")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x316DFBC", Offset = "0x316DFBC", VA = "0x316DFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DF40", Offset = "0xC1DF40")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public double MaximumArea
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x316DFF4", Offset = "0x316DFF4", VA = "0x316DFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DF7C", Offset = "0xC1DF7C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x316E024", Offset = "0x316E024", VA = "0x316E024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DFB8", Offset = "0xC1DFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x316E05C", Offset = "0x316E05C", VA = "0x316E05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1DFF4", Offset = "0xC1DFF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x316E08C", Offset = "0x316E08C", VA = "0x316E08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E030", Offset = "0xC1E030")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public bool VariableArea
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x316E0C4", Offset = "0x316E0C4", VA = "0x316E0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E06C", Offset = "0xC1E06C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x316E108", Offset = "0x316E108", VA = "0x316E108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E0A8", Offset = "0xC1E0A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public int SteinerPoints
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x316E154", Offset = "0x316E154", VA = "0x316E154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E0E4", Offset = "0xC1E0E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x316E184", Offset = "0x316E184", VA = "0x316E184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E120", Offset = "0xC1E120")]
			set
			{
			}
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x316E1BC", Offset = "0x316E1BC", VA = "0x316E1BC")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x20002CF")]
	public class EdgeIterator : IEnumerator<Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<Triangle> triangles;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Otri tri;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43A0")]
		private Otri neighbor;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Osub sub;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F444")]
		private Edge current;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x170002DE")]
		public Edge Current
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x3163D80", Offset = "0x3163D80", VA = "0x3163D80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x3163E50", Offset = "0x3163E50", VA = "0x3163E50", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x3163C20", Offset = "0x3163C20", VA = "0x3163C20")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x3163DB0", Offset = "0x3163DB0", VA = "0x3163DB0", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x3163E80", Offset = "0x3163E80", VA = "0x3163E80", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x3164300", Offset = "0x3164300", VA = "0x3164300", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class RegionIterator
	{
		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFAD8", Offset = "0xBDFAD8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43A8")]
			public Triangle triangle;

			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0x31643A0", Offset = "0x31643A0", VA = "0x31643A0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0x3165160", Offset = "0x3165160", VA = "0x3165160")]
			internal void <Process>b__0(Triangle tri)
			{
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB14", Offset = "0xBDFB14")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int boundary;

			[Token(Token = "0x6002DA2")]
			[Address(RVA = "0x31648CC", Offset = "0x31648CC", VA = "0x31648CC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002DA3")]
			[Address(RVA = "0x31651FC", Offset = "0x31651FC", VA = "0x31651FC")]
			internal bool <Process>b__1(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB50", Offset = "0xBDFB50")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F44C")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<SubSegment, bool> <>9__3_0;

			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0x31650A4", Offset = "0x31650A4", VA = "0x31650A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0x31650D4", Offset = "0x31650D4", VA = "0x31650D4")]
			internal bool <Process>b__3_0(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Triangle> region;

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x3158210", Offset = "0x3158210", VA = "0x3158210")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x31582CC", Offset = "0x31582CC", VA = "0x31582CC")]
		public void Process(Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x31643D0", Offset = "0x31643D0", VA = "0x31643D0")]
		public void Process(Triangle triangle, Action<Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x31648FC", Offset = "0x31648FC", VA = "0x31648FC")]
		private void ProcessRegion(Action<Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class VertexCirculator
	{
		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB8C", Offset = "0xBDFB8C")]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43B0")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F454")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4002A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4002A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700050A")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x6002DAB")]
				[Address(RVA = "0x3166C34", Offset = "0x3166C34", VA = "0x3166C34", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DAD")]
				[Address(RVA = "0x3166D04", Offset = "0x3166D04", VA = "0x3166D04", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DA7")]
			[Address(RVA = "0x3165458", Offset = "0x3165458", VA = "0x3165458")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0x3166578", Offset = "0x3166578", VA = "0x3166578", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0x31667A4", Offset = "0x31667A4", VA = "0x31667A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0x3166710", Offset = "0x3166710", VA = "0x3166710")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0x3166C64", Offset = "0x3166C64", VA = "0x3166C64", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0x3166D34", Offset = "0x3166D34", VA = "0x3166D34", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0x3166EB8", Offset = "0x3166EB8", VA = "0x3166EB8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBC8", Offset = "0xBDFBC8")]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43B8")]
			private int <>1__state;

			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private ITriangle <>2__current;

			[Token(Token = "0x4002A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F45C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43C0")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700050C")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x6002DB4")]
				[Address(RVA = "0x31662BC", Offset = "0x31662BC", VA = "0x31662BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DB6")]
				[Address(RVA = "0x316638C", Offset = "0x316638C", VA = "0x316638C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0x31655A0", Offset = "0x31655A0", VA = "0x31655A0")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0x3165BE4", Offset = "0x3165BE4", VA = "0x3165BE4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0x3165E10", Offset = "0x3165E10", VA = "0x3165E10", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0x3165D7C", Offset = "0x3165D7C", VA = "0x3165D7C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002DB5")]
			[Address(RVA = "0x31662EC", Offset = "0x31662EC", VA = "0x31662EC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0x31663BC", Offset = "0x31663BC", VA = "0x31663BC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0x3166540", Offset = "0x3166540", VA = "0x3166540", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Otri> cache;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x316529C", Offset = "0x316529C", VA = "0x316529C")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x3165374", Offset = "0x3165374", VA = "0x3165374")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1E15C", Offset = "0xC1E15C")]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x31654BC", Offset = "0x31654BC", VA = "0x31654BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1E20C", Offset = "0xC1E20C")]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x3165604", Offset = "0x3165604", VA = "0x3165604")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x20002D2")]
	internal class BadSubseg
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Osub subseg;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9A4")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x316095C", Offset = "0x316095C", VA = "0x316095C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x31609AC", Offset = "0x31609AC", VA = "0x31609AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x3160A98", Offset = "0x3160A98", VA = "0x3160A98")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	internal class BadTriQueue
	{
		[Token(Token = "0x40013F3")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C7")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int[] nextnonemptyq;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F464")]
		private int firstnonemptyq;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x170002E0")]
		public int Count
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x3160AC8", Offset = "0x3160AC8", VA = "0x3160AC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x3160AF8", Offset = "0x3160AF8", VA = "0x3160AF8")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x3160C18", Offset = "0x3160C18", VA = "0x3160C18")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x31612A4", Offset = "0x31612A4", VA = "0x31612A4")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x31614B8", Offset = "0x31614B8", VA = "0x31614B8")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	internal class BadTriangle
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Otri poortri;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double key;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43CF")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F46C")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BadTriangle next;

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x31616C8", Offset = "0x31616C8", VA = "0x31616C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x3161488", Offset = "0x3161488", VA = "0x3161488")]
		public BadTriangle()
		{
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x20002D5")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPredicates predicates;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool UseDwyer;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43D7")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Mesh mesh;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x29F993C", Offset = "0x29F993C", VA = "0x29F993C", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x29FBEF0", Offset = "0x29FBEF0", VA = "0x29FBEF0")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x29FA4C0", Offset = "0x29FA4C0", VA = "0x29FA4C0")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x29FBA04", Offset = "0x29FBA04", VA = "0x29FBA04")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x29FD814", Offset = "0x29FD814", VA = "0x29FD814")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F474")]
		private Mesh mesh;

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x29FD858", Offset = "0x29FD858", VA = "0x29FD858", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x29FDF54", Offset = "0x29FDF54", VA = "0x29FDF54")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x29FE5BC", Offset = "0x29FE5BC", VA = "0x29FE5BC")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x29FED2C", Offset = "0x29FED2C", VA = "0x29FED2C")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x2000623")]
		private class SweepEvent
		{
			[Token(Token = "0x4002A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double xkey;

			[Token(Token = "0x4002A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double ykey;

			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43E7")]
			public Otri otriEvent;

			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int heapposition;

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0x3154698", Offset = "0x3154698", VA = "0x3154698")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x2000624")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F484")]
			public SweepEvent evt;

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0x31546C8", Offset = "0x31546C8", VA = "0x31546C8")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x2000625")]
		private class SplayNode
		{
			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Otri keyedge;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SplayNode lchild;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x43EF")]
			public SplayNode rchild;

			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0x3154668", Offset = "0x3154668", VA = "0x3154668")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SAMPLERATE;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPredicates predicates;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43DF")]
		private Mesh mesh;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private double xminextreme;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F47C")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x29FED5C", Offset = "0x29FED5C", VA = "0x29FED5C")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x29FEEEC", Offset = "0x29FEEEC", VA = "0x29FEEEC", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x2A028FC", Offset = "0x2A028FC", VA = "0x2A028FC")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x2A03278", Offset = "0x2A03278", VA = "0x2A03278")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x2A012DC", Offset = "0x2A012DC", VA = "0x2A012DC")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x2A00DE8", Offset = "0x2A00DE8", VA = "0x2A00DE8")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x2A03B3C", Offset = "0x2A03B3C", VA = "0x2A03B3C")]
		private SplayNode Splay(SplayNode splaytree, Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x2A02068", Offset = "0x2A02068", VA = "0x2A02068")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x2A01E70", Offset = "0x2A01E70", VA = "0x2A01E70")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x2A01974", Offset = "0x2A01974", VA = "0x2A01974")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x2A04780", Offset = "0x2A04780", VA = "0x2A04780")]
		private bool RightOfHyperbola(ref Otri fronttri, Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2A02374", Offset = "0x2A02374", VA = "0x2A02374")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x2A017A0", Offset = "0x2A017A0", VA = "0x2A017A0")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x2A02D94", Offset = "0x2A02D94", VA = "0x2A02D94")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x2A04D84", Offset = "0x2A04D84", VA = "0x2A04D84")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x20002D8")]
	public enum LogLevel
	{
		[Token(Token = "0x400140B")]
		Info,
		[Token(Token = "0x400140C")]
		Warning,
		[Token(Token = "0x400140D")]
		Error
	}
	[Token(Token = "0x20002D9")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x170002E1")]
		IList<T> Data
		{
			[Token(Token = "0x6001499")]
			get;
		}

		[Token(Token = "0x170002E2")]
		LogLevel Level
		{
			[Token(Token = "0x600149A")]
			get;
		}

		[Token(Token = "0x6001494")]
		void Add(T item);

		[Token(Token = "0x6001495")]
		void Clear();

		[Token(Token = "0x6001496")]
		void Info(string message);

		[Token(Token = "0x6001497")]
		void Error(string message, string info);

		[Token(Token = "0x6001498")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x20002DA")]
	public interface ILogItem
	{
		[Token(Token = "0x170002E3")]
		DateTime Time
		{
			[Token(Token = "0x600149B")]
			get;
		}

		[Token(Token = "0x170002E4")]
		LogLevel Level
		{
			[Token(Token = "0x600149C")]
			get;
		}

		[Token(Token = "0x170002E5")]
		string Message
		{
			[Token(Token = "0x600149D")]
			get;
		}

		[Token(Token = "0x170002E6")]
		string Info
		{
			[Token(Token = "0x600149E")]
			get;
		}
	}
	[Token(Token = "0x20002DB")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DateTime time;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43F7")]
		private LogLevel level;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string message;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F494")]
		private string info;

		[Token(Token = "0x170002E7")]
		public DateTime Time
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x29EE2CC", Offset = "0x29EE2CC", VA = "0x29EE2CC", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170002E8")]
		public LogLevel Level
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x29EE308", Offset = "0x29EE308", VA = "0x29EE308", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x170002E9")]
		public string Message
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x29EE338", Offset = "0x29EE338", VA = "0x29EE338", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public string Info
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x29EE368", Offset = "0x29EE368", VA = "0x29EE368", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x29EDE60", Offset = "0x29EDE60", VA = "0x29EDE60")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x29EDFF8", Offset = "0x29EDFF8", VA = "0x29EDFF8")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x20002DC")]
	internal class DebugWriter
	{
		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int iteration;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string session;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43FF")]
		private StreamWriter stream;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string tmpFile;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F49C")]
		private int[] vertices;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int triangles;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x170002EB")]
		public static DebugWriter Session
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x29DAD34", Offset = "0x29DAD34", VA = "0x29DAD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x29DABAC", Offset = "0x29DABAC", VA = "0x29DABAC")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x29DAD04", Offset = "0x29DAD04", VA = "0x29DAD04")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x29DAE1C", Offset = "0x29DAE1C", VA = "0x29DAE1C")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x29DAFFC", Offset = "0x29DAFFC", VA = "0x29DAFFC")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x29DCB20", Offset = "0x29DCB20", VA = "0x29DCB20")]
		public void Finish()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x29DCBC8", Offset = "0x29DCBC8", VA = "0x29DCBC8")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x29DD1E8", Offset = "0x29DD1E8", VA = "0x29DD1E8")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x29DB108", Offset = "0x29DB108", VA = "0x29DB108")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x29DD31C", Offset = "0x29DD31C", VA = "0x29DD31C")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x29DD844", Offset = "0x29DD844", VA = "0x29DD844")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public static class FileProcessor
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x29DDDA4", Offset = "0x29DDDA4", VA = "0x29DDDA4")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x29DDEF4", Offset = "0x29DDEF4", VA = "0x29DDEF4")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x29DE00C", Offset = "0x29DE00C", VA = "0x29DE00C")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x29DE4F4", Offset = "0x29DE4F4", VA = "0x29DE4F4")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x29DE9D0", Offset = "0x29DE9D0", VA = "0x29DE9D0")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x29DEE98", Offset = "0x29DEE98", VA = "0x29DEE98")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x29DF374", Offset = "0x29DF374", VA = "0x29DF374")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public interface IFileFormat
	{
		[Token(Token = "0x60014B7")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x20002DF")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x60014B8")]
		IMesh Import(string filename);

		[Token(Token = "0x60014B9")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x60014BA")]
		void Write(IMesh mesh, System.IO.Stream stream);
	}
	[Token(Token = "0x20002E0")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x60014BB")]
		IPolygon Read(string filename);

		[Token(Token = "0x60014BC")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x60014BD")]
		void Write(IPolygon polygon, System.IO.Stream stream);
	}
	[Token(Token = "0x20002E1")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4407")]
		internal int[] vertices;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int label;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4A4")]
		internal double area;

		[Token(Token = "0x170002EC")]
		public int ID
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x29DF984", Offset = "0x29DF984", VA = "0x29DF984", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x29DF9A0", Offset = "0x29DF9A0", VA = "0x29DF9A0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public int Label
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x29DF9B8", Offset = "0x29DF9B8", VA = "0x29DF9B8", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x29DF9E8", Offset = "0x29DF9E8", VA = "0x29DF9E8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public double Area
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x29DFA20", Offset = "0x29DFA20", VA = "0x29DFA20", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x29DFA50", Offset = "0x29DFA50", VA = "0x29DFA50", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x29DF83C", Offset = "0x29DF83C", VA = "0x29DF83C")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x29DFA88", Offset = "0x29DFA88", VA = "0x29DFA88", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x29DFAA8", Offset = "0x29DFAA8", VA = "0x29DFAA8", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x29DFB0C", Offset = "0x29DFB0C", VA = "0x29DFB0C", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x29DFB2C", Offset = "0x29DFB2C", VA = "0x29DFB2C", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x29DFB4C", Offset = "0x29DFB4C", VA = "0x29DFB4C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E2")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x29DFB6C", Offset = "0x29DFB6C", VA = "0x29DFB6C", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x29DFD90", Offset = "0x29DFD90", VA = "0x29DFD90", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x29E0328", Offset = "0x29E0328", VA = "0x29E0328", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x29E10F0", Offset = "0x29E10F0", VA = "0x29E10F0", Slot = "10")]
		public void Write(IMesh mesh, System.IO.Stream stream)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x29E1198", Offset = "0x29E1198", VA = "0x29E1198", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x29E1508", Offset = "0x29E1508", VA = "0x29E1508", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x29E3034", Offset = "0x29E3034", VA = "0x29E3034", Slot = "6")]
		public void Write(IPolygon polygon, System.IO.Stream stream)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x29DDEC4", Offset = "0x29DDEC4", VA = "0x29DDEC4")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class TriangleReader
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int startIndex;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x29E30DC", Offset = "0x29E30DC", VA = "0x29E30DC")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x29E3194", Offset = "0x29E3194", VA = "0x29E3194")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x29E3560", Offset = "0x29E3560", VA = "0x29E3560")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x29E392C", Offset = "0x29E392C", VA = "0x29E392C")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x29E0120", Offset = "0x29E0120", VA = "0x29E0120")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x29E3C0C", Offset = "0x29E3C0C", VA = "0x29E3C0C")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x29E1460", Offset = "0x29E1460", VA = "0x29E1460")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x29E3C68", Offset = "0x29E3C68", VA = "0x29E3C68")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x29E14B0", Offset = "0x29E14B0", VA = "0x29E14B0")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x29E7568", Offset = "0x29E7568", VA = "0x29E7568")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x29E52BC", Offset = "0x29E52BC", VA = "0x29E52BC")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x29E3BBC", Offset = "0x29E3BBC", VA = "0x29E3BBC")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x29E4754", Offset = "0x29E4754", VA = "0x29E4754")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x29E75DC", Offset = "0x29E75DC", VA = "0x29E75DC")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x29E7E28", Offset = "0x29E7E28", VA = "0x29E7E28")]
		public List<Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x29E00F0", Offset = "0x29E00F0", VA = "0x29E00F0")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class TriangleWriter
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x29E8AE4", Offset = "0x29E8AE4", VA = "0x29E8AE4")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x29E8C58", Offset = "0x29E8C58", VA = "0x29E8C58")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x29E8EAC", Offset = "0x29E8EAC", VA = "0x29E8EAC")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x29E9928", Offset = "0x29E9928", VA = "0x29E9928")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x29E05B8", Offset = "0x29E05B8", VA = "0x29E05B8")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x29E15CC", Offset = "0x29E15CC", VA = "0x29E15CC")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x29E0560", Offset = "0x29E0560", VA = "0x29E0560")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x29E9F78", Offset = "0x29E9F78", VA = "0x29E9F78")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x29EB974", Offset = "0x29EB974", VA = "0x29EB974")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x29ECDF8", Offset = "0x29ECDF8", VA = "0x29ECDF8")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x29E0530", Offset = "0x29E0530", VA = "0x29E0530")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x20002E5")]
	public class Contour
	{
		[Serializable]
		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC04", Offset = "0xBDFC04")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Converter<Vertex, Point> <>9__12_0;

			[Token(Token = "0x6002DBD")]
			[Address(RVA = "0x29D6C98", Offset = "0x29D6C98", VA = "0x29D6C98")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DBE")]
			[Address(RVA = "0x29D6CC8", Offset = "0x29D6CC8", VA = "0x29D6CC8")]
			internal Point <FindPointInPolygon>b__12_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440F")]
		private int marker;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool convex;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBC2C", Offset = "0xBFBC2C")]
		private List<Vertex> <Points>k__BackingField;

		[Token(Token = "0x170002EF")]
		public List<Vertex> Points
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x29D4870", Offset = "0x29D4870", VA = "0x29D4870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E2BC", Offset = "0xC1E2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x29D48A0", Offset = "0x29D48A0", VA = "0x29D48A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E2F8", Offset = "0xC1E2F8")]
			set
			{
			}
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x29D48D8", Offset = "0x29D48D8", VA = "0x29D48D8")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x29D49B8", Offset = "0x29D49B8", VA = "0x29D49B8")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x29D4928", Offset = "0x29D4928", VA = "0x29D4928")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x29D4C08", Offset = "0x29D4C08", VA = "0x29D4C08")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x29D4FC0", Offset = "0x29D4FC0", VA = "0x29D4FC0")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x29D4A10", Offset = "0x29D4A10", VA = "0x29D4A10")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x29D53C0", Offset = "0x29D53C0", VA = "0x29D53C0")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x29D6430", Offset = "0x29D6430", VA = "0x29D6430")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E6")]
	public class Edge : IEdge
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBC68", Offset = "0xBFBC68")]
		private int <P0>k__BackingField;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBCA4", Offset = "0xBFBCA4")]
		private int <P1>k__BackingField;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBCE0", Offset = "0xBFBCE0")]
		private int <Label>k__BackingField;

		[Token(Token = "0x170002F0")]
		public int P0
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x29D6CEC", Offset = "0x29D6CEC", VA = "0x29D6CEC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E334", Offset = "0xC1E334")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x29D6D1C", Offset = "0x29D6D1C", VA = "0x29D6D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E370", Offset = "0xC1E370")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public int P1
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x29D6D54", Offset = "0x29D6D54", VA = "0x29D6D54", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E3AC", Offset = "0xC1E3AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x29D6D84", Offset = "0x29D6D84", VA = "0x29D6D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E3E8", Offset = "0xC1E3E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public int Label
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x29D6DBC", Offset = "0x29D6DBC", VA = "0x29D6DBC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E424", Offset = "0xC1E424")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x29D6DEC", Offset = "0x29D6DEC", VA = "0x29D6DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E460", Offset = "0xC1E460")]
			private set
			{
			}
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x29D6E24", Offset = "0x29D6E24", VA = "0x29D6E24")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x29D6E7C", Offset = "0x29D6E7C", VA = "0x29D6E7C")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6001501")]
		[Address(RVA = "0x29D6F04", Offset = "0x29D6F04", VA = "0x29D6F04")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x29D6FD4", Offset = "0x29D6FD4", VA = "0x29D6FD4")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x29D70A8", Offset = "0x29D70A8", VA = "0x29D70A8")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x29D717C", Offset = "0x29D717C", VA = "0x29D717C")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x29D7254", Offset = "0x29D7254", VA = "0x29D7254")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x29D733C", Offset = "0x29D733C", VA = "0x29D733C")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x29D73E0", Offset = "0x29D73E0", VA = "0x29D73E0")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x29D7B08", Offset = "0x29D7B08", VA = "0x29D7B08")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x29D7A24", Offset = "0x29D7A24", VA = "0x29D7A24")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002E8")]
	public interface IEdge
	{
		[Token(Token = "0x170002F3")]
		int P0
		{
			[Token(Token = "0x600150A")]
			get;
		}

		[Token(Token = "0x170002F4")]
		int P1
		{
			[Token(Token = "0x600150B")]
			get;
		}

		[Token(Token = "0x170002F5")]
		int Label
		{
			[Token(Token = "0x600150C")]
			get;
		}
	}
	[Token(Token = "0x20002E9")]
	public interface IPolygon
	{
		[Token(Token = "0x170002F6")]
		List<Vertex> Points
		{
			[Token(Token = "0x600150D")]
			get;
		}

		[Token(Token = "0x170002F7")]
		List<ISegment> Segments
		{
			[Token(Token = "0x600150E")]
			get;
		}

		[Token(Token = "0x170002F8")]
		List<Point> Holes
		{
			[Token(Token = "0x600150F")]
			get;
		}

		[Token(Token = "0x170002F9")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6001510")]
			get;
		}

		[Token(Token = "0x170002FA")]
		bool HasPointMarkers
		{
			[Token(Token = "0x6001511")]
			get;
			[Token(Token = "0x6001512")]
			set;
		}

		[Token(Token = "0x170002FB")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x6001513")]
			get;
			[Token(Token = "0x6001514")]
			set;
		}

		[Token(Token = "0x6001515")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1E67C", Offset = "0xC1E67C")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x6001516")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1E6E0", Offset = "0xC1E6E0")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x6001517")]
		Rectangle Bounds();

		[Token(Token = "0x6001518")]
		void Add(Vertex vertex);

		[Token(Token = "0x6001519")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x600151A")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x600151B")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x600151C")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x20002EA")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x600151D")]
		Vertex GetVertex(int index);

		[Token(Token = "0x600151E")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x20002EB")]
	public interface ITriangle
	{
		[Token(Token = "0x170002FC")]
		int ID
		{
			[Token(Token = "0x600151F")]
			get;
			[Token(Token = "0x6001520")]
			set;
		}

		[Token(Token = "0x170002FD")]
		int Label
		{
			[Token(Token = "0x6001521")]
			get;
			[Token(Token = "0x6001522")]
			set;
		}

		[Token(Token = "0x170002FE")]
		double Area
		{
			[Token(Token = "0x6001523")]
			get;
			[Token(Token = "0x6001524")]
			set;
		}

		[Token(Token = "0x6001525")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6001526")]
		int GetVertexID(int index);

		[Token(Token = "0x6001527")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x6001528")]
		int GetNeighborID(int index);

		[Token(Token = "0x6001529")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x20002EC")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9AC")]
		internal int id;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int label;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double x;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double y;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x441E")]
		internal double z;

		[Token(Token = "0x170002FF")]
		public int ID
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x29D7EF0", Offset = "0x29D7EF0", VA = "0x29D7EF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x29D7F20", Offset = "0x29D7F20", VA = "0x29D7F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public double X
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x29D7F58", Offset = "0x29D7F58", VA = "0x29D7F58")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x29D7F88", Offset = "0x29D7F88", VA = "0x29D7F88")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public double Y
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x29D7FC0", Offset = "0x29D7FC0", VA = "0x29D7FC0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x29D7FF0", Offset = "0x29D7FF0", VA = "0x29D7FF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public double Z
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x29D8028", Offset = "0x29D8028", VA = "0x29D8028")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x29D8058", Offset = "0x29D8058", VA = "0x29D8058")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public int Label
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x29D8090", Offset = "0x29D8090", VA = "0x29D8090")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x29D80C0", Offset = "0x29D80C0", VA = "0x29D80C0")]
			set
			{
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x29D6358", Offset = "0x29D6358", VA = "0x29D6358")]
		public Point()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x29D5368", Offset = "0x29D5368", VA = "0x29D5368")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x29D7E78", Offset = "0x29D7E78", VA = "0x29D7E78")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x29D5E3C", Offset = "0x29D5E3C", VA = "0x29D5E3C")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x29D8234", Offset = "0x29D8234", VA = "0x29D8234")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x29D82D0", Offset = "0x29D82D0", VA = "0x29D82D0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x29D80F8", Offset = "0x29D80F8", VA = "0x29D80F8", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x29D84B8", Offset = "0x29D84B8", VA = "0x29D84B8", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x29D866C", Offset = "0x29D866C", VA = "0x29D866C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x29D8700", Offset = "0x29D8700", VA = "0x29D8700", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002ED")]
	public class Polygon : IPolygon
	{
		[Serializable]
		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC40", Offset = "0xBDFC40")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4BC")]
			public static Converter<Vertex, Point> <>9__27_0;

			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0x29D9890", Offset = "0x29D9890", VA = "0x29D9890")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0x29D98C0", Offset = "0x29D98C0", VA = "0x29D98C0")]
			internal Point <Bounds>b__27_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Vertex> points;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4B4")]
		private List<Point> holes;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RegionPointer> regions;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ISegment> segments;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBD1C", Offset = "0xBFBD1C")]
		private bool <HasPointMarkers>k__BackingField;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBD58", Offset = "0xBFBD58")]
		private bool <HasSegmentMarkers>k__BackingField;

		[Token(Token = "0x17000304")]
		public List<Vertex> Points
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x29D8800", Offset = "0x29D8800", VA = "0x29D8800", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public List<Point> Holes
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x29D8830", Offset = "0x29D8830", VA = "0x29D8830", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x29D8860", Offset = "0x29D8860", VA = "0x29D8860", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x29D8890", Offset = "0x29D8890", VA = "0x29D8890", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x29D88C0", Offset = "0x29D88C0", VA = "0x29D88C0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E744", Offset = "0xC1E744")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x29D8904", Offset = "0x29D8904", VA = "0x29D8904", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E780", Offset = "0xC1E780")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x29D8950", Offset = "0x29D8950", VA = "0x29D8950", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E7BC", Offset = "0xC1E7BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x29D8994", Offset = "0x29D8994", VA = "0x29D8994", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E7F8", Offset = "0xC1E7F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public int Count
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x29D89E0", Offset = "0x29D89E0", VA = "0x29D89E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x29D8A78", Offset = "0x29D8A78", VA = "0x29D8A78")]
		public Polygon()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x29D8CA0", Offset = "0x29D8CA0", VA = "0x29D8CA0")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x29D8AB8", Offset = "0x29D8AB8", VA = "0x29D8AB8")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x29D8CE4", Offset = "0x29D8CE4", VA = "0x29D8CE4", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1E834", Offset = "0xC1E834")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x29D8F90", Offset = "0x29D8F90", VA = "0x29D8F90", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1E898", Offset = "0xC1E898")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x29D91B4", Offset = "0x29D91B4", VA = "0x29D91B4", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x29D9494", Offset = "0x29D9494", VA = "0x29D9494", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x29D9534", Offset = "0x29D9534", VA = "0x29D9534", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x29D96CC", Offset = "0x29D96CC", VA = "0x29D96CC", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x29D8DEC", Offset = "0x29D8DEC", VA = "0x29D8DEC", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x29D9060", Offset = "0x29D9060", VA = "0x29D9060", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class Rectangle
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double xmin;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double ymin;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double xmax;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x442E")]
		private double ymax;

		[Token(Token = "0x1700030B")]
		public double Left
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x29D9A6C", Offset = "0x29D9A6C", VA = "0x29D9A6C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700030C")]
		public double Right
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x29D9A9C", Offset = "0x29D9A9C", VA = "0x29D9A9C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700030D")]
		public double Bottom
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x29D9ACC", Offset = "0x29D9ACC", VA = "0x29D9ACC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700030E")]
		public double Top
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x29D9AFC", Offset = "0x29D9AFC", VA = "0x29D9AFC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700030F")]
		public double Width
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x29D9B2C", Offset = "0x29D9B2C", VA = "0x29D9B2C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000310")]
		public double Height
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x29D9B70", Offset = "0x29D9B70", VA = "0x29D9B70")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x29D5F58", Offset = "0x29D5F58", VA = "0x29D5F58")]
		public Rectangle()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x29D98E4", Offset = "0x29D98E4", VA = "0x29D98E4")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x29D99AC", Offset = "0x29D99AC", VA = "0x29D99AC")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x29D9BB4", Offset = "0x29D9BB4", VA = "0x29D9BB4")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x29D7C78", Offset = "0x29D7C78", VA = "0x29D7C78")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x29D6008", Offset = "0x29D6008", VA = "0x29D6008")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x29D9C9C", Offset = "0x29D9C9C", VA = "0x29D9C9C")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x29D9E9C", Offset = "0x29D9E9C", VA = "0x29D9E9C")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x29D639C", Offset = "0x29D639C", VA = "0x29D639C")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x29DA004", Offset = "0x29DA004", VA = "0x29DA004")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x29DA1D0", Offset = "0x29DA1D0", VA = "0x29DA1D0")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EF")]
	public class RegionPointer
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Point point;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4C4")]
		internal int id;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double area;

		[Token(Token = "0x17000311")]
		public double Area
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x29DA37C", Offset = "0x29DA37C", VA = "0x29DA37C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x29DA3AC", Offset = "0x29DA3AC", VA = "0x29DA3AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x29DA4A8", Offset = "0x29DA4A8", VA = "0x29DA4A8")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x29DA50C", Offset = "0x29DA50C", VA = "0x29DA50C")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vertex v0;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vertex v1;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4436")]
		private int label;

		[Token(Token = "0x17000312")]
		public int Label
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x29DA604", Offset = "0x29DA604", VA = "0x29DA604", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x29DA634", Offset = "0x29DA634", VA = "0x29DA634")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public int P0
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x29DA66C", Offset = "0x29DA66C", VA = "0x29DA66C", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000314")]
		public int P1
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x29DA6B0", Offset = "0x29DA6B0", VA = "0x29DA6B0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x29DA6F4", Offset = "0x29DA6F4", VA = "0x29DA6F4")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x29D4F48", Offset = "0x29D4F48", VA = "0x29D4F48")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x29DA74C", Offset = "0x29DA74C", VA = "0x29DA74C", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x29DA868", Offset = "0x29DA868", VA = "0x29DA868", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD933C", Offset = "0xBD933C")]
	public class Vertex : Point
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal int hash;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4CC")]
		internal VertexType type;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Otri tri;

		[Token(Token = "0x17000315")]
		public VertexType Type
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x29DAA1C", Offset = "0x29DAA1C", VA = "0x29DAA1C")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x17000316")]
		public double Item
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x29DAA4C", Offset = "0x29DAA4C", VA = "0x29DAA4C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x29DA90C", Offset = "0x29DA90C", VA = "0x29DA90C")]
		public Vertex()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x29DA9C4", Offset = "0x29DA9C4", VA = "0x29DA9C4")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x29DA950", Offset = "0x29DA950", VA = "0x29DA950")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x29DAB7C", Offset = "0x29DAB7C", VA = "0x29DAB7C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace MirzaBeig.Shaders.ImageEffects
{
	[Serializable]
	[Token(Token = "0x20002F2")]
	[ExecuteInEditMode]
	public class Sharpen : IEBase
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFBD94", Offset = "0xBFBD94")]
		public float strength;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFBDE0", Offset = "0xBFBDE0")]
		public float edgeMult;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x19D15B0", Offset = "0x19D15B0", VA = "0x19D15B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x19D1648", Offset = "0x19D1648", VA = "0x19D1648")]
		private void Start()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x19D165C", Offset = "0x19D165C", VA = "0x19D165C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x19D1670", Offset = "0x19D1670", VA = "0x19D1670")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x19D1794", Offset = "0x19D1794", VA = "0x19D1794")]
		public Sharpen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F3")]
	[ExecuteInEditMode]
	public class IEBase : MonoBehaviour
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x443E")]
		private Material _material;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFBE28", Offset = "0xBFBE28")]
		private Shader <shader>k__BackingField;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4D4")]
		private Camera _camera;

		[Token(Token = "0x17000317")]
		protected Material material
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x19D0DF4", Offset = "0x19D0DF4", VA = "0x19D0DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		protected Shader shader
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x19D0F8C", Offset = "0x19D0F8C", VA = "0x19D0F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E8FC", Offset = "0xC1E8FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x19D0FBC", Offset = "0x19D0FBC", VA = "0x19D0FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E938", Offset = "0xC1E938")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		protected Camera camera
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x19D0FF4", Offset = "0x19D0FF4", VA = "0x19D0FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x19D1140", Offset = "0x19D1140", VA = "0x19D1140")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x19D1154", Offset = "0x19D1154", VA = "0x19D1154")]
		private void Start()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x19D1168", Offset = "0x19D1168", VA = "0x19D1168")]
		private void Update()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x19D117C", Offset = "0x19D117C", VA = "0x19D117C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x19D1198", Offset = "0x19D1198", VA = "0x19D1198")]
		protected void blit(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x19D12B0", Offset = "0x19D12B0", VA = "0x19D12B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x19D143C", Offset = "0x19D143C", VA = "0x19D143C")]
		public IEBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F4")]
	[ExecuteInEditMode]
	public class MirzaPostProcessing : MonoBehaviour
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material material;

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x19D146C", Offset = "0x19D146C", VA = "0x19D146C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x19D1580", Offset = "0x19D1580", VA = "0x19D1580")]
		public MirzaPostProcessing()
		{
		}
	}
}
namespace MirzaBeig.Scripting.Effects
{
	[Token(Token = "0x20002F5")]
	public class AttractionParticleAffector : ParticleAffector
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFBE64", Offset = "0xBFBE64")]
		public float arrivalRadius;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float arrivedRadius;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4446")]
		private float arrivalRadiusSqr;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float arrivedRadiusSqr;

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x258A8D4", Offset = "0x258A8D4", VA = "0x258A8D4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x258A904", Offset = "0x258A904", VA = "0x258A904", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x258A934", Offset = "0x258A934", VA = "0x258A934", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x258A964", Offset = "0x258A964", VA = "0x258A964", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x258AA68", Offset = "0x258AA68", VA = "0x258AA68", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x258AD80", Offset = "0x258AD80", VA = "0x258AD80", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x258B070", Offset = "0x258B070", VA = "0x258B070")]
		public AttractionParticleAffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public static class Noise
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4DC")]
		private static float F3;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float G3;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] perm;

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x258C380", Offset = "0x258C380", VA = "0x258C380")]
		private static float smooth(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x258C41C", Offset = "0x258C41C", VA = "0x258C41C")]
		private static float fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x258C4F8", Offset = "0x258C4F8", VA = "0x258C4F8")]
		private static int floor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x258C580", Offset = "0x258C580", VA = "0x258C580")]
		private static float lerp(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x258C614", Offset = "0x258C614", VA = "0x258C614")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x258CAD0", Offset = "0x258CAD0", VA = "0x258CAD0")]
		public static float perlin(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x25903D0", Offset = "0x25903D0", VA = "0x25903D0")]
		public static float simplex(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x2592D28", Offset = "0x2592D28", VA = "0x2592D28")]
		public static float octavePerlin(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x259311C", Offset = "0x259311C", VA = "0x259311C")]
		public static float octaveSimplex(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x2593510", Offset = "0x2593510", VA = "0x2593510")]
		public static float perlinUnoptimized(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x25943C0", Offset = "0x25943C0", VA = "0x25943C0")]
		public static float simplexUnoptimized(float x, float y, float z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002F7")]
	public abstract class ParticleAffector : MonoBehaviour
	{
		[Token(Token = "0x2000628")]
		protected struct GetForceParameters
		{
			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4456")]
			public float distanceToAffectorCenterSqr;

			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public Vector3 scaledDirectionToAffectorCenter;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4EC")]
			public Vector3 particlePosition;
		}

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFBEC8", Offset = "0xBFBEC8")]
		public float radius;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444E")]
		public float force;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 offset;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4E4")]
		private float _radius;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float radiusSqr;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float forceDeltaTime;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 transformPosition;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4456")]
		private float[] particleSystemExternalForcesMultipliers;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve scaleForceByDistance;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4EC")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<ParticleSystem> _particleSystems;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int particleSystemsCount;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ParticleSystem> particleSystems;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x445E")]
		private ParticleSystem.Particle[][] particleSystemParticles;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ParticleSystem.MainModule[] particleSystemMainModules;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F4F4")]
		private Renderer[] particleSystemRenderers;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ParticleSystem currentParticleSystem;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected GetForceParameters parameters;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alwaysUpdate;

		[Token(Token = "0x1700031A")]
		public float scaledRadius
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x19BE088", Offset = "0x19BE088", VA = "0x19BE088")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x19BE100", Offset = "0x19BE100", VA = "0x19BE100", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x19BE114", Offset = "0x19BE114", VA = "0x19BE114", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x19BE1A0", Offset = "0x19BE1A0", VA = "0x19BE1A0", Slot = "6")]
		protected virtual void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x19BE1B4", Offset = "0x19BE1B4", VA = "0x19BE1B4", Slot = "7")]
		protected virtual Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x19BE270", Offset = "0x19BE270", VA = "0x19BE270", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x19BE284", Offset = "0x19BE284", VA = "0x19BE284")]
		public void AddParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x19BE324", Offset = "0x19BE324", VA = "0x19BE324")]
		public void RemoveParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x19BE3C4", Offset = "0x19BE3C4", VA = "0x19BE3C4", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x19C0DB4", Offset = "0x19C0DB4", VA = "0x19C0DB4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x19C0DC8", Offset = "0x19C0DC8", VA = "0x19C0DC8", Slot = "10")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x19C0F70", Offset = "0x19C0F70", VA = "0x19C0F70")]
		protected ParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class TurbulenceParticleAffector : ParticleAffector
	{
		[Token(Token = "0x2000629")]
		public enum NoiseType
		{
			[Token(Token = "0x4002AAC")]
			PseudoPerlin,
			[Token(Token = "0x4002AAD")]
			Perlin,
			[Token(Token = "0x4002AAE")]
			Simplex,
			[Token(Token = "0x4002AAF")]
			OctavePerlin,
			[Token(Token = "0x4002AB0")]
			OctaveSimplex
		}

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFBF2C", Offset = "0xBFBF2C")]
		public float speed;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFBF90", Offset = "0xBFBF90")]
		public float frequency;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NoiseType noiseType;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x446E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFBFD8", Offset = "0xBFBFD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFBFD8", Offset = "0xBFBFD8")]
		public int octaves;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC078", Offset = "0xBFC078")]
		public float lacunarity;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC0C0", Offset = "0xBFC0C0")]
		public float persistence;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float time;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float randomX;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float randomY;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4475")]
		private float randomZ;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float offsetX;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F504")]
		private float offsetY;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offsetZ;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x19CD4D4", Offset = "0x19CD4D4", VA = "0x19CD4D4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x19CD504", Offset = "0x19CD504", VA = "0x19CD504", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x19CD5B0", Offset = "0x19CD5B0", VA = "0x19CD5B0", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x19CD5FC", Offset = "0x19CD5FC", VA = "0x19CD5FC", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x19CD708", Offset = "0x19CD708", VA = "0x19CD708", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x19CE70C", Offset = "0x19CE70C", VA = "0x19CE70C", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x19CE764", Offset = "0x19CE764", VA = "0x19CE764")]
		public TurbulenceParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class VortexParticleAffector : ParticleAffector
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 axisOfRotation;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC108", Offset = "0xBFC108")]
		public Vector3 axisOfRotationOffset;

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x19CFB3C", Offset = "0x19CFB3C", VA = "0x19CFB3C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x19CFB6C", Offset = "0x19CFB6C", VA = "0x19CFB6C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x19CFB9C", Offset = "0x19CFB9C", VA = "0x19CFB9C", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x19CFBCC", Offset = "0x19CFBCC", VA = "0x19CFBCC", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x19CFBFC", Offset = "0x19CFBFC", VA = "0x19CFBFC")]
		private void UpdateAxisOfRotation()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x19CFD84", Offset = "0x19CFD84", VA = "0x19CFD84", Slot = "6")]
		protected override void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x19CFDB4", Offset = "0x19CFDB4", VA = "0x19CFDB4", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x19CFF14", Offset = "0x19CFF14", VA = "0x19CFF14", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x19D03F4", Offset = "0x19D03F4", VA = "0x19D03F4")]
		public VortexParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9454", Offset = "0xBD9454")]
	public class ParticleFlocking : MonoBehaviour
	{
		[Token(Token = "0x200062A")]
		public struct Voxel
		{
			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Bounds bounds;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x448D")]
			public int[] particles;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int particleCount;
		}

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4485")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC16C", Offset = "0xBFC16C")]
		public float maxDistance;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC1D0", Offset = "0xBFC1D0")]
		public float cohesion;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F514")]
		public float separation;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC234", Offset = "0xBFC234")]
		public bool useVoxels;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool voxelLocalCenterFromBounds;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float voxelVolume;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448D")]
		public int voxelsPerAxis;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int previousVoxelsPerAxisValue;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F51C")]
		private Voxel[] voxels;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] particlePositions;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4495")]
		private ParticleSystem.MainModule particleSystemMainModule;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC298", Offset = "0xBFC298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC298", Offset = "0xBFC298")]
		public float delay;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F524")]
		private float timer;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alwaysUpdate;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool visible;

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x19C11BC", Offset = "0x19C11BC", VA = "0x19C11BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x19C12BC", Offset = "0x19C12BC", VA = "0x19C12BC")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x19C12EC", Offset = "0x19C12EC", VA = "0x19C12EC")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x19C131C", Offset = "0x19C131C", VA = "0x19C131C")]
		private void buildVoxelGrid()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x19C1930", Offset = "0x19C1930", VA = "0x19C1930")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x19C3ABC", Offset = "0x19C3ABC", VA = "0x19C3ABC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x19C415C", Offset = "0x19C415C", VA = "0x19C415C")]
		public ParticleFlocking()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9504", Offset = "0xBD9504")]
	public class AttractionParticleForceField : ParticleForceField
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F52C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC334", Offset = "0xBFC334")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC334", Offset = "0xBFC334")]
		public float arrivalRadius;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC3E0", Offset = "0xBFC3E0")]
		public float arrivedRadius;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float arrivalRadiusSqr;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float arrivedRadiusSqr;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x258B0CC", Offset = "0x258B0CC", VA = "0x258B0CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x258B0FC", Offset = "0x258B0FC", VA = "0x258B0FC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x258B12C", Offset = "0x258B12C", VA = "0x258B12C", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x258B15C", Offset = "0x258B15C", VA = "0x258B15C", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x258B260", Offset = "0x258B260", VA = "0x258B260", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x258B578", Offset = "0x258B578", VA = "0x258B578", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x258B868", Offset = "0x258B868", VA = "0x258B868")]
		public AttractionParticleForceField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FC")]
	public static class Noise2
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44A5")]
		private static float F3;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static float G3;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F534")]
		private static byte[] perm;

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x2595B1C", Offset = "0x2595B1C", VA = "0x2595B1C")]
		private static float smooth(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x2595BB8", Offset = "0x2595BB8", VA = "0x2595BB8")]
		private static float fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x2595C94", Offset = "0x2595C94", VA = "0x2595C94")]
		private static int floor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x2595D1C", Offset = "0x2595D1C", VA = "0x2595D1C")]
		private static float lerp(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x2595DB0", Offset = "0x2595DB0", VA = "0x2595DB0")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x259626C", Offset = "0x259626C", VA = "0x259626C")]
		public static float perlin(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x2599B6C", Offset = "0x2599B6C", VA = "0x2599B6C")]
		public static float simplex(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x259C4C4", Offset = "0x259C4C4", VA = "0x259C4C4")]
		public static float octavePerlin(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x259C8B8", Offset = "0x259C8B8", VA = "0x259C8B8")]
		public static float octaveSimplex(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x259CCAC", Offset = "0x259CCAC", VA = "0x259CCAC")]
		public static float perlinUnoptimized(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x259DB5C", Offset = "0x259DB5C", VA = "0x259DB5C")]
		public static float simplexUnoptimized(float x, float y, float z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002FD")]
	public abstract class ParticleForceField : MonoBehaviour
	{
		[Token(Token = "0x200062B")]
		protected struct GetForceParameters
		{
			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distanceToForceFieldCenterSqr;

			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 scaledDirectionToForceFieldCenter;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 particlePosition;
		}

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC444", Offset = "0xBFC444")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC444", Offset = "0xBFC444")]
		public float radius;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC4F0", Offset = "0xBFC4F0")]
		public float force;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC554", Offset = "0xBFC554")]
		public Vector3 center;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44AD")]
		private float _radius;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float radiusSqr;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F53C")]
		private Vector3 transformPosition;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] particleSystemExternalForcesMultipliers;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC5B8", Offset = "0xBFC5B8")]
		public AnimationCurve forceOverDistance;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44B5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC61C", Offset = "0xBFC61C")]
		public List<ParticleSystem> _particleSystems;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int particleSystemsCount;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F544")]
		private List<ParticleSystem> particleSystems;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.Particle[][] particleSystemParticles;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.MainModule[] particleSystemMainModules;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Renderer[] particleSystemRenderers;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44BD")]
		protected ParticleSystem currentParticleSystem;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected GetForceParameters parameters;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC680", Offset = "0xBFC680")]
		public bool alwaysUpdate;

		[Token(Token = "0x1700031B")]
		public float scaledRadius
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x19C421C", Offset = "0x19C421C", VA = "0x19C421C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x19C4294", Offset = "0x19C4294", VA = "0x19C4294", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x19C42A8", Offset = "0x19C42A8", VA = "0x19C42A8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x19C4334", Offset = "0x19C4334", VA = "0x19C4334", Slot = "6")]
		protected virtual void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x19C4348", Offset = "0x19C4348", VA = "0x19C4348", Slot = "7")]
		protected virtual Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x19C4404", Offset = "0x19C4404", VA = "0x19C4404", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x19C4418", Offset = "0x19C4418", VA = "0x19C4418")]
		public void AddParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x19C44B8", Offset = "0x19C44B8", VA = "0x19C44B8")]
		public void RemoveParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x19C4558", Offset = "0x19C4558", VA = "0x19C4558", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x19C6FCC", Offset = "0x19C6FCC", VA = "0x19C6FCC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x19C6FE0", Offset = "0x19C6FE0", VA = "0x19C6FE0", Slot = "10")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x19C7188", Offset = "0x19C7188", VA = "0x19C7188")]
		protected ParticleForceField()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9568", Offset = "0xBD9568")]
	public class TurbulenceParticleForceField : ParticleForceField
	{
		[Token(Token = "0x200062C")]
		public enum NoiseType
		{
			[Token(Token = "0x4002AB8")]
			PseudoPerlin,
			[Token(Token = "0x4002AB9")]
			Perlin,
			[Token(Token = "0x4002ABA")]
			Simplex,
			[Token(Token = "0x4002ABB")]
			OctavePerlin,
			[Token(Token = "0x4002ABC")]
			OctaveSimplex
		}

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C5")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC6E4", Offset = "0xBFC6E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC6E4", Offset = "0xBFC6E4")]
		public float scrollSpeed;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC790", Offset = "0xBFC790")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC790", Offset = "0xBFC790")]
		public float frequency;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9BC")]
		public NoiseType noiseType;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFC824", Offset = "0xBFC824")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC824", Offset = "0xBFC824")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC824", Offset = "0xBFC824")]
		public int octaves;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC90C", Offset = "0xBFC90C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC90C", Offset = "0xBFC90C")]
		public float octaveMultiplier;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFC9A0", Offset = "0xBFC9A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFC9A0", Offset = "0xBFC9A0")]
		public float octaveScale;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44CC")]
		private float time;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float randomX;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F554")]
		private float randomY;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float randomZ;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offsetX;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offsetY;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44D4")]
		private float offsetZ;

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x19CE808", Offset = "0x19CE808", VA = "0x19CE808", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x19CE838", Offset = "0x19CE838", VA = "0x19CE838", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x19CE8E4", Offset = "0x19CE8E4", VA = "0x19CE8E4", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x19CE930", Offset = "0x19CE930", VA = "0x19CE930", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x19CEA3C", Offset = "0x19CEA3C", VA = "0x19CEA3C", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x19CFA40", Offset = "0x19CFA40", VA = "0x19CFA40", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x19CFA98", Offset = "0x19CFA98", VA = "0x19CFA98")]
		public TurbulenceParticleForceField()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD95CC", Offset = "0xBD95CC")]
	public class VortexParticleForceField : ParticleForceField
	{
		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 axisOfRotation;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F564")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFCA34", Offset = "0xBFCA34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFCA34", Offset = "0xBFCA34")]
		public Vector3 axisOfRotationOffset;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x19D04D8", Offset = "0x19D04D8", VA = "0x19D04D8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x19D0508", Offset = "0x19D0508", VA = "0x19D0508", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x19D0538", Offset = "0x19D0538", VA = "0x19D0538", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x19D0568", Offset = "0x19D0568", VA = "0x19D0568", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x19D0598", Offset = "0x19D0598", VA = "0x19D0598")]
		private void UpdateAxisOfRotation()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x19D0720", Offset = "0x19D0720", VA = "0x19D0720", Slot = "6")]
		protected override void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x19D0750", Offset = "0x19D0750", VA = "0x19D0750", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x19D08B0", Offset = "0x19D08B0", VA = "0x19D08B0", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x19D0D10", Offset = "0x19D0D10", VA = "0x19D0D10")]
		public VortexParticleForceField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9630", Offset = "0xBD9630")]
	public class ParticleLights : MonoBehaviour
	{
		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem ps;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Light> lights;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scale;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCAE0", Offset = "0xBFCAE0")]
		public float intensity;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color colour;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F56C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCB28", Offset = "0xBFCB28")]
		public float colourFromParticle;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightShadows shadows;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject template;

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x19C73D4", Offset = "0x19C73D4", VA = "0x19C73D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x19C73E8", Offset = "0x19C73E8", VA = "0x19C73E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x19C7530", Offset = "0x19C7530", VA = "0x19C7530")]
		private void Update()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x19C7544", Offset = "0x19C7544", VA = "0x19C7544")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x19C7FB4", Offset = "0x19C7FB4", VA = "0x19C7FB4")]
		public ParticleLights()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD96E0", Offset = "0xBD96E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD96E0", Offset = "0xBD96E0")]
	public class ParticlePlexus : MonoBehaviour
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxDistance;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44EC")]
		public int maxConnections;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int maxLineRenderers;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F574")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCB70", Offset = "0xBFCB70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCB70", Offset = "0xBFCB70")]
		public float widthFromParticle;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCBE8", Offset = "0xBFCBE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCBE8", Offset = "0xBFCBE8")]
		public float colourFromParticle;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCC60", Offset = "0xBFCC60")]
		public float alphaFromParticle;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCCA8", Offset = "0xBFCCA8")]
		public AnimationCurve alphaOverNormalizedDistance;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44F4")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F57C")]
		private Vector3[] particlePositions;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] particleColours;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] particleSizes;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.MainModule particleSystemMainModule;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44FC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCCE4", Offset = "0xBFCCE4")]
		public LineRenderer lineRendererTemplate;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<LineRenderer> lineRenderers;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F584")]
		private Transform _transform;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFCD20", Offset = "0xBFCD20")]
		public MeshFilter trianglesMeshFilter;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh trianglesMesh;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int[]> allConnectedParticles;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4504")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCD84", Offset = "0xBFCD84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCD84", Offset = "0xBFCD84")]
		public float maxDistanceTriangleBias;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCDFC", Offset = "0xBFCDFC")]
		public bool trianglesDistanceCheck;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F58C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBFCE38", Offset = "0xBFCE38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCE38", Offset = "0xBFCE38")]
		public float triangleColourFromParticle;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCEB0", Offset = "0xBFCEB0")]
		public float triangleAlphaFromParticle;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFCEF8", Offset = "0xBFCEF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFCEF8", Offset = "0xBFCEF8")]
		public float delay;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timer;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450C")]
		public bool alwaysUpdate;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool visible;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x19C80A4", Offset = "0x19C80A4", VA = "0x19C80A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x19C82C8", Offset = "0x19C82C8", VA = "0x19C82C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x19C8418", Offset = "0x19C8418", VA = "0x19C8418")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x19C8448", Offset = "0x19C8448", VA = "0x19C8448")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x19C8478", Offset = "0x19C8478", VA = "0x19C8478")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x19CD314", Offset = "0x19CD314", VA = "0x19CD314")]
		public ParticlePlexus()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public static class CreateLUT
	{
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x258B8C4", Offset = "0x258B8C4", VA = "0x258B8C4")]
		public static void fromGradient(int steps, Gradient gradient, ref Texture2D texture)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x258BCF4", Offset = "0x258BCF4", VA = "0x258BCF4")]
		public static void fromAnimationCurve(int steps, AnimationCurve curve, ref Texture2D texture)
		{
		}
	}
}
namespace MirzaBeig.Demos
{
	[Token(Token = "0x2000303")]
	public class MouseRotateCamera : MonoBehaviour
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F594")]
		public float maxRotation;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool unscaledTime;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x257EDC0", Offset = "0x257EDC0", VA = "0x257EDC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x257EDD4", Offset = "0x257EDD4", VA = "0x257EDD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x257EDE8", Offset = "0x257EDE8", VA = "0x257EDE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x257EDFC", Offset = "0x257EDFC", VA = "0x257EDFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x257F288", Offset = "0x257F288", VA = "0x257F288")]
		public MouseRotateCamera()
		{
		}
	}
}
namespace MirzaBeig.ParticleSystems
{
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD97D8", Offset = "0xBD97D8")]
	public class AnimatedLight : MonoBehaviour
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light light;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFCF94", Offset = "0xBFCF94")]
		private float <time>k__BackingField;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float duration;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F59C")]
		private bool evaluating;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Gradient colourOverLifetime;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve intensityOverLifetime;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool loop;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x451C")]
		public bool autoDestruct;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color startColour;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9C4")]
		private float startIntensity;

		[Token(Token = "0x1700031C")]
		public float time
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x257F2E4", Offset = "0x257F2E4", VA = "0x257F2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E974", Offset = "0xC1E974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x257F314", Offset = "0x257F314", VA = "0x257F314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E9B0", Offset = "0xC1E9B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x257F34C", Offset = "0x257F34C", VA = "0x257F34C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x257F3D8", Offset = "0x257F3D8", VA = "0x257F3D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x257F600", Offset = "0x257F600", VA = "0x257F600")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x257F614", Offset = "0x257F614", VA = "0x257F614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x257F860", Offset = "0x257F860", VA = "0x257F860")]
		private void Update()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x257FC28", Offset = "0x257FC28", VA = "0x257FC28")]
		public AnimatedLight()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class Billboard : MonoBehaviour
	{
		[Token(Token = "0x6001606")]
		[Address(RVA = "0x257FEE0", Offset = "0x257FEE0", VA = "0x257FEE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x257FF88", Offset = "0x257FF88", VA = "0x257FF88")]
		public Billboard()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class DestroyAfterTime : MonoBehaviour
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x25881D4", Offset = "0x25881D4", VA = "0x25881D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x25882DC", Offset = "0x25882DC", VA = "0x25882DC")]
		public DestroyAfterTime()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class DestroyOnParticlesDead : ParticleSystems
	{
		[Token(Token = "0x600160A")]
		[Address(RVA = "0x2588320", Offset = "0x2588320", VA = "0x2588320", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x25883E8", Offset = "0x25883E8", VA = "0x25883E8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x258842C", Offset = "0x258842C", VA = "0x258842C")]
		private void onParticleSystemsDead()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x2588524", Offset = "0x2588524", VA = "0x2588524", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x2588568", Offset = "0x2588568", VA = "0x2588568", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x25885AC", Offset = "0x25885AC", VA = "0x25885AC")]
		public DestroyOnParticlesDead()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class DestroyOnTrailsDestroyed : TrailRenderers
	{
		[Token(Token = "0x6001610")]
		[Address(RVA = "0x258860C", Offset = "0x258860C", VA = "0x258860C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x2588650", Offset = "0x2588650", VA = "0x2588650", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x258870C", Offset = "0x258870C", VA = "0x258870C", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x258899C", Offset = "0x258899C", VA = "0x258899C")]
		public DestroyOnTrailsDestroyed()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ParticleSystems : MonoBehaviour
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFCFD0", Offset = "0xBFCFD0")]
		private ParticleSystem[] <particleSystems>k__BackingField;

		[Token(Token = "0x1700031D")]
		public ParticleSystem[] particleSystems
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x25889FC", Offset = "0x25889FC", VA = "0x25889FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1E9EC", Offset = "0xC1E9EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x2588A2C", Offset = "0x2588A2C", VA = "0x2588A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1EA28", Offset = "0xC1EA28")]
			set
			{
			}
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x2588350", Offset = "0x2588350", VA = "0x2588350", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x2588418", Offset = "0x2588418", VA = "0x2588418", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x2588554", Offset = "0x2588554", VA = "0x2588554", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x2588598", Offset = "0x2588598", VA = "0x2588598", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x2588A64", Offset = "0x2588A64", VA = "0x2588A64")]
		public void Reset()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x2588B60", Offset = "0x2588B60", VA = "0x2588B60")]
		public void Play()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x2588C60", Offset = "0x2588C60", VA = "0x2588C60")]
		public void Pause()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x2588D60", Offset = "0x2588D60", VA = "0x2588D60")]
		public void Stop()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x2588E60", Offset = "0x2588E60", VA = "0x2588E60")]
		public void Clear()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x2588F60", Offset = "0x2588F60", VA = "0x2588F60")]
		public void SetLoop(bool loop)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x25890CC", Offset = "0x25890CC", VA = "0x25890CC")]
		public void SetPlaybackSpeed(float speed)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x2589220", Offset = "0x2589220", VA = "0x2589220")]
		public void Simulate(float time, bool reset = false)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x2589354", Offset = "0x2589354", VA = "0x2589354")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x258959C", Offset = "0x258959C", VA = "0x258959C")]
		public bool IsPlaying(bool checkAll = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x2589784", Offset = "0x2589784", VA = "0x2589784")]
		public int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x25885DC", Offset = "0x25885DC", VA = "0x25885DC")]
		public ParticleSystems()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030A")]
	public class PerlinNoise
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 offset;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4523")]
		public float amplitude;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float frequency;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5A4")]
		public bool unscaledTime;

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x25899B0", Offset = "0x25899B0", VA = "0x25899B0")]
		public void init()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x2589A48", Offset = "0x2589A48", VA = "0x2589A48")]
		public float GetValue(float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x2589C08", Offset = "0x2589C08", VA = "0x2589C08")]
		public PerlinNoise()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030B")]
	public class PerlinNoiseXYZ
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PerlinNoise x;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PerlinNoise y;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PerlinNoise z;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x452B")]
		public bool unscaledTime;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float amplitudeScale;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5AC")]
		public float frequencyScale;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x2589C5C", Offset = "0x2589C5C", VA = "0x2589C5C")]
		public void init()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x2589CE4", Offset = "0x2589CE4", VA = "0x2589CE4")]
		public Vector3 GetXYZ(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x2589EC4", Offset = "0x2589EC4", VA = "0x2589EC4")]
		public PerlinNoiseXYZ()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9888", Offset = "0xBD9888")]
	public class RendererSortingOrder : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sortingOrder;

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x2589F18", Offset = "0x2589F18", VA = "0x2589F18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x2589F2C", Offset = "0x2589F2C", VA = "0x2589F2C")]
		private void Start()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x2589FD8", Offset = "0x2589FD8", VA = "0x2589FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x2589FEC", Offset = "0x2589FEC", VA = "0x2589FEC")]
		public RendererSortingOrder()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 localRotationSpeed;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 worldRotationSpeed;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4533")]
		public bool executeInEditMode;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool unscaledTime;

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x258A01C", Offset = "0x258A01C", VA = "0x258A01C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x258A030", Offset = "0x258A030", VA = "0x258A030")]
		private void Start()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x258A044", Offset = "0x258A044", VA = "0x258A044")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x258A4F4", Offset = "0x258A4F4", VA = "0x258A4F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x258A0BC", Offset = "0x258A0BC", VA = "0x258A0BC")]
		private void rotate()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x258A548", Offset = "0x258A548", VA = "0x258A548")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class TrailRenderers : MonoBehaviour
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5B4")]
		[HideInInspector]
		public TrailRenderer[] trailRenderers;

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x258863C", Offset = "0x258863C", VA = "0x258863C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x2588680", Offset = "0x2588680", VA = "0x2588680", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x2588988", Offset = "0x2588988", VA = "0x2588988", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x258A578", Offset = "0x258A578", VA = "0x258A578")]
		public void setAutoDestruct(bool value)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x25889CC", Offset = "0x25889CC", VA = "0x25889CC")]
		public TrailRenderers()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class TransformNoise : MonoBehaviour
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PerlinNoiseXYZ positionNoise;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PerlinNoiseXYZ rotationNoise;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool unscaledTime;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x453B")]
		private float time;

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x258A680", Offset = "0x258A680", VA = "0x258A680")]
		private void Start()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x258A6E8", Offset = "0x258A6E8", VA = "0x258A6E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x258A8A4", Offset = "0x258A8A4", VA = "0x258A8A4")]
		public TransformNoise()
		{
		}
	}
}
namespace MirzaBeig.ParticleSystems.Demos
{
	[Serializable]
	[Token(Token = "0x2000310")]
	public class DemoManager_XPTitles : MonoBehaviour
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private LoopingParticleSystemsManager list;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5BC")]
		public Text particleCountText;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text currentParticleSystemText;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rotator cameraRotator;

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x2585F64", Offset = "0x2585F64", VA = "0x2585F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x2586034", Offset = "0x2586034", VA = "0x2586034")]
		private void Start()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x2586258", Offset = "0x2586258", VA = "0x2586258")]
		public void ToggleRotation()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x258630C", Offset = "0x258630C", VA = "0x258630C")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x2586418", Offset = "0x2586418", VA = "0x2586418")]
		private void Update()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x25865D0", Offset = "0x25865D0", VA = "0x25865D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x2586518", Offset = "0x2586518", VA = "0x2586518")]
		public void Next()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x2586574", Offset = "0x2586574", VA = "0x2586574")]
		public void previous()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x25860E8", Offset = "0x25860E8", VA = "0x25860E8")]
		private void updateCurrentParticleSystemNameText()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x25867CC", Offset = "0x25867CC", VA = "0x25867CC")]
		public DemoManager_XPTitles()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public enum CameraShakeTarget
	{
		[Token(Token = "0x40014F2")]
		Position,
		[Token(Token = "0x40014F3")]
		Rotation
	}
	[Token(Token = "0x2000312")]
	public enum CameraShakeAmplitudeCurve
	{
		[Token(Token = "0x40014F5")]
		Constant,
		[Token(Token = "0x40014F6")]
		FadeInOut25,
		[Token(Token = "0x40014F7")]
		FadeInOut50,
		[Token(Token = "0x40014F8")]
		FadeInOut75
	}
	[Token(Token = "0x2000313")]
	public enum CameraShakeAmplitudeOverDistanceCurve
	{
		[Token(Token = "0x40014FA")]
		Constant,
		[Token(Token = "0x40014FB")]
		LinearFadeIn,
		[Token(Token = "0x40014FC")]
		LinearFadeOut
	}
	[Token(Token = "0x2000314")]
	public class CameraShake : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200062D")]
		public class Shake
		{
			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float amplitude;

			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x455B")]
			public float frequency;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float duration;

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5DC")]
			[HideInInspector]
			public CameraShakeTarget target;

			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float timeRemaining;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2 perlinNoiseX;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2 perlinNoiseY;

			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4563")]
			private Vector2 perlinNoiseZ;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[HideInInspector]
			public Vector3 noise;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5E4")]
			public AnimationCurve amplitudeOverLifetimeCurve;

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0x2582020", Offset = "0x2582020", VA = "0x2582020")]
			public void Init()
			{
			}

			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0x258227C", Offset = "0x258227C", VA = "0x258227C")]
			private void Init(float amplitude, float frequency, float duration, CameraShakeTarget target)
			{
			}

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0x258206C", Offset = "0x258206C", VA = "0x258206C")]
			public void ApplyRandomSeed()
			{
			}

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0x25800E0", Offset = "0x25800E0", VA = "0x25800E0")]
			public Shake(float amplitude, float frequency, float duration, CameraShakeTarget target, AnimationCurve amplitudeOverLifetimeCurve)
			{
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0x2580468", Offset = "0x2580468", VA = "0x2580468")]
			public Shake(float amplitude, float frequency, float duration, CameraShakeTarget target, CameraShakeAmplitudeCurve amplitudeOverLifetimeCurve)
			{
			}

			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0x2581FA4", Offset = "0x2581FA4", VA = "0x2581FA4")]
			public bool IsAlive()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0x25817E0", Offset = "0x25817E0", VA = "0x25817E0")]
			public void Update()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC7C", Offset = "0xBDFC7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<Shake> <>9__10_0;

			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0x2581ED8", Offset = "0x2581ED8", VA = "0x2581ED8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0x2581F08", Offset = "0x2581F08", VA = "0x2581F08")]
			internal bool <Update>b__10_0(Shake x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float smoothDampTime;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4553")]
		private Vector3 smoothDampPositionVelocity;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float smoothDampRotationVelocityX;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5D4")]
		private float smoothDampRotationVelocityY;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float smoothDampRotationVelocityZ;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Shake> shakes;

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x257FFB8", Offset = "0x257FFB8", VA = "0x257FFB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x257FFCC", Offset = "0x257FFCC", VA = "0x257FFCC")]
		public void Add(float amplitude, float frequency, float duration, CameraShakeTarget target, AnimationCurve amplitudeOverLifetimeCurve)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x2580354", Offset = "0x2580354", VA = "0x2580354")]
		public void Add(float amplitude, float frequency, float duration, CameraShakeTarget target, CameraShakeAmplitudeCurve amplitudeOverLifetimeCurve)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x2580D90", Offset = "0x2580D90", VA = "0x2580D90")]
		private void Update()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x2581D6C", Offset = "0x2581D6C", VA = "0x2581D6C")]
		public CameraShake()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class DemoManager : MonoBehaviour
	{
		[Token(Token = "0x200062F")]
		public enum ParticleMode
		{
			[Token(Token = "0x4002ACA")]
			looping,
			[Token(Token = "0x4002ACB")]
			oneshot
		}

		[Token(Token = "0x2000630")]
		public enum Level
		{
			[Token(Token = "0x4002ACD")]
			none,
			[Token(Token = "0x4002ACE")]
			basic
		}

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform cameraRotationTransform;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x456B")]
		public Transform cameraTranslationTransform;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 cameraLookAtPosition;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5EC")]
		public MouseFollow mouse;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 targetCameraPosition;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 targetCameraRotation;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 cameraPositionStart;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4573")]
		private Vector3 cameraRotationStart;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 input;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9CC")]
		private Vector3 cameraRotation;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float cameraMoveAmount;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float cameraRotateAmount;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float cameraMoveSpeed;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x457A")]
		public float cameraRotationSpeed;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector2 cameraAngleLimits;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5F4")]
		public GameObject[] levels;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Level currentLevel;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParticleMode particleMode;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool advancedRendering;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4582")]
		public Toggle loopingParticleModeToggle;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Toggle oneshotParticleModeToggle;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F5FC")]
		public Toggle advancedRenderingToggle;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Toggle mouseParticlesToggle;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Toggle[] levelToggles;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToggleGroup levelTogglesContainer;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458A")]
		private LoopingParticleSystemsManager loopingParticleSystems;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private OneshotParticleSystemsManager oneshotParticleSystems;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F604")]
		public GameObject ui;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text particleCountText;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text currentParticleSystemText;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text particleSpawnInstructionText;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4592")]
		public Slider timeScaleSlider;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text timeScaleSliderValueText;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F60C")]
		public Camera mainCamera;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MonoBehaviour[] mainCameraPostEffects;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 cameraPositionSmoothDampVelocity;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 cameraRotationSmoothDampVelocity;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x2582324", Offset = "0x2582324", VA = "0x2582324")]
		private void Awake()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x25827E8", Offset = "0x25827E8", VA = "0x25827E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x25835C4", Offset = "0x25835C4", VA = "0x25835C4")]
		public void OnTimeScaleSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x2582F6C", Offset = "0x2582F6C", VA = "0x2582F6C")]
		public void SetToLoopingParticleMode(bool set)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x25830CC", Offset = "0x25830CC", VA = "0x25830CC")]
		public void SetToOneshotParticleMode(bool set)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x25839C8", Offset = "0x25839C8", VA = "0x25839C8")]
		public void SetLevel(Level level)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x2583B58", Offset = "0x2583B58", VA = "0x2583B58")]
		public void SetLevelFromToggle(Toggle toggle)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x258320C", Offset = "0x258320C", VA = "0x258320C")]
		public void SetAdvancedRendering(bool value)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x2583C40", Offset = "0x2583C40", VA = "0x2583C40")]
		public void SetMouseParticlesRendering(bool value)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x2583CC4", Offset = "0x2583CC4", VA = "0x2583CC4")]
		public static Vector3 DampVector3(Vector3 from, Vector3 to, float speed, float dt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x2583E88", Offset = "0x2583E88", VA = "0x2583E88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x2585694", Offset = "0x2585694", VA = "0x2585694")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x2582EDC", Offset = "0x2582EDC", VA = "0x2582EDC")]
		private void ResetCameraTransformTargets()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x2583488", Offset = "0x2583488", VA = "0x2583488")]
		private void UpdateCurrentParticleSystemNameText()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x2584D34", Offset = "0x2584D34", VA = "0x2584D34")]
		public void Next()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x2584E0C", Offset = "0x2584E0C", VA = "0x2584E0C")]
		public void Previous()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x2585E50", Offset = "0x2585E50", VA = "0x2585E50")]
		public DemoManager()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class FPSDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45A2")]
		private float timer;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float updateTime;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F61C")]
		private int frameCount;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fpsAccum;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text fpsText;

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x25867FC", Offset = "0x25867FC", VA = "0x25867FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x2586810", Offset = "0x2586810", VA = "0x2586810")]
		private void Start()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x258689C", Offset = "0x258689C", VA = "0x258689C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x2586B70", Offset = "0x2586B70", VA = "0x2586B70")]
		public FPSDisplay()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class FPSTest : MonoBehaviour
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int targetFPS1;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45AA")]
		public int targetFPS2;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int previousVSyncCount;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x2586BB4", Offset = "0x2586BB4", VA = "0x2586BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x2586BC8", Offset = "0x2586BC8", VA = "0x2586BC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x2586BDC", Offset = "0x2586BDC", VA = "0x2586BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x2586CCC", Offset = "0x2586CCC", VA = "0x2586CCC")]
		public FPSTest()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class LoopingParticleSystemsManager : ParticleManager
	{
		[Token(Token = "0x6001666")]
		[Address(RVA = "0x2586D24", Offset = "0x2586D24", VA = "0x2586D24", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x2586D68", Offset = "0x2586D68", VA = "0x2586D68", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x2586ED4", Offset = "0x2586ED4", VA = "0x2586ED4", Slot = "6")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x258719C", Offset = "0x258719C", VA = "0x258719C", Slot = "7")]
		public override void Previous()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x2587484", Offset = "0x2587484", VA = "0x2587484", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x25874C8", Offset = "0x25874C8", VA = "0x25874C8", Slot = "8")]
		public override int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x2587670", Offset = "0x2587670", VA = "0x2587670")]
		public LoopingParticleSystemsManager()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class MouseFollow : MonoBehaviour
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F624")]
		public float speed;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distanceFromCamera;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool ignoreTimeScale;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x25876FC", Offset = "0x25876FC", VA = "0x25876FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x2587710", Offset = "0x2587710", VA = "0x2587710")]
		private void Start()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x2587724", Offset = "0x2587724", VA = "0x2587724")]
		private void Update()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x2587A7C", Offset = "0x2587A7C", VA = "0x2587A7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x2587A90", Offset = "0x2587A90", VA = "0x2587A90")]
		public MouseFollow()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class OneshotParticleSystemsManager : ParticleManager
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask mouseRaycastLayerMask;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45B2")]
		private List<ParticleSystem[]> spawnedPrefabs;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFD048", Offset = "0xBFD048")]
		private bool <disableSpawn>k__BackingField;

		[Token(Token = "0x1700031E")]
		public bool disableSpawn
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x2587AEC", Offset = "0x2587AEC", VA = "0x2587AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1EA64", Offset = "0xC1EA64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x2587B30", Offset = "0x2587B30", VA = "0x2587B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1EAA0", Offset = "0xC1EAA0")]
			set
			{
			}
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x2587B7C", Offset = "0x2587B7C", VA = "0x2587B7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x2587BAC", Offset = "0x2587BAC", VA = "0x2587BAC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x2587C80", Offset = "0x2587C80", VA = "0x2587C80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x25836A0", Offset = "0x25836A0", VA = "0x25836A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x2587C94", Offset = "0x2587C94", VA = "0x2587C94", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x2584EE4", Offset = "0x2584EE4", VA = "0x2584EE4")]
		public void InstantiateParticlePrefab(Vector2 mousePosition, float maxDistance)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x2587CC4", Offset = "0x2587CC4", VA = "0x2587CC4")]
		public void Randomize()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x2587D8C", Offset = "0x2587D8C", VA = "0x2587D8C", Slot = "8")]
		public override int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x258811C", Offset = "0x258811C", VA = "0x258811C")]
		public OneshotParticleSystemsManager()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class ParticleManager : MonoBehaviour
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F62C")]
		protected List<ParticleSystem[]> particlePrefabs;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int currentParticlePrefabIndex;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int prefabNameUnderscoreCountCutoff;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool disableChildrenAtStart;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45BA")]
		private bool initialized;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x2582490", Offset = "0x2582490", VA = "0x2582490")]
		public void Init()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x2586D54", Offset = "0x2586D54", VA = "0x2586D54", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x2586E80", Offset = "0x2586E80", VA = "0x2586E80", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x2587084", Offset = "0x2587084", VA = "0x2587084", Slot = "6")]
		public virtual void Next()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x258734C", Offset = "0x258734C", VA = "0x258734C", Slot = "7")]
		public virtual void Previous()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x2585904", Offset = "0x2585904", VA = "0x2585904")]
		public string GetCurrentPrefabName(bool shorten = false)
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x25881B8", Offset = "0x25881B8", VA = "0x25881B8", Slot = "8")]
		public virtual int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x25874B4", Offset = "0x25874B4", VA = "0x25874B4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x25876A0", Offset = "0x25876A0", VA = "0x25876A0")]
		public ParticleManager()
		{
		}
	}
}
namespace JBooth.MicroSplat
{
	[Token(Token = "0x200031C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9954", Offset = "0xBD9954")]
	public class GlitterLight : MonoBehaviour
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Light lght;

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1AEFBC8", Offset = "0x1AEFBC8", VA = "0x1AEFBC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1AEFC54", Offset = "0x1AEFC54", VA = "0x1AEFC54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1AEFCE0", Offset = "0x1AEFCE0", VA = "0x1AEFCE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1AF001C", Offset = "0x1AF001C", VA = "0x1AF001C")]
		public GlitterLight()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class MicroSplatRuntimeUtil
	{
		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1AF004C", Offset = "0x1AF004C", VA = "0x1AF004C")]
		public static Vector2 UnityUVScaleToUVScale(Vector2 uv, Terrain t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1AF01B4", Offset = "0x1AF01B4", VA = "0x1AF01B4")]
		public static Vector2 UVScaleToUnityUVScale(Vector2 uv, Terrain t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1AF03A8", Offset = "0x1AF03A8", VA = "0x1AF03A8")]
		public MicroSplatRuntimeUtil()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD9A20", Offset = "0xBD9A20")]
	[ExecuteInEditMode]
	public class TextureArrayConfig : ScriptableObject
	{
		[Token(Token = "0x2000631")]
		public enum AllTextureChannel
		{
			[Token(Token = "0x4002AD0")]
			R,
			[Token(Token = "0x4002AD1")]
			G,
			[Token(Token = "0x4002AD2")]
			B,
			[Token(Token = "0x4002AD3")]
			A,
			[Token(Token = "0x4002AD4")]
			Custom
		}

		[Token(Token = "0x2000632")]
		public enum TextureChannel
		{
			[Token(Token = "0x4002AD6")]
			R,
			[Token(Token = "0x4002AD7")]
			G,
			[Token(Token = "0x4002AD8")]
			B,
			[Token(Token = "0x4002AD9")]
			A
		}

		[Token(Token = "0x2000633")]
		public enum Compression
		{
			[Token(Token = "0x4002ADB")]
			AutomaticCompressed,
			[Token(Token = "0x4002ADC")]
			ForceDXT,
			[Token(Token = "0x4002ADD")]
			ForcePVR,
			[Token(Token = "0x4002ADE")]
			ForceETC2,
			[Token(Token = "0x4002ADF")]
			ForceASTC,
			[Token(Token = "0x4002AE0")]
			ForceCrunch,
			[Token(Token = "0x4002AE1")]
			Uncompressed
		}

		[Token(Token = "0x2000634")]
		public enum TextureSize
		{
			[Token(Token = "0x4002AE3")]
			k4096 = 4096,
			[Token(Token = "0x4002AE4")]
			k2048 = 2048,
			[Token(Token = "0x4002AE5")]
			k1024 = 1024,
			[Token(Token = "0x4002AE6")]
			k512 = 512,
			[Token(Token = "0x4002AE7")]
			k256 = 256,
			[Token(Token = "0x4002AE8")]
			k128 = 128,
			[Token(Token = "0x4002AE9")]
			k64 = 64,
			[Token(Token = "0x4002AEA")]
			k32 = 32
		}

		[Serializable]
		[Token(Token = "0x2000635")]
		public class TextureArraySettings
		{
			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureSize textureSize;

			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Compression compression;

			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4611")]
			public FilterMode filterMode;

			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14D18", Offset = "0xC14D18")]
			public int Aniso;

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0x1AF0944", Offset = "0x1AF0944", VA = "0x1AF0944")]
			public TextureArraySettings(TextureSize s, Compression c, FilterMode f, int a = 1)
			{
			}
		}

		[Token(Token = "0x2000636")]
		public enum PBRWorkflow
		{
			[Token(Token = "0x4002AF0")]
			Metallic,
			[Token(Token = "0x4002AF1")]
			Specular
		}

		[Token(Token = "0x2000637")]
		public enum PackingMode
		{
			[Token(Token = "0x4002AF3")]
			Fastest,
			[Token(Token = "0x4002AF4")]
			Quality
		}

		[Token(Token = "0x2000638")]
		public enum SourceTextureSize
		{
			[Token(Token = "0x4002AF6")]
			Unchanged = 0,
			[Token(Token = "0x4002AF7")]
			k32 = 0x20,
			[Token(Token = "0x4002AF8")]
			k256 = 0x100
		}

		[Token(Token = "0x2000639")]
		public enum TextureMode
		{
			[Token(Token = "0x4002AFA")]
			Basic,
			[Token(Token = "0x4002AFB")]
			PBR
		}

		[Token(Token = "0x200063A")]
		public enum ClusterMode
		{
			[Token(Token = "0x4002AFD")]
			None,
			[Token(Token = "0x4002AFE")]
			TwoVariations,
			[Token(Token = "0x4002AFF")]
			ThreeVariations
		}

		[Serializable]
		[Token(Token = "0x200063B")]
		public class TextureArrayGroup
		{
			[Token(Token = "0x4002B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureArraySettings diffuseSettings;

			[Token(Token = "0x4002B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F694")]
			public TextureArraySettings normalSettings;

			[Token(Token = "0x4002B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureArraySettings smoothSettings;

			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureArraySettings antiTileSettings;

			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureArraySettings emissiveSettings;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4630")]
			public TextureArraySettings specularSettings;

			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureArraySettings traxDiffuseSettings;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F69C")]
			public TextureArraySettings traxNormalSettings;

			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureArraySettings decalSplatSettings;

			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0x1AF0604", Offset = "0x1AF0604", VA = "0x1AF0604")]
			public TextureArrayGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200063C")]
		public class PlatformTextureOverride
		{
			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureArrayGroup settings;

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0x1AF089C", Offset = "0x1AF089C", VA = "0x1AF089C")]
			public PlatformTextureOverride()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200063D")]
		public class TextureEntry
		{
			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D diffuse;

			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4638")]
			public Texture2D height;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureChannel heightChannel;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6A4")]
			public Texture2D normal;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D smoothness;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureChannel smoothnessChannel;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isRoughness;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4640")]
			public Texture2D ao;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureChannel aoChannel;

			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6AC")]
			public Texture2D emis;

			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D metal;

			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureChannel metalChannel;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D specular;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4648")]
			public Texture2D noiseNormal;

			[Token(Token = "0x4002B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Texture2D detailNoise;

			[Token(Token = "0x4002B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6B4")]
			public TextureChannel detailChannel;

			[Token(Token = "0x4002B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D distanceNoise;

			[Token(Token = "0x4002B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureChannel distanceChannel;

			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D traxDiffuse;

			[Token(Token = "0x4002B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4650")]
			public Texture2D traxHeight;

			[Token(Token = "0x4002B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureChannel traxHeightChannel;

			[Token(Token = "0x4002B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6BC")]
			public Texture2D traxNormal;

			[Token(Token = "0x4002B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D traxSmoothness;

			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextureChannel traxSmoothnessChannel;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool traxIsRoughness;

			[Token(Token = "0x4002B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4658")]
			public Texture2D traxAO;

			[Token(Token = "0x4002B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TextureChannel traxAOChannel;

			[Token(Token = "0x4002B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6C4")]
			public Texture2D splat;

			[Token(Token = "0x6002DCF")]
			[Address(RVA = "0x1AF09E8", Offset = "0x1AF09E8", VA = "0x1AF09E8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002DD0")]
			[Address(RVA = "0x1AF0B50", Offset = "0x1AF0B50", VA = "0x1AF0B50")]
			public bool HasTextures(PBRWorkflow wf)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0x1AF1410", Offset = "0x1AF1410", VA = "0x1AF1410")]
			public TextureEntry()
			{
			}
		}

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F634")]
		public bool diffuseIsLinear;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool antiTileArray;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool emisMetalArray;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool traxArray;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C2")]
		[HideInInspector]
		public TextureMode textureMode;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public ClusterMode clusterMode;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F63C")]
		[HideInInspector]
		public PackingMode packingMode;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public PBRWorkflow pbrWorkflow;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public int hash;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray splatArray;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45CA")]
		[HideInInspector]
		public Texture2DArray diffuseArray;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public Texture2DArray normalSAOArray;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9D4")]
		[HideInInspector]
		public Texture2DArray smoothAOArray;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray specularArray;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray diffuseArray2;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray normalSAOArray2;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45D1")]
		[HideInInspector]
		public Texture2DArray smoothAOArray2;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public Texture2DArray specularArray2;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F644")]
		[HideInInspector]
		public Texture2DArray diffuseArray3;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray normalSAOArray3;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray smoothAOArray3;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Texture2DArray specularArray3;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45D9")]
		[HideInInspector]
		public Texture2DArray emisArray;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public Texture2DArray emisArray2;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F64C")]
		[HideInInspector]
		public Texture2DArray emisArray3;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextureArrayGroup defaultTextureSettings;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<PlatformTextureOverride> platformOverrides;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SourceTextureSize sourceTextureSize;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45E1")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelHeight;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelSmoothness;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F654")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelAO;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures2;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures3;

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1AF03D8", Offset = "0x1AF03D8", VA = "0x1AF03D8")]
		public bool IsScatter()
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1AF03FC", Offset = "0x1AF03FC", VA = "0x1AF03FC")]
		public bool IsDecal()
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1AF0420", Offset = "0x1AF0420", VA = "0x1AF0420")]
		public bool IsDecalSplat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1AF0444", Offset = "0x1AF0444", VA = "0x1AF0444")]
		public TextureArrayConfig()
		{
		}
	}
}
namespace MTAssets
{
	[Token(Token = "0x200031F")]
	public class CombinedMeshesManager : MonoBehaviour
	{
		[Token(Token = "0x6001691")]
		[Address(RVA = "0x21E42F8", Offset = "0x21E42F8", VA = "0x21E42F8")]
		public CombinedMeshesManager()
		{
		}
	}
}
namespace Microsoft.MixedReality.Toolkit.Rendering
{
	[Token(Token = "0x2000320")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9ACC", Offset = "0xBD9ACC")]
	public class DepthBufferRenderer : MonoBehaviour
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFD750", Offset = "0xBFD750")]
		private RenderTexture outputTexture;

		[Token(Token = "0x400155F")]
		private const string DepthShaderName = "Mixed Reality Toolkit/Depth Buffer Viewer";

		[Token(Token = "0x1700031F")]
		public RenderTexture OutputTexture
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x256FDFC", Offset = "0x256FDFC", VA = "0x256FDFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x256FE2C", Offset = "0x256FE2C", VA = "0x256FE2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x256FE64", Offset = "0x256FE64", VA = "0x256FE64")]
		public DepthBufferRenderer()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public interface IMaterialInstanceOwner
	{
		[Token(Token = "0x6001695")]
		void OnMaterialChanged(MaterialInstance materialInstance);
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD9B54", Offset = "0xBD9B54")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD9B54", Offset = "0xBD9B54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9B54", Offset = "0xBD9B54")]
	public class MaterialInstance : MonoBehaviour
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Renderer cachedRenderer;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4660")]
		[SerializeField]
		[HideInInspector]
		private Material[] defaultMaterials;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material[] instanceMaterials;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6CC")]
		private bool initialized;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool materialsInstanced;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<UnityEngine.Object> materialOwners;

		[Token(Token = "0x4001566")]
		private const string instancePostfix = " (Instance)";

		[Token(Token = "0x17000320")]
		public Material Material
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x2570710", Offset = "0x2570710", VA = "0x2570710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public Material[] Materials
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x2570758", Offset = "0x2570758", VA = "0x2570758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private Renderer CachedRenderer
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x25707A0", Offset = "0x25707A0", VA = "0x25707A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x256FE94", Offset = "0x256FE94", VA = "0x256FE94")]
		public Material AcquireMaterial([Optional] UnityEngine.Object owner, bool instance = true)
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x25702A8", Offset = "0x25702A8", VA = "0x25702A8")]
		public Material[] AcquireMaterials([Optional] UnityEngine.Object owner, bool instance = true)
		{
			return null;
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x2570440", Offset = "0x2570440", VA = "0x2570440")]
		public void ReleaseMaterial(UnityEngine.Object owner, bool autoDestroy = true)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x25708F4", Offset = "0x25708F4", VA = "0x25708F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x2570B38", Offset = "0x2570B38", VA = "0x2570B38")]
		private void Update()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x2571D18", Offset = "0x2571D18", VA = "0x2571D18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x2570924", Offset = "0x2570924", VA = "0x2570924")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x2570120", Offset = "0x2570120", VA = "0x2570120")]
		private void AcquireInstances()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x2571B40", Offset = "0x2571B40", VA = "0x2571B40")]
		private void CreateInstances()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x2571208", Offset = "0x2571208", VA = "0x2571208")]
		private static bool MaterialsMatch(Material[] a, Material[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x25721C0", Offset = "0x25721C0", VA = "0x25721C0")]
		private static Material[] InstanceMaterials(Material[] source)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x2571EB8", Offset = "0x2571EB8", VA = "0x2571EB8")]
		private static void DestroyMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x25719A4", Offset = "0x25719A4", VA = "0x25719A4")]
		private static bool IsInstanceMaterial(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x2571FAC", Offset = "0x2571FAC", VA = "0x2571FAC")]
		private static bool HasValidMaterial(Material[] materials)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x2570560", Offset = "0x2570560", VA = "0x2570560")]
		private static void DestorySafe(UnityEngine.Object toDestroy)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x2572698", Offset = "0x2572698", VA = "0x2572698")]
		public MaterialInstance()
		{
		}
	}
}
namespace Microsoft.MixedReality.Toolkit.Utilities
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD9CB0", Offset = "0xBD9CB0")]
	public abstract class BaseMeshOutline : MonoBehaviour
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFD834", Offset = "0xBFD834")]
		[SerializeField]
		protected Material outlineMaterial;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFD8B4", Offset = "0xBFD8B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFD8B4", Offset = "0xBFD8B4")]
		protected float outlineWidth;

		[Token(Token = "0x17000323")]
		public Material OutlineMaterial
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x2572750", Offset = "0x2572750", VA = "0x2572750")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x2572780", Offset = "0x2572780", VA = "0x2572780")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public float OutlineWidth
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x25728C8", Offset = "0x25728C8", VA = "0x25728C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x25728F8", Offset = "0x25728F8", VA = "0x25728F8")]
			set
			{
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x2572980", Offset = "0x2572980", VA = "0x2572980", Slot = "4")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60016AE")]
		protected abstract void ApplyOutlineMaterial();

		[Token(Token = "0x60016AF")]
		protected abstract void ApplyOutlineWidth();

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x25729C4", Offset = "0x25729C4", VA = "0x25729C4")]
		protected BaseMeshOutline()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9D14", Offset = "0xBD9D14")]
	public class ClippingBox : ClippingPrimitive
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6D4")]
		protected int clipBoxSizeID;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int clipBoxInverseTransformID;

		[Token(Token = "0x17000325")]
		protected override string Keyword
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x2572DB4", Offset = "0x2572DB4", VA = "0x2572DB4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		protected override string ClippingSideProperty
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x2572E28", Offset = "0x2572E28", VA = "0x2572E28", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x2572E9C", Offset = "0x2572E9C", VA = "0x2572E9C")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x257302C", Offset = "0x257302C", VA = "0x257302C", Slot = "7")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x25731CC", Offset = "0x25731CC", VA = "0x25731CC", Slot = "9")]
		protected override void UpdateShaderProperties(MaterialPropertyBlock materialPropertyBlock)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x25735FC", Offset = "0x25735FC", VA = "0x25735FC")]
		public ClippingBox()
		{
		}
	}
	[Token(Token = "0x2000325")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9D9C", Offset = "0xBD9D9C")]
	public class ClippingPlane : ClippingPrimitive
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int clipPlaneID;

		[Token(Token = "0x17000327")]
		protected override string Keyword
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x25736F8", Offset = "0x25736F8", VA = "0x25736F8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		protected override string ClippingSideProperty
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x257376C", Offset = "0x257376C", VA = "0x257376C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x25737E0", Offset = "0x25737E0", VA = "0x25737E0")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x2573A28", Offset = "0x2573A28", VA = "0x2573A28", Slot = "7")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x2573AC8", Offset = "0x2573AC8", VA = "0x2573AC8", Slot = "9")]
		protected override void UpdateShaderProperties(MaterialPropertyBlock materialPropertyBlock)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x2573D14", Offset = "0x2573D14", VA = "0x2573D14")]
		public ClippingPlane()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD9E24", Offset = "0xBD9E24")]
	public abstract class ClippingPrimitive : MonoBehaviour, IMaterialInstanceOwner
	{
		[Token(Token = "0x200063E")]
		public enum Side
		{
			[Token(Token = "0x4002B27")]
			Inside = 1,
			[Token(Token = "0x4002B28")]
			Outside = -1
		}

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFD974", Offset = "0xBFD974")]
		[SerializeField]
		protected List<Renderer> renderers;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4670")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFD9F4", Offset = "0xBFD9F4")]
		[SerializeField]
		protected Side clippingSide;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFDA74", Offset = "0xBFDA74")]
		private bool useOnPreRender;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6DC")]
		protected MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int clippingSideID;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CameraEventRouter cameraMethods;

		[Token(Token = "0x17000329")]
		public Side ClippingSide
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x2573D44", Offset = "0x2573D44", VA = "0x2573D44")]
			get
			{
				return default(Side);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x2573D74", Offset = "0x2573D74", VA = "0x2573D74")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public bool UseOnPreRender
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x2573DAC", Offset = "0x2573DAC", VA = "0x2573DAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x2573DF0", Offset = "0x2573DF0", VA = "0x2573DF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		protected abstract string Keyword
		{
			[Token(Token = "0x60016C1")]
			get;
		}

		[Token(Token = "0x1700032C")]
		protected abstract string ClippingSideProperty
		{
			[Token(Token = "0x60016C2")]
			get;
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x2574068", Offset = "0x2574068", VA = "0x2574068")]
		public void AddRenderer(Renderer _renderer)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x2574454", Offset = "0x2574454", VA = "0x2574454")]
		public void RemoveRenderer(Renderer _renderer)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x2574704", Offset = "0x2574704", VA = "0x2574704")]
		public void ClearRenderers()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x2574880", Offset = "0x2574880", VA = "0x2574880")]
		public IEnumerable<Renderer> GetRenderersCopy()
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x257492C", Offset = "0x257492C", VA = "0x257492C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x2574D9C", Offset = "0x2574D9C", VA = "0x2574D9C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x2574F50", Offset = "0x2574F50", VA = "0x2574F50")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x2574FA0", Offset = "0x2574FA0", VA = "0x2574FA0")]
		protected void OnCameraPreRender(CameraEventRouter router)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x2574FD4", Offset = "0x2574FD4", VA = "0x2574FD4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x2575004", Offset = "0x2575004", VA = "0x2575004", Slot = "4")]
		public void OnMaterialChanged(MaterialInstance materialInstance)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x25730F8", Offset = "0x25730F8", VA = "0x25730F8", Slot = "7")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x25751A4", Offset = "0x25751A4", VA = "0x25751A4", Slot = "8")]
		protected virtual void UpdateRenderers()
		{
		}

		[Token(Token = "0x60016CF")]
		protected abstract void UpdateShaderProperties(MaterialPropertyBlock materialPropertyBlock);

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x2574AB8", Offset = "0x2574AB8", VA = "0x2574AB8")]
		protected void ToggleClippingFeature(bool keywordOn)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x257430C", Offset = "0x257430C", VA = "0x257430C")]
		protected void ToggleClippingFeature(Material[] materials, bool keywordOn)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x25754B8", Offset = "0x25754B8", VA = "0x25754B8")]
		protected void ToggleClippingFeature(Material material, bool keywordOn)
		{
		}

		[Token(Token = "0x60016D3")]
		private static T EnsureComponent<T>(GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x257362C", Offset = "0x257362C", VA = "0x257362C")]
		protected ClippingPrimitive()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9EAC", Offset = "0xBD9EAC")]
	public class ClippingSphere : ClippingPrimitive
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C564")]
		protected int clipSphereID;

		[Token(Token = "0x1700032D")]
		public float Radius
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x257565C", Offset = "0x257565C", VA = "0x257565C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032E")]
		protected override string Keyword
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x2575854", Offset = "0x2575854", VA = "0x2575854", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		protected override string ClippingSideProperty
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x25758C8", Offset = "0x25758C8", VA = "0x25758C8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x257593C", Offset = "0x257593C", VA = "0x257593C")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x25759F0", Offset = "0x25759F0", VA = "0x25759F0", Slot = "7")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x2575A90", Offset = "0x2575A90", VA = "0x2575A90", Slot = "9")]
		protected override void UpdateShaderProperties(MaterialPropertyBlock materialPropertyBlock)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x2575BE0", Offset = "0x2575BE0", VA = "0x2575BE0")]
		public ClippingSphere()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBD9F34", Offset = "0xBD9F34")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD9F34", Offset = "0xBD9F34")]
	public class HoverLight : MonoBehaviour
	{
		[Token(Token = "0x4001573")]
		private const int hoverLightCount = 2;

		[Token(Token = "0x4001574")]
		private const int hoverLightDataSize = 2;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<HoverLight> activeHoverLights;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x467E")]
		private static Vector4[] hoverLightData;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int _HoverLightDataID;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9E4")]
		private static int lastHoverLightUpdate;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFDAFC", Offset = "0xBFDAFC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFDAFC", Offset = "0xBFDAFC")]
		private float radius;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFDBB4", Offset = "0xBFDBB4")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x17000330")]
		public float Radius
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x2575C10", Offset = "0x2575C10", VA = "0x2575C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x2575C40", Offset = "0x2575C40", VA = "0x2575C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public Color Color
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x2575C78", Offset = "0x2575C78", VA = "0x2575C78")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x2575CC0", Offset = "0x2575CC0", VA = "0x2575CC0")]
			set
			{
			}
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x2575DF0", Offset = "0x2575DF0", VA = "0x2575DF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x2576134", Offset = "0x2576134", VA = "0x2576134")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x2576C54", Offset = "0x2576C54", VA = "0x2576C54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x2576C8C", Offset = "0x2576C8C", VA = "0x2576C8C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x2575E24", Offset = "0x2575E24", VA = "0x2575E24")]
		private void AddHoverLight(HoverLight light)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x2576188", Offset = "0x2576188", VA = "0x2576188")]
		private void RemoveHoverLight(HoverLight light)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x2577494", Offset = "0x2577494", VA = "0x2577494")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x25762A4", Offset = "0x25762A4", VA = "0x25762A4")]
		private void UpdateHoverLights(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x25775A4", Offset = "0x25775A4", VA = "0x25775A4")]
		public HoverLight()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA004", Offset = "0xBDA004")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDA004", Offset = "0xBDA004")]
	public class MeshOutline : BaseMeshOutline
	{
		[Token(Token = "0x400157B")]
		private const string vertexExtrusionKeyword = "_VERTEX_EXTRUSION";

		[Token(Token = "0x400157C")]
		private const string vertexExtrusionSmoothNormalsKeyword = "_VERTEX_EXTRUSION_SMOOTH_NORMALS";

		[Token(Token = "0x400157D")]
		private const string vertexExtrusionValueName = "_VertexExtrusionValue";

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6E4")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int vertexExtrusionValueID;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material[] defaultMaterials;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468D")]
		private MeshSmoother createdMeshSmoother;

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x25777F4", Offset = "0x25777F4", VA = "0x25777F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x2577918", Offset = "0x2577918", VA = "0x2577918")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x2577948", Offset = "0x2577948", VA = "0x2577948")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x25779A0", Offset = "0x25779A0", VA = "0x25779A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x2577A94", Offset = "0x2577A94", VA = "0x2577A94", Slot = "5")]
		protected override void ApplyOutlineMaterial()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x2578494", Offset = "0x2578494", VA = "0x2578494", Slot = "6")]
		protected override void ApplyOutlineWidth()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x2578014", Offset = "0x2578014", VA = "0x2578014")]
		private static int GetMinRenderQueue(Material[] materials)
		{
			return default(int);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x257867C", Offset = "0x257867C", VA = "0x257867C")]
		public MeshOutline()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDA0FC", Offset = "0xBDA0FC")]
	public class MeshOutlineHierarchy : BaseMeshOutline
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MeshOutline[] meshOutlines;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x25786AC", Offset = "0x25786AC", VA = "0x25786AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x2578928", Offset = "0x2578928", VA = "0x2578928")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x2578AD8", Offset = "0x2578AD8", VA = "0x2578AD8", Slot = "5")]
		protected override void ApplyOutlineMaterial()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x2578D04", Offset = "0x2578D04", VA = "0x2578D04", Slot = "6")]
		protected override void ApplyOutlineWidth()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x2578F30", Offset = "0x2578F30", VA = "0x2578F30")]
		public MeshOutlineHierarchy()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA160", Offset = "0xBDA160")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDA160", Offset = "0xBDA160")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDA160", Offset = "0xBDA160")]
	public class MeshSmoother : MonoBehaviour
	{
		[Token(Token = "0x200063F")]
		private class MeshReference
		{
			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4695")]
			public Mesh Mesh;

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int referenceCount;

			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0x257ACFC", Offset = "0x257ACFC", VA = "0x257ACFC")]
			public MeshReference(Mesh mesh)
			{
			}

			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0x257AC9C", Offset = "0x257AC9C", VA = "0x257AC9C")]
			public void Increment()
			{
			}

			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0x257ABD0", Offset = "0x257ABD0", VA = "0x257ABD0")]
			public void Decrement()
			{
			}

			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0x257AC30", Offset = "0x257AC30", VA = "0x257AC30")]
			public bool IsReferenced()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCB8", Offset = "0xBDFCB8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6F4")]
			public Vector3[] vertices;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] normals;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh mesh;

			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0x257A718", Offset = "0x257A718", VA = "0x257A718")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0x257AE3C", Offset = "0x257AE3C", VA = "0x257AE3C")]
			internal List<Vector3> <SmoothNormalsAsync>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0x257AF48", Offset = "0x257AF48", VA = "0x257AF48")]
			internal void <SmoothNormalsAsync>b__1(Task<List<Vector3>> i)
			{
			}
		}

		[Token(Token = "0x4001584")]
		private const int smoothNormalUVChannel = 2;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFDC34", Offset = "0xBFDC34")]
		[SerializeField]
		private bool smoothNormalsOnAwake;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, MeshReference> processedMeshes;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x25782E4", Offset = "0x25782E4", VA = "0x25782E4")]
		public void SmoothNormals()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x257A304", Offset = "0x257A304", VA = "0x257A304")]
		public Task SmoothNormalsAsync()
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x257A748", Offset = "0x257A748", VA = "0x257A748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x257A808", Offset = "0x257A808", VA = "0x257A808")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x2578F60", Offset = "0x2578F60", VA = "0x2578F60")]
		private bool AcquirePreprocessedMesh(out Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x25794FC", Offset = "0x25794FC", VA = "0x25794FC")]
		private static List<Vector3> CalculateSmoothNormals(Vector3[] vertices, Vector3[] normals)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x257AD58", Offset = "0x257AD58", VA = "0x257AD58")]
		public MeshSmoother()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDA2A0", Offset = "0xBDA2A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDA2A0", Offset = "0xBDA2A0")]
	public class ProximityLight : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000641")]
		public class LightSettings
		{
			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F704")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC14D60", Offset = "0xC14D60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC14D60", Offset = "0xC14D60")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14D60", Offset = "0xC14D60")]
			private float nearRadius;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC14E60", Offset = "0xC14E60")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14E60", Offset = "0xC14E60")]
			private float farRadius;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC14F18", Offset = "0xC14F18")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14F18", Offset = "0xC14F18")]
			private float nearDistance;

			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC14FD0", Offset = "0xC14FD0")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC14FD0", Offset = "0xC14FD0")]
			private float minNearSizePercentage;

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46AD")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC15088", Offset = "0xC15088")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15088", Offset = "0xC15088")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xC15088", Offset = "0xC15088")]
			[SerializeField]
			private Color centerColor;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15184", Offset = "0xC15184")]
			[SerializeField]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xC15184", Offset = "0xC15184")]
			private Color middleColor;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F70C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15238", Offset = "0xC15238")]
			[SerializeField]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xC15238", Offset = "0xC15238")]
			private Color outerColor;

			[Token(Token = "0x1700050E")]
			public float NearRadius
			{
				[Token(Token = "0x6002DD9")]
				[Address(RVA = "0x257DFE8", Offset = "0x257DFE8", VA = "0x257DFE8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002DDA")]
				[Address(RVA = "0x257E018", Offset = "0x257E018", VA = "0x257E018")]
				set
				{
				}
			}

			[Token(Token = "0x1700050F")]
			public float FarRadius
			{
				[Token(Token = "0x6002DDB")]
				[Address(RVA = "0x257E050", Offset = "0x257E050", VA = "0x257E050")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002DDC")]
				[Address(RVA = "0x257E080", Offset = "0x257E080", VA = "0x257E080")]
				set
				{
				}
			}

			[Token(Token = "0x17000510")]
			public float NearDistance
			{
				[Token(Token = "0x6002DDD")]
				[Address(RVA = "0x257E0B8", Offset = "0x257E0B8", VA = "0x257E0B8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002DDE")]
				[Address(RVA = "0x257E0E8", Offset = "0x257E0E8", VA = "0x257E0E8")]
				set
				{
				}
			}

			[Token(Token = "0x17000511")]
			public float MinNearSizePercentage
			{
				[Token(Token = "0x6002DDF")]
				[Address(RVA = "0x257E120", Offset = "0x257E120", VA = "0x257E120")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002DE0")]
				[Address(RVA = "0x257E150", Offset = "0x257E150", VA = "0x257E150")]
				set
				{
				}
			}

			[Token(Token = "0x17000512")]
			public Color CenterColor
			{
				[Token(Token = "0x6002DE1")]
				[Address(RVA = "0x257E188", Offset = "0x257E188", VA = "0x257E188")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6002DE2")]
				[Address(RVA = "0x257E1D0", Offset = "0x257E1D0", VA = "0x257E1D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000513")]
			public Color MiddleColor
			{
				[Token(Token = "0x6002DE3")]
				[Address(RVA = "0x257E300", Offset = "0x257E300", VA = "0x257E300")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6002DE4")]
				[Address(RVA = "0x257E348", Offset = "0x257E348", VA = "0x257E348")]
				set
				{
				}
			}

			[Token(Token = "0x17000514")]
			public Color OuterColor
			{
				[Token(Token = "0x6002DE5")]
				[Address(RVA = "0x257E478", Offset = "0x257E478", VA = "0x257E478")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6002DE6")]
				[Address(RVA = "0x257E4C0", Offset = "0x257E4C0", VA = "0x257E4C0")]
				set
				{
				}
			}

			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0x257D4E0", Offset = "0x257D4E0", VA = "0x257D4E0")]
			public LightSettings()
			{
			}
		}

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCF4", Offset = "0xBDFCF4")]
		private sealed class <PulseRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProximityLight <>4__this;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46B5")]
			public float pulseDuration;

			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float fadeBegin;

			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F714")]
			public float fadeSpeed;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <pulseTimer>5__2;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DEB")]
				[Address(RVA = "0x257DEE8", Offset = "0x257DEE8", VA = "0x257DEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DED")]
				[Address(RVA = "0x257DFB8", Offset = "0x257DFB8", VA = "0x257DFB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DE8")]
			[Address(RVA = "0x257D3F0", Offset = "0x257D3F0", VA = "0x257D3F0")]
			[DebuggerHidden]
			public <PulseRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0x257D98C", Offset = "0x257D98C", VA = "0x257D98C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0x257D9A0", Offset = "0x257D9A0", VA = "0x257D9A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DEC")]
			[Address(RVA = "0x257DF18", Offset = "0x257DF18", VA = "0x257DF18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001588")]
		private const int proximityLightCount = 2;

		[Token(Token = "0x4001589")]
		private const int proximityLightDataSize = 6;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static List<ProximityLight> activeProximityLights;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F6FC")]
		private static Vector4[] proximityLightData;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int proximityLightDataID;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lastProximityLightUpdate;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LightSettings settings;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46A5")]
		private float pulseTime;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float pulseFade;

		[Token(Token = "0x17000332")]
		public LightSettings Settings
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x257B014", Offset = "0x257B014", VA = "0x257B014")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x257B044", Offset = "0x257B044", VA = "0x257B044")]
			set
			{
			}
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x257B07C", Offset = "0x257B07C", VA = "0x257B07C")]
		public void Pulse(float pulseDuration = 0.2f, float fadeBegin = 0.8f, float fadeSpeed = 10f)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x257B258", Offset = "0x257B258", VA = "0x257B258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x257B64C", Offset = "0x257B64C", VA = "0x257B64C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x257C770", Offset = "0x257C770", VA = "0x257C770")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x257C85C", Offset = "0x257C85C", VA = "0x257C85C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x257B340", Offset = "0x257B340", VA = "0x257B340")]
		private static void AddProximityLight(ProximityLight light)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x257B74C", Offset = "0x257B74C", VA = "0x257B74C")]
		private static void RemoveProximityLight(ProximityLight light)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x257D2E4", Offset = "0x257D2E4", VA = "0x257D2E4")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x257B864", Offset = "0x257B864", VA = "0x257B864")]
		private static void UpdateProximityLights(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x257B124", Offset = "0x257B124", VA = "0x257B124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1EADC", Offset = "0xC1EADC")]
		private IEnumerator PulseRoutine(float pulseDuration, float fadeBegin, float fadeSpeed)
		{
			return null;
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x257D438", Offset = "0x257D438", VA = "0x257D438")]
		public ProximityLight()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public static class StandardShaderUtility
	{
		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string MrtkStandardShaderName;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader mrtkStandardShader;

		[Token(Token = "0x17000333")]
		public static Shader MrtkStandardShader
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x257E5F0", Offset = "0x257E5F0", VA = "0x257E5F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x257E8A0", Offset = "0x257E8A0", VA = "0x257E8A0")]
			private set
			{
			}
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x257E990", Offset = "0x257E990", VA = "0x257E990")]
		public static bool IsUsingMrtkStandardShader(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x257EB88", Offset = "0x257EB88", VA = "0x257EB88")]
		public static bool IsMrtkStandardShader(Shader shader)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDA370", Offset = "0xBDA370")]
	public class CameraEventRouter : MonoBehaviour
	{
		[Token(Token = "0x14000023")]
		public event Action<CameraEventRouter> OnCameraPreRender
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x2572A0C", Offset = "0x2572A0C", VA = "0x2572A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1EB8C", Offset = "0xC1EB8C")]
			add
			{
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x2572B58", Offset = "0x2572B58", VA = "0x2572B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1EBC8", Offset = "0xC1EBC8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x2572CA4", Offset = "0x2572CA4", VA = "0x2572CA4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x2572D84", Offset = "0x2572D84", VA = "0x2572D84")]
		public CameraEventRouter()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200032F")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		public enum Mode
		{
			[Token(Token = "0x4002B3D")]
			Trigger,
			[Token(Token = "0x4002B3E")]
			Replace,
			[Token(Token = "0x4002B3F")]
			Activate,
			[Token(Token = "0x4002B40")]
			Enable,
			[Token(Token = "0x4002B41")]
			Animate,
			[Token(Token = "0x4002B42")]
			Deactivate
		}

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Mode action;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F71C")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject source;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int triggerCount;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool repeatTrigger;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x30BC600", Offset = "0x30BC600", VA = "0x30BC600")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x30BCE50", Offset = "0x30BCE50", VA = "0x30BCE50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x30BCE84", Offset = "0x30BCE84", VA = "0x30BCE84")]
		public ActivateTrigger()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000644")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F72C")]
			public Shader original;

			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Shader replacement;

			[Token(Token = "0x6002DEE")]
			[Address(RVA = "0x30BE268", Offset = "0x30BE268", VA = "0x30BE268")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000645")]
		public class ReplacementList
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0x30BE298", Offset = "0x30BE298", VA = "0x30BE298")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ReplacementList m_ReplacementList;

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x30BCEDC", Offset = "0x30BCEDC", VA = "0x30BCEDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x30BE238", Offset = "0x30BE238", VA = "0x30BE238")]
		public AutoMobileShaderSwitch()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000646")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 value;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Space space;

			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0x30BE664", Offset = "0x30BE664", VA = "0x30BE664")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46D5")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool ignoreTimescale;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9EC")]
		private float m_LastRealTime;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x30BE338", Offset = "0x30BE338", VA = "0x30BE338")]
		private void Start()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x30BE374", Offset = "0x30BE374", VA = "0x30BE374")]
		private void Update()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x30BE634", Offset = "0x30BE634", VA = "0x30BE634")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class CameraRefocus
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera Camera;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46DC")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform Parent;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F734")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Refocus;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x30BE6A8", Offset = "0x30BE6A8", VA = "0x30BE6A8")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x30BE744", Offset = "0x30BE744", VA = "0x30BE744")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x30BE77C", Offset = "0x30BE77C", VA = "0x30BE77C")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x30BE7B4", Offset = "0x30BE7B4", VA = "0x30BE7B4")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x30BEA2C", Offset = "0x30BEA2C", VA = "0x30BEA2C")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class CurveControlledBob
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float HorizontalBobRange;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float VerticalBobRange;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46E4")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F73C")]
		private float m_CyclePositionX;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_CyclePositionY;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_BobBaseInterval;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46EC")]
		private float m_Time;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x30BEAE0", Offset = "0x30BEAE0", VA = "0x30BEAE0")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x30BEC54", Offset = "0x30BEC54", VA = "0x30BEC54")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x30BF090", Offset = "0x30BF090", VA = "0x30BF090")]
		public CurveControlledBob()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD30", Offset = "0xBDFD30")]
		private sealed class <DragObject>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F74C")]
			private int <>1__state;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DragRigidbody <>4__this;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distance;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46FC")]
			private float <oldDrag>5__2;

			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <oldAngularDrag>5__3;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F754")]
			private Camera <mainCamera>5__4;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DF4")]
				[Address(RVA = "0x30C02F4", Offset = "0x30C02F4", VA = "0x30C02F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DF6")]
				[Address(RVA = "0x30C03C4", Offset = "0x30C03C4", VA = "0x30C03C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0x30BFD00", Offset = "0x30BFD00", VA = "0x30BFD00")]
			[DebuggerHidden]
			public <DragObject>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0x30BFD78", Offset = "0x30BFD78", VA = "0x30BFD78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0x30BFD8C", Offset = "0x30BFD8C", VA = "0x30BFD8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DF5")]
			[Address(RVA = "0x30C0324", Offset = "0x30C0324", VA = "0x30C0324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015AC")]
		private const float k_Spring = 50f;

		[Token(Token = "0x40015AD")]
		private const float k_Damper = 5f;

		[Token(Token = "0x40015AE")]
		private const float k_Drag = 10f;

		[Token(Token = "0x40015AF")]
		private const float k_AngularDrag = 5f;

		[Token(Token = "0x40015B0")]
		private const float k_Distance = 0.2f;

		[Token(Token = "0x40015B1")]
		private const bool k_AttachToCenterOfMass = false;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SpringJoint m_SpringJoint;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x30BF464", Offset = "0x30BF464", VA = "0x30BF464")]
		private void Update()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x30BFC1C", Offset = "0x30BFC1C", VA = "0x30BFC1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1EC04", Offset = "0xC1EC04")]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x30BFAC4", Offset = "0x30BFAC4", VA = "0x30BFAC4")]
		private Camera FindCamera()
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x30BFD48", Offset = "0x30BFD48", VA = "0x30BFD48")]
		public DragRigidbody()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Light sunLight;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minHeight;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minShadowDistance;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4704")]
		public float minShadowBias;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxHeight;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F75C")]
		public float maxShadowDistance;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxShadowBias;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float adaptTime;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_SmoothHeight;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470C")]
		private float m_ChangeSpeed;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float m_OriginalStrength;

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x30C03F4", Offset = "0x30C03F4", VA = "0x30C03F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x30C044C", Offset = "0x30C044C", VA = "0x30C044C")]
		private void Update()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x30C0A30", Offset = "0x30C0A30", VA = "0x30C0A30")]
		public DynamicShadowSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class FOVKick
	{
		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD6C", Offset = "0xBDFD6C")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F76C")]
			private int <>1__state;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <t>5__2;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DFA")]
				[Address(RVA = "0x30C19CC", Offset = "0x30C19CC", VA = "0x30C19CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DFC")]
				[Address(RVA = "0x30C1A9C", Offset = "0x30C1A9C", VA = "0x30C1A9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0x30C0E64", Offset = "0x30C0E64", VA = "0x30C0E64")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0x30C1590", Offset = "0x30C1590", VA = "0x30C1590", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0x30C15A4", Offset = "0x30C15A4", VA = "0x30C15A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0x30C19FC", Offset = "0x30C19FC", VA = "0x30C19FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFDA8", Offset = "0xBDFDA8")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x471C")]
			private int <>1__state;

			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F774")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <t>5__2;

			[Token(Token = "0x1700051B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E00")]
				[Address(RVA = "0x30C1490", Offset = "0x30C1490", VA = "0x30C1490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E02")]
				[Address(RVA = "0x30C1560", Offset = "0x30C1560", VA = "0x30C1560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0x30C0F68", Offset = "0x30C0F68", VA = "0x30C0F68")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0x30C1018", Offset = "0x30C1018", VA = "0x30C1018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0x30C102C", Offset = "0x30C102C", VA = "0x30C102C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0x30C14C0", Offset = "0x30C14C0", VA = "0x30C14C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F764")]
		public Camera Camera;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FOVIncrease;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeToIncrease;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4714")]
		public float TimeToDecrease;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x30C0B0C", Offset = "0x30C0B0C", VA = "0x30C0B0C")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x30C0B90", Offset = "0x30C0B90", VA = "0x30C0B90")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x30C0D70", Offset = "0x30C0D70", VA = "0x30C0D70")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x30C0DA8", Offset = "0x30C0DA8", VA = "0x30C0DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1ECB4", Offset = "0xC1ECB4")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x30C0EAC", Offset = "0x30C0EAC", VA = "0x30C0EAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1ED64", Offset = "0xC1ED64")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x30C0FB0", Offset = "0x30C0FB0", VA = "0x30C0FB0")]
		public FOVKick()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA3D4", Offset = "0xBDA3D4")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40015C4")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_FpsAccumulator;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4724")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_CurrentFps;

		[Token(Token = "0x40015C8")]
		private const string display = "{0} FPS";

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text m_Text;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x30C1ACC", Offset = "0x30C1ACC", VA = "0x30C1ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x30C1B94", Offset = "0x30C1B94", VA = "0x30C1B94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x30C1D74", Offset = "0x30C1D74", VA = "0x30C1D74")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform target;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 offset;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x30C1DA4", Offset = "0x30C1DA4", VA = "0x30C1DA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x30C1F18", Offset = "0x30C1F18", VA = "0x30C1F18")]
		public FollowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class LerpControlledBob
	{
		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFDE4", Offset = "0xBDFDE4")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4733")]
			private float <t>5__2;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E06")]
				[Address(RVA = "0x30C265C", Offset = "0x30C265C", VA = "0x30C265C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E08")]
				[Address(RVA = "0x30C272C", Offset = "0x30C272C", VA = "0x30C272C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0x30C2088", Offset = "0x30C2088", VA = "0x30C2088")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E04")]
			[Address(RVA = "0x30C2100", Offset = "0x30C2100", VA = "0x30C2100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E05")]
			[Address(RVA = "0x30C2114", Offset = "0x30C2114", VA = "0x30C2114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E07")]
			[Address(RVA = "0x30C268C", Offset = "0x30C268C", VA = "0x30C268C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x472C")]
		public float BobDuration;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float BobAmount;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9F4")]
		private float m_Offset;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x30C1F9C", Offset = "0x30C1F9C", VA = "0x30C1F9C")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x30C1FCC", Offset = "0x30C1FCC", VA = "0x30C1FCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1EE14", Offset = "0xC1EE14")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x30C20D0", Offset = "0x30C20D0", VA = "0x30C20D0")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE20", Offset = "0xBDFE20")]
		private sealed class <ResetCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x473B")]
			private object <>2__current;

			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float delay;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F78C")]
			public ObjectResetter <>4__this;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E0C")]
				[Address(RVA = "0x30C3004", Offset = "0x30C3004", VA = "0x30C3004", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E0E")]
				[Address(RVA = "0x30C30D4", Offset = "0x30C30D4", VA = "0x30C30D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E09")]
			[Address(RVA = "0x30C2A08", Offset = "0x30C2A08", VA = "0x30C2A08")]
			[DebuggerHidden]
			public <ResetCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0x30C2A80", Offset = "0x30C2A80", VA = "0x30C2A80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0x30C2A94", Offset = "0x30C2A94", VA = "0x30C2A94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0x30C3034", Offset = "0x30C3034", VA = "0x30C3034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 originalPosition;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F784")]
		private Quaternion originalRotation;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Transform> originalStructure;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x30C275C", Offset = "0x30C275C", VA = "0x30C275C")]
		private void Start()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x30C28CC", Offset = "0x30C28CC", VA = "0x30C28CC")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x30C2924", Offset = "0x30C2924", VA = "0x30C2924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1EEC4", Offset = "0xC1EEC4")]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x30C2A50", Offset = "0x30C2A50", VA = "0x30C2A50")]
		public ObjectResetter()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE5C", Offset = "0xBDFE5C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F794")]
			private object <>2__current;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ParticleSystemDestroyer <>4__this;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ParticleSystem[] <systems>5__2;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <stopTime>5__3;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E12")]
				[Address(RVA = "0x30C3B28", Offset = "0x30C3B28", VA = "0x30C3B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E14")]
				[Address(RVA = "0x30C3BF8", Offset = "0x30C3BF8", VA = "0x30C3BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0x30C31C0", Offset = "0x30C31C0", VA = "0x30C31C0")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0x30C3294", Offset = "0x30C3294", VA = "0x30C3294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E11")]
			[Address(RVA = "0x30C32A8", Offset = "0x30C32A8", VA = "0x30C32A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E13")]
			[Address(RVA = "0x30C3B58", Offset = "0x30C3B58", VA = "0x30C3B58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minDuration;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxDuration;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_MaxLifetime;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4743")]
		private bool m_EarlyStop;

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x30C3104", Offset = "0x30C3104", VA = "0x30C3104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1EF74", Offset = "0xC1EF74")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x30C3208", Offset = "0x30C3208", VA = "0x30C3208")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x30C3238", Offset = "0x30C3238", VA = "0x30C3238")]
		public ParticleSystemDestroyer()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x200064D")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x4002B65")]
			Standalone,
			[Token(Token = "0x4002B66")]
			Mobile
		}

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474B")]
		[SerializeField]
		private BuildTargetGroup m_BuildTargetGroup;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject[] m_Content;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F79C")]
		[SerializeField]
		private MonoBehaviour[] m_MonoBehaviours;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_ChildrenOfThisObject;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x30C3C28", Offset = "0x30C3C28", VA = "0x30C3C28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x30C3C58", Offset = "0x30C3C58", VA = "0x30C3C58")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x30C3CD8", Offset = "0x30C3CD8", VA = "0x30C3CD8")]
		private void EnableContent(bool enabled)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x30C4330", Offset = "0x30C4330", VA = "0x30C4330")]
		public PlatformSpecificContent()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class SimpleActivatorMenu : MonoBehaviour
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text camSwitchButton;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7A4")]
		public GameObject[] objects;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_CurrentActiveObject;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x30C4404", Offset = "0x30C4404", VA = "0x30C4404")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x30C44C0", Offset = "0x30C44C0", VA = "0x30C44C0")]
		public void NextCamera()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x30C4714", Offset = "0x30C4714", VA = "0x30C4714")]
		public SimpleActivatorMenu()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 rotationRange;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rotationSpeed;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x475B")]
		public float dampingTime;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7AC")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool relative;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_TargetAngles;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_FollowAngles;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4763")]
		private Vector3 m_FollowVelocity;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x24BCEEC", Offset = "0x24BCEEC", VA = "0x24BCEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x24BCF64", Offset = "0x24BCF64", VA = "0x24BCF64")]
		private void Update()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x24BDAE0", Offset = "0x24BDAE0", VA = "0x24BDAE0")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7B4")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x476B")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x24BDC3C", Offset = "0x24BDC3C", VA = "0x24BDC3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x24BDC50", Offset = "0x24BDC50", VA = "0x24BDC50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x24BE36C", Offset = "0x24BE36C", VA = "0x24BE36C")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x200064E")]
		public enum Action
		{
			[Token(Token = "0x4002B68")]
			Activate,
			[Token(Token = "0x4002B69")]
			Deactivate,
			[Token(Token = "0x4002B6A")]
			Destroy,
			[Token(Token = "0x4002B6B")]
			ReloadLevel,
			[Token(Token = "0x4002B6C")]
			Call
		}

		[Serializable]
		[Token(Token = "0x200064F")]
		public class Entry
		{
			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7C4")]
			public GameObject target;

			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x6002E15")]
			[Address(RVA = "0x24BF470", Offset = "0x24BF470", VA = "0x24BF470")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000650")]
		public class Entries
		{
			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Entry[] entries;

			[Token(Token = "0x6002E16")]
			[Address(RVA = "0x24BEAD8", Offset = "0x24BEAD8", VA = "0x24BEAD8")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE98", Offset = "0xBDFE98")]
		private sealed class <Activate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x477B")]
			private int <>1__state;

			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7CC")]
			public Entry entry;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E1A")]
				[Address(RVA = "0x24BECF8", Offset = "0x24BECF8", VA = "0x24BECF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E1C")]
				[Address(RVA = "0x24BEDC8", Offset = "0x24BEDC8", VA = "0x24BEDC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E17")]
			[Address(RVA = "0x24BE958", Offset = "0x24BE958", VA = "0x24BE958")]
			[DebuggerHidden]
			public <Activate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002E18")]
			[Address(RVA = "0x24BEB08", Offset = "0x24BEB08", VA = "0x24BEB08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E19")]
			[Address(RVA = "0x24BEB1C", Offset = "0x24BEB1C", VA = "0x24BEB1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0x24BED28", Offset = "0x24BED28", VA = "0x24BED28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFED4", Offset = "0xBDFED4")]
		private sealed class <Deactivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Entry entry;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E20")]
				[Address(RVA = "0x24BEFE0", Offset = "0x24BEFE0", VA = "0x24BEFE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E22")]
				[Address(RVA = "0x24BF0B0", Offset = "0x24BF0B0", VA = "0x24BF0B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0x24BE9A0", Offset = "0x24BE9A0", VA = "0x24BE9A0")]
			[DebuggerHidden]
			public <Deactivate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0x24BEDF8", Offset = "0x24BEDF8", VA = "0x24BEDF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0x24BEE0C", Offset = "0x24BEE0C", VA = "0x24BEE0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E21")]
			[Address(RVA = "0x24BF010", Offset = "0x24BF010", VA = "0x24BF010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF10", Offset = "0xBDFF10")]
		private sealed class <ReloadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4783")]
			private int <>1__state;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C9FC")]
			public Entry entry;

			[Token(Token = "0x17000527")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E26")]
				[Address(RVA = "0x24BF370", Offset = "0x24BF370", VA = "0x24BF370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E28")]
				[Address(RVA = "0x24BF440", Offset = "0x24BF440", VA = "0x24BF440", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E23")]
			[Address(RVA = "0x24BE9E8", Offset = "0x24BE9E8", VA = "0x24BE9E8")]
			[DebuggerHidden]
			public <ReloadLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002E24")]
			[Address(RVA = "0x24BF0E0", Offset = "0x24BF0E0", VA = "0x24BF0E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E25")]
			[Address(RVA = "0x24BF0F4", Offset = "0x24BF0F4", VA = "0x24BF0F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0x24BF3A0", Offset = "0x24BF3A0", VA = "0x24BF3A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Entries entries;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x24BE3C8", Offset = "0x24BE3C8", VA = "0x24BE3C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x24BE700", Offset = "0x24BE700", VA = "0x24BE700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F024", Offset = "0xC1F024")]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x24BE7C8", Offset = "0x24BE7C8", VA = "0x24BE7C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F0D4", Offset = "0xC1F0D4")]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x24BE890", Offset = "0x24BE890", VA = "0x24BE890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F184", Offset = "0xC1F184")]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x24BEA30", Offset = "0x24BEA30", VA = "0x24BEA30")]
		public TimedObjectActivator()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_TimeOut;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_DetachChildren;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x24BF4A0", Offset = "0x24BF4A0", VA = "0x24BF4A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x24BF538", Offset = "0x24BF538", VA = "0x24BF538")]
		private void DestroyNow()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x24BF674", Offset = "0x24BF674", VA = "0x24BF674")]
		public TimedObjectDestructor()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000654")]
		public class WaypointList
		{
			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform[] items;

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0x24C1888", Offset = "0x24C1888", VA = "0x24C1888")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x2000655")]
		public struct RoutePoint
		{
			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4792")]
			public Vector3 direction;

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0x24C08B0", Offset = "0x24C08B0", VA = "0x24C08B0")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WaypointList waypointList;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478A")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int numPoints;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7D4")]
		private Vector3[] points;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] distances;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFE074", Offset = "0xBFE074")]
		private float <Length>k__BackingField;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4792")]
		private int p0n;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int p1n;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7DC")]
		private int p2n;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int p3n;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float i;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 P0;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x479A")]
		private Vector3 P1;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 P2;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7E4")]
		private Vector3 P3;

		[Token(Token = "0x17000334")]
		public float Length
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x24BF6B8", Offset = "0x24BF6B8", VA = "0x24BF6B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F234", Offset = "0xC1F234")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x24BF6E8", Offset = "0x24BF6E8", VA = "0x24BF6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F270", Offset = "0xC1F270")]
			private set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x24BF720", Offset = "0x24BF720", VA = "0x24BF720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x24BF764", Offset = "0x24BF764", VA = "0x24BF764")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x24BFE20", Offset = "0x24BFE20", VA = "0x24BFE20")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x24C0044", Offset = "0x24C0044", VA = "0x24C0044")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x24C0950", Offset = "0x24C0950", VA = "0x24C0950")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x24BF80C", Offset = "0x24BF80C", VA = "0x24BF80C")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x24C1134", Offset = "0x24C1134", VA = "0x24C1134")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x24C1778", Offset = "0x24C1778", VA = "0x24C1778")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x24C116C", Offset = "0x24C116C", VA = "0x24C116C")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x24C17B0", Offset = "0x24C17B0", VA = "0x24C17B0")]
		public WaypointCircuit()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x2000656")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4002B7F")]
			SmoothAlongRoute,
			[Token(Token = "0x4002B80")]
			PointToPoint
		}

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7EC")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47AA")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFE254", Offset = "0xBFE254")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFE290", Offset = "0xBFE290")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFE2CC", Offset = "0xBFE2CC")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform target;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47B2")]
		private float progressDistance;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int progressNum;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F7FC")]
		private Vector3 lastPosition;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float speed;

		[Token(Token = "0x17000336")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x24C1928", Offset = "0x24C1928", VA = "0x24C1928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F2AC", Offset = "0xC1F2AC")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x24C1950", Offset = "0x24C1950", VA = "0x24C1950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F2E8", Offset = "0xC1F2E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x24C19BC", Offset = "0x24C19BC", VA = "0x24C19BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F324", Offset = "0xC1F324")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x24C19E4", Offset = "0x24C19E4", VA = "0x24C19E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F360", Offset = "0xC1F360")]
			private set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x24C1A50", Offset = "0x24C1A50", VA = "0x24C1A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F39C", Offset = "0xC1F39C")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x24C1A78", Offset = "0x24C1A78", VA = "0x24C1A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F3D8", Offset = "0xC1F3D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x24C1AE4", Offset = "0x24C1AE4", VA = "0x24C1AE4")]
		private void Start()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x24C1C8C", Offset = "0x24C1C8C", VA = "0x24C1C8C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x24C1E50", Offset = "0x24C1E50", VA = "0x24C1E50")]
		private void Update()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x24C2B90", Offset = "0x24C2B90", VA = "0x24C2B90")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x24C2EF4", Offset = "0x24C2EF4", VA = "0x24C2EF4")]
		public WaypointProgressTracker()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA484", Offset = "0xBDA484")]
	public class AfterburnerPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float effectAngle;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F804")]
		public float effectWidth;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float effectDistance;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float force;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Collider[] m_Cols;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C2")]
		private SphereCollider m_Sphere;

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x217AEC0", Offset = "0x217AEC0", VA = "0x217AEC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x217AF7C", Offset = "0x217AF7C", VA = "0x217AF7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x217B8F8", Offset = "0x217B8F8", VA = "0x217B8F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x217C428", Offset = "0x217C428", VA = "0x217C428")]
		public AfterburnerPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class ExplosionFireAndDebris : MonoBehaviour
	{
		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF4C", Offset = "0xBDFF4C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47CA")]
			private object <>2__current;

			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public ExplosionFireAndDebris <>4__this;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F814")]
			private float <multiplier>5__2;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E2E")]
				[Address(RVA = "0x217D710", Offset = "0x217D710", VA = "0x217D710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E30")]
				[Address(RVA = "0x217D7E0", Offset = "0x217D7E0", VA = "0x217D7E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0x217C564", Offset = "0x217C564", VA = "0x217C564")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0x217C890", Offset = "0x217C890", VA = "0x217C890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0x217C8A4", Offset = "0x217C8A4", VA = "0x217C8A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0x217D740", Offset = "0x217D740", VA = "0x217D740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform[] debrisPrefabs;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F80C")]
		public Transform firePrefab;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numDebrisPieces;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numFires;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x217C4A8", Offset = "0x217C4A8", VA = "0x217C4A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F414", Offset = "0xC1F414")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x217C5AC", Offset = "0x217C5AC", VA = "0x217C5AC")]
		private void AddFire(Transform t, Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x217C860", Offset = "0x217C860", VA = "0x217C860")]
		public ExplosionFireAndDebris()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF88", Offset = "0xBDFF88")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47D2")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E34")]
				[Address(RVA = "0x217E090", Offset = "0x217E090", VA = "0x217E090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E36")]
				[Address(RVA = "0x217E160", Offset = "0x217E160", VA = "0x217E160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0x217D8CC", Offset = "0x217D8CC", VA = "0x217D8CC")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002E32")]
			[Address(RVA = "0x217D958", Offset = "0x217D958", VA = "0x217D958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E33")]
			[Address(RVA = "0x217D96C", Offset = "0x217D96C", VA = "0x217D96C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0x217E0C0", Offset = "0x217E0C0", VA = "0x217E0C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float explosionForce;

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x217D810", Offset = "0x217D810", VA = "0x217D810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F4C4", Offset = "0xC1F4C4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x217D914", Offset = "0x217D914", VA = "0x217D914")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class Explosive : MonoBehaviour
	{
		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFC4", Offset = "0xBDFFC4")]
		private sealed class <OnCollisionEnter>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA04")]
			private int <>1__state;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Explosive <>4__this;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Collision col;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E3A")]
				[Address(RVA = "0x217EB08", Offset = "0x217EB08", VA = "0x217EB08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E3C")]
				[Address(RVA = "0x217EBD8", Offset = "0x217EBD8", VA = "0x217EBD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E37")]
			[Address(RVA = "0x217E300", Offset = "0x217E300", VA = "0x217E300")]
			[DebuggerHidden]
			public <OnCollisionEnter>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002E38")]
			[Address(RVA = "0x217E3FC", Offset = "0x217E3FC", VA = "0x217E3FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E39")]
			[Address(RVA = "0x217E410", Offset = "0x217E410", VA = "0x217E410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0x217EB38", Offset = "0x217EB38", VA = "0x217EB38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform explosionPrefab;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F81C")]
		public float detonationImpactVelocity;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sizeMultiplier;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool reset;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float resetTimeDelay;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47DA")]
		private bool m_Exploded;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ObjectResetter m_ObjectResetter;

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x217E190", Offset = "0x217E190", VA = "0x217E190")]
		private void Start()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x217E21C", Offset = "0x217E21C", VA = "0x217E21C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F574", Offset = "0xC1F574")]
		private IEnumerator OnCollisionEnter(Collision col)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x217E348", Offset = "0x217E348", VA = "0x217E348")]
		public void Reset()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x217E378", Offset = "0x217E378", VA = "0x217E378")]
		public Explosive()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class ExtinguishableParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47E1")]
		public float multiplier;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ParticleSystem[] m_Systems;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x217EC08", Offset = "0x217EC08", VA = "0x217EC08")]
		private void Start()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x217EC94", Offset = "0x217EC94", VA = "0x217EC94")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x217EDF0", Offset = "0x217EDF0", VA = "0x217EDF0")]
		public ExtinguishableParticleSystem()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class FireLight : MonoBehaviour
	{
		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F824")]
		private float m_Rnd;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Burning;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light m_Light;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x217EE34", Offset = "0x217EE34", VA = "0x217EE34")]
		private void Start()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x217EEFC", Offset = "0x217EEFC", VA = "0x217EEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x217F48C", Offset = "0x217F48C", VA = "0x217F48C")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x217F4F4", Offset = "0x217F4F4", VA = "0x217F4F4")]
		public FireLight()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class Hose : MonoBehaviour
	{
		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxPower;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47E9")]
		public float minPower;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float changeSpeed;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F82C")]
		public ParticleSystem[] hoseWaterSystems;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer systemRenderer;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Power;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x217F538", Offset = "0x217F538", VA = "0x217F538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x217FA74", Offset = "0x217FA74", VA = "0x217FA74")]
		public Hose()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float multiplier;

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x217FADC", Offset = "0x217FADC", VA = "0x217FADC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x217FE20", Offset = "0x217FE20", VA = "0x217FE20")]
		public ParticleSystemMultiplier()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class SmokeParticles : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47F1")]
		public AudioClip[] extinguishSounds;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x217FE64", Offset = "0x217FE64", VA = "0x217FE64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x217FFA0", Offset = "0x217FFA0", VA = "0x217FFA0")]
		public SmokeParticles()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class WaterHoseParticles : MonoBehaviour
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static float lastSoundTime;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F834")]
		public float force;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ParticleCollisionEvent> m_CollisionEvents;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x217FFD0", Offset = "0x217FFD0", VA = "0x217FFD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x218005C", Offset = "0x218005C", VA = "0x218005C")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x21804F4", Offset = "0x21804F4", VA = "0x21804F4")]
		public WaterHoseParticles()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x200034E")]
	[ExecuteInEditMode]
	public class WaterBasic : MonoBehaviour
	{
		[Token(Token = "0x600178B")]
		[Address(RVA = "0x24CBF00", Offset = "0x24CBF00", VA = "0x24CBF00")]
		private void Update()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x24CC378", Offset = "0x24CC378", VA = "0x24CC378")]
		public WaterBasic()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA570", Offset = "0xBDA570")]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x24C2FA0", Offset = "0x24C2FA0", VA = "0x24C2FA0")]
		public void Awake()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x24C3008", Offset = "0x24C3008", VA = "0x24C3008")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x24C30A8", Offset = "0x24C30A8", VA = "0x24C30A8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x24C3148", Offset = "0x24C3148", VA = "0x24C3148")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA63C", Offset = "0xBDA63C")]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6001791")]
		[Address(RVA = "0x24C3178", Offset = "0x24C3178", VA = "0x24C3178")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class MeshContainer
	{
		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47F9")]
		public Vector3[] vertices;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3[] normals;

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x24C31A8", Offset = "0x24C31A8", VA = "0x24C31A8")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x24C324C", Offset = "0x24C324C", VA = "0x24C324C")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000352")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA708", Offset = "0xBDA708")]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F83C")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool reflectSkybox;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color clearColor;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string reflectionSampler;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4801")]
		public float clipPlaneOffset;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F844")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_SharedMaterial;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x24C32D4", Offset = "0x24C32D4", VA = "0x24C32D4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x24C3470", Offset = "0x24C3470", VA = "0x24C3470")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x24C3AC4", Offset = "0x24C3AC4", VA = "0x24C3AC4")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x24C3C0C", Offset = "0x24C3C0C", VA = "0x24C3C0C")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x24C3DDC", Offset = "0x24C3DDC", VA = "0x24C3DDC")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x24C5360", Offset = "0x24C5360", VA = "0x24C5360")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x24C541C", Offset = "0x24C541C", VA = "0x24C541C")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x24C5638", Offset = "0x24C5638", VA = "0x24C5638")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x24C56D8", Offset = "0x24C56D8", VA = "0x24C56D8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x24C4104", Offset = "0x24C4104", VA = "0x24C4104")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x24C5778", Offset = "0x24C5778", VA = "0x24C5778")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x24C6118", Offset = "0x24C6118", VA = "0x24C6118")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x24C5854", Offset = "0x24C5854", VA = "0x24C5854")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x24C651C", Offset = "0x24C651C", VA = "0x24C651C")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x24C5CE8", Offset = "0x24C5CE8", VA = "0x24C5CE8")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x24C65A4", Offset = "0x24C65A4", VA = "0x24C65A4")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA7D4", Offset = "0xBDA7D4")]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform specularLight;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4809")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x24C6660", Offset = "0x24C6660", VA = "0x24C6660")]
		public void Start()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x24C67F4", Offset = "0x24C67F4", VA = "0x24C67F4")]
		public void Update()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x24C6BE4", Offset = "0x24C6BE4", VA = "0x24C6BE4")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x2000354")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x200065A")]
		public enum WaterMode
		{
			[Token(Token = "0x4002B8D")]
			Simple,
			[Token(Token = "0x4002B8E")]
			Reflective,
			[Token(Token = "0x4002B8F")]
			Refractive
		}

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public WaterMode waterMode;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F84C")]
		public bool disablePixelLights;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int textureSize;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4811")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F854")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4819")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F85C")]
		private static bool s_InsideWater;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x24C6C14", Offset = "0x24C6C14", VA = "0x24C6C14")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x24CA81C", Offset = "0x24CA81C", VA = "0x24CA81C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x24CB130", Offset = "0x24CB130", VA = "0x24CB130")]
		private void Update()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x24C9884", Offset = "0x24C9884", VA = "0x24C9884")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x24C8630", Offset = "0x24C8630", VA = "0x24C8630")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x24C85AC", Offset = "0x24C85AC", VA = "0x24C85AC")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x24C82AC", Offset = "0x24C82AC", VA = "0x24C82AC")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x24CA3EC", Offset = "0x24CA3EC", VA = "0x24CA3EC")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x24C9E8C", Offset = "0x24C9E8C", VA = "0x24C9E8C")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x24CB6B0", Offset = "0x24CB6B0", VA = "0x24CB6B0")]
		public Water()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public enum WaterQuality
	{
		[Token(Token = "0x400164F")]
		High = 2,
		[Token(Token = "0x4001650")]
		Medium = 1,
		[Token(Token = "0x4001651")]
		Low = 0
	}
	[Token(Token = "0x2000356")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material sharedMaterial;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4829")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool edgeBlend;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x24CB8C4", Offset = "0x24CB8C4", VA = "0x24CB8C4")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x24CBC0C", Offset = "0x24CBC0C", VA = "0x24CBC0C")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x24CBD8C", Offset = "0x24CBD8C", VA = "0x24CBD8C")]
		public void Update()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x24CBEA4", Offset = "0x24CBEA4", VA = "0x24CBEA4")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F86C")]
		public PlanarReflection reflection;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WaterBase waterBase;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x24CC3A8", Offset = "0x24CC3A8", VA = "0x24CC3A8")]
		public void Start()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x24CC3D8", Offset = "0x24CC3D8", VA = "0x24CC3D8")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x24CC824", Offset = "0x24CC824", VA = "0x24CC824")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x24CCA50", Offset = "0x24CCA50", VA = "0x24CCA50")]
		public WaterTile()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000358")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string axisName;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float axisValue;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4831")]
		public float responseSpeed;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA0C")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x21725D0", Offset = "0x21725D0", VA = "0x21725D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x2172BE0", Offset = "0x2172BE0", VA = "0x2172BE0")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x2172FCC", Offset = "0x2172FCC", VA = "0x2172FCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x217310C", Offset = "0x217310C", VA = "0x217310C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x2173358", Offset = "0x2173358", VA = "0x2173358", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x21734DC", Offset = "0x21734DC", VA = "0x21734DC")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x21735A8", Offset = "0x21735A8", VA = "0x21735A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x21735BC", Offset = "0x21735BC", VA = "0x21735BC")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x21737C4", Offset = "0x21737C4", VA = "0x21737C4")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x21739CC", Offset = "0x21739CC", VA = "0x21739CC")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x2173BD4", Offset = "0x2173BD4", VA = "0x2173BD4")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x2173DDC", Offset = "0x2173DDC", VA = "0x2173DDC")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x2173FE4", Offset = "0x2173FE4", VA = "0x2173FE4")]
		public void Update()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x2173FF8", Offset = "0x2173FF8", VA = "0x2173FF8")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200065B")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4002B91")]
			Hardware,
			[Token(Token = "0x4002B92")]
			Touch
		}

		[Token(Token = "0x200065C")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC152EC", Offset = "0xC152EC")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4840")]
			private float m_Value;

			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC15328", Offset = "0xC15328")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x1700052F")]
			public string name
			{
				[Token(Token = "0x6002E3D")]
				[Address(RVA = "0x2176068", Offset = "0x2176068", VA = "0x2176068")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC32454", Offset = "0xC32454")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E3E")]
				[Address(RVA = "0x2176098", Offset = "0x2176098", VA = "0x2176098")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC32490", Offset = "0xC32490")]
				private set
				{
				}
			}

			[Token(Token = "0x17000530")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002E3F")]
				[Address(RVA = "0x21760D0", Offset = "0x21760D0", VA = "0x21760D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC324CC", Offset = "0xC324CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E40")]
				[Address(RVA = "0x2176114", Offset = "0x2176114", VA = "0x2176114")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC32508", Offset = "0xC32508")]
				private set
				{
				}
			}

			[Token(Token = "0x17000531")]
			public float GetValue
			{
				[Token(Token = "0x6002E45")]
				[Address(RVA = "0x2176218", Offset = "0x2176218", VA = "0x2176218")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000532")]
			public float GetValueRaw
			{
				[Token(Token = "0x6002E46")]
				[Address(RVA = "0x2176248", Offset = "0x2176248", VA = "0x2176248")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0x2172970", Offset = "0x2172970", VA = "0x2172970")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6002E42")]
			[Address(RVA = "0x2176160", Offset = "0x2176160", VA = "0x2176160")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002E43")]
			[Address(RVA = "0x2173014", Offset = "0x2173014", VA = "0x2173014")]
			public void Remove()
			{
			}

			[Token(Token = "0x6002E44")]
			[Address(RVA = "0x21761E0", Offset = "0x21761E0", VA = "0x21761E0")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200065D")]
		public class VirtualButton
		{
			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4F87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC15364", Offset = "0xC15364")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC153A0", Offset = "0xC153A0")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4848")]
			private bool m_Pressed;

			[Token(Token = "0x17000533")]
			public string name
			{
				[Token(Token = "0x6002E47")]
				[Address(RVA = "0x2176278", Offset = "0x2176278", VA = "0x2176278")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC32544", Offset = "0xC32544")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E48")]
				[Address(RVA = "0x21762A8", Offset = "0x21762A8", VA = "0x21762A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC32580", Offset = "0xC32580")]
				private set
				{
				}
			}

			[Token(Token = "0x17000534")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002E49")]
				[Address(RVA = "0x21762E0", Offset = "0x21762E0", VA = "0x21762E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC325BC", Offset = "0xC325BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E4A")]
				[Address(RVA = "0x2176324", Offset = "0x2176324", VA = "0x2176324")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC325F8", Offset = "0xC325F8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000535")]
			public bool GetButton
			{
				[Token(Token = "0x6002E50")]
				[Address(RVA = "0x2176614", Offset = "0x2176614", VA = "0x2176614")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000536")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6002E51")]
				[Address(RVA = "0x2176658", Offset = "0x2176658", VA = "0x2176658")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000537")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6002E52")]
				[Address(RVA = "0x21766E8", Offset = "0x21766E8", VA = "0x21766E8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0x2176370", Offset = "0x2176370", VA = "0x2176370")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0x21763B8", Offset = "0x21763B8", VA = "0x21763B8")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x2176458", Offset = "0x2176458", VA = "0x2176458")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0x21764CC", Offset = "0x21764CC", VA = "0x21764CC")]
			public void Released()
			{
			}

			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0x217651C", Offset = "0x217651C", VA = "0x217651C")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4838")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000339")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x2175A04", Offset = "0x2175A04", VA = "0x2175A04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x2174028", Offset = "0x2174028", VA = "0x2174028")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x2174198", Offset = "0x2174198", VA = "0x2174198")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x2172844", Offset = "0x2172844", VA = "0x2172844")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x2174420", Offset = "0x2174420", VA = "0x2174420")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x21729B8", Offset = "0x21729B8", VA = "0x21729B8")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x21748B0", Offset = "0x21748B0", VA = "0x21748B0")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x2174C68", Offset = "0x2174C68", VA = "0x2174C68")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x2174EF0", Offset = "0x2174EF0", VA = "0x2174EF0")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x2172AC8", Offset = "0x2172AC8", VA = "0x2172AC8")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x2175210", Offset = "0x2175210", VA = "0x2175210")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x2175450", Offset = "0x2175450", VA = "0x2175450")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x2175310", Offset = "0x2175310", VA = "0x2175310")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x2175550", Offset = "0x2175550", VA = "0x2175550")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x2175680", Offset = "0x2175680", VA = "0x2175680")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x21757B0", Offset = "0x21757B0", VA = "0x21757B0")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x21736B0", Offset = "0x21736B0", VA = "0x21736B0")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x21738B8", Offset = "0x21738B8", VA = "0x21738B8")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x2173AC0", Offset = "0x2173AC0", VA = "0x2173AC0")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x2173ED0", Offset = "0x2173ED0", VA = "0x2173ED0")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x2173CC8", Offset = "0x2173CC8", VA = "0x2173CC8")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x21758E0", Offset = "0x21758E0", VA = "0x21758E0")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x2175AE0", Offset = "0x2175AE0", VA = "0x2175AE0")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x2175CB8", Offset = "0x2175CB8", VA = "0x2175CB8")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x2175E90", Offset = "0x2175E90", VA = "0x2175E90")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string axis;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x217677C", Offset = "0x217677C", VA = "0x217677C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x2176790", Offset = "0x2176790", VA = "0x2176790")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x21768C0", Offset = "0x21768C0", VA = "0x21768C0")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200065E")]
		public enum AxisOption
		{
			[Token(Token = "0x4002B9C")]
			Both,
			[Token(Token = "0x4002B9D")]
			OnlyHorizontal,
			[Token(Token = "0x4002B9E")]
			OnlyVertical
		}

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F884")]
		public int MovementRange;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string horizontalAxisName;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string verticalAxisName;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4850")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool m_UseX;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F88C")]
		private bool m_UseY;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x21768F0", Offset = "0x21768F0", VA = "0x21768F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x2176CE8", Offset = "0x2176CE8", VA = "0x2176CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x2176D60", Offset = "0x2176D60", VA = "0x2176D60")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x2176920", Offset = "0x2176920", VA = "0x2176920")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x2177040", Offset = "0x2177040", VA = "0x2177040", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x217752C", Offset = "0x217752C", VA = "0x217752C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x21775E4", Offset = "0x21775E4", VA = "0x21775E4", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x21775FC", Offset = "0x21775FC", VA = "0x21775FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x21776A4", Offset = "0x21776A4", VA = "0x21776A4")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x217775C", Offset = "0x217775C", VA = "0x217775C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x21777C4", Offset = "0x21777C4", VA = "0x21777C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x217778C", Offset = "0x217778C", VA = "0x217778C")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x217797C", Offset = "0x217797C", VA = "0x217797C")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x2177D6C", Offset = "0x2177D6C", VA = "0x2177D6C")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x200065F")]
		public enum AxisOptions
		{
			[Token(Token = "0x4002BA0")]
			ForwardAxis,
			[Token(Token = "0x4002BA1")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000660")]
		public class AxisMapping
		{
			[Token(Token = "0x2000844")]
			public enum MappingType
			{
				[Token(Token = "0x40032F3")]
				NamedAxis,
				[Token(Token = "0x40032F4")]
				MousePositionX,
				[Token(Token = "0x40032F5")]
				MousePositionY,
				[Token(Token = "0x40032F6")]
				MousePositionZ
			}

			[Token(Token = "0x4002BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MappingType type;

			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4868")]
			public string axisName;

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0x2179DA8", Offset = "0x2179DA8", VA = "0x2179DA8")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AxisMapping mapping;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fullTiltAngle;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4860")]
		public float centreAngleOffset;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x217957C", Offset = "0x217957C", VA = "0x217957C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x21796F8", Offset = "0x21796F8", VA = "0x21796F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x2179D1C", Offset = "0x2179D1C", VA = "0x2179D1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x2179D64", Offset = "0x2179D64", VA = "0x2179D64")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDA990", Offset = "0xBDA990")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000661")]
		public enum AxisOption
		{
			[Token(Token = "0x4002BA5")]
			Both,
			[Token(Token = "0x4002BA6")]
			OnlyHorizontal,
			[Token(Token = "0x4002BA7")]
			OnlyVertical
		}

		[Token(Token = "0x2000662")]
		public enum ControlStyle
		{
			[Token(Token = "0x4002BA9")]
			Absolute,
			[Token(Token = "0x4002BAA")]
			Relative,
			[Token(Token = "0x4002BAB")]
			Swipe
		}

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4870")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8AC")]
		public string horizontalAxisName;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string verticalAxisName;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Xsensitivity;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Ysensitivity;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4878")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8B4")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_UseX;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_UseY;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4880")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool m_Dragging;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8BC")]
		private int m_Id;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_Center;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image m_Image;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x2179DD8", Offset = "0x2179DD8", VA = "0x2179DD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x217A1D0", Offset = "0x217A1D0", VA = "0x217A1D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x2179E08", Offset = "0x2179E08", VA = "0x2179E08")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x217A2B0", Offset = "0x217A2B0", VA = "0x217A2B0")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x217A3D4", Offset = "0x217A3D4", VA = "0x217A3D4", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x217A544", Offset = "0x217A544", VA = "0x217A544")]
		private void Update()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x217A99C", Offset = "0x217A99C", VA = "0x217A99C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x217AA94", Offset = "0x217AA94", VA = "0x217AA94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x217AD38", Offset = "0x217AD38", VA = "0x217AD38")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFE308", Offset = "0xBFE308")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x1700033A")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x217AE20", Offset = "0x217AE20", VA = "0x217AE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F624", Offset = "0xC1F624")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x217AE60", Offset = "0x217AE60", VA = "0x217AE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F660", Offset = "0xC1F660")]
			private set
			{
			}
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x2174364", Offset = "0x2174364", VA = "0x2174364")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x217454C", Offset = "0x217454C", VA = "0x217454C")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x2174608", Offset = "0x2174608", VA = "0x2174608")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x21749C0", Offset = "0x21749C0", VA = "0x21749C0")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x2174DFC", Offset = "0x2174DFC", VA = "0x2174DFC")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x2175000", Offset = "0x2175000", VA = "0x2175000")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x21750F4", Offset = "0x21750F4", VA = "0x21750F4")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x2175BF0", Offset = "0x2175BF0", VA = "0x2175BF0")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x2175DC8", Offset = "0x2175DC8", VA = "0x2175DC8")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x2175FA0", Offset = "0x2175FA0", VA = "0x2175FA0")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600180A")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600180B")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x600180C")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600180D")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x600180E")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x600180F")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001810")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001811")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001812")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001813")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001814")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x2178E00", Offset = "0x2178E00", VA = "0x2178E00")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000361")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001816")]
		[Address(RVA = "0x2177D9C", Offset = "0x2177D9C", VA = "0x2177D9C")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x2177EBC", Offset = "0x2177EBC", VA = "0x2177EBC")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x2177FDC", Offset = "0x2177FDC", VA = "0x2177FDC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x2178120", Offset = "0x2178120", VA = "0x2178120", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x2178250", Offset = "0x2178250", VA = "0x2178250", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x2178380", Offset = "0x2178380", VA = "0x2178380", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x21784C0", Offset = "0x21784C0", VA = "0x21784C0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x2178600", Offset = "0x2178600", VA = "0x2178600", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x217873C", Offset = "0x217873C", VA = "0x217873C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x217887C", Offset = "0x217887C", VA = "0x217887C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x2178A3C", Offset = "0x2178A3C", VA = "0x2178A3C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x2178BFC", Offset = "0x2178BFC", VA = "0x2178BFC", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x2178DBC", Offset = "0x2178DBC", VA = "0x2178DBC", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x2174138", Offset = "0x2174138", VA = "0x2174138")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001824")]
		[Address(RVA = "0x2178F40", Offset = "0x2178F40", VA = "0x2178F40", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x2178FE0", Offset = "0x2178FE0", VA = "0x2178FE0", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x2179038", Offset = "0x2179038", VA = "0x2179038", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x2179090", Offset = "0x2179090", VA = "0x2179090", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x21790E8", Offset = "0x21790E8", VA = "0x21790E8", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x21791A0", Offset = "0x21791A0", VA = "0x21791A0", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x2179258", Offset = "0x2179258", VA = "0x2179258", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x2179310", Offset = "0x2179310", VA = "0x2179310", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x21793C8", Offset = "0x21793C8", VA = "0x21793C8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x2179480", Offset = "0x2179480", VA = "0x2179480", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x217953C", Offset = "0x217953C", VA = "0x217953C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x2174168", Offset = "0x2174168", VA = "0x2174168")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000363")]
	public enum AAMode
	{
		[Token(Token = "0x4001687")]
		FXAA2,
		[Token(Token = "0x4001688")]
		FXAA3Console,
		[Token(Token = "0x4001689")]
		FXAA1PresetA,
		[Token(Token = "0x400168A")]
		FXAA1PresetB,
		[Token(Token = "0x400168B")]
		NFAA,
		[Token(Token = "0x400168C")]
		SSAA,
		[Token(Token = "0x400168D")]
		DLAA
	}
	[Token(Token = "0x2000364")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDAA40", Offset = "0xBDAA40")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAA40", Offset = "0xBDAA40")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8D4")]
		public AAMode mode;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool showGeneratedNormals;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offsetScale;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float blurRadius;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48A7")]
		public float edgeThresholdMin;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float edgeThreshold;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8DC")]
		public float edgeSharpness;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool dlaaSharp;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader ssaaShader;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material ssaa;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48AF")]
		public Shader dlaaShader;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material dlaa;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8E4")]
		public Shader nfaaShader;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material nfaa;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48B7")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8EC")]
		public Shader shaderFXAAII;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material materialFXAAII;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material materialFXAAIII;

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x21805BC", Offset = "0x21805BC", VA = "0x21805BC")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x218078C", Offset = "0x218078C", VA = "0x218078C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x2180A70", Offset = "0x2180A70", VA = "0x2180A70")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x2181A9C", Offset = "0x2181A9C", VA = "0x2181A9C")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x2000365")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDAB54", Offset = "0xBDAB54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAB54", Offset = "0xBDAB54")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000663")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4002BAD")]
			Ghosting,
			[Token(Token = "0x4002BAE")]
			Anamorphic,
			[Token(Token = "0x4002BAF")]
			Combined
		}

		[Token(Token = "0x2000664")]
		public enum TweakMode
		{
			[Token(Token = "0x4002BB1")]
			Basic,
			[Token(Token = "0x4002BB2")]
			Complex
		}

		[Token(Token = "0x2000665")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4002BB4")]
			Auto,
			[Token(Token = "0x4002BB5")]
			On,
			[Token(Token = "0x4002BB6")]
			Off
		}

		[Token(Token = "0x2000666")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4002BB8")]
			Screen,
			[Token(Token = "0x4002BB9")]
			Add
		}

		[Token(Token = "0x2000667")]
		public enum BloomQuality
		{
			[Token(Token = "0x4002BBB")]
			Cheap,
			[Token(Token = "0x4002BBC")]
			High
		}

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48BF")]
		public TweakMode tweakMode;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8F4")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool doHdr;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sepBlurSpread;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BloomQuality quality;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C7")]
		public float bloomIntensity;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float bloomThreshold;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F8FC")]
		public Color bloomThresholdColor;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int bloomBlurIterations;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float flareRotation;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48CF")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float hollyStretchWidth;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F904")]
		public float lensflareIntensity;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensflareThreshold;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensFlareSaturation;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color flareColorA;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48D7")]
		public Color flareColorB;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color flareColorC;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F90C")]
		public Color flareColorD;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48DF")]
		public Shader screenBlendShader;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material screenBlend;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA1C")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x2181B54", Offset = "0x2181B54", VA = "0x2181B54", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x2181CD8", Offset = "0x2181CD8", VA = "0x2181CD8")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x2184CCC", Offset = "0x2184CCC", VA = "0x2184CCC")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x2184734", Offset = "0x2184734", VA = "0x2184734")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x2184004", Offset = "0x2184004", VA = "0x2184004")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x2183E9C", Offset = "0x2183E9C", VA = "0x2183E9C")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x2184250", Offset = "0x2184250", VA = "0x2184250")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x2184E44", Offset = "0x2184E44", VA = "0x2184E44")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x40016C3")]
		Ghosting,
		[Token(Token = "0x40016C4")]
		Anamorphic,
		[Token(Token = "0x40016C5")]
		Combined
	}
	[Token(Token = "0x2000367")]
	public enum TweakMode34
	{
		[Token(Token = "0x40016C7")]
		Basic,
		[Token(Token = "0x40016C8")]
		Complex
	}
	[Token(Token = "0x2000368")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x40016CA")]
		Auto,
		[Token(Token = "0x40016CB")]
		On,
		[Token(Token = "0x40016CC")]
		Off
	}
	[Token(Token = "0x2000369")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x40016CE")]
		Screen,
		[Token(Token = "0x40016CF")]
		Add
	}
	[Token(Token = "0x200036A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDAC68", Offset = "0xBDAC68")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAC68", Offset = "0xBDAC68")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F93C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool doHdr;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sepBlurSpread;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4916")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float bloomIntensity;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F944")]
		public float bloomThreshold;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int bloomBlurIterations;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lensflares;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x491E")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float hollyStretchWidth;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F94C")]
		public float lensflareIntensity;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensflareThreshold;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color flareColorA;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color flareColorB;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4926")]
		public Color flareColorC;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color flareColorD;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F954")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader vignetteShader;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x492E")]
		private Material vignetteMaterial;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader separableBlurShader;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F95C")]
		private Material separableBlurMaterial;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader screenBlendShader;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4936")]
		private Material screenBlend;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA24")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x2185088", Offset = "0x2185088", VA = "0x2185088", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x2185344", Offset = "0x2185344", VA = "0x2185344")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x2187944", Offset = "0x2187944", VA = "0x2187944")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x21873B8", Offset = "0x21873B8", VA = "0x21873B8")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x2186CE0", Offset = "0x2186CE0", VA = "0x2186CE0")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x21870D8", Offset = "0x21870D8", VA = "0x21870D8")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x2187A9C", Offset = "0x2187A9C", VA = "0x2187A9C")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDAD7C", Offset = "0xBDAD7C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAD7C", Offset = "0xBDAD7C")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000668")]
		public enum Resolution
		{
			[Token(Token = "0x4002BBE")]
			Low,
			[Token(Token = "0x4002BBF")]
			High
		}

		[Token(Token = "0x2000669")]
		public enum BlurType
		{
			[Token(Token = "0x4002BC1")]
			Standard,
			[Token(Token = "0x4002BC2")]
			Sgx
		}

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE344", Offset = "0xBFE344")]
		public float threshold;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x493D")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE38C", Offset = "0xBFE38C")]
		public float intensity;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE3D4", Offset = "0xBFE3D4")]
		public float blurSize;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F964")]
		private Resolution resolution;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE420", Offset = "0xBFE420")]
		public int blurIterations;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BlurType blurType;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader fastBloomShader;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4945")]
		private Material fastBloomMaterial;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x308E260", Offset = "0x308E260", VA = "0x308E260", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x308EE7C", Offset = "0x308EE7C", VA = "0x308EE7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x308F008", Offset = "0x308F008", VA = "0x308F008")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x308FA88", Offset = "0x308FA88", VA = "0x308FA88")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x200036C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAE90", Offset = "0xBDAE90")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE46C", Offset = "0xBFE46C")]
		public int iterations;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F974")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE4B4", Offset = "0xBFE4B4")]
		public float blurSpread;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader blurShader;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x1700033B")]
		protected Material material
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x308FB6C", Offset = "0x308FB6C", VA = "0x308FB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x308FE68", Offset = "0x308FE68", VA = "0x308FE68")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x30900E0", Offset = "0x30900E0", VA = "0x30900E0")]
		protected void Start()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x3090298", Offset = "0x3090298", VA = "0x3090298")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x309075C", Offset = "0x309075C", VA = "0x309075C")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x3090BE4", Offset = "0x3090BE4", VA = "0x3090BE4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x3090ED4", Offset = "0x3090ED4", VA = "0x3090ED4")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDAF18", Offset = "0xBDAF18")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDAF18", Offset = "0xBDAF18")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x200066A")]
		public enum BlurType
		{
			[Token(Token = "0x4002BC4")]
			StandardGauss,
			[Token(Token = "0x4002BC5")]
			SgxGauss
		}

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE4FC", Offset = "0xBFE4FC")]
		public int downsample;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4955")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE544", Offset = "0xBFE544")]
		public float blurSize;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE58C", Offset = "0xBFE58C")]
		public int blurIterations;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F97C")]
		public BlurType blurType;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader blurShader;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material blurMaterial;

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x3090F44", Offset = "0x3090F44", VA = "0x3090F44", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x3091014", Offset = "0x3091014", VA = "0x3091014")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x30911A0", Offset = "0x30911A0", VA = "0x30911A0")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x3091C18", Offset = "0x3091C18", VA = "0x3091C18")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB02C", Offset = "0xBDB02C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB02C", Offset = "0xBDB02C")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x200066B")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4002BC7")]
			CameraMotion,
			[Token(Token = "0x4002BC8")]
			LocalBlur,
			[Token(Token = "0x4002BC9")]
			Reconstruction,
			[Token(Token = "0x4002BCA")]
			ReconstructionDX11,
			[Token(Token = "0x4002BCB")]
			ReconstructionDisc
		}

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F984")]
		private static float MAX_RADIUS;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool preview;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 previewScale;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4965")]
		public float movementScale;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float rotationScale;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F98C")]
		public float maxVelocity;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minVelocity;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float velocityScale;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float softZDistance;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x496D")]
		public int velocityDownsample;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F994")]
		private GameObject tmpCam;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shader;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader replacementClear;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4975")]
		private Material motionBlurMaterial;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F99C")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float jitter;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool showVelocity;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float showVelocityScale;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x497D")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9A4")]
		private int prevFrameCount;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool wasActive;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4985")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera _camera;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x3091C88", Offset = "0x3091C88", VA = "0x3091C88")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x3091F28", Offset = "0x3091F28", VA = "0x3091F28")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x309225C", Offset = "0x309225C", VA = "0x309225C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x30923F4", Offset = "0x30923F4", VA = "0x30923F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x30927F8", Offset = "0x30927F8", VA = "0x30927F8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x3092A74", Offset = "0x3092A74", VA = "0x3092A74")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x30920EC", Offset = "0x30920EC", VA = "0x30920EC")]
		private void Remember()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x3095AF0", Offset = "0x3095AF0", VA = "0x3095AF0")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x3095930", Offset = "0x3095930", VA = "0x3095930")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x3095A90", Offset = "0x3095A90", VA = "0x3095A90")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x3096138", Offset = "0x3096138", VA = "0x3096138")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB140", Offset = "0xBDB140")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x200066C")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4002BCD")]
			Simple,
			[Token(Token = "0x4002BCE")]
			Advanced
		}

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA2C")]
		public AnimationCurve redChannel;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useDepthCorrection;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4994")]
		public AnimationCurve zCurve;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9B4")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material ccMaterial;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material ccDepthMaterial;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x499C")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9BC")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float saturation;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool selectiveCc;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49A4")]
		public Color selectiveFromColor;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color selectiveToColor;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9C4")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool updateTextures;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49AC")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x30963F8", Offset = "0x30963F8", VA = "0x30963F8")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x3096470", Offset = "0x3096470", VA = "0x3096470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x3096484", Offset = "0x3096484", VA = "0x3096484", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x3096AE4", Offset = "0x3096AE4", VA = "0x3096AE4")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x3097370", Offset = "0x3097370", VA = "0x3097370")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x30973A0", Offset = "0x30973A0", VA = "0x30973A0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x3097A00", Offset = "0x3097A00", VA = "0x3097A00")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB1C8", Offset = "0xBDB1C8")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shader;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49B4")]
		private Material material;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture3D converted3DLut;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9D4")]
		public string basedOnTempTex;

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x309826C", Offset = "0x309826C", VA = "0x309826C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x309835C", Offset = "0x309835C", VA = "0x309835C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x30984FC", Offset = "0x30984FC", VA = "0x30984FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x309869C", Offset = "0x309869C", VA = "0x309869C")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x3098CDC", Offset = "0x3098CDC", VA = "0x3098CDC")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x3098F38", Offset = "0x3098F38", VA = "0x3098F38")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x30996B8", Offset = "0x30996B8", VA = "0x30996B8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x3099C30", Offset = "0x3099C30", VA = "0x3099C30")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x2000371")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB250", Offset = "0xBDB250")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture textureRamp;

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x3099CC0", Offset = "0x3099CC0", VA = "0x3099CC0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x3099FB8", Offset = "0x3099FB8", VA = "0x3099FB8")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x2000372")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB2D8", Offset = "0xBDB2D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB2D8", Offset = "0xBDB2D8")]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE5D8", Offset = "0xBFE5D8")]
		public float intensity;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE620", Offset = "0xBFE620")]
		public float threshold;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49BC")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE66C", Offset = "0xBFE66C")]
		public float blurSpread;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader separableBlurShader;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x309A018", Offset = "0x309A018", VA = "0x309A018", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x309A124", Offset = "0x309A124", VA = "0x309A124")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x309A8C8", Offset = "0x309A8C8", VA = "0x309A8C8")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x2000373")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB3EC", Offset = "0xBDB3EC")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE6B4", Offset = "0xBFE6B4")]
		public float adaptationSpeed;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE704", Offset = "0xBFE704")]
		public float limitMinimum;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE74C", Offset = "0xBFE74C")]
		public float limitMaximum;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9E4")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int curAdaptIndex;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderLum;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_materialLum;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49CC")]
		public Shader shaderReduce;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material m_materialReduce;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9EC")]
		public Shader shaderAdapt;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_materialAdapt;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderApply;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_materialApply;

		[Token(Token = "0x1700033C")]
		protected Material materialLum
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x309A924", Offset = "0x309A924", VA = "0x309A924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		protected Material materialReduce
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x309AABC", Offset = "0x309AABC", VA = "0x309AABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x309AC54", Offset = "0x309AC54", VA = "0x309AC54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		protected Material materialApply
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x309ADEC", Offset = "0x309ADEC", VA = "0x309ADEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x309AF84", Offset = "0x309AF84", VA = "0x309AF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x309B0E4", Offset = "0x309B0E4", VA = "0x309B0E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x309B34C", Offset = "0x309B34C", VA = "0x309B34C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x309B97C", Offset = "0x309B97C", VA = "0x309B97C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x309BF00", Offset = "0x309BF00", VA = "0x309BF00")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x309C2D4", Offset = "0x309C2D4", VA = "0x309C2D4")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x2000374")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB474", Offset = "0xBDB474")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB474", Offset = "0xBDB474")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49D4")]
		public float intensity;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int softness;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9F4")]
		public float spread;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader blurShader;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material blurMaterial;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader depthFetchShader;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49DC")]
		private Material depthFetchMaterial;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader creaseApplyShader;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4F9FC")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x309C3CC", Offset = "0x309C3CC", VA = "0x309C3CC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x309C514", Offset = "0x309C514", VA = "0x309C514")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x309CE6C", Offset = "0x309CE6C", VA = "0x309CE6C")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB588", Offset = "0xBDB588")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB588", Offset = "0xBDB588")]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x200066D")]
		public enum BlurType
		{
			[Token(Token = "0x4002BD0")]
			DiscBlur,
			[Token(Token = "0x4002BD1")]
			DX11
		}

		[Token(Token = "0x200066E")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4002BD3")]
			Low,
			[Token(Token = "0x4002BD4")]
			Medium,
			[Token(Token = "0x4002BD5")]
			High
		}

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool visualizeFocus;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalLength;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalSize;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49E4")]
		public float aperture;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform focalTransform;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C56C")]
		public float maxBlurSize;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool highResolution;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BlurType blurType;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49EA")]
		public bool nearBlur;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float foregroundOverlap;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA34")]
		public Shader dofHdrShader;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader dx11BokehShader;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49F1")]
		public float dx11BokehThreshold;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA04")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float dx11BokehScale;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float dx11BokehIntensity;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float focalDistance01;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49F9")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA0C")]
		private float internalBlurWidth;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera cachedCamera;

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x309CEDC", Offset = "0x309CEDC", VA = "0x309CEDC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x309D2BC", Offset = "0x309D2BC", VA = "0x309D2BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x309D3A4", Offset = "0x309D3A4", VA = "0x309D3A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x309D674", Offset = "0x309D674", VA = "0x309D674")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x309D040", Offset = "0x309D040", VA = "0x309D040")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x309D744", Offset = "0x309D744", VA = "0x309D744")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x309DA50", Offset = "0x309DA50", VA = "0x309DA50")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x309E1DC", Offset = "0x309E1DC", VA = "0x309E1DC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x30A12F4", Offset = "0x30A12F4", VA = "0x30A12F4")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB69C", Offset = "0xBDB69C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB69C", Offset = "0xBDB69C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x200066F")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4002BD7")]
			OnlyBackground = 1,
			[Token(Token = "0x4002BD8")]
			BackgroundAndForeground
		}

		[Token(Token = "0x2000670")]
		public enum DofResolution
		{
			[Token(Token = "0x4002BDA")]
			High = 2,
			[Token(Token = "0x4002BDB")]
			Medium,
			[Token(Token = "0x4002BDC")]
			Low
		}

		[Token(Token = "0x2000671")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4002BDE")]
			Low = 1,
			[Token(Token = "0x4002BDF")]
			High = 2,
			[Token(Token = "0x4002BE0")]
			VeryHigh = 4
		}

		[Token(Token = "0x2000672")]
		public enum BokehDestination
		{
			[Token(Token = "0x4002BE2")]
			Background = 1,
			[Token(Token = "0x4002BE3")]
			Foreground,
			[Token(Token = "0x4002BE4")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A09")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA1C")]
		public DofResolution resolution;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool simpleTweakMode;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalPoint;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float smoothness;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A11")]
		public float focalZDistance;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float focalZStartCurve;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA24")]
		public float focalZEndCurve;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float focalStartCurve;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float focalEndCurve;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float focalDistance01;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A19")]
		public Transform objectFocus;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float focalSize;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA2C")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxBlurSpread;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader dofBlurShader;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A21")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader dofShader;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA34")]
		private Material dofMaterial;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool visualize;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float widthOverHeight;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A29")]
		private float oneOverBaseSize;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool bokeh;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA3C")]
		public bool bokehSupport;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader bokehShader;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float bokehScale;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A31")]
		public float bokehIntensity;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float bokehThresholdContrast;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA44")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int bokehDownsample;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material bokehMaterial;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera _camera;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A39")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA4C")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture bokehSource;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x30A1428", Offset = "0x30A1428", VA = "0x30A1428")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x30A1664", Offset = "0x30A1664", VA = "0x30A1664", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x30A190C", Offset = "0x30A190C", VA = "0x30A190C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x30A1F1C", Offset = "0x30A1F1C", VA = "0x30A1F1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x30A2004", Offset = "0x30A2004", VA = "0x30A2004")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x30A2310", Offset = "0x30A2310", VA = "0x30A2310")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x30A23B4", Offset = "0x30A23B4", VA = "0x30A23B4")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x30A2480", Offset = "0x30A2480", VA = "0x30A2480")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x30A4A88", Offset = "0x30A4A88", VA = "0x30A4A88")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x30A5DCC", Offset = "0x30A5DCC", VA = "0x30A5DCC")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x30A6B14", Offset = "0x30A6B14", VA = "0x30A6B14")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x30A4738", Offset = "0x30A4738", VA = "0x30A4738")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x30A52FC", Offset = "0x30A52FC", VA = "0x30A52FC")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x30A6680", Offset = "0x30A6680", VA = "0x30A6680")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x30A3FAC", Offset = "0x30A3FAC", VA = "0x30A3FAC")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x30A7960", Offset = "0x30A7960", VA = "0x30A7960")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB7B0", Offset = "0xBDB7B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB7B0", Offset = "0xBDB7B0")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x2000673")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4002BE6")]
			TriangleDepthNormals,
			[Token(Token = "0x4002BE7")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4002BE8")]
			SobelDepth,
			[Token(Token = "0x4002BE9")]
			SobelDepthThin,
			[Token(Token = "0x4002BEA")]
			TriangleLuminance
		}

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EdgeDetectMode mode;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sensitivityDepth;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sensitivityNormals;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A58")]
		public float lumThreshold;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float edgeExp;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA64")]
		public float sampleDist;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float edgesOnly;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader edgeDetectShader;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A60")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x30A7C00", Offset = "0x30A7C00", VA = "0x30A7C00", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x30A7EF8", Offset = "0x30A7EF8", VA = "0x30A7EF8")]
		private new void Start()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x30A7D28", Offset = "0x30A7D28", VA = "0x30A7D28")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x30A7F30", Offset = "0x30A7F30", VA = "0x30A7F30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x30A7F60", Offset = "0x30A7F60", VA = "0x30A7F60")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x30A83C4", Offset = "0x30A83C4", VA = "0x30A83C4")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB8C4", Offset = "0xBDB8C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB8C4", Offset = "0xBDB8C4")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE794", Offset = "0xBFE794")]
		public float strengthX;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFE7DC", Offset = "0xBFE7DC")]
		public float strengthY;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader fishEyeShader;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fisheyeMaterial;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x30A8490", Offset = "0x30A8490", VA = "0x30A8490", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x30A8560", Offset = "0x30A8560", VA = "0x30A8560")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x30A89B4", Offset = "0x30A89B4", VA = "0x30A89B4")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x2000379")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDB9D8", Offset = "0xBDB9D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDB9D8", Offset = "0xBDB9D8")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFE824", Offset = "0xBFE824")]
		public bool distanceFog;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFE888", Offset = "0xBFE888")]
		public bool excludeFarPixels;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFE8EC", Offset = "0xBFE8EC")]
		public bool useRadialDistance;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFE950", Offset = "0xBFE950")]
		public bool heightFog;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFE9B4", Offset = "0xBFE9B4")]
		public float height;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEA18", Offset = "0xBFEA18")]
		public float heightDensity;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFEA68", Offset = "0xBFEA68")]
		public float startDistance;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader fogShader;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA84")]
		private Material fogMaterial;

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x30A8A0C", Offset = "0x30A8A0C", VA = "0x30A8A0C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x30A8ADC", Offset = "0x30A8ADC", VA = "0x30A8ADC")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x30AA430", Offset = "0x30AA430", VA = "0x30AA430")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x30AA62C", Offset = "0x30AA62C", VA = "0x30AA62C")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBAEC", Offset = "0xBDBAEC")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture textureRamp;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEACC", Offset = "0xBFEACC")]
		public float rampOffset;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x30AA6C8", Offset = "0x30AA6C8", VA = "0x30AA6C8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x30AA870", Offset = "0x30AA870", VA = "0x30AA870")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDBB74", Offset = "0xBDBB74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBB74", Offset = "0xBDBB74")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shader;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A80")]
		private Material m_Material;

		[Token(Token = "0x17000340")]
		protected Material material
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x3099E20", Offset = "0x3099E20", VA = "0x3099E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x30AA8A0", Offset = "0x30AA8A0", VA = "0x30AA8A0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x30AAA38", Offset = "0x30AAA38", VA = "0x30AAA38", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x3099FE8", Offset = "0x3099FE8", VA = "0x3099FE8")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBC6C", Offset = "0xBDBC6C")]
	public class ImageEffects
	{
		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x30AABC4", Offset = "0x30AABC4", VA = "0x30AABC4")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x30AB0B8", Offset = "0x30AB0B8", VA = "0x30AB0B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1F714", Offset = "0xC1F714")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x30AB1B8", Offset = "0x30AB1B8", VA = "0x30AB1B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xC1F778", Offset = "0xC1F778")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x30AB2C8", Offset = "0x30AB2C8", VA = "0x30AB2C8")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBCD0", Offset = "0xBDBCD0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDBCD0", Offset = "0xBDBCD0")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEB18", Offset = "0xBFEB18")]
		public float blurAmount;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA8C")]
		public bool extraBlur;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture accumTexture;

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x30AB2F8", Offset = "0x30AB2F8", VA = "0x30AB2F8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x30AB368", Offset = "0x30AB368", VA = "0x30AB368", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x30AB468", Offset = "0x30AB468", VA = "0x30AB468")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x30ABC38", Offset = "0x30ABC38", VA = "0x30ABC38")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x200037E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDBDE4", Offset = "0xBDBDE4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBDE4", Offset = "0xBDBDE4")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float intensityMultiplier;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float generalIntensity;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A88")]
		public float blackIntensity;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float whiteIntensity;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA94")]
		public float midGrey;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool dx11Grain;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float softness;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool monochrome;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A90")]
		public Vector3 intensities;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 tiling;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FA9C")]
		public float monochromeTiling;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FilterMode filterMode;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D noiseTexture;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader noiseShader;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A98")]
		private Material noiseMaterial;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA44")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x30ABC80", Offset = "0x30ABC80", VA = "0x30ABC80", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x30ABDCC", Offset = "0x30ABDCC", VA = "0x30ABDCC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x30AD614", Offset = "0x30AD614", VA = "0x30AD614")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x30ADE28", Offset = "0x30ADE28", VA = "0x30ADE28")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x200037F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDBEF8", Offset = "0xBDBEF8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDBEF8", Offset = "0xBDBEF8")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool monochrome;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool rgbFallback;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A9F")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEB64", Offset = "0xBFEB64")]
		public float grainIntensityMin;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEBAC", Offset = "0xBFEBAC")]
		public float grainIntensityMax;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEBF4", Offset = "0xBFEBF4")]
		public float grainSize;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEC44", Offset = "0xBFEC44")]
		public float scratchIntensityMin;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEC8C", Offset = "0xBFEC8C")]
		public float scratchIntensityMax;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFECD4", Offset = "0xBFECD4")]
		public float scratchFPS;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AA7")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFED20", Offset = "0xBFED20")]
		public float scratchJitter;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture grainTexture;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAAC")]
		public Texture scratchTexture;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderRGB;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader shaderYUV;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_MaterialRGB;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AAF")]
		private Material m_MaterialYUV;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float scratchTimeLeft;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAB4")]
		private float scratchX;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float scratchY;

		[Token(Token = "0x17000341")]
		protected Material material
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x30AE328", Offset = "0x30AE328", VA = "0x30AE328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x30ADFE4", Offset = "0x30ADFE4", VA = "0x30ADFE4")]
		protected void Start()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x30AE648", Offset = "0x30AE648", VA = "0x30AE648")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x30AE8EC", Offset = "0x30AE8EC", VA = "0x30AE8EC")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x30AEB64", Offset = "0x30AEB64", VA = "0x30AEB64")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x30AF3C4", Offset = "0x30AF3C4", VA = "0x30AF3C4")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x2000380")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC00C", Offset = "0xBDC00C")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool supportHDRTextures;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool supportDX11;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AB7")]
		protected bool isSupported;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x308E628", Offset = "0x308E628", VA = "0x308E628")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x30AF510", Offset = "0x30AF510", VA = "0x30AF510")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x30AF9E4", Offset = "0x30AF9E4", VA = "0x30AF9E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x30AFA14", Offset = "0x30AFA14", VA = "0x30AFA14")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x30AFA68", Offset = "0x30AFA68", VA = "0x30AFA68", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x3096440", Offset = "0x3096440", VA = "0x3096440")]
		protected void Start()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x308E330", Offset = "0x308E330", VA = "0x308E330")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x3092958", Offset = "0x3092958", VA = "0x3092958")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x30AFBBC", Offset = "0x30AFBBC", VA = "0x30AFBBC")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x308ED4C", Offset = "0x308ED4C", VA = "0x308ED4C")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x30AFC00", Offset = "0x30AFC00", VA = "0x30AFC00")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x30AF4C0", Offset = "0x30AF4C0", VA = "0x30AF4C0")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x30AFF20", Offset = "0x30AFF20", VA = "0x30AFF20")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x308FB10", Offset = "0x308FB10", VA = "0x308FB10")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC0D8", Offset = "0xBDC0D8")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x30B0600", Offset = "0x30B0600", VA = "0x30B0600")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x30B0700", Offset = "0x30B0700", VA = "0x30B0700")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x30B0DD8", Offset = "0x30B0DD8", VA = "0x30B0DD8")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x30B14B4", Offset = "0x30B14B4", VA = "0x30B14B4")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x30B17FC", Offset = "0x30B17FC", VA = "0x30B17FC")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x2000382")]
	internal class Quads
	{
		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Mesh[] meshes;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FABC")]
		private static int currentQuads;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x30B182C", Offset = "0x30B182C", VA = "0x30B182C")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x30A19F0", Offset = "0x30A19F0", VA = "0x30A19F0")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x30A72A4", Offset = "0x30A72A4", VA = "0x30A72A4")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x30B1B60", Offset = "0x30B1B60", VA = "0x30B1B60")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x30B2768", Offset = "0x30B2768", VA = "0x30B2768")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x2000383")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC1A4", Offset = "0xBDC1A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC1A4", Offset = "0xBDC1A4")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x2000674")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4002BEC")]
			Additive,
			[Token(Token = "0x4002BED")]
			ScreenBlend,
			[Token(Token = "0x4002BEE")]
			Multiply,
			[Token(Token = "0x4002BEF")]
			Overlay,
			[Token(Token = "0x4002BF0")]
			AlphaBlend
		}

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float intensity;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D texture;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ABF")]
		public Shader overlayShader;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material overlayMaterial;

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x30B27A8", Offset = "0x30B27A8", VA = "0x30B27A8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x30B2878", Offset = "0x30B2878", VA = "0x30B2878")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x30B2C44", Offset = "0x30B2C44", VA = "0x30B2C44")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x2000384")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC2B8", Offset = "0xBDC2B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC2B8", Offset = "0xBDC2B8")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FACC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFED68", Offset = "0xBFED68")]
		public float intensity;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEDB0", Offset = "0xBFEDB0")]
		public float radius;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEE00", Offset = "0xBFEE00")]
		public int blurIterations;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEE48", Offset = "0xBFEE48")]
		public float blurFilterDistance;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ACF")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEE90", Offset = "0xBFEE90")]
		public int downsample;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D rand;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAD4")]
		public Shader aoShader;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material aoMaterial;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x30B2CA0", Offset = "0x30B2CA0", VA = "0x30B2CA0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x30B2D70", Offset = "0x30B2D70", VA = "0x30B2D70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x30B2F10", Offset = "0x30B2F10", VA = "0x30B2F10")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x30B3A64", Offset = "0x30B3A64", VA = "0x30B3A64")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC3CC", Offset = "0xBDC3CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC3CC", Offset = "0xBDC3CC")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000675")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4002BF2")]
			Low,
			[Token(Token = "0x4002BF3")]
			Medium,
			[Token(Token = "0x4002BF4")]
			High
		}

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEED8", Offset = "0xBFEED8")]
		public float m_Radius;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AD7")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEF28", Offset = "0xBFEF28")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEF74", Offset = "0xBFEF74")]
		public int m_Blur;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FADC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFEFBC", Offset = "0xBFEFBC")]
		public int m_Downsampling;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF008", Offset = "0xBFF008")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF058", Offset = "0xBFF058")]
		public float m_MinZ;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader m_SSAOShader;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ADF")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAE4")]
		private bool m_Supported;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x30B3AF0", Offset = "0x30B3AF0", VA = "0x30B3AF0")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x30B3C78", Offset = "0x30B3C78", VA = "0x30B3C78")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x30B3E0C", Offset = "0x30B3E0C", VA = "0x30B3E0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x30B3E4C", Offset = "0x30B3E4C", VA = "0x30B3E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x30B4210", Offset = "0x30B4210", VA = "0x30B4210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x30B405C", Offset = "0x30B405C", VA = "0x30B405C")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x30B42E0", Offset = "0x30B42E0", VA = "0x30B42E0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x30B5098", Offset = "0x30B5098", VA = "0x30B5098")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC4E0", Offset = "0xBDC4E0")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x30B5160", Offset = "0x30B5160", VA = "0x30B5160")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x30B5278", Offset = "0x30B5278", VA = "0x30B5278")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC568", Offset = "0xBDC568")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC568", Offset = "0xBDC568")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x2000676")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4002BF6")]
			Low,
			[Token(Token = "0x4002BF7")]
			Normal,
			[Token(Token = "0x4002BF8")]
			High
		}

		[Token(Token = "0x2000677")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4002BFA")]
			Screen,
			[Token(Token = "0x4002BFB")]
			Add
		}

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAEC")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform sunTransform;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int radialBlurIterations;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color sunColor;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AEF")]
		public Color sunThreshold;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA4C")]
		public float sunShaftIntensity;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxRadius;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useDepthTexture;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader sunShaftsShader;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AF6")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader simpleClearShader;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FAF4")]
		private Material simpleClearMaterial;

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x30B52A8", Offset = "0x30B52A8", VA = "0x30B52A8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x30B53C8", Offset = "0x30B53C8", VA = "0x30B53C8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x30B6728", Offset = "0x30B6728", VA = "0x30B6728")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC67C", Offset = "0xBDC67C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC67C", Offset = "0xBDC67C")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x2000678")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4002BFD")]
			TiltShiftMode,
			[Token(Token = "0x4002BFE")]
			IrisMode
		}

		[Token(Token = "0x2000679")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4002C00")]
			Preview,
			[Token(Token = "0x4002C01")]
			Normal,
			[Token(Token = "0x4002C02")]
			High
		}

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TiltShiftMode mode;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TiltShiftQuality quality;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B06")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF0A8", Offset = "0xBFF0A8")]
		public float blurArea;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF0F0", Offset = "0xBFF0F0")]
		public float maxBlurSize;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF138", Offset = "0xBFF138")]
		public int downsample;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader tiltShiftShader;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x30B6834", Offset = "0x30B6834", VA = "0x30B6834", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x30B6904", Offset = "0x30B6904", VA = "0x30B6904")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x30B705C", Offset = "0x30B705C", VA = "0x30B705C")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC774", Offset = "0xBDC774")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC774", Offset = "0xBDC774")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x200067A")]
		public enum TonemapperType
		{
			[Token(Token = "0x4002C04")]
			SimpleReinhard,
			[Token(Token = "0x4002C05")]
			UserCurve,
			[Token(Token = "0x4002C06")]
			Hable,
			[Token(Token = "0x4002C07")]
			Photographic,
			[Token(Token = "0x4002C08")]
			OptimizedHejiDawson,
			[Token(Token = "0x4002C09")]
			AdaptiveReinhard,
			[Token(Token = "0x4002C0A")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x200067B")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x4002C0C")]
			Square16 = 0x10,
			[Token(Token = "0x4002C0D")]
			Square32 = 0x20,
			[Token(Token = "0x4002C0E")]
			Square64 = 0x40,
			[Token(Token = "0x4002C0F")]
			Square128 = 0x80,
			[Token(Token = "0x4002C10")]
			Square256 = 0x100,
			[Token(Token = "0x4002C11")]
			Square512 = 0x200,
			[Token(Token = "0x4002C12")]
			Square1024 = 0x400
		}

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B16")]
		public TonemapperType type;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB14")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D curveTex;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float exposureAdjustment;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float middleGrey;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B1E")]
		public float white;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float adaptionSpeed;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB1C")]
		public Shader tonemapper;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material tonemapMaterial;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture rt;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B26")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x30B70D0", Offset = "0x30B70D0", VA = "0x30B70D0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x30B73A8", Offset = "0x30B73A8", VA = "0x30B73A8")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x30B78FC", Offset = "0x30B78FC", VA = "0x30B78FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x30B7CF4", Offset = "0x30B7CF4", VA = "0x30B7CF4")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x30B7F54", Offset = "0x30B7F54", VA = "0x30B7F54")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x30B9780", Offset = "0x30B9780", VA = "0x30B9780")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x200038A")]
	internal class Triangles
	{
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B3E")]
		private static int currentTris;

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x30B985C", Offset = "0x30B985C", VA = "0x30B985C")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x30B9BD8", Offset = "0x30B9BD8", VA = "0x30B9BD8")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x30BA104", Offset = "0x30BA104", VA = "0x30BA104")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x30BA7C0", Offset = "0x30BA7C0", VA = "0x30BA7C0")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x30BB10C", Offset = "0x30BB10C", VA = "0x30BB10C")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC888", Offset = "0xBDC888")]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector2 radius;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBFF180", Offset = "0xBFF180")]
		public float angle;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 center;

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x30BB14C", Offset = "0x30BB14C", VA = "0x30BB14C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x30BB1FC", Offset = "0x30BB1FC", VA = "0x30BB1FC")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDC910", Offset = "0xBDC910")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDC910", Offset = "0xBDC910")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x200067C")]
		public enum AberrationMode
		{
			[Token(Token = "0x4002C14")]
			Simple,
			[Token(Token = "0x4002C15")]
			Advanced
		}

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AberrationMode mode;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float intensity;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B46")]
		public float chromaticAberration;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float axialAberration;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA54")]
		public float blur;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float blurSpread;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float luminanceDependency;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float blurDistance;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4D")]
		public Shader vignetteShader;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Shader separableBlurShader;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB44")]
		public Shader chromAberrationShader;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x30BB38C", Offset = "0x30BB38C", VA = "0x30BB38C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x30BB4D4", Offset = "0x30BB4D4", VA = "0x30BB4D4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x30BC2FC", Offset = "0x30BC2FC", VA = "0x30BC2FC")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDCA24", Offset = "0xBDCA24")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 radius;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float angle;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 center;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x30BC3C0", Offset = "0x30BC3C0", VA = "0x30BC3C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x30BC470", Offset = "0x30BC470", VA = "0x30BC470")]
		public Vortex()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x200038E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDCAAC", Offset = "0xBDCAAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDCAAC", Offset = "0xBDCAAC")]
	[ImageEffectAllowedInSceneView]
	public class ME_Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200067D")]
		public struct Settings
		{
			[Token(Token = "0x4002C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB54")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC153DC", Offset = "0xC153DC")]
			public float threshold;

			[Token(Token = "0x4002C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC15464", Offset = "0xC15464")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15464", Offset = "0xC15464")]
			public float softKnee;

			[Token(Token = "0x4002C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC15524", Offset = "0xC15524")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15524", Offset = "0xC15524")]
			public float radius;

			[Token(Token = "0x4002C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC155E8", Offset = "0xC155E8")]
			public float intensity;

			[Token(Token = "0x4002C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4B65")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15670", Offset = "0xC15670")]
			public bool highQuality;

			[Token(Token = "0x4002C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC156F8", Offset = "0xC156F8")]
			public bool antiFlicker;

			[Token(Token = "0x4002C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15780", Offset = "0xC15780")]
			public Texture dirtTexture;

			[Token(Token = "0x4002C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "ME_MinAttribute_ME", RVA = "0xC157E4", Offset = "0xC157E4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC157E4", Offset = "0xC157E4")]
			public float dirtIntensity;

			[Token(Token = "0x17000538")]
			public float thresholdGamma
			{
				[Token(Token = "0x6002E55")]
				[Address(RVA = "0x21715B0", Offset = "0x21715B0", VA = "0x21715B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002E54")]
				[Address(RVA = "0x2171578", Offset = "0x2171578", VA = "0x2171578")]
				set
				{
				}
			}

			[Token(Token = "0x17000539")]
			public float thresholdLinear
			{
				[Token(Token = "0x6002E57")]
				[Address(RVA = "0x2171248", Offset = "0x2171248", VA = "0x2171248")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002E56")]
				[Address(RVA = "0x21716B0", Offset = "0x21716B0", VA = "0x21716B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700053A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002E58")]
				[Address(RVA = "0x217145C", Offset = "0x217145C", VA = "0x217145C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B5D")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB54")]
		private Material m_Material;

		[Token(Token = "0x400183B")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B65")]
		private int m_Threshold;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_Curve;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB5C")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_SampleScale;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_Intensity;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_DirtTex;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B6D")]
		private int m_DirtIntensity;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_BaseTex;

		[Token(Token = "0x17000342")]
		public Shader shader
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x216EEB8", Offset = "0x216EEB8", VA = "0x216EEB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public Material material
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0x216F00C", Offset = "0x216F00C", VA = "0x216F00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x216F32C", Offset = "0x216F32C", VA = "0x216F32C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x216F4F4", Offset = "0x216F4F4", VA = "0x216F4F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x216FBB4", Offset = "0x216FBB4", VA = "0x216FBB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x216FD60", Offset = "0x216FD60", VA = "0x216FD60")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x2171348", Offset = "0x2171348", VA = "0x2171348")]
		public ME_Bloom()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class ME_ImageEffectHelper_ME
	{
		[Token(Token = "0x17000344")]
		public static bool supportsDX11
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x21717B4", Offset = "0x21717B4", VA = "0x21717B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x216F58C", Offset = "0x216F58C", VA = "0x216F58C")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x216F160", Offset = "0x216F160", VA = "0x216F160")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public sealed class ME_MinAttribute_ME : PropertyAttribute
	{
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly float min;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x2171850", Offset = "0x2171850", VA = "0x2171850")]
		public ME_MinAttribute_ME(float min)
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class ME_RenderTextureUtility_ME
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x2171898", Offset = "0x2171898", VA = "0x2171898")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x2171A34", Offset = "0x2171A34", VA = "0x2171A34")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x2171CF0", Offset = "0x2171CF0", VA = "0x2171CF0")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x2171E58", Offset = "0x2171E58", VA = "0x2171E58")]
		public ME_RenderTextureUtility_ME()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDCBDC", Offset = "0xBDCBDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDCBDC", Offset = "0xBDCBDC")]
	[ImageEffectAllowedInSceneView]
	public class Bloom_RFX4 : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200067E")]
		public struct Settings
		{
			[Token(Token = "0x4002C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB74")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15870", Offset = "0xC15870")]
			public float threshold;

			[Token(Token = "0x4002C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC158F8", Offset = "0xC158F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC158F8", Offset = "0xC158F8")]
			public float softKnee;

			[Token(Token = "0x4002C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC159B8", Offset = "0xC159B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC159B8", Offset = "0xC159B8")]
			public float radius;

			[Token(Token = "0x4002C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15A7C", Offset = "0xC15A7C")]
			public float intensity;

			[Token(Token = "0x4002C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4B85")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15B04", Offset = "0xC15B04")]
			public bool highQuality;

			[Token(Token = "0x4002C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15B8C", Offset = "0xC15B8C")]
			public bool antiFlicker;

			[Token(Token = "0x4002C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15C14", Offset = "0xC15C14")]
			public Texture dirtTexture;

			[Token(Token = "0x4002C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute_RFX4", RVA = "0xC15C78", Offset = "0xC15C78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15C78", Offset = "0xC15C78")]
			public float dirtIntensity;

			[Token(Token = "0x1700053B")]
			public float thresholdGamma
			{
				[Token(Token = "0x6002E5A")]
				[Address(RVA = "0x216EC18", Offset = "0x216EC18", VA = "0x216EC18")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002E59")]
				[Address(RVA = "0x216EBE0", Offset = "0x216EBE0", VA = "0x216EBE0")]
				set
				{
				}
			}

			[Token(Token = "0x1700053C")]
			public float thresholdLinear
			{
				[Token(Token = "0x6002E5C")]
				[Address(RVA = "0x216E8B0", Offset = "0x216E8B0", VA = "0x216E8B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002E5B")]
				[Address(RVA = "0x216ED18", Offset = "0x216ED18", VA = "0x216ED18")]
				set
				{
				}
			}

			[Token(Token = "0x1700053D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002E5D")]
				[Address(RVA = "0x216EAC4", Offset = "0x216EAC4", VA = "0x216EAC4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B7D")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB74")]
		private Material m_Material;

		[Token(Token = "0x400184B")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B85")]
		private int m_Threshold;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_Curve;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB7C")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_SampleScale;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_Intensity;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_DirtTex;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8D")]
		private int m_DirtIntensity;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_BaseTex;

		[Token(Token = "0x17000345")]
		public Shader shader
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x216C520", Offset = "0x216C520", VA = "0x216C520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public Material material
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x216C674", Offset = "0x216C674", VA = "0x216C674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x216C994", Offset = "0x216C994", VA = "0x216C994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x216CB5C", Offset = "0x216CB5C", VA = "0x216CB5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x216D21C", Offset = "0x216D21C", VA = "0x216D21C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x216D3C8", Offset = "0x216D3C8", VA = "0x216D3C8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x216E9B0", Offset = "0x216E9B0", VA = "0x216E9B0")]
		public Bloom_RFX4()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public static class ImageEffectHelper_RFX4
	{
		[Token(Token = "0x17000347")]
		public static bool supportsDX11
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x216EE1C", Offset = "0x216EE1C", VA = "0x216EE1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x216CBF4", Offset = "0x216CBF4", VA = "0x216CBF4")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x216C7C8", Offset = "0x216C7C8", VA = "0x216C7C8")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000394")]
	public sealed class MinAttribute_RFX4 : PropertyAttribute
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly float min;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x2171F10", Offset = "0x2171F10", VA = "0x2171F10")]
		public MinAttribute_RFX4(float min)
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class RenderTextureUtility_RFX4
	{
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x2171F58", Offset = "0x2171F58", VA = "0x2171F58")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x21720F4", Offset = "0x21720F4", VA = "0x21720F4")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x21723B0", Offset = "0x21723B0", VA = "0x21723B0")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x2172518", Offset = "0x2172518", VA = "0x2172518")]
		public RenderTextureUtility_RFX4()
		{
		}
	}
}
namespace BeautifulTransitions._Demo.Transitions.Scripts
{
	[Token(Token = "0x2000396")]
	public class ScreenCameraController : MonoBehaviour
	{
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0000", Offset = "0xBE0000")]
		private sealed class <DemoCameraInternal>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4BAC")]
			public ScreenCameraController <>4__this;

			[Token(Token = "0x4002C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TransitionBase transitionBase;

			[Token(Token = "0x1700053E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E61")]
				[Address(RVA = "0x1DEB264", Offset = "0x1DEB264", VA = "0x1DEB264", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E63")]
				[Address(RVA = "0x1DEB334", Offset = "0x1DEB334", VA = "0x1DEB334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0x1DEADD4", Offset = "0x1DEADD4", VA = "0x1DEADD4")]
			[DebuggerHidden]
			public <DemoCameraInternal>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0x1DEAF14", Offset = "0x1DEAF14", VA = "0x1DEAF14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E60")]
			[Address(RVA = "0x1DEAF28", Offset = "0x1DEAF28", VA = "0x1DEAF28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E62")]
			[Address(RVA = "0x1DEB294", Offset = "0x1DEB294", VA = "0x1DEB294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B9D")]
		public FadeCamera FadeCamera;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public WipeCamera WipeCamera;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA5C")]
		public FadeScreen FadeScreen;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WipeScreen WipeScreen;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D OverlayTexture;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] WipeTextures;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BA4")]
		private Color _color;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _showTexture;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB94")]
		private int _effect;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _softness;

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x1DE9F30", Offset = "0x1DE9F30", VA = "0x1DE9F30")]
		public void SetColorWhite()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1DEA2F0", Offset = "0x1DEA2F0", VA = "0x1DEA2F0")]
		public void SetColorRed()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x1DEA350", Offset = "0x1DEA350", VA = "0x1DEA350")]
		public void SetColorBlue()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1DEA3B0", Offset = "0x1DEA3B0", VA = "0x1DEA3B0")]
		public void SetColorGreen()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1DEA410", Offset = "0x1DEA410", VA = "0x1DEA410")]
		public void SetColorBlack()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1DE9F90", Offset = "0x1DE9F90", VA = "0x1DE9F90")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1DEA470", Offset = "0x1DEA470", VA = "0x1DEA470")]
		public void SetEffect(int effect)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1DEA4A8", Offset = "0x1DEA4A8", VA = "0x1DEA4A8")]
		public void SetSoftness(float softness)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1DEA5E0", Offset = "0x1DEA5E0", VA = "0x1DEA5E0")]
		public void SetShowTexture(bool showTexture)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1DEA870", Offset = "0x1DEA870", VA = "0x1DEA870")]
		public void SetWipeTexture()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1DEAA68", Offset = "0x1DEAA68", VA = "0x1DEAA68")]
		public void DemoScreen()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1DEAC6C", Offset = "0x1DEAC6C", VA = "0x1DEAC6C")]
		public void DemoCamera()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1DEAB88", Offset = "0x1DEAB88", VA = "0x1DEAB88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F890", Offset = "0xC1F890")]
		public IEnumerator DemoCameraInternal(TransitionBase transitionBase)
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1DEAE1C", Offset = "0x1DEAE1C", VA = "0x1DEAE1C")]
		public void ShowRatePage()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1DEAEA0", Offset = "0x1DEAEA0", VA = "0x1DEAEA0")]
		public ScreenCameraController()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class ScriptingDemo : MonoBehaviour
	{
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FB9C")]
		public GameObject TestGameObject;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject TestGameObject2;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject TestGameObject3;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text Counter;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BB4")]
		public GameObject TestGameObject5;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text Description;

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1DEB364", Offset = "0x1DEB364", VA = "0x1DEB364")]
		private void Start()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1DEBB28", Offset = "0x1DEBB28", VA = "0x1DEBB28")]
		private void Step2LinkedTransitionsInOneCall(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1DEBF48", Offset = "0x1DEBF48", VA = "0x1DEBF48")]
		private void Step3TransitionWithCallback(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1DEBFF8", Offset = "0x1DEBFF8", VA = "0x1DEBFF8")]
		public void Step4CustomTransitionStep()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1DEC320", Offset = "0x1DEC320", VA = "0x1DEC320")]
		private void CustomTransitionStepUpdateCallback(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1DEC3C0", Offset = "0x1DEC3C0", VA = "0x1DEC3C0")]
		private void Step5FadeAndScale(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1DEB930", Offset = "0x1DEB930", VA = "0x1DEB930")]
		private void ShowTransitionedDescription(string text)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1DEC58C", Offset = "0x1DEC58C", VA = "0x1DEC58C")]
		private void LogStart(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1DEC688", Offset = "0x1DEC688", VA = "0x1DEC688")]
		private void LogUpdate(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1DEC7E8", Offset = "0x1DEC7E8", VA = "0x1DEC7E8")]
		private void LogComplete(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1DEC9BC", Offset = "0x1DEC9BC", VA = "0x1DEC9BC")]
		private void LogComplete2(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1DECAB8", Offset = "0x1DECAB8", VA = "0x1DECAB8")]
		public void ShowRatePage()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1DECB3C", Offset = "0x1DECB3C", VA = "0x1DECB3C")]
		public ScriptingDemo()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class TestController : MonoBehaviour
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBA4")]
		public GameObject TransitionFromButtons;

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1DECB6C", Offset = "0x1DECB6C", VA = "0x1DECB6C")]
		public void TransitionIn()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1DECBB8", Offset = "0x1DECBB8", VA = "0x1DECBB8")]
		public void TransitionOut()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1DECC04", Offset = "0x1DECC04", VA = "0x1DECC04")]
		public void ShowRatePage()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1DECC88", Offset = "0x1DECC88", VA = "0x1DECC88")]
		public TestController()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class TransitionEvents : MonoBehaviour
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject TransitionGameobject;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text Status;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text Progress;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BBC")]
		public Image ProgressFill;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1DECCB8", Offset = "0x1DECCB8", VA = "0x1DECCB8")]
		public void TransitionIn()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1DECD04", Offset = "0x1DECD04", VA = "0x1DECD04")]
		public void TransitionOut()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1DECD50", Offset = "0x1DECD50", VA = "0x1DECD50")]
		public void TransitionInStarted()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1DECDF0", Offset = "0x1DECDF0", VA = "0x1DECDF0")]
		public void TransitionInCompleted()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1DECE90", Offset = "0x1DECE90", VA = "0x1DECE90")]
		public void TransitionOutStarted()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1DECF30", Offset = "0x1DECF30", VA = "0x1DECF30")]
		public void TransitionOutCompleted()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1DECFD0", Offset = "0x1DECFD0", VA = "0x1DECFD0")]
		public void UpdateProgress(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1DED130", Offset = "0x1DED130", VA = "0x1DED130")]
		public void ShowRatePage()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1DED1B4", Offset = "0x1DED1B4", VA = "0x1DED1B4")]
		public TransitionEvents()
		{
		}
	}
}
namespace BeautifulTransitions._Demo.Shake.Scripts
{
	[Token(Token = "0x200039A")]
	public class ShakeController : MonoBehaviour
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text DurationText;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBAC")]
		public Slider DurationSlider;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text DecayStartText;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider DecayStartSlider;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputField XInput;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC4")]
		public InputField YInput;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public InputField ZInput;

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1DE9A08", Offset = "0x1DE9A08", VA = "0x1DE9A08")]
		private void Start()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1DE9BE0", Offset = "0x1DE9BE0", VA = "0x1DE9BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1DE9D84", Offset = "0x1DE9D84", VA = "0x1DE9D84")]
		public void Shake()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1DE9F00", Offset = "0x1DE9F00", VA = "0x1DE9F00")]
		public ShakeController()
		{
		}
	}
}
namespace BeautifulTransitions._Demo.DisplayItem.Scripts
{
	[Token(Token = "0x200039B")]
	public class DisplayItemController : MonoBehaviour
	{
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBB4")]
		public Button TestButton;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ShowButton;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button HideButton;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button EnableButton;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BCC")]
		public Button DisableButton;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Button AttentionButton;

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1DE957C", Offset = "0x1DE957C", VA = "0x1DE957C")]
		public void Start()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1DE95E4", Offset = "0x1DE95E4", VA = "0x1DE95E4")]
		public void ShowClicked()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1DE97BC", Offset = "0x1DE97BC", VA = "0x1DE97BC")]
		public void HideClicked()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1DE988C", Offset = "0x1DE988C", VA = "0x1DE988C")]
		public void EnableClicked()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1DE98F0", Offset = "0x1DE98F0", VA = "0x1DE98F0")]
		public void DisableClicked()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1DE96B4", Offset = "0x1DE96B4", VA = "0x1DE96B4")]
		private void SetEnableButtonStates()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1DE9954", Offset = "0x1DE9954", VA = "0x1DE9954")]
		public void ShowRatePage()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1DE99D8", Offset = "0x1DE99D8", VA = "0x1DE99D8")]
		public DisplayItemController()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions
{
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDCD0C", Offset = "0xBDCD0C")]
	public class TransitionHelper
	{
		[Token(Token = "0x2000680")]
		public enum TweenType
		{
			[Token(Token = "0x4002C2B")]
			none = 0,
			[Token(Token = "0x4002C2C")]
			easeInQuad = 1,
			[Token(Token = "0x4002C2D")]
			easeOutQuad = 2,
			[Token(Token = "0x4002C2E")]
			easeInOutQuad = 3,
			[Token(Token = "0x4002C2F")]
			easeInCubic = 4,
			[Token(Token = "0x4002C30")]
			easeOutCubic = 5,
			[Token(Token = "0x4002C31")]
			easeInOutCubic = 6,
			[Token(Token = "0x4002C32")]
			easeInQuart = 7,
			[Token(Token = "0x4002C33")]
			easeOutQuart = 8,
			[Token(Token = "0x4002C34")]
			easeInOutQuart = 9,
			[Token(Token = "0x4002C35")]
			easeInQuint = 10,
			[Token(Token = "0x4002C36")]
			easeOutQuint = 11,
			[Token(Token = "0x4002C37")]
			easeInOutQuint = 12,
			[Token(Token = "0x4002C38")]
			easeInSine = 13,
			[Token(Token = "0x4002C39")]
			easeOutSine = 14,
			[Token(Token = "0x4002C3A")]
			easeInOutSine = 15,
			[Token(Token = "0x4002C3B")]
			easeInExpo = 16,
			[Token(Token = "0x4002C3C")]
			easeOutExpo = 17,
			[Token(Token = "0x4002C3D")]
			easeInOutExpo = 18,
			[Token(Token = "0x4002C3E")]
			easeInCirc = 19,
			[Token(Token = "0x4002C3F")]
			easeOutCirc = 20,
			[Token(Token = "0x4002C40")]
			easeInOutCirc = 21,
			[Token(Token = "0x4002C41")]
			linear = 22,
			[Token(Token = "0x4002C42")]
			spring = 23,
			[Token(Token = "0x4002C43")]
			easeInBounce = 24,
			[Token(Token = "0x4002C44")]
			easeOutBounce = 25,
			[Token(Token = "0x4002C45")]
			easeInOutBounce = 26,
			[Token(Token = "0x4002C46")]
			easeInBack = 27,
			[Token(Token = "0x4002C47")]
			easeOutBack = 28,
			[Token(Token = "0x4002C48")]
			easeInOutBack = 29,
			[Token(Token = "0x4002C49")]
			easeInElastic = 30,
			[Token(Token = "0x4002C4A")]
			easeOutElastic = 31,
			[Token(Token = "0x4002C4B")]
			easeInOutElastic = 32,
			[Token(Token = "0x4002C4C")]
			AnimationCurve = 999
		}

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE003C", Offset = "0xBE003C")]
		private sealed class <CallActionAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBE4")]
			private object <>2__current;

			[Token(Token = "0x4002C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x4002C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x17000540")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E67")]
				[Address(RVA = "0x1DD5564", Offset = "0x1DD5564", VA = "0x1DD5564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000541")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E69")]
				[Address(RVA = "0x1DD5634", Offset = "0x1DD5634", VA = "0x1DD5634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0x1DD5118", Offset = "0x1DD5118", VA = "0x1DD5118")]
			[DebuggerHidden]
			public <CallActionAfterDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002E65")]
			[Address(RVA = "0x1DD53AC", Offset = "0x1DD53AC", VA = "0x1DD53AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0x1DD53C0", Offset = "0x1DD53C0", VA = "0x1DD53C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x1DD5594", Offset = "0x1DD5594", VA = "0x1DD5594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1DD2954", Offset = "0x1DD2954", VA = "0x1DD2954")]
		public static TweenMethods.TweenFunction GetTweenFunction(TweenType progressMode)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1DD35A8", Offset = "0x1DD35A8", VA = "0x1DD35A8")]
		public static bool ContainsTransition(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1DD3698", Offset = "0x1DD3698", VA = "0x1DD3698")]
		public static List<TransitionBase> TransitionIn(GameObject gameObject, [Optional] Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1DD3814", Offset = "0x1DD3814", VA = "0x1DD3814")]
		private static List<TransitionBase> TransitionIn(GameObject gameObject, bool isRecursiveCall)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1DD457C", Offset = "0x1DD457C", VA = "0x1DD457C")]
		public static List<TransitionBase> TransitionOut(GameObject gameObject, [Optional] Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x1DD46F8", Offset = "0x1DD46F8", VA = "0x1DD46F8")]
		private static List<TransitionBase> TransitionOut(GameObject gameObject, bool isRecursiveCall)
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1DD3F4C", Offset = "0x1DD3F4C", VA = "0x1DD3F4C")]
		public static float GetTransitionInTime(List<TransitionBase> transitionBases)
		{
			return default(float);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1DD4BD4", Offset = "0x1DD4BD4", VA = "0x1DD4BD4")]
		public static float GetTransitionOutTime(List<TransitionBase> transitionBases)
		{
			return default(float);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1DD4490", Offset = "0x1DD4490", VA = "0x1DD4490")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC1F940", Offset = "0xC1F940")]
		public static IEnumerator CallActionAfterDelay(float delay, Action action)
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1DD5160", Offset = "0x1DD5160", VA = "0x1DD5160")]
		public static Texture2D TakeScreenshot()
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1DD2764", Offset = "0x1DD2764", VA = "0x1DD2764")]
		public static void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1DD537C", Offset = "0x1DD537C", VA = "0x1DD537C")]
		public TransitionHelper()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.TransitionSteps
{
	[Token(Token = "0x200039D")]
	public class ColorTransition : TransitionStep
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color _startValue;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C03")]
		private Color _endValue;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF2F8", Offset = "0xBFF2F8")]
		private Color <Value>k__BackingField;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF334", Offset = "0xBFF334")]
		private Color <OriginalValue>k__BackingField;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF370", Offset = "0xBFF370")]
		private Gradient <Gradient>k__BackingField;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image[] _images;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RawImage[] _rawImages;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0B")]
		private Text[] _texts;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SpriteRenderer[] _spriteRenderers;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBF4")]
		private Material[] _materials;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasComponentReferences;

		[Token(Token = "0x17000348")]
		public Color StartValue
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x1DD8AA8", Offset = "0x1DD8AA8", VA = "0x1DD8AA8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x1DD8AF0", Offset = "0x1DD8AF0", VA = "0x1DD8AF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public Color EndValue
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1DD9130", Offset = "0x1DD9130", VA = "0x1DD9130")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1DD9178", Offset = "0x1DD9178", VA = "0x1DD9178")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public Color Value
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x1DD98DC", Offset = "0x1DD98DC", VA = "0x1DD98DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1F9F0", Offset = "0xC1F9F0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x1DD9924", Offset = "0x1DD9924", VA = "0x1DD9924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1FA2C", Offset = "0xC1FA2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public Color OriginalValue
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0x1DD9A54", Offset = "0x1DD9A54", VA = "0x1DD9A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1FA68", Offset = "0xC1FA68")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001969")]
			[Address(RVA = "0x1DD9A9C", Offset = "0x1DD9A9C", VA = "0x1DD9A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1FAA4", Offset = "0xC1FAA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public Gradient Gradient
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x1DD9BCC", Offset = "0x1DD9BCC", VA = "0x1DD9BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1FAE0", Offset = "0xC1FAE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x1DD9BFC", Offset = "0x1DD9BFC", VA = "0x1DD9BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1FB1C", Offset = "0xC1FB1C")]
			set
			{
			}
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1DD9C34", Offset = "0x1DD9C34", VA = "0x1DD9C34")]
		public ColorTransition(GameObject target, Color startColor, Color endColor, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1DDA1C8", Offset = "0x1DDA1C8", VA = "0x1DDA1C8")]
		public ColorTransition(GameObject target, [Optional] Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1DDA3EC", Offset = "0x1DDA3EC", VA = "0x1DDA3EC")]
		private TransitionStep SetStartValue(Color value)
		{
			return null;
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1DDA52C", Offset = "0x1DDA52C", VA = "0x1DDA52C")]
		private TransitionStep SetEndValue(Color value)
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1DD9EE0", Offset = "0x1DD9EE0", VA = "0x1DD9EE0")]
		public Color GetCurrent()
		{
			return default(Color);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1DDAFF8", Offset = "0x1DDAFF8", VA = "0x1DDAFF8")]
		public void SetCurrent(Color color)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1DDA66C", Offset = "0x1DDA66C", VA = "0x1DDA66C")]
		private void SetupComponentReferences()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1DDB830", Offset = "0x1DDB830", VA = "0x1DDB830", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1DDBA24", Offset = "0x1DDBA24", VA = "0x1DDBA24", Slot = "13")]
		protected override void ProgressUpdated()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public static class ColorTransitionExtensions
	{
		[Token(Token = "0x6001975")]
		[Address(RVA = "0x1DDBAB4", Offset = "0x1DDBAB4", VA = "0x1DDBAB4")]
		public static ColorTransition ColorTransition(this TransitionStep transitionStep, Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1DDBC98", Offset = "0x1DDBC98", VA = "0x1DDBC98")]
		public static ColorTransition ColorTransitionToOriginal(this TransitionStep transitionStep, Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1DDBDB8", Offset = "0x1DDBDB8", VA = "0x1DDBDB8")]
		public static ColorTransition ColorTransitionToCurrent(this TransitionStep transitionStep, Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1DDBED8", Offset = "0x1DDBED8", VA = "0x1DDBED8")]
		public static ColorTransition ColorTransitionFromOriginal(this TransitionStep transitionStep, Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1DDBFF8", Offset = "0x1DDBFF8", VA = "0x1DDBFF8")]
		public static ColorTransition ColorTransitionFromCurrent(this TransitionStep transitionStep, Gradient gradient, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1DDC118", Offset = "0x1DDC118", VA = "0x1DDC118")]
		public static ColorTransition ColorTransition(this TransitionStep transitionStep, Color startColor, Color endColor, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1DDC538", Offset = "0x1DDC538", VA = "0x1DDC538")]
		public static ColorTransition ColorTransitionToOriginal(this TransitionStep transitionStep, Color startColor, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1DDC6A0", Offset = "0x1DDC6A0", VA = "0x1DDC6A0")]
		public static ColorTransition ColorTransitionToCurrent(this TransitionStep transitionStep, Color startColor, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1DDC808", Offset = "0x1DDC808", VA = "0x1DDC808")]
		public static ColorTransition ColorTransitionFromOriginal(this TransitionStep transitionStep, Color endColor, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1DDC970", Offset = "0x1DDC970", VA = "0x1DDC970")]
		public static ColorTransition ColorTransitionFromCurrent(this TransitionStep transitionStep, Color endColor, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x200039F")]
	public class Fade : TransitionStepFloat
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CanvasGroup[] _canvasGroups;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image[] _images;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C13")]
		private RawImage[] _rawImages;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Text[] _texts;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FBFC")]
		private SpriteRenderer[] _spriteRenderers;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material[] _materials;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasComponentReferences;

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1DDCAD8", Offset = "0x1DDCAD8", VA = "0x1DDCAD8")]
		public Fade(GameObject target, float startTransparency = 0f, float endTransparency = 1f, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1DDD070", Offset = "0x1DDD070", VA = "0x1DDD070", Slot = "14")]
		public override float GetCurrent()
		{
			return default(float);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1DDDFE4", Offset = "0x1DDDFE4", VA = "0x1DDDFE4", Slot = "15")]
		public override void SetCurrent(float transparency)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1DDD4BC", Offset = "0x1DDD4BC", VA = "0x1DDD4BC")]
		private void SetupComponentReferences()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public static class FadeExtensions
	{
		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1DDEA10", Offset = "0x1DDEA10", VA = "0x1DDEA10")]
		public static Fade Fade(this TransitionStep transitionStep, float startTransparency, float endTransparency, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1DDEBF8", Offset = "0x1DDEBF8", VA = "0x1DDEBF8")]
		public static Fade FadeToOriginal(this TransitionStep transitionStep, float startTransparency, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1DDED1C", Offset = "0x1DDED1C", VA = "0x1DDED1C")]
		public static Fade FadeToCurrent(this TransitionStep transitionStep, float startTransparency, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x1DDEE40", Offset = "0x1DDEE40", VA = "0x1DDEE40")]
		public static Fade FadeFromOriginal(this TransitionStep transitionStep, float endTransparency, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1DDEF64", Offset = "0x1DDEF64", VA = "0x1DDEF64")]
		public static Fade FadeFromCurrent(this TransitionStep transitionStep, float endTransparency, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A1")]
	public class Move : TransitionStepVector3
	{
		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1DDF088", Offset = "0x1DDF088", VA = "0x1DDF088")]
		public Move(GameObject target, [Optional] Vector3? startPosition, [Optional] Vector3? endPosition, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1DDF49C", Offset = "0x1DDF49C", VA = "0x1DDF49C", Slot = "14")]
		public override Vector3 GetCurrent()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1DDF6C4", Offset = "0x1DDF6C4", VA = "0x1DDF6C4", Slot = "15")]
		public override void SetCurrent(Vector3 position)
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public static class MoveExtensions
	{
		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1DDF954", Offset = "0x1DDF954", VA = "0x1DDF954")]
		public static Move Move(this TransitionStep transitionStep, Vector3 startPosition, Vector3 endPosition, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1DDFBEC", Offset = "0x1DDFBEC", VA = "0x1DDFBEC")]
		public static Move MoveToOriginal(this TransitionStep transitionStep, Vector3 startPosition, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x1DDFDD4", Offset = "0x1DDFDD4", VA = "0x1DDFDD4")]
		public static Move MoveToCurrent(this TransitionStep transitionStep, Vector3 startPosition, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1DDFFBC", Offset = "0x1DDFFBC", VA = "0x1DDFFBC")]
		public static Move MoveFromOriginal(this TransitionStep transitionStep, Vector3 endPosition, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1DE01A4", Offset = "0x1DE01A4", VA = "0x1DE01A4")]
		public static Move MoveFromCurrent(this TransitionStep transitionStep, Vector3 endPosition, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A3")]
	public class Rotate : TransitionStepVector3
	{
		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1DE038C", Offset = "0x1DE038C", VA = "0x1DE038C")]
		public Rotate(GameObject target, [Optional] Vector3? startRotation, [Optional] Vector3? endRotation, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1DE0598", Offset = "0x1DE0598", VA = "0x1DE0598", Slot = "14")]
		public override Vector3 GetCurrent()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1DE0684", Offset = "0x1DE0684", VA = "0x1DE0684", Slot = "15")]
		public override void SetCurrent(Vector3 rotation)
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public static class RotateExtensions
	{
		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1DE07B0", Offset = "0x1DE07B0", VA = "0x1DE07B0")]
		public static Rotate Rotate(this TransitionStep transitionStep, Vector3 startRotation, Vector3 endRotation, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1DE0A48", Offset = "0x1DE0A48", VA = "0x1DE0A48")]
		public static Rotate RotateToOriginal(this TransitionStep transitionStep, Vector3 startRotation, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1DE0C30", Offset = "0x1DE0C30", VA = "0x1DE0C30")]
		public static Rotate RotateToCurrent(this TransitionStep transitionStep, Vector3 startRotation, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1DE0E18", Offset = "0x1DE0E18", VA = "0x1DE0E18")]
		public static Rotate RotateFromOriginal(this TransitionStep transitionStep, Vector3 endRotation, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1DE1000", Offset = "0x1DE1000", VA = "0x1DE1000")]
		public static Rotate RotateFromCurrent(this TransitionStep transitionStep, Vector3 endRotation, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, TransitionStep.CoordinateSpaceType coordinateMode = TransitionStep.CoordinateSpaceType.Global, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A5")]
	public class Scale : TransitionStepVector3
	{
		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1DE11E8", Offset = "0x1DE11E8", VA = "0x1DE11E8")]
		public Scale(GameObject target, [Optional] Vector3? startScale, [Optional] Vector3? endScale, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1DE13D8", Offset = "0x1DE13D8", VA = "0x1DE13D8", Slot = "14")]
		public override Vector3 GetCurrent()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1DE1450", Offset = "0x1DE1450", VA = "0x1DE1450", Slot = "15")]
		public override void SetCurrent(Vector3 scale)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public static class ScaleExtensions
	{
		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1DE14E8", Offset = "0x1DE14E8", VA = "0x1DE14E8")]
		public static Scale Scale(this TransitionStep transitionStep, Vector3 startScale, Vector3 endScale, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1DE1770", Offset = "0x1DE1770", VA = "0x1DE1770")]
		public static Scale ScaleToOriginal(this TransitionStep transitionStep, Vector3 startScale, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1DE1948", Offset = "0x1DE1948", VA = "0x1DE1948")]
		public static Scale ScaleToCurrent(this TransitionStep transitionStep, Vector3 startScale, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x1DE1B20", Offset = "0x1DE1B20", VA = "0x1DE1B20")]
		public static Scale ScaleFromOriginal(this TransitionStep transitionStep, Vector3 endScale, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x1DE1CF8", Offset = "0x1DE1CF8", VA = "0x1DE1CF8")]
		public static Scale ScaleFromCurrent(this TransitionStep transitionStep, Vector3 endScale, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A7")]
	public class ScreenFade : TransitionStepScreen
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D Texture;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C1B")]
		public Color Color;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly ScreenFadeComponents _screenFadeComponents;

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x1DE1ED0", Offset = "0x1DE1ED0", VA = "0x1DE1ED0")]
		public ScreenFade(GameObject target, [Optional] Color? color, [Optional] Texture2D texture, float delay = 0f, float duration = 0.5f, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1DE2414", Offset = "0x1DE2414", VA = "0x1DE2414", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1DE2854", Offset = "0x1DE2854", VA = "0x1DE2854", Slot = "15")]
		public override void SetCurrent(float progress)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x1DE2494", Offset = "0x1DE2494", VA = "0x1DE2494")]
		private void SetConfiguration(Texture2D texture, Color color)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x1DE2C2C", Offset = "0x1DE2C2C", VA = "0x1DE2C2C", Slot = "17")]
		protected override void SetTransitionDisplayedState(bool isDisplayed)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1DE2A54", Offset = "0x1DE2A54", VA = "0x1DE2A54")]
		private ScreenFadeComponents TargetComponents()
		{
			return null;
		}
	}
	[Token(Token = "0x20003A8")]
	public class ScreenFadeComponents
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF3AC", Offset = "0xBFF3AC")]
		private bool <PersistantAcrossScenes>k__BackingField;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _baseGameObject;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RawImage _fadeRawImage;

		[Token(Token = "0x1700034D")]
		public bool PersistantAcrossScenes
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1DE32E0", Offset = "0x1DE32E0", VA = "0x1DE32E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20260", Offset = "0xC20260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x1DE3324", Offset = "0x1DE3324", VA = "0x1DE3324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2029C", Offset = "0xC2029C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public GameObject BaseGameObject
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x1DE300C", Offset = "0x1DE300C", VA = "0x1DE300C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x1DE35C4", Offset = "0x1DE35C4", VA = "0x1DE35C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public RawImage FadeRawImage
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x1DE2AF8", Offset = "0x1DE2AF8", VA = "0x1DE2AF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1DE35FC", Offset = "0x1DE35FC", VA = "0x1DE35FC")]
			set
			{
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1DE3370", Offset = "0x1DE3370", VA = "0x1DE3370")]
		private void CreateComponents()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1DE3140", Offset = "0x1DE3140", VA = "0x1DE3140")]
		public void DeleteComponents()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1DE23E4", Offset = "0x1DE23E4", VA = "0x1DE23E4")]
		public ScreenFadeComponents()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public static class ScreenFadeExtensions
	{
		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x1DE3634", Offset = "0x1DE3634", VA = "0x1DE3634")]
		public static ScreenFade ScreenFade(this TransitionStep transitionStep, [Optional] Color? color, [Optional] Texture2D texture, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AA")]
	public class ScreenWipe : TransitionStepScreen
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D Texture;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C23")]
		public Color Color;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D MaskTexture;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC0C")]
		public bool InvertMask;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Softness;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ScreenWipeComponents _screenWipeComponents;

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1DE3834", Offset = "0x1DE3834", VA = "0x1DE3834")]
		public ScreenWipe(GameObject target, Texture2D maskTexture, bool invertMask = false, [Optional] Color? color, [Optional] Texture2D texture, float softness = 0f, float delay = 0f, float duration = 0.5f, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1DE3B50", Offset = "0x1DE3B50", VA = "0x1DE3B50", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1DE3FE8", Offset = "0x1DE3FE8", VA = "0x1DE3FE8", Slot = "15")]
		public override void SetCurrent(float progress)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1DE3C08", Offset = "0x1DE3C08", VA = "0x1DE3C08")]
		private void SetConfiguration(Texture2D texture, Color color, Texture2D maskTexture, bool invertMask, float softness = 0f)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1DE43D4", Offset = "0x1DE43D4", VA = "0x1DE43D4", Slot = "17")]
		protected override void SetTransitionDisplayedState(bool isDisplayed)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1DE40C8", Offset = "0x1DE40C8", VA = "0x1DE40C8")]
		private ScreenWipeComponents TargetComponents()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AB")]
	public class ScreenWipeComponents
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF3E8", Offset = "0xBFF3E8")]
		private bool <PersistantAcrossScenes>k__BackingField;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C2B")]
		private GameObject _baseGameObject;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RawImage _wipeRawImage;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC14")]
		private Material _wipeMaterial;

		[Token(Token = "0x17000350")]
		public bool PersistantAcrossScenes
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x1DE4924", Offset = "0x1DE4924", VA = "0x1DE4924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20314", Offset = "0xC20314")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1DE4968", Offset = "0x1DE4968", VA = "0x1DE4968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20350", Offset = "0xC20350")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public GameObject BaseGameObject
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x1DE4650", Offset = "0x1DE4650", VA = "0x1DE4650")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x1DE4E50", Offset = "0x1DE4E50", VA = "0x1DE4E50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public RawImage WipeRawImage
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x1DE42A0", Offset = "0x1DE42A0", VA = "0x1DE42A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x1DE4E88", Offset = "0x1DE4E88", VA = "0x1DE4E88")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public Material WipeMaterial
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1DE416C", Offset = "0x1DE416C", VA = "0x1DE416C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x1DE4EC0", Offset = "0x1DE4EC0", VA = "0x1DE4EC0")]
			set
			{
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1DE49B4", Offset = "0x1DE49B4", VA = "0x1DE49B4")]
		private void CreateComponents()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1DE4784", Offset = "0x1DE4784", VA = "0x1DE4784")]
		public void DeleteComponents()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1DE3B20", Offset = "0x1DE3B20", VA = "0x1DE3B20")]
		public ScreenWipeComponents()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public static class ScreenWipeExtensions
	{
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1DE4EF8", Offset = "0x1DE4EF8", VA = "0x1DE4EF8")]
		public static ScreenWipe ScreenWipe(this TransitionStep transitionStep, Texture2D maskTexture, bool invertMask = false, [Optional] Color? color, [Optional] Texture2D texture, float softness = 0f, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AD")]
	public class TransitionController : MonoBehaviour
	{
		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0078", Offset = "0xBE0078")]
		private sealed class <LoadSceneAndWaitForLoad>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TransitionController <>4__this;

			[Token(Token = "0x4002C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C3B")]
			public string sceneToLoad;

			[Token(Token = "0x17000542")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E6D")]
				[Address(RVA = "0x1DE5C10", Offset = "0x1DE5C10", VA = "0x1DE5C10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000543")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E6F")]
				[Address(RVA = "0x1DE5CE0", Offset = "0x1DE5CE0", VA = "0x1DE5CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x1DE568C", Offset = "0x1DE568C", VA = "0x1DE568C")]
			[DebuggerHidden]
			public <LoadSceneAndWaitForLoad>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x1DE5890", Offset = "0x1DE5890", VA = "0x1DE5890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x1DE58A4", Offset = "0x1DE58A4", VA = "0x1DE58A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x1DE5C40", Offset = "0x1DE5C40", VA = "0x1DE5C40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00B4", Offset = "0xBE00B4")]
		private sealed class <TakeScreenshotCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC24")]
			private object <>2__current;

			[Token(Token = "0x4002C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TransitionController <>4__this;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E73")]
				[Address(RVA = "0x1DE5EE8", Offset = "0x1DE5EE8", VA = "0x1DE5EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E75")]
				[Address(RVA = "0x1DE5FB8", Offset = "0x1DE5FB8", VA = "0x1DE5FB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x1DE5818", Offset = "0x1DE5818", VA = "0x1DE5818")]
			[DebuggerHidden]
			public <TakeScreenshotCoroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x1DE5D10", Offset = "0x1DE5D10", VA = "0x1DE5D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E72")]
			[Address(RVA = "0x1DE5D24", Offset = "0x1DE5D24", VA = "0x1DE5D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x1DE5F18", Offset = "0x1DE5F18", VA = "0x1DE5F18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF424", Offset = "0xBFF424")]
		private Texture2D <ScreenSnapshot>k__BackingField;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF460", Offset = "0xBFF460")]
		private bool <IsInCrossTransition>k__BackingField;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF49C", Offset = "0xBFF49C")]
		private ScreenWipeComponents <SharedScreenWipeComponents>k__BackingField;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF4D8", Offset = "0xBFF4D8")]
		private ScreenFadeComponents <SharedScreenFadeComponents>k__BackingField;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static TransitionController _instance;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC1C")]
		private bool _newSceneLoaded;

		[Token(Token = "0x17000354")]
		public Texture2D ScreenSnapshot
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x1DE5168", Offset = "0x1DE5168", VA = "0x1DE5168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC203C8", Offset = "0xC203C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1DE5198", Offset = "0x1DE5198", VA = "0x1DE5198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20404", Offset = "0xC20404")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsInCrossTransition
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x1DE51D0", Offset = "0x1DE51D0", VA = "0x1DE51D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20440", Offset = "0xC20440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x1DE5214", Offset = "0x1DE5214", VA = "0x1DE5214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2047C", Offset = "0xC2047C")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public ScreenWipeComponents SharedScreenWipeComponents
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x1DE5260", Offset = "0x1DE5260", VA = "0x1DE5260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC204B8", Offset = "0xC204B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x1DE5290", Offset = "0x1DE5290", VA = "0x1DE5290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC204F4", Offset = "0xC204F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public ScreenFadeComponents SharedScreenFadeComponents
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x1DE52C8", Offset = "0x1DE52C8", VA = "0x1DE52C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20530", Offset = "0xC20530")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x1DE52F8", Offset = "0x1DE52F8", VA = "0x1DE52F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2056C", Offset = "0xC2056C")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public static TransitionController Instance
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x1DD3CF0", Offset = "0x1DD3CF0", VA = "0x1DD3CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x1DE5408", Offset = "0x1DE5408", VA = "0x1DE5408")]
			private set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public static bool IsActive
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x1DE5490", Offset = "0x1DE5490", VA = "0x1DE5490")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1DE5330", Offset = "0x1DE5330", VA = "0x1DE5330")]
		private void Setup()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1DE55A8", Offset = "0x1DE55A8", VA = "0x1DE55A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC205A8", Offset = "0xC205A8")]
		public IEnumerator LoadSceneAndWaitForLoad(string sceneToLoad)
		{
			return null;
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1DE56D4", Offset = "0x1DE56D4", VA = "0x1DE56D4")]
		private void OnSceneFinishedLoading(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1DE5714", Offset = "0x1DE5714", VA = "0x1DE5714")]
		public void TakeScreenshot()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1DE575C", Offset = "0x1DE575C", VA = "0x1DE575C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC20658", Offset = "0xC20658")]
		public IEnumerator TakeScreenshotCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1DE5860", Offset = "0x1DE5860", VA = "0x1DE5860")]
		public TransitionController()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class TransitionStepFloat : TransitionStepValue<float>
	{
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1DDCE24", Offset = "0x1DDCE24", VA = "0x1DDCE24")]
		public TransitionStepFloat([Optional] GameObject target, [Optional] float? startValue, [Optional] float? endValue, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1DE5FE8", Offset = "0x1DE5FE8", VA = "0x1DE5FE8")]
		private TransitionStep SetStartValue(float value)
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1DE6078", Offset = "0x1DE6078", VA = "0x1DE6078")]
		private TransitionStep SetEndValue(float value)
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1DE2658", Offset = "0x1DE2658", VA = "0x1DE2658", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1DE6108", Offset = "0x1DE6108", VA = "0x1DE6108", Slot = "13")]
		protected override void ProgressUpdated()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class TransitionStepScreen : TransitionStepFloat
	{
		[Token(Token = "0x2000684")]
		public enum SceneChangeModeType
		{
			[Token(Token = "0x4002C59")]
			None,
			[Token(Token = "0x4002C5A")]
			CrossTransition,
			[Token(Token = "0x4002C5B")]
			End
		}

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00F0", Offset = "0xBE00F0")]
		private sealed class <TransitionLoop>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C4B")]
			private int <>1__state;

			[Token(Token = "0x4002C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA6C")]
			public TransitionStepScreen <>4__this;

			[Token(Token = "0x4002C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <normalisedFactor>5__2;

			[Token(Token = "0x17000546")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E79")]
				[Address(RVA = "0x1DE7414", Offset = "0x1DE7414", VA = "0x1DE7414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000547")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E7B")]
				[Address(RVA = "0x1DE74E4", Offset = "0x1DE74E4", VA = "0x1DE74E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x1DE64A8", Offset = "0x1DE64A8", VA = "0x1DE64A8")]
			[DebuggerHidden]
			public <TransitionLoop>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002E77")]
			[Address(RVA = "0x1DE6878", Offset = "0x1DE6878", VA = "0x1DE6878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E78")]
			[Address(RVA = "0x1DE688C", Offset = "0x1DE688C", VA = "0x1DE688C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x1DE7444", Offset = "0x1DE7444", VA = "0x1DE7444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF514", Offset = "0xBFF514")]
		private RawImage <SiblingRawImage>k__BackingField;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF550", Offset = "0xBFF550")]
		private SceneChangeModeType <SceneChangeMode>k__BackingField;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C43")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF58C", Offset = "0xBFF58C")]
		private string <SceneToLoad>k__BackingField;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF5C8", Offset = "0xBFF5C8")]
		private bool <SkipOnCrossTransition>k__BackingField;

		[Token(Token = "0x1700035A")]
		protected RawImage SiblingRawImage
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x1DE6224", Offset = "0x1DE6224", VA = "0x1DE6224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20708", Offset = "0xC20708")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x1DE6254", Offset = "0x1DE6254", VA = "0x1DE6254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20744", Offset = "0xC20744")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public SceneChangeModeType SceneChangeMode
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x1DE628C", Offset = "0x1DE628C", VA = "0x1DE628C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20780", Offset = "0xC20780")]
			get
			{
				return default(SceneChangeModeType);
			}
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x1DE62BC", Offset = "0x1DE62BC", VA = "0x1DE62BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC207BC", Offset = "0xC207BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public string SceneToLoad
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x1DE62F4", Offset = "0x1DE62F4", VA = "0x1DE62F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC207F8", Offset = "0xC207F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x1DE6324", Offset = "0x1DE6324", VA = "0x1DE6324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20834", Offset = "0xC20834")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public bool SkipOnCrossTransition
		{
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x1DE635C", Offset = "0x1DE635C", VA = "0x1DE635C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20870", Offset = "0xC20870")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x1DE63A0", Offset = "0x1DE63A0", VA = "0x1DE63A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC208AC", Offset = "0xC208AC")]
			set
			{
			}
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1DE214C", Offset = "0x1DE214C", VA = "0x1DE214C")]
		public TransitionStepScreen(GameObject target, SceneChangeModeType sceneChangeMode = SceneChangeModeType.None, [Optional] string sceneToLoad, bool skipOnCrossTransition = true, float delay = 0f, float duration = 0.5f, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] TransitionStep onCompleteItem, [Optional] Action<TransitionStep> onComplete, [Optional] Action<object> onCompleteWithData, [Optional] object onCompleteData)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1DE63EC", Offset = "0x1DE63EC", VA = "0x1DE63EC", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC208E8", Offset = "0xC208E8")]
		protected override IEnumerator TransitionLoop()
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1DE64F0", Offset = "0x1DE64F0", VA = "0x1DE64F0", Slot = "12")]
		protected override void TransitionCompleted()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1DE66E0", Offset = "0x1DE66E0", VA = "0x1DE66E0", Slot = "16")]
		protected virtual void SetupComponents()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1DE2EA8", Offset = "0x1DE2EA8", VA = "0x1DE2EA8", Slot = "17")]
		protected virtual void SetTransitionDisplayedState(bool isDisplayed)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class TransitionStepVector3 : TransitionStepValue<Vector3>
	{
		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1DDF294", Offset = "0x1DDF294", VA = "0x1DDF294")]
		public TransitionStepVector3([Optional] GameObject target, [Optional] Vector3? startValue, [Optional] Vector3? endValue, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1DE7514", Offset = "0x1DE7514", VA = "0x1DE7514")]
		private TransitionStep SetStartValue(Vector3 value)
		{
			return null;
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1DE75B4", Offset = "0x1DE75B4", VA = "0x1DE75B4")]
		private TransitionStep SetEndValue(Vector3 value)
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1DE7654", Offset = "0x1DE7654", VA = "0x1DE7654", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1DE7890", Offset = "0x1DE7890", VA = "0x1DE7890", Slot = "13")]
		protected override void ProgressUpdated()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class TriggerAnimation : TransitionStepFloat
	{
		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE012C", Offset = "0xBE012C")]
		private sealed class <TransitionLoop>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC34")]
			private int <>1__state;

			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TriggerAnimation <>4__this;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <stateReached>5__2;

			[Token(Token = "0x17000548")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E7F")]
				[Address(RVA = "0x1DE875C", Offset = "0x1DE875C", VA = "0x1DE875C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000549")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E81")]
				[Address(RVA = "0x1DE882C", Offset = "0x1DE882C", VA = "0x1DE882C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0x1DE7DDC", Offset = "0x1DE7DDC", VA = "0x1DE7DDC")]
			[DebuggerHidden]
			public <TransitionLoop>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0x1DE7E24", Offset = "0x1DE7E24", VA = "0x1DE7E24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0x1DE7E38", Offset = "0x1DE7E38", VA = "0x1DE7E38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E80")]
			[Address(RVA = "0x1DE878C", Offset = "0x1DE878C", VA = "0x1DE878C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF604", Offset = "0xBFF604")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF640", Offset = "0xBFF640")]
		private Animator <Animator>k__BackingField;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C52")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF67C", Offset = "0xBFF67C")]
		private string <Trigger>k__BackingField;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF6B8", Offset = "0xBFF6B8")]
		private string <TargetState>k__BackingField;

		[Token(Token = "0x1700035E")]
		public float Speed
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x1DE7AD0", Offset = "0x1DE7AD0", VA = "0x1DE7AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20998", Offset = "0xC20998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x1DE7B00", Offset = "0x1DE7B00", VA = "0x1DE7B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC209D4", Offset = "0xC209D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public Animator Animator
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x1DE7B38", Offset = "0x1DE7B38", VA = "0x1DE7B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20A10", Offset = "0xC20A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1DE7B68", Offset = "0x1DE7B68", VA = "0x1DE7B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20A4C", Offset = "0xC20A4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public string Trigger
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x1DE7BA0", Offset = "0x1DE7BA0", VA = "0x1DE7BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20A88", Offset = "0xC20A88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x1DE7BD0", Offset = "0x1DE7BD0", VA = "0x1DE7BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20AC4", Offset = "0xC20AC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public string TargetState
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x1DE7C08", Offset = "0x1DE7C08", VA = "0x1DE7C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20B00", Offset = "0xC20B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x1DE7C38", Offset = "0x1DE7C38", VA = "0x1DE7C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20B3C", Offset = "0xC20B3C")]
			set
			{
			}
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1DD886C", Offset = "0x1DD886C", VA = "0x1DD886C")]
		public TriggerAnimation(GameObject target, float speed = 1f, float delay = 0f, float duration = 0.5f, string trigger = "TransitionIn", string targetState = "TransitionOut", [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1DE7D20", Offset = "0x1DE7D20", VA = "0x1DE7D20", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC20B78", Offset = "0xC20B78")]
		protected override IEnumerator TransitionLoop()
		{
			return null;
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1DE7C70", Offset = "0x1DE7C70", VA = "0x1DE7C70")]
		private void SetupComponentReferences()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public static class AnimationExtensions
	{
		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1DD86CC", Offset = "0x1DD86CC", VA = "0x1DD86CC")]
		public static TriggerAnimation TriggerAnimation(this TransitionStep transitionStep, float speed = 1f, float delay = 0f, float duration = 0.5f, string trigger = "TransitionIn", string targetState = "TransitionOut", bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B3")]
	public class VolumeTransition : TransitionStepFloat
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C5A")]
		private AudioSource[] _audioSources;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _hasComponentReferences;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1DE885C", Offset = "0x1DE885C", VA = "0x1DE885C")]
		public VolumeTransition(GameObject target, float startVolume = 0f, float endVolume = 1f, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1DE8ABC", Offset = "0x1DE8ABC", VA = "0x1DE8ABC", Slot = "14")]
		public override float GetCurrent()
		{
			return default(float);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x1DE8DCC", Offset = "0x1DE8DCC", VA = "0x1DE8DCC", Slot = "15")]
		public override void SetCurrent(float volume)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x1DE8B9C", Offset = "0x1DE8B9C", VA = "0x1DE8B9C")]
		private void SetupComponentReferences()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public static class VolumeTransitionExtensions
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1DE8F04", Offset = "0x1DE8F04", VA = "0x1DE8F04")]
		public static VolumeTransition VolumeTransition(this TransitionStep transitionStep, float startVolume, float endVolume, float delay = 0f, float duration = 0.5f, TransitionStep.TransitionModeType transitionMode = TransitionStep.TransitionModeType.Specified, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1DE90EC", Offset = "0x1DE90EC", VA = "0x1DE90EC")]
		public static VolumeTransition VolumeToOriginal(this TransitionStep transitionStep, float startVolume, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1DE9210", Offset = "0x1DE9210", VA = "0x1DE9210")]
		public static VolumeTransition VolumeToCurrent(this TransitionStep transitionStep, float startVolume, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x1DE9334", Offset = "0x1DE9334", VA = "0x1DE9334")]
		public static VolumeTransition VolumeFromOriginal(this TransitionStep transitionStep, float endVolume, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1DE9458", Offset = "0x1DE9458", VA = "0x1DE9458")]
		public static VolumeTransition VolumeFromCurrent(this TransitionStep transitionStep, float endVolume, float delay = 0f, float duration = 0.5f, TransitionStep.TimeUpdateMethodType timeUpdateMethod = TransitionStep.TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.TransitionSteps.AbstractClasses
{
	[Token(Token = "0x20003B5")]
	public class TransitionStep
	{
		[Token(Token = "0x2000687")]
		public enum TimeUpdateMethodType
		{
			[Token(Token = "0x4002C65")]
			GameTime,
			[Token(Token = "0x4002C66")]
			UnscaledGameTime
		}

		[Token(Token = "0x2000688")]
		public enum CoordinateSpaceType
		{
			[Token(Token = "0x4002C68")]
			Global,
			[Token(Token = "0x4002C69")]
			Local,
			[Token(Token = "0x4002C6A")]
			AnchoredPosition
		}

		[Token(Token = "0x2000689")]
		public enum TransitionModeType
		{
			[Token(Token = "0x4002C6C")]
			Specified,
			[Token(Token = "0x4002C6D")]
			ToOriginal,
			[Token(Token = "0x4002C6E")]
			FromCurrent,
			[Token(Token = "0x4002C6F")]
			FromOriginal,
			[Token(Token = "0x4002C70")]
			ToCurrent
		}

		[Token(Token = "0x200068A")]
		public enum LoopModeType
		{
			[Token(Token = "0x4002C72")]
			None,
			[Token(Token = "0x4002C73")]
			Loop,
			[Token(Token = "0x4002C74")]
			PingPong
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0168", Offset = "0xBE0168")]
		private sealed class <TransitionLoop>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC6C")]
			private int <>1__state;

			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TransitionStep <>4__this;

			[Token(Token = "0x4002C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <normalisedFactor>5__2;

			[Token(Token = "0x4002C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C92")]
			private float <delayTime>5__3;

			[Token(Token = "0x1700054A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E85")]
				[Address(RVA = "0x1DD85CC", Offset = "0x1DD85CC", VA = "0x1DD85CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E87")]
				[Address(RVA = "0x1DD869C", Offset = "0x1DD869C", VA = "0x1DD869C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E82")]
			[Address(RVA = "0x1DD6EC0", Offset = "0x1DD6EC0", VA = "0x1DD6EC0")]
			[DebuggerHidden]
			public <TransitionLoop>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0x1DD7890", Offset = "0x1DD7890", VA = "0x1DD7890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E84")]
			[Address(RVA = "0x1DD78A4", Offset = "0x1DD78A4", VA = "0x1DD78A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E86")]
			[Address(RVA = "0x1DD85FC", Offset = "0x1DD85FC", VA = "0x1DD85FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF6F4", Offset = "0xBFF6F4")]
		private GameObject <Target>k__BackingField;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF730", Offset = "0xBFF730")]
		private float <Progress>k__BackingField;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF76C", Offset = "0xBFF76C")]
		private float <ProgressTweened>k__BackingField;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF7A8", Offset = "0xBFF7A8")]
		private float <Delay>k__BackingField;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF7E4", Offset = "0xBFF7E4")]
		private float <Duration>k__BackingField;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private TransitionHelper.TweenType _tweenType;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF820", Offset = "0xBFF820")]
		private TimeUpdateMethodType <TimeUpdateMethod>k__BackingField;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF85C", Offset = "0xBFF85C")]
		private LoopModeType <LoopMode>k__BackingField;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF898", Offset = "0xBFF898")]
		private TransitionModeType <TransitionMode>k__BackingField;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF8D4", Offset = "0xBFF8D4")]
		private AnimationCurve <AnimationCurve>k__BackingField;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C6A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF910", Offset = "0xBFF910")]
		private CoordinateSpaceType <CoordinateSpace>k__BackingField;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF94C", Offset = "0xBFF94C")]
		private TransitionStep <Parent>k__BackingField;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF988", Offset = "0xBFF988")]
		private Action<TransitionStep> <OnStart>k__BackingField;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFF9C4", Offset = "0xBFF9C4")]
		private Action<TransitionStep> <OnUpdate>k__BackingField;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFA00", Offset = "0xBFFA00")]
		private Action<TransitionStep> <OnComplete>k__BackingField;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFA3C", Offset = "0xBFFA3C")]
		private object <UserData>k__BackingField;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C72")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFA78", Offset = "0xBFFA78")]
		private bool <IsStopped>k__BackingField;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFAB4", Offset = "0xBFFAB4")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC54")]
		private TweenMethods.TweenFunction _tweenFunction;

		[Token(Token = "0x17000362")]
		public GameObject Target
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x1DD5664", Offset = "0x1DD5664", VA = "0x1DD5664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20D90", Offset = "0xC20D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0x1DD5694", Offset = "0x1DD5694", VA = "0x1DD5694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20DCC", Offset = "0xC20DCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public float Progress
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x1DD56CC", Offset = "0x1DD56CC", VA = "0x1DD56CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20E08", Offset = "0xC20E08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x1DD56FC", Offset = "0x1DD56FC", VA = "0x1DD56FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20E44", Offset = "0xC20E44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public float ProgressTweened
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x1DD5734", Offset = "0x1DD5734", VA = "0x1DD5734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20E80", Offset = "0xC20E80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x1DD5764", Offset = "0x1DD5764", VA = "0x1DD5764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20EBC", Offset = "0xC20EBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public float Delay
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x1DD579C", Offset = "0x1DD579C", VA = "0x1DD579C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20EF8", Offset = "0xC20EF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x1DD57CC", Offset = "0x1DD57CC", VA = "0x1DD57CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20F34", Offset = "0xC20F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public float Duration
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0x1DD5804", Offset = "0x1DD5804", VA = "0x1DD5804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20F70", Offset = "0xC20F70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x1DD5834", Offset = "0x1DD5834", VA = "0x1DD5834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20FAC", Offset = "0xC20FAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public TransitionHelper.TweenType TweenType
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x1DD586C", Offset = "0x1DD586C", VA = "0x1DD586C")]
			get
			{
				return default(TransitionHelper.TweenType);
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x1DD589C", Offset = "0x1DD589C", VA = "0x1DD589C")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public TimeUpdateMethodType TimeUpdateMethod
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x1DD5908", Offset = "0x1DD5908", VA = "0x1DD5908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC20FE8", Offset = "0xC20FE8")]
			get
			{
				return default(TimeUpdateMethodType);
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x1DD5938", Offset = "0x1DD5938", VA = "0x1DD5938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21024", Offset = "0xC21024")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public LoopModeType LoopMode
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x1DD5970", Offset = "0x1DD5970", VA = "0x1DD5970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21060", Offset = "0xC21060")]
			get
			{
				return default(LoopModeType);
			}
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x1DD59A0", Offset = "0x1DD59A0", VA = "0x1DD59A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2109C", Offset = "0xC2109C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public TransitionModeType TransitionMode
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x1DD59D8", Offset = "0x1DD59D8", VA = "0x1DD59D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC210D8", Offset = "0xC210D8")]
			get
			{
				return default(TransitionModeType);
			}
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x1DD5A08", Offset = "0x1DD5A08", VA = "0x1DD5A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21114", Offset = "0xC21114")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public AnimationCurve AnimationCurve
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x1DD5A40", Offset = "0x1DD5A40", VA = "0x1DD5A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21150", Offset = "0xC21150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x1DD5A70", Offset = "0x1DD5A70", VA = "0x1DD5A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2118C", Offset = "0xC2118C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public CoordinateSpaceType CoordinateSpace
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x1DD5AA8", Offset = "0x1DD5AA8", VA = "0x1DD5AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC211C8", Offset = "0xC211C8")]
			get
			{
				return default(CoordinateSpaceType);
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x1DD5AD8", Offset = "0x1DD5AD8", VA = "0x1DD5AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21204", Offset = "0xC21204")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public TransitionStep Parent
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x1DD5B10", Offset = "0x1DD5B10", VA = "0x1DD5B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21240", Offset = "0xC21240")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x1DD5B40", Offset = "0x1DD5B40", VA = "0x1DD5B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2127C", Offset = "0xC2127C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public Action<TransitionStep> OnStart
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x1DD5B78", Offset = "0x1DD5B78", VA = "0x1DD5B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC212B8", Offset = "0xC212B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x1DD5BA8", Offset = "0x1DD5BA8", VA = "0x1DD5BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC212F4", Offset = "0xC212F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public Action<TransitionStep> OnUpdate
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x1DD5BE0", Offset = "0x1DD5BE0", VA = "0x1DD5BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21330", Offset = "0xC21330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x1DD5C10", Offset = "0x1DD5C10", VA = "0x1DD5C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2136C", Offset = "0xC2136C")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public Action<TransitionStep> OnComplete
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x1DD5C48", Offset = "0x1DD5C48", VA = "0x1DD5C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC213A8", Offset = "0xC213A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x1DD5C78", Offset = "0x1DD5C78", VA = "0x1DD5C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC213E4", Offset = "0xC213E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public object UserData
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x1DD5CB0", Offset = "0x1DD5CB0", VA = "0x1DD5CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21420", Offset = "0xC21420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x1DD5CE0", Offset = "0x1DD5CE0", VA = "0x1DD5CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2145C", Offset = "0xC2145C")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool IsStopped
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x1DD5D18", Offset = "0x1DD5D18", VA = "0x1DD5D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21498", Offset = "0xC21498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x1DD5D5C", Offset = "0x1DD5D5C", VA = "0x1DD5D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC214D4", Offset = "0xC214D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public bool IsPaused
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1DD5DA8", Offset = "0x1DD5DA8", VA = "0x1DD5DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21510", Offset = "0xC21510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x1DD5DEC", Offset = "0x1DD5DEC", VA = "0x1DD5DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2154C", Offset = "0xC2154C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x1DD5E38", Offset = "0x1DD5E38", VA = "0x1DD5E38")]
		public TransitionStep([Optional] GameObject target, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x1DD6300", Offset = "0x1DD6300", VA = "0x1DD6300")]
		public TransitionStep SetDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x1DD6344", Offset = "0x1DD6344", VA = "0x1DD6344")]
		public TransitionStep SetDuration(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1DD6388", Offset = "0x1DD6388", VA = "0x1DD6388")]
		public TransitionStep SetTweenType(TransitionHelper.TweenType tweenType)
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x1DD63CC", Offset = "0x1DD63CC", VA = "0x1DD63CC")]
		public TransitionStep SetTimeUpdateMethod(TimeUpdateMethodType timeUpdateMethod)
		{
			return null;
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x1DD6410", Offset = "0x1DD6410", VA = "0x1DD6410")]
		public TransitionStep SetLoopMode(LoopModeType loopMode)
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x1DD6454", Offset = "0x1DD6454", VA = "0x1DD6454")]
		public TransitionStep SetTransitionMode(TransitionModeType transitionMode)
		{
			return null;
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1DD6498", Offset = "0x1DD6498", VA = "0x1DD6498")]
		public TransitionStep SetAnimationCurve(AnimationCurve animationCurve)
		{
			return null;
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x1DD64DC", Offset = "0x1DD64DC", VA = "0x1DD64DC")]
		public TransitionStep SetCoordinateMode(CoordinateSpaceType coordinateMode)
		{
			return null;
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x1DD6060", Offset = "0x1DD6060", VA = "0x1DD6060")]
		public TransitionStep AddOnStartAction(Action<TransitionStep> action)
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1DD6140", Offset = "0x1DD6140", VA = "0x1DD6140")]
		public TransitionStep AddOnUpdateAction(Action<TransitionStep> action)
		{
			return null;
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1DD6220", Offset = "0x1DD6220", VA = "0x1DD6220")]
		public TransitionStep AddOnCompleteAction(Action<TransitionStep> action)
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x1DD6520", Offset = "0x1DD6520", VA = "0x1DD6520")]
		public TransitionStep AddOnCompleteAction(Action<TransitionStep> action, object userData)
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x1DD661C", Offset = "0x1DD661C", VA = "0x1DD661C")]
		public TransitionStep AddOnStartTransitionStep(TransitionStep transitionStep)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x1DD6794", Offset = "0x1DD6794", VA = "0x1DD6794")]
		public TransitionStep AddOnCompleteTransitionStep(TransitionStep transitionStep)
		{
			return null;
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1DD690C", Offset = "0x1DD690C", VA = "0x1DD690C")]
		public TransitionStep ChainCustomTransitionStep(float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, bool runAtStart = false, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x1DD6B7C", Offset = "0x1DD6B7C", VA = "0x1DD6B7C")]
		public TransitionStep GetChainRoot()
		{
			return null;
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x1DD6ACC", Offset = "0x1DD6ACC", VA = "0x1DD6ACC")]
		public void AddToChain(TransitionStep parent, bool runAtStart)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x1DD6C2C", Offset = "0x1DD6C2C", VA = "0x1DD6C2C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1DD6CC0", Offset = "0x1DD6CC0", VA = "0x1DD6CC0", Slot = "5")]
		public virtual void Start(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x1DD6CF4", Offset = "0x1DD6CF4", VA = "0x1DD6CF4", Slot = "6")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1DD6D2C", Offset = "0x1DD6D2C", VA = "0x1DD6D2C", Slot = "7")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1DD6D64", Offset = "0x1DD6D64", VA = "0x1DD6D64", Slot = "8")]
		public virtual void Resume()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1DD6D9C", Offset = "0x1DD6D9C", VA = "0x1DD6D9C", Slot = "9")]
		public virtual void Complete()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1DD6E04", Offset = "0x1DD6E04", VA = "0x1DD6E04", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21588", Offset = "0xC21588")]
		protected virtual IEnumerator TransitionLoop()
		{
			return null;
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1DD6F08", Offset = "0x1DD6F08", VA = "0x1DD6F08", Slot = "11")]
		protected virtual void TransitionStarted()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x1DD6FD8", Offset = "0x1DD6FD8", VA = "0x1DD6FD8", Slot = "12")]
		protected virtual void TransitionCompleted()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1DD70A8", Offset = "0x1DD70A8", VA = "0x1DD70A8")]
		public void SetProgressToStart()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1DD6DCC", Offset = "0x1DD6DCC", VA = "0x1DD6DCC")]
		public void SetProgressToEnd()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1DD70DC", Offset = "0x1DD70DC", VA = "0x1DD70DC")]
		public void SetProgress(float progress)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1DD75D0", Offset = "0x1DD75D0", VA = "0x1DD75D0", Slot = "13")]
		protected virtual void ProgressUpdated()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1DD75E4", Offset = "0x1DD75E4", VA = "0x1DD75E4")]
		protected float ValueFromProgressTweened(float start, float end)
		{
			return default(float);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1DD74A0", Offset = "0x1DD74A0", VA = "0x1DD74A0")]
		protected float ValueFromProgress(float start, float end)
		{
			return default(float);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1DD7670", Offset = "0x1DD7670", VA = "0x1DD7670")]
		private float ValueFromProgressAnimationCurve(float start, float end)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003B6")]
	public abstract class TransitionStepValue<T> : TransitionStep where T : struct
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFAF0", Offset = "0xBFFAF0")]
		private T <StartValue>k__BackingField;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFB2C", Offset = "0xBFFB2C")]
		private T <EndValue>k__BackingField;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFB68", Offset = "0xBFFB68")]
		private T <Value>k__BackingField;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFBA4", Offset = "0xBFFBA4")]
		private T <OriginalValue>k__BackingField;

		[Token(Token = "0x17000374")]
		public T StartValue
		{
			[Token(Token = "0x6001A45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21638", Offset = "0xC21638")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A46")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21674", Offset = "0xC21674")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public T EndValue
		{
			[Token(Token = "0x6001A47")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC216B0", Offset = "0xC216B0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC216EC", Offset = "0xC216EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public T Value
		{
			[Token(Token = "0x6001A49")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21728", Offset = "0xC21728")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A4A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21764", Offset = "0xC21764")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public T OriginalValue
		{
			[Token(Token = "0x6001A4B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC217A0", Offset = "0xC217A0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC217DC", Offset = "0xC217DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A4D")]
		public TransitionStepValue([Optional] GameObject target, float delay = 0f, float duration = 0.5f, TransitionModeType transitionMode = TransitionModeType.Specified, TimeUpdateMethodType timeUpdateMethod = TimeUpdateMethodType.GameTime, TransitionHelper.TweenType tweenType = TransitionHelper.TweenType.linear, [Optional] AnimationCurve animationCurve, CoordinateSpaceType coordinateSpace = CoordinateSpaceType.Global, [Optional] Action<TransitionStep> onStart, [Optional] Action<TransitionStep> onUpdate, [Optional] Action<TransitionStep> onComplete)
		{
		}

		[Token(Token = "0x6001A4E")]
		public virtual T GetCurrent()
		{
			return (T)null;
		}

		[Token(Token = "0x6001A4F")]
		public virtual void SetCurrent(T value)
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components
{
	[Token(Token = "0x20003B7")]
	public abstract class TransitionBase : MonoBehaviour
	{
		[Token(Token = "0x200068C")]
		public enum TransitionModeType
		{
			[Token(Token = "0x4002C7B")]
			None,
			[Token(Token = "0x4002C7C")]
			In,
			[Token(Token = "0x4002C7D")]
			Out
		}

		[Serializable]
		[Token(Token = "0x200068D")]
		public class TransitionSettings
		{
			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15D04", Offset = "0xC15D04")]
			public bool AutoRun;

			[Token(Token = "0x4002C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15D68", Offset = "0xC15D68")]
			public bool TransitionChildren;

			[Token(Token = "0x4002C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15DCC", Offset = "0xC15DCC")]
			public bool MustTriggerDirect;

			[Token(Token = "0x4002C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15E30", Offset = "0xC15E30")]
			public float Delay;

			[Token(Token = "0x4002C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15E94", Offset = "0xC15E94")]
			public float Duration;

			[Token(Token = "0x4002C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CA9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15EF8", Offset = "0xC15EF8")]
			public TransitionStep.TimeUpdateMethodType TimeUpdateMethod;

			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15F5C", Offset = "0xC15F5C")]
			public TransitionHelper.TweenType TransitionType;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC15FC0", Offset = "0xC15FC0")]
			public AnimationCurve AnimationCurve;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16024", Offset = "0xC16024")]
			public TransitionStep.LoopModeType LoopMode;

			[Token(Token = "0x4002C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16088", Offset = "0xC16088")]
			public TransitionStepEvent OnTransitionStart;

			[Token(Token = "0x4002C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC160EC", Offset = "0xC160EC")]
			public TransitionStepEvent OnTransitionUpdate;

			[Token(Token = "0x4002C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CB1")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16150", Offset = "0xC16150")]
			public TransitionStepEvent OnTransitionComplete;

			[Token(Token = "0x6002E88")]
			[Address(RVA = "0x2A9E5D0", Offset = "0x2A9E5D0", VA = "0x2A9E5D0")]
			public TransitionSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200068E")]
		public class TransitionStepEvent : UnityEvent<TransitionStep>
		{
			[Token(Token = "0x6002E89")]
			[Address(RVA = "0x2A9E668", Offset = "0x2A9E668", VA = "0x2A9E668")]
			public TransitionStepEvent()
			{
			}
		}

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFFBE0", Offset = "0xBFFBE0")]
		public bool InitForTransitionIn;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFFC44", Offset = "0xBFFC44")]
		public bool AutoRun;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFFCA8", Offset = "0xBFFCA8")]
		public bool RepeatWhenEnabled;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransitionSettings TransitionInConfig;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransitionSettings TransitionOutConfig;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C9A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFD0C", Offset = "0xBFFD0C")]
		private TransitionModeType <TransitionMode>k__BackingField;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFD48", Offset = "0xBFFD48")]
		private TransitionStep <CurrentTransitionStep>k__BackingField;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC7C")]
		private bool _isInitialStateSet;

		[Token(Token = "0x17000378")]
		public TransitionModeType TransitionMode
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x2A9DCF0", Offset = "0x2A9DCF0", VA = "0x2A9DCF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21818", Offset = "0xC21818")]
			get
			{
				return default(TransitionModeType);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x2A9DD20", Offset = "0x2A9DD20", VA = "0x2A9DD20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21854", Offset = "0xC21854")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public TransitionStep CurrentTransitionStep
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x2A9DD58", Offset = "0x2A9DD58", VA = "0x2A9DD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21890", Offset = "0xC21890")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x2A9DD88", Offset = "0x2A9DD88", VA = "0x2A9DD88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC218CC", Offset = "0xC218CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x2A9DDC0", Offset = "0x2A9DDC0", VA = "0x2A9DDC0", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x2A9DED0", Offset = "0x2A9DED0", VA = "0x2A9DED0", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x2A9DE34", Offset = "0x2A9DE34", VA = "0x2A9DE34")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x2A99084", Offset = "0x2A99084", VA = "0x2A99084", Slot = "6")]
		public virtual void InitTransitionIn()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x2A9DF6C", Offset = "0x2A9DF6C", VA = "0x2A9DF6C", Slot = "7")]
		public virtual void TransitionIn()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x2A99274", Offset = "0x2A99274", VA = "0x2A99274", Slot = "8")]
		public virtual void InitTransitionOut()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x2A9DFE0", Offset = "0x2A9DFE0", VA = "0x2A9DFE0", Slot = "9")]
		public virtual void TransitionOut()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x2A9DF00", Offset = "0x2A9DF00", VA = "0x2A9DF00")]
		private void SetupInitialStateOnce()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x2A9E054", Offset = "0x2A9E054", VA = "0x2A9E054", Slot = "10")]
		public virtual void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x2A9E068", Offset = "0x2A9E068", VA = "0x2A9E068", Slot = "11")]
		protected virtual void TransitionInStart(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x2A96220", Offset = "0x2A96220", VA = "0x2A96220", Slot = "12")]
		protected virtual void TransitionOutStart(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x2A9E15C", Offset = "0x2A9E15C", VA = "0x2A9E15C", Slot = "13")]
		protected virtual void TransitionInUpdate(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x2A9E250", Offset = "0x2A9E250", VA = "0x2A9E250", Slot = "14")]
		protected virtual void TransitionOutUpdate(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x2A9E344", Offset = "0x2A9E344", VA = "0x2A9E344", Slot = "15")]
		protected virtual void TransitionInComplete(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x2A966FC", Offset = "0x2A966FC", VA = "0x2A966FC", Slot = "16")]
		protected virtual void TransitionOutComplete(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A63")]
		public abstract TransitionStep CreateTransitionStep();

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x2A9E450", Offset = "0x2A9E450", VA = "0x2A9E450", Slot = "18")]
		public virtual TransitionStep CreateTransitionStepIn()
		{
			return null;
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x2A96B04", Offset = "0x2A96B04", VA = "0x2A96B04", Slot = "19")]
		public virtual void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x2A9E510", Offset = "0x2A9E510", VA = "0x2A9E510", Slot = "20")]
		public virtual TransitionStep CreateTransitionStepOut()
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x2A96FD4", Offset = "0x2A96FD4", VA = "0x2A96FD4", Slot = "21")]
		public virtual void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x2A97384", Offset = "0x2A97384", VA = "0x2A97384")]
		protected TransitionBase()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDCF8C", Offset = "0xBDCF8C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDCF8C", Offset = "0xBDCF8C")]
	public class TransitionManager : MonoBehaviour
	{
		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01A4", Offset = "0xBE01A4")]
		private sealed class <LoadSceneDelayedCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x4002C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CB9")]
			public string sceneName;

			[Token(Token = "0x1700054C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E8D")]
				[Address(RVA = "0x1DD2854", Offset = "0x1DD2854", VA = "0x1DD2854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E8F")]
				[Address(RVA = "0x1DD2924", Offset = "0x1DD2924", VA = "0x1DD2924", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0x1DD256C", Offset = "0x1DD256C", VA = "0x1DD256C")]
			[DebuggerHidden]
			public <LoadSceneDelayedCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0x1DD25B4", Offset = "0x1DD25B4", VA = "0x1DD25B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0x1DD25C8", Offset = "0x1DD25C8", VA = "0x1DD25C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0x1DD2884", Offset = "0x1DD2884", VA = "0x1DD2884", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBFFD84", Offset = "0xBFFD84")]
		private static TransitionManager <Instance>k__BackingField;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBFFDC0", Offset = "0xBFFDC0")]
		public UnityEngine.GameObject[] DefaultSceneTransitions;

		[Token(Token = "0x1700037A")]
		public static TransitionManager Instance
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x2A9E6E4", Offset = "0x2A9E6E4", VA = "0x2A9E6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21908", Offset = "0xC21908")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x2A9E764", Offset = "0x2A9E764", VA = "0x2A9E764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21944", Offset = "0xC21944")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public static bool IsActive
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x2A9E7EC", Offset = "0x2A9E7EC", VA = "0x2A9E7EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x2A9E904", Offset = "0x2A9E904", VA = "0x2A9E904")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x2A9EB4C", Offset = "0x2A9EB4C", VA = "0x2A9EB4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x2A9EC44", Offset = "0x2A9EC44", VA = "0x2A9EC44")]
		public void TransitionOutAndLoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x2A9ED84", Offset = "0x2A9ED84", VA = "0x2A9ED84")]
		public void TransitionOutAndLoadScene(string sceneName, params UnityEngine.GameObject[] transitionGameObjects)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x2A9F168", Offset = "0x2A9F168", VA = "0x2A9F168")]
		public void TransitionOut()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x2A9EE04", Offset = "0x2A9EE04", VA = "0x2A9EE04")]
		public float TransitionOut(UnityEngine.GameObject[] transitionGameObjects)
		{
			return default(float);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x2A9F004", Offset = "0x2A9F004", VA = "0x2A9F004")]
		public void LoadSceneDelayed(string sceneName, float delay = 0f)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x2A9F28C", Offset = "0x2A9F28C", VA = "0x2A9F28C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21980", Offset = "0xC21980")]
		private static IEnumerator LoadSceneDelayedCoroutine(string sceneName, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x2A9F378", Offset = "0x2A9F378", VA = "0x2A9F378")]
		public TransitionManager()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.Screen
{
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD038", Offset = "0xBDD038")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD038", Offset = "0xBDD038")]
	[ExecuteInEditMode]
	public class FadeScreen : TransitionScreenBase
	{
		[Serializable]
		[Token(Token = "0x2000690")]
		public class InSettings
		{
			[Token(Token = "0x4002C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC161B4", Offset = "0xC161B4")]
			public Texture2D Texture;

			[Token(Token = "0x4002C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16218", Offset = "0xC16218")]
			public Color Color;

			[Token(Token = "0x4002C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1627C", Offset = "0xC1627C")]
			public bool SkipOnCrossTransition;

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0x2A9D470", Offset = "0x2A9D470", VA = "0x2A9D470")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000691")]
		public class OutSettings
		{
			[Token(Token = "0x4002C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CC1")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC162E0", Offset = "0xC162E0")]
			public Texture2D Texture;

			[Token(Token = "0x4002C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16344", Offset = "0xC16344")]
			public Color Color;

			[Token(Token = "0x4002C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC163A8", Offset = "0xC163A8")]
			public TransitionStepScreen.SceneChangeModeType SceneChangeMode;

			[Token(Token = "0x4002C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1640C", Offset = "0xC1640C")]
			public string SceneToLoad;

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0x2A9D4E4", Offset = "0x2A9D4E4", VA = "0x2A9D4E4")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFFE24", Offset = "0xBFFE24")]
		public InSettings InConfig;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FC94")]
		public OutSettings OutConfig;

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x2A9CF40", Offset = "0x2A9CF40", VA = "0x2A9CF40", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x2A9D0D4", Offset = "0x2A9D0D4", VA = "0x2A9D0D4", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x2A9D26C", Offset = "0x2A9D26C", VA = "0x2A9D26C", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x2A9D440", Offset = "0x2A9D440", VA = "0x2A9D440")]
		public FadeScreen()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD100", Offset = "0xBDD100")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD100", Offset = "0xBDD100")]
	[ExecuteInEditMode]
	public class WipeScreen : TransitionScreenBase
	{
		[Serializable]
		[Token(Token = "0x2000692")]
		public class InSettings
		{
			[Token(Token = "0x4002C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CC9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16470", Offset = "0xC16470")]
			public Texture2D Texture;

			[Token(Token = "0x4002C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC164D4", Offset = "0xC164D4")]
			public Color Color;

			[Token(Token = "0x4002C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16538", Offset = "0xC16538")]
			public Texture2D MaskTexture;

			[Token(Token = "0x4002C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1659C", Offset = "0xC1659C")]
			public bool InvertMask;

			[Token(Token = "0x4002C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16600", Offset = "0xC16600")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC16600", Offset = "0xC16600")]
			public float Softness;

			[Token(Token = "0x4002C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1669C", Offset = "0xC1669C")]
			public bool SkipOnCrossTransition;

			[Token(Token = "0x6002E92")]
			[Address(RVA = "0x2A9DC14", Offset = "0x2A9DC14", VA = "0x2A9DC14")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000693")]
		public class OutSettings
		{
			[Token(Token = "0x4002C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CD1")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16700", Offset = "0xC16700")]
			public Texture2D Texture;

			[Token(Token = "0x4002C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16764", Offset = "0xC16764")]
			public Color Color;

			[Token(Token = "0x4002C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC167C8", Offset = "0xC167C8")]
			public Texture2D MaskTexture;

			[Token(Token = "0x4002C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1682C", Offset = "0xC1682C")]
			public bool InvertMask;

			[Token(Token = "0x4002C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16890", Offset = "0xC16890")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC16890", Offset = "0xC16890")]
			public float Softness;

			[Token(Token = "0x4002CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1692C", Offset = "0xC1692C")]
			public TransitionStepScreen.SceneChangeModeType SceneChangeMode;

			[Token(Token = "0x4002CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4CD9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16990", Offset = "0xC16990")]
			public string SceneToLoad;

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0x2A9DC88", Offset = "0x2A9DC88", VA = "0x2A9DC88")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFFE88", Offset = "0xBFFE88")]
		public InSettings InConfig;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OutSettings OutConfig;

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x2A9D54C", Offset = "0x2A9D54C", VA = "0x2A9D54C", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x2A9D6F8", Offset = "0x2A9D6F8", VA = "0x2A9D6F8", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x2A9D94C", Offset = "0x2A9D94C", VA = "0x2A9D94C", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x2A9DBE4", Offset = "0x2A9DBE4", VA = "0x2A9DBE4")]
		public WipeScreen()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.Screen.AbstractClasses
{
	[Token(Token = "0x20003BB")]
	[ExecuteInEditMode]
	public abstract class TransitionScreenBase : TransitionBase
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x2A9CC70", Offset = "0x2A9CC70", VA = "0x2A9CC70", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x2A9CDC0", Offset = "0x2A9CDC0", VA = "0x2A9CDC0", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x2A9CF10", Offset = "0x2A9CF10", VA = "0x2A9CF10")]
		protected TransitionScreenBase()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.GameObject
{
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD204", Offset = "0xBDD204")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD204", Offset = "0xBDD204")]
	public class TransitionAnimation : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x2000694")]
		public class InSettings
		{
			[Token(Token = "0x4002CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC169F4", Offset = "0xC169F4")]
			public float Speed;

			[Token(Token = "0x6002E94")]
			[Address(RVA = "0x2A9933C", Offset = "0x2A9933C", VA = "0x2A9933C")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000695")]
		public class OutSettings
		{
			[Token(Token = "0x4002CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16A58", Offset = "0xC16A58")]
			public float Speed;

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0x2A99380", Offset = "0x2A99380", VA = "0x2A99380")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFFEEC", Offset = "0xBFFEEC")]
		public InSettings InConfig;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCB4")]
		public OutSettings OutConfig;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x2A98B40", Offset = "0x2A98B40", VA = "0x2A98B40", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x2A98C4C", Offset = "0x2A98C4C", VA = "0x2A98C4C", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x2A98DBC", Offset = "0x2A98DBC", VA = "0x2A98DBC", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x2A98F2C", Offset = "0x2A98F2C", VA = "0x2A98F2C", Slot = "6")]
		public override void InitTransitionIn()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x2A9911C", Offset = "0x2A9911C", VA = "0x2A9911C", Slot = "8")]
		public override void InitTransitionOut()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x2A9930C", Offset = "0x2A9930C", VA = "0x2A9930C")]
		public TransitionAnimation()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD2B0", Offset = "0xBDD2B0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD2B0", Offset = "0xBDD2B0")]
	public class TransitionColor : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x2000696")]
		public class InSettings
		{
			[Token(Token = "0x4002CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16ABC", Offset = "0xC16ABC")]
			public Gradient Gradient;

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0x2A99870", Offset = "0x2A99870", VA = "0x2A99870")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000697")]
		public class OutSettings
		{
			[Token(Token = "0x4002CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16B20", Offset = "0xC16B20")]
			public Gradient Gradient;

			[Token(Token = "0x6002E97")]
			[Address(RVA = "0x2A998A0", Offset = "0x2A998A0", VA = "0x2A998A0")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InSettings InConfig;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CE1")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color _originalColor;

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x2A993C4", Offset = "0x2A993C4", VA = "0x2A993C4", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x2A9948C", Offset = "0x2A9948C", VA = "0x2A9948C", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x2A9959C", Offset = "0x2A9959C", VA = "0x2A9959C", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x2A996E4", Offset = "0x2A996E4", VA = "0x2A996E4", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x2A99840", Offset = "0x2A99840", VA = "0x2A99840")]
		public TransitionColor()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD35C", Offset = "0xBDD35C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD35C", Offset = "0xBDD35C")]
	public class TransitionCustom : TransitionGameObjectBase
	{
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x2A998D0", Offset = "0x2A998D0", VA = "0x2A998D0", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x2A999D8", Offset = "0x2A999D8", VA = "0x2A999D8")]
		public TransitionCustom()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD408", Offset = "0xBDD408")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD408", Offset = "0xBDD408")]
	public class TransitionFade : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x2000698")]
		public class InSettings
		{
			[Token(Token = "0x4002CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16B84", Offset = "0xC16B84")]
			public float StartTransparency;

			[Token(Token = "0x6002E98")]
			[Address(RVA = "0x2A99F04", Offset = "0x2A99F04", VA = "0x2A99F04")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000699")]
		public class OutSettings
		{
			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16BE8", Offset = "0xC16BE8")]
			public float EndTransparency;

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0x2A99F34", Offset = "0x2A99F34", VA = "0x2A99F34")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFFF50", Offset = "0xBFFF50")]
		public InSettings FadeInConfig;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OutSettings FadeOutConfig;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CE9")]
		private float _originalTransparency;

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x2A99A08", Offset = "0x2A99A08", VA = "0x2A99A08", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x2A99AD0", Offset = "0x2A99AD0", VA = "0x2A99AD0", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x2A99BE4", Offset = "0x2A99BE4", VA = "0x2A99BE4", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x2A99D4C", Offset = "0x2A99D4C", VA = "0x2A99D4C", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x2A99ED4", Offset = "0x2A99ED4", VA = "0x2A99ED4")]
		public TransitionFade()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD4B4", Offset = "0xBDD4B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD4B4", Offset = "0xBDD4B4")]
	public class TransitionMove : TransitionGameObjectBase
	{
		[Token(Token = "0x200069A")]
		public enum MoveModeType
		{
			[Token(Token = "0x4002CA9")]
			Global,
			[Token(Token = "0x4002CAA")]
			Local,
			[Token(Token = "0x4002CAB")]
			AnchoredPosition
		}

		[Token(Token = "0x200069B")]
		public enum MoveType
		{
			[Token(Token = "0x4002CAD")]
			FixedPosition,
			[Token(Token = "0x4002CAE")]
			Delta
		}

		[Serializable]
		[Token(Token = "0x200069C")]
		public class InSettings
		{
			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16C4C", Offset = "0xC16C4C")]
			public MoveType StartPositionType;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16CB0", Offset = "0xC16CB0")]
			public Vector3 StartPosition;

			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0x2A9A92C", Offset = "0x2A9A92C", VA = "0x2A9A92C")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069D")]
		public class OutSettings
		{
			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16D14", Offset = "0xC16D14")]
			public MoveType EndPositionType;

			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16D78", Offset = "0xC16D78")]
			public Vector3 EndPosition;

			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0x2A9A9B0", Offset = "0x2A9A9B0", VA = "0x2A9A9B0")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MoveModeType MoveMode;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InSettings InConfig;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CF1")]
		private Vector3 _originalPosition;

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x2A99F64", Offset = "0x2A99F64", VA = "0x2A99F64", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x2A9A034", Offset = "0x2A9A034", VA = "0x2A9A034", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x2A9A2C0", Offset = "0x2A9A2C0", VA = "0x2A9A2C0", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x2A9A5D4", Offset = "0x2A9A5D4", VA = "0x2A9A5D4", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x2A9A238", Offset = "0x2A9A238", VA = "0x2A9A238")]
		private TransitionStep.CoordinateSpaceType ConvertMoveMode()
		{
			return default(TransitionStep.CoordinateSpaceType);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x2A9A8FC", Offset = "0x2A9A8FC", VA = "0x2A9A8FC")]
		public TransitionMove()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD560", Offset = "0xBDD560")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD560", Offset = "0xBDD560")]
	public class TransitionMoveTraget : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x200069E")]
		public class InSettings
		{
			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16DDC", Offset = "0xC16DDC")]
			public UnityEngine.GameObject StartTarget;

			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16E40", Offset = "0xC16E40")]
			public bool MoveX;

			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16EA4", Offset = "0xC16EA4")]
			public bool MoveY;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16F08", Offset = "0xC16F08")]
			public bool MoveZ;

			[Token(Token = "0x6002E9C")]
			[Address(RVA = "0x2A9B78C", Offset = "0x2A9B78C", VA = "0x2A9B78C")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069F")]
		public class OutSettings
		{
			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16F6C", Offset = "0xC16F6C")]
			public UnityEngine.GameObject EndTarget;

			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC16FD0", Offset = "0xC16FD0")]
			public bool MoveX;

			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17034", Offset = "0xC17034")]
			public bool MoveY;

			[Token(Token = "0x4002CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17098", Offset = "0xC17098")]
			public bool MoveZ;

			[Token(Token = "0x6002E9D")]
			[Address(RVA = "0x2A9B7F8", Offset = "0x2A9B7F8", VA = "0x2A9B7F8")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D00")]
		public InSettings MoveInConfig;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public OutSettings MoveOutConfig;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCD4")]
		private Vector3 _originalPosition;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x2A9AA34", Offset = "0x2A9AA34", VA = "0x2A9AA34", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x2A9AB04", Offset = "0x2A9AB04", VA = "0x2A9AB04", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x2A9ACF4", Offset = "0x2A9ACF4", VA = "0x2A9ACF4", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x2A9B1F4", Offset = "0x2A9B1F4", VA = "0x2A9B1F4", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x2A9B75C", Offset = "0x2A9B75C", VA = "0x2A9B75C")]
		public TransitionMoveTraget()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD60C", Offset = "0xBDD60C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD60C", Offset = "0xBDD60C")]
	public class TransitionRotate : TransitionGameObjectBase
	{
		[Token(Token = "0x20006A0")]
		public enum RotationModeType
		{
			[Token(Token = "0x4002CBC")]
			Global,
			[Token(Token = "0x4002CBD")]
			Local
		}

		[Serializable]
		[Token(Token = "0x20006A1")]
		public class InSettings
		{
			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC170FC", Offset = "0xC170FC")]
			public Vector3 StartRotation;

			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0x2A9BF28", Offset = "0x2A9BF28", VA = "0x2A9BF28")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A2")]
		public class OutSettings
		{
			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17160", Offset = "0xC17160")]
			public Vector3 EndRotation;

			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0x2A9BFAC", Offset = "0x2A9BFAC", VA = "0x2A9BFAC")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RotationModeType RotationMode;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D10")]
		public InSettings InConfig;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCE4")]
		private Vector3 _originalRotation;

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x2A9B864", Offset = "0x2A9B864", VA = "0x2A9B864", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x2A9B934", Offset = "0x2A9B934", VA = "0x2A9B934", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x2A9BB88", Offset = "0x2A9BB88", VA = "0x2A9BB88", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x2A9BD2C", Offset = "0x2A9BD2C", VA = "0x2A9BD2C", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x2A9BB38", Offset = "0x2A9BB38", VA = "0x2A9BB38")]
		private TransitionStep.CoordinateSpaceType ConvertRotationMode()
		{
			return default(TransitionStep.CoordinateSpaceType);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x2A9BEE4", Offset = "0x2A9BEE4", VA = "0x2A9BEE4")]
		public TransitionRotate()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD6B8", Offset = "0xBDD6B8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD6B8", Offset = "0xBDD6B8")]
	public class TransitionScale : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x20006A3")]
		public class InSettings
		{
			[Token(Token = "0x4002CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC171C4", Offset = "0xC171C4")]
			public Vector3 StartScale;

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0x2A9C60C", Offset = "0x2A9C60C", VA = "0x2A9C60C")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A4")]
		public class OutSettings
		{
			[Token(Token = "0x4002CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17228", Offset = "0xC17228")]
			public Vector3 EndScale;

			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0x2A9C690", Offset = "0x2A9C690", VA = "0x2A9C690")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCEC")]
		public InSettings InConfig;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _originalScale;

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x2A9C030", Offset = "0x2A9C030", VA = "0x2A9C030", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x2A9C100", Offset = "0x2A9C100", VA = "0x2A9C100", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x2A9C2E8", Offset = "0x2A9C2E8", VA = "0x2A9C2E8", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x2A9C458", Offset = "0x2A9C458", VA = "0x2A9C458", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x2A9C5DC", Offset = "0x2A9C5DC", VA = "0x2A9C5DC")]
		public TransitionScale()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD764", Offset = "0xBDD764")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD764", Offset = "0xBDD764")]
	public class TransitionVolume : TransitionGameObjectBase
	{
		[Serializable]
		[Token(Token = "0x20006A5")]
		public class InSettings
		{
			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1728C", Offset = "0xC1728C")]
			public float StartVolume;

			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0x2A9CC10", Offset = "0x2A9CC10", VA = "0x2A9CC10")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A6")]
		public class OutSettings
		{
			[Token(Token = "0x4002CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC172F0", Offset = "0xC172F0")]
			public float EndVolume;

			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0x2A9CC40", Offset = "0x2A9CC40", VA = "0x2A9CC40")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBFFFB4", Offset = "0xBFFFB4")]
		public InSettings InConfig;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCF4")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _originalVolume;

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x2A9C714", Offset = "0x2A9C714", VA = "0x2A9C714", Slot = "10")]
		public override void SetupInitialState()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x2A9C7DC", Offset = "0x2A9C7DC", VA = "0x2A9C7DC", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x2A9C8F0", Offset = "0x2A9C8F0", VA = "0x2A9C8F0", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x2A9CA58", Offset = "0x2A9CA58", VA = "0x2A9CA58", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x2A9CBE0", Offset = "0x2A9CBE0", VA = "0x2A9CBE0")]
		public TransitionVolume()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.GameObject.AbstractClasses
{
	[Token(Token = "0x20003C5")]
	public abstract class TransitionGameObjectBase : TransitionBase
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC00018", Offset = "0xC00018")]
		public UnityEngine.GameObject Target;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x2A989DC", Offset = "0x2A989DC", VA = "0x2A989DC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x2A98B10", Offset = "0x2A98B10", VA = "0x2A98B10")]
		protected TransitionGameObjectBase()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.Camera
{
	[Token(Token = "0x20003C6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD810", Offset = "0xBDD810")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD810", Offset = "0xBDD810")]
	public class FadeCamera : TransitionCameraBase
	{
		[Serializable]
		[Token(Token = "0x20006A7")]
		public class InSettings
		{
			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17354", Offset = "0xC17354")]
			public Texture2D Texture;

			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC173B8", Offset = "0xC173B8")]
			public Color Color;

			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x2A97C94", Offset = "0x2A97C94", VA = "0x2A97C94")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A8")]
		public class OutSettings
		{
			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1741C", Offset = "0xC1741C")]
			public Texture2D Texture;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17480", Offset = "0xC17480")]
			public Color Color;

			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0x2A97CC4", Offset = "0x2A97CC4", VA = "0x2A97CC4")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0007C", Offset = "0xC0007C")]
		public InSettings InConfig;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FCFC")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _material;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x2A973C8", Offset = "0x2A973C8", VA = "0x2A973C8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x2A9761C", Offset = "0x2A9761C", VA = "0x2A9761C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x2A97C64", Offset = "0x2A97C64", VA = "0x2A97C64")]
		public FadeCamera()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDD8E0", Offset = "0xBDD8E0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDD8E0", Offset = "0xBDD8E0")]
	public class WipeCamera : TransitionCameraBase
	{
		[Serializable]
		[Token(Token = "0x20006A9")]
		public class InSettings
		{
			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC174E4", Offset = "0xC174E4")]
			public Texture2D Texture;

			[Token(Token = "0x4002CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17548", Offset = "0xC17548")]
			public Color Color;

			[Token(Token = "0x4002CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC175AC", Offset = "0xC175AC")]
			public Texture2D MaskTexture;

			[Token(Token = "0x4002CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD0C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17610", Offset = "0xC17610")]
			public bool InvertMask;

			[Token(Token = "0x4002CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17674", Offset = "0xC17674")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC17674", Offset = "0xC17674")]
			public float Softness;

			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0x2A9890C", Offset = "0x2A9890C", VA = "0x2A9890C")]
			public InSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006AA")]
		public class OutSettings
		{
			[Token(Token = "0x4002CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17710", Offset = "0xC17710")]
			public Texture2D Texture;

			[Token(Token = "0x4002CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC17774", Offset = "0xC17774")]
			public Color Color;

			[Token(Token = "0x4002CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC177D8", Offset = "0xC177D8")]
			public Texture2D MaskTexture;

			[Token(Token = "0x4002CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC1783C", Offset = "0xC1783C")]
			public bool InvertMask;

			[Token(Token = "0x4002CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC178A0", Offset = "0xC178A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC178A0", Offset = "0xC178A0")]
			public float Softness;

			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0x2A98974", Offset = "0x2A98974", VA = "0x2A98974")]
			public OutSettings()
			{
			}
		}

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD04")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC000E0", Offset = "0xC000E0")]
		public InSettings InConfig;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OutSettings OutConfig;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _material;

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x2A97CF4", Offset = "0x2A97CF4", VA = "0x2A97CF4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x2A97F48", Offset = "0x2A97F48", VA = "0x2A97F48")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x2A988DC", Offset = "0x2A988DC", VA = "0x2A988DC")]
		public WipeCamera()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Transitions.Components.Camera.AbstractClasses
{
	[Token(Token = "0x20003C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDD9B0", Offset = "0xBDD9B0")]
	public abstract class TransitionCameraBase : TransitionBase
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool SkipIdleRendering;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RenderTexture CrossTransitionRenderTexture;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected UnityEngine.Camera CrossTransitionTarget;

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x2A95FC8", Offset = "0x2A95FC8", VA = "0x2A95FC8")]
		public void CrossTransition(UnityEngine.Camera target)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x2A96014", Offset = "0x2A96014", VA = "0x2A96014", Slot = "12")]
		protected override void TransitionOutStart(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x2A96314", Offset = "0x2A96314", VA = "0x2A96314", Slot = "16")]
		protected override void TransitionOutComplete(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x2A967F0", Offset = "0x2A967F0", VA = "0x2A967F0", Slot = "17")]
		public override TransitionStep CreateTransitionStep()
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x2A969B4", Offset = "0x2A969B4", VA = "0x2A969B4", Slot = "19")]
		public override void SetupTransitionStepIn(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x2A96E84", Offset = "0x2A96E84", VA = "0x2A96E84", Slot = "21")]
		public override void SetupTransitionStepOut(TransitionStep transitionStep)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x2A97354", Offset = "0x2A97354", VA = "0x2A97354")]
		protected TransitionCameraBase()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Shake
{
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDDA7C", Offset = "0xBDDA7C")]
	public class ShakeHelper
	{
		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01E0", Offset = "0xBE01E0")]
		private sealed class <ShakeCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD1C")]
			private object <>2__current;

			[Token(Token = "0x4002CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[Token(Token = "0x4002CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float decayStart;

			[Token(Token = "0x4002CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float duration;

			[Token(Token = "0x4002CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D50")]
			public Vector3 range;

			[Token(Token = "0x4002CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Vector3 <originalPosition>5__2;

			[Token(Token = "0x4002CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C574")]
			private int <randomAngle>5__3;

			[Token(Token = "0x4002CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <decay>5__4;

			[Token(Token = "0x4002CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <decayFactor>5__5;

			[Token(Token = "0x4002CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700054E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EAB")]
				[Address(RVA = "0x2A95EC8", Offset = "0x2A95EC8", VA = "0x2A95EC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EAD")]
				[Address(RVA = "0x2A95F98", Offset = "0x2A95F98", VA = "0x2A95F98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0x2A95308", Offset = "0x2A95308", VA = "0x2A95308")]
			[DebuggerHidden]
			public <ShakeCoroutine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0x2A95440", Offset = "0x2A95440", VA = "0x2A95440", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x2A95454", Offset = "0x2A95454", VA = "0x2A95454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0x2A95EF8", Offset = "0x2A95EF8", VA = "0x2A95EF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D48")]
		private static readonly List<int> ActiveShakes;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x2A94F90", Offset = "0x2A94F90", VA = "0x2A94F90")]
		public static void Shake(MonoBehaviour caller, Transform transform, float duration, Vector3 range, float decayStart = 1f)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x2A951C8", Offset = "0x2A951C8", VA = "0x2A951C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21A30", Offset = "0xC21A30")]
		private static IEnumerator ShakeCoroutine(Transform transform, float duration, Vector3 range, float decayStart = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x2A95350", Offset = "0x2A95350", VA = "0x2A95350")]
		public ShakeHelper()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Shake.Components
{
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDDAE0", Offset = "0xBDDAE0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDDAE0", Offset = "0xBDDAE0")]
	public class ShakeCamera : MonoBehaviour
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D56")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC00144", Offset = "0xC00144")]
		private static ShakeCamera <Instance>k__BackingField;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC00180", Offset = "0xC00180")]
		public List<Camera> Cameras;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC001E4", Offset = "0xC001E4")]
		public float Duration;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC00248", Offset = "0xC00248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00248", Offset = "0xC00248")]
		public float DecayStart;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC002E4", Offset = "0xC002E4")]
		public Vector3 Range;

		[Token(Token = "0x1700037C")]
		public static ShakeCamera Instance
		{
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x2A9439C", Offset = "0x2A9439C", VA = "0x2A9439C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21AE0", Offset = "0xC21AE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x2A9441C", Offset = "0x2A9441C", VA = "0x2A9441C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21B1C", Offset = "0xC21B1C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public static bool IsActive
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x2A944A4", Offset = "0x2A944A4", VA = "0x2A944A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x2A945BC", Offset = "0x2A945BC", VA = "0x2A945BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x2A94AE8", Offset = "0x2A94AE8", VA = "0x2A94AE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x2A94810", Offset = "0x2A94810", VA = "0x2A94810")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x2A94BE0", Offset = "0x2A94BE0", VA = "0x2A94BE0")]
		public void Shake()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x2A94C5C", Offset = "0x2A94C5C", VA = "0x2A94C5C")]
		public void Shake(float duration, Vector3 range, float decayStart)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x2A950CC", Offset = "0x2A950CC", VA = "0x2A950CC")]
		public ShakeCamera()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.Helper
{
	[Token(Token = "0x20003CB")]
	public class SmoothRandom
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FractalNoise s_Noise;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x2A8F97C", Offset = "0x2A8F97C", VA = "0x2A8F97C")]
		public static Vector3 GetVector3(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x2A8FC58", Offset = "0x2A8FC58", VA = "0x2A8FC58")]
		public static Vector2 GetVector2(float speed)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x2A8FDAC", Offset = "0x2A8FDAC", VA = "0x2A8FDAC")]
		public static float Get(float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x2A8FB20", Offset = "0x2A8FB20", VA = "0x2A8FB20")]
		private static FractalNoise Get()
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x2A8FE84", Offset = "0x2A8FE84", VA = "0x2A8FE84")]
		public SmoothRandom()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class Perlin
	{
		[Token(Token = "0x40018FB")]
		private const int B = 256;

		[Token(Token = "0x40018FC")]
		private const int BM = 255;

		[Token(Token = "0x40018FD")]
		private const int N = 4096;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] p;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[,] g3;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[,] g2;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D65")]
		private float[] g1;

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x2A8DF9C", Offset = "0x2A8DF9C", VA = "0x2A8DF9C")]
		private float s_curve(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x2A8E03C", Offset = "0x2A8E03C", VA = "0x2A8E03C")]
		private float lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x2A8E0D4", Offset = "0x2A8E0D4", VA = "0x2A8E0D4")]
		private void setup(float value, out int b0, out int b1, out float r0, out float r1)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x2A8E218", Offset = "0x2A8E218", VA = "0x2A8E218")]
		private float at2(float rx, float ry, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x2A8E2A0", Offset = "0x2A8E2A0", VA = "0x2A8E2A0")]
		private float at3(float rx, float ry, float rz, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x2A8E36C", Offset = "0x2A8E36C", VA = "0x2A8E36C")]
		public float Noise(float arg)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x2A8D14C", Offset = "0x2A8D14C", VA = "0x2A8D14C")]
		public float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x2A8E570", Offset = "0x2A8E570", VA = "0x2A8E570")]
		public float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x2A8F4FC", Offset = "0x2A8F4FC", VA = "0x2A8F4FC")]
		private void normalize2(ref float x, ref float y)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x2A8F6F0", Offset = "0x2A8F6F0", VA = "0x2A8F6F0")]
		private void normalize3(ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x2A8C0CC", Offset = "0x2A8C0CC", VA = "0x2A8C0CC")]
		public Perlin()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class FractalNoise
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Perlin m_Noise;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD2C")]
		private float[] m_Exponent;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_IntOctaves;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Octaves;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Lacunarity;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x2A8BD1C", Offset = "0x2A8BD1C", VA = "0x2A8BD1C")]
		public FractalNoise(float inH, float inLacunarity, float inOctaves)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x2A8BD84", Offset = "0x2A8BD84", VA = "0x2A8BD84")]
		public FractalNoise(float inH, float inLacunarity, float inOctaves, Perlin noise)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x2A8CD34", Offset = "0x2A8CD34", VA = "0x2A8CD34")]
		public float HybridMultifractal(float x, float y, float offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x2A8D888", Offset = "0x2A8D888", VA = "0x2A8D888")]
		public float RidgedMultifractal(float x, float y, float offset, float gain)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x2A8DC88", Offset = "0x2A8DC88", VA = "0x2A8DC88")]
		public float BrownianMotion(float x, float y)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003CE")]
	public class TweenMethods : MonoBehaviour
	{
		[Token(Token = "0x20006AC")]
		public delegate float TweenFunction(float start, float end, float value);

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x2A8FEB4", Offset = "0x2A8FEB4", VA = "0x2A8FEB4")]
		public static float linear(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x2A8FFCC", Offset = "0x2A8FFCC", VA = "0x2A8FFCC")]
		public static float clerp(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x2A90280", Offset = "0x2A90280", VA = "0x2A90280")]
		public static float spring(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x2A90550", Offset = "0x2A90550", VA = "0x2A90550")]
		public static float easeInQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x2A905D4", Offset = "0x2A905D4", VA = "0x2A905D4")]
		public static float easeOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x2A90690", Offset = "0x2A90690", VA = "0x2A90690")]
		public static float easeInOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x2A90854", Offset = "0x2A90854", VA = "0x2A90854")]
		public static float easeInCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x2A908E8", Offset = "0x2A908E8", VA = "0x2A908E8")]
		public static float easeOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x2A909C4", Offset = "0x2A909C4", VA = "0x2A909C4")]
		public static float easeInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x2A90B7C", Offset = "0x2A90B7C", VA = "0x2A90B7C")]
		public static float easeInQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x2A90C20", Offset = "0x2A90C20", VA = "0x2A90C20")]
		public static float easeOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x2A90D18", Offset = "0x2A90D18", VA = "0x2A90D18")]
		public static float easeInOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x2A90EFC", Offset = "0x2A90EFC", VA = "0x2A90EFC")]
		public static float easeInQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x2A90FB0", Offset = "0x2A90FB0", VA = "0x2A90FB0")]
		public static float easeOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x2A910AC", Offset = "0x2A910AC", VA = "0x2A910AC")]
		public static float easeInOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x2A912A4", Offset = "0x2A912A4", VA = "0x2A912A4")]
		public static float easeInSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x2A91410", Offset = "0x2A91410", VA = "0x2A91410")]
		public static float easeOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x2A91560", Offset = "0x2A91560", VA = "0x2A91560")]
		public static float easeInOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x2A916F8", Offset = "0x2A916F8", VA = "0x2A916F8")]
		public static float easeInExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x2A9187C", Offset = "0x2A9187C", VA = "0x2A9187C")]
		public static float easeOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x2A91A18", Offset = "0x2A91A18", VA = "0x2A91A18")]
		public static float easeInOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x2A91D4C", Offset = "0x2A91D4C", VA = "0x2A91D4C")]
		public static float easeInCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x2A91EE4", Offset = "0x2A91EE4", VA = "0x2A91EE4")]
		public static float easeOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x2A92078", Offset = "0x2A92078", VA = "0x2A92078")]
		public static float easeInOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x2A923BC", Offset = "0x2A923BC", VA = "0x2A923BC")]
		public static float easeInBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x2A924A0", Offset = "0x2A924A0", VA = "0x2A924A0")]
		public static float easeOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x2A927FC", Offset = "0x2A927FC", VA = "0x2A927FC")]
		public static float easeInOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x2A92A10", Offset = "0x2A92A10", VA = "0x2A92A10")]
		public static float easeInBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x2A92B28", Offset = "0x2A92B28", VA = "0x2A92B28")]
		public static float easeOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x2A92C5C", Offset = "0x2A92C5C", VA = "0x2A92C5C")]
		public static float easeInOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x2A92F34", Offset = "0x2A92F34", VA = "0x2A92F34")]
		public static float punch(float amplitude, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x2A9318C", Offset = "0x2A9318C", VA = "0x2A9318C")]
		public static float easeInElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x2A93560", Offset = "0x2A93560", VA = "0x2A93560")]
		public static float easeOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x2A93928", Offset = "0x2A93928", VA = "0x2A93928")]
		public static float easeInOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x2A93E78", Offset = "0x2A93E78", VA = "0x2A93E78")]
		public TweenMethods()
		{
		}
	}
}
namespace BeautifulTransitions.Scripts.DisplayItem
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDDB8C", Offset = "0xBDDB8C")]
	internal class DisplayItemHelper
	{
		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE021C", Offset = "0xBE021C")]
		private sealed class <SetActiveAnimatedCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D6D")]
			private int <>1__state;

			[Token(Token = "0x4002CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD34")]
			public GameObject gameObject;

			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Animator <animator>5__2;

			[Token(Token = "0x4002CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <closedStateReached>5__3;

			[Token(Token = "0x17000550")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EB5")]
				[Address(RVA = "0x2A8BC1C", Offset = "0x2A8BC1C", VA = "0x2A8BC1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000551")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EB7")]
				[Address(RVA = "0x2A8BCEC", Offset = "0x2A8BCEC", VA = "0x2A8BCEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0x2A8B79C", Offset = "0x2A8B79C", VA = "0x2A8B79C")]
			[DebuggerHidden]
			public <SetActiveAnimatedCoroutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0x2A8B814", Offset = "0x2A8B814", VA = "0x2A8B814", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0x2A8B828", Offset = "0x2A8B828", VA = "0x2A8B828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x2A8BC4C", Offset = "0x2A8BC4C", VA = "0x2A8BC4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x2A8B440", Offset = "0x2A8B440", VA = "0x2A8B440")]
		public static void SyncActiveStateAnimated(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x2A8B530", Offset = "0x2A8B530", VA = "0x2A8B530")]
		public static void SetAttention(GameObject gameObject, bool attention)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x2A8B614", Offset = "0x2A8B614", VA = "0x2A8B614")]
		public static void SetActiveAnimated(MonoBehaviour caller, GameObject gameObject, bool value)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x2A8B69C", Offset = "0x2A8B69C", VA = "0x2A8B69C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21B58", Offset = "0xC21B58")]
		public static IEnumerator SetActiveAnimatedCoroutine(GameObject gameObject, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x2A8B7E4", Offset = "0x2A8B7E4", VA = "0x2A8B7E4")]
		public DisplayItemHelper()
		{
		}
	}
}
namespace ffmpegaudioimport
{
	[Token(Token = "0x20003D0")]
	public class FFMPEGAudioImporter : MonoBehaviour
	{
		[Token(Token = "0x20006AE")]
		public enum AudioImportStatus
		{
			[Token(Token = "0x4002CE4")]
			Initialized,
			[Token(Token = "0x4002CE5")]
			LoadingCanPlay,
			[Token(Token = "0x4002CE6")]
			Done_OK,
			[Token(Token = "0x4002CE7")]
			Done_Canceled,
			[Token(Token = "0x4002CE8")]
			Done_Error
		}

		[Token(Token = "0x20006AF")]
		private class ExecuteCallback : AndroidJavaProxy
		{
			[Token(Token = "0x4002CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private FFMPEGAudioImporter load;

			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0x195834C", Offset = "0x195834C", VA = "0x195834C")]
			public ExecuteCallback(FFMPEGAudioImporter l)
			{
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0x1958460", Offset = "0x1958460", VA = "0x1958460")]
			public void apply(long executionID, int returnCode)
			{
			}
		}

		[Token(Token = "0x20006B0")]
		private class ImportException : Exception
		{
			[Token(Token = "0x6002EBA")]
			[Address(RVA = "0x195895C", Offset = "0x195895C", VA = "0x195895C")]
			public ImportException(string message)
			{
			}
		}

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0258", Offset = "0xBE0258")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD5C")]
			public FFMPEGAudioImporter <>4__this;

			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator action;

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0x1958034", Offset = "0x1958034", VA = "0x1958034")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0x1958064", Offset = "0x1958064", VA = "0x1958064")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0294", Offset = "0xBE0294")]
		private sealed class <ActionWrapper>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D9D")]
			public Action action;

			[Token(Token = "0x17000552")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0x195824C", Offset = "0x195824C", VA = "0x195824C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000553")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC2")]
				[Address(RVA = "0x195831C", Offset = "0x195831C", VA = "0x195831C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0x19580BC", Offset = "0x19580BC", VA = "0x19580BC")]
			[DebuggerHidden]
			public <ActionWrapper>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0x1958104", Offset = "0x1958104", VA = "0x1958104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0x1958118", Offset = "0x1958118", VA = "0x1958118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0x195827C", Offset = "0x195827C", VA = "0x195827C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE02D0", Offset = "0xBE02D0")]
		private sealed class <ActionWrapper>d__50<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4002CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000554")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000555")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC3")]
			[DebuggerHidden]
			public <ActionWrapper>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6002EC4")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EC5")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D75")]
		private string filePath;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private object userData;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD3C")]
		private Action<FFMPEGAudioImporter> callbackOnFinishedLoading;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AndroidJavaObject context;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string namedPipe;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long newExecutionId;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D7D")]
		private float file_duration;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int file_sample_rate;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD44")]
		private int file_channel_count;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int file_total_samples_all_channels;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AudioClip audioClip;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stopwatch stopwatch;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D85")]
		private int overallPosition;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isInitialized;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD4C")]
		private bool isCanceled;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isFullyCanceled;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC00348", Offset = "0xC00348")]
		private AudioImportStatus <Status>k__BackingField;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC00384", Offset = "0xC00384")]
		private string <Error>k__BackingField;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8D")]
		private readonly Queue<Action> executionQueue;

		[Token(Token = "0x1700037E")]
		public AudioImportStatus Status
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x24F0A50", Offset = "0x24F0A50", VA = "0x24F0A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21C08", Offset = "0xC21C08")]
			get
			{
				return default(AudioImportStatus);
			}
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x24F0A80", Offset = "0x24F0A80", VA = "0x24F0A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21C44", Offset = "0xC21C44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public string Error
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0x24F0AB8", Offset = "0x24F0AB8", VA = "0x24F0AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21C80", Offset = "0xC21C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0x24F0AE8", Offset = "0x24F0AE8", VA = "0x24F0AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC21CBC", Offset = "0xC21CBC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x24F0B20", Offset = "0x24F0B20", VA = "0x24F0B20")]
		public AudioClip GetAudioClip()
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x24F0B50", Offset = "0x24F0B50", VA = "0x24F0B50")]
		public string GetID()
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x24F0C00", Offset = "0x24F0C00", VA = "0x24F0C00")]
		public object GetUserData()
		{
			return null;
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x24F0C30", Offset = "0x24F0C30", VA = "0x24F0C30")]
		public void LoadSong(string filePath, object userData, Action<FFMPEGAudioImporter> callback)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x24F44D4", Offset = "0x24F44D4", VA = "0x24F44D4")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x24F4504", Offset = "0x24F4504", VA = "0x24F4504")]
		private void DoImport()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x24F41D0", Offset = "0x24F41D0", VA = "0x24F41D0")]
		private void NotifyOfTime(string s)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x24F5B98", Offset = "0x24F5B98", VA = "0x24F5B98")]
		private void CreateClip()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x24F5C28", Offset = "0x24F5C28", VA = "0x24F5C28")]
		private void CancelFFMPEG()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x24F6248", Offset = "0x24F6248", VA = "0x24F6248")]
		private void NoteDone()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x24F5A30", Offset = "0x24F5A30", VA = "0x24F5A30")]
		private void NoteError(Exception e)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x24F62F4", Offset = "0x24F62F4", VA = "0x24F62F4")]
		private void SetData(float[] floatSampleBuffer)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x24F1C5C", Offset = "0x24F1C5C", VA = "0x24F1C5C")]
		private static AndroidJavaObject GetAndroidContext()
		{
			return null;
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x24F1B1C", Offset = "0x24F1B1C", VA = "0x24F1B1C")]
		private void LogImport(string msg)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x24F6CF0", Offset = "0x24F6CF0", VA = "0x24F6CF0")]
		private void LogImportWarning(string msg)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x24F58F0", Offset = "0x24F58F0", VA = "0x24F58F0")]
		private void LogImportError(string msg)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x24F1D98", Offset = "0x24F1D98", VA = "0x24F1D98")]
		private void GrabFileInformation()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x24F6E30", Offset = "0x24F6E30", VA = "0x24F6E30")]
		private void CheckNull(string name, object o)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x24F6F74", Offset = "0x24F6F74", VA = "0x24F6F74")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x24F5898", Offset = "0x24F5898", VA = "0x24F5898")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001B1E")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x24F7300", Offset = "0x24F7300", VA = "0x24F7300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21CF8", Offset = "0xC21CF8")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC21DA8", Offset = "0xC21DA8")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x24F73C8", Offset = "0x24F73C8", VA = "0x24F73C8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x24F76D8", Offset = "0x24F76D8", VA = "0x24F76D8")]
		public FFMPEGAudioImporter()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20003D1")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE030C", Offset = "0xBE030C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public AudioSource target;

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0x21AEDF0", Offset = "0x21AEDF0", VA = "0x21AEDF0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0x21AFFCC", Offset = "0x21AFFCC", VA = "0x21AFFCC")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0x21B001C", Offset = "0x21B001C", VA = "0x21B001C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0348", Offset = "0xBE0348")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD64")]
			public AudioSource target;

			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0x21AF098", Offset = "0x21AF098", VA = "0x21AF098")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0x21B0074", Offset = "0x21B0074", VA = "0x21B0074")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002ECE")]
			[Address(RVA = "0x21B00C4", Offset = "0x21B00C4", VA = "0x21B00C4")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0384", Offset = "0xBE0384")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioMixer target;

			[Token(Token = "0x4002CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string floatName;

			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0x21AF368", Offset = "0x21AF368", VA = "0x21AF368")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0x21B011C", Offset = "0x21B011C", VA = "0x21B011C")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0x21B0194", Offset = "0x21B0194", VA = "0x21B0194")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x21AEB0C", Offset = "0x21AEB0C", VA = "0x21AEB0C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x21AEE20", Offset = "0x21AEE20", VA = "0x21AEE20")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x21AF0C8", Offset = "0x21AF0C8", VA = "0x21AF0C8")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x21AF398", Offset = "0x21AF398", VA = "0x21AF398")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x21AF4B4", Offset = "0x21AF4B4", VA = "0x21AF4B4")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x21AF5D0", Offset = "0x21AF5D0", VA = "0x21AF5D0")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x21AF6C8", Offset = "0x21AF6C8", VA = "0x21AF6C8")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x21AF7F4", Offset = "0x21AF7F4", VA = "0x21AF7F4")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x21AF8EC", Offset = "0x21AF8EC", VA = "0x21AF8EC")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x21AF9E4", Offset = "0x21AF9E4", VA = "0x21AF9E4")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x21AFADC", Offset = "0x21AFADC", VA = "0x21AFADC")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x21AFBD4", Offset = "0x21AFBD4", VA = "0x21AFBD4")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x21AFCDC", Offset = "0x21AFCDC", VA = "0x21AFCDC")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x21AFDDC", Offset = "0x21AFDDC", VA = "0x21AFDDC")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x21AFED4", Offset = "0x21AFED4", VA = "0x21AFED4")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003D2")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE03C0", Offset = "0xBE03C0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x21B045C", Offset = "0x21B045C", VA = "0x21B045C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x21B2CE4", Offset = "0x21B2CE4", VA = "0x21B2CE4")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE03FC", Offset = "0xBE03FC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DA5")]
			public Rigidbody target;

			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x21B070C", Offset = "0x21B070C", VA = "0x21B070C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0x21B2FBC", Offset = "0x21B2FBC", VA = "0x21B2FBC")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0438", Offset = "0xBE0438")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Rigidbody target;

			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0x21B09BC", Offset = "0x21B09BC", VA = "0x21B09BC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0x21B3014", Offset = "0x21B3014", VA = "0x21B3014")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0474", Offset = "0xBE0474")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD6C")]
			public Rigidbody target;

			[Token(Token = "0x6002ED8")]
			[Address(RVA = "0x21B0C6C", Offset = "0x21B0C6C", VA = "0x21B0C6C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0x21B306C", Offset = "0x21B306C", VA = "0x21B306C")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE04B0", Offset = "0xBE04B0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0x21B0F30", Offset = "0x21B0F30", VA = "0x21B0F30")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0x21B30C4", Offset = "0x21B30C4", VA = "0x21B30C4")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE04EC", Offset = "0xBE04EC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0x21B135C", Offset = "0x21B135C", VA = "0x21B135C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0x21B3124", Offset = "0x21B3124", VA = "0x21B3124")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0528", Offset = "0xBE0528")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DAD")]
			public float startPosY;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public bool offsetYSet;

			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA8C")]
			public float offsetY;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sequence s;

			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 endValue;

			[Token(Token = "0x4002D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Tween yTween;

			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0x21B1C2C", Offset = "0x21B1C2C", VA = "0x21B1C2C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0x21B3184", Offset = "0x21B3184", VA = "0x21B3184")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0x21B31DC", Offset = "0x21B31DC", VA = "0x21B31DC")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0x21B3240", Offset = "0x21B3240", VA = "0x21B3240")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0x21B3298", Offset = "0x21B3298", VA = "0x21B3298")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0x21B32F0", Offset = "0x21B32F0", VA = "0x21B32F0")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0564", Offset = "0xBE0564")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DB4")]
			public Rigidbody target;

			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0x21B20DC", Offset = "0x21B20DC", VA = "0x21B20DC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0x21B3540", Offset = "0x21B3540", VA = "0x21B3540")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE05A0", Offset = "0xBE05A0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Transform trans;

			[Token(Token = "0x4002D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD74")]
			public Rigidbody target;

			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0x21B25AC", Offset = "0x21B25AC", VA = "0x21B25AC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0x21B3598", Offset = "0x21B3598", VA = "0x21B3598")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0x21B35F0", Offset = "0x21B35F0", VA = "0x21B35F0")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE05DC", Offset = "0xBE05DC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0x21B2910", Offset = "0x21B2910", VA = "0x21B2910")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0x21B3818", Offset = "0x21B3818", VA = "0x21B3818")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0618", Offset = "0xBE0618")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform trans;

			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody target;

			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0x21B2CB4", Offset = "0x21B2CB4", VA = "0x21B2CB4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0x21B2D3C", Offset = "0x21B2D3C", VA = "0x21B2D3C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002EED")]
			[Address(RVA = "0x21B2D94", Offset = "0x21B2D94", VA = "0x21B2D94")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x21B01FC", Offset = "0x21B01FC", VA = "0x21B01FC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x21B048C", Offset = "0x21B048C", VA = "0x21B048C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x21B073C", Offset = "0x21B073C", VA = "0x21B073C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x21B09EC", Offset = "0x21B09EC", VA = "0x21B09EC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x21B0C9C", Offset = "0x21B0C9C", VA = "0x21B0C9C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x21B0F60", Offset = "0x21B0F60", VA = "0x21B0F60")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x21B138C", Offset = "0x21B138C", VA = "0x21B138C")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x21B1C5C", Offset = "0x21B1C5C", VA = "0x21B1C5C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x21B210C", Offset = "0x21B210C", VA = "0x21B210C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x21B25DC", Offset = "0x21B25DC", VA = "0x21B25DC")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x21B2940", Offset = "0x21B2940", VA = "0x21B2940")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D3")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0654", Offset = "0xBE0654")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DBC")]
			public SpriteRenderer target;

			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0x21B3BE4", Offset = "0x21B3BE4", VA = "0x21B3BE4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0x21B46E4", Offset = "0x21B46E4", VA = "0x21B46E4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0x21B4744", Offset = "0x21B4744", VA = "0x21B4744")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0690", Offset = "0xBE0690")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SpriteRenderer target;

			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0x21B3E8C", Offset = "0x21B3E8C", VA = "0x21B3E8C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0x21B4898", Offset = "0x21B4898", VA = "0x21B4898")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0x21B48F8", Offset = "0x21B48F8", VA = "0x21B48F8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE06CC", Offset = "0xBE06CC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD7C")]
			public Color to;

			[Token(Token = "0x4002D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpriteRenderer target;

			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0x21B46B4", Offset = "0x21B46B4", VA = "0x21B46B4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0x21B4A4C", Offset = "0x21B4A4C", VA = "0x21B4A4C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0x21B4A94", Offset = "0x21B4A94", VA = "0x21B4A94")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x21B3870", Offset = "0x21B3870", VA = "0x21B3870")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x21B3C14", Offset = "0x21B3C14", VA = "0x21B3C14")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x21B3EBC", Offset = "0x21B3EBC", VA = "0x21B3EBC")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x21B439C", Offset = "0x21B439C", VA = "0x21B439C")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D4")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20006C5")]
		public static class Utils
		{
			[Token(Token = "0x6002EF7")]
			[Address(RVA = "0x1BCD3B0", Offset = "0x1BCD3B0", VA = "0x1BCD3B0")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0708", Offset = "0xBE0708")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CanvasGroup target;

			[Token(Token = "0x6002EF8")]
			[Address(RVA = "0x21B4EA4", Offset = "0x21B4EA4", VA = "0x21B4EA4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0x21BCC58", Offset = "0x21BCC58", VA = "0x21BCC58")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0x21BCCA8", Offset = "0x21BCCA8", VA = "0x21BCCA8")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0744", Offset = "0xBE0744")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic target;

			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0x1BCA160", Offset = "0x1BCA160", VA = "0x1BCA160")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0x1BCA190", Offset = "0x1BCA190", VA = "0x1BCA190")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0x1BCA1F0", Offset = "0x1BCA1F0", VA = "0x1BCA1F0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0780", Offset = "0xBE0780")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DC4")]
			public Graphic target;

			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x1BCB80C", Offset = "0x1BCB80C", VA = "0x1BCB80C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x1BCB83C", Offset = "0x1BCB83C", VA = "0x1BCB83C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x1BCB89C", Offset = "0x1BCB89C", VA = "0x1BCB89C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE07BC", Offset = "0xBE07BC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Image target;

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x1BCC928", Offset = "0x1BCC928", VA = "0x1BCC928")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002F02")]
			[Address(RVA = "0x1BCC958", Offset = "0x1BCC958", VA = "0x1BCC958")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x1BCC9B8", Offset = "0x1BCC9B8", VA = "0x1BCC9B8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE07F8", Offset = "0xBE07F8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD84")]
			public Image target;

			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x1BCCB0C", Offset = "0x1BCCB0C", VA = "0x1BCCB0C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x1BCCB3C", Offset = "0x1BCCB3C", VA = "0x1BCCB3C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x1BCCB9C", Offset = "0x1BCCB9C", VA = "0x1BCCB9C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0834", Offset = "0xBE0834")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Image target;

			[Token(Token = "0x6002F07")]
			[Address(RVA = "0x1BCCCF0", Offset = "0x1BCCCF0", VA = "0x1BCCCF0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002F08")]
			[Address(RVA = "0x1BCCD20", Offset = "0x1BCCD20", VA = "0x1BCCD20")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002F09")]
			[Address(RVA = "0x1BCCD70", Offset = "0x1BCCD70", VA = "0x1BCCD70")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0870", Offset = "0xBE0870")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayoutElement target;

			[Token(Token = "0x6002F0A")]
			[Address(RVA = "0x1BCCDC8", Offset = "0x1BCCDC8", VA = "0x1BCCDC8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0x1BCCDF8", Offset = "0x1BCCDF8", VA = "0x1BCCDF8")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F0C")]
			[Address(RVA = "0x1BCCEC0", Offset = "0x1BCCEC0", VA = "0x1BCCEC0")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE08AC", Offset = "0xBE08AC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayoutElement target;

			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0x1BCCFC0", Offset = "0x1BCCFC0", VA = "0x1BCCFC0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002F0E")]
			[Address(RVA = "0x1BCCFF0", Offset = "0x1BCCFF0", VA = "0x1BCCFF0")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0x1BCD0B8", Offset = "0x1BCD0B8", VA = "0x1BCD0B8")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE08E8", Offset = "0xBE08E8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DCC")]
			public LayoutElement target;

			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x1BCD1B8", Offset = "0x1BCD1B8", VA = "0x1BCD1B8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002F11")]
			[Address(RVA = "0x1BCD1E8", Offset = "0x1BCD1E8", VA = "0x1BCD1E8")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F12")]
			[Address(RVA = "0x1BCD2B0", Offset = "0x1BCD2B0", VA = "0x1BCD2B0")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0924", Offset = "0xBE0924")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Outline target;

			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x21B6FB8", Offset = "0x21B6FB8", VA = "0x21B6FB8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002F14")]
			[Address(RVA = "0x21BCD00", Offset = "0x21BCD00", VA = "0x21BCD00")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F15")]
			[Address(RVA = "0x21BCD60", Offset = "0x21BCD60", VA = "0x21BCD60")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0960", Offset = "0xBE0960")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD8C")]
			public Outline target;

			[Token(Token = "0x6002F16")]
			[Address(RVA = "0x21B7260", Offset = "0x21B7260", VA = "0x21B7260")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x21BCEB4", Offset = "0x21BCEB4", VA = "0x21BCEB4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F18")]
			[Address(RVA = "0x21BCF14", Offset = "0x21BCF14", VA = "0x21BCF14")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE099C", Offset = "0xBE099C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Outline target;

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x1BC9790", Offset = "0x1BC9790", VA = "0x1BC9790")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002F1A")]
			[Address(RVA = "0x1BC97C0", Offset = "0x1BC97C0", VA = "0x1BC97C0")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0x1BC9810", Offset = "0x1BC9810", VA = "0x1BC9810")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE09D8", Offset = "0xBE09D8")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F1C")]
			[Address(RVA = "0x1BC9904", Offset = "0x1BC9904", VA = "0x1BC9904")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x1BC9934", Offset = "0x1BC9934", VA = "0x1BC9934")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0x1BC9984", Offset = "0x1BC9984", VA = "0x1BC9984")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0A14", Offset = "0xBE0A14")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x1BC9A78", Offset = "0x1BC9A78", VA = "0x1BC9A78")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002F20")]
			[Address(RVA = "0x1BC9AA8", Offset = "0x1BC9AA8", VA = "0x1BC9AA8")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F21")]
			[Address(RVA = "0x1BC9AF8", Offset = "0x1BC9AF8", VA = "0x1BC9AF8")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0A50", Offset = "0xBE0A50")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DD4")]
			public RectTransform target;

			[Token(Token = "0x6002F22")]
			[Address(RVA = "0x1BC9BEC", Offset = "0x1BC9BEC", VA = "0x1BC9BEC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002F23")]
			[Address(RVA = "0x1BC9C1C", Offset = "0x1BC9C1C", VA = "0x1BC9C1C")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F24")]
			[Address(RVA = "0x1BC9C6C", Offset = "0x1BC9C6C", VA = "0x1BC9C6C")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0A8C", Offset = "0xBE0A8C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public RectTransform target;

			[Token(Token = "0x6002F25")]
			[Address(RVA = "0x1BC9D60", Offset = "0x1BC9D60", VA = "0x1BC9D60")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002F26")]
			[Address(RVA = "0x1BC9D90", Offset = "0x1BC9D90", VA = "0x1BC9D90")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F27")]
			[Address(RVA = "0x1BC9DE8", Offset = "0x1BC9DE8", VA = "0x1BC9DE8")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0AC8", Offset = "0xBE0AC8")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD94")]
			public RectTransform target;

			[Token(Token = "0x6002F28")]
			[Address(RVA = "0x1BC9E60", Offset = "0x1BC9E60", VA = "0x1BC9E60")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x1BC9E90", Offset = "0x1BC9E90", VA = "0x1BC9E90")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x1BC9EE8", Offset = "0x1BC9EE8", VA = "0x1BC9EE8")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0B04", Offset = "0xBE0B04")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0x1BC9F60", Offset = "0x1BC9F60", VA = "0x1BC9F60")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002F2C")]
			[Address(RVA = "0x1BC9F90", Offset = "0x1BC9F90", VA = "0x1BC9F90")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0x1BC9FE8", Offset = "0x1BC9FE8", VA = "0x1BC9FE8")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0B40", Offset = "0xBE0B40")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F2E")]
			[Address(RVA = "0x1BCA060", Offset = "0x1BCA060", VA = "0x1BCA060")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x1BCA090", Offset = "0x1BCA090", VA = "0x1BCA090")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x1BCA0E8", Offset = "0x1BCA0E8", VA = "0x1BCA0E8")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0B7C", Offset = "0xBE0B7C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F31")]
			[Address(RVA = "0x1BCA344", Offset = "0x1BCA344", VA = "0x1BCA344")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002F32")]
			[Address(RVA = "0x1BCA374", Offset = "0x1BCA374", VA = "0x1BCA374")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F33")]
			[Address(RVA = "0x1BCA3C4", Offset = "0x1BCA3C4", VA = "0x1BCA3C4")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0BB8", Offset = "0xBE0BB8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DDC")]
			public RectTransform target;

			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x1BCA4B8", Offset = "0x1BCA4B8", VA = "0x1BCA4B8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x1BCA4E8", Offset = "0x1BCA4E8", VA = "0x1BCA4E8")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x1BCA538", Offset = "0x1BCA538", VA = "0x1BCA538")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0BF4", Offset = "0xBE0BF4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public RectTransform target;

			[Token(Token = "0x6002F37")]
			[Address(RVA = "0x1BCA62C", Offset = "0x1BCA62C", VA = "0x1BCA62C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002F38")]
			[Address(RVA = "0x1BCA65C", Offset = "0x1BCA65C", VA = "0x1BCA65C")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F39")]
			[Address(RVA = "0x1BCA6AC", Offset = "0x1BCA6AC", VA = "0x1BCA6AC")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0C30", Offset = "0xBE0C30")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FD9C")]
			public RectTransform target;

			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0x1BCA7A0", Offset = "0x1BCA7A0", VA = "0x1BCA7A0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0x1BCA7D0", Offset = "0x1BCA7D0", VA = "0x1BCA7D0")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x1BCA820", Offset = "0x1BCA820", VA = "0x1BCA820")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0C6C", Offset = "0xBE0C6C")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0x1BCA914", Offset = "0x1BCA914", VA = "0x1BCA914")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002F3E")]
			[Address(RVA = "0x1BCA944", Offset = "0x1BCA944", VA = "0x1BCA944")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F3F")]
			[Address(RVA = "0x1BCA994", Offset = "0x1BCA994", VA = "0x1BCA994")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0CA8", Offset = "0xBE0CA8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F40")]
			[Address(RVA = "0x1BCAA88", Offset = "0x1BCAA88", VA = "0x1BCAA88")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002F41")]
			[Address(RVA = "0x1BCAAB8", Offset = "0x1BCAAB8", VA = "0x1BCAAB8")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x1BCAB08", Offset = "0x1BCAB08", VA = "0x1BCAB08")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0CE4", Offset = "0xBE0CE4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform target;

			[Token(Token = "0x6002F43")]
			[Address(RVA = "0x1BCABFC", Offset = "0x1BCABFC", VA = "0x1BCABFC")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002F44")]
			[Address(RVA = "0x1BCAC2C", Offset = "0x1BCAC2C", VA = "0x1BCAC2C")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F45")]
			[Address(RVA = "0x1BCAD28", Offset = "0x1BCAD28", VA = "0x1BCAD28")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0D20", Offset = "0xBE0D20")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DE4")]
			public RectTransform target;

			[Token(Token = "0x6002F46")]
			[Address(RVA = "0x1BCAE44", Offset = "0x1BCAE44", VA = "0x1BCAE44")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002F47")]
			[Address(RVA = "0x1BCAE74", Offset = "0x1BCAE74", VA = "0x1BCAE74")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x1BCAF70", Offset = "0x1BCAF70", VA = "0x1BCAF70")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0D5C", Offset = "0xBE0D5C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public RectTransform target;

			[Token(Token = "0x6002F49")]
			[Address(RVA = "0x1BCB08C", Offset = "0x1BCB08C", VA = "0x1BCB08C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x1BCB0BC", Offset = "0x1BCB0BC", VA = "0x1BCB0BC")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0x1BCB1B8", Offset = "0x1BCB1B8", VA = "0x1BCB1B8")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0D98", Offset = "0xBE0D98")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDA4")]
			public RectTransform target;

			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float startPosY;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool offsetYSet;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float offsetY;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DEC")]
			public Sequence s;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Vector2 endValue;

			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x1BCB2D4", Offset = "0x1BCB2D4", VA = "0x1BCB2D4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x1BCB304", Offset = "0x1BCB304", VA = "0x1BCB304")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x1BCB354", Offset = "0x1BCB354", VA = "0x1BCB354")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0x1BCB448", Offset = "0x1BCB448", VA = "0x1BCB448")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x1BCB4A8", Offset = "0x1BCB4A8", VA = "0x1BCB4A8")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x1BCB4F8", Offset = "0x1BCB4F8", VA = "0x1BCB4F8")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x1BCB5EC", Offset = "0x1BCB5EC", VA = "0x1BCB5EC")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0DD4", Offset = "0xBE0DD4")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDAC")]
			public ScrollRect target;

			[Token(Token = "0x6002F53")]
			[Address(RVA = "0x1BCB9F0", Offset = "0x1BCB9F0", VA = "0x1BCB9F0")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x1BCBA20", Offset = "0x1BCBA20", VA = "0x1BCBA20")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F55")]
			[Address(RVA = "0x1BCBAD8", Offset = "0x1BCBAD8", VA = "0x1BCBAD8")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E10", Offset = "0xBE0E10")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScrollRect target;

			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x1BCBBD0", Offset = "0x1BCBBD0", VA = "0x1BCBBD0")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x1BCBC00", Offset = "0x1BCBC00", VA = "0x1BCBC00")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002F58")]
			[Address(RVA = "0x1BCBC50", Offset = "0x1BCBC50", VA = "0x1BCBC50")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E4C", Offset = "0xBE0E4C")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScrollRect target;

			[Token(Token = "0x6002F59")]
			[Address(RVA = "0x1BCBCA8", Offset = "0x1BCBCA8", VA = "0x1BCBCA8")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0x1BCBCD8", Offset = "0x1BCBCD8", VA = "0x1BCBCD8")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0x1BCBD28", Offset = "0x1BCBD28", VA = "0x1BCBD28")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E88", Offset = "0xBE0E88")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Slider target;

			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0x1BCBD80", Offset = "0x1BCBD80", VA = "0x1BCBD80")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0x1BCBDB0", Offset = "0x1BCBDB0", VA = "0x1BCBDB0")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0x1BCBE00", Offset = "0x1BCBE00", VA = "0x1BCBE00")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0EC4", Offset = "0xBE0EC4")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DF4")]
			public Text target;

			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0x1BCBE58", Offset = "0x1BCBE58", VA = "0x1BCBE58")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002F60")]
			[Address(RVA = "0x1BCBE88", Offset = "0x1BCBE88", VA = "0x1BCBE88")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F61")]
			[Address(RVA = "0x1BCBEE8", Offset = "0x1BCBEE8", VA = "0x1BCBEE8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0F00", Offset = "0xBE0F00")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Text target;

			[Token(Token = "0x6002F62")]
			[Address(RVA = "0x1BCC03C", Offset = "0x1BCC03C", VA = "0x1BCC03C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002F63")]
			[Address(RVA = "0x1BCC06C", Offset = "0x1BCC06C", VA = "0x1BCC06C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F64")]
			[Address(RVA = "0x1BCC0CC", Offset = "0x1BCC0CC", VA = "0x1BCC0CC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0F3C", Offset = "0xBE0F3C")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4002D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDB4")]
			public Text target;

			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x1BCC220", Offset = "0x1BCC220", VA = "0x1BCC220")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002F66")]
			[Address(RVA = "0x1BCC250", Offset = "0x1BCC250", VA = "0x1BCC250")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0x1BCC2A0", Offset = "0x1BCC2A0", VA = "0x1BCC2A0")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0F78", Offset = "0xBE0F78")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color to;

			[Token(Token = "0x4002D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic target;

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0x1BCC2F8", Offset = "0x1BCC2F8", VA = "0x1BCC2F8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002F69")]
			[Address(RVA = "0x1BCC328", Offset = "0x1BCC328", VA = "0x1BCC328")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0x1BCC370", Offset = "0x1BCC370", VA = "0x1BCC370")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0FB4", Offset = "0xBE0FB4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color to;

			[Token(Token = "0x4002D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4DFC")]
			public Image target;

			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0x1BCC508", Offset = "0x1BCC508", VA = "0x1BCC508")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0x1BCC538", Offset = "0x1BCC538", VA = "0x1BCC538")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0x1BCC580", Offset = "0x1BCC580", VA = "0x1BCC580")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0FF0", Offset = "0xBE0FF0")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Color to;

			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDBC")]
			public Text target;

			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0x1BCC718", Offset = "0x1BCC718", VA = "0x1BCC718")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0x1BCC748", Offset = "0x1BCC748", VA = "0x1BCC748")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x1BCC790", Offset = "0x1BCC790", VA = "0x1BCC790")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x21B4C2C", Offset = "0x21B4C2C", VA = "0x21B4C2C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x21B4ED4", Offset = "0x21B4ED4", VA = "0x21B4ED4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x21B5248", Offset = "0x21B5248", VA = "0x21B5248")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x21B54C0", Offset = "0x21B54C0", VA = "0x21B54C0")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x21B5834", Offset = "0x21B5834", VA = "0x21B5834")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x21B5AAC", Offset = "0x21B5AAC", VA = "0x21B5AAC")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x21B5D90", Offset = "0x21B5D90", VA = "0x21B5D90")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x21B626C", Offset = "0x21B626C", VA = "0x21B626C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x21B65B4", Offset = "0x21B65B4", VA = "0x21B65B4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x21B68FC", Offset = "0x21B68FC", VA = "0x21B68FC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x21B6C44", Offset = "0x21B6C44", VA = "0x21B6C44")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x21B6FE8", Offset = "0x21B6FE8", VA = "0x21B6FE8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x21B7290", Offset = "0x21B7290", VA = "0x21B7290")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x21B75A4", Offset = "0x21B75A4", VA = "0x21B75A4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x21B78EC", Offset = "0x21B78EC", VA = "0x21B78EC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x21B7C38", Offset = "0x21B7C38", VA = "0x21B7C38")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x21B7F84", Offset = "0x21B7F84", VA = "0x21B7F84")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x21B81D0", Offset = "0x21B81D0", VA = "0x21B81D0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x21B843C", Offset = "0x21B843C", VA = "0x21B843C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x21B86A8", Offset = "0x21B86A8", VA = "0x21B86A8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x21B8914", Offset = "0x21B8914", VA = "0x21B8914")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x21B8C5C", Offset = "0x21B8C5C", VA = "0x21B8C5C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x21B8FA4", Offset = "0x21B8FA4", VA = "0x21B8FA4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x21B92B8", Offset = "0x21B92B8", VA = "0x21B92B8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x21B95F0", Offset = "0x21B95F0", VA = "0x21B95F0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x21B9928", Offset = "0x21B9928", VA = "0x21B9928")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x21B9C70", Offset = "0x21B9C70", VA = "0x21B9C70")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x21B9F40", Offset = "0x21B9F40", VA = "0x21B9F40")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x21BA260", Offset = "0x21BA260", VA = "0x21BA260")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x21BA568", Offset = "0x21BA568", VA = "0x21BA568")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x21BAE80", Offset = "0x21BAE80", VA = "0x21BAE80")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x21BB1C0", Offset = "0x21BB1C0", VA = "0x21BB1C0")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x21BB464", Offset = "0x21BB464", VA = "0x21BB464")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x21BB708", Offset = "0x21BB708", VA = "0x21BB708")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x21BB9B4", Offset = "0x21BB9B4", VA = "0x21BB9B4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x21BBD28", Offset = "0x21BBD28", VA = "0x21BBD28")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x21BBFA0", Offset = "0x21BBFA0", VA = "0x21BBFA0")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x21BC310", Offset = "0x21BC310", VA = "0x21BC310")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x21BC628", Offset = "0x21BC628", VA = "0x21BC628")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x21BC940", Offset = "0x21BC940", VA = "0x21BC940")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D5")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE102C", Offset = "0xBE102C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material target;

			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int propertyID;

			[Token(Token = "0x6002F71")]
			[Address(RVA = "0x1BCEEEC", Offset = "0x1BCEEEC", VA = "0x1BCEEEC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002F72")]
			[Address(RVA = "0x1BCF35C", Offset = "0x1BCF35C", VA = "0x1BCF35C")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F73")]
			[Address(RVA = "0x1BCF3C0", Offset = "0x1BCF3C0", VA = "0x1BCF3C0")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1068", Offset = "0xBE1068")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material target;

			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4E04")]
			public int propertyID;

			[Token(Token = "0x6002F74")]
			[Address(RVA = "0x1BCF32C", Offset = "0x1BCF32C", VA = "0x1BCF32C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x1BCF4D0", Offset = "0x1BCF4D0", VA = "0x1BCF4D0")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002F76")]
			[Address(RVA = "0x1BCF534", Offset = "0x1BCF534", VA = "0x1BCF534")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1BCD948", Offset = "0x1BCD948", VA = "0x1BCD948")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1BCDE28", Offset = "0x1BCDE28", VA = "0x1BCDE28")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1BCE324", Offset = "0x1BCE324", VA = "0x1BCE324")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1BCE468", Offset = "0x1BCE468", VA = "0x1BCE468")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1BCE5AC", Offset = "0x1BCE5AC", VA = "0x1BCE5AC")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x1BCE6F0", Offset = "0x1BCE6F0", VA = "0x1BCE6F0")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1BCE844", Offset = "0x1BCE844", VA = "0x1BCE844")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1BCE998", Offset = "0x1BCE998", VA = "0x1BCE998")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x1BCEADC", Offset = "0x1BCEADC", VA = "0x1BCEADC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1BCEF1C", Offset = "0x1BCEF1C", VA = "0x1BCEF1C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D6")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20006EF")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private readonly Tween t;

			[Token(Token = "0x17000556")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F77")]
				[Address(RVA = "0x21AE344", Offset = "0x21AE344", VA = "0x21AE344", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F78")]
			[Address(RVA = "0x21AE434", Offset = "0x21AE434", VA = "0x21AE434")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20006F0")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA94")]
			private readonly Tween t;

			[Token(Token = "0x17000557")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F79")]
				[Address(RVA = "0x21AE80C", Offset = "0x21AE80C", VA = "0x21AE80C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F7A")]
			[Address(RVA = "0x21AE984", Offset = "0x21AE984", VA = "0x21AE984")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20006F1")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Tween t;

			[Token(Token = "0x17000558")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F7B")]
				[Address(RVA = "0x21AE5CC", Offset = "0x21AE5CC", VA = "0x21AE5CC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0x21AE630", Offset = "0x21AE630", VA = "0x21AE630")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20006F2")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Tween t;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly int elapsedLoops;

			[Token(Token = "0x17000559")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F7D")]
				[Address(RVA = "0x21AE47C", Offset = "0x21AE47C", VA = "0x21AE47C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F7E")]
			[Address(RVA = "0x21AE56C", Offset = "0x21AE56C", VA = "0x21AE56C")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20006F3")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4E0B")]
			private readonly Tween t;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private readonly float position;

			[Token(Token = "0x1700055A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F7F")]
				[Address(RVA = "0x21AE678", Offset = "0x21AE678", VA = "0x21AE678", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F80")]
			[Address(RVA = "0x21AE7AC", Offset = "0x21AE7AC", VA = "0x21AE7AC")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20006F4")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDC4")]
			private readonly Tween t;

			[Token(Token = "0x1700055B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002F81")]
				[Address(RVA = "0x21AE9CC", Offset = "0x21AE9CC", VA = "0x21AE9CC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002F82")]
			[Address(RVA = "0x21AEAC4", Offset = "0x21AEAC4", VA = "0x21AEAC4")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20003D7")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20006F5")]
		public static class Physics
		{
			[Token(Token = "0x6002F83")]
			[Address(RVA = "0x1BCF8D4", Offset = "0x1BCF8D4", VA = "0x1BCF8D4")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6002F84")]
			[Address(RVA = "0x1BCFBAC", Offset = "0x1BCFBAC", VA = "0x1BCFBAC")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F85")]
			[Address(RVA = "0x1BCFBD0", Offset = "0x1BCFBD0", VA = "0x1BCFBD0")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0x1BCFD10", Offset = "0x1BCFD10", VA = "0x1BCFD10")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1BCF644", Offset = "0x1BCF644", VA = "0x1BCF644")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1BCF764", Offset = "0x1BCF764", VA = "0x1BCF764")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace ColliderView
{
	[Token(Token = "0x20003D8")]
	internal static class Box2D
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2[] verts;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] quads;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E13")]
		private static Vector2[] xformVerts;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x2193478", Offset = "0x2193478", VA = "0x2193478")]
		private static Vector2 Transform(Vector2 vert, BoxCollider2D collider)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x219375C", Offset = "0x219375C", VA = "0x219375C")]
		private static void TransformGeometry(BoxCollider2D collider)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x2193A94", Offset = "0x2193A94", VA = "0x2193A94")]
		public static void Render(List<Collider2D> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x2194854", Offset = "0x2194854", VA = "0x2194854")]
		private static void RenderLines(List<Collider2D> colliders)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x2194AD4", Offset = "0x2194AD4", VA = "0x2194AD4")]
		private static void RenderQuads(List<Collider2D> colliders)
		{
		}
	}
	[Token(Token = "0x20003D9")]
	internal static class Box3D
	{
		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Vector3[] verts;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDCC")]
		private static readonly int[] quads;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] xformVerts;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x2195AF0", Offset = "0x2195AF0", VA = "0x2195AF0")]
		private static Vector3 Transform(Vector3 vert, BoxCollider collider)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x2195E0C", Offset = "0x2195E0C", VA = "0x2195E0C")]
		private static Vector3 Transform(Vector3 vert, Bounds bounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x2195FAC", Offset = "0x2195FAC", VA = "0x2195FAC")]
		public static void Render(List<Collider> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x21969B0", Offset = "0x21969B0", VA = "0x21969B0")]
		private static void TransformGeometry(BoxCollider collider)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x21964B0", Offset = "0x21964B0", VA = "0x21964B0")]
		private static void RenderLines(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x2196730", Offset = "0x2196730", VA = "0x2196730")]
		private static void RenderQuads(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x21977B8", Offset = "0x21977B8", VA = "0x21977B8")]
		public static void RenderLines(Bounds bounds)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x2197FE4", Offset = "0x2197FE4", VA = "0x2197FE4")]
		public static void RenderQuads(Bounds bounds)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	internal static class Capsule3D
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] cylinder;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] xformCylinder;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E1B")]
		private static readonly int[] cylinderQuads;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Vector3[] halfSphere;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDD4")]
		private static Vector3[] xformHalfSphere;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] xformHalfSphereFlipped;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] halfSphereQuads;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] halfSphereTris;

		[Token(Token = "0x4001929")]
		private const int DIRECTION_X_AXIS = 0;

		[Token(Token = "0x400192A")]
		private const int DIRECTION_Y_AXIS = 1;

		[Token(Token = "0x400192B")]
		private const int DIRECTION_Z_AXIS = 2;

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x2198F68", Offset = "0x2198F68", VA = "0x2198F68")]
		private static Vector3 CylinderScale(CapsuleCollider collider, float fOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x2199238", Offset = "0x2199238", VA = "0x2199238")]
		private static Quaternion CylinderQuat(CapsuleCollider collider)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x2199658", Offset = "0x2199658", VA = "0x2199658")]
		private static Vector3 TransformCylinderVert(Vector3 vert, CapsuleCollider collider, Vector3 scale, Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x2199B54", Offset = "0x2199B54", VA = "0x2199B54")]
		private static Quaternion HalfSphereQuat(CapsuleCollider collider)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x2199F70", Offset = "0x2199F70", VA = "0x2199F70")]
		private static Quaternion HalfSphereQuatFlipped(CapsuleCollider collider)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x219A390", Offset = "0x219A390", VA = "0x219A390")]
		private static float HalfSphereOffset(CapsuleCollider collider, out Vector3 vOffset)
		{
			return default(float);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x219A7D0", Offset = "0x219A7D0", VA = "0x219A7D0")]
		private static Vector3 TransformHalfSphereVert(Vector3 vert, CapsuleCollider collider, Quaternion q, Vector3 offset, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x219ACF4", Offset = "0x219ACF4", VA = "0x219ACF4")]
		public static void Render(List<Collider> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x219BB2C", Offset = "0x219BB2C", VA = "0x219BB2C")]
		private static void TransformGeometry(CapsuleCollider collider)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x219B20C", Offset = "0x219B20C", VA = "0x219B20C")]
		private static void RenderLines(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x219B584", Offset = "0x219B584", VA = "0x219B584")]
		private static void RenderQuads(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x219B874", Offset = "0x219B874", VA = "0x219B874")]
		private static void RenderTris(List<Collider> colliders)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	internal static class Character3D
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] cylinder;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] xformCylinder;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] cylinderQuads;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E2B")]
		private static readonly Vector3[] halfSphere;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Vector3[] xformHalfSphere;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDE4")]
		private static Vector3[] xformHalfSphereFlipped;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] halfSphereQuads;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] halfSphereTris;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x219F39C", Offset = "0x219F39C", VA = "0x219F39C")]
		private static Vector3 CylinderScale(CharacterController collider, float fOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x219F4E4", Offset = "0x219F4E4", VA = "0x219F4E4")]
		private static Quaternion CylinderQuat()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x219F62C", Offset = "0x219F62C", VA = "0x219F62C")]
		private static Vector3 TransformCylinderVert(Vector3 vert, CharacterController collider, Vector3 scale, Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x219FB28", Offset = "0x219FB28", VA = "0x219FB28")]
		private static Quaternion HalfSphereQuat()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x219FC6C", Offset = "0x219FC6C", VA = "0x219FC6C")]
		private static Quaternion HalfSphereQuatFlipped()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x219FDB4", Offset = "0x219FDB4", VA = "0x219FDB4")]
		private static float HalfSphereOffset(CharacterController collider, out Vector3 vOffset)
		{
			return default(float);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x21A0094", Offset = "0x21A0094", VA = "0x21A0094")]
		private static Vector3 TransformHalfSphereVert(Vector3 vert, CharacterController collider, Quaternion q, Vector3 offset, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x21A05B8", Offset = "0x21A05B8", VA = "0x21A05B8")]
		public static void Render(List<Collider> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x21A13F0", Offset = "0x21A13F0", VA = "0x21A13F0")]
		private static void TransformGeometry(CharacterController collider)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x21A0AD0", Offset = "0x21A0AD0", VA = "0x21A0AD0")]
		private static void RenderLines(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x21A0E48", Offset = "0x21A0E48", VA = "0x21A0E48")]
		private static void RenderQuads(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x21A1138", Offset = "0x21A1138", VA = "0x21A1138")]
		private static void RenderTris(List<Collider> colliders)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	internal static class Circle2D
	{
		[Token(Token = "0x4001934")]
		private const int NUM_SEGMENTS = 24;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E33")]
		private static readonly float STEP;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Vector2[] verts;

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x21A4694", Offset = "0x21A4694", VA = "0x21A4694")]
		public static void Render(List<Collider2D> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x21A5298", Offset = "0x21A5298", VA = "0x21A5298")]
		private static Vector2 TransformGeometry(CircleCollider2D collider)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x21A4B98", Offset = "0x21A4B98", VA = "0x21A4B98")]
		private static void RenderLines(List<Collider2D> colliders)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x21A4D90", Offset = "0x21A4D90", VA = "0x21A4D90")]
		private static void RenderTris(List<Collider2D> colliders)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	internal static class CV_Common
	{
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x2198C6C", Offset = "0x2198C6C", VA = "0x2198C6C")]
		public static float ObjectMaxScale(Transform xform)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x2198DD8", Offset = "0x2198DD8", VA = "0x2198DD8")]
		public static void CapsuleObjectScale(Transform xform, out float radiusScale, out float cylinderScale)
		{
		}

		[Token(Token = "0x6001BA5")]
		public static T SafeGetComponent<T>(GameObject go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20003DE")]
	[Flags]
	public enum Options
	{
		[Token(Token = "0x4001938")]
		None = 0,
		[Token(Token = "0x4001939")]
		NoDepthTest = 1
	}
	[Token(Token = "0x20003DF")]
	internal static class Display
	{
		[Token(Token = "0x400193A")]
		public const float ALPHA_DEFAULT_EDGE = 1f;

		[Token(Token = "0x400193B")]
		public const float ALPHA_DEFAULT_FACE = 0.2f;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Material material;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDF4")]
		private static Material materialNoDepthTest;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color lastColor;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lastFrame;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool lastNoDepth;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E43")]
		private static float lastAlpha;

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x2193F98", Offset = "0x2193F98", VA = "0x2193F98")]
		public static bool SetColor(Color color, float alpha, bool noDepthTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x21A5B70", Offset = "0x21A5B70", VA = "0x21A5B70")]
		public static bool IsSet(Options options, Options flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x21A587C", Offset = "0x21A587C", VA = "0x21A587C")]
		public static void RenderLineList(Vector2[] verts)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x2197078", Offset = "0x2197078", VA = "0x2197078")]
		public static void RenderWireframeQuads(Vector3[] verts, int[] quads)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x2194D54", Offset = "0x2194D54", VA = "0x2194D54")]
		public static void RenderWireframeQuads(Vector2[] verts, int[] quads)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x2197480", Offset = "0x2197480", VA = "0x2197480")]
		public static void RenderSolidQuads(Vector3[] verts, int[] quads)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x2195290", Offset = "0x2195290", VA = "0x2195290")]
		public static void RenderSolidQuads(Vector2[] verts, int[] quads)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x219C43C", Offset = "0x219C43C", VA = "0x219C43C")]
		public static void RenderWireframeTris(Vector3[] verts, int[] tris)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x219C75C", Offset = "0x219C75C", VA = "0x219C75C")]
		public static void RenderSolidTris(Vector3[] verts, int[] tris)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	internal static class Edge2D
	{
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x21A5CD8", Offset = "0x21A5CD8", VA = "0x21A5CD8")]
		public static void Render(List<Collider2D> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x21A5FB8", Offset = "0x21A5FB8", VA = "0x21A5FB8")]
		private static void RenderLines(List<Collider2D> colliders)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x21A630C", Offset = "0x21A630C", VA = "0x21A630C")]
		private static Vector2[] TransformGeometry(EdgeCollider2D collider)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E1")]
	internal static class Mesh2D
	{
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x21A658C", Offset = "0x21A658C", VA = "0x21A658C")]
		public static void Render(List<Collider2D> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x21A686C", Offset = "0x21A686C", VA = "0x21A686C")]
		private static void RenderLines(List<Collider2D> colliders)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x21A69C8", Offset = "0x21A69C8", VA = "0x21A69C8")]
		private static void RenderPath(PolygonCollider2D collider)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x21A6B48", Offset = "0x21A6B48", VA = "0x21A6B48")]
		private static Vector2[] TransformGeometry(PolygonCollider2D collider, int path)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E2")]
	internal static class Mesh3D
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int MAX_MESH_VERTS;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FDFC")]
		private static Vector3[] xformVerts;

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x21A6DD8", Offset = "0x21A6DD8", VA = "0x21A6DD8")]
		public static void Render(List<Collider> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x21A7D5C", Offset = "0x21A7D5C", VA = "0x21A7D5C")]
		private static void TransformGeometry(MeshCollider collider)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x21A72F0", Offset = "0x21A72F0", VA = "0x21A72F0")]
		private static void RenderLines(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x21A7734", Offset = "0x21A7734", VA = "0x21A7734")]
		private static void RenderTris(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x21A7A84", Offset = "0x21A7A84", VA = "0x21A7A84")]
		private static void RenderQuads(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x21A7FA8", Offset = "0x21A7FA8", VA = "0x21A7FA8")]
		private static bool RenderAABB(MeshCollider collider)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E3")]
	internal static class Sphere3D
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] verts;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] xformVerts;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] quads;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E4B")]
		private static readonly int[] tris;

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x21A8330", Offset = "0x21A8330", VA = "0x21A8330")]
		private static Vector3 Transform(Vector3 vert, SphereCollider collider, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x21A87E0", Offset = "0x21A87E0", VA = "0x21A87E0")]
		public static void Render(List<Collider> colliders, Color edgeColor, float edgeAlpha, Color faceColor, float faceAlpha, bool noDepth)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x21A94B0", Offset = "0x21A94B0", VA = "0x21A94B0")]
		private static void TransformGeometry(SphereCollider collider)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x21A8CF8", Offset = "0x21A8CF8", VA = "0x21A8CF8")]
		private static void RenderLines(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x21A8FB0", Offset = "0x21A8FB0", VA = "0x21A8FB0")]
		private static void RenderQuads(List<Collider> colliders)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x21A9230", Offset = "0x21A9230", VA = "0x21A9230")]
		private static void RenderTris(List<Collider> colliders)
		{
		}
	}
}
namespace BlueprintReality.Utility
{
	[Token(Token = "0x20003E4")]
	public class OpenWebsiteControls : MonoBehaviour
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string url;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1D7B67C", Offset = "0x1D7B67C", VA = "0x1D7B67C")]
		public void Open()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1D7B6BC", Offset = "0x1D7B6BC", VA = "0x1D7B6BC")]
		public OpenWebsiteControls()
		{
		}
	}
}
namespace BlueprintReality.GameObjects
{
	[Token(Token = "0x20003E5")]
	public class GameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE10A4", Offset = "0xBE10A4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObjectStackElement instance;

			[Token(Token = "0x6002F87")]
			[Address(RVA = "0x1D6B5E8", Offset = "0x1D6B5E8", VA = "0x1D6B5E8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x1D6B6EC", Offset = "0x1D6B6EC", VA = "0x1D6B6EC")]
			internal bool <RemoveElement>b__0(GameObjectStackElement se)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE04")]
		public string id;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObjectStackElement> stack;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1D6A948", Offset = "0x1D6A948", VA = "0x1D6A948")]
		public void SpawnObject(GameObject prefab)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1D6AF90", Offset = "0x1D6AF90", VA = "0x1D6AF90")]
		public void PopTopElement()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1D6B1DC", Offset = "0x1D6B1DC", VA = "0x1D6B1DC")]
		public void RemoveElement(GameObject element)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1D6B618", Offset = "0x1D6B618", VA = "0x1D6B618")]
		public GameObjectStack()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class GameObjectStackElement : MonoBehaviour
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<string> tags;

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1D6B80C", Offset = "0x1D6B80C", VA = "0x1D6B80C")]
		public GameObjectStackElement()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class PopFromGameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E53")]
		public bool all;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string stackId;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x1D6D634", Offset = "0x1D6D634", VA = "0x1D6D634")]
		public void PopTopElement()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1D6D83C", Offset = "0x1D6D83C", VA = "0x1D6D83C")]
		private GameObjectStack FindStack()
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1D6DB5C", Offset = "0x1D6DB5C", VA = "0x1D6DB5C")]
		public PopFromGameObjectStack()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class OpenPopupWindow : PushToGameObjectStack
	{
		[Serializable]
		[Token(Token = "0x20006F7")]
		public class BtnData
		{
			[Token(Token = "0x4002D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public string btnText;

			[Token(Token = "0x4002D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE14")]
			public bool btnUseLoc;

			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool btnToUpper;

			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button.ButtonClickedEvent btnClick;

			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x1D6D5F0", Offset = "0x1D6D5F0", VA = "0x1D6D5F0")]
			public BtnData()
			{
			}
		}

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE0C")]
		public string titleText;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool titleUseLoc;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool titleToUpper;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string contentText;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E5B")]
		public bool contentUseLoc;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool contentToUpper;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CA9C")]
		public bool showCloseButton;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button.ButtonClickedEvent onCloseButtonClicked;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<BtnData> btnData;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PopupWindow popupWindow;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E62")]
		private GameObjectStack popupStack;

		[Token(Token = "0x17000380")]
		public bool isShowing
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x1D6B8C4", Offset = "0x1D6B8C4", VA = "0x1D6B8C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000381")]
		public float PopupAlpha
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x1D6BA54", Offset = "0x1D6BA54", VA = "0x1D6BA54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x1D6BBD4", Offset = "0x1D6BBD4", VA = "0x1D6BBD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1D6BD44", Offset = "0x1D6BD44", VA = "0x1D6BD44")]
		public void Open()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1D6D2D8", Offset = "0x1D6D2D8", VA = "0x1D6D2D8")]
		public void Close()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1D6D440", Offset = "0x1D6D440", VA = "0x1D6D440")]
		public OpenPopupWindow()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class PopupWindow : MonoBehaviour
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.UI.Text title;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E6A")]
		public GameObject closeButton;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public UnityEngine.UI.Text content;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE1C")]
		public Transform buttons;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject btnPrefab;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Button.ButtonClickedEvent onCloseClicked;

		[Token(Token = "0x17000382")]
		public float Alpha
		{
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x1D6E730", Offset = "0x1D6E730", VA = "0x1D6E730")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x1D6E7D4", Offset = "0x1D6E7D4", VA = "0x1D6E7D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1D6DBEC", Offset = "0x1D6DBEC", VA = "0x1D6DBEC")]
		private void CompleteText(UnityEngine.UI.Text uitext, string text, bool useLoc, bool toUpper)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1D6CE20", Offset = "0x1D6CE20", VA = "0x1D6CE20")]
		public void CompleteTitle(string titleText, bool titleUseLoc, bool titleToUpper)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1D6D03C", Offset = "0x1D6D03C", VA = "0x1D6D03C")]
		public void CompleteContent(string contentText, bool contentUseLoc, bool contentToUpper)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1D6D0E0", Offset = "0x1D6D0E0", VA = "0x1D6D0E0")]
		public void CompleteButton(string btnText, bool btnUseLoc, bool btnToUpper, Button.ButtonClickedEvent btnClick)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1D6CEC4", Offset = "0x1D6CEC4", VA = "0x1D6CEC4")]
		public void SetCloseButtonActive(bool active, Button.ButtonClickedEvent onClicked)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1D6E0E0", Offset = "0x1D6E0E0", VA = "0x1D6E0E0")]
		private GameObject AddPrefab(Transform parent, GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1D6E438", Offset = "0x1D6E438", VA = "0x1D6E438")]
		public void HandleCloseButtonClicked()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1D6E880", Offset = "0x1D6E880", VA = "0x1D6E880")]
		public PopupWindow()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class PushToGameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E72")]
		public bool popFirst;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string stackId;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1D6C52C", Offset = "0x1D6C52C", VA = "0x1D6C52C")]
		public void PushElement()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1D6C6D4", Offset = "0x1D6C6D4", VA = "0x1D6C6D4")]
		protected GameObjectStack FindStack()
		{
			return null;
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1D6D560", Offset = "0x1D6D560", VA = "0x1D6D560")]
		public PushToGameObjectStack()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class SetActiveFromOnTopOfStack : MonoBehaviour
	{
		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE10E0", Offset = "0xBE10E0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE2C")]
			public bool newState;

			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0x1D6F318", Offset = "0x1D6F318", VA = "0x1D6F318")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x1D6F448", Offset = "0x1D6F448", VA = "0x1D6F448")]
			internal void <ApplyState>b__0(GameObject g)
			{
			}

			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0x1D6F4AC", Offset = "0x1D6F4AC", VA = "0x1D6F4AC")]
			internal void <ApplyState>b__1(GameObject g)
			{
			}
		}

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE24")]
		public string stackId;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObject> active;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObject> inactive;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObjectStack stack;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E7A")]
		private GameObjectStackElement element;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool lastState;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1D6E8B0", Offset = "0x1D6E8B0", VA = "0x1D6E8B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1D6F24C", Offset = "0x1D6F24C", VA = "0x1D6F24C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1D6ED58", Offset = "0x1D6ED58", VA = "0x1D6ED58")]
		private bool CalculateNewState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1D6F040", Offset = "0x1D6F040", VA = "0x1D6F040")]
		private void ApplyState(bool newState)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1D6E910", Offset = "0x1D6E910", VA = "0x1D6E910")]
		private void FindStack()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1D6F348", Offset = "0x1D6F348", VA = "0x1D6F348")]
		public SetActiveFromOnTopOfStack()
		{
		}
	}
}
namespace BlueprintReality.UI
{
	[Token(Token = "0x20003EC")]
	[ExecuteInEditMode]
	public class SetRectFromChildRects : MonoBehaviour
	{
		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform group;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool setWidth;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float widthPadding;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E82")]
		public bool setHeight;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float heightPadding;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE34")]
		public bool setPosX;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool setPosY;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool updateEveryFrame;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool leaveIfNoChildren;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8A")]
		private Vector3[] worldCoords;

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1D771C8", Offset = "0x1D771C8", VA = "0x1D771C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1D784AC", Offset = "0x1D784AC", VA = "0x1D784AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1D771F8", Offset = "0x1D771F8", VA = "0x1D771F8")]
		private void UpdateRect()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1D78500", Offset = "0x1D78500", VA = "0x1D78500")]
		public SetRectFromChildRects()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[ExecuteInEditMode]
	public class SetRectFromParentRect : MonoBehaviour
	{
		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool setWidth;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE3C")]
		public bool setHeight;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool setPosX;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool setPosY;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sizeYOffset;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E92")]
		public float posYOffset;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool updateEveryFrame;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1D785A0", Offset = "0x1D785A0", VA = "0x1D785A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1D78A74", Offset = "0x1D78A74", VA = "0x1D78A74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1D785D0", Offset = "0x1D785D0", VA = "0x1D785D0")]
		private void UpdateRect()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1D78AC8", Offset = "0x1D78AC8", VA = "0x1D78AC8")]
		public SetRectFromParentRect()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class SpawnPrefabAsChild : MonoBehaviour
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE44")]
		public GameObject prefab;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC003C0", Offset = "0xC003C0")]
		private bool <Spawned>k__BackingField;

		[Token(Token = "0x17000383")]
		public bool Spawned
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x1D79D20", Offset = "0x1D79D20", VA = "0x1D79D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23190", Offset = "0xC23190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x1D79D64", Offset = "0x1D79D64", VA = "0x1D79D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC231CC", Offset = "0xC231CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1D79DB0", Offset = "0x1D79DB0", VA = "0x1D79DB0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1D7A1F0", Offset = "0x1D7A1F0", VA = "0x1D7A1F0")]
		public SpawnPrefabAsChild()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class SetInteractableFromActive : MonoBehaviour
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Selectable button;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObject> targets;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E9A")]
		public bool all;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1D76CA8", Offset = "0x1D76CA8", VA = "0x1D76CA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1D76DEC", Offset = "0x1D76DEC", VA = "0x1D76DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1D76E54", Offset = "0x1D76E54", VA = "0x1D76E54")]
		private bool CalculateNewState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1D77110", Offset = "0x1D77110", VA = "0x1D77110")]
		public SetInteractableFromActive()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class SetSelectableFromActiveAndInactive : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE111C", Offset = "0xBE111C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4EA2")]
			public static Predicate<GameObject> <>9__5_0;

			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Predicate<GameObject> <>9__5_1;

			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE54")]
			public static Predicate<GameObject> <>9__5_2;

			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<GameObject> <>9__5_3;

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0x1D79AB8", Offset = "0x1D79AB8", VA = "0x1D79AB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0x1D79AE8", Offset = "0x1D79AE8", VA = "0x1D79AE8")]
			internal bool <Update>b__5_0(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F90")]
			[Address(RVA = "0x1D79B84", Offset = "0x1D79B84", VA = "0x1D79B84")]
			internal bool <Update>b__5_1(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x1D79BE8", Offset = "0x1D79BE8", VA = "0x1D79BE8")]
			internal bool <Update>b__5_2(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F92")]
			[Address(RVA = "0x1D79C84", Offset = "0x1D79C84", VA = "0x1D79C84")]
			internal bool <Update>b__5_3(GameObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Selectable button;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE4C")]
		public List<GameObject> activeTargets;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<GameObject> inactiveTargets;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool all;

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1D78AF8", Offset = "0x1D78AF8", VA = "0x1D78AF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1D78C48", Offset = "0x1D78C48", VA = "0x1D78C48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1D79934", Offset = "0x1D79934", VA = "0x1D79934")]
		public SetSelectableFromActiveAndInactive()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class TooltipEntry : MonoBehaviour
	{
		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string groupId;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tooltipTextId;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EAA")]
		[HideInInspector]
		public string nonLocTextString;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC00438", Offset = "0xC00438")]
		private TooltipGroup <AttachedTo>k__BackingField;

		[Token(Token = "0x17000384")]
		public TooltipGroup AttachedTo
		{
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x1D7A220", Offset = "0x1D7A220", VA = "0x1D7A220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23208", Offset = "0xC23208")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x1D7A250", Offset = "0x1D7A250", VA = "0x1D7A250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23244", Offset = "0xC23244")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x1D7A288", Offset = "0x1D7A288", VA = "0x1D7A288")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1D7A41C", Offset = "0x1D7A41C", VA = "0x1D7A41C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x1D7A2B8", Offset = "0x1D7A2B8", VA = "0x1D7A2B8")]
		private void AttachToGroup()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1D7A44C", Offset = "0x1D7A44C", VA = "0x1D7A44C")]
		private void RemoveFromGroup()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1D7A668", Offset = "0x1D7A668", VA = "0x1D7A668")]
		private TooltipGroup FindClosestEntry()
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1D7AFC8", Offset = "0x1D7AFC8", VA = "0x1D7AFC8")]
		public TooltipEntry()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1D7B084", Offset = "0x1D7B084", VA = "0x1D7B084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23280", Offset = "0xC23280")]
		private bool <FindClosestEntry>b__11_0(TooltipGroup e)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F2")]
	public class TooltipGroup : MonoBehaviour
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC00474", Offset = "0xC00474")]
		private static List<TooltipGroup> <ActiveGroups>k__BackingField;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string groupId;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject tooltipGroup;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SetTextFromLocalization tooltipLabel;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EB2")]
		private TooltipEntry currentEntry;

		[Token(Token = "0x17000385")]
		public static List<TooltipGroup> ActiveGroups
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x1D7B104", Offset = "0x1D7B104", VA = "0x1D7B104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC232BC", Offset = "0xC232BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x1D7B1EC", Offset = "0x1D7B1EC", VA = "0x1D7B1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC232F8", Offset = "0xC232F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public TooltipEntry CurrentEntry
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x1D7B384", Offset = "0x1D7B384", VA = "0x1D7B384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x1D7AC8C", Offset = "0x1D7AC8C", VA = "0x1D7AC8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1D7B2DC", Offset = "0x1D7B2DC", VA = "0x1D7B2DC")]
		static TooltipGroup()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1D7B3B4", Offset = "0x1D7B3B4", VA = "0x1D7B3B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1D7B4DC", Offset = "0x1D7B4DC", VA = "0x1D7B4DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1D7B5EC", Offset = "0x1D7B5EC", VA = "0x1D7B5EC")]
		public TooltipGroup()
		{
		}
	}
}
namespace BlueprintReality.MiniJSON
{
	[Token(Token = "0x20003F3")]
	public static class Json
	{
		[Token(Token = "0x20006FA")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x2000845")]
			private enum TOKEN
			{
				[Token(Token = "0x40032F8")]
				NONE,
				[Token(Token = "0x40032F9")]
				CURLY_OPEN,
				[Token(Token = "0x40032FA")]
				CURLY_CLOSE,
				[Token(Token = "0x40032FB")]
				SQUARED_OPEN,
				[Token(Token = "0x40032FC")]
				SQUARED_CLOSE,
				[Token(Token = "0x40032FD")]
				COLON,
				[Token(Token = "0x40032FE")]
				COMMA,
				[Token(Token = "0x40032FF")]
				STRING,
				[Token(Token = "0x4003300")]
				NUMBER,
				[Token(Token = "0x4003301")]
				TRUE,
				[Token(Token = "0x4003302")]
				FALSE,
				[Token(Token = "0x4003303")]
				NULL
			}

			[Token(Token = "0x4002D54")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAA4")]
			private StringReader json;

			[Token(Token = "0x1700055C")]
			private char PeekChar
			{
				[Token(Token = "0x6002F9E")]
				[Address(RVA = "0x1D71910", Offset = "0x1D71910", VA = "0x1D71910")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700055D")]
			private char NextChar
			{
				[Token(Token = "0x6002F9F")]
				[Address(RVA = "0x1D714B8", Offset = "0x1D714B8", VA = "0x1D714B8")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700055E")]
			private string NextWord
			{
				[Token(Token = "0x6002FA0")]
				[Address(RVA = "0x1D715D8", Offset = "0x1D715D8", VA = "0x1D715D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055F")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6002FA1")]
				[Address(RVA = "0x1D6FF58", Offset = "0x1D6FF58", VA = "0x1D6FF58")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6002F93")]
			[Address(RVA = "0x1D6F984", Offset = "0x1D6F984", VA = "0x1D6F984")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F94")]
			[Address(RVA = "0x1D6FB50", Offset = "0x1D6FB50", VA = "0x1D6FB50")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x1D6F5C8", Offset = "0x1D6F5C8", VA = "0x1D6F5C8")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6002F96")]
			[Address(RVA = "0x1D6FC6C", Offset = "0x1D6FC6C", VA = "0x1D6FC6C", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x1D6FCC8", Offset = "0x1D6FCC8", VA = "0x1D6FCC8")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6002F98")]
			[Address(RVA = "0x1D70DD0", Offset = "0x1D70DD0", VA = "0x1D70DD0")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x1D6FC08", Offset = "0x1D6FC08", VA = "0x1D6FC08")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x1D70FF8", Offset = "0x1D70FF8", VA = "0x1D70FF8")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0x1D70670", Offset = "0x1D70670", VA = "0x1D70670")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0x1D7129C", Offset = "0x1D7129C", VA = "0x1D7129C")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0x1D71774", Offset = "0x1D71774", VA = "0x1D71774")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20006FB")]
		private sealed class Serializer
		{
			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private StringBuilder builder;

			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0x1D71A30", Offset = "0x1D71A30", VA = "0x1D71A30")]
			private Serializer()
			{
			}

			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0x1D6F890", Offset = "0x1D6F890", VA = "0x1D6F890")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0x1D71AD8", Offset = "0x1D71AD8", VA = "0x1D71AD8")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0x1D7286C", Offset = "0x1D7286C", VA = "0x1D7286C")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0x1D7247C", Offset = "0x1D7247C", VA = "0x1D7247C")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0x1D71E74", Offset = "0x1D71E74", VA = "0x1D71E74")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0x1D72D4C", Offset = "0x1D72D4C", VA = "0x1D72D4C")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1D6F548", Offset = "0x1D6F548", VA = "0x1D6F548")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x1D6F850", Offset = "0x1D6F850", VA = "0x1D6F850")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace BlueprintReality.Text
{
	[Token(Token = "0x20003F4")]
	public static class Localization
	{
		[Token(Token = "0x400198B")]
		public const string CSV_RES_PATH = "BPR_Localization";

		[Token(Token = "0x400198C")]
		public const string DEFAULT_LANG = "english";

		[Token(Token = "0x400198D")]
		public const string NOT_FOUND_STR_FORMAT = "#{0}#";

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE74")]
		private static string curLanguage;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Dictionary<string, string>> languageTable;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string checkedLanguage;

		[Token(Token = "0x17000387")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x1D7322C", Offset = "0x1D7322C", VA = "0x1D7322C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x1D73B44", Offset = "0x1D73B44", VA = "0x1D73B44")]
			set
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event Action LanguageChanged
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x1D73D10", Offset = "0x1D73D10", VA = "0x1D73D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23334", Offset = "0xC23334")]
			add
			{
			}
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x1D73F3C", Offset = "0x1D73F3C", VA = "0x1D73F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23370", Offset = "0xC23370")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1D74168", Offset = "0x1D74168", VA = "0x1D74168")]
		public static List<string> GetSupportedLanguages()
		{
			return null;
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1D743CC", Offset = "0x1D743CC", VA = "0x1D743CC")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1D74660", Offset = "0x1D74660", VA = "0x1D74660")]
		private static void ParseLocalizationData(string text)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1D75508", Offset = "0x1D75508", VA = "0x1D75508")]
		private static bool ParseLine(string line, out string key, out List<string> vals)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1D75E38", Offset = "0x1D75E38", VA = "0x1D75E38")]
		public static string Get(string key)
		{
			return null;
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1D76050", Offset = "0x1D76050", VA = "0x1D76050")]
		public static string Get(string lang, string key)
		{
			return null;
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1D76398", Offset = "0x1D76398", VA = "0x1D76398")]
		public static Dictionary<string, string> GetAllLanguageTextFromKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1D7345C", Offset = "0x1D7345C", VA = "0x1D7345C")]
		private static string GetCheckedLanguage(string language)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDDDD0", Offset = "0xBDDDD0")]
	public class SetTextFromLocalization : MonoBehaviour
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ED1")]
		public string id;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool toUpper;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE7C")]
		public bool useNewlines;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool autoLocalize;

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1D76A08", Offset = "0x1D76A08", VA = "0x1D76A08")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1D76B3C", Offset = "0x1D76B3C", VA = "0x1D76B3C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1D6DE50", Offset = "0x1D6DE50", VA = "0x1D6DE50")]
		public void RefreshText()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1D76C64", Offset = "0x1D76C64", VA = "0x1D76C64")]
		public SetTextFromLocalization()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x20003F6")]
	public class BezierPoint : MonoBehaviour
	{
		[Token(Token = "0x20006FC")]
		public enum HandleMode
		{
			[Token(Token = "0x4002D58")]
			Free,
			[Token(Token = "0x4002D59")]
			Aligned,
			[Token(Token = "0x4002D5A")]
			Mirrored
		}

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_position;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ED9")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE84")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x17000388")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x1D5D970", Offset = "0x1D5D970", VA = "0x1D5D970")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x1D5D9D0", Offset = "0x1D5D9D0", VA = "0x1D5D9D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public Vector3 position
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x1D5DA50", Offset = "0x1D5DA50", VA = "0x1D5DA50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x1D5DC8C", Offset = "0x1D5DC8C", VA = "0x1D5DC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x1D5DD0C", Offset = "0x1D5DD0C", VA = "0x1D5DD0C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x1D5DD74", Offset = "0x1D5DD74", VA = "0x1D5DD74")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x1D5DECC", Offset = "0x1D5DECC", VA = "0x1D5DECC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x1D5DF34", Offset = "0x1D5DF34", VA = "0x1D5DF34")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x1D5E08C", Offset = "0x1D5E08C", VA = "0x1D5E08C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x1D5E0EC", Offset = "0x1D5E0EC", VA = "0x1D5E0EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x1D5E16C", Offset = "0x1D5E16C", VA = "0x1D5E16C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x1D5E1CC", Offset = "0x1D5E1CC", VA = "0x1D5E1CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public Vector3 localScale
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x1D5E24C", Offset = "0x1D5E24C", VA = "0x1D5E24C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x1D5E2AC", Offset = "0x1D5E2AC", VA = "0x1D5E2AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x1D5E32C", Offset = "0x1D5E32C", VA = "0x1D5E32C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x1D5D090", Offset = "0x1D5D090", VA = "0x1D5D090")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x1D5E36C", Offset = "0x1D5E36C", VA = "0x1D5E36C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1D5E3FC", Offset = "0x1D5E3FC", VA = "0x1D5E3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1D5EAAC", Offset = "0x1D5EAAC", VA = "0x1D5EAAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1D5D4E8", Offset = "0x1D5D4E8", VA = "0x1D5D4E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1D5EAEC", Offset = "0x1D5EAEC", VA = "0x1D5EAEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1D5EB7C", Offset = "0x1D5EB7C", VA = "0x1D5EB7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public HandleMode handleMode
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x1D5F22C", Offset = "0x1D5F22C", VA = "0x1D5F22C")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x1D5F25C", Offset = "0x1D5F25C", VA = "0x1D5F25C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1D5F31C", Offset = "0x1D5F31C", VA = "0x1D5F31C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1D5F378", Offset = "0x1D5F378", VA = "0x1D5F378")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1D5DAE0", Offset = "0x1D5DAE0", VA = "0x1D5DAE0")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x1D5F5E0", Offset = "0x1D5F5E0", VA = "0x1D5F5E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1D5F824", Offset = "0x1D5F824", VA = "0x1D5F824")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBDDE80", Offset = "0xBDDE80")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE8C")]
		private static Material gizmoMaterial;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color gizmoColor;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float gizmoStep;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<BezierPoint> endPoints;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EE9")]
		public bool loop;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool drawGizmos;

		[Token(Token = "0x17000394")]
		public int Count
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x1D5F94C", Offset = "0x1D5F94C", VA = "0x1D5F94C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000395")]
		public float Length
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x1D5F9E4", Offset = "0x1D5F9E4", VA = "0x1D5F9E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000396")]
		public BezierPoint Item
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x1D5FEA4", Offset = "0x1D5FEA4", VA = "0x1D5FEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1D601C4", Offset = "0x1D601C4", VA = "0x1D601C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1D602B0", Offset = "0x1D602B0", VA = "0x1D602B0")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1D601F4", Offset = "0x1D601F4", VA = "0x1D601F4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x1D6066C", Offset = "0x1D6066C", VA = "0x1D6066C")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1D60E60", Offset = "0x1D60E60", VA = "0x1D60E60")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1D612AC", Offset = "0x1D612AC", VA = "0x1D612AC")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1D61800", Offset = "0x1D61800", VA = "0x1D61800")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1D61E10", Offset = "0x1D61E10", VA = "0x1D61E10")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1D61EB8", Offset = "0x1D61EB8", VA = "0x1D61EB8")]
		public void DrawGizmos(Color color, int smoothness = 4)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1D6214C", Offset = "0x1D6214C", VA = "0x1D6214C")]
		public void HideGizmos()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1D6217C", Offset = "0x1D6217C", VA = "0x1D6217C")]
		public Vector3 GetPoint(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1D62950", Offset = "0x1D62950", VA = "0x1D62950")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1D5FA30", Offset = "0x1D5FA30", VA = "0x1D5FA30")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1D6367C", Offset = "0x1D6367C", VA = "0x1D6367C")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1D63714", Offset = "0x1D63714", VA = "0x1D63714")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1D63A64", Offset = "0x1D63A64", VA = "0x1D63A64")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1D63CA0", Offset = "0x1D63CA0", VA = "0x1D63CA0")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1D64458", Offset = "0x1D64458", VA = "0x1D64458")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x1D6615C", Offset = "0x1D6615C", VA = "0x1D6615C")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1D66824", Offset = "0x1D66824", VA = "0x1D66824")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1D63510", Offset = "0x1D63510", VA = "0x1D63510")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1D6797C", Offset = "0x1D6797C", VA = "0x1D6797C")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1D68058", Offset = "0x1D68058", VA = "0x1D68058")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class BezierWalkerWithSpeed : MonoBehaviour
	{
		[Token(Token = "0x20006FD")]
		public enum TravelMode
		{
			[Token(Token = "0x4002D5C")]
			Once,
			[Token(Token = "0x4002D5D")]
			Loop,
			[Token(Token = "0x4002D5E")]
			PingPong
		}

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE94")]
		private Transform cachedTransform;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BezierSpline spline;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TravelMode travelMode;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EF1")]
		private float progress;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00750", Offset = "0xC00750")]
		public float relaxationAtEndPoints;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FE9C")]
		public float rotationLerpModifier;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lookForward;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isGoingForward;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EF9")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x17000397")]
		public float NormalizedT
		{
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x1D68134", Offset = "0x1D68134", VA = "0x1D68134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x1D68164", Offset = "0x1D68164", VA = "0x1D68164")]
			set
			{
			}
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1D6819C", Offset = "0x1D6819C", VA = "0x1D6819C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1D681DC", Offset = "0x1D681DC", VA = "0x1D681DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1D68B90", Offset = "0x1D68B90", VA = "0x1D68B90")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class BezierWalkerWithTime : MonoBehaviour
	{
		[Token(Token = "0x20006FE")]
		public enum TravelMode
		{
			[Token(Token = "0x4002D60")]
			Once,
			[Token(Token = "0x4002D61")]
			Loop,
			[Token(Token = "0x4002D62")]
			PingPong
		}

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F01")]
		private Transform cachedTransform;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public BezierSpline spline;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FEAC")]
		public TravelMode travelMode;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float travelTime;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float progress;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float movementLerpModifier;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F09")]
		public float rotationLerpModifier;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool lookForward;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAAC")]
		private bool isGoingForward;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x17000398")]
		public float NormalizedT
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x1D68CA8", Offset = "0x1D68CA8", VA = "0x1D68CA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x1D68CD8", Offset = "0x1D68CD8", VA = "0x1D68CD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1D68D10", Offset = "0x1D68D10", VA = "0x1D68D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1D68D50", Offset = "0x1D68D50", VA = "0x1D68D50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x1D69608", Offset = "0x1D69608", VA = "0x1D69608")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x20006FF")]
		public enum FollowMode
		{
			[Token(Token = "0x4002D64")]
			Relaxed,
			[Token(Token = "0x4002D65")]
			Strict
		}

		[Token(Token = "0x40019BA")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BezierSpline spline;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F18")]
		public FollowMode followMode;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Transform cachedTransform;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FEBC")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector4> particleData;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1D69710", Offset = "0x1D69710", VA = "0x1D69710")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1D698F8", Offset = "0x1D698F8", VA = "0x1D698F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1D6A82C", Offset = "0x1D6A82C", VA = "0x1D6A82C")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace BeautifyEffect
{
	[Token(Token = "0x20003FB")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1D59250", Offset = "0x1D59250", VA = "0x1D59250")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x1D592F8", Offset = "0x1D592F8", VA = "0x1D592F8")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float deltaTime;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool benchmarkEnabled;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GUIStyle style;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F28")]
		private Rect rect;

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1D59328", Offset = "0x1D59328", VA = "0x1D59328")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1D59630", Offset = "0x1D59630", VA = "0x1D59630")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x1D597B4", Offset = "0x1D597B4", VA = "0x1D597B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x1D59BB8", Offset = "0x1D59BB8", VA = "0x1D59BB8")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int demoMode;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x1D59BE8", Offset = "0x1D59BE8", VA = "0x1D59BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1D5A60C", Offset = "0x1D5A60C", VA = "0x1D5A60C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x1D59C18", Offset = "0x1D59C18", VA = "0x1D59C18")]
		private void UpdateDemoMode()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x1D5A764", Offset = "0x1D5A764", VA = "0x1D5A764")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class Demo4 : MonoBehaviour
	{
		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x1D5A794", Offset = "0x1D5A794", VA = "0x1D5A794")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x1D5A9C4", Offset = "0x1D5A9C4", VA = "0x1D5A9C4")]
		public Demo4()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FECC")]
		public float cameraSensitivity;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float climbSpeed;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float normalMoveSpeed;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float slowMoveFactor;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F30")]
		public float fastMoveFactor;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float rotationX;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FED4")]
		private float rotationY;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x1D5A9F4", Offset = "0x1D5A9F4", VA = "0x1D5A9F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1D5AA8C", Offset = "0x1D5AA8C", VA = "0x1D5AA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x1D5C324", Offset = "0x1D5C324", VA = "0x1D5C324")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class SphereAnimator : MonoBehaviour
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rigidbody rb;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x1D5C820", Offset = "0x1D5C820", VA = "0x1D5C820")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1D5C8AC", Offset = "0x1D5C8AC", VA = "0x1D5C8AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1D5CB98", Offset = "0x1D5CB98", VA = "0x1D5CB98")]
		public SphereAnimator()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public delegate float OnBeforeFocusEvent(float currentFocusDistance);
	[Token(Token = "0x2000402")]
	public enum BEAUTIFY_QUALITY
	{
		[Token(Token = "0x40019D1")]
		BestQuality,
		[Token(Token = "0x40019D2")]
		BestPerformance,
		[Token(Token = "0x40019D3")]
		Basic
	}
	[Token(Token = "0x2000403")]
	public enum BEAUTIFY_PRESET
	{
		[Token(Token = "0x40019D5")]
		Soft = 10,
		[Token(Token = "0x40019D6")]
		Medium = 20,
		[Token(Token = "0x40019D7")]
		Strong = 30,
		[Token(Token = "0x40019D8")]
		Exaggerated = 40,
		[Token(Token = "0x40019D9")]
		Custom = 999
	}
	[Token(Token = "0x2000404")]
	public enum BEAUTIFY_TMO
	{
		[Token(Token = "0x40019DB")]
		Linear = 0,
		[Token(Token = "0x40019DC")]
		ACES = 10
	}
	[Token(Token = "0x2000405")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDDF3C", Offset = "0xBDDF3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDDF3C", Offset = "0xBDDF3C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xBDDF3C", Offset = "0xBDDF3C")]
	[ImageEffectAllowedInSceneView]
	public class Beautify : MonoBehaviour
	{
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1158", Offset = "0xBE1158")]
		private sealed class <DoBlink>d__712 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5065")]
			private object <>2__current;

			[Token(Token = "0x4002D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float duration;

			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CACC")]
			public Beautify <>4__this;

			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float maxValue;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <start>5__2;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <t>5__3;

			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x506C")]
			private WaitForEndOfFrame <w>5__4;

			[Token(Token = "0x17000560")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FAC")]
				[Address(RVA = "0x1D53ADC", Offset = "0x1D53ADC", VA = "0x1D53ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000561")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FAE")]
				[Address(RVA = "0x1D53BAC", Offset = "0x1D53BAC", VA = "0x1D53BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0x1D534E0", Offset = "0x1D534E0", VA = "0x1D534E0")]
			[DebuggerHidden]
			public <DoBlink>d__712(int <>1__state)
			{
			}

			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x1D53528", Offset = "0x1D53528", VA = "0x1D53528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x1D5353C", Offset = "0x1D5353C", VA = "0x1D5353C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x1D53B0C", Offset = "0x1D53B0C", VA = "0x1D53B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F48")]
		[SerializeField]
		private BEAUTIFY_PRESET _preset;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private BEAUTIFY_QUALITY _quality;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FEEC")]
		[SerializeField]
		private BeautifyProfile _profile;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _compareMode;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0088C", Offset = "0xC0088C")]
		private float _compareLineAngle;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00910", Offset = "0xC00910")]
		private float _compareLineWidth;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00994", Offset = "0xC00994")]
		private float _dither;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00A10", Offset = "0xC00A10")]
		private float _ditherDepth;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FEF4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00A88", Offset = "0xC00A88")]
		private float _sharpenMinDepth;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00B00", Offset = "0xC00B00")]
		private float _sharpenMaxDepth;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00B7C", Offset = "0xC00B7C")]
		private float _sharpen;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00BF4", Offset = "0xC00BF4")]
		private float _sharpenDepthThreshold;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F58")]
		[SerializeField]
		private Color _tintColor;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00CAC", Offset = "0xC00CAC")]
		private float _sharpenRelaxation;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FEFC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00D28", Offset = "0xC00D28")]
		private float _sharpenClamp;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00DA0", Offset = "0xC00DA0")]
		private float _sharpenMotionSensibility;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00E18", Offset = "0xC00E18")]
		private float _saturate;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00E94", Offset = "0xC00E94")]
		private float _contrast;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F60")]
		[SerializeField]
		private float _brightness;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC00F4C", Offset = "0xC00F4C")]
		private float _daltonize;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAB4")]
		[SerializeField]
		private bool _vignetting;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _vignettingColor;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0103C", Offset = "0xC0103C")]
		private float _vignettingFade;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _vignettingCircularShape;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F67")]
		[SerializeField]
		private float _vignettingAspectRatio;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0112C", Offset = "0xC0112C")]
		private float _vignettingBlink;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF04")]
		[SerializeField]
		private Texture2D _vignettingMask;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _frame;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _frameColor;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _frameMask;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F6F")]
		[SerializeField]
		private bool _lut;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC012D0", Offset = "0xC012D0")]
		private float _lutIntensity;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF0C")]
		[SerializeField]
		private Texture2D _lutTexture;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _nightVision;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _nightVisionColor;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _outline;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F77")]
		[SerializeField]
		private Color _outlineColor;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _thermalVision;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF14")]
		[SerializeField]
		private bool _lensDirt;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC014EC", Offset = "0xC014EC")]
		private float _lensDirtThreshold;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01564", Offset = "0xC01564")]
		private float _lensDirtIntensity;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _lensDirtTexture;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F7F")]
		[SerializeField]
		private bool _bloom;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private LayerMask _bloomCullingMask;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01690", Offset = "0xC01690")]
		private float _bloomLayerMaskDownsampling;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0170C", Offset = "0xC0170C")]
		private float _bloomIntensity;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _bloomMaxBrightness;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC017C0", Offset = "0xC017C0")]
		private float _bloomBoost0;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F87")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01838", Offset = "0xC01838")]
		private float _bloomBoost1;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC018B0", Offset = "0xC018B0")]
		private float _bloomBoost2;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01928", Offset = "0xC01928")]
		private float _bloomBoost3;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC019A0", Offset = "0xC019A0")]
		private float _bloomBoost4;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01A18", Offset = "0xC01A18")]
		private float _bloomBoost5;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _bloomAntiflicker;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8F")]
		[SerializeField]
		private bool _bloomUltra;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01B08", Offset = "0xC01B08")]
		private float _bloomThreshold;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF2C")]
		[SerializeField]
		private bool _bloomCustomize;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _bloomDebug;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01BF8", Offset = "0xC01BF8")]
		private float _bloomWeight0;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01C70", Offset = "0xC01C70")]
		private float _bloomWeight1;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F97")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01CE8", Offset = "0xC01CE8")]
		private float _bloomWeight2;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01D60", Offset = "0xC01D60")]
		private float _bloomWeight3;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01DD8", Offset = "0xC01DD8")]
		private float _bloomWeight4;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01E50", Offset = "0xC01E50")]
		private float _bloomWeight5;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _bloomBlur;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01F04", Offset = "0xC01F04")]
		private float _bloomDepthAtten;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F9F")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC01F7C", Offset = "0xC01F7C")]
		private float _bloomLayerZBias;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _anamorphicFlares;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02034", Offset = "0xC02034")]
		private float _anamorphicFlaresIntensity;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _anamorphicFlaresUltra;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02124", Offset = "0xC02124")]
		private float _anamorphicFlaresThreshold;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FA7")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0219C", Offset = "0xC0219C")]
		private float _anamorphicFlaresSpread;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _anamorphicFlaresVertical;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF44")]
		[SerializeField]
		private Color _anamorphicFlaresTint;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _anamorphicFlaresBlur;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _depthOfField;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _depthOfFieldTransparencySupport;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FAF")]
		[SerializeField]
		private LayerMask _depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Transform _depthOfFieldTargetFocus;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF4C")]
		[SerializeField]
		private bool _depthOfFieldDebug;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _depthOfFieldAutofocus;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector2 _depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FB7")]
		[SerializeField]
		private float _depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private LayerMask _depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CABC")]
		[SerializeField]
		private LayerMask _depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02564", Offset = "0xC02564")]
		private float _depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC025E0", Offset = "0xC025E0")]
		private float _depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0265C", Offset = "0xC0265C")]
		private float _depthOfFieldExclusionBias;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FBE")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC026DC", Offset = "0xC026DC")]
		private float _depthOfFieldDistance;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02758", Offset = "0xC02758")]
		private float _depthOfFieldFocusSpeed;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC027D8", Offset = "0xC027D8")]
		private int _depthOfFieldDownsampling;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02854", Offset = "0xC02854")]
		private int _depthOfFieldMaxSamples;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC028D0", Offset = "0xC028D0")]
		private float _depthOfFieldFocalLength;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _depthOfFieldAperture;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FC6")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlur;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF5C")]
		[SerializeField]
		private float _depthOfFieldForegroundDistance;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _depthOfFieldBokeh;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02A7C", Offset = "0xC02A7C")]
		private float _depthOfFieldBokehThreshold;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02AF8", Offset = "0xC02AF8")]
		private float _depthOfFieldBokehIntensity;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FCE")]
		[SerializeField]
		private float _depthOfFieldMaxBrightness;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02BAC", Offset = "0xC02BAC")]
		private float _depthOfFieldMaxDistance;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF64")]
		[SerializeField]
		private FilterMode _depthOfFieldFilterMode;

		[NonSerialized]
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnBeforeFocusEvent OnBeforeFocus;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _eyeAdaptation;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02C9C", Offset = "0xC02C9C")]
		private float _eyeAdaptationMinExposure;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FD6")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02D14", Offset = "0xC02D14")]
		private float _eyeAdaptationMaxExposure;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02D90", Offset = "0xC02D90")]
		private float _eyeAdaptationSpeedToLight;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02E08", Offset = "0xC02E08")]
		private float _eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _purkinje;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02EBC", Offset = "0xC02EBC")]
		private float _purkinjeAmount;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC02F34", Offset = "0xC02F34")]
		private float _purkinjeLuminanceThreshold;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FDE")]
		[SerializeField]
		private BEAUTIFY_TMO _tonemap;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _sunFlares;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF74")]
		[SerializeField]
		private Transform _sun;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LayerMask _sunFlaresLayerMask;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0309C", Offset = "0xC0309C")]
		private float _sunFlaresIntensity;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03114", Offset = "0xC03114")]
		private float _sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FE6")]
		[SerializeField]
		private Color _sunFlaresTint;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC031C8", Offset = "0xC031C8")]
		private int _sunFlaresDownsampling;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03244", Offset = "0xC03244")]
		private float _sunFlaresSunIntensity;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC032BC", Offset = "0xC032BC")]
		private float _sunFlaresSunDiskSize;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03334", Offset = "0xC03334")]
		private float _sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC033AC", Offset = "0xC033AC")]
		private float _sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FEE")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03424", Offset = "0xC03424")]
		private float _sunFlaresCoronaRays1Length;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC034A0", Offset = "0xC034A0")]
		private int _sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0351C", Offset = "0xC0351C")]
		private float _sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03598", Offset = "0xC03598")]
		private float _sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03614", Offset = "0xC03614")]
		private float _sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03690", Offset = "0xC03690")]
		private int _sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FF6")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0370C", Offset = "0xC0370C")]
		private float _sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03788", Offset = "0xC03788")]
		private float _sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03804", Offset = "0xC03804")]
		private float _sunFlaresGhosts1Size;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0387C", Offset = "0xC0387C")]
		private float _sunFlaresGhosts1Offset;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC038F8", Offset = "0xC038F8")]
		private float _sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03970", Offset = "0xC03970")]
		private float _sunFlaresGhosts2Size;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FFE")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC039E8", Offset = "0xC039E8")]
		private float _sunFlaresGhosts2Offset;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03A64", Offset = "0xC03A64")]
		private float _sunFlaresGhosts2Brightness;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03ADC", Offset = "0xC03ADC")]
		private float _sunFlaresGhosts3Size;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03B54", Offset = "0xC03B54")]
		private float _sunFlaresGhosts3Brightness;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03BD0", Offset = "0xC03BD0")]
		private float _sunFlaresGhosts3Offset;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03C48", Offset = "0xC03C48")]
		private float _sunFlaresGhosts4Size;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5006")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03CC0", Offset = "0xC03CC0")]
		private float _sunFlaresGhosts4Offset;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03D3C", Offset = "0xC03D3C")]
		private float _sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FF9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03DB4", Offset = "0xC03DB4")]
		private float _sunFlaresHaloOffset;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03E2C", Offset = "0xC03E2C")]
		private float _sunFlaresHaloAmplitude;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03EA4", Offset = "0xC03EA4")]
		private float _sunFlaresHaloIntensity;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _sunFlaresRotationDeadZone;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500E")]
		[SerializeField]
		private bool _blur;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC03F94", Offset = "0xC03F94")]
		private float _blurIntensity;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0400C", Offset = "0xC0400C")]
		private int _pixelateAmount;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _pixelateDownscale;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC040C4", Offset = "0xC040C4")]
		private float _antialiasStrength;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0413C", Offset = "0xC0413C")]
		private float _antialiasDepthThreshold;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5015")]
		public bool isDirty;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Beautify _beautify;

		[Token(Token = "0x4001A7B")]
		public const string SKW_BLOOM = "BEAUTIFY_BLOOM";

		[Token(Token = "0x4001A7C")]
		public const string SKW_LUT = "BEAUTIFY_LUT";

		[Token(Token = "0x4001A7D")]
		public const string SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";

		[Token(Token = "0x4001A7E")]
		public const string SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";

		[Token(Token = "0x4001A7F")]
		public const string SKW_OUTLINE = "BEAUTIFY_OUTLINE";

		[Token(Token = "0x4001A80")]
		public const string SKW_FRAME = "BEAUTIFY_FRAME";

		[Token(Token = "0x4001A81")]
		public const string SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";

		[Token(Token = "0x4001A82")]
		public const string SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";

		[Token(Token = "0x4001A83")]
		public const string SKW_DIRT = "BEAUTIFY_DIRT";

		[Token(Token = "0x4001A84")]
		public const string SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";

		[Token(Token = "0x4001A85")]
		public const string SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";

		[Token(Token = "0x4001A86")]
		public const string SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";

		[Token(Token = "0x4001A87")]
		public const string SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";

		[Token(Token = "0x4001A88")]
		public const string SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";

		[Token(Token = "0x4001A89")]
		public const string SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";

		[Token(Token = "0x4001A8A")]
		public const string SKW_PURKINJE = "BEAUTIFY_PURKINJE";

		[Token(Token = "0x4001A8B")]
		public const string SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";

		[Token(Token = "0x4001A8C")]
		public const string SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFBC")]
		private Material bMatDesktop;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material bMatMobile;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material bMatBasic;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material bMat;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5035")]
		private Camera currentCamera;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 camPrevForward;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFC4")]
		private Vector3 camPrevPos;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currSens;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int renderPass;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x503D")]
		private RenderTexture[] rt;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTexture[] rtAF;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFCC")]
		private RenderTexture[] rtEA;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture rtEAacum;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture rtEAHist;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float dofPrevDistance;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5045")]
		private float dofLastAutofocusDistance;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector4 dofLastBokehData;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFD4")]
		private Camera sceneCamera;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera depthCam;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject depthCamObj;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x504D")]
		private Shader depthShader;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Shader dofExclusionShader;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFDC")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4001AA6")]
		private const string BEAUTIFY_BUILD_HINT = "BeautifyBuildHint702b2";

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunFlareCurrentIntensity;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector4 sunLastScrPos;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5055")]
		private float sunLastRot;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Texture2D flareNoise;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFE4")]
		private RenderTexture dofDepthTexture;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture dofExclusionTexture;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture bloomSourceTexture;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture bloomSourceDepthTexture;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x505D")]
		private RenderTexture pixelateTexture;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTextureDescriptor rtDescBase;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFEC")]
		private float sunFlareTime;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int dofCurrentLayerMaskValue;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int bloomCurrentLayerMaskValue;

		[Token(Token = "0x17000399")]
		public BEAUTIFY_PRESET preset
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1DED214", Offset = "0x1DED214", VA = "0x1DED214")]
			get
			{
				return default(BEAUTIFY_PRESET);
			}
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x1DED244", Offset = "0x1DED244", VA = "0x1DED244")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public BEAUTIFY_QUALITY quality
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1DED328", Offset = "0x1DED328", VA = "0x1DED328")]
			get
			{
				return default(BEAUTIFY_QUALITY);
			}
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x1DED358", Offset = "0x1DED358", VA = "0x1DED358")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public BeautifyProfile profile
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1DED4F0", Offset = "0x1DED4F0", VA = "0x1DED4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x1DED520", Offset = "0x1DED520", VA = "0x1DED520")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public bool compareMode
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1DED72C", Offset = "0x1DED72C", VA = "0x1DED72C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1DED770", Offset = "0x1DED770", VA = "0x1DED770")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public float compareLineAngle
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1DED820", Offset = "0x1DED820", VA = "0x1DED820")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1DED850", Offset = "0x1DED850", VA = "0x1DED850")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public float compareLineWidth
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1DED8D4", Offset = "0x1DED8D4", VA = "0x1DED8D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1DED904", Offset = "0x1DED904", VA = "0x1DED904")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public float dither
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1DED988", Offset = "0x1DED988", VA = "0x1DED988")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x1DED9B8", Offset = "0x1DED9B8", VA = "0x1DED9B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public float ditherDepth
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x1DEDA48", Offset = "0x1DEDA48", VA = "0x1DEDA48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x1DEDA78", Offset = "0x1DEDA78", VA = "0x1DEDA78")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public float sharpenMinDepth
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x1DEDB08", Offset = "0x1DEDB08", VA = "0x1DEDB08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x1DEDB38", Offset = "0x1DEDB38", VA = "0x1DEDB38")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public float sharpenMaxDepth
		{
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x1DEDBBC", Offset = "0x1DEDBBC", VA = "0x1DEDBBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1DEDBEC", Offset = "0x1DEDBEC", VA = "0x1DEDBEC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public float sharpen
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1DEDC70", Offset = "0x1DEDC70", VA = "0x1DEDC70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1DEDCA0", Offset = "0x1DEDCA0", VA = "0x1DEDCA0")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public float sharpenDepthThreshold
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x1DEDD30", Offset = "0x1DEDD30", VA = "0x1DEDD30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x1DEDD60", Offset = "0x1DEDD60", VA = "0x1DEDD60")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public Color tintColor
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x1DEDDF0", Offset = "0x1DEDDF0", VA = "0x1DEDDF0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x1DEDE38", Offset = "0x1DEDE38", VA = "0x1DEDE38")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public float sharpenRelaxation
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x1DEDF14", Offset = "0x1DEDF14", VA = "0x1DEDF14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x1DEDF44", Offset = "0x1DEDF44", VA = "0x1DEDF44")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public float sharpenClamp
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x1DEDFD4", Offset = "0x1DEDFD4", VA = "0x1DEDFD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x1DEE004", Offset = "0x1DEE004", VA = "0x1DEE004")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public float sharpenMotionSensibility
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x1DEE094", Offset = "0x1DEE094", VA = "0x1DEE094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x1DEE0C4", Offset = "0x1DEE0C4", VA = "0x1DEE0C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public float saturate
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x1DEE148", Offset = "0x1DEE148", VA = "0x1DEE148")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x1DEE178", Offset = "0x1DEE178", VA = "0x1DEE178")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public float contrast
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x1DEE208", Offset = "0x1DEE208", VA = "0x1DEE208")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1DEE238", Offset = "0x1DEE238", VA = "0x1DEE238")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public float brightness
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1DEE2C8", Offset = "0x1DEE2C8", VA = "0x1DEE2C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1DEE2F8", Offset = "0x1DEE2F8", VA = "0x1DEE2F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public float daltonize
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x1DEE388", Offset = "0x1DEE388", VA = "0x1DEE388")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1DEE3B8", Offset = "0x1DEE3B8", VA = "0x1DEE3B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public bool vignetting
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x1DEE448", Offset = "0x1DEE448", VA = "0x1DEE448")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x1DEE48C", Offset = "0x1DEE48C", VA = "0x1DEE48C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public Color vignettingColor
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x1DEE53C", Offset = "0x1DEE53C", VA = "0x1DEE53C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x1DEE584", Offset = "0x1DEE584", VA = "0x1DEE584")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public float vignettingFade
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x1DEE660", Offset = "0x1DEE660", VA = "0x1DEE660")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x1DEE690", Offset = "0x1DEE690", VA = "0x1DEE690")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public bool vignettingCircularShape
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x1DEE714", Offset = "0x1DEE714", VA = "0x1DEE714")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x1DEE758", Offset = "0x1DEE758", VA = "0x1DEE758")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public float vignettingAspectRatio
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x1DEE808", Offset = "0x1DEE808", VA = "0x1DEE808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x1DEE838", Offset = "0x1DEE838", VA = "0x1DEE838")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public float vignettingBlink
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1DEE8BC", Offset = "0x1DEE8BC", VA = "0x1DEE8BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1DEE8EC", Offset = "0x1DEE8EC", VA = "0x1DEE8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public Texture2D vignettingMask
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x1DEE970", Offset = "0x1DEE970", VA = "0x1DEE970")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x1DEE9A0", Offset = "0x1DEE9A0", VA = "0x1DEE9A0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public bool frame
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x1DEEADC", Offset = "0x1DEEADC", VA = "0x1DEEADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x1DEEB20", Offset = "0x1DEEB20", VA = "0x1DEEB20")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public Color frameColor
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x1DEEBD0", Offset = "0x1DEEBD0", VA = "0x1DEEBD0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x1DEEC18", Offset = "0x1DEEC18", VA = "0x1DEEC18")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public Texture2D frameMask
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x1DEECF4", Offset = "0x1DEECF4", VA = "0x1DEECF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x1DEED24", Offset = "0x1DEED24", VA = "0x1DEED24")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public bool lut
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1DEEE60", Offset = "0x1DEEE60", VA = "0x1DEEE60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x1DEEEA4", Offset = "0x1DEEEA4", VA = "0x1DEEEA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public float lutIntensity
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1DEEF98", Offset = "0x1DEEF98", VA = "0x1DEEF98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1DEEFC8", Offset = "0x1DEEFC8", VA = "0x1DEEFC8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public Texture2D lutTexture
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1DEF04C", Offset = "0x1DEF04C", VA = "0x1DEF04C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x1DEF07C", Offset = "0x1DEF07C", VA = "0x1DEF07C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public bool nightVision
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1DEF1B8", Offset = "0x1DEF1B8", VA = "0x1DEF1B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x1DEF1FC", Offset = "0x1DEF1FC", VA = "0x1DEF1FC")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public Color nightVisionColor
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x1DEF428", Offset = "0x1DEF428", VA = "0x1DEF428")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x1DEF470", Offset = "0x1DEF470", VA = "0x1DEF470")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public bool outline
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x1DEF54C", Offset = "0x1DEF54C", VA = "0x1DEF54C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x1DEF590", Offset = "0x1DEF590", VA = "0x1DEF590")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public Color outlineColor
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x1DEF640", Offset = "0x1DEF640", VA = "0x1DEF640")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x1DEF688", Offset = "0x1DEF688", VA = "0x1DEF688")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public bool thermalVision
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x1DEF764", Offset = "0x1DEF764", VA = "0x1DEF764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x1DEF7A8", Offset = "0x1DEF7A8", VA = "0x1DEF7A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool lensDirt
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1DEF9F0", Offset = "0x1DEF9F0", VA = "0x1DEF9F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x1DEFA34", Offset = "0x1DEFA34", VA = "0x1DEFA34")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public float lensDirtThreshold
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1DEFAE4", Offset = "0x1DEFAE4", VA = "0x1DEFAE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x1DEFB14", Offset = "0x1DEFB14", VA = "0x1DEFB14")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public float lensDirtIntensity
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x1DEFB98", Offset = "0x1DEFB98", VA = "0x1DEFB98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x1DEFBC8", Offset = "0x1DEFBC8", VA = "0x1DEFBC8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Texture2D lensDirtTexture
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x1DEFC4C", Offset = "0x1DEFC4C", VA = "0x1DEFC4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x1DEFC7C", Offset = "0x1DEFC7C", VA = "0x1DEFC7C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public bool bloom
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x1DEFDB8", Offset = "0x1DEFDB8", VA = "0x1DEFDB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x1DEFDFC", Offset = "0x1DEFDFC", VA = "0x1DEFDFC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public LayerMask bloomCullingMask
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x1DEFEAC", Offset = "0x1DEFEAC", VA = "0x1DEFEAC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x1DEFEF4", Offset = "0x1DEFEF4", VA = "0x1DEFEF4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public float bloomLayerMaskDownsampling
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x1DF0054", Offset = "0x1DF0054", VA = "0x1DF0054")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x1DF0084", Offset = "0x1DF0084", VA = "0x1DF0084")]
			set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		public float bloomIntensity
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x1DF01E0", Offset = "0x1DF01E0", VA = "0x1DF01E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0x1DF0210", Offset = "0x1DF0210", VA = "0x1DF0210")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public float bloomMaxBrightness
		{
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x1DF0310", Offset = "0x1DF0310", VA = "0x1DF0310")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x1DF0340", Offset = "0x1DF0340", VA = "0x1DF0340")]
			set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public float bloomBoost0
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x1DF0440", Offset = "0x1DF0440", VA = "0x1DF0440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x1DF0470", Offset = "0x1DF0470", VA = "0x1DF0470")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public float bloomBoost1
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x1DF04F4", Offset = "0x1DF04F4", VA = "0x1DF04F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x1DF0524", Offset = "0x1DF0524", VA = "0x1DF0524")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public float bloomBoost2
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x1DF05A8", Offset = "0x1DF05A8", VA = "0x1DF05A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x1DF05D8", Offset = "0x1DF05D8", VA = "0x1DF05D8")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public float bloomBoost3
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x1DF065C", Offset = "0x1DF065C", VA = "0x1DF065C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x1DF068C", Offset = "0x1DF068C", VA = "0x1DF068C")]
			set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public float bloomBoost4
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x1DF0710", Offset = "0x1DF0710", VA = "0x1DF0710")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x1DF0740", Offset = "0x1DF0740", VA = "0x1DF0740")]
			set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public float bloomBoost5
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x1DF07C4", Offset = "0x1DF07C4", VA = "0x1DF07C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x1DF07F4", Offset = "0x1DF07F4", VA = "0x1DF07F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		public bool bloomAntiflicker
		{
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x1DF0878", Offset = "0x1DF0878", VA = "0x1DF0878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x1DF08BC", Offset = "0x1DF08BC", VA = "0x1DF08BC")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public bool bloomUltra
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x1DF096C", Offset = "0x1DF096C", VA = "0x1DF096C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x1DF09B0", Offset = "0x1DF09B0", VA = "0x1DF09B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x1DF0A60", Offset = "0x1DF0A60", VA = "0x1DF0A60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x1DF0A90", Offset = "0x1DF0A90", VA = "0x1DF0A90")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public bool bloomCustomize
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1DF0B14", Offset = "0x1DF0B14", VA = "0x1DF0B14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x1DF0B58", Offset = "0x1DF0B58", VA = "0x1DF0B58")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public bool bloomDebug
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1DF0C08", Offset = "0x1DF0C08", VA = "0x1DF0C08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x1DF0C4C", Offset = "0x1DF0C4C", VA = "0x1DF0C4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		public float bloomWeight0
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x1DF0CFC", Offset = "0x1DF0CFC", VA = "0x1DF0CFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1DF0D2C", Offset = "0x1DF0D2C", VA = "0x1DF0D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public float bloomWeight1
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x1DF0DB0", Offset = "0x1DF0DB0", VA = "0x1DF0DB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x1DF0DE0", Offset = "0x1DF0DE0", VA = "0x1DF0DE0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public float bloomWeight2
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x1DF0E64", Offset = "0x1DF0E64", VA = "0x1DF0E64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x1DF0E94", Offset = "0x1DF0E94", VA = "0x1DF0E94")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public float bloomWeight3
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x1DF0F18", Offset = "0x1DF0F18", VA = "0x1DF0F18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x1DF0F48", Offset = "0x1DF0F48", VA = "0x1DF0F48")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public float bloomWeight4
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x1DF0FCC", Offset = "0x1DF0FCC", VA = "0x1DF0FCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x1DF0FFC", Offset = "0x1DF0FFC", VA = "0x1DF0FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public float bloomWeight5
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x1DF1080", Offset = "0x1DF1080", VA = "0x1DF1080")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x1DF10B0", Offset = "0x1DF10B0", VA = "0x1DF10B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public bool bloomBlur
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x1DF1134", Offset = "0x1DF1134", VA = "0x1DF1134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x1DF1178", Offset = "0x1DF1178", VA = "0x1DF1178")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public float bloomDepthAtten
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x1DF1228", Offset = "0x1DF1228", VA = "0x1DF1228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x1DF1258", Offset = "0x1DF1258", VA = "0x1DF1258")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public float bloomLayerZBias
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x1DF12DC", Offset = "0x1DF12DC", VA = "0x1DF12DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1DF130C", Offset = "0x1DF130C", VA = "0x1DF130C")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public bool anamorphicFlares
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x1DF1470", Offset = "0x1DF1470", VA = "0x1DF1470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x1DF14B4", Offset = "0x1DF14B4", VA = "0x1DF14B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		public float anamorphicFlaresIntensity
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x1DF1564", Offset = "0x1DF1564", VA = "0x1DF1564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x1DF1594", Offset = "0x1DF1594", VA = "0x1DF1594")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public bool anamorphicFlaresAntiflicker
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1DF1694", Offset = "0x1DF1694", VA = "0x1DF1694")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x1DF16D8", Offset = "0x1DF16D8", VA = "0x1DF16D8")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public bool anamorphicFlaresUltra
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x1DF1788", Offset = "0x1DF1788", VA = "0x1DF1788")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x1DF17CC", Offset = "0x1DF17CC", VA = "0x1DF17CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public float anamorphicFlaresThreshold
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x1DF187C", Offset = "0x1DF187C", VA = "0x1DF187C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x1DF18AC", Offset = "0x1DF18AC", VA = "0x1DF18AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public float anamorphicFlaresSpread
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x1DF1930", Offset = "0x1DF1930", VA = "0x1DF1930")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x1DF1960", Offset = "0x1DF1960", VA = "0x1DF1960")]
			set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public bool anamorphicFlaresVertical
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x1DF19E4", Offset = "0x1DF19E4", VA = "0x1DF19E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x1DF1A28", Offset = "0x1DF1A28", VA = "0x1DF1A28")]
			set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public Color anamorphicFlaresTint
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x1DF1AD8", Offset = "0x1DF1AD8", VA = "0x1DF1AD8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x1DF1B20", Offset = "0x1DF1B20", VA = "0x1DF1B20")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public bool anamorphicFlaresBlur
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x1DF1BFC", Offset = "0x1DF1BFC", VA = "0x1DF1BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x1DF1C40", Offset = "0x1DF1C40", VA = "0x1DF1C40")]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public bool depthOfField
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x1DF1CF0", Offset = "0x1DF1CF0", VA = "0x1DF1CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x1DF1D34", Offset = "0x1DF1D34", VA = "0x1DF1D34")]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public bool depthOfFieldTransparencySupport
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x1DF1DE4", Offset = "0x1DF1DE4", VA = "0x1DF1DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x1DF1E28", Offset = "0x1DF1E28", VA = "0x1DF1E28")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public LayerMask depthOfFieldTransparencyLayerMask
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x1DF1ED8", Offset = "0x1DF1ED8", VA = "0x1DF1ED8")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x1DF1F20", Offset = "0x1DF1F20", VA = "0x1DF1F20")]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public Transform depthOfFieldTargetFocus
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x1DF2080", Offset = "0x1DF2080", VA = "0x1DF2080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1DF20B0", Offset = "0x1DF20B0", VA = "0x1DF20B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public bool depthOfFieldDebug
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x1DF21EC", Offset = "0x1DF21EC", VA = "0x1DF21EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x1DF2230", Offset = "0x1DF2230", VA = "0x1DF2230")]
			set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public bool depthOfFieldAutofocus
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x1DF22E0", Offset = "0x1DF22E0", VA = "0x1DF22E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x1DF2324", Offset = "0x1DF2324", VA = "0x1DF2324")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public Vector2 depthofFieldAutofocusViewportPoint
		{
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x1DF23D4", Offset = "0x1DF23D4", VA = "0x1DF23D4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1DF240C", Offset = "0x1DF240C", VA = "0x1DF240C")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public float depthOfFieldAutofocusMinDistance
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x1DF2540", Offset = "0x1DF2540", VA = "0x1DF2540")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x1DF2570", Offset = "0x1DF2570", VA = "0x1DF2570")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public float depthOfFieldAutofocusMaxDistance
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x1DF25F4", Offset = "0x1DF25F4", VA = "0x1DF25F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0x1DF2624", Offset = "0x1DF2624", VA = "0x1DF2624")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public LayerMask depthOfFieldAutofocusLayerMask
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x1DF26A8", Offset = "0x1DF26A8", VA = "0x1DF26A8")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0x1DF26F0", Offset = "0x1DF26F0", VA = "0x1DF26F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public LayerMask depthOfFieldExclusionLayerMask
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x1DF2850", Offset = "0x1DF2850", VA = "0x1DF2850")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x1DF2898", Offset = "0x1DF2898", VA = "0x1DF2898")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public float depthOfFieldExclusionLayerMaskDownsampling
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x1DF29F8", Offset = "0x1DF29F8", VA = "0x1DF29F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x1DF2A28", Offset = "0x1DF2A28", VA = "0x1DF2A28")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public float depthOfFieldTransparencySupportDownsampling
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x1DF2B84", Offset = "0x1DF2B84", VA = "0x1DF2B84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x1DF2BB4", Offset = "0x1DF2BB4", VA = "0x1DF2BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public float depthOfFieldExclusionBias
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x1DF2D10", Offset = "0x1DF2D10", VA = "0x1DF2D10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x1DF2D40", Offset = "0x1DF2D40", VA = "0x1DF2D40")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public float depthOfFieldDistance
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x1DF2E88", Offset = "0x1DF2E88", VA = "0x1DF2E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x1DF2EB8", Offset = "0x1DF2EB8", VA = "0x1DF2EB8")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public float depthOfFieldFocusSpeed
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1DF3014", Offset = "0x1DF3014", VA = "0x1DF3014")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x1DF3044", Offset = "0x1DF3044", VA = "0x1DF3044")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public int depthOfFieldDownsampling
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x1DF31AC", Offset = "0x1DF31AC", VA = "0x1DF31AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1DF31DC", Offset = "0x1DF31DC", VA = "0x1DF31DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public int depthOfFieldMaxSamples
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x1DF3320", Offset = "0x1DF3320", VA = "0x1DF3320")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x1DF3350", Offset = "0x1DF3350", VA = "0x1DF3350")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public float depthOfFieldFocalLength
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x1DF3494", Offset = "0x1DF3494", VA = "0x1DF3494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x1DF34C4", Offset = "0x1DF34C4", VA = "0x1DF34C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public float depthOfFieldAperture
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x1DF35C4", Offset = "0x1DF35C4", VA = "0x1DF35C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x1DF35F4", Offset = "0x1DF35F4", VA = "0x1DF35F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public bool depthOfFieldForegroundBlur
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x1DF36F4", Offset = "0x1DF36F4", VA = "0x1DF36F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x1DF3738", Offset = "0x1DF3738", VA = "0x1DF3738")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public bool depthOfFieldForegroundBlurHQ
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x1DF37E8", Offset = "0x1DF37E8", VA = "0x1DF37E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x1DF382C", Offset = "0x1DF382C", VA = "0x1DF382C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public float depthOfFieldForegroundDistance
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x1DF38DC", Offset = "0x1DF38DC", VA = "0x1DF38DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x1DF390C", Offset = "0x1DF390C", VA = "0x1DF390C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public bool depthOfFieldBokeh
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x1DF3990", Offset = "0x1DF3990", VA = "0x1DF3990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x1DF39D4", Offset = "0x1DF39D4", VA = "0x1DF39D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public float depthOfFieldBokehThreshold
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x1DF3A84", Offset = "0x1DF3A84", VA = "0x1DF3A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x1DF3AB4", Offset = "0x1DF3AB4", VA = "0x1DF3AB4")]
			set
			{
			}
		}

		[Token(Token = "0x170003FE")]
		public float depthOfFieldBokehIntensity
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x1DF3C00", Offset = "0x1DF3C00", VA = "0x1DF3C00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x1DF3C30", Offset = "0x1DF3C30", VA = "0x1DF3C30")]
			set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		public float depthOfFieldMaxBrightness
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x1DF3D7C", Offset = "0x1DF3D7C", VA = "0x1DF3D7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x1DF3DAC", Offset = "0x1DF3DAC", VA = "0x1DF3DAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public float depthOfFieldMaxDistance
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x1DF3EAC", Offset = "0x1DF3EAC", VA = "0x1DF3EAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x1DF3EDC", Offset = "0x1DF3EDC", VA = "0x1DF3EDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public FilterMode depthOfFieldFilterMode
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x1DF3FDC", Offset = "0x1DF3FDC", VA = "0x1DF3FDC")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x1DF400C", Offset = "0x1DF400C", VA = "0x1DF400C")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public bool eyeAdaptation
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x1DF4088", Offset = "0x1DF4088", VA = "0x1DF4088")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x1DF40CC", Offset = "0x1DF40CC", VA = "0x1DF40CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public float eyeAdaptationMinExposure
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x1DF417C", Offset = "0x1DF417C", VA = "0x1DF417C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x1DF41AC", Offset = "0x1DF41AC", VA = "0x1DF41AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public float eyeAdaptationMaxExposure
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x1DF42F4", Offset = "0x1DF42F4", VA = "0x1DF42F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x1DF4324", Offset = "0x1DF4324", VA = "0x1DF4324")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public float eyeAdaptationSpeedToLight
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x1DF4488", Offset = "0x1DF4488", VA = "0x1DF4488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x1DF44B8", Offset = "0x1DF44B8", VA = "0x1DF44B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public float eyeAdaptationSpeedToDark
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x1DF4600", Offset = "0x1DF4600", VA = "0x1DF4600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x1DF4630", Offset = "0x1DF4630", VA = "0x1DF4630")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public bool purkinje
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x1DF4778", Offset = "0x1DF4778", VA = "0x1DF4778")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x1DF47BC", Offset = "0x1DF47BC", VA = "0x1DF47BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public float purkinjeAmount
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x1DF486C", Offset = "0x1DF486C", VA = "0x1DF486C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x1DF489C", Offset = "0x1DF489C", VA = "0x1DF489C")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public float purkinjeLuminanceThreshold
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x1DF49FC", Offset = "0x1DF49FC", VA = "0x1DF49FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x1DF4A2C", Offset = "0x1DF4A2C", VA = "0x1DF4A2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public BEAUTIFY_TMO tonemap
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x1DF4B90", Offset = "0x1DF4B90", VA = "0x1DF4B90")]
			get
			{
				return default(BEAUTIFY_TMO);
			}
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x1DF4BC0", Offset = "0x1DF4BC0", VA = "0x1DF4BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public bool sunFlares
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x1DF4C90", Offset = "0x1DF4C90", VA = "0x1DF4C90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x1DF4CD4", Offset = "0x1DF4CD4", VA = "0x1DF4CD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public Transform sun
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x1DF4D84", Offset = "0x1DF4D84", VA = "0x1DF4D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x1DF4DB4", Offset = "0x1DF4DB4", VA = "0x1DF4DB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public LayerMask sunFlaresLayerMask
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x1DF4EF0", Offset = "0x1DF4EF0", VA = "0x1DF4EF0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x1DF4F38", Offset = "0x1DF4F38", VA = "0x1DF4F38")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public float sunFlaresIntensity
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x1DF5098", Offset = "0x1DF5098", VA = "0x1DF5098")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x1DF50C8", Offset = "0x1DF50C8", VA = "0x1DF50C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public float sunFlaresSolarWindSpeed
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x1DF514C", Offset = "0x1DF514C", VA = "0x1DF514C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x1DF517C", Offset = "0x1DF517C", VA = "0x1DF517C")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public Color sunFlaresTint
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x1DF5200", Offset = "0x1DF5200", VA = "0x1DF5200")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x1DF5248", Offset = "0x1DF5248", VA = "0x1DF5248")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public int sunFlaresDownsampling
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1DF5324", Offset = "0x1DF5324", VA = "0x1DF5324")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x1DF5354", Offset = "0x1DF5354", VA = "0x1DF5354")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public float sunFlaresSunIntensity
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x1DF5498", Offset = "0x1DF5498", VA = "0x1DF5498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x1DF54C8", Offset = "0x1DF54C8", VA = "0x1DF54C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public float sunFlaresSunDiskSize
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x1DF554C", Offset = "0x1DF554C", VA = "0x1DF554C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x1DF557C", Offset = "0x1DF557C", VA = "0x1DF557C")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public float sunFlaresSunRayDiffractionIntensity
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x1DF5600", Offset = "0x1DF5600", VA = "0x1DF5600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x1DF5630", Offset = "0x1DF5630", VA = "0x1DF5630")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public float sunFlaresSunRayDiffractionThreshold
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x1DF56B4", Offset = "0x1DF56B4", VA = "0x1DF56B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x1DF56E4", Offset = "0x1DF56E4", VA = "0x1DF56E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public float sunFlaresCoronaRays1Length
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x1DF5768", Offset = "0x1DF5768", VA = "0x1DF5768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x1DF5798", Offset = "0x1DF5798", VA = "0x1DF5798")]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public int sunFlaresCoronaRays1Streaks
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x1DF581C", Offset = "0x1DF581C", VA = "0x1DF581C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x1DF584C", Offset = "0x1DF584C", VA = "0x1DF584C")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public float sunFlaresCoronaRays1Spread
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x1DF58C8", Offset = "0x1DF58C8", VA = "0x1DF58C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x1DF58F8", Offset = "0x1DF58F8", VA = "0x1DF58F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public float sunFlaresCoronaRays1AngleOffset
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x1DF597C", Offset = "0x1DF597C", VA = "0x1DF597C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0x1DF59AC", Offset = "0x1DF59AC", VA = "0x1DF59AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public float sunFlaresCoronaRays2Length
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x1DF5A30", Offset = "0x1DF5A30", VA = "0x1DF5A30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x1DF5A60", Offset = "0x1DF5A60", VA = "0x1DF5A60")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public int sunFlaresCoronaRays2Streaks
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x1DF5AE4", Offset = "0x1DF5AE4", VA = "0x1DF5AE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1DF5B14", Offset = "0x1DF5B14", VA = "0x1DF5B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public float sunFlaresCoronaRays2Spread
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x1DF5B90", Offset = "0x1DF5B90", VA = "0x1DF5B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x1DF5BC0", Offset = "0x1DF5BC0", VA = "0x1DF5BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public float sunFlaresCoronaRays2AngleOffset
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x1DF5C44", Offset = "0x1DF5C44", VA = "0x1DF5C44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x1DF5C74", Offset = "0x1DF5C74", VA = "0x1DF5C74")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public float sunFlaresGhosts1Size
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x1DF5CF8", Offset = "0x1DF5CF8", VA = "0x1DF5CF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x1DF5D28", Offset = "0x1DF5D28", VA = "0x1DF5D28")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public float sunFlaresGhosts1Offset
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x1DF5DAC", Offset = "0x1DF5DAC", VA = "0x1DF5DAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x1DF5DDC", Offset = "0x1DF5DDC", VA = "0x1DF5DDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public float sunFlaresGhosts1Brightness
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x1DF5E60", Offset = "0x1DF5E60", VA = "0x1DF5E60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1DF5E90", Offset = "0x1DF5E90", VA = "0x1DF5E90")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public float sunFlaresGhosts2Size
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x1DF5F14", Offset = "0x1DF5F14", VA = "0x1DF5F14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x1DF5F44", Offset = "0x1DF5F44", VA = "0x1DF5F44")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public float sunFlaresGhosts2Offset
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x1DF5FC8", Offset = "0x1DF5FC8", VA = "0x1DF5FC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x1DF5FF8", Offset = "0x1DF5FF8", VA = "0x1DF5FF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public float sunFlaresGhosts2Brightness
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x1DF607C", Offset = "0x1DF607C", VA = "0x1DF607C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x1DF60AC", Offset = "0x1DF60AC", VA = "0x1DF60AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public float sunFlaresGhosts3Size
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x1DF6130", Offset = "0x1DF6130", VA = "0x1DF6130")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x1DF6160", Offset = "0x1DF6160", VA = "0x1DF6160")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public float sunFlaresGhosts3Brightness
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x1DF61E4", Offset = "0x1DF61E4", VA = "0x1DF61E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x1DF6214", Offset = "0x1DF6214", VA = "0x1DF6214")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public float sunFlaresGhosts3Offset
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x1DF6298", Offset = "0x1DF6298", VA = "0x1DF6298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x1DF62C8", Offset = "0x1DF62C8", VA = "0x1DF62C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public float sunFlaresGhosts4Size
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x1DF634C", Offset = "0x1DF634C", VA = "0x1DF634C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x1DF637C", Offset = "0x1DF637C", VA = "0x1DF637C")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public float sunFlaresGhosts4Offset
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x1DF6400", Offset = "0x1DF6400", VA = "0x1DF6400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x1DF6430", Offset = "0x1DF6430", VA = "0x1DF6430")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public float sunFlaresGhosts4Brightness
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x1DF64B4", Offset = "0x1DF64B4", VA = "0x1DF64B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x1DF64E4", Offset = "0x1DF64E4", VA = "0x1DF64E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public float sunFlaresHaloOffset
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x1DF6568", Offset = "0x1DF6568", VA = "0x1DF6568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x1DF6598", Offset = "0x1DF6598", VA = "0x1DF6598")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public float sunFlaresHaloAmplitude
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x1DF661C", Offset = "0x1DF661C", VA = "0x1DF661C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x1DF664C", Offset = "0x1DF664C", VA = "0x1DF664C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public float sunFlaresHaloIntensity
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x1DF66D0", Offset = "0x1DF66D0", VA = "0x1DF66D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x1DF6700", Offset = "0x1DF6700", VA = "0x1DF6700")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public bool sunFlaresRotationDeadZone
		{
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x1DF6784", Offset = "0x1DF6784", VA = "0x1DF6784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x1DF67C8", Offset = "0x1DF67C8", VA = "0x1DF67C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public bool blur
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x1DF6878", Offset = "0x1DF6878", VA = "0x1DF6878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x1DF68BC", Offset = "0x1DF68BC", VA = "0x1DF68BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public float blurIntensity
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x1DF696C", Offset = "0x1DF696C", VA = "0x1DF696C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x1DF699C", Offset = "0x1DF699C", VA = "0x1DF699C")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public int pixelateAmount
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x1DF6A20", Offset = "0x1DF6A20", VA = "0x1DF6A20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x1DF6A50", Offset = "0x1DF6A50", VA = "0x1DF6A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public bool pixelateDownscale
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x1DF6ACC", Offset = "0x1DF6ACC", VA = "0x1DF6ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x1DF6B10", Offset = "0x1DF6B10", VA = "0x1DF6B10")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public float antialiasStrength
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x1DF6BC0", Offset = "0x1DF6BC0", VA = "0x1DF6BC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x1DF6BF0", Offset = "0x1DF6BF0", VA = "0x1DF6BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public float antialiasDepthThreshold
		{
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x1DF6C74", Offset = "0x1DF6C74", VA = "0x1DF6C74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1DF6CA4", Offset = "0x1DF6CA4", VA = "0x1DF6CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public static Beautify instance
		{
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1DF6D28", Offset = "0x1DF6D28", VA = "0x1DF6D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		public Camera cameraEffect
		{
			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x1DF7008", Offset = "0x1DF7008", VA = "0x1DF7008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public float depthOfFieldCurrentFocalPointDistance
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x1E07D28", Offset = "0x1E07D28", VA = "0x1E07D28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1DF7038", Offset = "0x1DF7038", VA = "0x1DF7038")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1DFAD64", Offset = "0x1DFAD64", VA = "0x1DFAD64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1DFB864", Offset = "0x1DFB864", VA = "0x1DFB864")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1DFB894", Offset = "0x1DFB894", VA = "0x1DFB894")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1DFC124", Offset = "0x1DFC124", VA = "0x1DFC124")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1DFE430", Offset = "0x1DFE430", VA = "0x1DFE430")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1DFB420", Offset = "0x1DFB420", VA = "0x1DFB420")]
		private void CleanUpRT()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1DFC5FC", Offset = "0x1DFC5FC", VA = "0x1DFC5FC")]
		private void CheckDoFTransparencySupport()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1DFCFD4", Offset = "0x1DFCFD4", VA = "0x1DFCFD4")]
		private void CheckDoFExclusionMask()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x1DFD9A4", Offset = "0x1DFD9A4", VA = "0x1DFD9A4")]
		private void CheckBloomCullingLayer()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1DFE7F8", Offset = "0x1DFE7F8", VA = "0x1DFE7F8", Slot = "4")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1E07424", Offset = "0x1E07424", VA = "0x1E07424")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1E068C8", Offset = "0x1E068C8", VA = "0x1E068C8")]
		private void BlurThis(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1E06B30", Offset = "0x1E06B30", VA = "0x1E06B30")]
		private void BlurThisDownscaling(RenderTexture rt, RenderTexture downscaled, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1E07144", Offset = "0x1E07144", VA = "0x1E07144")]
		private RenderTexture BlurThisOneDirection(RenderTexture rt, bool vertical, float blurScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1E060B4", Offset = "0x1E060B4", VA = "0x1E060B4")]
		private void BlurThisDoF(RenderTexture rt, int renderPass)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1E05E4C", Offset = "0x1E05E4C", VA = "0x1E05E4C")]
		private void BlurThisAlpha(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1E07848", Offset = "0x1E07848", VA = "0x1E07848")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1DED3E0", Offset = "0x1DED3E0", VA = "0x1DED3E0")]
		public void UpdateQualitySettings()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1DED2C0", Offset = "0x1DED2C0", VA = "0x1DED2C0")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1DF7200", Offset = "0x1DF7200", VA = "0x1DF7200")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x1E065D8", Offset = "0x1E065D8", VA = "0x1E065D8")]
		private void UpdateMaterialBloomIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1E06EFC", Offset = "0x1E06EFC", VA = "0x1E06EFC")]
		private void UpdateMaterialAnamorphicIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1DFBF7C", Offset = "0x1DFBF7C", VA = "0x1DFBF7C")]
		private void UpdateSharpenParams(float sharpen)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1E05494", Offset = "0x1E05494", VA = "0x1E05494")]
		private void UpdateDepthOfFieldData()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1E07684", Offset = "0x1E07684", VA = "0x1E07684")]
		private void UpdateDepthOfFieldBlurData(Vector2 blurDir)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1E07878", Offset = "0x1E07878", VA = "0x1E07878")]
		private void UpdateDoFAutofocusDistance()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1E07B8C", Offset = "0x1E07B8C", VA = "0x1E07B8C")]
		public void Blink(float duration, float maxValue = 1f)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1E07C1C", Offset = "0x1E07C1C", VA = "0x1E07C1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC233AC", Offset = "0xC233AC")]
		private IEnumerator DoBlink(float duration, float maxValue)
		{
			return null;
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1E07D58", Offset = "0x1E07D58", VA = "0x1E07D58")]
		public Beautify()
		{
		}
	}
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBDE0B4", Offset = "0xBDE0B4")]
	public class BeautifyProfile : ScriptableObject
	{
		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC041F4", Offset = "0xC041F4")]
		public float dither;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04240", Offset = "0xC04240")]
		public float ditherDepth;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04288", Offset = "0xC04288")]
		public float sharpenMinDepth;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC042D0", Offset = "0xC042D0")]
		public float sharpenMaxDepth;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0431C", Offset = "0xC0431C")]
		public float sharpen;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5074")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04364", Offset = "0xC04364")]
		public float sharpenDepthThreshold;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color tintColor;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4FFFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC043B0", Offset = "0xC043B0")]
		public float sharpenRelaxation;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC043FC", Offset = "0xC043FC")]
		public float sharpenClamp;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04444", Offset = "0xC04444")]
		public float sharpenMotionSensibility;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0448C", Offset = "0xC0448C")]
		public float antialiasStrength;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x507C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC044D4", Offset = "0xC044D4")]
		public float antialiasDepthThreshold;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04520", Offset = "0xC04520")]
		public float saturate;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50004")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0456C", Offset = "0xC0456C")]
		public float contrast;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC045B8", Offset = "0xC045B8")]
		public float brightness;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04600", Offset = "0xC04600")]
		public float daltonize;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool vignetting;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5084")]
		public Color vignettingColor;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float vignettingFade;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5000C")]
		public bool vignettingCircularShape;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float vignettingAspectRatio;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04648", Offset = "0xC04648")]
		public float vignettingBlink;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D vignettingMask;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508C")]
		public bool frame;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color frameColor;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50014")]
		public Texture2D frameMask;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lut;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04690", Offset = "0xC04690")]
		public float lutIntensity;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lutTexture;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5094")]
		public bool nightVision;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color nightVisionColor;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5001C")]
		public bool outline;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color outlineColor;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool thermalVision;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lensDirt;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x509C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC046D8", Offset = "0xC046D8")]
		public float lensDirtThreshold;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04720", Offset = "0xC04720")]
		public float lensDirtIntensity;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50024")]
		public Texture2D lensDirtTexture;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bloom;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask bloomCullingMask;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04768", Offset = "0xC04768")]
		public float bloomLayerMaskDownsampling;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC047B4", Offset = "0xC047B4")]
		public float bloomIntensity;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float bloomMaxBrightness;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5002C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC047FC", Offset = "0xC047FC")]
		public float bloomBoost0;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04844", Offset = "0xC04844")]
		public float bloomBoost1;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0488C", Offset = "0xC0488C")]
		public float bloomBoost2;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC048D4", Offset = "0xC048D4")]
		public float bloomBoost3;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0491C", Offset = "0xC0491C")]
		public float bloomBoost4;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04964", Offset = "0xC04964")]
		public float bloomBoost5;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50034")]
		public bool bloomAntiflicker;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bloomUltra;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC049AC", Offset = "0xC049AC")]
		public float bloomThreshold;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bloomCustomize;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC049F4", Offset = "0xC049F4")]
		public float bloomWeight0;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04A3C", Offset = "0xC04A3C")]
		public float bloomWeight1;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5003C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04A84", Offset = "0xC04A84")]
		public float bloomWeight2;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04ACC", Offset = "0xC04ACC")]
		public float bloomWeight3;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04B14", Offset = "0xC04B14")]
		public float bloomWeight4;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04B5C", Offset = "0xC04B5C")]
		public float bloomWeight5;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50BC")]
		public bool bloomBlur;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04BA4", Offset = "0xC04BA4")]
		public float bloomDepthAtten;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C57C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04BEC", Offset = "0xC04BEC")]
		public float bloomLayerZBias;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool anamorphicFlares;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04C38", Offset = "0xC04C38")]
		public float anamorphicFlaresIntensity;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C2")]
		public bool anamorphicFlaresUltra;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04C80", Offset = "0xC04C80")]
		public float anamorphicFlaresThreshold;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04CC8", Offset = "0xC04CC8")]
		public float anamorphicFlaresSpread;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool anamorphicFlaresVertical;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color anamorphicFlaresTint;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool anamorphicFlaresBlur;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C9")]
		public bool depthOfField;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool depthOfFieldTransparencySupport;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50044")]
		public Transform depthOfFieldTargetFocus;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool depthOfFieldAutofocus;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50D1")]
		public float depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5004C")]
		public LayerMask depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04D18", Offset = "0xC04D18")]
		public float depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04D64", Offset = "0xC04D64")]
		public float depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04DB0", Offset = "0xC04DB0")]
		public float depthOfFieldExclusionBias;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50D9")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04E00", Offset = "0xC04E00")]
		public float depthOfFieldDistance;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04E4C", Offset = "0xC04E4C")]
		public float depthOfFieldFocusSpeed;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04E9C", Offset = "0xC04E9C")]
		public int depthOfFieldDownsampling;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04EE8", Offset = "0xC04EE8")]
		public int depthOfFieldMaxSamples;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04F34", Offset = "0xC04F34")]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float depthOfFieldAperture;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50E1")]
		public bool depthOfFieldForegroundBlur;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5005C")]
		public float depthOfFieldForegroundDistance;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool depthOfFieldBokeh;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04F84", Offset = "0xC04F84")]
		public float depthOfFieldBokehThreshold;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC04FD0", Offset = "0xC04FD0")]
		public float depthOfFieldBokehIntensity;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50E9")]
		public float depthOfFieldMaxBrightness;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float depthOfFieldMaxDistance;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50064")]
		public FilterMode depthOfFieldFilterMode;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool eyeAdaptation;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05018", Offset = "0xC05018")]
		public float eyeAdaptationMinExposure;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50F1")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05060", Offset = "0xC05060")]
		public float eyeAdaptationMaxExposure;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC050AC", Offset = "0xC050AC")]
		public float eyeAdaptationSpeedToLight;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5006C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC050F4", Offset = "0xC050F4")]
		public float eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool purkinje;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0513C", Offset = "0xC0513C")]
		public float purkinjeAmount;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05184", Offset = "0xC05184")]
		public float purkinjeLuminanceThreshold;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50F9")]
		public BEAUTIFY_TMO tonemap;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool sunFlares;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50074")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC051CC", Offset = "0xC051CC")]
		public float sunFlaresIntensity;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05214", Offset = "0xC05214")]
		public float sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color sunFlaresTint;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0525C", Offset = "0xC0525C")]
		public int sunFlaresDownsampling;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5101")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC052A8", Offset = "0xC052A8")]
		public float sunFlaresSunIntensity;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC052F0", Offset = "0xC052F0")]
		public float sunFlaresSunDiskSize;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5007C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05338", Offset = "0xC05338")]
		public float sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05380", Offset = "0xC05380")]
		public float sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC053C8", Offset = "0xC053C8")]
		public float sunFlaresCoronaRays1Length;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05414", Offset = "0xC05414")]
		public int sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5109")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05460", Offset = "0xC05460")]
		public float sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC054AC", Offset = "0xC054AC")]
		public float sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50084")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC054F8", Offset = "0xC054F8")]
		public float sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05544", Offset = "0xC05544")]
		public int sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05590", Offset = "0xC05590")]
		public float sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC055DC", Offset = "0xC055DC")]
		public float sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5111")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05628", Offset = "0xC05628")]
		public float sunFlaresGhosts1Size;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05670", Offset = "0xC05670")]
		public float sunFlaresGhosts1Offset;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5008C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC056BC", Offset = "0xC056BC")]
		public float sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05704", Offset = "0xC05704")]
		public float sunFlaresGhosts2Size;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC0574C", Offset = "0xC0574C")]
		public float sunFlaresGhosts2Offset;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05798", Offset = "0xC05798")]
		public float sunFlaresGhosts2Brightness;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5119")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC057E0", Offset = "0xC057E0")]
		public float sunFlaresGhosts3Size;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05828", Offset = "0xC05828")]
		public float sunFlaresGhosts3Brightness;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CADC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05874", Offset = "0xC05874")]
		public float sunFlaresGhosts3Offset;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC058BC", Offset = "0xC058BC")]
		public float sunFlaresGhosts4Size;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05904", Offset = "0xC05904")]
		public float sunFlaresGhosts4Offset;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05950", Offset = "0xC05950")]
		public float sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05998", Offset = "0xC05998")]
		public float sunFlaresHaloOffset;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC059E0", Offset = "0xC059E0")]
		public float sunFlaresHaloAmplitude;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50094")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05A28", Offset = "0xC05A28")]
		public float sunFlaresHaloIntensity;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool sunFlaresRotationDeadZone;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool blur;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05A70", Offset = "0xC05A70")]
		public float blurIntensity;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5128")]
		public int pixelateAmount;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool pixelateDownscale;

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1D53BDC", Offset = "0x1D53BDC", VA = "0x1D53BDC")]
		public void Load(Beautify b)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1D55FA0", Offset = "0x1D55FA0", VA = "0x1D55FA0")]
		public void Save(Beautify b)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1D583B0", Offset = "0x1D583B0", VA = "0x1D583B0")]
		public BeautifyProfile()
		{
		}
	}
}
namespace BeautifulDissolves
{
	[Token(Token = "0x2000407")]
	public class Dissolve : MonoBehaviour
	{
		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5009C")]
		[SerializeField]
		protected DissolveSettings m_DissolveSettings;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent OnDissolveStart;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent OnDissolveFinish;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Material[] m_Materials;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5130")]
		protected IEnumerator m_CurrentCoroutine;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected bool m_Dissolving;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500A4")]
		private bool m_CanDissolve;

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x2A81F5C", Offset = "0x2A81F5C", VA = "0x2A81F5C", Slot = "4")]
		protected virtual Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x2A820E4", Offset = "0x2A820E4", VA = "0x2A820E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x2A82124", Offset = "0x2A82124", VA = "0x2A82124")]
		public void TriggerDissolve()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x2A82168", Offset = "0x2A82168", VA = "0x2A82168")]
		public void TriggerDissolve(DissolveSettings settings)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x2A82710", Offset = "0x2A82710", VA = "0x2A82710")]
		public void TriggerReverseDissolve()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x2A8246C", Offset = "0x2A8246C", VA = "0x2A8246C")]
		public void TriggerDissolve(bool atomic, bool disableAfterDissolve, AnimationCurve dissolveCurve, float dissolveStartPercent, float time, float speed)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x2A8282C", Offset = "0x2A8282C", VA = "0x2A8282C")]
		private void InvokeDissolveStartEvents()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x2A82A2C", Offset = "0x2A82A2C", VA = "0x2A82A2C")]
		private void InvokeDissolveEndEvents()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x2A82AA0", Offset = "0x2A82AA0", VA = "0x2A82AA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x2A82D28", Offset = "0x2A82D28", VA = "0x2A82D28")]
		public Dissolve()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x2A82D6C", Offset = "0x2A82D6C", VA = "0x2A82D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2345C", Offset = "0xC2345C")]
		private void <TriggerDissolve>b__12_0()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class DissolveGlowUpdate : MonoBehaviour
	{
		[Token(Token = "0x2000701")]
		private enum StartMode
		{
			[Token(Token = "0x4002D6F")]
			OnAwake,
			[Token(Token = "0x4002D70")]
			OnStart,
			[Token(Token = "0x4002D71")]
			ByScript
		}

		[Token(Token = "0x2000702")]
		private enum UpdateRate
		{
			[Token(Token = "0x4002D73")]
			EveryFrame,
			[Token(Token = "0x4002D74")]
			EveryNthFrame,
			[Token(Token = "0x4002D75")]
			CustomFixedTimestep
		}

		[Token(Token = "0x2000703")]
		private enum GlowSource
		{
			[Token(Token = "0x4002D77")]
			Emissive,
			[Token(Token = "0x4002D78")]
			Light
		}

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1194", Offset = "0xBE1194")]
		private sealed class <FixedGlowUpdate>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD500C4")]
			private object <>2__current;

			[Token(Token = "0x4002D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x17000562")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FB2")]
				[Address(RVA = "0x2A84B8C", Offset = "0x2A84B8C", VA = "0x2A84B8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000563")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FB4")]
				[Address(RVA = "0x2A84C5C", Offset = "0x2A84C5C", VA = "0x2A84C5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0x2A83EE4", Offset = "0x2A83EE4", VA = "0x2A83EE4")]
			[DebuggerHidden]
			public <FixedGlowUpdate>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x2A84978", Offset = "0x2A84978", VA = "0x2A84978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x2A8498C", Offset = "0x2A8498C", VA = "0x2A8498C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x2A84BBC", Offset = "0x2A84BBC", VA = "0x2A84BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE11D0", Offset = "0xBE11D0")]
		private sealed class <FrameGlowUpdate>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5158")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x4002D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <frame>5__2;

			[Token(Token = "0x17000564")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FB8")]
				[Address(RVA = "0x2A84F2C", Offset = "0x2A84F2C", VA = "0x2A84F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000565")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FBA")]
				[Address(RVA = "0x2A84FFC", Offset = "0x2A84FFC", VA = "0x2A84FFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FB5")]
			[Address(RVA = "0x2A83F2C", Offset = "0x2A83F2C", VA = "0x2A83F2C")]
			[DebuggerHidden]
			public <FrameGlowUpdate>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0x2A84C8C", Offset = "0x2A84C8C", VA = "0x2A84C8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x2A84CA0", Offset = "0x2A84CA0", VA = "0x2A84CA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x2A84F5C", Offset = "0x2A84F5C", VA = "0x2A84F5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private StartMode m_StartMode;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UpdateRate m_UpdateRate;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GlowSource m_GlowSource;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05BA8", Offset = "0xC05BA8")]
		[SerializeField]
		private float m_GlowCutoff;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int m_FrameDelay;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500AC")]
		[SerializeField]
		private float m_UpdateTimestep;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Light m_GlowLightSource;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Renderer m_Renderer;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_Material;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5140")]
		private int m_UpdateFrames;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool m_GlowUpdating;

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x2A82DB0", Offset = "0x2A82DB0", VA = "0x2A82DB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x2A83424", Offset = "0x2A83424", VA = "0x2A83424")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x2A82F4C", Offset = "0x2A82F4C", VA = "0x2A82F4C")]
		public void StartGlowUpdate()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x2A8371C", Offset = "0x2A8371C", VA = "0x2A8371C")]
		public void StopGlowUpdate()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x2A83760", Offset = "0x2A83760", VA = "0x2A83760")]
		private void GlowUpdate()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x2A835A4", Offset = "0x2A835A4", VA = "0x2A835A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23498", Offset = "0xC23498")]
		private IEnumerator FixedGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x2A83660", Offset = "0x2A83660", VA = "0x2A83660")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23548", Offset = "0xC23548")]
		private IEnumerator FrameGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x2A83874", Offset = "0x2A83874", VA = "0x2A83874")]
		private Color GetEmissiveColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x2A84284", Offset = "0x2A84284", VA = "0x2A84284")]
		public void CreateLightSource()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x2A84758", Offset = "0x2A84758", VA = "0x2A84758")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x2A848F0", Offset = "0x2A848F0", VA = "0x2A848F0")]
		public DissolveGlowUpdate()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public static class DissolveHelper
	{
		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE120C", Offset = "0xBE120C")]
		private sealed class <CurveDissolve>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD500E4")]
			private object <>2__current;

			[Token(Token = "0x4002D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float curveStartPercentage;

			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material[] mats;

			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnimationCurve dissolveCurve;

			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x517F")]
			public float time;

			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float speed;

			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD500EC")]
			public Action callback;

			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000566")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FBE")]
				[Address(RVA = "0x2A895C4", Offset = "0x2A895C4", VA = "0x2A895C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000567")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FC0")]
				[Address(RVA = "0x2A89694", Offset = "0x2A89694", VA = "0x2A89694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FBB")]
			[Address(RVA = "0x2A88978", Offset = "0x2A88978", VA = "0x2A88978")]
			[DebuggerHidden]
			public <CurveDissolve>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0x2A88F84", Offset = "0x2A88F84", VA = "0x2A88F84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FBD")]
			[Address(RVA = "0x2A88F98", Offset = "0x2A88F98", VA = "0x2A88F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FBF")]
			[Address(RVA = "0x2A895F4", Offset = "0x2A895F4", VA = "0x2A895F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500CC")]
		public static int dissolveMapID;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int tilingXID;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int tilingYID;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int directionMapID;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5160")]
		public static int dissolveMaskID;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int dissolveAmountID;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500D4")]
		public static int dissolveDelayID;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dissolveRampUpID;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int subTexID;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int outerEdgeColorID;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5168")]
		public static int innerEdgeColorID;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int edgeThicknessID;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500DC")]
		public static int edgeColorRampUseID;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int edgeColorRampID;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dissolveGlowID;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dissolveGlowColorID;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5170")]
		public static int dissolveGlowIntensityID;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int dissolveGlowFollowID;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAE4")]
		public static int emissionColorID;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string subTexKeyword;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string edgeColorRampUseKeyword;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string dissolveGlowKeyword;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5177")]
		public static string dissolveGlowFollowKeyword;

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x2A8502C", Offset = "0x2A8502C", VA = "0x2A8502C")]
		public static void SetDissolveMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x2A851E8", Offset = "0x2A851E8", VA = "0x2A851E8")]
		public static Texture GetDissolveMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x2A853B4", Offset = "0x2A853B4", VA = "0x2A853B4")]
		public static void SetDissolveMapTiling(Material mat, Vector2 tiling)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x2A8561C", Offset = "0x2A8561C", VA = "0x2A8561C")]
		public static Vector2 GetDissolveMapTiling(Material mat)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x2A85854", Offset = "0x2A85854", VA = "0x2A85854")]
		public static void SetDirectionMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x2A8596C", Offset = "0x2A8596C", VA = "0x2A8596C")]
		public static Texture GetDirectionMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x2A85A7C", Offset = "0x2A85A7C", VA = "0x2A85A7C")]
		public static void SetDissolveMask(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x2A85B94", Offset = "0x2A85B94", VA = "0x2A85B94")]
		public static Texture GetDissolveMask(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x2A85CA4", Offset = "0x2A85CA4", VA = "0x2A85CA4")]
		public static void SetDissolveAmount(Material mat, float value)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x2A83F74", Offset = "0x2A83F74", VA = "0x2A83F74")]
		public static float GetDissolveAmount(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x2A85DBC", Offset = "0x2A85DBC", VA = "0x2A85DBC")]
		public static void SetDissolveDelay(Material mat, float value)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x2A85ED4", Offset = "0x2A85ED4", VA = "0x2A85ED4")]
		public static float GetDissolveDelay(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x2A85FE4", Offset = "0x2A85FE4", VA = "0x2A85FE4")]
		public static void SetDissolveRampUp(Material mat, float value)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x2A860FC", Offset = "0x2A860FC", VA = "0x2A860FC")]
		public static float GetDissolveRampUp(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x2A8620C", Offset = "0x2A8620C", VA = "0x2A8620C")]
		public static void SetSubTex(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x2A864A0", Offset = "0x2A864A0", VA = "0x2A864A0")]
		public static Texture GetSubTex(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x2A865B0", Offset = "0x2A865B0", VA = "0x2A865B0")]
		public static void SetOuterEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x2A86978", Offset = "0x2A86978", VA = "0x2A86978")]
		public static Color GetOuterEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x2A86B38", Offset = "0x2A86B38", VA = "0x2A86B38")]
		public static void SetInnerEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x2A86D5C", Offset = "0x2A86D5C", VA = "0x2A86D5C")]
		public static Color GetInnerEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x2A86E4C", Offset = "0x2A86E4C", VA = "0x2A86E4C")]
		public static void SetEdgeThickness(Material mat, float value)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x2A86F64", Offset = "0x2A86F64", VA = "0x2A86F64")]
		public static float GetEdgeThickness(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x2A87074", Offset = "0x2A87074", VA = "0x2A87074")]
		public static void SetEdgeColorRampUse(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x2A87318", Offset = "0x2A87318", VA = "0x2A87318")]
		public static bool GetEdgeColorRampUse(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x2A8753C", Offset = "0x2A8753C", VA = "0x2A8753C")]
		public static void SetEdgeColorRamp(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x2A87654", Offset = "0x2A87654", VA = "0x2A87654")]
		public static Texture GetEdgeColorRamp(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x2A87764", Offset = "0x2A87764", VA = "0x2A87764")]
		public static void SetDissolveGlow(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x2A878D4", Offset = "0x2A878D4", VA = "0x2A878D4")]
		public static bool GetDissolveGlow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x2A879F8", Offset = "0x2A879F8", VA = "0x2A879F8")]
		public static void SetDissolveGlowColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x2A84084", Offset = "0x2A84084", VA = "0x2A84084")]
		public static Color GetDissolveGlowColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x2A87C1C", Offset = "0x2A87C1C", VA = "0x2A87C1C")]
		public static void SetDissolveGlowIntensity(Material mat, float value)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x2A84174", Offset = "0x2A84174", VA = "0x2A84174")]
		public static float GetDissolveGlowIntensity(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x2A87D34", Offset = "0x2A87D34", VA = "0x2A87D34")]
		public static void SetDissolveGlowFollow(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x2A87EA4", Offset = "0x2A87EA4", VA = "0x2A87EA4")]
		public static bool GetDissolveGlowFollow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x2A85578", Offset = "0x2A85578", VA = "0x2A85578")]
		private static void SetFloat(int propertyID, Material mat, float value)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x2A857A0", Offset = "0x2A857A0", VA = "0x2A857A0")]
		private static float GetFloat(int propertyID, Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x2A85144", Offset = "0x2A85144", VA = "0x2A85144")]
		private static void SetTexture(int propertyID, Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x2A852F8", Offset = "0x2A852F8", VA = "0x2A852F8")]
		private static Texture GetTexture(int propertyID, Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x2A867D4", Offset = "0x2A867D4", VA = "0x2A867D4")]
		private static void SetColor(int propertyID, Material mat, Color color)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x2A86A68", Offset = "0x2A86A68", VA = "0x2A86A68")]
		private static Color GetColor(int propertyID, Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x2A871E4", Offset = "0x2A871E4", VA = "0x2A871E4")]
		private static void SetBool(int propertyID, Material mat, bool value)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x2A8743C", Offset = "0x2A8743C", VA = "0x2A8743C")]
		private static bool GetBool(int propertyID, Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x2A863F8", Offset = "0x2A863F8", VA = "0x2A863F8")]
		private static void EnableKeyword(string keyword, Material mat, bool condition)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x2A87FC8", Offset = "0x2A87FC8", VA = "0x2A87FC8")]
		public static void LinearDissolve(Material mat, float from, float to, float time, Action callback)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x2A88384", Offset = "0x2A88384", VA = "0x2A88384")]
		public static void LinearDissolve(Material[] mats, float from, float to, float time, Action callback)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x2A828A0", Offset = "0x2A828A0", VA = "0x2A828A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC235F8", Offset = "0xC235F8")]
		public static IEnumerator CurveDissolve(Material[] mats, AnimationCurve dissolveCurve, float time, float curveStartPercentage, float speed, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x2A889C0", Offset = "0x2A889C0", VA = "0x2A889C0")]
		public static bool IsInLayerMask(this GameObject obj, LayerMask mask)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200040A")]
	public class DissolveOnClick : Dissolve
	{
		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x2A896C4", Offset = "0x2A896C4", VA = "0x2A896C4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x2A896F4", Offset = "0x2A896F4", VA = "0x2A896F4")]
		public DissolveOnClick()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class DissolveOnCollision : Dissolve
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x2A89724", Offset = "0x2A89724", VA = "0x2A89724")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x2A898A0", Offset = "0x2A898A0", VA = "0x2A898A0")]
		public DissolveOnCollision()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class DissolveOnCollision2D : Dissolve
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x2A8993C", Offset = "0x2A8993C", VA = "0x2A8993C")]
		private void OnCollisionEnter2D(Collision2D col)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x2A89AB8", Offset = "0x2A89AB8", VA = "0x2A89AB8")]
		public DissolveOnCollision2D()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class DissolveOnKeyPress : Dissolve
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5187")]
		public KeyCode key;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool isToggle;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500F4")]
		private bool toggle;

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x2A89B54", Offset = "0x2A89B54", VA = "0x2A89B54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x2A89C78", Offset = "0x2A89C78", VA = "0x2A89C78")]
		public DissolveOnKeyPress()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class DissolveOnSpawn : Dissolve
	{
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x2A89CA8", Offset = "0x2A89CA8", VA = "0x2A89CA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x2A89CD8", Offset = "0x2A89CD8", VA = "0x2A89CD8")]
		public DissolveOnSpawn()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class DissolveOnTrigger : Dissolve
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x2A89D08", Offset = "0x2A89D08", VA = "0x2A89D08")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x2A89E84", Offset = "0x2A89E84", VA = "0x2A89E84")]
		public DissolveOnTrigger()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class DissolveOnTrigger2D : Dissolve
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x2A89F20", Offset = "0x2A89F20", VA = "0x2A89F20")]
		private void OnTriggerEnter2D(Collider2D col)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x2A8A09C", Offset = "0x2A8A09C", VA = "0x2A8A09C")]
		public DissolveOnTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBDE1B8", Offset = "0xBDE1B8")]
	public class DissolveSettings : ScriptableObject
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Atomic;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518F")]
		public bool DisableAfterDissolve;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AnimationCurve DissolveCurve;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD500FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC05CC4", Offset = "0xC05CC4")]
		public float DissolveStartPercent;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Time;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Speed;

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x2A8A138", Offset = "0x2A8A138", VA = "0x2A8A138")]
		public DissolveSettings()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class DissolveUI : Dissolve
	{
		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x2A8A404", Offset = "0x2A8A404", VA = "0x2A8A404", Slot = "4")]
		protected override Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x2A8A784", Offset = "0x2A8A784", VA = "0x2A8A784")]
		public DissolveUI()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class DissolveSlider : MonoBehaviour
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5197")]
		[SerializeField]
		private Renderer[] m_Renderers;

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x2A8A1F4", Offset = "0x2A8A1F4", VA = "0x2A8A1F4")]
		public void UpdateDissolve()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x2A8A3D4", Offset = "0x2A8A3D4", VA = "0x2A8A3D4")]
		public DissolveSlider()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class LookAtObject : MonoBehaviour
	{
		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform target;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50104")]
		private Transform m_Transform;

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x2A8A7B4", Offset = "0x2A8A7B4", VA = "0x2A8A7B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x2A8A840", Offset = "0x2A8A840", VA = "0x2A8A840")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x2A8A898", Offset = "0x2A8A898", VA = "0x2A8A898")]
		public LookAtObject()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class RespawnManager : MonoBehaviour
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject[] zombies;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject[] zombiePrefabs;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform[] spawnPositions;

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x2A8A8C8", Offset = "0x2A8A8C8", VA = "0x2A8A8C8")]
		public void Respawn()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x2A8AD7C", Offset = "0x2A8AD7C", VA = "0x2A8AD7C")]
		public RespawnManager()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class UpdateLight : MonoBehaviour
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x519F")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Light m_Light;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5010C")]
		private float m_OriginalValue;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material m_Material;

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x2A8ADAC", Offset = "0x2A8ADAC", VA = "0x2A8ADAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x2A8AE34", Offset = "0x2A8AE34", VA = "0x2A8AE34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x2A8AFB8", Offset = "0x2A8AFB8", VA = "0x2A8AFB8")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x2A8B150", Offset = "0x2A8B150", VA = "0x2A8B150")]
		public UpdateLight()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class Zombie : MonoBehaviour
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51A7")]
		[SerializeField]
		private ParticleSystem m_DeathParticles;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Dissolve m_Dissolve;

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x2A8B180", Offset = "0x2A8B180", VA = "0x2A8B180")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x2A8B2D0", Offset = "0x2A8B2D0", VA = "0x2A8B2D0")]
		private void InvokeDissolve()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x2A8B318", Offset = "0x2A8B318", VA = "0x2A8B318")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x2A8B410", Offset = "0x2A8B410", VA = "0x2A8B410")]
		public Zombie()
		{
		}
	}
}
namespace ANT_Managed_Library
{
	[Token(Token = "0x2000418")]
	public class ANT_Channel : IANT_Channel, IDisposable
	{
		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50114")]
		private readonly ANT_Device creatingDevice;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr unmanagedANTFramerPointer;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte channelNumber;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool disposed;

		[Token(Token = "0x14000025")]
		public event dRawChannelResponseHandler rawChannelResponse
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x2AA1D94", Offset = "0x2AA1D94", VA = "0x2AA1D94", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC236E4", Offset = "0xC236E4")]
			add
			{
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x2AA1EE0", Offset = "0x2AA1EE0", VA = "0x2AA1EE0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23720", Offset = "0xC23720")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event dDeviceNotificationHandler DeviceNotification
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x2AA202C", Offset = "0x2AA202C", VA = "0x2AA202C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2375C", Offset = "0xC2375C")]
			add
			{
			}
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x2AA2178", Offset = "0x2AA2178", VA = "0x2AA2178", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23798", Offset = "0xC23798")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event dChannelResponseHandler channelResponse
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x2AA22C4", Offset = "0x2AA22C4", VA = "0x2AA22C4", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC237D4", Offset = "0xC237D4")]
			add
			{
			}
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x2AA2410", Offset = "0x2AA2410", VA = "0x2AA2410", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23810", Offset = "0xC23810")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x2AA255C", Offset = "0x2AA255C", VA = "0x2AA255C")]
		private static extern int ANT_GetChannelID(IntPtr FramerPtr, byte ucANTChannel_, ref ushort pusDeviceNumber_, ref byte pucDeviceType_, ref byte pucTransmitType_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x2AA2684", Offset = "0x2AA2684", VA = "0x2AA2684")]
		private static extern int ANT_GetChannelStatus(IntPtr FramerPtr, byte ucANTChannel_, ref byte pucStatus_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x2AA279C", Offset = "0x2AA279C", VA = "0x2AA279C")]
		private static extern int ANT_AssignChannel(IntPtr FramerPtr, byte ucANTChannel, byte ucChanType, byte ucNetNumber, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x2AA28C4", Offset = "0x2AA28C4", VA = "0x2AA28C4")]
		private static extern int ANT_AssignChannelExt(IntPtr FramerPtr, byte ucANTChannel, byte ucChanType, byte ucNetNumber, byte ucExtFlags, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x2AA29F8", Offset = "0x2AA29F8", VA = "0x2AA29F8")]
		private static extern int ANT_UnAssignChannel(IntPtr FramerPtr, byte ucANTChannel, uint ulResponseTime);

		[PreserveSig]
		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x2AA2B08", Offset = "0x2AA2B08", VA = "0x2AA2B08")]
		private static extern int ANT_SetChannelId(IntPtr FramerPtr, byte ucANTChannel, ushort usDeviceNumber, byte ucDeviceType, byte ucTransmissionType_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x2AA2C3C", Offset = "0x2AA2C3C", VA = "0x2AA2C3C")]
		private static extern int ANT_SetSerialNumChannelId_RTO(IntPtr FramerPtr, byte ucANTChannel_, byte ucDeviceType_, byte ucTransmissionType_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x2AA2D64", Offset = "0x2AA2D64", VA = "0x2AA2D64")]
		private static extern int ANT_SetChannelPeriod(IntPtr FramerPtr, byte ucANTChannel_, ushort usMesgPeriod_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x2AA2E80", Offset = "0x2AA2E80", VA = "0x2AA2E80")]
		private static extern int ANT_RSSI_SetSearchThreshold(IntPtr FramerPtr, byte ucANTChannel_, byte ucThreshold_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x2AA2F9C", Offset = "0x2AA2F9C", VA = "0x2AA2F9C")]
		private static extern int ANT_SetChannelRFFreq(IntPtr FramerPtr, byte ucANTChannel_, byte ucRFFreq_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x2AA30B8", Offset = "0x2AA30B8", VA = "0x2AA30B8")]
		private static extern int ANT_SetChannelTxPower(IntPtr FramerPtr, byte ucANTChannel_, byte ucTransmitPower_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x2AA31D4", Offset = "0x2AA31D4", VA = "0x2AA31D4")]
		private static extern int ANT_SetChannelSearchTimeout(IntPtr FramerPtr, byte ucANTChannel_, byte ucSearchTimeout_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x2AA32F0", Offset = "0x2AA32F0", VA = "0x2AA32F0")]
		private static extern int ANT_OpenChannel(IntPtr FramerPtr, byte ucANTChannel, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x2AA3400", Offset = "0x2AA3400", VA = "0x2AA3400")]
		private static extern int ANT_CloseChannel(IntPtr FramerPtr, byte ucANTChannel, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x2AA3510", Offset = "0x2AA3510", VA = "0x2AA3510")]
		private static extern int ANT_SendBroadcastData(IntPtr FramerPtr, byte ucANTChannel, byte[] pucData);

		[PreserveSig]
		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x2AA364C", Offset = "0x2AA364C", VA = "0x2AA364C")]
		private static extern byte ANT_SendAcknowledgedData(IntPtr FramerPtr, byte ucANTChannel, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x2AA3794", Offset = "0x2AA3794", VA = "0x2AA3794")]
		private static extern byte ANT_SendBurstTransfer(IntPtr FramerPtr, byte ucANTChannel_, byte[] pucData_, uint usNumBytes, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x2AA38E4", Offset = "0x2AA38E4", VA = "0x2AA38E4")]
		private static extern byte ANT_SendAdvancedBurstTransfer(IntPtr FramerPtr, byte ucANTChannel_, byte[] pucData_, uint usNumBytes, byte numStdPcktsPerSerialMsg_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x2AA3A40", Offset = "0x2AA3A40", VA = "0x2AA3A40")]
		private static extern int ANT_SendExtBroadcastData(IntPtr FramerPtr, byte ucANTChannel, ushort usDeviceNumber, byte ucDeviceType, byte ucTransmissionType_, byte[] pucData);

		[PreserveSig]
		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x2AA3BA0", Offset = "0x2AA3BA0", VA = "0x2AA3BA0")]
		private static extern byte ANT_SendExtAcknowledgedData(IntPtr FramerPtr, byte ucANTChannel, ushort usDeviceNumber, byte ucDeviceType, byte ucTransmissionType_, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x2AA3D0C", Offset = "0x2AA3D0C", VA = "0x2AA3D0C")]
		private static extern byte ANT_SendExtBurstTransfer(IntPtr FramerPtr, byte ucANTChannel_, ushort usDeviceNumber, byte ucDeviceType, byte ucTransmissionType_, byte[] pucData_, uint usNumBytes, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x2AA3E84", Offset = "0x2AA3E84", VA = "0x2AA3E84")]
		private static extern int ANT_SetLowPriorityChannelSearchTimeout(IntPtr FramerPtr, byte ucANTChannel_, byte ucSearchTimeout_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x2AA3FA0", Offset = "0x2AA3FA0", VA = "0x2AA3FA0")]
		private static extern int ANT_AddChannelID(IntPtr FramerPtr, byte ucANTChannel_, ushort usDeviceNumber_, byte ucDeviceType_, byte ucTransmissionType_, byte ucListIndex_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x2AA40E0", Offset = "0x2AA40E0", VA = "0x2AA40E0")]
		private static extern int ANT_ConfigList(IntPtr FramerPtr, byte ucANTChannel_, byte ucListSize_, byte ucExclude_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x2AA4208", Offset = "0x2AA4208", VA = "0x2AA4208")]
		private static extern int ANT_EncryptedChannelEnable(IntPtr FramerPtr, byte ucANTChannel, byte ucMode, byte ucVolatileKeyIndex, byte ucDecimationRate, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x2AA433C", Offset = "0x2AA433C", VA = "0x2AA433C")]
		private static extern int ANT_AddCryptoID(IntPtr FramerPtr, byte ucANTChannel, byte[] pucData, byte ucListIndex, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x2AA448C", Offset = "0x2AA448C", VA = "0x2AA448C")]
		private static extern int ANT_ConfigCryptoList(IntPtr FramerPtr, byte ucANTChannel, byte ucListSize, byte ucBlacklist, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x2AA45B4", Offset = "0x2AA45B4", VA = "0x2AA45B4")]
		private static extern int ANT_SetProximitySearch(IntPtr FramerPtr, byte ucANTChannel_, byte ucSearchThreshold_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x2AA46D0", Offset = "0x2AA46D0", VA = "0x2AA46D0")]
		private static extern int ANT_ConfigFrequencyAgility(IntPtr FramerPtr, byte ucANTChannel_, byte ucFreq1_, byte ucFreq2_, byte ucFreq3_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x2AA4804", Offset = "0x2AA4804", VA = "0x2AA4804")]
		private static extern int ANT_ConfigSelectiveDataUpdate(IntPtr FramerPtr, byte ucANTChannel_, byte ucSduConfig_, uint ulResponseTime_);

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x2AA4920", Offset = "0x2AA4920", VA = "0x2AA4920")]
		internal ANT_Channel(ANT_Device creatingDevice, byte ucChannelNumber)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x2AA4AF4", Offset = "0x2AA4AF4", VA = "0x2AA4AF4")]
		public ANT_Device getParentDevice()
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x2AA4B24", Offset = "0x2AA4B24", VA = "0x2AA4B24", Slot = "4")]
		public IntPtr getUnmgdFramer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x2AA4B74", Offset = "0x2AA4B74", VA = "0x2AA4B74", Slot = "5")]
		public byte getChannelNum()
		{
			return default(byte);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x2AA4BA4", Offset = "0x2AA4BA4", VA = "0x2AA4BA4")]
		internal void NotifyDeviceEvent(ANT_Device.DeviceNotificationCode notification, object notificationInfo)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x2AA4F78", Offset = "0x2AA4F78", VA = "0x2AA4F78")]
		internal void MessageReceived(ANT_Device.ANTMessage newMessage, ushort messageSize)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x2AA5C60", Offset = "0x2AA5C60", VA = "0x2AA5C60", Slot = "37")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x2AA5E08", Offset = "0x2AA5E08", VA = "0x2AA5E08", Slot = "12")]
		public ANT_ChannelStatus requestStatus(uint responseWaitTime)
		{
			return default(ANT_ChannelStatus);
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x2AA621C", Offset = "0x2AA621C", VA = "0x2AA621C", Slot = "13")]
		public ANT_ChannelID requestID(uint responseWaitTime)
		{
			return default(ANT_ChannelID);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x2AA6518", Offset = "0x2AA6518", VA = "0x2AA6518", Slot = "14")]
		public bool assignChannel(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x2AA67AC", Offset = "0x2AA67AC", VA = "0x2AA67AC")]
		public void assignChannel(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x2AA6804", Offset = "0x2AA6804", VA = "0x2AA6804", Slot = "15")]
		public bool assignChannelExt(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber, ANT_ReferenceLibrary.ChannelTypeExtended extAssignByte, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x2AA6A68", Offset = "0x2AA6A68", VA = "0x2AA6A68")]
		public void assignChannelExt(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber, ANT_ReferenceLibrary.ChannelTypeExtended extAssignByte)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x2AA6AD0", Offset = "0x2AA6AD0", VA = "0x2AA6AD0", Slot = "16")]
		public bool unassignChannel(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x2AA6C2C", Offset = "0x2AA6C2C", VA = "0x2AA6C2C")]
		public void unassignChannel()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x2AA6C64", Offset = "0x2AA6C64", VA = "0x2AA6C64", Slot = "17")]
		public bool setChannelID(ushort deviceNumber, bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x2AA6EC0", Offset = "0x2AA6EC0", VA = "0x2AA6EC0")]
		public void setChannelID(ushort deviceNumber, bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x2AA6F48", Offset = "0x2AA6F48", VA = "0x2AA6F48", Slot = "18")]
		public bool setChannelID_UsingSerial(bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID, uint waitResponseTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x2AA7190", Offset = "0x2AA7190", VA = "0x2AA7190")]
		public void setChannelID_UsingSerial(bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x2AA7224", Offset = "0x2AA7224", VA = "0x2AA7224", Slot = "19")]
		public bool setChannelPeriod(ushort messagePeriod_32768unitspersecond, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x2AA7394", Offset = "0x2AA7394", VA = "0x2AA7394")]
		public void setChannelPeriod(ushort messagePeriod_32768unitspersecond)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x2AA73DC", Offset = "0x2AA73DC", VA = "0x2AA73DC", Slot = "20")]
		public bool setSearchThresholdRSSI(byte thresholdRSSI, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x2AA754C", Offset = "0x2AA754C", VA = "0x2AA754C")]
		public void setSearchThresholdRSSI(byte thresholdRSSI)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x2AA7594", Offset = "0x2AA7594", VA = "0x2AA7594", Slot = "21")]
		public bool setChannelFreq(byte RFFreqOffset, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x2AA7704", Offset = "0x2AA7704", VA = "0x2AA7704")]
		public void setChannelFreq(byte RFFreqOffset)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x2AA774C", Offset = "0x2AA774C", VA = "0x2AA774C", Slot = "22")]
		public bool setChannelTransmitPower(ANT_ReferenceLibrary.TransmitPower transmitPower, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x2AA7958", Offset = "0x2AA7958", VA = "0x2AA7958")]
		public void setChannelTransmitPower(ANT_ReferenceLibrary.TransmitPower transmitPower)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x2AA79A0", Offset = "0x2AA79A0", VA = "0x2AA79A0", Slot = "23")]
		public bool setChannelSearchTimeout(byte searchTimeout, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x2AA7B10", Offset = "0x2AA7B10", VA = "0x2AA7B10")]
		public void setChannelSearchTimeout(byte searchTimeout)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x2AA7B58", Offset = "0x2AA7B58", VA = "0x2AA7B58", Slot = "24")]
		public bool openChannel(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x2AA7CB4", Offset = "0x2AA7CB4", VA = "0x2AA7CB4")]
		public void openChannel()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x2AA7CEC", Offset = "0x2AA7CEC", VA = "0x2AA7CEC", Slot = "25")]
		public bool sendBroadcastData(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x2AA7F84", Offset = "0x2AA7F84", VA = "0x2AA7F84", Slot = "26")]
		public ANT_ReferenceLibrary.MessagingReturnCode sendAcknowledgedData(byte[] data, uint ackWaitTime)
		{
			return default(ANT_ReferenceLibrary.MessagingReturnCode);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x2AA8208", Offset = "0x2AA8208", VA = "0x2AA8208")]
		public void sendAcknowledgedData(byte[] data)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x2AA8250", Offset = "0x2AA8250", VA = "0x2AA8250", Slot = "27")]
		public ANT_ReferenceLibrary.MessagingReturnCode sendBurstTransfer(byte[] data, uint completeWaitTime)
		{
			return default(ANT_ReferenceLibrary.MessagingReturnCode);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x2AA84A8", Offset = "0x2AA84A8", VA = "0x2AA84A8")]
		public void sendBurstTransfer(byte[] data)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x2AA84F0", Offset = "0x2AA84F0", VA = "0x2AA84F0", Slot = "28")]
		public bool sendExtBroadcastData(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x2AA87D8", Offset = "0x2AA87D8", VA = "0x2AA87D8", Slot = "29")]
		public ANT_ReferenceLibrary.MessagingReturnCode sendExtAcknowledgedData(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data, uint ackWaitTime)
		{
			return default(ANT_ReferenceLibrary.MessagingReturnCode);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x2AA8A9C", Offset = "0x2AA8A9C", VA = "0x2AA8A9C")]
		public void sendExtAcknowledgedData(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x2AA8B14", Offset = "0x2AA8B14", VA = "0x2AA8B14", Slot = "30")]
		public ANT_ReferenceLibrary.MessagingReturnCode sendExtBurstTransfer(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data, uint completeWaitTime)
		{
			return default(ANT_ReferenceLibrary.MessagingReturnCode);
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x2AA8DB4", Offset = "0x2AA8DB4", VA = "0x2AA8DB4")]
		public void sendExtBurstTransfer(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x2AA8E2C", Offset = "0x2AA8E2C", VA = "0x2AA8E2C", Slot = "31")]
		public bool closeChannel(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x2AA8F88", Offset = "0x2AA8F88", VA = "0x2AA8F88")]
		public void closeChannel()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x2AA8FC0", Offset = "0x2AA8FC0", VA = "0x2AA8FC0", Slot = "32")]
		public bool setLowPrioritySearchTimeout(byte lowPriorityTimeout, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x2AA9130", Offset = "0x2AA9130", VA = "0x2AA9130")]
		public void setLowPrioritySearchTimeout(byte lowPriorityTimeout)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x2AA9178", Offset = "0x2AA9178", VA = "0x2AA9178", Slot = "33")]
		public bool includeExcludeList_addChannel(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte listIndex, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x2AA939C", Offset = "0x2AA939C", VA = "0x2AA939C")]
		public void includeExcludeList_addChannel(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte listIndex)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x2AA9414", Offset = "0x2AA9414", VA = "0x2AA9414", Slot = "34")]
		public bool includeExcludeList_Configure(byte listSize, bool isExclusionList, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x2AA96A8", Offset = "0x2AA96A8", VA = "0x2AA96A8")]
		public void includeExcludeList_Configure(byte listSize, bool isExclusionList)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x2AA9710", Offset = "0x2AA9710", VA = "0x2AA9710")]
		public bool encryptedChannelEnable(ANT_ReferenceLibrary.EncryptedChannelMode encryptionMode, byte volatileKeyIndex, byte decimationRate, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x2AA98AC", Offset = "0x2AA98AC", VA = "0x2AA98AC")]
		public void encryptedChannelEnable(ANT_ReferenceLibrary.EncryptedChannelMode encryptionMode, byte volatileKeyIndex, byte decimationRate)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x2AA9914", Offset = "0x2AA9914", VA = "0x2AA9914")]
		public bool encryptionIDList_AddID(byte[] encryptionID, byte listIndex, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x2AA9B08", Offset = "0x2AA9B08", VA = "0x2AA9B08")]
		public void encryptionIDList_AddID(byte[] encryptionID, byte listIndex)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x2AA9B60", Offset = "0x2AA9B60", VA = "0x2AA9B60")]
		public bool encryptionIDList_Configure(byte listSize, bool isBlacklist, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x2AA9DF4", Offset = "0x2AA9DF4", VA = "0x2AA9DF4")]
		public void encryptionIDList_Configure(byte listSize, bool isBlacklist)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x2AA9E5C", Offset = "0x2AA9E5C", VA = "0x2AA9E5C", Slot = "35")]
		public bool setProximitySearch(byte thresholdBin, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x2AAA040", Offset = "0x2AAA040", VA = "0x2AAA040")]
		public void setProximitySearch(byte thresholdBin)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x2AAA088", Offset = "0x2AAA088", VA = "0x2AAA088", Slot = "36")]
		public bool configFrequencyAgility(byte freq1, byte freq2, byte freq3, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x2AAA224", Offset = "0x2AAA224", VA = "0x2AAA224")]
		public void configFrequencyAgility(byte freq1, byte freq2, byte freq3)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x2AAA28C", Offset = "0x2AAA28C", VA = "0x2AAA28C")]
		public bool configSdu(byte sduConfig, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x2AAA3FC", Offset = "0x2AAA3FC", VA = "0x2AAA3FC")]
		public void configSdu(byte sduConfig)
		{
		}
	}
	[Token(Token = "0x2000419")]
	public struct ANT_ChannelID
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort deviceNumber;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool pairingBit;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte deviceTypeID;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51A7")]
		public byte transmissionTypeID;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x2AA6490", Offset = "0x2AA6490", VA = "0x2AA6490")]
		public ANT_ChannelID(ushort deviceNumber, byte deviceType, byte transmissionType)
		{
		}
	}
	[Token(Token = "0x200041A")]
	public struct ANT_ChannelStatus
	{
		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public ANT_ReferenceLibrary.BasicChannelStatusCode BasicStatus;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50114")]
		public byte networkNumber;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ANT_ReferenceLibrary.ChannelType ChannelType;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x2AA6098", Offset = "0x2AA6098", VA = "0x2AA6098")]
		public ANT_ChannelStatus(ANT_ReferenceLibrary.BasicChannelStatusCode BasicStatus, byte networkNumber, ANT_ReferenceLibrary.ChannelType ChannelType)
		{
		}
	}
	[Token(Token = "0x200041B")]
	public static class ANT_Common
	{
		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool autoResetIsEnabled;

		[Token(Token = "0x4001B99")]
		internal const string ANT_UNMANAGED_WRAPPER = "ANT_WrappedLib";

		[Token(Token = "0x4001B9A")]
		internal const string ANT_SI_LIBRARY = "DSI_SiUSBXp_3_1";

		[Token(Token = "0x4001B9B")]
		internal const string ANT_SI_LIBRARY2 = "DSI_CP210xManufacturing_3_1";

		[PreserveSig]
		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x2AAA444", Offset = "0x2AAA444", VA = "0x2AAA444")]
		private static extern uint ANT_GetNumDevices();

		[PreserveSig]
		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x2AAA534", Offset = "0x2AAA534", VA = "0x2AAA534")]
		private static extern int ANT_EnableDebugLogging();

		[PreserveSig]
		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x2AAA624", Offset = "0x2AAA624", VA = "0x2AAA624")]
		private static extern void ANT_DisableDebugLogging();

		[PreserveSig]
		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x2AAA70C", Offset = "0x2AAA70C", VA = "0x2AAA70C")]
		private static extern int ANT_SetDebugLogDirectory(string pcDirectory);

		[PreserveSig]
		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x2AAA838", Offset = "0x2AAA838", VA = "0x2AAA838")]
		private static extern int ANT_DebugThreadInit(string pucName);

		[PreserveSig]
		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x2AAA964", Offset = "0x2AAA964", VA = "0x2AAA964")]
		private static extern int ANT_DebugThreadWrite(string pcMessage);

		[PreserveSig]
		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x2AAAA90", Offset = "0x2AAAA90", VA = "0x2AAAA90")]
		internal static extern int ANT_DebugResetTime();

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x2AAAB80", Offset = "0x2AAAB80", VA = "0x2AAAB80")]
		public static uint getNumDetectedUSBDevices()
		{
			return default(uint);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x2AAAC68", Offset = "0x2AAAC68", VA = "0x2AAAC68")]
		public static bool enableDebugLogs()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x2AAAD8C", Offset = "0x2AAAD8C", VA = "0x2AAAD8C")]
		public static void enableDebugLogs(string debugPath)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x2AAB044", Offset = "0x2AAB044", VA = "0x2AAB044")]
		public static void disableDebugLogs()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x2AAAE88", Offset = "0x2AAAE88", VA = "0x2AAAE88")]
		public static bool setDebugLogDirectory(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x2AAB124", Offset = "0x2AAB124", VA = "0x2AAB124")]
		internal static bool initDebugLogThread(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x2AAB258", Offset = "0x2AAB258", VA = "0x2AAB258")]
		internal static bool writeToDebugLog(string message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200041C")]
	public class ANT_Device : IDisposable
	{
		[Token(Token = "0x2000707")]
		private struct ANTMessageItem
		{
			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte dataSize;

			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51C6")]
			public ANTMessage antMsgData;
		}

		[Token(Token = "0x2000708")]
		public struct ANTMessage
		{
			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public byte msgID;

			[Token(Token = "0x4002D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5012C")]
			public byte[] ucharBuf;
		}

		[Token(Token = "0x2000709")]
		public enum DeviceNotificationCode : byte
		{
			[Token(Token = "0x4002D8E")]
			Reset = 1,
			[Token(Token = "0x4002D8F")]
			Shutdown
		}

		[Token(Token = "0x200070A")]
		public delegate void dDeviceResponseHandler(ANT_Response response);

		[Token(Token = "0x200070B")]
		public delegate void dSerialErrorHandler(ANT_Device sender, serialErrorCode error, bool isCritical);

		[Token(Token = "0x200070C")]
		public enum serialErrorCode
		{
			[Token(Token = "0x4002D91")]
			SerialWriteError,
			[Token(Token = "0x4002D92")]
			SerialReadError,
			[Token(Token = "0x4002D93")]
			DeviceConnectionLost,
			[Token(Token = "0x4002D94")]
			MessageLost_CrcError,
			[Token(Token = "0x4002D95")]
			MessageLost_QueueOverflow,
			[Token(Token = "0x4002D96")]
			MessageLost_TooLarge,
			[Token(Token = "0x4002D97")]
			MessageLost_InvalidChannel,
			[Token(Token = "0x4002D98")]
			Unknown
		}

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5012C")]
		private ANT_ReferenceLibrary.FramerType frameType;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ANT_ReferenceLibrary.PortType portType;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr unmanagedANTSerialPtr;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr unmanagedANTFramerPtr;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C7")]
		private IntPtr unmanagedCancelBool;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool initializedUSB;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CAEC")]
		private byte USBDeviceNum;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint USBBaudRate;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ANT_DeviceCapabilities capabilities;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool pollingOn;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51CE")]
		private int numDeviceChannels;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ANT_Channel[] antChannels;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50134")]
		private Thread responsePoller;

		[Token(Token = "0x17000437")]
		private bool? cancelTxFlag
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x2AAB414", Offset = "0x2AAB414", VA = "0x2AAB414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x2AAB684", Offset = "0x2AAB684", VA = "0x2AAB684")]
			set
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event dDeviceResponseHandler deviceResponse
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x2AAB8D0", Offset = "0x2AAB8D0", VA = "0x2AAB8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2384C", Offset = "0xC2384C")]
			add
			{
			}
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x2AABA1C", Offset = "0x2AABA1C", VA = "0x2AABA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23888", Offset = "0xC23888")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event dSerialErrorHandler serialError
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x2AABB68", Offset = "0x2AABB68", VA = "0x2AABB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC238C4", Offset = "0xC238C4")]
			add
			{
			}
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x2AABCB4", Offset = "0x2AABCB4", VA = "0x2AABCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23900", Offset = "0xC23900")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x2AABE00", Offset = "0x2AABE00", VA = "0x2AABE00")]
		private static extern int ANT_Init(byte ucUSBDeviceNum, uint usBaudrate, ref IntPtr returnSerialPtr, ref IntPtr returnFramerPtr, byte ucPortType, byte ucHCIFrameTpye);

		[PreserveSig]
		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x2AABF30", Offset = "0x2AABF30", VA = "0x2AABF30")]
		private static extern void ANT_Close(IntPtr SerialPtr, IntPtr FramerPtr);

		[PreserveSig]
		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x2AAC02C", Offset = "0x2AAC02C", VA = "0x2AAC02C")]
		private static extern int ANT_USBReset(IntPtr SerialPtr);

		[PreserveSig]
		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x2AAC128", Offset = "0x2AAC128", VA = "0x2AAC128")]
		private static extern int ANT_ResetSystem(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x2AAC22C", Offset = "0x2AAC22C", VA = "0x2AAC22C")]
		private static extern void ANT_SetCancelParameter(IntPtr FramerPtr, IntPtr pbCancel);

		[PreserveSig]
		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x2AAC328", Offset = "0x2AAC328", VA = "0x2AAC328")]
		private static extern int ANT_SetNetworkKey(IntPtr FramerPtr, byte ucNetNumber, byte[] pucKey, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x2AAC46C", Offset = "0x2AAC46C", VA = "0x2AAC46C")]
		private static extern int ANT_EnableLED(IntPtr FramerPtr, byte ucEnable, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x2AAC57C", Offset = "0x2AAC57C", VA = "0x2AAC57C")]
		private static extern int ANT_GetDeviceUSBPID(IntPtr FramerPtr, ref ushort usbPID);

		[PreserveSig]
		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x2AAC680", Offset = "0x2AAC680", VA = "0x2AAC680")]
		private static extern int ANT_GetDeviceUSBVID(IntPtr FramerPtr, ref ushort usbVID);

		[PreserveSig]
		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x2AAC784", Offset = "0x2AAC784", VA = "0x2AAC784")]
		private static extern int ANT_ConfigureSplitAdvancedBursts(IntPtr FramerPtr, int bEnabelSplitBursts);

		[PreserveSig]
		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x2AAC888", Offset = "0x2AAC888", VA = "0x2AAC888")]
		private static extern int ANT_ConfigureAdvancedBurst(IntPtr FramerPtr, int enable, byte ucMaxPacketLength, uint ulRequiredFields, uint ulOptionalFields, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x2AAC9B0", Offset = "0x2AAC9B0", VA = "0x2AAC9B0")]
		private static extern int ANT_ConfigureAdvancedBurst_ext(IntPtr FramerPtr, int enable, byte ucMaxPacketLength, uint ulRequiredFields, uint ulOptionalFields, ushort usStallCount, byte ucRetryCount, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x2AACAF4", Offset = "0x2AACAF4", VA = "0x2AACAF4")]
		private static extern int ANT_SetCryptoKey(IntPtr FramerPtr, byte ucVolatileKeyIndex, byte[] pucKey, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x2AACC38", Offset = "0x2AACC38", VA = "0x2AACC38")]
		private static extern int ANT_SetCryptoID(IntPtr FramerPtr, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x2AACD70", Offset = "0x2AACD70", VA = "0x2AACD70")]
		private static extern int ANT_SetCryptoUserInfo(IntPtr FramerPtr, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x2AACEA8", Offset = "0x2AACEA8", VA = "0x2AACEA8")]
		private static extern int ANT_SetCryptoRNGSeed(IntPtr FramerPtr, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x2AACFE0", Offset = "0x2AACFE0", VA = "0x2AACFE0")]
		private static extern int ANT_SetCryptoInfo(IntPtr FramerPtr, byte ucParameter, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x2AAD124", Offset = "0x2AAD124", VA = "0x2AAD124")]
		private static extern int ANT_LoadCryptoKeyNVMOp(IntPtr FramerPtr, byte ucNVMKeyIndex, byte ucVolatileKeyIndex, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x2AAD240", Offset = "0x2AAD240", VA = "0x2AAD240")]
		private static extern int ANT_StoreCryptoKeyNVMOp(IntPtr FramerPtr, byte ucNVMKeyIndex, byte[] pucKey, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x2AAD384", Offset = "0x2AAD384", VA = "0x2AAD384")]
		private static extern int ANT_CryptoKeyNVMOp(IntPtr FramerPtr, byte ucOperation, byte ucNVMKeyIndex, byte[] pucData, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x2AAD4D4", Offset = "0x2AAD4D4", VA = "0x2AAD4D4")]
		private static extern uint ANT_GetDeviceSerialNumber(IntPtr SerialPtr);

		[PreserveSig]
		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x2AAD5D0", Offset = "0x2AAD5D0", VA = "0x2AAD5D0")]
		private static extern int ANT_GetDeviceUSBInfo(IntPtr FramerPtr, byte ucDeviceNum_, byte[] pucProductString_, byte[] pucSerialString_);

		[PreserveSig]
		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x2AAD740", Offset = "0x2AAD740", VA = "0x2AAD740")]
		private static extern int ANT_SetTransmitPower(IntPtr FramerPtr, byte ucTransmitPower_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x2AAD850", Offset = "0x2AAD850", VA = "0x2AAD850")]
		private static extern int ANT_ConfigEventFilter(IntPtr FramerPtr, ushort usFilter_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x2AAD960", Offset = "0x2AAD960", VA = "0x2AAD960")]
		private static extern int ANT_ConfigEventBuffer(IntPtr FramerPtr, byte ucConfig_, ushort usSize_, ushort usTime_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x2AADA88", Offset = "0x2AADA88", VA = "0x2AADA88")]
		private static extern int ANT_ConfigHighDutySearch(IntPtr FramerPtr, byte ucEnable_, byte ucSuppressionCycles_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x2AADBA4", Offset = "0x2AADBA4", VA = "0x2AADBA4")]
		private static extern int ANT_SetSelectiveDataUpdateMask(IntPtr FramerPtr, byte ucMaskNumber_, byte[] ucSduMask_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x2AADCE8", Offset = "0x2AADCE8", VA = "0x2AADCE8")]
		private static extern int ANT_ConfigUserNVM(IntPtr FramerPtr, ushort usAddress_, byte[] pucData_, byte ucSize_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x2AADE38", Offset = "0x2AADE38", VA = "0x2AADE38")]
		private static extern int ANT_RequestMessage(IntPtr FramerPtr, byte ucANTChannel, byte ucMessageID, ref ANTMessageItem ANT_MESSAGE_ITEM_response, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x2AAE010", Offset = "0x2AAE010", VA = "0x2AAE010")]
		private static extern int ANT_RequestUserNvmMessage(IntPtr FramerPtr, byte ucANTChannel, byte ucMessageID, ref ANTMessageItem ANT_MESSAGE_ITEM_response, ushort usAddress, byte ucSize, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x2AAE200", Offset = "0x2AAE200", VA = "0x2AAE200")]
		private static extern ushort ANT_WaitForMessage(IntPtr FramerPtr, uint ulMilliseconds_);

		[PreserveSig]
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x2AAE304", Offset = "0x2AAE304", VA = "0x2AAE304")]
		private static extern ushort ANT_GetMessage(IntPtr FramerPtr, ref ANTMessage ANT_MESSAGE_response);

		[PreserveSig]
		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x2AAE4B4", Offset = "0x2AAE4B4", VA = "0x2AAE4B4")]
		private static extern byte ANT_GetChannelNumber(IntPtr FramerPtr, ref ANTMessage pstANTMessage);

		[PreserveSig]
		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x2AAE664", Offset = "0x2AAE664", VA = "0x2AAE664")]
		private static extern int ANT_GetCapabilities(IntPtr FramerPtr, byte[] pucCapabilities_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x2AAE79C", Offset = "0x2AAE79C", VA = "0x2AAE79C")]
		private static extern int ANT_InitCWTestMode(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x2AAE8A0", Offset = "0x2AAE8A0", VA = "0x2AAE8A0")]
		private static extern int ANT_SetCWTestMode(IntPtr FramerPtr, byte ucTransmitPower_, byte ucRFChannel_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x2AAE9BC", Offset = "0x2AAE9BC", VA = "0x2AAE9BC")]
		private static extern int ANT_OpenRxScanMode(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x2AAEAC0", Offset = "0x2AAEAC0", VA = "0x2AAEAC0")]
		private static extern int ANT_Script_Write(IntPtr FramerPtr, byte ucSize_, byte[] pucData_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x2AAEC04", Offset = "0x2AAEC04", VA = "0x2AAEC04")]
		private static extern int ANT_Script_Clear(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x2AAED08", Offset = "0x2AAED08", VA = "0x2AAED08")]
		private static extern int ANT_Script_SetDefaultSector(IntPtr FramerPtr, byte ucSectNumber_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x2AAEE18", Offset = "0x2AAEE18", VA = "0x2AAEE18")]
		private static extern int ANT_Script_EndSector(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x2AAEF1C", Offset = "0x2AAEF1C", VA = "0x2AAEF1C")]
		private static extern int ANT_Script_Dump(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x2AAF020", Offset = "0x2AAF020", VA = "0x2AAF020")]
		private static extern int ANT_Script_Lock(IntPtr FramerPtr, uint ulResponseTimeout_);

		[PreserveSig]
		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x2AAF124", Offset = "0x2AAF124", VA = "0x2AAF124")]
		private static extern int ANT_RxExtMesgsEnable(IntPtr FramerPtr, byte ucEnable_, uint ulResponseTimeout_);

		[PreserveSig]
		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x2AAF234", Offset = "0x2AAF234", VA = "0x2AAF234")]
		private static extern int ANT_CrystalEnable(IntPtr FramerPtr, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x2AAF338", Offset = "0x2AAF338", VA = "0x2AAF338")]
		private static extern int ANT_WriteMessage(IntPtr FramerPtr, ANTMessage pstANTMessage, ushort usMessageSize);

		[PreserveSig]
		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x2AAF4C0", Offset = "0x2AAF4C0", VA = "0x2AAF4C0")]
		private static extern int ANT_SetLibConfig(IntPtr FramerPtr, byte ucLibConfigFlags_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x2AAF5D0", Offset = "0x2AAF5D0", VA = "0x2AAF5D0")]
		private static extern int FIT_SetFEState(IntPtr FramerPtr, byte ucFEState_, uint ulResponseTime_);

		[PreserveSig]
		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x2AAF6E0", Offset = "0x2AAF6E0", VA = "0x2AAF6E0")]
		private static extern int FIT_AdjustPairingSettings(IntPtr FramerPtr, byte ucSearchLv_, byte ucPairLv_, byte ucTrackLv_, uint ulResponseTime_);

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x2AAF808", Offset = "0x2AAF808", VA = "0x2AAF808")]
		public ANT_Device(byte USBDeviceNum, uint baudRate)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x2AAF870", Offset = "0x2AAF870", VA = "0x2AAF870")]
		public ANT_Device(ANT_ReferenceLibrary.PortType portType, byte USBDeviceNum, uint baudRate, ANT_ReferenceLibrary.FramerType frameType)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x2AB0920", Offset = "0x2AB0920", VA = "0x2AB0920")]
		public ANT_Device()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x2AAFB2C", Offset = "0x2AAFB2C", VA = "0x2AAFB2C")]
		private void startUp(byte USBDeviceNum, uint baudRate, ANT_ReferenceLibrary.FramerType frameType, ANT_ReferenceLibrary.PortType portType, bool calledByAutoInit)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x2AB1F20", Offset = "0x2AB1F20", VA = "0x2AB1F20", Slot = "1")]
		~ANT_Device()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x2AB082C", Offset = "0x2AB082C", VA = "0x2AB082C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x2AB1504", Offset = "0x2AB1504", VA = "0x2AB1504")]
		private void shutdown()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x2AB21B0", Offset = "0x2AB21B0", VA = "0x2AB21B0")]
		public static void shutdownDeviceInstance(ref ANT_Device deviceToShutdown)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x2AA5D94", Offset = "0x2AA5D94", VA = "0x2AA5D94")]
		internal void channelDisposed(byte channelNumber)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x2AB2258", Offset = "0x2AB2258", VA = "0x2AB2258", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x2AA4A00", Offset = "0x2AA4A00", VA = "0x2AA4A00")]
		internal IntPtr getFramerPtr()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x2AB2318", Offset = "0x2AB2318", VA = "0x2AB2318")]
		public int getOpenedUSBDeviceNum()
		{
			return default(int);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x2AB234C", Offset = "0x2AB234C", VA = "0x2AB234C")]
		public uint getOpenedUSBBaudRate()
		{
			return default(uint);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x2AB237C", Offset = "0x2AB237C", VA = "0x2AB237C")]
		public ANT_ReferenceLibrary.FramerType getOpenedFrameType()
		{
			return default(ANT_ReferenceLibrary.FramerType);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x2AB23AC", Offset = "0x2AB23AC", VA = "0x2AB23AC")]
		public ANT_ReferenceLibrary.PortType getOpenedPortType()
		{
			return default(ANT_ReferenceLibrary.PortType);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x2AB23DC", Offset = "0x2AB23DC", VA = "0x2AB23DC")]
		public ANT_Channel getChannel(int num)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x2AB26BC", Offset = "0x2AB26BC", VA = "0x2AB26BC")]
		public int getNumChannels()
		{
			return default(int);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x2AB2064", Offset = "0x2AB2064", VA = "0x2AB2064")]
		private void NotifyDeviceEvent(DeviceNotificationCode notification, object notificationInfo)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x2AB27C4", Offset = "0x2AB27C4", VA = "0x2AB27C4")]
		private void responsePollFunc()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x2AB3D9C", Offset = "0x2AB3D9C", VA = "0x2AB3D9C")]
		public void cancelTransfers(int cancelWaitTime)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x2AB0FB4", Offset = "0x2AB0FB4", VA = "0x2AB0FB4")]
		public ANT_DeviceCapabilities getDeviceCapabilities(bool forceNewCopy, uint responseWaitTime)
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x2AA6768", Offset = "0x2AA6768", VA = "0x2AA6768")]
		public ANT_DeviceCapabilities getDeviceCapabilities()
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x2AB4F98", Offset = "0x2AB4F98", VA = "0x2AB4F98")]
		public ANT_DeviceCapabilities getDeviceCapabilities(uint responseWaitTime)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x2AB4FE8", Offset = "0x2AB4FE8", VA = "0x2AB4FE8")]
		public void ResetUSB()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x2AB5168", Offset = "0x2AB5168", VA = "0x2AB5168")]
		public bool ResetSystem(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x2AB52D8", Offset = "0x2AB52D8", VA = "0x2AB52D8")]
		public void ResetSystem()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x2AB5310", Offset = "0x2AB5310", VA = "0x2AB5310")]
		public bool setNetworkKey(byte netNumber, byte[] networkKey, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x2AB55C8", Offset = "0x2AB55C8", VA = "0x2AB55C8")]
		public void setNetworkKey(byte netNumber, byte[] networkKey)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x2AB5620", Offset = "0x2AB5620", VA = "0x2AB5620")]
		public bool setTransmitPowerForAllChannels(ANT_ReferenceLibrary.TransmitPower transmitPower, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x2AB5780", Offset = "0x2AB5780", VA = "0x2AB5780")]
		public void setTransmitPowerForAllChannels(ANT_ReferenceLibrary.TransmitPower transmitPower)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x2AB57C8", Offset = "0x2AB57C8", VA = "0x2AB57C8")]
		public bool configureAdvancedBurstSplitting(bool splitBursts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x2AB59C4", Offset = "0x2AB59C4", VA = "0x2AB59C4")]
		public bool configureAdvancedBursting(bool enable, byte maxPacketLength, ANT_ReferenceLibrary.AdvancedBurstConfigFlags requiredFields, ANT_ReferenceLibrary.AdvancedBurstConfigFlags optionalFields, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x2AB5C08", Offset = "0x2AB5C08", VA = "0x2AB5C08")]
		public void configureAdvancedBursting(bool enable, byte maxPacketLength, ANT_ReferenceLibrary.AdvancedBurstConfigFlags requiredFields, ANT_ReferenceLibrary.AdvancedBurstConfigFlags optionalFields)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x2AB5CA0", Offset = "0x2AB5CA0", VA = "0x2AB5CA0")]
		public bool configureAdvancedBursting_ext(bool enable, byte maxPacketLength, ANT_ReferenceLibrary.AdvancedBurstConfigFlags requiredFields, ANT_ReferenceLibrary.AdvancedBurstConfigFlags optionalFields, ushort stallCount, byte retryCount, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x2AB5F18", Offset = "0x2AB5F18", VA = "0x2AB5F18")]
		public void configureAdvancedBursting_ext(bool enable, byte maxPacketLength, ANT_ReferenceLibrary.AdvancedBurstConfigFlags requiredFields, ANT_ReferenceLibrary.AdvancedBurstConfigFlags optionalFields, ushort stallCount, byte retryCount)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x2AB5FEC", Offset = "0x2AB5FEC", VA = "0x2AB5FEC")]
		public bool setCryptoKey(byte volatileKeyIndex, byte[] encryptionKey, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x2AB615C", Offset = "0x2AB615C", VA = "0x2AB615C")]
		public void setCryptoKey(byte volatileKeyIndex, byte[] encryptionKey)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x2AB61B4", Offset = "0x2AB61B4", VA = "0x2AB61B4")]
		public bool setCryptoID(byte[] encryptionID, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x2AB6310", Offset = "0x2AB6310", VA = "0x2AB6310")]
		public void setCryptoID(byte[] encryptionID)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x2AB6358", Offset = "0x2AB6358", VA = "0x2AB6358")]
		public bool setCryptoUserInfo(byte[] userInfoString, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x2AB64B4", Offset = "0x2AB64B4", VA = "0x2AB64B4")]
		public void setCryptoUserInfo(byte[] userInfoString)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x2AB64FC", Offset = "0x2AB64FC", VA = "0x2AB64FC")]
		public bool setCryptoRNGSeed(byte[] cryptoRNGSeed, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x2AB6658", Offset = "0x2AB6658", VA = "0x2AB6658")]
		public void setCryptoRNGSeed(byte[] cryptoRNGSeed)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x2AB66A0", Offset = "0x2AB66A0", VA = "0x2AB66A0")]
		public bool setCryptoInfo(ANT_ReferenceLibrary.EncryptionInfo encryptionParameter, byte[] parameterData, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x2AB6810", Offset = "0x2AB6810", VA = "0x2AB6810")]
		public void setCryptoInfo(ANT_ReferenceLibrary.EncryptionInfo encryptionParameter, byte[] parameterData)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x2AB6868", Offset = "0x2AB6868", VA = "0x2AB6868")]
		public bool loadCryptoKeyFromNVM(byte nonVolatileKeyIndex, byte volatileKeyIndex, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x2AB69DC", Offset = "0x2AB69DC", VA = "0x2AB69DC")]
		public void loadCryptoKeyFromNVM(byte nonVolatileKeyIndex, byte volatileKeyIndex)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x2AB6A34", Offset = "0x2AB6A34", VA = "0x2AB6A34")]
		public bool storeCryptoKeyToNVM(byte nonVolatileKeyIndex, byte[] encryptionKey, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x2AB6BA4", Offset = "0x2AB6BA4", VA = "0x2AB6BA4")]
		public void storeCryptoKeyToNVM(byte nonVolatileKeyIndex, byte[] encryptionKey)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x2AB6BFC", Offset = "0x2AB6BFC", VA = "0x2AB6BFC")]
		public bool cryptoKeyNVMOp(ANT_ReferenceLibrary.EncryptionNVMOp memoryOperation, byte nonVolatileKeyIndex, byte[] operationData, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x2AB6D80", Offset = "0x2AB6D80", VA = "0x2AB6D80")]
		public void cryptoKeyNVMOp(ANT_ReferenceLibrary.EncryptionNVMOp memoryOperation, byte nonVolatileKeyIndex, byte[] operationData)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x2AB6DE8", Offset = "0x2AB6DE8", VA = "0x2AB6DE8")]
		public bool EnableLED(bool IsEnabled, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x2AB6FE4", Offset = "0x2AB6FE4", VA = "0x2AB6FE4")]
		public void EnableLED(bool IsEnabled)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x2AB7040", Offset = "0x2AB7040", VA = "0x2AB7040")]
		public bool configureEventBuffer(ANT_ReferenceLibrary.EventBufferConfig config, ushort size, ushort time, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x2AB71CC", Offset = "0x2AB71CC", VA = "0x2AB71CC")]
		public void configureEventBuffer(ANT_ReferenceLibrary.EventBufferConfig config, ushort size, ushort time)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x2AB7234", Offset = "0x2AB7234", VA = "0x2AB7234")]
		public bool configureEventFilter(ushort eventFilter, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x2AB7394", Offset = "0x2AB7394", VA = "0x2AB7394")]
		public void configureEventFilter(ushort eventFilter)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x2AB73DC", Offset = "0x2AB73DC", VA = "0x2AB73DC")]
		public bool configureHighDutySearch(bool enable, byte suppressionCycles, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x2AB7604", Offset = "0x2AB7604", VA = "0x2AB7604")]
		public void configureHighDutySearch(bool enable, byte suppressionCycles)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x2AB767C", Offset = "0x2AB767C", VA = "0x2AB767C")]
		public bool setSduMask(byte maskNumber, byte[] mask, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x2AB77EC", Offset = "0x2AB77EC", VA = "0x2AB77EC")]
		public void setSduMask(byte maskNumber, byte[] mask)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x2AB7844", Offset = "0x2AB7844", VA = "0x2AB7844")]
		public bool configureUserNvm(ushort address, byte[] data, byte size, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x2AB79C8", Offset = "0x2AB79C8", VA = "0x2AB79C8")]
		public void configureUserNvm(ushort address, byte[] data, byte size)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x2AB7A30", Offset = "0x2AB7A30", VA = "0x2AB7A30")]
		public ANT_Response readUserNvm(ushort address, byte size, uint responseWaitTime)
		{
			return null;
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x2AB7E28", Offset = "0x2AB7E28", VA = "0x2AB7E28")]
		public ANT_Response readUserNvm(ushort address, byte size)
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x2AB7E88", Offset = "0x2AB7E88", VA = "0x2AB7E88")]
		public ushort getDeviceUSBPID()
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x2AB802C", Offset = "0x2AB802C", VA = "0x2AB802C")]
		public ushort getDeviceUSBVID()
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x2AB81D0", Offset = "0x2AB81D0", VA = "0x2AB81D0")]
		public uint getSerialNumber()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x2AB82D4", Offset = "0x2AB82D4", VA = "0x2AB82D4")]
		public ANT_DeviceInfo getDeviceUSBInfo(byte deviceNum)
		{
			return null;
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x2AB857C", Offset = "0x2AB857C", VA = "0x2AB857C")]
		public ANT_DeviceInfo getDeviceUSBInfo()
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x2AB8688", Offset = "0x2AB8688", VA = "0x2AB8688")]
		public ANT_Response requestMessageAndResponse(byte channelNum, ANT_ReferenceLibrary.RequestMessageID messageID, uint responseWaitTime)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x2AB3FC0", Offset = "0x2AB3FC0", VA = "0x2AB3FC0")]
		public ANT_Response requestMessageAndResponse(ANT_ReferenceLibrary.RequestMessageID messageID, uint responseWaitTime)
		{
			return null;
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x2AB8A68", Offset = "0x2AB8A68", VA = "0x2AB8A68")]
		public void requestMessage(byte channelNum, ANT_ReferenceLibrary.RequestMessageID messageID)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x2AB8BC4", Offset = "0x2AB8BC4", VA = "0x2AB8BC4")]
		public void requestMessage(ANT_ReferenceLibrary.RequestMessageID messageID)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x2AB8C18", Offset = "0x2AB8C18", VA = "0x2AB8C18")]
		public bool openRxScanMode(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x2AB8D64", Offset = "0x2AB8D64", VA = "0x2AB8D64")]
		public void openRxScanMode()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x2AB8D9C", Offset = "0x2AB8D9C", VA = "0x2AB8D9C")]
		public bool startCWTest(ANT_ReferenceLibrary.TransmitPower transmitPower, byte RFFreqOffset, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x2AB9064", Offset = "0x2AB9064", VA = "0x2AB9064")]
		public bool enableRxExtendedMessages(bool IsEnabled, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x2AB9260", Offset = "0x2AB9260", VA = "0x2AB9260")]
		public void enableRxExtendedMessages(bool IsEnabled)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x2AB92BC", Offset = "0x2AB92BC", VA = "0x2AB92BC")]
		public bool crystalEnable(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x2AB9408", Offset = "0x2AB9408", VA = "0x2AB9408")]
		public void crystalEnable()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x2AB9440", Offset = "0x2AB9440", VA = "0x2AB9440")]
		public bool writeRawMessageToDevice(byte msgID, byte[] msgData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x2AB97E0", Offset = "0x2AB97E0", VA = "0x2AB97E0")]
		public bool setLibConfig(ANT_ReferenceLibrary.LibConfigFlags libConfigFlags, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x2AB9948", Offset = "0x2AB9948", VA = "0x2AB9948")]
		public void setLibConfig(ANT_ReferenceLibrary.LibConfigFlags libConfigFlags)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x2AB9990", Offset = "0x2AB9990", VA = "0x2AB9990")]
		public bool script_Write(byte[] commandString, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x2AB9B9C", Offset = "0x2AB9B9C", VA = "0x2AB9B9C")]
		public void script_Write(byte[] commandString)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x2AB9BE4", Offset = "0x2AB9BE4", VA = "0x2AB9BE4")]
		public bool script_Clear(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x2AB9D30", Offset = "0x2AB9D30", VA = "0x2AB9D30")]
		public void script_Clear()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x2AB9D68", Offset = "0x2AB9D68", VA = "0x2AB9D68")]
		public bool script_setDefaultSector(byte sectorNum, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x2AB9EC8", Offset = "0x2AB9EC8", VA = "0x2AB9EC8")]
		public void script_setDefaultSector(byte sectorNum)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x2AB9F10", Offset = "0x2AB9F10", VA = "0x2AB9F10")]
		public bool script_endSector(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x2ABA05C", Offset = "0x2ABA05C", VA = "0x2ABA05C")]
		public void script_endSector()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x2ABA094", Offset = "0x2ABA094", VA = "0x2ABA094")]
		public bool script_requestNVMDump(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x2ABA1E0", Offset = "0x2ABA1E0", VA = "0x2ABA1E0")]
		public void script_requestNVMDump()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x2ABA218", Offset = "0x2ABA218", VA = "0x2ABA218")]
		public bool script_lockNVM(uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x2ABA364", Offset = "0x2ABA364", VA = "0x2ABA364")]
		public void script_lockNVM()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x2ABA39C", Offset = "0x2ABA39C", VA = "0x2ABA39C")]
		public bool fitSetFEState(byte feState, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x2ABA55C", Offset = "0x2ABA55C", VA = "0x2ABA55C")]
		public void fitSetFEState(byte feState)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x2ABA5A4", Offset = "0x2ABA5A4", VA = "0x2ABA5A4")]
		public bool fitAdjustPairingSettings(byte searchLv, byte pairLv, byte trackLv, uint responseWaitTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x2ABA78C", Offset = "0x2ABA78C", VA = "0x2ABA78C")]
		public void fitAdjustPairingSettings(byte searchLv, byte pairLv, byte trackLv)
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class ANT_DeviceCapabilities
	{
		[Token(Token = "0x200070D")]
		public enum BasicCapabilitiesMasks : byte
		{
			[Token(Token = "0x4002D9A")]
			NO_RX_CHANNELS = 1,
			[Token(Token = "0x4002D9B")]
			NO_TX_CHANNELS = 2,
			[Token(Token = "0x4002D9C")]
			NO_RX_MESSAGES = 4,
			[Token(Token = "0x4002D9D")]
			NO_TX_MESSAGES = 8,
			[Token(Token = "0x4002D9E")]
			NO_ACKD_MESSAGES = 0x10,
			[Token(Token = "0x4002D9F")]
			NO_BURST_TRANSFER = 0x20
		}

		[Token(Token = "0x200070E")]
		public enum AdvancedCapabilitiesMasks : byte
		{
			[Token(Token = "0x4002DA1")]
			OVERUN_UNDERRUN = 1,
			[Token(Token = "0x4002DA2")]
			NETWORK_CAPABLE = 2,
			[Token(Token = "0x4002DA3")]
			AP1_VERSION_2 = 4,
			[Token(Token = "0x4002DA4")]
			SERIAL_NUMBER_CAPABLE = 8,
			[Token(Token = "0x4002DA5")]
			PER_CHANNEL_TX_POWER_CAPABLE = 0x10,
			[Token(Token = "0x4002DA6")]
			LOW_PRIORITY_SEARCH_CAPABLE = 0x20,
			[Token(Token = "0x4002DA7")]
			SCRIPT_CAPABLE = 0x40,
			[Token(Token = "0x4002DA8")]
			SEARCH_LIST_CAPABLE = 0x80
		}

		[Token(Token = "0x200070F")]
		public enum AdvancedCapabilities2Masks : byte
		{
			[Token(Token = "0x4002DAA")]
			LED_CAPABLE = 1,
			[Token(Token = "0x4002DAB")]
			EXT_MESSAGE_CAPABLE = 2,
			[Token(Token = "0x4002DAC")]
			SCAN_MODE_CAPABLE = 4,
			[Token(Token = "0x4002DAD")]
			RESERVED = 8,
			[Token(Token = "0x4002DAE")]
			PROX_SEARCH_CAPABLE = 0x10,
			[Token(Token = "0x4002DAF")]
			EXT_ASSIGN_CAPABLE = 0x20,
			[Token(Token = "0x4002DB0")]
			FS_ANTFS_ENABLED = 0x40,
			[Token(Token = "0x4002DB1")]
			FIT1_CAPABLE = 0x80
		}

		[Token(Token = "0x2000710")]
		public enum AdvancedCapabilities3Masks : byte
		{
			[Token(Token = "0x4002DB3")]
			ADVANCED_BURST_CAPABLE = 1,
			[Token(Token = "0x4002DB4")]
			EVENT_BUFFERING_CAPABLE = 2,
			[Token(Token = "0x4002DB5")]
			EVENT_FILTERING_CAPABLE = 4,
			[Token(Token = "0x4002DB6")]
			HIGH_DUTY_SEARCH_CAPABLE = 8,
			[Token(Token = "0x4002DB7")]
			SELECTIVE_DATA_UPDATE = 0x40,
			[Token(Token = "0x4002DB8")]
			ENCRYPTED_CHANNEL_CAPABLE = 0x80
		}

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly byte maxANTChannels;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly byte maxNetworks;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool NoReceiveChannels;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51EE")]
		public readonly bool NoTransmitChannels;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly bool NoReceiveMessages;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50154")]
		public readonly bool NoTransmitMessages;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool NoAckMessages;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool NoBurstMessages;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool PrivateNetworks;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51F6")]
		public readonly bool SerialNumber;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly bool perChannelTransmitPower;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5015C")]
		public readonly bool lowPrioritySearch;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool ScriptSupport;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool SearchList;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool OnboardLED;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51FE")]
		public readonly bool ExtendedMessaging;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly bool ScanModeSupport;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50164")]
		public readonly bool ExtendedChannelAssignment;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool ProximitySearch;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool FS;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool FIT;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5206")]
		public readonly bool AdvancedBurst;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly bool EventBuffering;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5016C")]
		public readonly bool EventFiltering;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool HighDutySearch;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool SelectiveDataUpdate;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool SingleChannelEncryption;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520E")]
		public readonly byte maxDataChannels;

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x2AB402C", Offset = "0x2AB402C", VA = "0x2AB402C")]
		internal ANT_DeviceCapabilities(byte[] capabilitiesData)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x2ABAAA8", Offset = "0x2ABAAA8", VA = "0x2ABAAA8")]
		public string printCapabilities()
		{
			return null;
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x2ABB524", Offset = "0x2ABB524", VA = "0x2ABB524")]
		public string printStandardCapabilities()
		{
			return null;
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x2ABB958", Offset = "0x2ABB958", VA = "0x2ABB958")]
		public string printAdvCapabilities()
		{
			return null;
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x2ABC260", Offset = "0x2ABC260", VA = "0x2ABC260", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200041E")]
	public class ANT_DeviceInfo
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] productDescription;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] serialString;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x2AB851C", Offset = "0x2AB851C", VA = "0x2AB851C")]
		internal ANT_DeviceInfo(byte[] productDescription, byte[] serialString)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x2ABC298", Offset = "0x2ABC298", VA = "0x2ABC298")]
		public string printProductDescription()
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x2ABC398", Offset = "0x2ABC398", VA = "0x2ABC398")]
		public string printSerialString()
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x2ABC2E4", Offset = "0x2ABC2E4", VA = "0x2ABC2E4")]
		private string printBytes(byte[] rawBytes)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public class ANT_Exception : Exception
	{
		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x2AA6100", Offset = "0x2AA6100", VA = "0x2AA6100")]
		public ANT_Exception(string exceptionDetail)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x2ABC3E4", Offset = "0x2ABC3E4", VA = "0x2ABC3E4")]
		public ANT_Exception(string exceptionDetail, Exception innerException)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x2ABC510", Offset = "0x2ABC510", VA = "0x2ABC510")]
		public ANT_Exception(ANT_Exception aex)
		{
		}
	}
	[Token(Token = "0x2000420")]
	public sealed class ANT_ReferenceLibrary
	{
		[Token(Token = "0x2000711")]
		public enum PortType : byte
		{
			[Token(Token = "0x4002DBA")]
			USB,
			[Token(Token = "0x4002DBB")]
			COM
		}

		[Token(Token = "0x2000712")]
		public enum FramerType : byte
		{
			[Token(Token = "0x4002DBD")]
			basicANT
		}

		[Token(Token = "0x2000713")]
		[Flags]
		public enum ChannelType : byte
		{
			[Token(Token = "0x4002DBF")]
			BASE_Slave_Receive_0x00 = 0,
			[Token(Token = "0x4002DC0")]
			BASE_Master_Transmit_0x10 = 0x10,
			[Token(Token = "0x4002DC1")]
			ADV_Shared_0x20 = 0x20,
			[Token(Token = "0x4002DC2")]
			ADV_TxRx_Only_or_RxAlwaysWildCard_0x40 = 0x40
		}

		[Token(Token = "0x2000714")]
		[Flags]
		public enum ChannelTypeExtended : byte
		{
			[Token(Token = "0x4002DC4")]
			ADV_AlwaysSearch_0x01 = 1,
			[Token(Token = "0x4002DC5")]
			ADV_FrequencyAgility_0x04 = 4,
			[Token(Token = "0x4002DC6")]
			ADV_FastStart_0x10 = 0x10,
			[Token(Token = "0x4002DC7")]
			ADV_AsyncTx_0x20 = 0x20
		}

		[Token(Token = "0x2000715")]
		public enum MessagingReturnCode
		{
			[Token(Token = "0x4002DC9")]
			Fail,
			[Token(Token = "0x4002DCA")]
			Pass,
			[Token(Token = "0x4002DCB")]
			Timeout,
			[Token(Token = "0x4002DCC")]
			Cancelled,
			[Token(Token = "0x4002DCD")]
			InvalidParams
		}

		[Token(Token = "0x2000716")]
		public enum BasicChannelStatusCode : byte
		{
			[Token(Token = "0x4002DCF")]
			UNASSIGNED_0x0,
			[Token(Token = "0x4002DD0")]
			ASSIGNED_0x1,
			[Token(Token = "0x4002DD1")]
			SEARCHING_0x2,
			[Token(Token = "0x4002DD2")]
			TRACKING_0x3
		}

		[Token(Token = "0x2000717")]
		public enum TransmitPower : byte
		{
			[Token(Token = "0x4002DD4")]
			RADIO_TX_POWER_MINUS20DB_0x00,
			[Token(Token = "0x4002DD5")]
			RADIO_TX_POWER_MINUS10DB_0x01,
			[Token(Token = "0x4002DD6")]
			RADIO_TX_POWER_MINUS5DB_0x02,
			[Token(Token = "0x4002DD7")]
			RADIO_TX_POWER_0DB_0x03
		}

		[Token(Token = "0x2000718")]
		public enum StartupMessage : byte
		{
			[Token(Token = "0x4002DD9")]
			RESET_POR_0x00 = 0,
			[Token(Token = "0x4002DDA")]
			RESET_RST_0x01 = 1,
			[Token(Token = "0x4002DDB")]
			RESET_WDT_0x02 = 2,
			[Token(Token = "0x4002DDC")]
			RESET_CMD_0x20 = 0x20,
			[Token(Token = "0x4002DDD")]
			RESET_SYNC_0x40 = 0x40,
			[Token(Token = "0x4002DDE")]
			RESET_SUSPEND_0x80 = 0x80
		}

		[Token(Token = "0x2000719")]
		public enum RequestMessageID : byte
		{
			[Token(Token = "0x4002DE0")]
			VERSION_0x3E = 62,
			[Token(Token = "0x4002DE1")]
			CHANNEL_ID_0x51 = 81,
			[Token(Token = "0x4002DE2")]
			CHANNEL_STATUS_0x52 = 82,
			[Token(Token = "0x4002DE3")]
			CAPABILITIES_0x54 = 84,
			[Token(Token = "0x4002DE4")]
			SERIAL_NUMBER_0x61 = 97,
			[Token(Token = "0x4002DE5")]
			USER_NVM_0x7C = 124
		}

		[Token(Token = "0x200071A")]
		public enum SensRcoreScriptCommandCodes : byte
		{
			[Token(Token = "0x4002DE7")]
			SCRIPT_CMD_FORMAT_0x00,
			[Token(Token = "0x4002DE8")]
			SCRIPT_CMD_DUMP_0x01,
			[Token(Token = "0x4002DE9")]
			SCRIPT_CMD_SET_DEFAULT_SECTOR_0x02,
			[Token(Token = "0x4002DEA")]
			SCRIPT_CMD_END_SECTOR_0x03,
			[Token(Token = "0x4002DEB")]
			SCRIPT_CMD_END_DUMP_0x04,
			[Token(Token = "0x4002DEC")]
			SCRIPT_CMD_LOCK_0x05
		}

		[Token(Token = "0x200071B")]
		[Flags]
		public enum LibConfigFlags
		{
			[Token(Token = "0x4002DEE")]
			RADIO_CONFIG_ALWAYS_0x01 = 1,
			[Token(Token = "0x4002DEF")]
			MESG_OUT_INC_TIME_STAMP_0x20 = 0x20,
			[Token(Token = "0x4002DF0")]
			MESG_OUT_INC_RSSI_0x40 = 0x40,
			[Token(Token = "0x4002DF1")]
			MESG_OUT_INC_DEVICE_ID_0x80 = 0x80
		}

		[Token(Token = "0x200071C")]
		[Flags]
		public enum AdvancedBurstConfigFlags : uint
		{
			[Token(Token = "0x4002DF3")]
			FREQUENCY_HOP_ENABLE = 1u
		}

		[Token(Token = "0x200071D")]
		public enum EncryptedChannelMode : byte
		{
			[Token(Token = "0x4002DF5")]
			DISABLE,
			[Token(Token = "0x4002DF6")]
			ENABLE,
			[Token(Token = "0x4002DF7")]
			ENABLE_USER_INFO
		}

		[Token(Token = "0x200071E")]
		public enum EncryptionInfo : byte
		{
			[Token(Token = "0x4002DF9")]
			ENCRYPTION_ID,
			[Token(Token = "0x4002DFA")]
			USER_INFO_STRING,
			[Token(Token = "0x4002DFB")]
			RANDOM_NUMBER_SEED
		}

		[Token(Token = "0x200071F")]
		public enum EncryptionNVMOp : byte
		{
			[Token(Token = "0x4002DFD")]
			LOAD_KEY_FROM_NVM,
			[Token(Token = "0x4002DFE")]
			STORE_KEY_TO_NVM
		}

		[Token(Token = "0x2000720")]
		[Flags]
		public enum EventBufferConfig : byte
		{
			[Token(Token = "0x4002E00")]
			BUFFER_LOW_PRIORITY_EVENTS = 0,
			[Token(Token = "0x4002E01")]
			BUFFER_ALL_EVENTS = 1
		}

		[Token(Token = "0x2000721")]
		public enum ANTMessageID : byte
		{
			[Token(Token = "0x4002E03")]
			INVALID_0x00 = 0,
			[Token(Token = "0x4002E04")]
			EVENT_0x01 = 1,
			[Token(Token = "0x4002E05")]
			VERSION_0x3E = 62,
			[Token(Token = "0x4002E06")]
			RESPONSE_EVENT_0x40 = 64,
			[Token(Token = "0x4002E07")]
			UNASSIGN_CHANNEL_0x41 = 65,
			[Token(Token = "0x4002E08")]
			ASSIGN_CHANNEL_0x42 = 66,
			[Token(Token = "0x4002E09")]
			CHANNEL_MESG_PERIOD_0x43 = 67,
			[Token(Token = "0x4002E0A")]
			CHANNEL_SEARCH_TIMEOUT_0x44 = 68,
			[Token(Token = "0x4002E0B")]
			CHANNEL_RADIO_FREQ_0x45 = 69,
			[Token(Token = "0x4002E0C")]
			NETWORK_KEY_0x46 = 70,
			[Token(Token = "0x4002E0D")]
			RADIO_TX_POWER_0x47 = 71,
			[Token(Token = "0x4002E0E")]
			RADIO_CW_MODE_0x48 = 72,
			[Token(Token = "0x4002E0F")]
			SYSTEM_RESET_0x4A = 74,
			[Token(Token = "0x4002E10")]
			OPEN_CHANNEL_0x4B = 75,
			[Token(Token = "0x4002E11")]
			CLOSE_CHANNEL_0x4C = 76,
			[Token(Token = "0x4002E12")]
			REQUEST_0x4D = 77,
			[Token(Token = "0x4002E13")]
			BROADCAST_DATA_0x4E = 78,
			[Token(Token = "0x4002E14")]
			ACKNOWLEDGED_DATA_0x4F = 79,
			[Token(Token = "0x4002E15")]
			BURST_DATA_0x50 = 80,
			[Token(Token = "0x4002E16")]
			CHANNEL_ID_0x51 = 81,
			[Token(Token = "0x4002E17")]
			CHANNEL_STATUS_0x52 = 82,
			[Token(Token = "0x4002E18")]
			RADIO_CW_INIT_0x53 = 83,
			[Token(Token = "0x4002E19")]
			CAPABILITIES_0x54 = 84,
			[Token(Token = "0x4002E1A")]
			STACKLIMIT_0x55 = 85,
			[Token(Token = "0x4002E1B")]
			SCRIPT_DATA_0x56 = 86,
			[Token(Token = "0x4002E1C")]
			SCRIPT_CMD_0x57 = 87,
			[Token(Token = "0x4002E1D")]
			ID_LIST_ADD_0x59 = 89,
			[Token(Token = "0x4002E1E")]
			ID_LIST_CONFIG_0x5A = 90,
			[Token(Token = "0x4002E1F")]
			OPEN_RX_SCAN_0x5B = 91,
			[Token(Token = "0x4002E20")]
			EXT_BROADCAST_DATA_0x5D = 93,
			[Token(Token = "0x4002E21")]
			EXT_ACKNOWLEDGED_DATA_0x5E = 94,
			[Token(Token = "0x4002E22")]
			EXT_BURST_DATA_0x5F = 95,
			[Token(Token = "0x4002E23")]
			CHANNEL_RADIO_TX_POWER_0x60 = 96,
			[Token(Token = "0x4002E24")]
			GET_SERIAL_NUM_0x61 = 97,
			[Token(Token = "0x4002E25")]
			GET_TEMP_CAL_0x62 = 98,
			[Token(Token = "0x4002E26")]
			SET_LP_SEARCH_TIMEOUT_0x63 = 99,
			[Token(Token = "0x4002E27")]
			SERIAL_NUM_SET_CHANNEL_ID_0x65 = 101,
			[Token(Token = "0x4002E28")]
			RX_EXT_MESGS_ENABLE_0x66 = 102,
			[Token(Token = "0x4002E29")]
			ENABLE_LED_FLASH_0x68 = 104,
			[Token(Token = "0x4002E2A")]
			XTAL_ENABLE_0x6D = 109,
			[Token(Token = "0x4002E2B")]
			STARTUP_MESG_0x6F = 111,
			[Token(Token = "0x4002E2C")]
			AUTO_FREQ_CONFIG_0x70 = 112,
			[Token(Token = "0x4002E2D")]
			PROX_SEARCH_CONFIG_0x71 = 113,
			[Token(Token = "0x4002E2E")]
			ADV_BURST_DATA_0x72 = 114,
			[Token(Token = "0x4002E2F")]
			EVENT_BUFFER_CONFIG_0x74 = 116,
			[Token(Token = "0x4002E30")]
			HIGH_DUTY_SEARCH_CONFIG_0x77 = 119,
			[Token(Token = "0x4002E31")]
			ADV_BURST_CONFIG_0x78 = 120,
			[Token(Token = "0x4002E32")]
			EVENT_FILTER_CONFIG_0x79 = 121,
			[Token(Token = "0x4002E33")]
			FIT1_SET_AGC_0x8F = 143,
			[Token(Token = "0x4002E34")]
			FIT1_SET_EQUIP_STATE_0x91 = 145,
			[Token(Token = "0x4002E35")]
			SET_CHANNEL_INPUT_MASK_0x90 = 144,
			[Token(Token = "0x4002E36")]
			SET_CHANNEL_DATA_TYPE_0x91 = 145,
			[Token(Token = "0x4002E37")]
			READ_PINS_FOR_SECT_0x92 = 146,
			[Token(Token = "0x4002E38")]
			TIMER_SELECT_0x93 = 147,
			[Token(Token = "0x4002E39")]
			ATOD_SETTINGS_0x94 = 148,
			[Token(Token = "0x4002E3A")]
			SET_SHARED_ADDRESS_0x95 = 149,
			[Token(Token = "0x4002E3B")]
			RSSI_POWER_0xC0 = 192,
			[Token(Token = "0x4002E3C")]
			RSSI_BROADCAST_DATA_0xC1 = 193,
			[Token(Token = "0x4002E3D")]
			RSSI_ACKNOWLEDGED_DATA_0xC2 = 194,
			[Token(Token = "0x4002E3E")]
			RSSI_BURST_DATA_0xC3 = 195,
			[Token(Token = "0x4002E3F")]
			RSSI_SEARCH_THRESHOLD_0xC4 = 196,
			[Token(Token = "0x4002E40")]
			SLEEP_0xC5 = 197,
			[Token(Token = "0x4002E41")]
			SET_USB_INFO_0xC7 = 199
		}

		[Token(Token = "0x2000722")]
		public enum ANTEventID : byte
		{
			[Token(Token = "0x4002E43")]
			RESPONSE_NO_ERROR_0x00 = 0,
			[Token(Token = "0x4002E44")]
			NO_EVENT_0x00 = 0,
			[Token(Token = "0x4002E45")]
			EVENT_RX_SEARCH_TIMEOUT_0x01 = 1,
			[Token(Token = "0x4002E46")]
			EVENT_RX_FAIL_0x02 = 2,
			[Token(Token = "0x4002E47")]
			EVENT_TX_0x03 = 3,
			[Token(Token = "0x4002E48")]
			EVENT_TRANSFER_RX_FAILED_0x04 = 4,
			[Token(Token = "0x4002E49")]
			EVENT_TRANSFER_TX_COMPLETED_0x05 = 5,
			[Token(Token = "0x4002E4A")]
			EVENT_TRANSFER_TX_FAILED_0x06 = 6,
			[Token(Token = "0x4002E4B")]
			EVENT_CHANNEL_CLOSED_0x07 = 7,
			[Token(Token = "0x4002E4C")]
			EVENT_RX_FAIL_GO_TO_SEARCH_0x08 = 8,
			[Token(Token = "0x4002E4D")]
			EVENT_CHANNEL_COLLISION_0x09 = 9,
			[Token(Token = "0x4002E4E")]
			EVENT_TRANSFER_TX_START_0x0A = 10,
			[Token(Token = "0x4002E4F")]
			EVENT_CHANNEL_ACTIVE_0x0F = 15,
			[Token(Token = "0x4002E50")]
			EVENT_TRANSFER_TX_COMPLETED_RSSI_0x10 = 16,
			[Token(Token = "0x4002E51")]
			CHANNEL_IN_WRONG_STATE_0x15 = 21,
			[Token(Token = "0x4002E52")]
			CHANNEL_NOT_OPENED_0x16 = 22,
			[Token(Token = "0x4002E53")]
			CHANNEL_ID_NOT_SET_0x18 = 24,
			[Token(Token = "0x4002E54")]
			CLOSE_ALL_CHANNELS_0x19 = 25,
			[Token(Token = "0x4002E55")]
			TRANSFER_IN_PROGRESS_0x1F = 31,
			[Token(Token = "0x4002E56")]
			TRANSFER_SEQUENCE_NUMBER_ERROR_0x20 = 32,
			[Token(Token = "0x4002E57")]
			TRANSFER_IN_ERROR_0x21 = 33,
			[Token(Token = "0x4002E58")]
			TRANSFER_BUSY_0x22 = 34,
			[Token(Token = "0x4002E59")]
			MESSAGE_SIZE_EXCEEDS_LIMIT_0x27 = 39,
			[Token(Token = "0x4002E5A")]
			INVALID_MESSAGE_0x28 = 40,
			[Token(Token = "0x4002E5B")]
			INVALID_NETWORK_NUMBER_0x29 = 41,
			[Token(Token = "0x4002E5C")]
			INVALID_LIST_ID_0x30 = 48,
			[Token(Token = "0x4002E5D")]
			INVALID_SCAN_TX_CHANNEL_0x31 = 49,
			[Token(Token = "0x4002E5E")]
			INVALID_PARAMETER_PROVIDED_0x33 = 51,
			[Token(Token = "0x4002E5F")]
			EVENT_QUE_OVERFLOW_0x35 = 53,
			[Token(Token = "0x4002E60")]
			SCRIPT_FULL_ERROR_0x40 = 64,
			[Token(Token = "0x4002E61")]
			SCRIPT_WRITE_ERROR_0x41 = 65,
			[Token(Token = "0x4002E62")]
			SCRIPT_INVALID_PAGE_ERROR_0x42 = 66,
			[Token(Token = "0x4002E63")]
			SCRIPT_LOCKED_ERROR_0x43 = 67,
			[Token(Token = "0x4002E64")]
			FIT_ACTIVE_SEARCH_TIMEOUT_0x60 = 96,
			[Token(Token = "0x4002E65")]
			FIT_WATCH_PAIR_0x61 = 97,
			[Token(Token = "0x4002E66")]
			FIT_WATCH_UNPAIR_0x62 = 98
		}

		[Token(Token = "0x2000723")]
		public enum USB_PID : ushort
		{
			[Token(Token = "0x4002E68")]
			ANT_INTERFACE_BOARD = 16642,
			[Token(Token = "0x4002E69")]
			ANT_ARCT
		}

		[Token(Token = "0x4001BC9")]
		public const byte MAX_MESG_SIZE = 41;

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x2ABC620", Offset = "0x2ABC620", VA = "0x2ABC620")]
		private ANT_ReferenceLibrary()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class ANT_Response
	{
		[Token(Token = "0x2000724")]
		private enum extMsgParts
		{
			[Token(Token = "0x4002E6B")]
			DataPayload,
			[Token(Token = "0x4002E6C")]
			DeviceID
		}

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB0C")]
		public object sender;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte antChannel;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DateTime timeReceived;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte responseID;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x532A")]
		public byte[] messageContents;

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x2AA52C0", Offset = "0x2AA52C0", VA = "0x2AA52C0")]
		internal ANT_Response(object sender, byte antChannel, DateTime timeReceived, byte IDcode, byte[] messageContents)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x2ABC6E0", Offset = "0x2ABC6E0", VA = "0x2ABC6E0")]
		public ANT_ReferenceLibrary.ANTEventID getChannelEventCode()
		{
			return default(ANT_ReferenceLibrary.ANTEventID);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x2ABC818", Offset = "0x2ABC818", VA = "0x2ABC818")]
		public ANT_ReferenceLibrary.ANTMessageID getMessageID()
		{
			return default(ANT_ReferenceLibrary.ANTMessageID);
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x2ABC950", Offset = "0x2ABC950", VA = "0x2ABC950")]
		public byte[] getDataPayload()
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x2ABD090", Offset = "0x2ABD090", VA = "0x2ABD090")]
		public byte getBurstSequenceNumber()
		{
			return default(byte);
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x2ABD21C", Offset = "0x2ABD21C", VA = "0x2ABD21C")]
		public ANT_ChannelID getDeviceIDfromExt()
		{
			return default(ANT_ChannelID);
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x2ABD558", Offset = "0x2ABD558", VA = "0x2ABD558")]
		public bool isExtended()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x2ABCB10", Offset = "0x2ABCB10", VA = "0x2ABCB10")]
		private byte[] splitExtMessage(extMsgParts whichPart)
		{
			return null;
		}
	}
	[Token(Token = "0x2000422")]
	public static class ANT_VersionInfo
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string applicationCode;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string versionSuffix;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5332")]
		public static string versionNumberLastChangedOn;

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x2ABD5EC", Offset = "0x2ABD5EC", VA = "0x2ABD5EC")]
		public static string getManagedLibraryVersion()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x2ABD784", Offset = "0x2ABD784", VA = "0x2ABD784")]
		private static extern IntPtr getUnmanagedVersion();

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x2ABD874", Offset = "0x2ABD874", VA = "0x2ABD874")]
		public static string getUnmanagedLibraryVersion()
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	public delegate void dDeviceNotificationHandler(ANT_Device.DeviceNotificationCode notification, object notificationInfo);
	[Token(Token = "0x2000424")]
	public delegate void dRawChannelResponseHandler(ANT_Device.ANTMessage message, ushort messageSize);
	[Token(Token = "0x2000425")]
	public delegate void dChannelResponseHandler(ANT_Response response);
	[Token(Token = "0x2000426")]
	public interface IANT_Channel : IDisposable
	{
		[Token(Token = "0x1400002A")]
		event dDeviceNotificationHandler DeviceNotification;

		[Token(Token = "0x1400002B")]
		event dRawChannelResponseHandler rawChannelResponse;

		[Token(Token = "0x1400002C")]
		event dChannelResponseHandler channelResponse;

		[Token(Token = "0x6001F6B")]
		IntPtr getUnmgdFramer();

		[Token(Token = "0x6001F6C")]
		byte getChannelNum();

		[Token(Token = "0x6001F73")]
		ANT_ChannelStatus requestStatus(uint responseWaitTime);

		[Token(Token = "0x6001F74")]
		ANT_ChannelID requestID(uint responseWaitTime);

		[Token(Token = "0x6001F75")]
		bool assignChannel(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber, uint responseWaitTime);

		[Token(Token = "0x6001F76")]
		bool assignChannelExt(ANT_ReferenceLibrary.ChannelType channelTypeByte, byte networkNumber, ANT_ReferenceLibrary.ChannelTypeExtended extAssignByte, uint responseWaitTime);

		[Token(Token = "0x6001F77")]
		bool unassignChannel(uint responseWaitTime);

		[Token(Token = "0x6001F78")]
		bool setChannelID(ushort deviceNumber, bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID, uint responseWaitTime);

		[Token(Token = "0x6001F79")]
		bool setChannelID_UsingSerial(bool pairingEnabled, byte deviceTypeID, byte transmissionTypeID, uint waitResponseTime);

		[Token(Token = "0x6001F7A")]
		bool setChannelPeriod(ushort messagePeriod_32768unitspersecond, uint responseWaitTime);

		[Token(Token = "0x6001F7B")]
		bool setSearchThresholdRSSI(byte thresholdRSSI, uint responseWaitTime);

		[Token(Token = "0x6001F7C")]
		bool setChannelFreq(byte RFFreqOffset, uint responseWaitTime);

		[Token(Token = "0x6001F7D")]
		bool setChannelTransmitPower(ANT_ReferenceLibrary.TransmitPower transmitPower, uint responseWaitTime);

		[Token(Token = "0x6001F7E")]
		bool setChannelSearchTimeout(byte searchTimeout, uint responseWaitTime);

		[Token(Token = "0x6001F7F")]
		bool openChannel(uint responseWaitTime);

		[Token(Token = "0x6001F80")]
		bool sendBroadcastData(byte[] data);

		[Token(Token = "0x6001F81")]
		ANT_ReferenceLibrary.MessagingReturnCode sendAcknowledgedData(byte[] data, uint ackWaitTime);

		[Token(Token = "0x6001F82")]
		ANT_ReferenceLibrary.MessagingReturnCode sendBurstTransfer(byte[] data, uint completeWaitTime);

		[Token(Token = "0x6001F83")]
		bool sendExtBroadcastData(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data);

		[Token(Token = "0x6001F84")]
		ANT_ReferenceLibrary.MessagingReturnCode sendExtAcknowledgedData(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data, uint ackWaitTime);

		[Token(Token = "0x6001F85")]
		ANT_ReferenceLibrary.MessagingReturnCode sendExtBurstTransfer(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte[] data, uint completeWaitTime);

		[Token(Token = "0x6001F86")]
		bool closeChannel(uint responseWaitTime);

		[Token(Token = "0x6001F87")]
		bool setLowPrioritySearchTimeout(byte lowPriorityTimeout, uint responseWaitTime);

		[Token(Token = "0x6001F88")]
		bool includeExcludeList_addChannel(ushort deviceNumber, byte deviceTypeID, byte transmissionTypeID, byte listIndex, uint responseWaitTime);

		[Token(Token = "0x6001F89")]
		bool includeExcludeList_Configure(byte listSize, bool isExclusionList, uint responseWaitTime);

		[Token(Token = "0x6001F8A")]
		bool setProximitySearch(byte thresholdBin, uint responseWaitTime);

		[Token(Token = "0x6001F8B")]
		bool configFrequencyAgility(byte freq1, byte freq2, byte freq3, uint responseWaitTime);
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000427")]
	public class CameraFly : MonoBehaviour
	{
		[Token(Token = "0x2000725")]
		private class CameraState
		{
			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD50284")]
			public float yaw;

			[Token(Token = "0x4002E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float pitch;

			[Token(Token = "0x4002E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float roll;

			[Token(Token = "0x4002E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4002E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5342")]
			public float y;

			[Token(Token = "0x4002E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float z;

			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0x24CCB10", Offset = "0x24CCB10", VA = "0x24CCB10")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0x24CDBC8", Offset = "0x24CDBC8", VA = "0x24CDBC8")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0x24CDE44", Offset = "0x24CDE44", VA = "0x24CDE44")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0x24CE180", Offset = "0x24CE180", VA = "0x24CE180")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0x24CE590", Offset = "0x24CE590", VA = "0x24CE590")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5027C")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06018", Offset = "0xC06018")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC06018", Offset = "0xC06018")]
		public float boost;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC060C4", Offset = "0xC060C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC060C4", Offset = "0xC060C4")]
		public float positionLerpTime;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06168", Offset = "0xC06168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC06168", Offset = "0xC06168")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x533A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC06214", Offset = "0xC06214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xC06214", Offset = "0xC06214")]
		public float rotationLerpTime;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC062B8", Offset = "0xC062B8")]
		public bool invertY;

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x24CCA80", Offset = "0x24CCA80", VA = "0x24CCA80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x24CCCFC", Offset = "0x24CCCFC", VA = "0x24CCCFC")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x24CD364", Offset = "0x24CD364", VA = "0x24CD364")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x24CE2B8", Offset = "0x24CE2B8", VA = "0x24CE2B8")]
		public CameraFly()
		{
		}
	}
}
namespace powerbeatsvr
{
	[Token(Token = "0x2000428")]
	public class LaserPointerScriptable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1374", Offset = "0xBE1374")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TweenCallback <>9__21_0;

			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0x18C8794", Offset = "0x18C8794", VA = "0x18C8794")]
			public <>c()
			{
			}

			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0x18C87C4", Offset = "0x18C87C4", VA = "0x18C87C4")]
			internal void <DoClick>b__21_0()
			{
			}
		}

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5028C")]
		[SerializeField]
		private Transform beam;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float dotOffsetX;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float dotOffsetY;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject laserPoint;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x534A")]
		private Ray laserBeamRay;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 laserPointStart;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50294")]
		private Vector3 hitPositionIn3D;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VRInputCanvas canvas;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit hit;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int layerMask;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5352")]
		private float xCorrectionForControllerRotation;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float yCorrectionForControllerRotation;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5029C")]
		private float rigScale;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float controlX;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float controlY;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isIncognito;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x535A")]
		private PlayableDirector director;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<LLManager.HandSide, Transform> fingerTips;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502A4")]
		private LaserPointer origPointer;

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x18C68C0", Offset = "0x18C68C0", VA = "0x18C68C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x18C6EDC", Offset = "0x18C6EDC", VA = "0x18C6EDC")]
		public void SetRigScale(float scale)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x18C6F14", Offset = "0x18C6F14", VA = "0x18C6F14")]
		public void DoClick()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x18C72E0", Offset = "0x18C72E0", VA = "0x18C72E0")]
		public void DoMouseDown()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x18C73E0", Offset = "0x18C73E0", VA = "0x18C73E0")]
		public void DoMouseUp()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x18C74E0", Offset = "0x18C74E0", VA = "0x18C74E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x18C81E4", Offset = "0x18C81E4", VA = "0x18C81E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x18C844C", Offset = "0x18C844C", VA = "0x18C844C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x18C8630", Offset = "0x18C8630", VA = "0x18C8630")]
		public LaserPointerScriptable()
		{
		}
	}
	[Token(Token = "0x2000429")]
	[ExecuteAlways]
	public class LaserTarget : MonoBehaviour
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LaserPointerScriptable lps;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5362")]
		[SerializeField]
		private bool isIncognito;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x18C8814", Offset = "0x18C8814", VA = "0x18C8814")]
		public void DoClick()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x18C885C", Offset = "0x18C885C", VA = "0x18C885C")]
		public void DoMouseDown()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x18C88A4", Offset = "0x18C88A4", VA = "0x18C88A4")]
		public void DoMouseUp()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x18C88EC", Offset = "0x18C88EC", VA = "0x18C88EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x18C8998", Offset = "0x18C8998", VA = "0x18C8998")]
		public LaserTarget()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class PlaylistAutomator : MonoBehaviour
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Menu menu;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502AC")]
		[SerializeField]
		private PlaylistAdjuster playlistAdjuster;

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1761344", Offset = "0x1761344", VA = "0x1761344")]
		public void PreparePlaylist()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x17615F0", Offset = "0x17615F0", VA = "0x17615F0")]
		public PlaylistAutomator()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class SongListHighlighting : MonoBehaviour
	{
		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE13B0", Offset = "0xBE13B0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5372")]
			public int index;

			[Token(Token = "0x4002E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SongListHighlighting <>4__this;

			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0x17525C8", Offset = "0x17525C8", VA = "0x17525C8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x1752B28", Offset = "0x1752B28", VA = "0x1752B28")]
			internal void <Update>b__2()
			{
			}
		}

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuToggleButton volume1Button;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuToggleButton volume2Button;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuToggleButton localButton;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x536A")]
		[SerializeField]
		private SongFileListManager fileListManager;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private OfficialSongListManager officialSongListManager;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502B4")]
		[SerializeField]
		private float startDelayTime;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float volumeSelectTime;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float songSelectTime;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string localDir;

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x17521AC", Offset = "0x17521AC", VA = "0x17521AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x17525F8", Offset = "0x17525F8", VA = "0x17525F8")]
		public void SetupSongList()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1752720", Offset = "0x1752720", VA = "0x1752720")]
		public void ScrollToSecondPage()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x17527EC", Offset = "0x17527EC", VA = "0x17527EC")]
		public void SelectSecondSongPack()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1752920", Offset = "0x1752920", VA = "0x1752920")]
		public void PrepareLocalSongs()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1752A68", Offset = "0x1752A68", VA = "0x1752A68")]
		public SongListHighlighting()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1752A98", Offset = "0x1752A98", VA = "0x1752A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23AA4", Offset = "0xC23AA4")]
		private void <Update>b__9_0()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1752AE0", Offset = "0x1752AE0", VA = "0x1752AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23AE0", Offset = "0xC23AE0")]
		private void <Update>b__9_1()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class WeaponTooltipDisabler : MonoBehaviour
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502BC")]
		[SerializeField]
		private List<MenuToggleButton> buttons;

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1912870", Offset = "0x1912870", VA = "0x1912870")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1912B78", Offset = "0x1912B78", VA = "0x1912B78")]
		public WeaponTooltipDisabler()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class LLControllerImpl : LLController
	{
		[Token(Token = "0x2000728")]
		private class PulseConfiguration
		{
			[Token(Token = "0x4002E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5381")]
			internal float hapticStrength;

			[Token(Token = "0x4002E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal int hapticLength;

			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0x18B9968", Offset = "0x18B9968", VA = "0x18B9968")]
			public PulseConfiguration(float hapticStrength, int hapticLength)
			{
			}
		}

		[Token(Token = "0x2000729")]
		private class ButtonActionMapping
		{
			[Token(Token = "0x4002E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD502C4")]
			public InputFeatureUsage<bool> button;

			[Token(Token = "0x4002E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool oldValue;

			[Token(Token = "0x4002E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action onPress;

			[Token(Token = "0x4002E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action onRelease;

			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0x18BA338", Offset = "0x18BA338", VA = "0x18BA338")]
			public ButtonActionMapping()
			{
			}
		}

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LLManager.HandSide side;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InputDevice device;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<InputFeatureUsage<bool>, bool> buttonStates;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x537A")]
		private ButtonActionMapping[] buttonActions;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private JoystickPosition joystickPosition;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB14")]
		private float joystickRepetitionTimeout;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<PulseType, PulseConfiguration> pulseConfigurations;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float JOYSTICK_HORIZONTAL_REP_TIMEOUT;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float JOYSTICK_VERTICAL_REP_TIMEOUT;

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x18B9780", Offset = "0x18B9780", VA = "0x18B9780")]
		static LLControllerImpl()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x18B99C8", Offset = "0x18B99C8", VA = "0x18B99C8")]
		public LLControllerImpl(LLManager.HandSide side)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x18BA368", Offset = "0x18BA368", VA = "0x18BA368", Slot = "8")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x18BA684", Offset = "0x18BA684", VA = "0x18BA684", Slot = "7")]
		public override void Update(Transform controllerTransform)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x18BB380", Offset = "0x18BB380", VA = "0x18BB380")]
		private static JoystickPosition CheckVector(Vector2 snapturnvector, Vector2 verticalturnvector)
		{
			return default(JoystickPosition);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x18BB574", Offset = "0x18BB574", VA = "0x18BB574", Slot = "5")]
		public override void DoHapticPulse(PulseType type)
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x18BB788", Offset = "0x18BB788", VA = "0x18BB788", Slot = "6")]
		public override ControllerVelocity GetControllerVelocity(Transform playArea)
		{
			return default(ControllerVelocity);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x18BB9D0", Offset = "0x18BB9D0", VA = "0x18BB9D0", Slot = "13")]
		internal override Position GetControllerPosition_Internal()
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x18BBB8C", Offset = "0x18BBB8C", VA = "0x18BBB8C", Slot = "10")]
		public override void SetTestValues(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x18BBBEC", Offset = "0x18BBBEC", VA = "0x18BBBEC", Slot = "9")]
		public override JoystickPosition GetJoystickPosition()
		{
			return default(JoystickPosition);
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x18BBC1C", Offset = "0x18BBC1C", VA = "0x18BBC1C", Slot = "4")]
		public override VRControllerType GetControllerType()
		{
			return default(VRControllerType);
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x18BBC38", Offset = "0x18BBC38", VA = "0x18BBC38", Slot = "11")]
		public override GameObject GetVisualControllerRepresentation(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x18BBCE4", Offset = "0x18BBCE4", VA = "0x18BBCE4", Slot = "12")]
		public override void ConfigureVisualControllerRepresentation(GameObject model)
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class LLHeadsetImpl : LLHeadset
	{
		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE13EC", Offset = "0xBE13EC")]
		private sealed class <FadeToLoadingScreen>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LLHeadsetImpl <>4__this;

			[Token(Token = "0x4002E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5391")]
			public GameObject loadingScreen;

			[Token(Token = "0x17000568")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FD8")]
				[Address(RVA = "0x18BD2A8", Offset = "0x18BD2A8", VA = "0x18BD2A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000569")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FDA")]
				[Address(RVA = "0x18BD378", Offset = "0x18BD378", VA = "0x18BD378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0x18BC8E0", Offset = "0x18BC8E0", VA = "0x18BC8E0")]
			[DebuggerHidden]
			public <FadeToLoadingScreen>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0x18BCEA0", Offset = "0x18BCEA0", VA = "0x18BCEA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FD7")]
			[Address(RVA = "0x18BCEB4", Offset = "0x18BCEB4", VA = "0x18BCEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD9")]
			[Address(RVA = "0x18BD2D8", Offset = "0x18BD2D8", VA = "0x18BD2D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1428", Offset = "0xBE1428")]
		private sealed class <FadeBackToSceneView>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD502D4")]
			private object <>2__current;

			[Token(Token = "0x4002E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LLHeadsetImpl <>4__this;

			[Token(Token = "0x1700056A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FDE")]
				[Address(RVA = "0x18BCDA0", Offset = "0x18BCDA0", VA = "0x18BCDA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE0")]
				[Address(RVA = "0x18BCE70", Offset = "0x18BCE70", VA = "0x18BCE70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FDB")]
			[Address(RVA = "0x18BC9E4", Offset = "0x18BC9E4", VA = "0x18BC9E4")]
			[DebuggerHidden]
			public <FadeBackToSceneView>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0x18BCB50", Offset = "0x18BCB50", VA = "0x18BCB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FDD")]
			[Address(RVA = "0x18BCB64", Offset = "0x18BCB64", VA = "0x18BCB64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FDF")]
			[Address(RVA = "0x18BCDD0", Offset = "0x18BCDD0", VA = "0x18BCDD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5389")]
		private bool updated;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private PXR_Manager manager;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502CC")]
		private GameObject loadingScreen;

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x18BC12C", Offset = "0x18BC12C", VA = "0x18BC12C", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x18BC6C4", Offset = "0x18BC6C4", VA = "0x18BC6C4", Slot = "8")]
		public override FlatRect GetPlayAreaSize()
		{
			return default(FlatRect);
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x18BC734", Offset = "0x18BC734", VA = "0x18BC734", Slot = "9")]
		public override Vector3[] GetPlayAreaPoints()
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x18BC7B8", Offset = "0x18BC7B8", VA = "0x18BC7B8", Slot = "15")]
		public override void Update(Transform playAreaTransform)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x18BC7D0", Offset = "0x18BC7D0", VA = "0x18BC7D0", Slot = "16")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x18BC7E4", Offset = "0x18BC7E4", VA = "0x18BC7E4", Slot = "17")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x18BC7F8", Offset = "0x18BC7F8", VA = "0x18BC7F8", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23B1C", Offset = "0xC23B1C")]
		public override IEnumerator FadeToLoadingScreen(GameObject loadingScreen, float cameraVectorY)
		{
			return null;
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x18BC928", Offset = "0x18BC928", VA = "0x18BC928", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23BCC", Offset = "0xC23BCC")]
		public override IEnumerator FadeBackToSceneView()
		{
			return null;
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x18BCA2C", Offset = "0x18BCA2C", VA = "0x18BCA2C", Slot = "14")]
		public override bool Calibrate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x18BCA50", Offset = "0x18BCA50", VA = "0x18BCA50", Slot = "12")]
		public override VRMiddlewareType GetVRMiddlewareType()
		{
			return default(VRMiddlewareType);
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x18BCA6C", Offset = "0x18BCA6C", VA = "0x18BCA6C", Slot = "13")]
		public override VRHeadsetType GetVRHeadsetType()
		{
			return default(VRHeadsetType);
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x18BCA88", Offset = "0x18BCA88", VA = "0x18BCA88", Slot = "18")]
		public override void SetTestValues(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x18BCAE8", Offset = "0x18BCAE8", VA = "0x18BCAE8", Slot = "19")]
		public override void ActivateFixedFoveation(bool shouldFoveate)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x18BCB08", Offset = "0x18BCB08", VA = "0x18BCB08", Slot = "20")]
		public override void SetFixedFoveationLevel(Foveation level)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x18BCB20", Offset = "0x18BCB20", VA = "0x18BCB20")]
		public LLHeadsetImpl()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class PicoSystemService : MonoBehaviour
	{
		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1825898", Offset = "0x1825898", VA = "0x1825898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x18258FC", Offset = "0x18258FC", VA = "0x18258FC")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1825928", Offset = "0x1825928", VA = "0x1825928")]
		private void BoolCallback(string value)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1825BF4", Offset = "0x1825BF4", VA = "0x1825BF4")]
		private void IntCallback(string value)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1825E40", Offset = "0x1825E40", VA = "0x1825E40")]
		private void LongCallback(string value)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x1826094", Offset = "0x1826094", VA = "0x1826094")]
		private void StringCallback(string value)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x18262C8", Offset = "0x18262C8", VA = "0x18262C8")]
		public void toBServiceBind(string s)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x18263C4", Offset = "0x18263C4", VA = "0x18263C4")]
		public PicoSystemService()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class LLPlatformImpl : LLPlatform
	{
		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1464", Offset = "0xBE1464")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string username;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53A1")]
			public Action<UpdateUserTitleDisplayNameResult> <>9__2;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Action<PlayFabError> <>9__3;

			[Token(Token = "0x6002FE1")]
			[Address(RVA = "0x18BF4C8", Offset = "0x18BF4C8", VA = "0x18BF4C8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002FE2")]
			[Address(RVA = "0x18C2608", Offset = "0x18C2608", VA = "0x18C2608")]
			internal void <UpdateUsername>b__0(GetPlayerProfileResult result)
			{
			}

			[Token(Token = "0x6002FE3")]
			[Address(RVA = "0x18C2A84", Offset = "0x18C2A84", VA = "0x18C2A84")]
			internal void <UpdateUsername>b__2(UpdateUserTitleDisplayNameResult result2)
			{
			}

			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x18C2BA0", Offset = "0x18C2BA0", VA = "0x18C2BA0")]
			internal void <UpdateUsername>b__3(PlayFabError error)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14A0", Offset = "0xBE14A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD502E4")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<PlayFabError> <>9__13_1;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<PlayFabError> <>9__17_1;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<UpdatePlayerStatisticsResult> <>9__18_0;

			[Token(Token = "0x4002E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53A9")]
			public static Action<PlayFabError> <>9__18_1;

			[Token(Token = "0x4002E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<UpdatePlayerStatisticsResult> <>9__21_0;

			[Token(Token = "0x4002E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD502EC")]
			public static Action<PlayFabError> <>9__21_1;

			[Token(Token = "0x4002E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<PlayFabError> <>9__23_1;

			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0x18C1E08", Offset = "0x18C1E08", VA = "0x18C1E08")]
			public <>c()
			{
			}

			[Token(Token = "0x6002FE7")]
			[Address(RVA = "0x18C1E38", Offset = "0x18C1E38", VA = "0x18C1E38")]
			internal void <UpdateUsername>b__13_1(PlayFabError error)
			{
			}

			[Token(Token = "0x6002FE8")]
			[Address(RVA = "0x18C1F50", Offset = "0x18C1F50", VA = "0x18C1F50")]
			internal void <GetExperience>b__17_1(PlayFabError error)
			{
			}

			[Token(Token = "0x6002FE9")]
			[Address(RVA = "0x18C2080", Offset = "0x18C2080", VA = "0x18C2080")]
			internal void <StoreExperience>b__18_0(UpdatePlayerStatisticsResult result)
			{
			}

			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0x18C217C", Offset = "0x18C217C", VA = "0x18C217C")]
			internal void <StoreExperience>b__18_1(PlayFabError error)
			{
			}

			[Token(Token = "0x6002FEB")]
			[Address(RVA = "0x18C22AC", Offset = "0x18C22AC", VA = "0x18C22AC")]
			internal void <SetLeaderboardEntry>b__21_0(UpdatePlayerStatisticsResult result)
			{
			}

			[Token(Token = "0x6002FEC")]
			[Address(RVA = "0x18C23A8", Offset = "0x18C23A8", VA = "0x18C23A8")]
			internal void <SetLeaderboardEntry>b__21_1(PlayFabError error)
			{
			}

			[Token(Token = "0x6002FED")]
			[Address(RVA = "0x18C24D8", Offset = "0x18C24D8", VA = "0x18C24D8")]
			internal void <GetHighscoreForSong>b__23_1(PlayFabError error)
			{
			}
		}

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14DC", Offset = "0xBE14DC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<int> callback;

			[Token(Token = "0x6002FEE")]
			[Address(RVA = "0x18BFAF0", Offset = "0x18BFAF0", VA = "0x18BFAF0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002FEF")]
			[Address(RVA = "0x18C2CF4", Offset = "0x18C2CF4", VA = "0x18C2CF4")]
			internal void <GetExperience>b__0(GetPlayerStatisticsResult result)
			{
			}
		}

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1518", Offset = "0xBE1518")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LLPlatformImpl <>4__this;

			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53B1")]
			public string statName;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Action<LeaderboardSelector, List<LeaderboardEntry>, bool> highscoresReceived;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD502F4")]
			public LeaderboardSelector selector;

			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x18C1104", Offset = "0x18C1104", VA = "0x18C1104")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0x18C2F4C", Offset = "0x18C2F4C", VA = "0x18C2F4C")]
			internal void <GetLeaderboardEntries>b__0(GetLeaderboardResult result)
			{
			}

			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0x18C369C", Offset = "0x18C369C", VA = "0x18C369C")]
			internal void <GetLeaderboardEntries>b__1(PlayFabError error)
			{
			}
		}

		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1554", Offset = "0xBE1554")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<int> lastHighscoreRetrieved;

			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0x18C1B94", Offset = "0x18C1B94", VA = "0x18C1B94")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0x18C37F0", Offset = "0x18C37F0", VA = "0x18C37F0")]
			internal void <GetHighscoreForSong>b__0(GetPlayerStatisticsResult result)
			{
			}
		}

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool initStarted;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPlayfabInitialized;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5399")]
		private bool isPicoInitialized;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string playfabId;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD502DC")]
		private string usernameToUpdate;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, List<LeaderboardEntry>> leaderboardCache;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string XP_STAT_NAME;

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x18BE5B0", Offset = "0x18BE5B0", VA = "0x18BE5B0", Slot = "6")]
		public override SystemLanguage GetUserLanguage()
		{
			return default(SystemLanguage);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x18BE5E4", Offset = "0x18BE5E4", VA = "0x18BE5E4", Slot = "5")]
		public override PlatformType GetPlatformType()
		{
			return default(PlatformType);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x18BE600", Offset = "0x18BE600", VA = "0x18BE600", Slot = "4")]
		public override void InitializePlatform()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x18BEB50", Offset = "0x18BEB50", VA = "0x18BEB50")]
		private void OnLoginError(PlayFabError error)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x18BED2C", Offset = "0x18BED2C", VA = "0x18BED2C")]
		private void OnLoginSuccess(LoginResult result)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x18BF474", Offset = "0x18BF474", VA = "0x18BF474")]
		public void PicoLoginSucceeded(string username)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x18BEEBC", Offset = "0x18BEEBC", VA = "0x18BEEBC")]
		private void UpdateUsername(string username)
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x18BF4F8", Offset = "0x18BF4F8", VA = "0x18BF4F8", Slot = "12")]
		public override LeaderboardType GetLeaderBoardType()
		{
			return default(LeaderboardType);
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x18BF514", Offset = "0x18BF514", VA = "0x18BF514", Slot = "8")]
		public override void SetAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x18BF52C", Offset = "0x18BF52C", VA = "0x18BF52C", Slot = "7")]
		public override void SetCountingAchievement(string achievementName, string statsName, List<string> globalListOfElements, int maximum, int modulo)
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x18BF554", Offset = "0x18BF554", VA = "0x18BF554", Slot = "9")]
		public override void GetExperience(Action<int> callback)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x18BFB20", Offset = "0x18BFB20", VA = "0x18BFB20", Slot = "10")]
		public override void StoreExperience(int experience)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x18C020C", Offset = "0x18C020C", VA = "0x18C020C", Slot = "11")]
		public override bool AreLeaderboardsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x18C0250", Offset = "0x18C0250", VA = "0x18C0250")]
		private static string GetLeaderboardStatName(LeaderboardSelector selector)
		{
			return null;
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x18C03A8", Offset = "0x18C03A8", VA = "0x18C03A8", Slot = "13")]
		public override void SetLeaderboardEntry(LeaderboardSelector selector, LeaderboardEntry entry, Action leaderboardUpdateFinished)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x18C0B78", Offset = "0x18C0B78", VA = "0x18C0B78", Slot = "14")]
		public override void GetLeaderboardEntries(LeaderboardSelector selector, Action<LeaderboardSelector, List<LeaderboardEntry>, bool> highscoresReceived)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x18C1134", Offset = "0x18C1134", VA = "0x18C1134", Slot = "15")]
		public override void GetHighscoreForSong(LeaderboardSelector selector, Action<int> lastHighscoreRetrieved)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x18C1BC4", Offset = "0x18C1BC4", VA = "0x18C1BC4", Slot = "20")]
		public override object GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x18C1BF4", Offset = "0x18C1BF4", VA = "0x18C1BF4", Slot = "21")]
		public override void ClosePlatform()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x18C1C08", Offset = "0x18C1C08", VA = "0x18C1C08", Slot = "23")]
		public override bool IsFeaturePurchased(Feature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x18BEAA4", Offset = "0x18BEAA4", VA = "0x18BEAA4")]
		internal static void LogPico(string v)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x18C1C30", Offset = "0x18C1C30", VA = "0x18C1C30")]
		internal static void LogPicoWarning(string v)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x18BEC80", Offset = "0x18BEC80", VA = "0x18BEC80")]
		internal static void LogPicoError(string v)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x18BDD48", Offset = "0x18BDD48", VA = "0x18BDD48")]
		public LLPlatformImpl()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class PicoCallback : MonoBehaviour
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string IS_SUCCESS;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string MSG;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53B9")]
		private static string CODE;

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x18249EC", Offset = "0x18249EC", VA = "0x18249EC")]
		public void LoginCallback(string loginInfo)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1824F88", Offset = "0x1824F88", VA = "0x1824F88")]
		public void UserInfoCallback(string userInfo)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1825568", Offset = "0x1825568", VA = "0x1825568")]
		public void ActivityForResultCallback(string activity)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x18256E4", Offset = "0x18256E4", VA = "0x18256E4")]
		public PicoCallback()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class ANTPlusAdapter : HRMAdapter
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string UNKNOWN_PREFIX;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HRMStatus status;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float SCAN_TIMEOUT;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float scanStartTime;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53C1")]
		private List<AntHrmDevice> scanResult;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int heartRate;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50304")]
		private AntHrmDevice targetDevice;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AntHrmDevice connectedDevice;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AntChannel backgroundScanChannel;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AntChannel deviceChannel;

		[Token(Token = "0x1400002D")]
		private event Action deviceNameChanged
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x1958C00", Offset = "0x1958C00", VA = "0x1958C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23C7C", Offset = "0xC23C7C")]
			add
			{
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x1958D4C", Offset = "0x1958D4C", VA = "0x1958D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23CB8", Offset = "0xC23CB8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1958E98", Offset = "0x1958E98", VA = "0x1958E98", Slot = "4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1959168", Offset = "0x1959168", VA = "0x1959168")]
		private void StartScan()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1959504", Offset = "0x1959504", VA = "0x1959504")]
		private void ANTPLUG_ConnectEvent(string resultCode)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x1959944", Offset = "0x1959944", VA = "0x1959944")]
		private void ANTPLUG_StateChange(string newDeviceState)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1959B14", Offset = "0x1959B14", VA = "0x1959B14")]
		private void ANTPLUG_Receive_computedHeartRate(string s)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1959B68", Offset = "0x1959B68", VA = "0x1959B68")]
		private void ReceivedBackgroundScanData(byte[] data)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x195A578", Offset = "0x195A578", VA = "0x195A578")]
		private HRMDevice HrmDeviceFromAntDevice(AntHrmDevice antDevice)
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x195A6C0", Offset = "0x195A6C0", VA = "0x195A6C0")]
		private AntHrmDevice AntDeviceFromHrmDevice(HRMDevice hrmDevice)
		{
			return null;
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x195A82C", Offset = "0x195A82C", VA = "0x195A82C")]
		private void ConnectToDevice(AntDevice device)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x195AB90", Offset = "0x195AB90", VA = "0x195AB90")]
		private void Data(byte[] data)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x195B1BC", Offset = "0x195B1BC", VA = "0x195B1BC")]
		private void ChannelResponse(ANT_Response response)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x195946C", Offset = "0x195946C", VA = "0x195946C")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x195B2E4", Offset = "0x195B2E4", VA = "0x195B2E4", Slot = "11")]
		public string GetCurrentDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x195B404", Offset = "0x195B404", VA = "0x195B404", Slot = "10")]
		public List<HRMDevice> GetDeviceList()
		{
			return null;
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x195B7B4", Offset = "0x195B7B4", VA = "0x195B7B4", Slot = "9")]
		public int GetHeartRate()
		{
			return default(int);
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x195B7E4", Offset = "0x195B7E4", VA = "0x195B7E4", Slot = "8")]
		public HRMStatus GetStatus()
		{
			return default(HRMStatus);
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x195B814", Offset = "0x195B814", VA = "0x195B814", Slot = "5")]
		public bool IsRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x195B838", Offset = "0x195B838", VA = "0x195B838", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x195B894", Offset = "0x195B894", VA = "0x195B894", Slot = "13")]
		public void SetCommand(HRMCommand command)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x195BB4C", Offset = "0x195BB4C", VA = "0x195BB4C", Slot = "14")]
		public void SetReconnectDeviceId(long hrmIdLong)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x195BCA0", Offset = "0x195BCA0", VA = "0x195BCA0", Slot = "12")]
		public void SetTargetDevice(HRMDevice hrmDevice)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x195BD24", Offset = "0x195BD24", VA = "0x195BD24", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x195C354", Offset = "0x195C354", VA = "0x195C354")]
		public ANTPlusAdapter()
		{
		}
	}
	[Token(Token = "0x2000433")]
	internal class AntHrmDevice : AntDevice
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53C9")]
		public bool supportsPages;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool toggleBitState;

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x195A548", Offset = "0x195A548", VA = "0x195A548")]
		public AntHrmDevice()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class AdditionalCameras : MonoBehaviour
	{
		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5030C")]
		[SerializeField]
		private GameObject defaultStaticAvatarCamera;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject closeStaticAvatarCamera;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject farStaticAvatarCamera;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject closeRotatingAvatarCamera;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53D1")]
		[SerializeField]
		private GameObject farRotatingAvatarCamera;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<GameObject> avatarCameras;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB1C")]
		private int currentCameraIndex;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool flareLayerAdded;

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x195C63C", Offset = "0x195C63C", VA = "0x195C63C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x195C7AC", Offset = "0x195C7AC", VA = "0x195C7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x195CCE4", Offset = "0x195CCE4", VA = "0x195CCE4")]
		private void ApplyBeautifyProfiles()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x195D34C", Offset = "0x195D34C", VA = "0x195D34C")]
		private void AddFlareLayer()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x195D090", Offset = "0x195D090", VA = "0x195D090")]
		private void RemoveFlareLayer()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x195CEB0", Offset = "0x195CEB0", VA = "0x195CEB0")]
		private void SetFarClippingPlane()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x195D5C4", Offset = "0x195D5C4", VA = "0x195D5C4")]
		public AdditionalCameras()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class AudioFader : MonoBehaviour
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1590", Offset = "0xBE1590")]
		private sealed class <FadeOut>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53D8")]
			public AudioSource audioSource;

			[Token(Token = "0x4002E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float fadeDuration;

			[Token(Token = "0x4002E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD50314")]
			private float <startVolume>5__2;

			[Token(Token = "0x1700056C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FF8")]
				[Address(RVA = "0x195ECD0", Offset = "0x195ECD0", VA = "0x195ECD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FFA")]
				[Address(RVA = "0x195EDA0", Offset = "0x195EDA0", VA = "0x195EDA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0x195E468", Offset = "0x195E468", VA = "0x195E468")]
			[DebuggerHidden]
			public <FadeOut>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0x195EA44", Offset = "0x195EA44", VA = "0x195EA44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FF7")]
			[Address(RVA = "0x195EA58", Offset = "0x195EA58", VA = "0x195EA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF9")]
			[Address(RVA = "0x195ED00", Offset = "0x195ED00", VA = "0x195ED00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE15CC", Offset = "0xBE15CC")]
		private sealed class <FadeIn>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioSource audioSource;

			[Token(Token = "0x4002E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53E0")]
			public float targetVolume;

			[Token(Token = "0x4002E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float fadeDuration;

			[Token(Token = "0x4002E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5031C")]
			private float <currentTime>5__2;

			[Token(Token = "0x1700056E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FFE")]
				[Address(RVA = "0x195E944", Offset = "0x195E944", VA = "0x195E944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003000")]
				[Address(RVA = "0x195EA14", Offset = "0x195EA14", VA = "0x195EA14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FFB")]
			[Address(RVA = "0x195E5C8", Offset = "0x195E5C8", VA = "0x195E5C8")]
			[DebuggerHidden]
			public <FadeIn>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0x195E640", Offset = "0x195E640", VA = "0x195E640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FFD")]
			[Address(RVA = "0x195E654", Offset = "0x195E654", VA = "0x195E654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FFF")]
			[Address(RVA = "0x195E974", Offset = "0x195E974", VA = "0x195E974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x195E378", Offset = "0x195E378", VA = "0x195E378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23CF4", Offset = "0xC23CF4")]
		public IEnumerator FadeOut(AudioSource audioSource, float fadeDuration)
		{
			return null;
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x195E4B0", Offset = "0x195E4B0", VA = "0x195E4B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC23DA4", Offset = "0xC23DA4")]
		public IEnumerator FadeIn(AudioSource audioSource, float fadeDuration, float targetVolume)
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x195E610", Offset = "0x195E610", VA = "0x195E610")]
		public AudioFader()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class BTAndroid : HRMAdapter
	{
		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1608", Offset = "0xBE1608")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long id;

			[Token(Token = "0x6003001")]
			[Address(RVA = "0x1963658", Offset = "0x1963658", VA = "0x1963658")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6003002")]
			[Address(RVA = "0x196412C", Offset = "0x196412C", VA = "0x196412C")]
			internal bool <ScanForDevices>b__1(HRMDevice device)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1644", Offset = "0xBE1644")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53F8")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<string, string> <>9__22_0;

			[Token(Token = "0x6003004")]
			[Address(RVA = "0x19640E0", Offset = "0x19640E0", VA = "0x19640E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003005")]
			[Address(RVA = "0x1964110", Offset = "0x1964110", VA = "0x1964110")]
			internal void <SubscribeToCharacteristic>b__22_0(string notifyAddress, string notifyCharacteristic)
			{
			}
		}

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string HRM_SERVICE;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string HRM_CHARACTERISTIC;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float SCAN_DURATION;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53E8")]
		private readonly float SUBSCRIBE_DELAY;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HRMStatus status;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50324")]
		private int heartRate;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float scanStopTime;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, string> devices;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<HRMDevice> scannedDevices;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53F0")]
		private HRMDevice connectedDevice;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HRMDevice targetDevice;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5032C")]
		private bool isScanningToConnect;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float subscribeTime;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isRunning;

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1960F98", Offset = "0x1960F98", VA = "0x1960F98", Slot = "11")]
		public string GetCurrentDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x196106C", Offset = "0x196106C", VA = "0x196106C", Slot = "10")]
		public List<HRMDevice> GetDeviceList()
		{
			return null;
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x196109C", Offset = "0x196109C", VA = "0x196109C", Slot = "9")]
		public int GetHeartRate()
		{
			return default(int);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x19610CC", Offset = "0x19610CC", VA = "0x19610CC", Slot = "8")]
		public HRMStatus GetStatus()
		{
			return default(HRMStatus);
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x19610FC", Offset = "0x19610FC", VA = "0x19610FC", Slot = "5")]
		public bool IsRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1961140", Offset = "0x1961140", VA = "0x1961140", Slot = "13")]
		public void SetCommand(HRMCommand command)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1961668", Offset = "0x1961668", VA = "0x1961668")]
		private void ScanForDevices()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1961B28", Offset = "0x1961B28", VA = "0x1961B28")]
		private void ConnectToDevice()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1961FD4", Offset = "0x1961FD4", VA = "0x1961FD4")]
		private void SubscribeToCharacteristic()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x196244C", Offset = "0x196244C", VA = "0x196244C", Slot = "14")]
		public void SetReconnectDeviceId(long hrmIdLong)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1962510", Offset = "0x1962510", VA = "0x1962510", Slot = "12")]
		public void SetTargetDevice(HRMDevice hrmDevice)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1962548", Offset = "0x1962548", VA = "0x1962548", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x196267C", Offset = "0x196267C", VA = "0x196267C", Slot = "4")]
		public void Start()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1961348", Offset = "0x1961348", VA = "0x1961348")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1962808", Offset = "0x1962808", VA = "0x1962808", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1962AFC", Offset = "0x1962AFC", VA = "0x1962AFC")]
		private void StopScanning()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x196185C", Offset = "0x196185C", VA = "0x196185C")]
		public void SetState(HRMStatus newState)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1961E54", Offset = "0x1961E54", VA = "0x1961E54")]
		private string longAddressToString(long address)
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1962BF0", Offset = "0x1962BF0", VA = "0x1962BF0")]
		private long stringAddressToLong(string address)
		{
			return default(long);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1962CC4", Offset = "0x1962CC4", VA = "0x1962CC4")]
		public BTAndroid()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1962EBC", Offset = "0x1962EBC", VA = "0x1962EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23E54", Offset = "0xC23E54")]
		private void <ScanForDevices>b__20_0(string address, string name, int rssi, byte[] bytes)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1963688", Offset = "0x1963688", VA = "0x1963688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23E90", Offset = "0xC23E90")]
		private bool <ConnectToDevice>b__21_0(HRMDevice device)
		{
			return default(bool);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x196372C", Offset = "0x196372C", VA = "0x196372C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23ECC", Offset = "0xC23ECC")]
		private void <ConnectToDevice>b__21_1(string addr, string serviceUUID, string characteristicUUID)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x19639DC", Offset = "0x19639DC", VA = "0x19639DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23F08", Offset = "0xC23F08")]
		private void <SubscribeToCharacteristic>b__22_1(string addr, string characteristicUUID, byte[] bytes)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1963DC4", Offset = "0x1963DC4", VA = "0x1963DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23F44", Offset = "0xC23F44")]
		private void <Shutdown>b__25_0()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1963DF4", Offset = "0x1963DF4", VA = "0x1963DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23F80", Offset = "0xC23F80")]
		private void <Start>b__26_0()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x1963E44", Offset = "0x1963E44", VA = "0x1963E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23FBC", Offset = "0xC23FBC")]
		private void <Start>b__26_1(string error)
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class GattClient : HRMAdapter
	{
		[Serializable]
		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1680", Offset = "0xBE1680")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5034C")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<HRMDevice> <>9__30_0;

			[Token(Token = "0x6003007")]
			[Address(RVA = "0x179FCD0", Offset = "0x179FCD0", VA = "0x179FCD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003008")]
			[Address(RVA = "0x179FD00", Offset = "0x179FD00", VA = "0x179FD00")]
			internal bool <IterateDeviceList>b__30_0(HRMDevice x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50334")]
		private HRMStatus status;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int heartRate;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HRMCommand _command;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HRMDevice connectedDevice;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5400")]
		private HRMDevice targetDevice;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private long reconnectDeviceId;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5033C")]
		private List<HRMDevice> deviceList;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int HEART_RATE_SERVICE;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int HEART_RATE_CHARACTERISTIC;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int SUBSCRIBE_RETRIES;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5408")]
		private BluetoothManager FManager;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<long, GattClientThread> FConnections;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50344")]
		private GattClientThread connectedClient;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<HRMDevice, GattCharacteristic> charDict;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int deviceIndex;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool closedown;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5410")]
		private object lockHandle;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Thread thread;

		[Token(Token = "0x17000438")]
		private HRMCommand command
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x179ADF8", Offset = "0x179ADF8", VA = "0x179ADF8")]
			get
			{
				return default(HRMCommand);
			}
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x179AFC8", Offset = "0x179AFC8", VA = "0x179AFC8")]
			set
			{
			}
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x179B184", Offset = "0x179B184", VA = "0x179B184")]
		private IntPtr GetRadio()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x179B40C", Offset = "0x179B40C", VA = "0x179B40C")]
		private void ManagerBeforeClose(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x179B4A4", Offset = "0x179B4A4", VA = "0x179B4A4")]
		private void ManagerAfterOpen(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x179B53C", Offset = "0x179B53C", VA = "0x179B53C")]
		private void ManagerDiscoveringStarted(object sender, IntPtr Radio)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x179B694", Offset = "0x179B694", VA = "0x179B694")]
		private void ManagerDeviceFound(object sender, IntPtr Radio, long Address)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x179B838", Offset = "0x179B838", VA = "0x179B838")]
		private void ManagerDiscoveringCompleted(object sender, IntPtr Radio, int Error)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x179C388", Offset = "0x179C388", VA = "0x179C388")]
		private void ClientChanged(object sender, ushort Handle, byte[] Value)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x179C544", Offset = "0x179C544", VA = "0x179C544")]
		private void ClientDisconnect(object sender, int Reason)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x179C614", Offset = "0x179C614", VA = "0x179C614")]
		private void ClientConnect(object sender, int Error)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x179BAA0", Offset = "0x179BAA0", VA = "0x179BAA0")]
		private void IterateDeviceList(bool increment)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x179E2F8", Offset = "0x179E2F8", VA = "0x179E2F8")]
		private bool ConnectToDevice(long Address)
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x179D020", Offset = "0x179D020", VA = "0x179D020")]
		private GattCharacteristic FindHrmCharacteristic(GattClientThread FClient)
		{
			return default(GattCharacteristic);
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x179DF74", Offset = "0x179DF74", VA = "0x179DF74")]
		private void SubscribeToHrmChar(GattClientThread client)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x179DC00", Offset = "0x179DC00", VA = "0x179DC00")]
		private string GetDeviceName(long devId)
		{
			return null;
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x179E798", Offset = "0x179E798", VA = "0x179E798")]
		private void StartDiscovery()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x179E994", Offset = "0x179E994", VA = "0x179E994")]
		private void ConnectToDevice()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x179CEBC", Offset = "0x179CEBC", VA = "0x179CEBC")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x179EA90", Offset = "0x179EA90", VA = "0x179EA90")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x179ED74", Offset = "0x179ED74", VA = "0x179ED74")]
		private void Reconnect()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x179D9F0", Offset = "0x179D9F0", VA = "0x179D9F0")]
		private bool IsHrmChara(GattCharacteristic chara)
		{
			return default(bool);
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x179EEF4", Offset = "0x179EEF4", VA = "0x179EEF4")]
		private void HandleCommand()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x179F018", Offset = "0x179F018", VA = "0x179F018", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x179F048", Offset = "0x179F048", VA = "0x179F048", Slot = "8")]
		public HRMStatus GetStatus()
		{
			return default(HRMStatus);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x179F078", Offset = "0x179F078", VA = "0x179F078", Slot = "9")]
		public int GetHeartRate()
		{
			return default(int);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x179F0A8", Offset = "0x179F0A8", VA = "0x179F0A8", Slot = "10")]
		public List<HRMDevice> GetDeviceList()
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x179F0D8", Offset = "0x179F0D8", VA = "0x179F0D8", Slot = "11")]
		public string GetCurrentDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x179F210", Offset = "0x179F210", VA = "0x179F210", Slot = "12")]
		public void SetTargetDevice(HRMDevice hrmDevice)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x179F248", Offset = "0x179F248", VA = "0x179F248", Slot = "13")]
		public void SetCommand(HRMCommand command)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x179F288", Offset = "0x179F288", VA = "0x179F288", Slot = "14")]
		public void SetReconnectDeviceId(long hrmIdLong)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x179F2C0", Offset = "0x179F2C0", VA = "0x179F2C0", Slot = "4")]
		public void Start()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x179F3D8", Offset = "0x179F3D8", VA = "0x179F3D8")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x179F9BC", Offset = "0x179F9BC", VA = "0x179F9BC")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x179FA48", Offset = "0x179FA48", VA = "0x179FA48", Slot = "5")]
		public bool IsRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x179FAAC", Offset = "0x179FAAC", VA = "0x179FAAC")]
		private void SetStatus(HRMStatus newStatus)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x179FAE4", Offset = "0x179FAE4", VA = "0x179FAE4", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x179FAF8", Offset = "0x179FAF8", VA = "0x179FAF8")]
		public GattClient()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public interface HRMAdapter
	{
		[Token(Token = "0x6002052")]
		void Start();

		[Token(Token = "0x6002053")]
		bool IsRunning();

		[Token(Token = "0x6002054")]
		void Update();

		[Token(Token = "0x6002055")]
		void Shutdown();

		[Token(Token = "0x6002056")]
		HRMStatus GetStatus();

		[Token(Token = "0x6002057")]
		int GetHeartRate();

		[Token(Token = "0x6002058")]
		List<HRMDevice> GetDeviceList();

		[Token(Token = "0x6002059")]
		string GetCurrentDeviceName();

		[Token(Token = "0x600205A")]
		void SetTargetDevice(HRMDevice hrmDevice);

		[Token(Token = "0x600205B")]
		void SetCommand(HRMCommand command);

		[Token(Token = "0x600205C")]
		void SetReconnectDeviceId(long hrmIdLong);
	}
	[Token(Token = "0x2000439")]
	public enum HRMPlatform
	{
		[Token(Token = "0x4001C46")]
		BLUETOOTH,
		[Token(Token = "0x4001C47")]
		ANT_PLUS
	}
	[Token(Token = "0x200043A")]
	public enum HRMStatus
	{
		[Token(Token = "0x4001C49")]
		OFF,
		[Token(Token = "0x4001C4A")]
		IDLE,
		[Token(Token = "0x4001C4B")]
		DISCOVERING,
		[Token(Token = "0x4001C4C")]
		CONNECTING,
		[Token(Token = "0x4001C4D")]
		SUBSCRIBED,
		[Token(Token = "0x4001C4E")]
		RECONNECTING,
		[Token(Token = "0x4001C4F")]
		NO_DEVICE
	}
	[Token(Token = "0x200043B")]
	public enum HRMCommand
	{
		[Token(Token = "0x4001C51")]
		NONE,
		[Token(Token = "0x4001C52")]
		START_DISCOVERY,
		[Token(Token = "0x4001C53")]
		CONNECT,
		[Token(Token = "0x4001C54")]
		DISCONNECT,
		[Token(Token = "0x4001C55")]
		RECONNECT
	}
	[Token(Token = "0x200043C")]
	public class HRMDevice
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long devId;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isHRM;

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x179B808", Offset = "0x179B808", VA = "0x179B808")]
		public HRMDevice()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class HRMCon : MonoBehaviour
	{
		[Token(Token = "0x2000736")]
		public delegate void OnStatusChanged(HRMStatus newStatus, HRMStatus oldStatus);

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C584")]
		private HRMStatus oldStatus;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int oldHeartRate;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HRMPlatform platform;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HRMAdapter hrmThread;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5433")]
		private ANTPlusAdapter antPlusAdapter;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GattClient bluetoothAdapter;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB24")]
		private BTAndroid btAndroidAdapter;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isOn;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isInitialized;

		[Token(Token = "0x1400002E")]
		public event Action<int> HeartRateChanged
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x17AB534", Offset = "0x17AB534", VA = "0x17AB534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC23FF8", Offset = "0xC23FF8")]
			add
			{
			}
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x17AC0C4", Offset = "0x17AC0C4", VA = "0x17AC0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24034", Offset = "0xC24034")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event OnStatusChanged StatusChanged
		{
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x17AB3E8", Offset = "0x17AB3E8", VA = "0x17AB3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24070", Offset = "0xC24070")]
			add
			{
			}
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x17AC210", Offset = "0x17AC210", VA = "0x17AC210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC240AC", Offset = "0xC240AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x17AEFBC", Offset = "0x17AEFBC", VA = "0x17AEFBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x17AF0B8", Offset = "0x17AF0B8", VA = "0x17AF0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x17ACCB0", Offset = "0x17ACCB0", VA = "0x17ACCB0")]
		public void SetPower(bool shouldBeOn)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x17AD4A8", Offset = "0x17AD4A8", VA = "0x17AD4A8")]
		public void SetPlatform(HRMPlatform platform)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x17AF6A0", Offset = "0x17AF6A0", VA = "0x17AF6A0")]
		private void InitPlatforms()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x17AF908", Offset = "0x17AF908", VA = "0x17AF908")]
		public int GetHeartRate()
		{
			return default(int);
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x17AE668", Offset = "0x17AE668", VA = "0x17AE668")]
		public List<HRMDevice> GetDeviceList()
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x17AB680", Offset = "0x17AB680", VA = "0x17AB680")]
		internal HRMStatus GetStatus()
		{
			return default(HRMStatus);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x17AE78C", Offset = "0x17AE78C", VA = "0x17AE78C")]
		internal string GetCurrentDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x17AE1F0", Offset = "0x17AE1F0", VA = "0x17AE1F0")]
		internal void ConnectToDevice(HRMDevice hrmDevice)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x17ADA78", Offset = "0x17ADA78", VA = "0x17ADA78")]
		internal void StartDiscovery()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x17AE488", Offset = "0x17AE488", VA = "0x17AE488")]
		internal void Disconnect()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x17AF9F0", Offset = "0x17AF9F0", VA = "0x17AF9F0")]
		internal void Reconnect(long hrmIdLong)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x17AFB10", Offset = "0x17AFB10", VA = "0x17AFB10")]
		public HRMCon()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class CameraPreRender : MonoBehaviour
	{
		[Token(Token = "0x2000737")]
		public delegate void PreCullEvent();

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PreCullEvent onPreCull;

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1986ED0", Offset = "0x1986ED0", VA = "0x1986ED0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x19871F4", Offset = "0x19871F4", VA = "0x19871F4")]
		public CameraPreRender()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class CameraRotator : MonoBehaviour
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x543A")]
		public float speed;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isRotating;

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1987320", Offset = "0x1987320", VA = "0x1987320")]
		private void Update()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x19873D4", Offset = "0x19873D4", VA = "0x19873D4")]
		public void ToggleRotation()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x198746C", Offset = "0x198746C", VA = "0x198746C")]
		public void DoRotation(bool isActivated)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x19874B8", Offset = "0x19874B8", VA = "0x19874B8")]
		public void IncreaseSpeed()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x19875E0", Offset = "0x19875E0", VA = "0x19875E0")]
		public void DecreaseSpeed()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x19877BC", Offset = "0x19877BC", VA = "0x19877BC")]
		public CameraRotator()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class Clock : MonoBehaviour
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50364")]
		private static readonly string TIME_FORMAT;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1987800", Offset = "0x1987800", VA = "0x1987800")]
		private void Update()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x1987AB0", Offset = "0x1987AB0", VA = "0x1987AB0")]
		public Clock()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class DisableInBuild : MonoBehaviour
	{
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x16F9A00", Offset = "0x16F9A00", VA = "0x16F9A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x16F9A5C", Offset = "0x16F9A5C", VA = "0x16F9A5C")]
		public DisableInBuild()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class FMCLog
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE16BC", Offset = "0xBE16BC")]
		private sealed class <LogToServer2>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5442")]
			private object <>2__current;

			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public string v;

			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5036C")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000570")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003014")]
				[Address(RVA = "0x171A650", Offset = "0x171A650", VA = "0x171A650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000571")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003016")]
				[Address(RVA = "0x171A720", Offset = "0x171A720", VA = "0x171A720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003011")]
			[Address(RVA = "0x171A160", Offset = "0x171A160", VA = "0x171A160")]
			[DebuggerHidden]
			public <LogToServer2>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003012")]
			[Address(RVA = "0x171A1D8", Offset = "0x171A1D8", VA = "0x171A1D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003013")]
			[Address(RVA = "0x171A1EC", Offset = "0x171A1EC", VA = "0x171A1EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003015")]
			[Address(RVA = "0x171A680", Offset = "0x171A680", VA = "0x171A680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MonoBehaviour monob;

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x17195E8", Offset = "0x17195E8", VA = "0x17195E8")]
		private static string GetTimestamp()
		{
			return null;
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x16F9F38", Offset = "0x16F9F38", VA = "0x16F9F38")]
		public static void LogInfo(object obj, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1719734", Offset = "0x1719734", VA = "0x1719734")]
		public static void LogError(object obj, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1718D08", Offset = "0x1718D08", VA = "0x1718D08")]
		public static void LogWarning(object obj, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x17199A0", Offset = "0x17199A0", VA = "0x17199A0")]
		internal static void LogWarningFormat(params object[] args)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1719BCC", Offset = "0x1719BCC", VA = "0x1719BCC")]
		internal static void SetBehaviour(MonoBehaviour mb)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1719D08", Offset = "0x1719D08", VA = "0x1719D08")]
		internal static void LogFormat(params object[] args)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1719F34", Offset = "0x1719F34", VA = "0x1719F34")]
		internal static void DrawRay(Vector3 v1, Vector3 v2, Color color)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1718CF4", Offset = "0x1718CF4", VA = "0x1718CF4")]
		internal static void LogToServer(string v)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x171A09C", Offset = "0x171A09C", VA = "0x171A09C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC240E8", Offset = "0xC240E8")]
		private static IEnumerator LogToServer2(string v)
		{
			return null;
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x171A1A8", Offset = "0x171A1A8", VA = "0x171A1A8")]
		public FMCLog()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class FrameworkManager : MonoBehaviour
	{
		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE16F8", Offset = "0xBE16F8")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5462")]
			private object <>2__current;

			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public FrameworkManager <>4__this;

			[Token(Token = "0x17000572")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600301A")]
				[Address(RVA = "0x1721D94", Offset = "0x1721D94", VA = "0x1721D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000573")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600301C")]
				[Address(RVA = "0x1721E64", Offset = "0x1721E64", VA = "0x1721E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003017")]
			[Address(RVA = "0x171BF04", Offset = "0x171BF04", VA = "0x171BF04")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6003018")]
			[Address(RVA = "0x17219F0", Offset = "0x17219F0", VA = "0x17219F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003019")]
			[Address(RVA = "0x1721A04", Offset = "0x1721A04", VA = "0x1721A04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600301B")]
			[Address(RVA = "0x1721DC4", Offset = "0x1721DC4", VA = "0x1721DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1734", Offset = "0xBE1734")]
		private sealed class <LaunchGame>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5038C")]
			private int <>1__state;

			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FrameworkManager <>4__this;

			[Token(Token = "0x4002EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private GameManager <g>5__2;

			[Token(Token = "0x17000574")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003020")]
				[Address(RVA = "0x171F150", Offset = "0x171F150", VA = "0x171F150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000575")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003022")]
				[Address(RVA = "0x171F220", Offset = "0x171F220", VA = "0x171F220", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600301D")]
			[Address(RVA = "0x171C224", Offset = "0x171C224", VA = "0x171C224")]
			[DebuggerHidden]
			public <LaunchGame>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600301E")]
			[Address(RVA = "0x171E28C", Offset = "0x171E28C", VA = "0x171E28C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600301F")]
			[Address(RVA = "0x171E2A0", Offset = "0x171E2A0", VA = "0x171E2A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003021")]
			[Address(RVA = "0x171F180", Offset = "0x171F180", VA = "0x171F180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1770", Offset = "0xBE1770")]
		private sealed class <PreloadShaders>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x546A")]
			private int <>1__state;

			[Token(Token = "0x4002EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x17000576")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003026")]
				[Address(RVA = "0x171FE18", Offset = "0x171FE18", VA = "0x171FE18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000577")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003028")]
				[Address(RVA = "0x171FEE8", Offset = "0x171FEE8", VA = "0x171FEE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003023")]
			[Address(RVA = "0x171C30C", Offset = "0x171C30C", VA = "0x171C30C")]
			[DebuggerHidden]
			public <PreloadShaders>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6003024")]
			[Address(RVA = "0x171F85C", Offset = "0x171F85C", VA = "0x171F85C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003025")]
			[Address(RVA = "0x171F870", Offset = "0x171F870", VA = "0x171F870", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003027")]
			[Address(RVA = "0x171FE48", Offset = "0x171FE48", VA = "0x171FE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17AC", Offset = "0xBE17AC")]
		private sealed class <LaunchEditor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD50394")]
			private int <>1__state;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FrameworkManager <>4__this;

			[Token(Token = "0x17000578")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600302C")]
				[Address(RVA = "0x171E18C", Offset = "0x171E18C", VA = "0x171E18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000579")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600302E")]
				[Address(RVA = "0x171E25C", Offset = "0x171E25C", VA = "0x171E25C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003029")]
			[Address(RVA = "0x171C354", Offset = "0x171C354", VA = "0x171C354")]
			[DebuggerHidden]
			public <LaunchEditor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600302A")]
			[Address(RVA = "0x171D7F8", Offset = "0x171D7F8", VA = "0x171D7F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600302B")]
			[Address(RVA = "0x171D80C", Offset = "0x171D80C", VA = "0x171D80C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600302D")]
			[Address(RVA = "0x171E1BC", Offset = "0x171E1BC", VA = "0x171E1BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17E8", Offset = "0xBE17E8")]
		private sealed class <ShowMenu>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5472")]
			private object <>2__current;

			[Token(Token = "0x4002EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public FrameworkManager <>4__this;

			[Token(Token = "0x1700057A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003032")]
				[Address(RVA = "0x172123C", Offset = "0x172123C", VA = "0x172123C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003034")]
				[Address(RVA = "0x172130C", Offset = "0x172130C", VA = "0x172130C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600302F")]
			[Address(RVA = "0x171C614", Offset = "0x171C614", VA = "0x171C614")]
			[DebuggerHidden]
			public <ShowMenu>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6003030")]
			[Address(RVA = "0x1720BE4", Offset = "0x1720BE4", VA = "0x1720BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003031")]
			[Address(RVA = "0x1720BF8", Offset = "0x1720BF8", VA = "0x1720BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003033")]
			[Address(RVA = "0x172126C", Offset = "0x172126C", VA = "0x172126C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1824", Offset = "0xBE1824")]
		private sealed class <ShowMenuAndAddPoints>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5039C")]
			private int <>1__state;

			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FrameworkManager <>4__this;

			[Token(Token = "0x4002EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int pointsToAdd;

			[Token(Token = "0x4002EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x547A")]
			public OverallStatistic overallStat;

			[Token(Token = "0x1700057C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003038")]
				[Address(RVA = "0x17218F0", Offset = "0x17218F0", VA = "0x17218F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600303A")]
				[Address(RVA = "0x17219C0", Offset = "0x17219C0", VA = "0x17219C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003035")]
			[Address(RVA = "0x171C65C", Offset = "0x171C65C", VA = "0x171C65C")]
			[DebuggerHidden]
			public <ShowMenuAndAddPoints>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003036")]
			[Address(RVA = "0x172133C", Offset = "0x172133C", VA = "0x172133C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003037")]
			[Address(RVA = "0x1721350", Offset = "0x1721350", VA = "0x1721350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003039")]
			[Address(RVA = "0x1721920", Offset = "0x1721920", VA = "0x1721920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1860", Offset = "0xBE1860")]
		private sealed class <LaunchMenu>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD503A4")]
			private object <>2__current;

			[Token(Token = "0x1700057E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600303E")]
				[Address(RVA = "0x171F75C", Offset = "0x171F75C", VA = "0x171F75C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003040")]
				[Address(RVA = "0x171F82C", Offset = "0x171F82C", VA = "0x171F82C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600303B")]
			[Address(RVA = "0x171C78C", Offset = "0x171C78C", VA = "0x171C78C")]
			[DebuggerHidden]
			public <LaunchMenu>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600303C")]
			[Address(RVA = "0x171F250", Offset = "0x171F250", VA = "0x171F250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600303D")]
			[Address(RVA = "0x171F264", Offset = "0x171F264", VA = "0x171F264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600303F")]
			[Address(RVA = "0x171F78C", Offset = "0x171F78C", VA = "0x171F78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE189C", Offset = "0xBE189C")]
		private sealed class <RemoveAllScenesExcept>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<string> scenesToKeep;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5482")]
			private List<AsyncOperation> <ops>5__2;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private bool <allFinished>5__3;

			[Token(Token = "0x17000580")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003044")]
				[Address(RVA = "0x1720AE4", Offset = "0x1720AE4", VA = "0x1720AE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000581")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003046")]
				[Address(RVA = "0x1720BB4", Offset = "0x1720BB4", VA = "0x1720BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003041")]
			[Address(RVA = "0x171C89C", Offset = "0x171C89C", VA = "0x171C89C")]
			[DebuggerHidden]
			public <RemoveAllScenesExcept>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6003042")]
			[Address(RVA = "0x171FF18", Offset = "0x171FF18", VA = "0x171FF18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003043")]
			[Address(RVA = "0x171FF2C", Offset = "0x171FF2C", VA = "0x171FF2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003045")]
			[Address(RVA = "0x1720B14", Offset = "0x1720B14", VA = "0x1720B14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string FRAMEWORK_SCENE_NAME;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string GAME_SCENE_NAME;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string MENU_SCENE_NAME;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544A")]
		public static readonly string MENU_ENV_SCENE_NAME;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool usePlatformIntegration;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50374")]
		[SerializeField]
		private GameObject fpvSpectatorCamera;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject avatarSpectatorCamera;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject genericAvatar;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject skycityAvatar;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5452")]
		[SerializeField]
		private GameObject desertAvatar;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject spaceAvatar;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5037C")]
		[SerializeField]
		private GameObject medievalAvatar;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip[] hitAudioClip;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool frameworkWasStarted;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameConfiguration config;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x545A")]
		private SongManager songManager;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int playerHighscore;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50384")]
		private bool isWelcomePanelVisible;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool justPlayedASong;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool showPlayspaceSizeWarningDialog;

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x171BD18", Offset = "0x171BD18", VA = "0x171BD18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x171BE48", Offset = "0x171BE48", VA = "0x171BE48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24198", Offset = "0xC24198")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x171BF4C", Offset = "0x171BF4C", VA = "0x171BF4C")]
		internal void LoadGame()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x171C0B8", Offset = "0x171C0B8", VA = "0x171C0B8")]
		internal void LoadEditor()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x171BFFC", Offset = "0x171BFFC", VA = "0x171BFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24248", Offset = "0xC24248")]
		private IEnumerator LaunchGame()
		{
			return null;
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x171C26C", Offset = "0x171C26C", VA = "0x171C26C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC242F8", Offset = "0xC242F8")]
		private IEnumerator PreloadShaders()
		{
			return null;
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x171C168", Offset = "0x171C168", VA = "0x171C168")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC243A8", Offset = "0xC243A8")]
		private IEnumerator LaunchEditor()
		{
			return null;
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x171C39C", Offset = "0x171C39C", VA = "0x171C39C")]
		internal void ReturnFromSong(int songScore, OverallStatistic overallStat)
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x171C510", Offset = "0x171C510", VA = "0x171C510")]
		internal void ReturnFromEditor()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x171C558", Offset = "0x171C558", VA = "0x171C558")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24458", Offset = "0xC24458")]
		private IEnumerator ShowMenu()
		{
			return null;
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x171C404", Offset = "0x171C404", VA = "0x171C404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24508", Offset = "0xC24508")]
		private IEnumerator ShowMenuAndAddPoints(int pointsToAdd, OverallStatistic overallStat)
		{
			return null;
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x171C6A4", Offset = "0x171C6A4", VA = "0x171C6A4")]
		internal void Reset()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x171C6EC", Offset = "0x171C6EC", VA = "0x171C6EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC245B8", Offset = "0xC245B8")]
		private IEnumerator LaunchMenu()
		{
			return null;
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x171C7D4", Offset = "0x171C7D4", VA = "0x171C7D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24668", Offset = "0xC24668")]
		private IEnumerator RemoveAllScenesExcept(List<string> scenesToKeep)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x171C8E4", Offset = "0x171C8E4", VA = "0x171C8E4")]
		public bool IsUsePlatformIntegration()
		{
			return default(bool);
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x171C928", Offset = "0x171C928", VA = "0x171C928")]
		public void SetWelcomePanelVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x171C974", Offset = "0x171C974", VA = "0x171C974")]
		public bool IsWelcomePanelVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x171C9B8", Offset = "0x171C9B8", VA = "0x171C9B8")]
		public void ActivateFpvSpectatorCam(bool isActive)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x171CA24", Offset = "0x171CA24", VA = "0x171CA24")]
		public Camera GetFPVSpectatorCam()
		{
			return null;
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x171CABC", Offset = "0x171CABC", VA = "0x171CABC")]
		public void SetAvatarSpectatorCam(bool isActive)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x171CF84", Offset = "0x171CF84", VA = "0x171CF84")]
		public void SetAvatarScale()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x171D470", Offset = "0x171D470", VA = "0x171D470")]
		public AudioClip GetHitSound(int hitSound)
		{
			return null;
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x171D4D4", Offset = "0x171D4D4", VA = "0x171D4D4")]
		public int GetNumberOfHitSounds()
		{
			return default(int);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x171D518", Offset = "0x171D518", VA = "0x171D518")]
		private void ToggleControllerPausing(bool shouldPause)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x171D684", Offset = "0x171D684", VA = "0x171D684")]
		public FrameworkManager()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class CalorieCalculator
	{
		[Token(Token = "0x4001C7E")]
		private const int BASE_HEART_RATE = 65;

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1984EEC", Offset = "0x1984EEC", VA = "0x1984EEC")]
		private static float CalculateEnergyExpenditureInKiloJoule(GameConfiguration.Gender gender, int age, int kilogram, int heartrate)
		{
			return default(float);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1985284", Offset = "0x1985284", VA = "0x1985284")]
		private static float CalculateEnergyExpenditureInKiloCaloriesPerMinute(GameConfiguration.Gender gender, int age, int kilogram, int heartrate)
		{
			return default(float);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x198530C", Offset = "0x198530C", VA = "0x198530C")]
		private static float CalculateEnergyExpenditureInKiloCalories(GameConfiguration.Gender gender, int age, int kilogram, int heartrate, float timeInSeconds)
		{
			return default(float);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x19853A4", Offset = "0x19853A4", VA = "0x19853A4")]
		public static float CalculateEnergyExpenditureInKiloCaloriesForOneSecond(GameConfiguration.Gender gender, int age, int kilogram, int heartRate)
		{
			return default(float);
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x19854D4", Offset = "0x19854D4", VA = "0x19854D4")]
		public static int CalculateHeartRateBasedOnMovement(int age, float movementFactor)
		{
			return default(int);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x19854AC", Offset = "0x19854AC", VA = "0x19854AC")]
		private static float GetBaseKiloCaloriePerSecond(GameConfiguration.Gender gender, int age, int kilogram)
		{
			return default(float);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x198569C", Offset = "0x198569C", VA = "0x198569C")]
		public CalorieCalculator()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class EndScreenDisplay : MonoBehaviour
	{
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE18D8", Offset = "0xBE18D8")]
		private sealed class <_ApplyStrengthBonus>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5040C")]
			private int <>1__state;

			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int scoreWithoutAnyBonus;

			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int strengthBonus;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54F8")]
			public EndScreenDisplay <>4__this;

			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int activityBonus;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD50414")]
			private float <scoreAdditive>5__2;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <remainder>5__3;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <incrementSpeed>5__4;

			[Token(Token = "0x17000582")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600304A")]
				[Address(RVA = "0x171299C", Offset = "0x171299C", VA = "0x171299C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000583")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600304C")]
				[Address(RVA = "0x1712A6C", Offset = "0x1712A6C", VA = "0x1712A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003047")]
			[Address(RVA = "0x170F9C0", Offset = "0x170F9C0", VA = "0x170F9C0")]
			[DebuggerHidden]
			public <_ApplyStrengthBonus>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6003048")]
			[Address(RVA = "0x1712324", Offset = "0x1712324", VA = "0x1712324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003049")]
			[Address(RVA = "0x1712338", Offset = "0x1712338", VA = "0x1712338", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600304B")]
			[Address(RVA = "0x17129CC", Offset = "0x17129CC", VA = "0x17129CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1914", Offset = "0xBE1914")]
		private sealed class <_ApplyActivityBonus>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5500")]
			private object <>2__current;

			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int scoreWithoutActivityBonus;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5041C")]
			public int activityBonus;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EndScreenDisplay <>4__this;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <scoreAdditive>5__2;

			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <remainder>5__3;

			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5508")]
			private float <incrementSpeed>5__4;

			[Token(Token = "0x17000584")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003050")]
				[Address(RVA = "0x1712224", Offset = "0x1712224", VA = "0x1712224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000585")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003052")]
				[Address(RVA = "0x17122F4", Offset = "0x17122F4", VA = "0x17122F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600304D")]
			[Address(RVA = "0x170FB14", Offset = "0x170FB14", VA = "0x170FB14")]
			[DebuggerHidden]
			public <_ApplyActivityBonus>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x600304E")]
			[Address(RVA = "0x1711CE4", Offset = "0x1711CE4", VA = "0x1711CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600304F")]
			[Address(RVA = "0x1711CF8", Offset = "0x1711CF8", VA = "0x1711CF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003051")]
			[Address(RVA = "0x1712254", Offset = "0x1712254", VA = "0x1712254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503AC")]
		private static readonly Dictionary<WeaponType, string> WEAPON_ICON;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548A")]
		public GameObject mainScreen;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06C40", Offset = "0xC06C40")]
		public GameObject singleChallengePanels;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB2C")]
		public TextMeshProUGUI songTitleText;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextBasedLocalizedString durationText;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PrefixBasedLocalizedString overallRatingText;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] starPlaceholders;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5491")]
		[SerializeField]
		private Sprite filledStar;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Sprite halfStar;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503B4")]
		[SerializeField]
		private Sprite emptyStar;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI totalPointsLabel;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI totalPointsText;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI activityBonusLabel;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5499")]
		public TextMeshProUGUI activityBonusText;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TextMeshProUGUI strengthBonusLabel;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503BC")]
		public TextMeshProUGUI strengthBonusText;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI playerHighscoreLabel;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI playerHighscoreText;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI maxComboText;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54A1")]
		public TextMeshProUGUI streamsCatchedLabel;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TextMeshProUGUI streamsCatchedText;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503C4")]
		public Slider streamsCatchedSlider;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI perfectHitsLabel;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI perfectHitsText;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI hitsText;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54A9")]
		public Slider hitsSlider;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TextMeshProUGUI missedText;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503CC")]
		public TextMeshProUGUI failsText;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI squatsSessionText;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI hitSpeedText;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI hitSpeedLabel;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54B1")]
		public TextMeshProUGUI weaponIconTextSingle;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06D94", Offset = "0xC06D94")]
		public GameObject calorieHeartratePanel;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503D4")]
		public GameObject caloriesPanel;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PrefixBasedLocalizedString caloriesSongPlaylistLabelText;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI caloriesSessionText;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI caloriesSinceResetText;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54B9")]
		public TextMeshProUGUI lifetimeCaloriesText;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameObject heartratePanel;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503DC")]
		public TextMeshProUGUI maximumHeartrateText;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI averageHeartrateText;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PrefixBasedLocalizedString heartRateSubtitleText;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06DF8", Offset = "0xC06DF8")]
		public GameObject playlistPanels;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C1")]
		public GameObject overviewPanel;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public PlaylistSongInfoLocalizationString numberOfFinishedSongsText;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503E4")]
		public TextBasedLocalizedString playlistDurationText;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlaylistEndscreenManager playlistEndScreenManager;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI weaponIconTextPlaylist;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06E5C", Offset = "0xC06E5C")]
		public GameObject analysisPanel;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C9")]
		public TextMeshProUGUI bestComboText;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TextMeshProUGUI newHighscoresText;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503EC")]
		public TextMeshProUGUI flawlessVictoriesText;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI totalSquatsText;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject accuracyInfo;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI accuracyText;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54D1")]
		public AccuracyStrengthLocalizedString accuracyDescriptionText;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Image accuracyImage;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503F4")]
		public GameObject strengthInfo;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI strengthText;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AccuracyStrengthLocalizedString strengthDetailsText;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image strengthImage;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54D9")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06EC0", Offset = "0xC06EC0")]
		public GameObject modifierPanel;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public EndscreenModifierController endscreenModifierController;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD503FC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06F24", Offset = "0xC06F24")]
		public GameObject menuButtonPanel;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton nextSongButton;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton playAgainButton;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton overviewButton;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54E1")]
		public MenuSelectButton playlistAnalysisButton;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC06F88", Offset = "0xC06F88")]
		public EndScreenFireworks fireworks;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB34")]
		public TextMeshProUGUI date;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<MenuSelectButton.Action, MenuSelectButton> allButtons;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameManager gameManager;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongStatistic stat;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54E8")]
		private OverallStatistic overallStat;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<SongStatistic> songStatList;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50404")]
		private bool overviewAlreadyShown;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isMetric;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string strengthFormat;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string disabledText;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54F0")]
		private GameConfiguration gameConfig;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x14000030")]
		public event Action nextSongClicked
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x170AAF4", Offset = "0x170AAF4", VA = "0x170AAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24718", Offset = "0xC24718")]
			add
			{
			}
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x170AC40", Offset = "0x170AC40", VA = "0x170AC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24754", Offset = "0xC24754")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action playAgainClicked
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x170AD8C", Offset = "0x170AD8C", VA = "0x170AD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24790", Offset = "0xC24790")]
			add
			{
			}
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x170AED8", Offset = "0x170AED8", VA = "0x170AED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC247CC", Offset = "0xC247CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action overviewClicked
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x170B024", Offset = "0x170B024", VA = "0x170B024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24808", Offset = "0xC24808")]
			add
			{
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x170B170", Offset = "0x170B170", VA = "0x170B170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24844", Offset = "0xC24844")]
			remove
			{
			}
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x170B2BC", Offset = "0x170B2BC", VA = "0x170B2BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x170BAE8", Offset = "0x170BAE8", VA = "0x170BAE8")]
		public void ShowEndScreen(SongStatistic stat, OverallStatistic overallStat, bool showNextSongButton, bool isSingleSong, bool directlyShowPlaylistOverview, bool isMetric)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x170F88C", Offset = "0x170F88C", VA = "0x170F88C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24880", Offset = "0xC24880")]
		private IEnumerator _ApplyStrengthBonus(int strengthBonus, int scoreWithoutAnyBonus, int activityBonus)
		{
			return null;
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x170FA08", Offset = "0x170FA08", VA = "0x170FA08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24930", Offset = "0xC24930")]
		private IEnumerator _ApplyActivityBonus(int activityBonus, int scoreWithoutActivityBonus)
		{
			return null;
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x170F46C", Offset = "0x170F46C", VA = "0x170F46C")]
		private void FillStars(float number)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x170FB5C", Offset = "0x170FB5C", VA = "0x170FB5C")]
		public void HideEndMenu()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x170FDA4", Offset = "0x170FDA4", VA = "0x170FDA4")]
		public void ShowOverview(int numberOfFinishedSongs, string playlistDuration, List<SongStatistic> songStatList, int playlistSongCount, int playedRounds)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x17107D0", Offset = "0x17107D0", VA = "0x17107D0")]
		private void ShowPlaylistAnalysis()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1710C00", Offset = "0x1710C00", VA = "0x1710C00")]
		private void DisplayAccuracyInfo(bool isActive)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1710E0C", Offset = "0x1710E0C", VA = "0x1710E0C")]
		private void DisplayStrengthInfo(bool isActive)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x17110E8", Offset = "0x17110E8", VA = "0x17110E8")]
		private void AssembleAccuracyDescription()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x171133C", Offset = "0x171133C", VA = "0x171133C")]
		private void Overview_songClicked(int index)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1711444", Offset = "0x1711444", VA = "0x1711444")]
		private void ButtonClicked(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x170E604", Offset = "0x170E604", VA = "0x170E604")]
		private void AnimatePanel(GameObject panel, Vector3 vectorToShift, float timeToShift)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x17117DC", Offset = "0x17117DC", VA = "0x17117DC")]
		private void MenuButtonSelectHoverEnter(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1711794", Offset = "0x1711794", VA = "0x1711794")]
		public void PlayClickSound()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1711810", Offset = "0x1711810", VA = "0x1711810")]
		public void PlayHoverSound()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1711858", Offset = "0x1711858", VA = "0x1711858")]
		public EndScreenDisplay()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1711B28", Offset = "0x1711B28", VA = "0x1711B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC249E0", Offset = "0xC249E0")]
		private void <Awake>b__90_0(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1711BBC", Offset = "0x1711BBC", VA = "0x1711BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24A1C", Offset = "0xC24A1C")]
		private void <Awake>b__90_1(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1711C50", Offset = "0x1711C50", VA = "0x1711C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24A58", Offset = "0xC24A58")]
		private void <Awake>b__90_2(MenuSelectButton button)
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class EndScreenFireworks : MonoBehaviour
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ParticleSystem[] fireworksParticleSystems;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50424")]
		[SerializeField]
		private SoundPlayTime[] fireworksAudioScripts;

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x170FC28", Offset = "0x170FC28", VA = "0x170FC28")]
		public void EndFireworks()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x170F20C", Offset = "0x170F20C", VA = "0x170F20C")]
		public void SetFireworks(bool isActive)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1712A9C", Offset = "0x1712A9C", VA = "0x1712A9C")]
		private void StopAudioScriptWithDelay()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1712B98", Offset = "0x1712B98", VA = "0x1712B98")]
		public EndScreenFireworks()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class EndscreenModifierController : MonoBehaviour
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject container;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private EndscreenModifierEntry entryTemplate;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject noModifiersActive;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5510")]
		private Dictionary<GameConfiguration.Modifier, EndscreenModifierEntry> modifierToEntry;

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1712BC8", Offset = "0x1712BC8", VA = "0x1712BC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x170EA34", Offset = "0x170EA34", VA = "0x170EA34")]
		public void PopulatePanel(GameConfiguration config, SongStatistic stat, bool forceActive)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1713710", Offset = "0x1713710", VA = "0x1713710")]
		public EndscreenModifierController()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class BlackPlane : MonoBehaviour
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Renderer meshRenderer;

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1984DB4", Offset = "0x1984DB4", VA = "0x1984DB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1984E0C", Offset = "0x1984E0C", VA = "0x1984E0C")]
		public void Show()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1984E64", Offset = "0x1984E64", VA = "0x1984E64")]
		public void Hide()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1984EBC", Offset = "0x1984EBC", VA = "0x1984EBC")]
		public BlackPlane()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class EnvironmentSetting : MonoBehaviour
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5042C")]
		public float shatterTrailOpacity;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC07154", Offset = "0xC07154")]
		public BeautifyProfile beautifyProfile;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject[] weaponTrails;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject swingIndicator;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5518")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC071B8", Offset = "0xC071B8")]
		public Vector3 scorePos;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 statusLeftPos;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50434")]
		public Vector3 statusRightPos;

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1717FB0", Offset = "0x1717FB0", VA = "0x1717FB0")]
		public void DoSomeSkyboxVariation()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x17182A4", Offset = "0x17182A4", VA = "0x17182A4")]
		public void SetWeaponTrails(bool isActive)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x17183C0", Offset = "0x17183C0", VA = "0x17183C0")]
		public EnvironmentSetting()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class FlockingAnimals : MonoBehaviour
	{
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject animals;

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x171AC34", Offset = "0x171AC34", VA = "0x171AC34")]
		public void EnableFlockingAnimals()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x171AC8C", Offset = "0x171AC8C", VA = "0x171AC8C")]
		public void DisableFlockingAnimals()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x171ACE4", Offset = "0x171ACE4", VA = "0x171ACE4")]
		public FlockingAnimals()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class DesertHighlighter : EnvironmentHighlighter
	{
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1950", Offset = "0xBE1950")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD5043C")]
			public Material mat;

			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DesertHighlighter <>4__this;

			[Token(Token = "0x6003053")]
			[Address(RVA = "0x16F8164", Offset = "0x16F8164", VA = "0x16F8164")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003054")]
			[Address(RVA = "0x16F82F4", Offset = "0x16F82F4", VA = "0x16F82F4")]
			internal void <HighlightSingle>b__0()
			{
			}
		}

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float SINGLE_FLASH_DURATION;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float FLOW_DURATION;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5520")]
		private List<GameObject> runePilars;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color color;

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x16F70B4", Offset = "0x16F70B4", VA = "0x16F70B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x16F76BC", Offset = "0x16F76BC", VA = "0x16F76BC")]
		private new void Update()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x16F76EC", Offset = "0x16F76EC", VA = "0x16F76EC", Slot = "5")]
		public override void HighlightFlush()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x16F7B08", Offset = "0x16F7B08", VA = "0x16F7B08", Slot = "4")]
		public override void HighlightSingle(float strength)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x16F8194", Offset = "0x16F8194", VA = "0x16F8194")]
		public DesertHighlighter()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class DesertHighlighterQuest : EnvironmentHighlighter
	{
		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float SINGLE_FLASH_DURATION;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float FLOW_DURATION;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5528")]
		private List<GameObject> runePilars;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<MeshRenderer> runePilarsRenderer;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50444")]
		private Color color;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color whiteFullAlpha;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color whiteZeroAlpha;

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x16F83C4", Offset = "0x16F83C4", VA = "0x16F83C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x16F89F4", Offset = "0x16F89F4", VA = "0x16F89F4")]
		private new void Update()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x16F8A24", Offset = "0x16F8A24", VA = "0x16F8A24", Slot = "5")]
		public override void HighlightFlush()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x16F8E68", Offset = "0x16F8E68", VA = "0x16F8E68", Slot = "4")]
		public override void HighlightSingle(float strength)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x16F96A4", Offset = "0x16F96A4", VA = "0x16F96A4")]
		public DesertHighlighterQuest()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class SpaceHighlighter : EnvironmentHighlighter
	{
		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE198C", Offset = "0xBE198C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LineRenderer renderer;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpaceHighlighter <>4__this;

			[Token(Token = "0x6003055")]
			[Address(RVA = "0x18EF590", Offset = "0x18EF590", VA = "0x18EF590")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6003056")]
			[Address(RVA = "0x18EFFF8", Offset = "0x18EFFF8", VA = "0x18EFFF8")]
			internal void <HighlightSingle>b__0()
			{
			}
		}

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LineRenderer lineRendererTemplate;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5530")]
		private List<LineRenderer> lineRenderers;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<GameObject> satellites;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5044C")]
		private bool highlightingIsActive;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x18EE280", Offset = "0x18EE280", VA = "0x18EE280")]
		public void Start()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x18EEBE4", Offset = "0x18EEBE4", VA = "0x18EEBE4", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x18EEF70", Offset = "0x18EEF70", VA = "0x18EEF70", Slot = "4")]
		public override void HighlightSingle(float strength)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x18EF5C0", Offset = "0x18EF5C0", VA = "0x18EF5C0", Slot = "5")]
		public override void HighlightFlush()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x18EFE28", Offset = "0x18EFE28", VA = "0x18EFE28")]
		public SpaceHighlighter()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x18EFF98", Offset = "0x18EFF98", VA = "0x18EFF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24A94", Offset = "0xC24A94")]
		private void <HighlightSingle>b__6_1()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x18EFFC8", Offset = "0x18EFFC8", VA = "0x18EFFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24AD0", Offset = "0xC24AD0")]
		private void <HighlightFlush>b__7_0()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class SpaceHighlighter2 : EnvironmentHighlighter
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE19C8", Offset = "0xBE19C8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpaceHighlighter2 <>4__this;

			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int start;

			[Token(Token = "0x6003057")]
			[Address(RVA = "0x18F1490", Offset = "0x18F1490", VA = "0x18F1490")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6003058")]
			[Address(RVA = "0x18F1660", Offset = "0x18F1660", VA = "0x18F1660")]
			internal void <HighlightFlush>b__0()
			{
			}
		}

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1A04", Offset = "0xBE1A04")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x553F")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6003059")]
			[Address(RVA = "0x18F14C0", Offset = "0x18F14C0", VA = "0x18F14C0")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x600305A")]
			[Address(RVA = "0x18F16AC", Offset = "0x18F16AC", VA = "0x18F16AC")]
			internal void <HighlightFlush>b__1()
			{
			}
		}

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LightningBoltPrefabScript lbs;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5538")]
		private List<LightningBoltPrefabScript> lightnings;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<GameObject> satellites;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB3C")]
		private bool highlightingIsActive;

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x18F0120", Offset = "0x18F0120", VA = "0x18F0120")]
		public void Start()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x18F0BAC", Offset = "0x18F0BAC", VA = "0x18F0BAC", Slot = "4")]
		public override void HighlightSingle(float strength)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x18F1080", Offset = "0x18F1080", VA = "0x18F1080", Slot = "5")]
		public override void HighlightFlush()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x18F14F0", Offset = "0x18F14F0", VA = "0x18F14F0")]
		public SpaceHighlighter2()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class MedievalWater : MonoBehaviour
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameObject highQualityWater;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50454")]
		public GameObject lowQualityWater;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1887578", Offset = "0x1887578", VA = "0x1887578")]
		public void EnableHighQualityWater()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1887600", Offset = "0x1887600", VA = "0x1887600")]
		public void EnableLowQualityWater()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1887688", Offset = "0x1887688", VA = "0x1887688")]
		public void DisableWater()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1887708", Offset = "0x1887708", VA = "0x1887708")]
		public MedievalWater()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class RedFlashPlane : MonoBehaviour
	{
		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Animator animator;

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1775158", Offset = "0x1775158", VA = "0x1775158")]
		private void Start()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x17751E4", Offset = "0x17751E4", VA = "0x17751E4")]
		public void Flash()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1775280", Offset = "0x1775280", VA = "0x1775280")]
		public RedFlashPlane()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class SceneStartupChecker : MonoBehaviour
	{
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x177A9C0", Offset = "0x177A9C0", VA = "0x177A9C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x177AAF0", Offset = "0x177AAF0", VA = "0x177AAF0")]
		public SceneStartupChecker()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class SoundConfiguration : MonoBehaviour
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0721C", Offset = "0xC0721C")]
		public AudioClip hitSpeedTooSlow;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip getReady;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5547")]
		public AudioClip getReadyFemale;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip hitHarder;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5045C")]
		public AudioClip hitHarderFemale;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip flawlessVictory;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip flawlessVictoryFemale;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip flawlessVictoryJingle;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x554F")]
		public AudioClip activateEndScreen;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip newHighscore;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50464")]
		public AudioClip newHighscoreFemale;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC07280", Offset = "0xC07280")]
		public AudioClip fistCracksBall;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip fistDestroysBall;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip fistCracksHardBall;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5557")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC072E4", Offset = "0xC072E4")]
		public AudioClip hammerCracksBall;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip hammerDestroysBall;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5046C")]
		public AudioClip hammerCracksHardBall;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip hammerDestroysHardBall;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC07348", Offset = "0xC07348")]
		public AudioClip shieldMeetsBall;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip shieldMeetsHardBall;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x555F")]
		public AudioClip shieldMeetsBallObstacle;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip shieldUnfold;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50474")]
		public AudioClip shieldFoldIn;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC073AC", Offset = "0xC073AC")]
		public AudioClip powerFistDestructionSound;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip powerFistChargedLoop;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip powerFistRelease;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5567")]
		public AudioClip powerFistFullyCharged;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip powerFistFullyChargedFemale;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5047C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC07410", Offset = "0xC07410")]
		public AudioClip streamLoop;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC07474", Offset = "0xC07474")]
		public AudioClip wallApproaches;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip wallPassesLoop;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip wallLeaves;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x556F")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC074D8", Offset = "0xC074D8")]
		public List<AudioClip> damageSounds;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public List<AudioClip> damageSoundsFemale;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50484")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0753C", Offset = "0xC0753C")]
		public AudioClip[] combos;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip[] combosFemale;

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x18EE18C", Offset = "0x18EE18C", VA = "0x18EE18C")]
		public void SetHitAudio(AudioClip selectedAudioClip)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x18EE250", Offset = "0x18EE250", VA = "0x18EE250")]
		public SoundConfiguration()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class EnvironmentAdjustor : MonoBehaviour
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private EnvironmentListManager listManager;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5577")]
		[SerializeField]
		private Image theBigPicture;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI envDescription;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5048C")]
		[SerializeField]
		private LoadSkyboxDialog skyboxDialog;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton editButton;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton deleteButton;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x557F")]
		[SerializeField]
		private PurchaseInfo purchaseInfo;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private EnvironmentManager envManager;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50494")]
		private GameEnvironment previouslySelected;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameConfiguration config;

		[Token(Token = "0x14000033")]
		public event Action<GameEnvironment> EnvChanged
		{
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x1713740", Offset = "0x1713740", VA = "0x1713740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24B0C", Offset = "0xC24B0C")]
			add
			{
			}
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x171388C", Offset = "0x171388C", VA = "0x171388C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24B48", Offset = "0xC24B48")]
			remove
			{
			}
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x17139D8", Offset = "0x17139D8", VA = "0x17139D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1713F8C", Offset = "0x1713F8C", VA = "0x1713F8C")]
		private void PurchaseInfo_cancelClicked()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x171409C", Offset = "0x171409C", VA = "0x171409C")]
		private void PurchaseInfo_purchaseFinished(bool wasInFactPurchased)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x171413C", Offset = "0x171413C", VA = "0x171413C")]
		private void DeleteButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1714294", Offset = "0x1714294", VA = "0x1714294")]
		public void HideDialoguesInitially()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x171431C", Offset = "0x171431C", VA = "0x171431C")]
		private void EditButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1713EB8", Offset = "0x1713EB8", VA = "0x1713EB8")]
		private void SetEditButtons(bool v)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1714410", Offset = "0x1714410", VA = "0x1714410")]
		private void SkyboxDialog_DialogClosed(bool okPressed)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1713FE0", Offset = "0x1713FE0", VA = "0x1713FE0")]
		private void SelectPreviouslySelectedElement()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1714EDC", Offset = "0x1714EDC", VA = "0x1714EDC")]
		private void ListManager_EnvClicked(GameEnvironment env)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1715260", Offset = "0x1715260", VA = "0x1715260")]
		internal void SetEnvironment(GameEnvironment selectedEnvironment)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1714C18", Offset = "0x1714C18", VA = "0x1714C18")]
		internal int GetEnvironmentIndex(GameEnvironment obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1715400", Offset = "0x1715400", VA = "0x1715400")]
		internal GameEnvironment GetEnvironmentByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x17155B0", Offset = "0x17155B0", VA = "0x17155B0")]
		internal void SetGameConfiguration(GameConfiguration config)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x17155E8", Offset = "0x17155E8", VA = "0x17155E8")]
		public EnvironmentAdjustor()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1715618", Offset = "0x1715618", VA = "0x1715618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24B84", Offset = "0xC24B84")]
		private void <DeleteButton_onClick>b__17_0(int result, bool checkbox)
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class EnvironmentManager : MonoBehaviour
	{
		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1A40", Offset = "0xBE1A40")]
		private sealed class <TryLoadPreviewImage>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB44")]
			private int <>1__state;

			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EnvironmentManager <>4__this;

			[Token(Token = "0x4002EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameEnvironment env;

			[Token(Token = "0x4002EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5596")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x17000586")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600305F")]
				[Address(RVA = "0x1717EB0", Offset = "0x1717EB0", VA = "0x1717EB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000587")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003061")]
				[Address(RVA = "0x1717F80", Offset = "0x1717F80", VA = "0x1717F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600305B")]
			[Address(RVA = "0x17170C4", Offset = "0x17170C4", VA = "0x17170C4")]
			[DebuggerHidden]
			public <TryLoadPreviewImage>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600305C")]
			[Address(RVA = "0x17171EC", Offset = "0x17171EC", VA = "0x17171EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600305D")]
			[Address(RVA = "0x171745C", Offset = "0x171745C", VA = "0x171745C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600305E")]
			[Address(RVA = "0x1717384", Offset = "0x1717384", VA = "0x1717384")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003060")]
			[Address(RVA = "0x1717EE0", Offset = "0x1717EE0", VA = "0x1717EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite envImg_Space;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite envImg_Desert;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5587")]
		[SerializeField]
		private Sprite envImg_Medieval;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Sprite envImg_Sky;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5049C")]
		[SerializeField]
		private Sprite envImg_Add;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC078E8", Offset = "0xC078E8")]
		private List<GameEnvironment> <Environments>k__BackingField;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string ENVIRONMENTS_DIR;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string ENVIRONMENTS_FILE_NAME;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558F")]
		private string environmentsDir;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string environmentFile;

		[Token(Token = "0x17000439")]
		public List<GameEnvironment> Environments
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x1715F6C", Offset = "0x1715F6C", VA = "0x1715F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24BC0", Offset = "0xC24BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x1715F9C", Offset = "0x1715F9C", VA = "0x1715F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24BFC", Offset = "0xC24BFC")]
			private set
			{
			}
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1715FD4", Offset = "0x1715FD4", VA = "0x1715FD4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1715788", Offset = "0x1715788", VA = "0x1715788")]
		internal void DeleteEnvironment(GameEnvironment toDelete)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1714CE0", Offset = "0x1714CE0", VA = "0x1714CE0")]
		internal void UpdateEnvironment(GameEnvironment env, string path, Sprite previewImage, float rotation, Vector3 sunRotation)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1714844", Offset = "0x1714844", VA = "0x1714844")]
		internal GameEnvironment AddEnvironment(string path, Sprite previewImage, float rotation, Vector3 sunRotation)
		{
			return null;
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1716EC0", Offset = "0x1716EC0", VA = "0x1716EC0")]
		private void SaveThumbnail(Sprite previewImage, string name)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x171673C", Offset = "0x171673C", VA = "0x171673C")]
		private void Load()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1716FE0", Offset = "0x1716FE0", VA = "0x1716FE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC24C38", Offset = "0xC24C38")]
		private IEnumerator TryLoadPreviewImage(GameEnvironment env)
		{
			return null;
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1716A5C", Offset = "0x1716A5C", VA = "0x1716A5C")]
		public void Save()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x171710C", Offset = "0x171710C", VA = "0x171710C")]
		public EnvironmentManager()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class GameEnvironment
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07924", Offset = "0xC07924")]
		private GameConfiguration.GameEnvironmentID <EnvID>k__BackingField;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07960", Offset = "0xC07960")]
		private bool <IsBuiltIn>k__BackingField;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0799C", Offset = "0xC0799C")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC079D8", Offset = "0xC079D8")]
		private bool <IsError>k__BackingField;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07A14", Offset = "0xC07A14")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x559E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07A50", Offset = "0xC07A50")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07A8C", Offset = "0xC07A8C")]
		private Sprite <PreviewImage>k__BackingField;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07AC8", Offset = "0xC07AC8")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC07B04", Offset = "0xC07B04")]
		private Vector3 <SunRotation>k__BackingField;

		[Token(Token = "0x1700043A")]
		public GameConfiguration.GameEnvironmentID EnvID
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x17C0504", Offset = "0x17C0504", VA = "0x17C0504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24CE8", Offset = "0xC24CE8")]
			get
			{
				return default(GameConfiguration.GameEnvironmentID);
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x17C0534", Offset = "0x17C0534", VA = "0x17C0534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24D24", Offset = "0xC24D24")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public bool IsBuiltIn
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x17C056C", Offset = "0x17C056C", VA = "0x17C056C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24D60", Offset = "0xC24D60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x17C05B0", Offset = "0x17C05B0", VA = "0x17C05B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24D9C", Offset = "0xC24D9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public bool IsNew
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x17C05FC", Offset = "0x17C05FC", VA = "0x17C05FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24DD8", Offset = "0xC24DD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x17C0640", Offset = "0x17C0640", VA = "0x17C0640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24E14", Offset = "0xC24E14")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public bool IsError
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x17C068C", Offset = "0x17C068C", VA = "0x17C068C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24E50", Offset = "0xC24E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x17C06D0", Offset = "0x17C06D0", VA = "0x17C06D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24E8C", Offset = "0xC24E8C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public string Name
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x17C071C", Offset = "0x17C071C", VA = "0x17C071C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24EC8", Offset = "0xC24EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x17C074C", Offset = "0x17C074C", VA = "0x17C074C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24F04", Offset = "0xC24F04")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public string FilePath
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x17C0784", Offset = "0x17C0784", VA = "0x17C0784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24F40", Offset = "0xC24F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x17C07B4", Offset = "0x17C07B4", VA = "0x17C07B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24F7C", Offset = "0xC24F7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public Sprite PreviewImage
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x17C07EC", Offset = "0x17C07EC", VA = "0x17C07EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24FB8", Offset = "0xC24FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x17C081C", Offset = "0x17C081C", VA = "0x17C081C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC24FF4", Offset = "0xC24FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public float Rotation
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x17C0854", Offset = "0x17C0854", VA = "0x17C0854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25030", Offset = "0xC25030")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x17C0884", Offset = "0x17C0884", VA = "0x17C0884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2506C", Offset = "0xC2506C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public Vector3 SunRotation
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x17C08BC", Offset = "0x17C08BC", VA = "0x17C08BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC250A8", Offset = "0xC250A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x17C08FC", Offset = "0x17C08FC", VA = "0x17C08FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC250E4", Offset = "0xC250E4")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x17C095C", Offset = "0x17C095C", VA = "0x17C095C")]
		public static GameEnvironment LoadFromJSON(JSONObject serializedPlaylist)
		{
			return null;
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x17C0DC4", Offset = "0x17C0DC4", VA = "0x17C0DC4")]
		internal JSONObject SaveToJSON()
		{
			return null;
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x17C0FE8", Offset = "0x17C0FE8", VA = "0x17C0FE8")]
		internal bool CheckFileExistence()
		{
			return default(bool);
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x17C117C", Offset = "0x17C117C", VA = "0x17C117C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x17C0CD4", Offset = "0x17C0CD4", VA = "0x17C0CD4")]
		public GameEnvironment()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class LoadSkyboxDialog : MonoBehaviour
	{
		[Token(Token = "0x2000748")]
		public enum Mode
		{
			[Token(Token = "0x4002EE3")]
			NEW,
			[Token(Token = "0x4002EE4")]
			EDIT
		}

		[Serializable]
		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1A7C", Offset = "0xBE1A7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x55D6")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<int, bool> <>9__56_0;

			[Token(Token = "0x6003063")]
			[Address(RVA = "0x18E78FC", Offset = "0x18E78FC", VA = "0x18E78FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003064")]
			[Address(RVA = "0x18E792C", Offset = "0x18E792C", VA = "0x18E792C")]
			internal void <LoadAndShowSkyBox>b__56_0(int a, bool b)
			{
			}
		}

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1AB8", Offset = "0xBE1AB8")]
		private sealed class <LoadAndShowSkyBox>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD504E4")]
			private int <>1__state;

			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LoadSkyboxDialog <>4__this;

			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string fullPath;

			[Token(Token = "0x17000588")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003068")]
				[Address(RVA = "0x18E8670", Offset = "0x18E8670", VA = "0x18E8670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000589")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600306A")]
				[Address(RVA = "0x18E8740", Offset = "0x18E8740", VA = "0x18E8740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003065")]
			[Address(RVA = "0x18E75F4", Offset = "0x18E75F4", VA = "0x18E75F4")]
			[DebuggerHidden]
			public <LoadAndShowSkyBox>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6003066")]
			[Address(RVA = "0x18E7950", Offset = "0x18E7950", VA = "0x18E7950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003067")]
			[Address(RVA = "0x18E7964", Offset = "0x18E7964", VA = "0x18E7964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003069")]
			[Address(RVA = "0x18E86A0", Offset = "0x18E86A0", VA = "0x18E86A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject configureDialog;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject fileOpenDialog;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55A6")]
		[SerializeField]
		private TextMeshProUGUI filenameText;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton config_okButton;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504B4")]
		[SerializeField]
		private MenuSelectButton config_cancelButton;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton config_browseInternalButton;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton config_browseFromFileButton;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton file_okButton;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55AE")]
		[SerializeField]
		private MenuSelectButton file_cancelButton;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton infoButton;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504BC")]
		[SerializeField]
		private SkyboxFileListManager fileListManager;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SkyboxInternalListManager internalListManager;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader cubemapShader;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55B6")]
		[SerializeField]
		private Shader panoramicShader;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private SliderAdjustor rotationSlider;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504C4")]
		[SerializeField]
		private Camera previewCamera;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SunPositionAndRotationAdjuster sunAdjuster;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] toDisable;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] toEnable;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55BE")]
		private Mode currentMode;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameConfiguration gameConfig;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ShuttleEngine shuttle;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SkyboxLoader loader;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string pathFromLastLoad;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C6")]
		private Material materialFromLastLoad;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material originalSkyboxMaterial;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504D4")]
		private Vector3 originalSunPosition;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuEnvironment environmentToDisable;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TheSunAndOnly relevantSun;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string selectedFullPath;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55CE")]
		private float selectedRotation;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 selectedSunRotation;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504DC")]
		private Sprite previewImage;

		[Token(Token = "0x14000034")]
		public event Action<bool> DialogClosed
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x18E4F40", Offset = "0x18E4F40", VA = "0x18E4F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25120", Offset = "0xC25120")]
			add
			{
			}
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x18E508C", Offset = "0x18E508C", VA = "0x18E508C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2515C", Offset = "0xC2515C")]
			remove
			{
			}
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x18E51D8", Offset = "0x18E51D8", VA = "0x18E51D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x18E599C", Offset = "0x18E599C", VA = "0x18E599C")]
		public void HideDialoguesInitially()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x18E5A1C", Offset = "0x18E5A1C", VA = "0x18E5A1C")]
		internal void Open(GameConfiguration gc)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x18E5AC0", Offset = "0x18E5AC0", VA = "0x18E5AC0")]
		internal void Open(Mode mode, GameConfiguration gc, string fullPath, float rotation, Vector3 sunRotation)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x18E5E8C", Offset = "0x18E5E8C", VA = "0x18E5E8C")]
		private void Config_OkButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x18E6060", Offset = "0x18E6060", VA = "0x18E6060")]
		private void Config_CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x18E6118", Offset = "0x18E6118", VA = "0x18E6118")]
		private void Config_BrowseInternalButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x18E6418", Offset = "0x18E6418", VA = "0x18E6418")]
		private void Config_BrowseFileButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x18E6924", Offset = "0x18E6924", VA = "0x18E6924")]
		private void File_NavigationHappened(string dir)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x18E6A58", Offset = "0x18E6A58", VA = "0x18E6A58")]
		private void File_FileClicked(int index, string fullPath)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x18E6BA0", Offset = "0x18E6BA0", VA = "0x18E6BA0")]
		private void InternalListManager_SkyboxSelected(string internalSkyBoxName)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x18E6BF8", Offset = "0x18E6BF8", VA = "0x18E6BF8")]
		private void File_OkButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x18E6D98", Offset = "0x18E6D98", VA = "0x18E6D98")]
		private void File_CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x18E727C", Offset = "0x18E727C", VA = "0x18E727C")]
		private void RotationSlider_OnValueChanged(float value)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x18E73EC", Offset = "0x18E73EC", VA = "0x18E73EC")]
		private void SunAdjuster_OnScroll(bool left, bool fast)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x18E756C", Offset = "0x18E756C", VA = "0x18E756C")]
		private void InfoButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x18E5FD4", Offset = "0x18E5FD4", VA = "0x18E5FD4")]
		private void CloseDialog()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x18E6E64", Offset = "0x18E6E64", VA = "0x18E6E64")]
		private void ResetToOriginalEnvironment()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x18E5DA8", Offset = "0x18E5DA8", VA = "0x18E5DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25198", Offset = "0xC25198")]
		private IEnumerator LoadAndShowSkyBox(string fullPath)
		{
			return null;
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x18E763C", Offset = "0x18E763C", VA = "0x18E763C")]
		internal string GetFilePath()
		{
			return null;
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x18E766C", Offset = "0x18E766C", VA = "0x18E766C")]
		internal float GetRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x18E769C", Offset = "0x18E769C", VA = "0x18E769C")]
		internal Vector3 GetSunRotation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x18E76DC", Offset = "0x18E76DC", VA = "0x18E76DC")]
		internal bool IsNewMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x18E7748", Offset = "0x18E7748", VA = "0x18E7748")]
		internal Sprite GetPreviewImage()
		{
			return null;
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x18E7778", Offset = "0x18E7778", VA = "0x18E7778")]
		public LoadSkyboxDialog()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class SunPositionAndRotationAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55DE")]
		private static readonly float xOffset;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly float yOffset;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504EC")]
		private static readonly float STEP_SIZE;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float SCROLLING_DELAY;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int FAST_SCROLLING_MULTIPLIER;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TheSunAndOnly sun;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55E6")]
		private Controller[] controllers;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool updatePosition;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB4C")]
		private Controller activeController;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller leftController;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller rightController;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float scrollTime;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LaserPointer pointer;

		[Token(Token = "0x14000035")]
		public event Action<bool, bool> OnScroll
		{
			[Token(Token = "0x6002146")]
			[Address(RVA = "0x18FE578", Offset = "0x18FE578", VA = "0x18FE578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25248", Offset = "0xC25248")]
			add
			{
			}
			[Token(Token = "0x6002147")]
			[Address(RVA = "0x18FE6C4", Offset = "0x18FE6C4", VA = "0x18FE6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25284", Offset = "0xC25284")]
			remove
			{
			}
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x18FE810", Offset = "0x18FE810", VA = "0x18FE810")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x18FE934", Offset = "0x18FE934", VA = "0x18FE934")]
		public void Initialize(TheSunAndOnly sun)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x18FE96C", Offset = "0x18FE96C", VA = "0x18FE96C")]
		public void SetEnabled(bool shouldEnable)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x18FECB0", Offset = "0x18FECB0", VA = "0x18FECB0")]
		private void Controller_takeInteractButtonChanged(Controller sender, bool isPressed)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x18FEDA8", Offset = "0x18FEDA8", VA = "0x18FEDA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x18FEDE0", Offset = "0x18FEDE0", VA = "0x18FEDE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x18FEE18", Offset = "0x18FEE18", VA = "0x18FEE18")]
		private void Update()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x18FF534", Offset = "0x18FF534", VA = "0x18FF534")]
		public SunPositionAndRotationAdjuster()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class GameConfiguration
	{
		[Token(Token = "0x200074B")]
		public enum GameEnvironmentID
		{
			[Token(Token = "0x4002EEC")]
			SPACE,
			[Token(Token = "0x4002EED")]
			DESERT,
			[Token(Token = "0x4002EEE")]
			MEDIEVAL,
			[Token(Token = "0x4002EEF")]
			SKYCITY,
			[Token(Token = "0x4002EF0")]
			GENERIC,
			[Token(Token = "0x4002EF1")]
			NONE
		}

		[Token(Token = "0x200074C")]
		public enum GameQuality
		{
			[Token(Token = "0x4002EF3")]
			Very_Low,
			[Token(Token = "0x4002EF4")]
			Low,
			[Token(Token = "0x4002EF5")]
			Medium,
			[Token(Token = "0x4002EF6")]
			High,
			[Token(Token = "0x4002EF7")]
			Ultra,
			[Token(Token = "0x4002EF8")]
			Quest1,
			[Token(Token = "0x4002EF9")]
			Quest2
		}

		[Token(Token = "0x200074D")]
		public enum Gender
		{
			[Token(Token = "0x4002EFB")]
			Male,
			[Token(Token = "0x4002EFC")]
			Female,
			[Token(Token = "0x4002EFD")]
			Diverse
		}

		[Token(Token = "0x200074E")]
		public enum LaserHand
		{
			[Token(Token = "0x4002EFF")]
			LEFT,
			[Token(Token = "0x4002F00")]
			RIGHT
		}

		[Token(Token = "0x200074F")]
		public enum Settings
		{
			[Token(Token = "0x4002F02")]
			GAMEPLAY,
			[Token(Token = "0x4002F03")]
			VIDEO,
			[Token(Token = "0x4002F04")]
			SOUND,
			[Token(Token = "0x4002F05")]
			PLAYER
		}

		[Token(Token = "0x2000750")]
		public enum Gameplay
		{
			[Token(Token = "0x4002F07")]
			STYLE,
			[Token(Token = "0x4002F08")]
			MODIFIERS
		}

		[Token(Token = "0x2000751")]
		public enum Tutorial
		{
			[Token(Token = "0x4002F0A")]
			OBJECTS,
			[Token(Token = "0x4002F0B")]
			WEAPONS,
			[Token(Token = "0x4002F0C")]
			MISC
		}

		[Token(Token = "0x2000752")]
		public enum SettingsPanelVisibility
		{
			[Token(Token = "0x4002F0E")]
			OPTIONS,
			[Token(Token = "0x4002F0F")]
			CREDITS,
			[Token(Token = "0x4002F10")]
			OFF,
			[Token(Token = "0x4002F11")]
			GUIDE
		}

		[Token(Token = "0x2000753")]
		public enum PlayerSize
		{
			[Token(Token = "0x4002F13")]
			SMALL,
			[Token(Token = "0x4002F14")]
			REGULAR
		}

		[Token(Token = "0x2000754")]
		public enum PlayspaceSize
		{
			[Token(Token = "0x4002F16")]
			SMALL,
			[Token(Token = "0x4002F17")]
			REGULAR
		}

		[Token(Token = "0x2000755")]
		public enum OffOn
		{
			[Token(Token = "0x4002F19")]
			OFF,
			[Token(Token = "0x4002F1A")]
			ON
		}

		[Token(Token = "0x2000756")]
		public enum FlightPaths
		{
			[Token(Token = "0x4002F1C")]
			STRAIGHT,
			[Token(Token = "0x4002F1D")]
			CURVED
		}

		[Token(Token = "0x2000757")]
		public enum ScoreVisualization
		{
			[Token(Token = "0x4002F1F")]
			MINIMAL,
			[Token(Token = "0x4002F20")]
			FULL
		}

		[Token(Token = "0x2000758")]
		public enum StreamFeedback
		{
			[Token(Token = "0x4002F22")]
			MINIMAL,
			[Token(Token = "0x4002F23")]
			FULL
		}

		[Token(Token = "0x2000759")]
		public enum CameraMode
		{
			[Token(Token = "0x4002F25")]
			FPV,
			[Token(Token = "0x4002F26")]
			AVATAR
		}

		[Token(Token = "0x200075A")]
		public enum StrengthFormat
		{
			[Token(Token = "0x4002F28")]
			METRIC,
			[Token(Token = "0x4002F29")]
			IMPERIAL
		}

		[Token(Token = "0x200075B")]
		public enum Voice
		{
			[Token(Token = "0x4002F2B")]
			MALE,
			[Token(Token = "0x4002F2C")]
			FEMALE,
			[Token(Token = "0x4002F2D")]
			NONE
		}

		[Token(Token = "0x200075C")]
		public enum ChallengeMode
		{
			[Token(Token = "0x4002F2F")]
			OFFICIAL_1 = 0,
			[Token(Token = "0x4002F30")]
			OFFICIAL_2 = 1,
			[Token(Token = "0x4002F31")]
			CUSTOM = -1
		}

		[Token(Token = "0x200075D")]
		public enum LeaderboardDisplayType
		{
			[Token(Token = "0x4002F33")]
			GENERIC,
			[Token(Token = "0x4002F34")]
			WEAPONSPECIFIC
		}

		[Token(Token = "0x200075E")]
		public enum Modifier
		{
			[Token(Token = "0x4002F36")]
			No_Horizontal_Walls,
			[Token(Token = "0x4002F37")]
			No_Tunnels,
			[Token(Token = "0x4002F38")]
			No_Vertical_Walls,
			[Token(Token = "0x4002F39")]
			No_BadBalls,
			[Token(Token = "0x4002F3A")]
			NormalBalls_Only,
			[Token(Token = "0x4002F3B")]
			PowerBalls_Only,
			[Token(Token = "0x4002F3C")]
			SuperSpeed,
			[Token(Token = "0x4002F3D")]
			Smaller_Balls,
			[Token(Token = "0x4002F3E")]
			No_Streams,
			[Token(Token = "0x4002F3F")]
			No_Double_Balls
		}

		[Token(Token = "0x4001D6C")]
		private const float KG_TO_POUNDS = 0.45359236f;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MAX_EXPERIENCE;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] SCENE_NAMES;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<Modifier, float> MODIFIER_TO_SCORE_MULTIPLICATION;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55F5")]
		public static readonly Dictionary<Modifier, string> MODIFIER_TO_ENGLISH_TEXT;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GameEnvironment selectedEnvironment;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD504FC")]
		internal WeaponType selectedWeaponType;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Song.Difficulty selectedDifficulty;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ChallengeMode selectedChallengeMode;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int[] selectedSongIndexOfficial;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55FD")]
		internal int selectedSongIndexCustom;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Song selectedSong;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50504")]
		internal bool isTestRun;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float sizes_height;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ScoreVisualization scoreVisualization;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal StreamFeedback streamFeedback;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5605")]
		internal bool hasComboHighlighting;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal OffOn spectatorCamera;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5050C")]
		internal OffOn bloom;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal CameraMode cameraMode;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GameQuality gameQuality;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Settings settings;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560D")]
		internal Gameplay gameplay;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Tutorial tutorial;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50514")]
		internal Dictionary<Modifier, OffOn> modifiers;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal OffOn gameHints;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal FlightPaths flightPaths;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal OffOn playspaceWarning;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5615")]
		internal OffOn showBounds;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal OffOn playMusicOnReturn;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5051C")]
		internal OffOn leaderBoardPanel;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal OffOn playlistsPanel;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal LeaderboardDisplayType leaderBoardPanelDisplayType;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal OffOn beautify;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x561D")]
		internal OffOn trackCalories;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal OffOn trackHeartrate;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50524")]
		internal HRMPlatform hrmPlatform;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Gender gender;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal LaserHand laserHand;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SettingsPanelVisibility settingsPanelVisibility;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5625")]
		internal OffOn strengthMeter;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal StrengthFormat strengthFormat;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5052C")]
		internal OffOn playlistButtonPulse;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float musicVolume;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sfxVolume;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int selectedHitSound;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x562D")]
		internal Voice selectedVoice;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float previousExperienceSliderValue;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50534")]
		public float previousHammerSliderValue;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float previousShieldSliderValue;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float previousPowerfistSliderValue;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float experienceLevel;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5635")]
		public float age;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float dailyCalories;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5053C")]
		public float kilograms;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string dateLastSession;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int gameStartCount;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float todaysCalories;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x563D")]
		public float caloriesSinceReset;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float totalCalories;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB54")]
		public float playTimeInSecondsToday;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float playTimeInSecondsSinceReset;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float playTimeInSecondsTotal;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int squatsToday;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5644")]
		public int squatsSinceReset;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int squatsTotal;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50544")]
		public float playspaceWarningTreshold;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string songFileDir;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string skyboxFileDir;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Playlist playlist;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564C")]
		public SerializableVector3 palettePosition;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public SerializableVector3 paletteEulerAngles;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5054C")]
		public Dictionary<string, int> songFileListPages;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, int> skyboxFileListPages;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GeneratorSetting generatorBeginnerSettings;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GeneratorSetting generatorAdvancedSettings;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5654")]
		public GeneratorSetting generatorExpertSettings;

		[Token(Token = "0x17000443")]
		public int pounds
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x1721E94", Offset = "0x1721E94", VA = "0x1721E94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002153")]
			[Address(RVA = "0x1721EE0", Offset = "0x1721EE0", VA = "0x1721EE0")]
			set
			{
			}
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x171362C", Offset = "0x171362C", VA = "0x171362C")]
		public static string GetModifierLocalizationKey(Modifier modifier)
		{
			return null;
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1718188", Offset = "0x1718188", VA = "0x1718188")]
		public static string GetEnvironmentSceneName(GameEnvironmentID environmentToUse)
		{
			return null;
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1721F48", Offset = "0x1721F48", VA = "0x1721F48")]
		public GameConfiguration()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x172293C", Offset = "0x172293C", VA = "0x172293C")]
		public GeneratorSetting GetCurrentGeneratorSettings()
		{
			return null;
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x17229EC", Offset = "0x17229EC", VA = "0x17229EC")]
		public void SetCurrentGeneratorSettings(GeneratorSetting setting)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x200075F")]
		private enum HitLevel
		{
			[Token(Token = "0x4002F41")]
			TOOLOW,
			[Token(Token = "0x4002F42")]
			MINIMUMIMPACT,
			[Token(Token = "0x4002F43")]
			FULLIMPACT
		}

		[Token(Token = "0x2000760")]
		private struct HitResult
		{
			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public HitLevel level;

			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A54")]
			public float percentage;

			[Token(Token = "0x600306B")]
			[Address(RVA = "0x178B798", Offset = "0x178B798", VA = "0x178B798")]
			public HitResult(HitLevel level, float percentage)
			{
			}
		}

		[Token(Token = "0x2000761")]
		public class Combo
		{
			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int combo;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip audioToPlay;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD699")]
			public bool comboReached;

			[Token(Token = "0x600306C")]
			[Address(RVA = "0x178B768", Offset = "0x178B768", VA = "0x178B768")]
			public Combo()
			{
			}
		}

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1AF4", Offset = "0xBE1AF4")]
		private sealed class <DoOneTimeAndSongSpecificSetup>d__233 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A6C")]
			private object <>2__current;

			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameManager <>4__this;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameConfiguration gameConfig;

			[Token(Token = "0x1700058A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003070")]
				[Address(RVA = "0x17EFF50", Offset = "0x17EFF50", VA = "0x17EFF50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003072")]
				[Address(RVA = "0x17F0020", Offset = "0x17F0020", VA = "0x17F0020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600306D")]
			[Address(RVA = "0x17C5070", Offset = "0x17C5070", VA = "0x17C5070")]
			[DebuggerHidden]
			public <DoOneTimeAndSongSpecificSetup>d__233(int <>1__state)
			{
			}

			[Token(Token = "0x600306E")]
			[Address(RVA = "0x17EFCF0", Offset = "0x17EFCF0", VA = "0x17EFCF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600306F")]
			[Address(RVA = "0x17EFD04", Offset = "0x17EFD04", VA = "0x17EFD04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003071")]
			[Address(RVA = "0x17EFF80", Offset = "0x17EFF80", VA = "0x17EFF80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B30", Offset = "0xBE1B30")]
		private sealed class <PrepareSong>d__234 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6A1")]
			private object <>2__current;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public GameManager <>4__this;

			[Token(Token = "0x1700058C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003076")]
				[Address(RVA = "0x178AEF0", Offset = "0x178AEF0", VA = "0x178AEF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003078")]
				[Address(RVA = "0x178AFC0", Offset = "0x178AFC0", VA = "0x178AFC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003073")]
			[Address(RVA = "0x178A9F4", Offset = "0x178A9F4", VA = "0x178A9F4")]
			[DebuggerHidden]
			public <PrepareSong>d__234(int <>1__state)
			{
			}

			[Token(Token = "0x6003074")]
			[Address(RVA = "0x178AA3C", Offset = "0x178AA3C", VA = "0x178AA3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003075")]
			[Address(RVA = "0x178AA50", Offset = "0x178AA50", VA = "0x178AA50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003077")]
			[Address(RVA = "0x178AF20", Offset = "0x178AF20", VA = "0x178AF20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B6C", Offset = "0xBE1B6C")]
		private sealed class <OneTimeSetup>d__237 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D70C")]
			private int <>1__state;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameManager <>4__this;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameConfiguration gameConfig;

			[Token(Token = "0x1700058E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600307C")]
				[Address(RVA = "0x17F58BC", Offset = "0x17F58BC", VA = "0x17F58BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600307E")]
				[Address(RVA = "0x17F598C", Offset = "0x17F598C", VA = "0x17F598C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003079")]
			[Address(RVA = "0x17C54A0", Offset = "0x17C54A0", VA = "0x17C54A0")]
			[DebuggerHidden]
			public <OneTimeSetup>d__237(int <>1__state)
			{
			}

			[Token(Token = "0x600307A")]
			[Address(RVA = "0x17F1040", Offset = "0x17F1040", VA = "0x17F1040", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600307B")]
			[Address(RVA = "0x17F1054", Offset = "0x17F1054", VA = "0x17F1054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600307D")]
			[Address(RVA = "0x17F58EC", Offset = "0x17F58EC", VA = "0x17F58EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BA8", Offset = "0xBE1BA8")]
		private sealed class <LoadCustomSkyBox>d__238 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6A8")]
			private int <>1__state;

			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A74")]
			public GameEnvironment gc;

			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameManager <>4__this;

			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SkyboxLoader <loader>5__2;

			[Token(Token = "0x17000590")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003082")]
				[Address(RVA = "0x17F0F40", Offset = "0x17F0F40", VA = "0x17F0F40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000591")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003084")]
				[Address(RVA = "0x17F1010", Offset = "0x17F1010", VA = "0x17F1010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0x17C55CC", Offset = "0x17C55CC", VA = "0x17C55CC")]
			[DebuggerHidden]
			public <LoadCustomSkyBox>d__238(int <>1__state)
			{
			}

			[Token(Token = "0x6003080")]
			[Address(RVA = "0x17F0A14", Offset = "0x17F0A14", VA = "0x17F0A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003081")]
			[Address(RVA = "0x17F0A28", Offset = "0x17F0A28", VA = "0x17F0A28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003083")]
			[Address(RVA = "0x17F0F70", Offset = "0x17F0F70", VA = "0x17F0F70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BE4", Offset = "0xBE1BE4")]
		private sealed class <DisplayAllElementsShortly>d__239 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6B0")]
			private object <>2__current;

			[Token(Token = "0x4002F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public GameManager <>4__this;

			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A7C")]
			private Vector3 <position>5__2;

			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<GameObject> <instantiated>5__3;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ParticleSystem[] <>7__wrap3;

			[Token(Token = "0x4002F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>7__wrap4;

			[Token(Token = "0x4002F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6B8")]
			private ParticleSystem <destroyEffect>5__6;

			[Token(Token = "0x17000592")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003088")]
				[Address(RVA = "0x17EFBF0", Offset = "0x17EFBF0", VA = "0x17EFBF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000593")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600308A")]
				[Address(RVA = "0x17EFCC0", Offset = "0x17EFCC0", VA = "0x17EFCC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0x17C56D0", Offset = "0x17C56D0", VA = "0x17C56D0")]
			[DebuggerHidden]
			public <DisplayAllElementsShortly>d__239(int <>1__state)
			{
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0x17ED84C", Offset = "0x17ED84C", VA = "0x17ED84C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003087")]
			[Address(RVA = "0x17ED860", Offset = "0x17ED860", VA = "0x17ED860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0x17EFC20", Offset = "0x17EFC20", VA = "0x17EFC20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C20", Offset = "0xBE1C20")]
		private sealed class <ChangeQualitySettings>d__247 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A84")]
			private object <>2__current;

			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameConfiguration.GameQuality quality;

			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameManager <>4__this;

			[Token(Token = "0x17000594")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600308E")]
				[Address(RVA = "0x17ECDE4", Offset = "0x17ECDE4", VA = "0x17ECDE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000595")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003090")]
				[Address(RVA = "0x17ECEB4", Offset = "0x17ECEB4", VA = "0x17ECEB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600308B")]
			[Address(RVA = "0x17C9C48", Offset = "0x17C9C48", VA = "0x17C9C48")]
			[DebuggerHidden]
			public <ChangeQualitySettings>d__247(int <>1__state)
			{
			}

			[Token(Token = "0x600308C")]
			[Address(RVA = "0x17EB924", Offset = "0x17EB924", VA = "0x17EB924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600308D")]
			[Address(RVA = "0x17EB938", Offset = "0x17EB938", VA = "0x17EB938", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600308F")]
			[Address(RVA = "0x17ECE14", Offset = "0x17ECE14", VA = "0x17ECE14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C5C", Offset = "0xBE1C5C")]
		private sealed class <SetupSongAndStart>d__254 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6C0")]
			private object <>2__current;

			[Token(Token = "0x4002F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public GameManager <>4__this;

			[Token(Token = "0x17000596")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003094")]
				[Address(RVA = "0x178B220", Offset = "0x178B220", VA = "0x178B220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000597")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003096")]
				[Address(RVA = "0x178B2F0", Offset = "0x178B2F0", VA = "0x178B2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003091")]
			[Address(RVA = "0x178AFF0", Offset = "0x178AFF0", VA = "0x178AFF0")]
			[DebuggerHidden]
			public <SetupSongAndStart>d__254(int <>1__state)
			{
			}

			[Token(Token = "0x6003092")]
			[Address(RVA = "0x178B038", Offset = "0x178B038", VA = "0x178B038", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003093")]
			[Address(RVA = "0x178B04C", Offset = "0x178B04C", VA = "0x178B04C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003095")]
			[Address(RVA = "0x178B250", Offset = "0x178B250", VA = "0x178B250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C98", Offset = "0xBE1C98")]
		private sealed class <>c__DisplayClass258_0
		{
			[Token(Token = "0x4002F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A8C")]
			public WeaponStartInfo i;

			[Token(Token = "0x6003097")]
			[Address(RVA = "0x17CC82C", Offset = "0x17CC82C", VA = "0x17CC82C")]
			public <>c__DisplayClass258_0()
			{
			}

			[Token(Token = "0x6003098")]
			[Address(RVA = "0x17EA234", Offset = "0x17EA234", VA = "0x17EA234")]
			internal void <ShowWeaponStartInfo>b__0()
			{
			}
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CD4", Offset = "0xBE1CD4")]
		private sealed class <EnableLaserPointer>d__267 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameManager <>4__this;

			[Token(Token = "0x17000598")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600309C")]
				[Address(RVA = "0x17F02C4", Offset = "0x17F02C4", VA = "0x17F02C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000599")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600309E")]
				[Address(RVA = "0x17F0394", Offset = "0x17F0394", VA = "0x17F0394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003099")]
			[Address(RVA = "0x17CEA34", Offset = "0x17CEA34", VA = "0x17CEA34")]
			[DebuggerHidden]
			public <EnableLaserPointer>d__267(int <>1__state)
			{
			}

			[Token(Token = "0x600309A")]
			[Address(RVA = "0x17F0050", Offset = "0x17F0050", VA = "0x17F0050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600309B")]
			[Address(RVA = "0x17F0064", Offset = "0x17F0064", VA = "0x17F0064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600309D")]
			[Address(RVA = "0x17F02F4", Offset = "0x17F02F4", VA = "0x17F02F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D10", Offset = "0xBE1D10")]
		private sealed class <StartSongWithoutBreak>d__273 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6C8")]
			private int <>1__state;

			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A94")]
			public GameManager <>4__this;

			[Token(Token = "0x1700059A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030A2")]
				[Address(RVA = "0x178B668", Offset = "0x178B668", VA = "0x178B668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030A4")]
				[Address(RVA = "0x178B738", Offset = "0x178B738", VA = "0x178B738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600309F")]
			[Address(RVA = "0x178B320", Offset = "0x178B320", VA = "0x178B320")]
			[DebuggerHidden]
			public <StartSongWithoutBreak>d__273(int <>1__state)
			{
			}

			[Token(Token = "0x60030A0")]
			[Address(RVA = "0x178B368", Offset = "0x178B368", VA = "0x178B368", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0x178B37C", Offset = "0x178B37C", VA = "0x178B37C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x178B698", Offset = "0x178B698", VA = "0x178B698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D4C", Offset = "0xBE1D4C")]
		private sealed class <>c__DisplayClass288_0
		{
			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject obj;

			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x17DDA98", Offset = "0x17DDA98", VA = "0x17DDA98")]
			public <>c__DisplayClass288_0()
			{
			}

			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x17EA2A4", Offset = "0x17EA2A4", VA = "0x17EA2A4")]
			internal void <AddDOTWeenToHittable>b__0()
			{
			}
		}

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D88", Offset = "0xBE1D88")]
		private sealed class <>c__DisplayClass289_0
		{
			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BallObstacle obst;

			[Token(Token = "0x60030A7")]
			[Address(RVA = "0x17DE00C", Offset = "0x17DE00C", VA = "0x17DE00C")]
			public <>c__DisplayClass289_0()
			{
			}

			[Token(Token = "0x60030A8")]
			[Address(RVA = "0x17EA398", Offset = "0x17EA398", VA = "0x17EA398")]
			internal void <AddDOTWeenToObstacle>b__0()
			{
			}
		}

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1DC4", Offset = "0xBE1DC4")]
		private sealed class <>c__DisplayClass290_0
		{
			[Token(Token = "0x4002F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Stream streamComp;

			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6D0")]
			public GameManager <>4__this;

			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x17DE44C", Offset = "0x17DE44C", VA = "0x17DE44C")]
			public <>c__DisplayClass290_0()
			{
			}

			[Token(Token = "0x60030AA")]
			[Address(RVA = "0x17EA4A4", Offset = "0x17EA4A4", VA = "0x17EA4A4")]
			internal void <FireStream>b__0()
			{
			}
		}

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1E00", Offset = "0xBE1E00")]
		private sealed class <>c__DisplayClass292_0
		{
			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public WallObstacle obst;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57A9C")]
			public GameManager <>4__this;

			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x17DE5FC", Offset = "0x17DE5FC", VA = "0x17DE5FC")]
			public <>c__DisplayClass292_0()
			{
			}

			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x17EA4FC", Offset = "0x17EA4FC", VA = "0x17EA4FC")]
			internal void <FireObstacle>b__0()
			{
			}
		}

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1E3C", Offset = "0xBE1E3C")]
		private sealed class <>c__DisplayClass309_0
		{
			[Token(Token = "0x4002F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextMeshPro streamFirstHintText;

			[Token(Token = "0x4002F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject firstHint;

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0x17E45F4", Offset = "0x17E45F4", VA = "0x17E45F4")]
			public <>c__DisplayClass309_0()
			{
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x17EA554", Offset = "0x17EA554", VA = "0x17EA554")]
			internal Color <ShowFirstStreamHint>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x17EA5D8", Offset = "0x17EA5D8", VA = "0x17EA5D8")]
			internal void <ShowFirstStreamHint>b__1(Color x)
			{
			}

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x17EA778", Offset = "0x17EA778", VA = "0x17EA778")]
			internal void <ShowFirstStreamHint>b__2()
			{
			}
		}

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1E78", Offset = "0xBE1E78")]
		private sealed class <KillParticleEffectOnHittable>d__315 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6D8")]
			private object <>2__current;

			[Token(Token = "0x4002F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float timeToKill;

			[Token(Token = "0x4002F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57AA4")]
			public ParticleSystem destroyEffect;

			[Token(Token = "0x1700059C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030B4")]
				[Address(RVA = "0x17F05EC", Offset = "0x17F05EC", VA = "0x17F05EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030B6")]
				[Address(RVA = "0x17F06BC", Offset = "0x17F06BC", VA = "0x17F06BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x17E497C", Offset = "0x17E497C", VA = "0x17E497C")]
			[DebuggerHidden]
			public <KillParticleEffectOnHittable>d__315(int <>1__state)
			{
			}

			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x17F03C4", Offset = "0x17F03C4", VA = "0x17F03C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030B3")]
			[Address(RVA = "0x17F03D8", Offset = "0x17F03D8", VA = "0x17F03D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030B5")]
			[Address(RVA = "0x17F061C", Offset = "0x17F061C", VA = "0x17F061C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1EB4", Offset = "0xBE1EB4")]
		private sealed class <KillShatterEffectOnHittable>d__317 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeToKill;

			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6E0")]
			public ParticleSystem shatterEffect;

			[Token(Token = "0x1700059E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030BA")]
				[Address(RVA = "0x17F0914", Offset = "0x17F0914", VA = "0x17F0914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030BC")]
				[Address(RVA = "0x17F09E4", Offset = "0x17F09E4", VA = "0x17F09E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B7")]
			[Address(RVA = "0x17E55D8", Offset = "0x17E55D8", VA = "0x17E55D8")]
			[DebuggerHidden]
			public <KillShatterEffectOnHittable>d__317(int <>1__state)
			{
			}

			[Token(Token = "0x60030B8")]
			[Address(RVA = "0x17F06EC", Offset = "0x17F06EC", VA = "0x17F06EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030B9")]
			[Address(RVA = "0x17F0700", Offset = "0x17F0700", VA = "0x17F0700", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030BB")]
			[Address(RVA = "0x17F0944", Offset = "0x17F0944", VA = "0x17F0944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1EF0", Offset = "0xBE1EF0")]
		private sealed class <>c__DisplayClass321_0
		{
			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public GameObject movingText;

			[Token(Token = "0x60030BD")]
			[Address(RVA = "0x17E7FA8", Offset = "0x17E7FA8", VA = "0x17E7FA8")]
			public <>c__DisplayClass321_0()
			{
			}

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0x17EA86C", Offset = "0x17EA86C", VA = "0x17EA86C")]
			internal Color <VisualizeScoreChange>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60030BF")]
			[Address(RVA = "0x17EA940", Offset = "0x17EA940", VA = "0x17EA940")]
			internal void <VisualizeScoreChange>b__1(Color x)
			{
			}

			[Token(Token = "0x60030C0")]
			[Address(RVA = "0x17EAB4C", Offset = "0x17EAB4C", VA = "0x17EAB4C")]
			internal void <VisualizeScoreChange>b__2()
			{
			}

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x17EAC40", Offset = "0x17EAC40", VA = "0x17EAC40")]
			internal Color <VisualizeScoreChange>b__3()
			{
				return default(Color);
			}

			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x17EAD14", Offset = "0x17EAD14", VA = "0x17EAD14")]
			internal void <VisualizeScoreChange>b__4(Color x)
			{
			}

			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x17EAF20", Offset = "0x17EAF20", VA = "0x17EAF20")]
			internal Color <VisualizeScoreChange>b__5()
			{
				return default(Color);
			}

			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x17EAFF4", Offset = "0x17EAFF4", VA = "0x17EAFF4")]
			internal void <VisualizeScoreChange>b__6(Color x)
			{
			}

			[Token(Token = "0x60030C5")]
			[Address(RVA = "0x17EB200", Offset = "0x17EB200", VA = "0x17EB200")]
			internal void <VisualizeScoreChange>b__7()
			{
			}
		}

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1F2C", Offset = "0xBE1F2C")]
		private sealed class <>c__DisplayClass323_0
		{
			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57AAC")]
			public TextMeshPro comboNotifierText;

			[Token(Token = "0x4002F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject notifier;

			[Token(Token = "0x60030C6")]
			[Address(RVA = "0x17E7FD8", Offset = "0x17E7FD8", VA = "0x17E7FD8")]
			public <>c__DisplayClass323_0()
			{
			}

			[Token(Token = "0x60030C7")]
			[Address(RVA = "0x17EB2F4", Offset = "0x17EB2F4", VA = "0x17EB2F4")]
			internal Color <VisualizeComboChange>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60030C8")]
			[Address(RVA = "0x17EB378", Offset = "0x17EB378", VA = "0x17EB378")]
			internal void <VisualizeComboChange>b__1(Color x)
			{
			}

			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x17EB518", Offset = "0x17EB518", VA = "0x17EB518")]
			internal void <VisualizeComboChange>b__2()
			{
			}
		}

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1F68", Offset = "0xBE1F68")]
		private sealed class <>c__DisplayClass324_0
		{
			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextMeshPro countDownNotifierText;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject countDownNotifier;

			[Token(Token = "0x60030CA")]
			[Address(RVA = "0x17E8AF0", Offset = "0x17E8AF0", VA = "0x17E8AF0")]
			public <>c__DisplayClass324_0()
			{
			}

			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x17EB60C", Offset = "0x17EB60C", VA = "0x17EB60C")]
			internal Color <ShowTextCentered>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60030CC")]
			[Address(RVA = "0x17EB690", Offset = "0x17EB690", VA = "0x17EB690")]
			internal void <ShowTextCentered>b__1(Color x)
			{
			}

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0x17EB830", Offset = "0x17EB830", VA = "0x17EB830")]
			internal void <ShowTextCentered>b__2()
			{
			}
		}

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1FA4", Offset = "0xBE1FA4")]
		private sealed class <CountScoreIncrementally>d__327 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD6E8")]
			private int <>1__state;

			[Token(Token = "0x4002F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57AB4")]
			public GameManager <>4__this;

			[Token(Token = "0x170005A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030D1")]
				[Address(RVA = "0x17ED74C", Offset = "0x17ED74C", VA = "0x17ED74C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030D3")]
				[Address(RVA = "0x17ED81C", Offset = "0x17ED81C", VA = "0x17ED81C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0x17E8BDC", Offset = "0x17E8BDC", VA = "0x17E8BDC")]
			[DebuggerHidden]
			public <CountScoreIncrementally>d__327(int <>1__state)
			{
			}

			[Token(Token = "0x60030CF")]
			[Address(RVA = "0x17ECEE4", Offset = "0x17ECEE4", VA = "0x17ECEE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030D0")]
			[Address(RVA = "0x17ECEF8", Offset = "0x17ECEF8", VA = "0x17ECEF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030D2")]
			[Address(RVA = "0x17ED77C", Offset = "0x17ED77C", VA = "0x17ED77C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1FE0", Offset = "0xBE1FE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action <>9__335_0;

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0x17EA174", Offset = "0x17EA174", VA = "0x17EA174")]
			public <>c()
			{
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0x17EA1A4", Offset = "0x17EA1A4", VA = "0x17EA1A4")]
			internal void <SetLeaderboardEntry>b__335_0()
			{
			}
		}

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505BC")]
		private static readonly float STANDARD_POWERFIST_CHARGE_INCREASE_PER_BALL;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int POWERFIST_CHARGE_REDUCTION_ADVANCED;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int POWERFIST_CHARGE_REDUCTION_EXPERT;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SCORE_NORMAL_BALL_SEMI;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56CB")]
		public static readonly int SCORE_NORMAL_BALL_COMPLETE;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly int SCORE_HARD_BALL_SEMI;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505C4")]
		public static readonly int SCORE_HARD_BALL_COMPLETE;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SCORE_STREAM_PER_BEAT;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SCORE_STREAM_PER_CYCLE;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SCORE_OBSTACLE_BALL_BLOCK;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56D3")]
		public static readonly int MINUS_OBSTACLE_BALL;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly int MINUS_OBSTACLE_WALL;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505CC")]
		public static readonly float SCORE_MULTIPLIER_PER_HITSPEEDDELTA;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int COMBO_PLUS_PER_HIT;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MIN_COMBO_FOR_CREDIT;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float HIT_SPEED_SQUARED_BEGINNER_MINIMUM;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56DB")]
		private static readonly float HIT_SPEED_SQUARED_ADVANCED_MINIMUM;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly float HIT_SPEED_SQUARED_EXPERT_LOWER;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505D4")]
		private static readonly float HIT_SPEED_SQUARED_EXPERT_UPPER;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float MAX_TIME_DELTA_DESTROY_EFFECT;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 SMALLER_BALLS_SCALE;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float ACTIVITY_BONUS_MULTIPLIER;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56E3")]
		private static readonly int COUNTDOWN_START_VALUE;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly float COUNTDOWN_TEXT_SIZE;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505DC")]
		private static readonly int BALL_FLIGHT_DURATION_DEFAULT;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string TIME_FORMAT;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool DEBUG_ALLOW_POWERFIST_DEPLOYMENT;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HitResult HL_FULLIMPACT;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56EB")]
		private static HitResult HL_TOOLOW;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioSource beep;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB64")]
		[SerializeField]
		private AudioSource beepLong;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject comboNotifierTextPrefab;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject firstStreamHintTextPrefab;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem destroyParticleEffectOnGround;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56F2")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC08194", Offset = "0xC08194")]
		[SerializeField]
		private ScoreComboPanel scoreComboPanel;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TMP_Text scoreText;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505E4")]
		[SerializeField]
		private TMP_Text comboText;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public StatusPositioner statusPositioner;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC082C8", Offset = "0xC082C8")]
		[SerializeField]
		private GameObject timePanel;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMP_Text timeMinutesText;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56FA")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC08384", Offset = "0xC08384")]
		[SerializeField]
		private GameObject infosLeftPanel;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject caloriesTrackerPanel;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505EC")]
		[SerializeField]
		private TextBasedLocalizedString caloriesTrackerText;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI squatsText;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject heartRatePanel;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextBasedLocalizedString heartRateText;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5702")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC08530", Offset = "0xC08530")]
		[SerializeField]
		private PauseMenu pauseMenu;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private EndScreenDisplay endMenu;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505F4")]
		[SerializeField]
		private LaserPointer laserPointer;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RuntimeAnimatorController menuHandAnimationControllerLeft;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RuntimeAnimatorController menuHandAnimationControllerRight;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC086A0", Offset = "0xC086A0")]
		[SerializeField]
		private GameObject playlistIndex;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570A")]
		[SerializeField]
		private TMP_Text playlistIndexText;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Slider playlistDurationSlider;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD505FC")]
		[SerializeField]
		private TMP_Text playlistDurationText;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMP_Text playlistPlayedTimeText;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextBasedLocalizedString playlistNextSongText;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0884C", Offset = "0xC0884C")]
		[SerializeField]
		private GameObject perfectHitScorePrefab;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5712")]
		[SerializeField]
		private GameObject failTextPrefab;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject scoringTextPrefab;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50604")]
		[SerializeField]
		private GameObject comboScoreTextPrefab;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FlyPaths flyPaths;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource audioSourceForEffects;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource audioSourceForVoices;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x571A")]
		[SerializeField]
		private AudioSource audioSourceForPowerFistLoop;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioSource audioSourceForInStreamLoop;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5060C")]
		[SerializeField]
		private AudioSource audioSourceForWallLoop;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource audioSourceForMusic;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject scoreIndicator;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject pauseMenuHint;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5722")]
		[SerializeField]
		private AudioClip cameraShutter;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private StrengthMeter strengthMeter;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50614")]
		[SerializeField]
		private Shader cubemapShader;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader panoramicShader;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject swingIndicator;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FrameworkManager fm;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x572A")]
		private int ballFlightDurationInBeats;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 scoreIndicatorPos;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5061C")]
		private PlayspaceBoundaries playspaceBoundary;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material boundaryMaterial;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color boundariesPositivColor;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color boundariesNegativeColor;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5732")]
		private GameObject hittableNormal;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject hittableSteel;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50624")]
		private FakeHead fakeHead;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stream stream;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StreamElement streamElement;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StreamCollectionSparks streamSparksLeft;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x573A")]
		private StreamCollectionSparks streamSparksRight;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject obstacleBall;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5062C")]
		private GameObject[] obstacleWall;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PowerFistCharger powerFistCharger;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EnvironmentHighlighter highlighter;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasComboHighlighting;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5742")]
		private Dictionary<WeaponType, Dictionary<LLManager.HandSide, CollidableHandObject>> weapons;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SoundConfiguration soundConfiguration;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB6C")]
		private Vector3 initialComboTextScale;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 initialScoreTextScale;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int combo;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int comboLevel;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5749")]
		private int currentIntegerBeat;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int countDownTimer;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50634")]
		private PlaylistPlaybackManager playbackManager;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playlistPlayedTime;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int playedRounds;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Song currentSong;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5751")]
		private Song.Difficulty currentDifficulty;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Controller leftController;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5063C")]
		private Controller rightController;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<LLManager.HandSide, CollidableHandObject> attachedHandObjects;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RedFlashPlane[] redFlashPlanes;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int damageSoundIndex;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5759")]
		private float timeLeft;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private OverallStatistic overallStat;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50644")]
		private SongStatistic songStat;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SongStatistic> songStatList;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int songNumber;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentlyShownScore;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5761")]
		private float songDuration;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float powerFistChargeLevel;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5064C")]
		private float powerFistChargeLevelBeforeIncrement;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float powerFistChargeIncrease;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int contactBounceCount;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool gameHasBeenStarted;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5769")]
		private bool songIsPlaying;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HashSet<AreaBasedElement> areasInProgress;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50654")]
		private bool isPaused;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isEndScreen;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Combo[] combos;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<WeaponStartInfo> weaponStartInfos;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5771")]
		private bool weaponStartInfoClosed;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool countdownStarted;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5065C")]
		private bool firstStreamAction;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera mainCamera;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera fpvSpectatorCamera;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameConfiguration.Gender userGender;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5779")]
		private int userAge;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int userWeight;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50664")]
		private float timeSinceLastSecondMark;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headsetLastPos;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 leftControllerLastPos;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 rightControllerLastPos;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5781")]
		private float movementLastSecondInMeters;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool gameHints;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5066C")]
		private HRMCon hrmCon;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject loadingScreen;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool fullScoreVisualization;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float debrisDurationBeginner;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5789")]
		private float debrisDurationAdvanced;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float debrisDurationExpert;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50674")]
		private float currentDebrisDuration;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera[] allCameras;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StreamCounter streamCounterLeft;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool streamCountersActive;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5791")]
		private StreamCounter streamCounterRight;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private PowerFistChargeDisplay powerfistDisplayLeft;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5067C")]
		private PowerFistChargeDisplay powerfistDisplayRight;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastDestroyTimeAudio;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastDestroyTimeLeft;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastDestroyTimeRight;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5799")]
		private Material shatterParticleMaterial;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool playSpaceWarning;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C58C")]
		private List<float> squaredHitSpeedList;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastBeatIndex;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool challengeCompleted;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float challengeDuration;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x579F")]
		private bool curvedFlightPaths;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HandState handStateLeft;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4CB74")]
		private Vector3 handRotationLeft;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 handPositionLeft;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject handSkeletonLeft;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RuntimeAnimatorController handControllerLeft;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57A6")]
		private Animator handAnimatorLeft;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HandState handStateRight;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50684")]
		private Vector3 handRotationRight;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 handPositionRight;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject handSkeletonRight;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RuntimeAnimatorController handControllerRight;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57AE")]
		private Animator handAnimatorRight;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SongManager songManager;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5068C")]
		private PlaylistManager playlistManager;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool lastBeatExecuted;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float movementOfHeadet;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float movementOfLC;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57B6")]
		private float movementOfRC;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool hasStreamInPlayerArea;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50694")]
		private float startBeat;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float endBeat;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScreenshotMaker screenshotMaker;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool toMainMenuPressed;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57BE")]
		private Vector2 calculatedScaling;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private BeatSequence scaledLayout;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5069C")]
		private Beautify[] beautifyScripts;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float averagePlayerHeight;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playerHeightSum;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int heightMeasurements;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57C6")]
		private float heightSamplingInterval;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float highSquatTreshhold;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD506A4")]
		private float lowSquatTreshhold;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool belowLowSquatTreshhold;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool aboveHighSquatTreshhold;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MedievalWater medievalWater;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57CE")]
		private FlockingAnimals flockingAnimals;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SkyWheel skyWheel;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD506AC")]
		private BattleIsland battleIsland;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float caloriesPerMark;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool cancelPlaylistButtonHasBeenPressed;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EnvironmentSetting setting;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57D6")]
		private bool isMetric;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool strengthMeterIsVible;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD506B4")]
		private List<Beat> fullBeats;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool referenceTimeWasGreaterThanZeroBefore;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int previousIntegerBeat;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool songEnded;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57DE")]
		private float lastUpdateDSPTime;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float deltaTimeSinceLastDSPChange;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD506BC")]
		private List<MovingElement> fly_movingElements;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fly_lastDSPUpdateDSPTime;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fly_timeDeltaTimeSinceLastDSPUpdate;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fly_interpolatedDSPTime;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57E6")]
		private float fly_unitsToFlyInOneSecond;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ParticleSystem destroyParticleEffectOnHittable;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD506C4")]
		private ParticleSystem shatterParticleEffectOnHittable;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AudioFader audioFader;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x17C1630", Offset = "0x17C1630", VA = "0x17C1630")]
		private void Awake()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x17C1954", Offset = "0x17C1954", VA = "0x17C1954")]
		private void PauseMenu_cancelPressed()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x17C1B30", Offset = "0x17C1B30", VA = "0x17C1B30")]
		private void CancelSong()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x17C4D18", Offset = "0x17C4D18", VA = "0x17C4D18")]
		private void PauseMenu_continuePressed()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x17C4D50", Offset = "0x17C4D50", VA = "0x17C4D50")]
		private void Start()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x17C4F8C", Offset = "0x17C4F8C", VA = "0x17C4F8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC252C0", Offset = "0xC252C0")]
		public IEnumerator DoOneTimeAndSongSpecificSetup(GameConfiguration gameConfig)
		{
			return null;
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x17C50B8", Offset = "0x17C50B8", VA = "0x17C50B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25370", Offset = "0xC25370")]
		public IEnumerator PrepareSong()
		{
			return null;
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x17C5174", Offset = "0x17C5174", VA = "0x17C5174")]
		public float GetCurrentLayoutBasedSongLength()
		{
			return default(float);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x17C51DC", Offset = "0x17C51DC", VA = "0x17C51DC")]
		private float GetMusicBasedBeatAtCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x17C53BC", Offset = "0x17C53BC", VA = "0x17C53BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25420", Offset = "0xC25420")]
		private IEnumerator OneTimeSetup(GameConfiguration gameConfig)
		{
			return null;
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x17C54E8", Offset = "0x17C54E8", VA = "0x17C54E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC254D0", Offset = "0xC254D0")]
		private IEnumerator LoadCustomSkyBox(GameEnvironment gc)
		{
			return null;
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x17C5614", Offset = "0x17C5614", VA = "0x17C5614")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25580", Offset = "0xC25580")]
		private IEnumerator DisplayAllElementsShortly()
		{
			return null;
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x17C5718", Offset = "0x17C5718", VA = "0x17C5718")]
		private static GameObject InstantiateAndShow(GameObject element, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x17C5880", Offset = "0x17C5880", VA = "0x17C5880")]
		private void SongSpecificSetup()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x17C8518", Offset = "0x17C8518", VA = "0x17C8518")]
		private void RetrieveLastHighscore()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x17C8A40", Offset = "0x17C8A40", VA = "0x17C8A40")]
		private void lastHighscoreRetrieved(int score)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x17C7D28", Offset = "0x17C7D28", VA = "0x17C7D28")]
		private void SetBallFlightDuration()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x17C8C7C", Offset = "0x17C8C7C", VA = "0x17C8C7C")]
		private void HrmCon_HeartRateChanged(int heartRate)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x17C8CE4", Offset = "0x17C8CE4", VA = "0x17C8CE4")]
		private void SystemButtonPressed(bool activate)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x17C9B64", Offset = "0x17C9B64", VA = "0x17C9B64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25630", Offset = "0xC25630")]
		public IEnumerator ChangeQualitySettings(GameConfiguration.GameQuality quality)
		{
			return null;
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x17C9C90", Offset = "0x17C9C90", VA = "0x17C9C90")]
		private void SetBloom(GameConfiguration.OffOn bloom)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x17C9E94", Offset = "0x17C9E94", VA = "0x17C9E94")]
		private void SetBeautify(GameConfiguration.OffOn beautifySetting)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x17CA02C", Offset = "0x17CA02C", VA = "0x17CA02C")]
		public void StartCountDown()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x17CA174", Offset = "0x17CA174", VA = "0x17CA174")]
		private void EndMenu_nextSongClicked()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x17CA4A4", Offset = "0x17CA4A4", VA = "0x17CA4A4")]
		private void EndMenu_playAgainClicked()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x17CA6B8", Offset = "0x17CA6B8", VA = "0x17CA6B8")]
		private void EndMenu_overviewClicked()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x17CA3E8", Offset = "0x17CA3E8", VA = "0x17CA3E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC256E0", Offset = "0xC256E0")]
		private IEnumerator SetupSongAndStart()
		{
			return null;
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x17CAC48", Offset = "0x17CAC48", VA = "0x17CAC48")]
		private void DoCountDown()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x17CB3A4", Offset = "0x17CB3A4", VA = "0x17CB3A4")]
		private void StartSong()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x17CC228", Offset = "0x17CC228", VA = "0x17CC228")]
		private void ShowPauseMenuHint(bool isActive)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x17CBC4C", Offset = "0x17CBC4C", VA = "0x17CBC4C")]
		private void ShowWeaponStartInfo(bool shouldShow)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x17CB848", Offset = "0x17CB848", VA = "0x17CB848")]
		private void AnimatePanel(GameObject panel, Vector3 vectorToShift, float timeToShift)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x17CC85C", Offset = "0x17CC85C", VA = "0x17CC85C")]
		private void SetupCombos()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x17CD0A4", Offset = "0x17CD0A4", VA = "0x17CD0A4")]
		private void InitializeWeaponObjects()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x17CD4B0", Offset = "0x17CD4B0", VA = "0x17CD4B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x17CDCD8", Offset = "0x17CDCD8", VA = "0x17CDCD8")]
		private void SwitchToWeapon(WeaponType weaponType)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x17CE328", Offset = "0x17CE328", VA = "0x17CE328")]
		private void AppButton_Changed(bool isPressed)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x17CE420", Offset = "0x17CE420", VA = "0x17CE420")]
		private void UseButtonPressed(Controller controller, bool isPressed)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x17C8EA4", Offset = "0x17C8EA4", VA = "0x17C8EA4")]
		private void EnablePauseMode()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x17CE978", Offset = "0x17CE978", VA = "0x17CE978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25790", Offset = "0xC25790")]
		private IEnumerator EnableLaserPointer()
		{
			return null;
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x17C2240", Offset = "0x17C2240", VA = "0x17C2240")]
		private void DisablePauseMode(bool continueSong)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x17C1F2C", Offset = "0x17C1F2C", VA = "0x17C1F2C")]
		internal void ToMainMenuPressed()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x17C3C70", Offset = "0x17C3C70", VA = "0x17C3C70")]
		private void ToggleMenuHands(bool shouldActivate)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x17CFF7C", Offset = "0x17CFF7C", VA = "0x17CFF7C")]
		private void ResetComboOnFinish()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x17D02A8", Offset = "0x17D02A8", VA = "0x17D02A8")]
		private void FinishChallenge()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x17D221C", Offset = "0x17D221C", VA = "0x17D221C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25840", Offset = "0xC25840")]
		private IEnumerator StartSongWithoutBreak()
		{
			return null;
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x17D22D8", Offset = "0x17D22D8", VA = "0x17D22D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x17D6148", Offset = "0x17D6148", VA = "0x17D6148")]
		private void FlyHittablesAndBallObstacles()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x17D6F58", Offset = "0x17D6F58", VA = "0x17D6F58")]
		internal void RemoveFromFlyingList(MovingElement element)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x17D5C5C", Offset = "0x17D5C5C", VA = "0x17D5C5C")]
		private void CheckAreaBasedElementsPerBeat()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x17D3810", Offset = "0x17D3810", VA = "0x17D3810")]
		private void HandleBeat()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x17D7190", Offset = "0x17D7190", VA = "0x17D7190")]
		private void FireActions(Beat beat, float interpolatedTime, float interpolatedBeatNumber, float sendBeatsLate, float secondsSinceInterpolatedBeatWhenActionShouldHaveBeenSent)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x17C811C", Offset = "0x17C811C", VA = "0x17C811C")]
		private void UpdateTimeLeftDisplay(float timeLeft)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x17CA8A8", Offset = "0x17CA8A8", VA = "0x17CA8A8")]
		private string GetFormattedTimeSpan(float timeSpan)
		{
			return null;
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x17CC624", Offset = "0x17CC624", VA = "0x17CC624")]
		private void StartPlaylistDurationSlider()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x17D47D0", Offset = "0x17D47D0", VA = "0x17D47D0")]
		private void CheckWallEnter()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x17D4D24", Offset = "0x17D4D24", VA = "0x17D4D24")]
		private void CheckStreamPerFrame()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x17D7640", Offset = "0x17D7640", VA = "0x17D7640")]
		private void FireHittableAction(HittableAction hittableAction, float interpolatedTime, float interpolatedBeat, float sendBeatsLate, float secondsSinceInterpolatedBeatWhenActionShouldHaveBeenSent)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x17DC904", Offset = "0x17DC904", VA = "0x17DC904")]
		private Vector2[] GetCornersForIndicator(Vector3 pos, Vector2 size, float rotation)
		{
			return null;
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x17DD57C", Offset = "0x17DD57C", VA = "0x17DD57C")]
		private Vector2 GetRotatedPoint(Vector2 nonRotatedPoint, Vector2 centerOfRotation, double rotation)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x17DCFDC", Offset = "0x17DCFDC", VA = "0x17DCFDC")]
		public Sequence AddDOTWeenToHittable(GameObject obj, bool isSwing, FlyPath flyPath, float secondsSinceActionShouldHaveBeenSent)
		{
			return null;
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x17DDAC8", Offset = "0x17DDAC8", VA = "0x17DDAC8")]
		private Sequence AddDOTWeenToObstacle(GameObject obj, FlyPath flyPath, float secondsSinceActionShouldHaveBeenSent)
		{
			return null;
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x17DAE08", Offset = "0x17DAE08", VA = "0x17DAE08")]
		private void FireStream(StreamAction ca, float secondsSinceActionShouldHaveBeenSent)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x17DE47C", Offset = "0x17DE47C", VA = "0x17DE47C")]
		private float GetBallDurationInSecondsFromZeroToEnd()
		{
			return default(float);
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x17D962C", Offset = "0x17D962C", VA = "0x17D962C")]
		private void FireObstacle(ObstacleAction obstacle, float secondsSinceActionShouldHaveBeenSent)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x17DE62C", Offset = "0x17DE62C", VA = "0x17DE62C")]
		internal void Contact(MovingElement mv, CollidableObject co, CollidableObjectPart cop)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x17E1FF0", Offset = "0x17E1FF0", VA = "0x17E1FF0")]
		private HitResult GetHitLevel(float velocity)
		{
			return default(HitResult);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x17E28C4", Offset = "0x17E28C4", VA = "0x17E28C4")]
		private void ContactDestroy(DestroyableElement mv, CollidableObject co, int scorePlus, bool isPowerFistTriggeredDestruction, bool isFullDestruction, bool isMaxPossible, Vector3 hitSpeed)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x17E1B10", Offset = "0x17E1B10", VA = "0x17E1B10")]
		private void ContactBounce(DestroyableElement mv, CollidableObject co, bool hittableDeflected)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x17D6FF8", Offset = "0x17D6FF8", VA = "0x17D6FF8")]
		private void ContactWithWall(WallObstacle wo, bool basedOnBeat)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x17E3CBC", Offset = "0x17E3CBC", VA = "0x17E3CBC")]
		private void ContactAtBeatWithStream(Stream theStream, AreaBasedElement.CurrentCollisionInformation ci)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x17E3E24", Offset = "0x17E3E24", VA = "0x17E3E24")]
		internal void ContactWithHittableMissed(MovingElement element)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x17CE82C", Offset = "0x17CE82C", VA = "0x17CE82C")]
		public void DeployerPowerFist(LLManager.HandSide sidePressed)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x17C9918", Offset = "0x17C9918", VA = "0x17C9918")]
		public void DeployShield(LLManager.HandSide sidePressed, bool enable)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x17E3EBC", Offset = "0x17E3EBC", VA = "0x17E3EBC")]
		private void EnablePowerFistChargedAudioSource(bool isEnabled)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x17E3330", Offset = "0x17E3330", VA = "0x17E3330")]
		private void IndicateDamageToPlayer()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x17E40A4", Offset = "0x17E40A4", VA = "0x17E40A4")]
		private void WallApproaches()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x17E4110", Offset = "0x17E4110", VA = "0x17E4110")]
		private void WallOnPlayer()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x17E42D4", Offset = "0x17E42D4", VA = "0x17E42D4")]
		private void WallLeaves()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x17E439C", Offset = "0x17E439C", VA = "0x17E439C")]
		private void AreaBasedElementHitsEnd(AreaBasedElement abe)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x17E44E8", Offset = "0x17E44E8", VA = "0x17E44E8")]
		private void ObstacleHitsEnd(BallObstacle obst)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x17DE03C", Offset = "0x17DE03C", VA = "0x17DE03C")]
		private void ShowFirstStreamHint()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x17E4624", Offset = "0x17E4624", VA = "0x17E4624")]
		public void SetLastDestroyTimeForAudio(float destroyTime)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x17E31D0", Offset = "0x17E31D0", VA = "0x17E31D0")]
		public bool CheckLastDestroyTimeForAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x17E465C", Offset = "0x17E465C", VA = "0x17E465C")]
		public void SetLastDestroyTimeForEffect(float destroyTime, bool isLeftController)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x17E46D4", Offset = "0x17E46D4", VA = "0x17E46D4")]
		public bool CheckLastDestroyTimeForEffect(bool isLeftController)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x17E37E4", Offset = "0x17E37E4", VA = "0x17E37E4")]
		public void PlayDestroyParticleEffect(DestroyableElement mv, bool isLeftController, Vector3 controllerSpeedVector)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x17E488C", Offset = "0x17E488C", VA = "0x17E488C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC258F0", Offset = "0xC258F0")]
		internal IEnumerator KillParticleEffectOnHittable(float timeToKill, ParticleSystem destroyEffect)
		{
			return null;
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x17E49C4", Offset = "0x17E49C4", VA = "0x17E49C4")]
		public void ShatterBall(DestroyableElement mv, Vector3 controllerSpeedVector)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x17E54E8", Offset = "0x17E54E8", VA = "0x17E54E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC259A0", Offset = "0xC259A0")]
		internal IEnumerator KillShatterEffectOnHittable(float timeToKill, ParticleSystem shatterEffect)
		{
			return null;
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x17DBF6C", Offset = "0x17DBF6C", VA = "0x17DBF6C")]
		private void UpdateScoreAndNotify(int scoreDelta, bool countsForCombo, bool isFromCombo, bool isMaxHitPossible, Vector3 objectOfScorePos)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x17CFFAC", Offset = "0x17CFFAC", VA = "0x17CFFAC")]
		private void ResetCombo()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x17E2F8C", Offset = "0x17E2F8C", VA = "0x17E2F8C")]
		private void TriggerPlayspaceBoundaryPulse(Color color)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x17E66E4", Offset = "0x17E66E4", VA = "0x17E66E4")]
		private void VisualizeScoreChange(int scoreDelta, bool isFromCombo, bool isMaxHitPossible, Vector3 objectOfScorePos)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x17E64D8", Offset = "0x17E64D8", VA = "0x17E64D8")]
		private void ShowBigScorePulse()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x17E5620", Offset = "0x17E5620", VA = "0x17E5620")]
		private void VisualizeComboChange()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x17E8008", Offset = "0x17E8008", VA = "0x17E8008")]
		private void ShowTextCentered(string text, float size, float durationIn, float durationOut)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x17CB19C", Offset = "0x17CB19C", VA = "0x17CB19C")]
		private void ShowCountDown()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x17CC48C", Offset = "0x17CC48C", VA = "0x17CC48C")]
		private void UpdateLabels()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x17E8B20", Offset = "0x17E8B20", VA = "0x17E8B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC25A50", Offset = "0xC25A50")]
		private IEnumerator CountScoreIncrementally()
		{
			return null;
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x17E8C24", Offset = "0x17E8C24", VA = "0x17E8C24")]
		public void ReportStreamElementSpawned()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x17E8CA8", Offset = "0x17E8CA8", VA = "0x17E8CA8")]
		public void ReportStreamElementMissed()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x17C3A88", Offset = "0x17C3A88", VA = "0x17C3A88")]
		private void SetWarnRegardingPlaySpace(bool enable)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x17CEA7C", Offset = "0x17CEA7C", VA = "0x17CEA7C")]
		private void DisableAndResetHandDisplays()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x17C7CA4", Offset = "0x17C7CA4", VA = "0x17C7CA4")]
		private void ShowNextSongText(bool isActive)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x17C3330", Offset = "0x17C3330", VA = "0x17C3330")]
		private void DisplayScoreBoard(bool directlyShowPlaylistOverview)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x17D0918", Offset = "0x17D0918", VA = "0x17D0918")]
		private void UpdateSongStats()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x17D1970", Offset = "0x17D1970", VA = "0x17D1970")]
		private void SetLeaderboardEntry()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x17E8D2C", Offset = "0x17E8D2C", VA = "0x17E8D2C")]
		private void CalculateStrengthBonus()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x17E962C", Offset = "0x17E962C", VA = "0x17E962C")]
		private void CalculateActivityBonus()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x17CEB24", Offset = "0x17CEB24", VA = "0x17CEB24")]
		private void UpdateOverallStats()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x17E9874", Offset = "0x17E9874", VA = "0x17E9874")]
		public void TakeScreenshot()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x17E9974", Offset = "0x17E9974", VA = "0x17E9974")]
		public void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x17E9A48", Offset = "0x17E9A48", VA = "0x17E9A48")]
		public GameManager()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x17EA02C", Offset = "0x17EA02C", VA = "0x17EA02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25B00", Offset = "0xC25B00")]
		private float <StartPlaylistDurationSlider>b__282_0()
		{
			return default(float);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x17EA07C", Offset = "0x17EA07C", VA = "0x17EA07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25B3C", Offset = "0xC25B3C")]
		private void <StartPlaylistDurationSlider>b__282_1(float x)
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class Generator
	{
		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Song song;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6F0")]
		private Song.Difficulty difficulty;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int numberOfBeatsInSong;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57ABC")]
		private GenOverallConfig config;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongLayout layout;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ProportionalSelection<Pattern> patternSelector;

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x17A6080", Offset = "0x17A6080", VA = "0x17A6080")]
		public Generator(Song song, Song.Difficulty difficulty, GenOverallConfig configuration)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x17A61A0", Offset = "0x17A61A0", VA = "0x17A61A0")]
		public void Generate()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x17A69FC", Offset = "0x17A69FC", VA = "0x17A69FC")]
		private Pattern SelectNextPattern(Pattern lastPattern, bool allowRepetitions)
		{
			return null;
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x17A7688", Offset = "0x17A7688", VA = "0x17A7688")]
		internal SongLayout GetLayout()
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x17A6B3C", Offset = "0x17A6B3C", VA = "0x17A6B3C")]
		private void CleanUpLastBeats(SongLayout layout)
		{
		}
	}
	[Token(Token = "0x200045B")]
	public abstract class Pattern
	{
		[Token(Token = "0x2000778")]
		internal enum BallType
		{
			[Token(Token = "0x4002F8B")]
			Normal,
			[Token(Token = "0x4002F8C")]
			Spike,
			[Token(Token = "0x4002F8D")]
			Hard
		}

		[Token(Token = "0x2000779")]
		internal enum Mirror
		{
			[Token(Token = "0x4002F8F")]
			X,
			[Token(Token = "0x4002F90")]
			Y
		}

		[Token(Token = "0x200077A")]
		internal enum SwingVertical
		{
			[Token(Token = "0x4002F92")]
			Up,
			[Token(Token = "0x4002F93")]
			Down
		}

		[Token(Token = "0x200077B")]
		internal enum SwingHorizontal
		{
			[Token(Token = "0x4002F95")]
			Left,
			[Token(Token = "0x4002F96")]
			Right,
			[Token(Token = "0x4002F97")]
			None
		}

		[Token(Token = "0x200077C")]
		internal class TwoHittableActions
		{
			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Vector2 centerPosition;

			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal BeatAction a1;

			[Token(Token = "0x4002F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD71F")]
			internal BeatAction a2;

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0x18120B0", Offset = "0x18120B0", VA = "0x18120B0")]
			public TwoHittableActions(Vector2 centerPosition, BeatAction a1, BeatAction a2)
			{
			}
		}

		[Token(Token = "0x200077D")]
		internal class SwingActions
		{
			[Token(Token = "0x4002F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal Vector2 firstPosition;

			[Token(Token = "0x4002F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57AE4")]
			internal BeatAction a1;

			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal BeatAction a2;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal BeatAction a3;

			[Token(Token = "0x60030D8")]
			[Address(RVA = "0x18129FC", Offset = "0x18129FC", VA = "0x18129FC")]
			public SwingActions(Vector2 centerPosition, BeatAction a1, BeatAction a2, BeatAction a3)
			{
			}
		}

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08C8C", Offset = "0xC08C8C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6F8")]
		internal GenSettingDescriptor.Option repetition0;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option repetition1;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D714")]
		internal GenSettingDescriptor.Option repetition2;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GenSettingDescriptor relativeProportion;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor beatAdvance;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor enforceGapStartEnd;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6FF")]
		internal GenSettingDescriptor repetitions;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenPatternConfig config;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57AC4")]
		internal SongLayout layout;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int startBeat;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int currentBeat;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal UserPosition userPosition;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD707")]
		internal Pattern lastPattern;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal OnBeat startBeatOnBeat;

		[Token(Token = "0x17000444")]
		public string Name
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x18102B0", Offset = "0x18102B0", VA = "0x18102B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25B78", Offset = "0xC25B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x18102E0", Offset = "0x18102E0", VA = "0x18102E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25BB4", Offset = "0xC25BB4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1810318", Offset = "0x1810318", VA = "0x1810318")]
		public Pattern(string name)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1810868", Offset = "0x1810868", VA = "0x1810868", Slot = "4")]
		public virtual List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1810A10", Offset = "0x1810A10", VA = "0x1810A10")]
		internal void SetConfig(GenPatternConfig config)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1810A48", Offset = "0x1810A48", VA = "0x1810A48")]
		public int GetRelativeProportion()
		{
			return default(int);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1810B2C", Offset = "0x1810B2C", VA = "0x1810B2C")]
		internal int GetBeatCountOfThisPattern()
		{
			return default(int);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1810B70", Offset = "0x1810B70", VA = "0x1810B70", Slot = "5")]
		internal virtual void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x1810DE8", Offset = "0x1810DE8", VA = "0x1810DE8")]
		internal int GetCurrentBeat()
		{
			return default(int);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1810E18", Offset = "0x1810E18", VA = "0x1810E18")]
		internal UserPosition GetUserActionSide()
		{
			return default(UserPosition);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1810E48", Offset = "0x1810E48", VA = "0x1810E48")]
		internal void GoToNextBeat()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x1810EB8", Offset = "0x1810EB8", VA = "0x1810EB8")]
		internal int GetBeatsToAdvance()
		{
			return default(int);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1810FD8", Offset = "0x1810FD8", VA = "0x1810FD8")]
		internal bool IsHalfBeat()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x181110C", Offset = "0x181110C", VA = "0x181110C")]
		internal void AddRepetitions(int repetitions, int fromBeat, int toBeat)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x18111C0", Offset = "0x18111C0", VA = "0x18111C0")]
		private void CloneBeats(int fromBeat, int toBeat)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1811344", Offset = "0x1811344", VA = "0x1811344")]
		internal int ChooseRepetition()
		{
			return default(int);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1810C70", Offset = "0x1810C70", VA = "0x1810C70")]
		private OnBeat GetOrCreateCurrentBeat()
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1811680", Offset = "0x1811680", VA = "0x1811680")]
		internal BeatAction CreateSingleBallAction(Vector2 position, BallType type, float subbeatOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1811B6C", Offset = "0x1811B6C", VA = "0x1811B6C")]
		internal BeatAction CreateSingleBallAction(Window window, BallType type, float subbeatOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1811BFC", Offset = "0x1811BFC", VA = "0x1811BFC")]
		internal TwoHittableActions CreateDoubleBallAction(Window window, BallType type, bool withRandomY)
		{
			return null;
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1812044", Offset = "0x1812044", VA = "0x1812044")]
		internal float NegativeOrNot()
		{
			return default(float);
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x18121C4", Offset = "0x18121C4", VA = "0x18121C4")]
		internal bool Decide()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1812240", Offset = "0x1812240", VA = "0x1812240")]
		internal UserPosition GetOtherSide(UserPosition lastUserActionSide)
		{
			return default(UserPosition);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x18122DC", Offset = "0x18122DC", VA = "0x18122DC")]
		internal UserPosition AlternateTheSideOfTheUser(UserPosition lastUserActionSide)
		{
			return default(UserPosition);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x18123C4", Offset = "0x18123C4", VA = "0x18123C4")]
		internal SwingActions CreateVerticalSwingAction(Window window, SwingHorizontal horiz, SwingVertical vert)
		{
			return null;
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1812878", Offset = "0x1812878", VA = "0x1812878")]
		internal SwingActions CreateVerticalSwingAction(Window window, SwingVertical vert)
		{
			return null;
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x18128FC", Offset = "0x18128FC", VA = "0x18128FC")]
		internal SwingActions CreateVerticalSwingAction(Vector2 startPosition, SwingVertical vert)
		{
			return null;
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1812454", Offset = "0x1812454", VA = "0x1812454")]
		internal SwingActions CreateVerticalSwingAction(Vector2 startPosition, SwingHorizontal horiz, SwingVertical vert)
		{
			return null;
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1812B28", Offset = "0x1812B28", VA = "0x1812B28")]
		internal SwingActions CreateHorizontalSwingAction(Window window, SwingHorizontal horiz)
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1812BA8", Offset = "0x1812BA8", VA = "0x1812BA8")]
		internal SwingActions CreateHorizontalSwingAction(Vector2 startPosition, SwingHorizontal horiz)
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1812EEC", Offset = "0x1812EEC", VA = "0x1812EEC")]
		internal object AddClonedMirrored(object someAction, bool mirrorX, bool mirrorY)
		{
			return null;
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1813730", Offset = "0x1813730", VA = "0x1813730")]
		internal object AddClonedXMirrored(object someAction)
		{
			return null;
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1813788", Offset = "0x1813788", VA = "0x1813788")]
		internal object AddClonedYMirrored(object someAction)
		{
			return null;
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x18137E0", Offset = "0x18137E0", VA = "0x18137E0")]
		internal WallObstacleAction CreateWallActionOnBeat(WallObstacleAction.WallType wallType, Vector2 position, float lengthInBeats)
		{
			return null;
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x18139C0", Offset = "0x18139C0", VA = "0x18139C0")]
		internal void CreateWallActionOnBeat(WallObstacleAction.WallType wallType, Window window, int lengthInBeats)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1813A54", Offset = "0x1813A54", VA = "0x1813A54")]
		internal GapSetting GetGapSettings()
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1813B34", Offset = "0x1813B34", VA = "0x1813B34")]
		internal int EnforceGapIfNoGapExists(int fromWhere, int gappyBeatsWeNeed)
		{
			return default(int);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1813DBC", Offset = "0x1813DBC", VA = "0x1813DBC")]
		internal void EnforceGapHere(int gappyBeatsWeNeed)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1813D10", Offset = "0x1813D10", VA = "0x1813D10")]
		private bool DoesBeatHaveActions(OnBeat onBeat)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1813E24", Offset = "0x1813E24", VA = "0x1813E24")]
		internal bool HasGapBefore(SongLayout layout, int beatToCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1814140", Offset = "0x1814140", VA = "0x1814140")]
		internal void AdjustForHalfBeats()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class PatternBalls : Pattern
	{
		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option ballsPerBeat1;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD727")]
		internal GenSettingDescriptor.Option ballsPerBeat2;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option typeOfBallNormal;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57AEC")]
		internal GenSettingDescriptor.Option typeOfBallHard;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor oneOrTwoBalls;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor hardOrNormalBall;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor ballWindow;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD72F")]
		private GenSettingDescriptor ballOffsetX;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GenSettingDescriptor ballOffsetY;

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x18141DC", Offset = "0x18141DC", VA = "0x18141DC")]
		public PatternBalls(string name)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x181483C", Offset = "0x181483C", VA = "0x181483C", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x18149B4", Offset = "0x18149B4", VA = "0x18149B4", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1815380", Offset = "0x1815380", VA = "0x1815380")]
		private GenSettingDescriptor.Option ChooseBallAmount()
		{
			return null;
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x18155F0", Offset = "0x18155F0", VA = "0x18155F0")]
		private BallType ChooseBallType()
		{
			return default(BallType);
		}
	}
	[Token(Token = "0x200045D")]
	public class PatternGap : Pattern
	{
		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1817EC4", Offset = "0x1817EC4", VA = "0x1817EC4")]
		public PatternGap(string name)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1817F04", Offset = "0x1817F04", VA = "0x1817F04", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class PatternJumpLeftRight : Pattern
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57AF4")]
		internal GenSettingDescriptor.Option elementTypeSingleBall;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option elementTypeDoubleBall;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option elementTypeSpikeObstacle;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option elementTypeSwingUp;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD737")]
		internal GenSettingDescriptor.Option elementTypeSwingIn;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option elementTypeSwingNothing;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57AFC")]
		private GenSettingDescriptor elementTypes;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option typeOfBallNormal;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option typeOfBallHard;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor hardOrNormalBall;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD73F")]
		internal GenSettingDescriptor wallRange;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor ballWindow;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B04")]
		private GenSettingDescriptor spikeWindow;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor swingUpWindow;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor swingSideWindow;

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1818370", Offset = "0x1818370", VA = "0x1818370")]
		public PatternJumpLeftRight(string name)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1818CD8", Offset = "0x1818CD8", VA = "0x1818CD8", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1818EB0", Offset = "0x1818EB0", VA = "0x1818EB0", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1819DFC", Offset = "0x1819DFC", VA = "0x1819DFC")]
		private GenSettingDescriptor.Option ChooseElementType()
		{
			return null;
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x181A35C", Offset = "0x181A35C", VA = "0x181A35C")]
		private BallType ChooseBallType()
		{
			return default(BallType);
		}
	}
	[Token(Token = "0x200045F")]
	public class PatternJumpUpDown : Pattern
	{
		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option elementTypeSingleBall;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD747")]
		internal GenSettingDescriptor.Option elementTypeDoubleBall;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option elementTypeSpikeObstacle;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B0C")]
		internal GenSettingDescriptor.Option elementTypeSwingSide;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option elementTypeNothing;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor elementTypes;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option typeOfBallNormal;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD74F")]
		internal GenSettingDescriptor.Option typeOfBallHard;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor hardOrNormalBall;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D71C")]
		private GenSettingDescriptor wallRange;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor ballSideWindow;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor swingSideWindow;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor spikeSideWindow;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD756")]
		private GenSettingDescriptor yElementDelta;

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x181A5AC", Offset = "0x181A5AC", VA = "0x181A5AC")]
		public PatternJumpUpDown(string name)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x181AE98", Offset = "0x181AE98", VA = "0x181AE98", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x181B070", Offset = "0x181B070", VA = "0x181B070", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x181C608", Offset = "0x181C608", VA = "0x181C608")]
		private object CreateIndividualElement(GenSettingDescriptor.Option elementType, Window sideBallPlacement, Window sideSwingPlacement, Window sideSpikePlacement)
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x181C050", Offset = "0x181C050", VA = "0x181C050")]
		private GenSettingDescriptor.Option ChooseElementType(GenSettingDescriptor.Option without)
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x181CA48", Offset = "0x181CA48", VA = "0x181CA48")]
		private BallType ChooseBallType()
		{
			return default(BallType);
		}
	}
	[Token(Token = "0x2000460")]
	public class PatternStream : Pattern
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GenSettingDescriptor streamWaveOffsetX;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B14")]
		private GenSettingDescriptor streamWaveOffsetY;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x181DEF8", Offset = "0x181DEF8", VA = "0x181DEF8")]
		public PatternStream(string name)
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x181E140", Offset = "0x181E140", VA = "0x181E140", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x181E228", Offset = "0x181E228", VA = "0x181E228", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class PatternSwings : Pattern
	{
		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option swingTypeSingleLeftRight;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option swingTypeSingleDownDown;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option swingTypeSingleDownUp;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD75E")]
		internal GenSettingDescriptor.Option swingTypeDoubleUpDownDuck;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option swingTypeDoubleLeftRight;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B1C")]
		internal GenSettingDescriptor.Option spikeBetweenSwingYes;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option spikeBetweenSwingNo;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor swingType;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor spikeType;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD766")]
		private GenSettingDescriptor singleSwingLeftRightWindow;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GenSettingDescriptor singleSwingDownDownWindow;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B24")]
		private GenSettingDescriptor singleSwingDownUpWindow;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor doubleSwingUpDownDuckWindow;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor doubleSwingLeftRightWindow;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x181EEA8", Offset = "0x181EEA8", VA = "0x181EEA8")]
		public PatternSwings(string name)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x181F788", Offset = "0x181F788", VA = "0x181F788", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x181F960", Offset = "0x181F960", VA = "0x181F960", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x18210C0", Offset = "0x18210C0", VA = "0x18210C0")]
		private GenSettingDescriptor.Option ChooseSwingType()
		{
			return null;
		}
	}
	[Token(Token = "0x2000462")]
	public class PatternWall : Pattern
	{
		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GenSettingDescriptor.Option wallTypeForehead;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD76E")]
		internal GenSettingDescriptor.Option wallTypeSide;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal GenSettingDescriptor.Option wallTypeArchway;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B2C")]
		internal GenSettingDescriptor wallType;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor wallWindowForehead;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GenSettingDescriptor wallWindowSide;

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1821564", Offset = "0x1821564", VA = "0x1821564")]
		public PatternWall(string name)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1821A08", Offset = "0x1821A08", VA = "0x1821A08", Slot = "4")]
		public override List<GenSettingDescriptor> GetSettingDescriptors()
		{
			return null;
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1821B20", Offset = "0x1821B20", VA = "0x1821B20", Slot = "5")]
		internal override void GenerateBeats(SongLayout layout, int startBeat, Pattern lastPattern)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x18226C4", Offset = "0x18226C4", VA = "0x18226C4")]
		private GenSettingDescriptor.Option ChooseWallType()
		{
			return null;
		}
	}
	[Token(Token = "0x2000463")]
	public class GenConfigManager
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GenConfigManager INSTANCE;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08CC8", Offset = "0xC08CC8")]
		private List<Pattern> <Patterns>k__BackingField;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08D04", Offset = "0xC08D04")]
		private Dictionary<Tuple<Song.Difficulty, Song.BPMRange>, GenOverallConfig> <Configurations>k__BackingField;

		[Token(Token = "0x17000445")]
		public List<Pattern> Patterns
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0x179FD58", Offset = "0x179FD58", VA = "0x179FD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25BF0", Offset = "0xC25BF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600221A")]
			[Address(RVA = "0x179FD88", Offset = "0x179FD88", VA = "0x179FD88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25C2C", Offset = "0xC25C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public Dictionary<Tuple<Song.Difficulty, Song.BPMRange>, GenOverallConfig> Configurations
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0x179FDC0", Offset = "0x179FDC0", VA = "0x179FDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25C68", Offset = "0xC25C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x600221C")]
			[Address(RVA = "0x179FDF0", Offset = "0x179FDF0", VA = "0x179FDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25CA4", Offset = "0xC25CA4")]
			private set
			{
			}
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x179FE28", Offset = "0x179FE28", VA = "0x179FE28")]
		private GenConfigManager()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x17A1574", Offset = "0x17A1574", VA = "0x17A1574")]
		public void ResetDifficulty(Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x17A2374", Offset = "0x17A2374", VA = "0x17A2374")]
		public string SettingsToJSON(Song.Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x17A179C", Offset = "0x17A179C", VA = "0x17A179C")]
		public void SettingsFromJSON(string s, Song.Difficulty d)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x17A08C8", Offset = "0x17A08C8", VA = "0x17A08C8")]
		private List<Tuple<Song.Difficulty, Song.BPMRange>> GetTuples()
		{
			return null;
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x17A399C", Offset = "0x17A399C", VA = "0x17A399C")]
		internal GenOverallConfig GetConfigurationFor(Song.Difficulty difficulty, Song.BPMRange bpmRange)
		{
			return null;
		}
	}
	[Token(Token = "0x2000464")]
	public class GenOverallConfig : Dictionary<Pattern, GenPatternConfig>
	{
		[Token(Token = "0x6002224")]
		[Address(RVA = "0x17A1194", Offset = "0x17A1194", VA = "0x17A1194")]
		public GenOverallConfig(List<Pattern> patterns)
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class GenPatternConfig : Dictionary<GenSettingDescriptor, GenSettingValue>
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B34")]
		private Pattern pattern;

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x17A3B20", Offset = "0x17A3B20", VA = "0x17A3B20")]
		public GenPatternConfig(Pattern p)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class GenSettingDescriptor
	{
		[Token(Token = "0x200077E")]
		public class Option
		{
			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC1793C", Offset = "0xC1793C")]
			private string <Name>k__BackingField;

			[Token(Token = "0x170005A2")]
			public string Name
			{
				[Token(Token = "0x60030D9")]
				[Address(RVA = "0x17A4410", Offset = "0x17A4410", VA = "0x17A4410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC35B68", Offset = "0xC35B68")]
				get
				{
					return null;
				}
				[Token(Token = "0x60030DA")]
				[Address(RVA = "0x17A4440", Offset = "0x17A4440", VA = "0x17A4440")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC35BA4", Offset = "0xC35BA4")]
				private set
				{
				}
			}

			[Token(Token = "0x60030DB")]
			[Address(RVA = "0x17A4478", Offset = "0x17A4478", VA = "0x17A4478")]
			public Option(string name)
			{
			}
		}

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08D40", Offset = "0xC08D40")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08D7C", Offset = "0xC08D7C")]
		private Type <Type>k__BackingField;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08DB8", Offset = "0xC08DB8")]
		private bool <IsMulti>k__BackingField;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD77E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08DF4", Offset = "0xC08DF4")]
		private Option[] <Options>k__BackingField;

		[Token(Token = "0x17000447")]
		public string Name
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x17A4190", Offset = "0x17A4190", VA = "0x17A4190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25CE0", Offset = "0xC25CE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x17A41C0", Offset = "0x17A41C0", VA = "0x17A41C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25D1C", Offset = "0xC25D1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000448")]
		public Type Type
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x17A41F8", Offset = "0x17A41F8", VA = "0x17A41F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25D58", Offset = "0xC25D58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x17A4228", Offset = "0x17A4228", VA = "0x17A4228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25D94", Offset = "0xC25D94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public bool IsMulti
		{
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x17A4260", Offset = "0x17A4260", VA = "0x17A4260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25DD0", Offset = "0xC25DD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x17A42A4", Offset = "0x17A42A4", VA = "0x17A42A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25E0C", Offset = "0xC25E0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public Option[] Options
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x17A42F0", Offset = "0x17A42F0", VA = "0x17A42F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25E48", Offset = "0xC25E48")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222D")]
			[Address(RVA = "0x17A4320", Offset = "0x17A4320", VA = "0x17A4320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25E84", Offset = "0xC25E84")]
			private set
			{
			}
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x17A4358", Offset = "0x17A4358", VA = "0x17A4358")]
		public GenSettingDescriptor(string name, Type type, bool isMulti, Option[] options)
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class GenSettingValue
	{
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08E30", Offset = "0xC08E30")]
		private GenSettingDescriptor <Descriptor>k__BackingField;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object value;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<GenSettingDescriptor.Option, object> values;

		[Token(Token = "0x1700044B")]
		public GenSettingDescriptor Descriptor
		{
			[Token(Token = "0x600222F")]
			[Address(RVA = "0x17A44C8", Offset = "0x17A44C8", VA = "0x17A44C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25EC0", Offset = "0xC25EC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x17A44F8", Offset = "0x17A44F8", VA = "0x17A44F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25EFC", Offset = "0xC25EFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x17A3F54", Offset = "0x17A3F54", VA = "0x17A3F54")]
		public GenSettingValue(GenSettingDescriptor descriptor)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x17A4530", Offset = "0x17A4530", VA = "0x17A4530")]
		public void SetIndividualValue(object o)
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x17A4568", Offset = "0x17A4568", VA = "0x17A4568")]
		public void SetMultiValue(GenSettingDescriptor.Option option, object value)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x17A4618", Offset = "0x17A4618", VA = "0x17A4618")]
		public object GetIndividualValue()
		{
			return null;
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x17A4648", Offset = "0x17A4648", VA = "0x17A4648")]
		public object GetMultiValue(GenSettingDescriptor.Option option)
		{
			return null;
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x17A46F0", Offset = "0x17A46F0", VA = "0x17A46F0")]
		internal bool HasSameValue(GenSettingValue other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x17A3008", Offset = "0x17A3008", VA = "0x17A3008")]
		internal JSONNode ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x17A3560", Offset = "0x17A3560", VA = "0x17A3560")]
		internal void FromJSON(JSONNode node)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x17A50D0", Offset = "0x17A50D0", VA = "0x17A50D0")]
		internal object ReadValueFromJSON(JSONNode node)
		{
			return null;
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x17A4C98", Offset = "0x17A4C98", VA = "0x17A4C98")]
		internal JSONNode WriteValueToJSON(object value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000468")]
	public class GapSetting
	{
		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08E6C", Offset = "0xC08E6C")]
		private int <Before>k__BackingField;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08EA8", Offset = "0xC08EA8")]
		private int <Mid>k__BackingField;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08EE4", Offset = "0xC08EE4")]
		private int <After>k__BackingField;

		[Token(Token = "0x1700044C")]
		public int Before
		{
			[Token(Token = "0x600223B")]
			[Address(RVA = "0x179A744", Offset = "0x179A744", VA = "0x179A744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25F38", Offset = "0xC25F38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x179A774", Offset = "0x179A774", VA = "0x179A774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25F74", Offset = "0xC25F74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public int Mid
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x179A7AC", Offset = "0x179A7AC", VA = "0x179A7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25FB0", Offset = "0xC25FB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600223E")]
			[Address(RVA = "0x179A7DC", Offset = "0x179A7DC", VA = "0x179A7DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC25FEC", Offset = "0xC25FEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public int After
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0x179A814", Offset = "0x179A814", VA = "0x179A814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26028", Offset = "0xC26028")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002240")]
			[Address(RVA = "0x179A844", Offset = "0x179A844", VA = "0x179A844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26064", Offset = "0xC26064")]
			private set
			{
			}
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x179A87C", Offset = "0x179A87C", VA = "0x179A87C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x179AA40", Offset = "0x179AA40", VA = "0x179AA40")]
		public GapSetting(int before, int mid, int after)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x179AAC8", Offset = "0x179AAC8", VA = "0x179AAC8")]
		internal static GapSetting FromString(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000469")]
	internal class ProportionalSelection<E>
	{
		[Token(Token = "0x200077F")]
		private class Range
		{
			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal E key;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int fromInclusive;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int toExclusive;

			[Token(Token = "0x60030DC")]
			public Range(E key, int fromInclusive, int toExclusive)
			{
			}

			[Token(Token = "0x60030DD")]
			public bool Contains(int number)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE201C", Offset = "0xBE201C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Range, int> <>9__3_0;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Range, int> <>9__4_0;

			[Token(Token = "0x60030DF")]
			public <>c()
			{
			}

			[Token(Token = "0x60030E0")]
			internal int <AddElement>b__3_0(Range n)
			{
				return default(int);
			}

			[Token(Token = "0x60030E1")]
			internal int <Select>b__4_0(Range n)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Range> ranges;

		[Token(Token = "0x6002244")]
		public ProportionalSelection()
		{
		}

		[Token(Token = "0x6002245")]
		internal void AddElement(E key, int amount)
		{
		}

		[Token(Token = "0x6002246")]
		internal E Select()
		{
			return (E)null;
		}
	}
	[Token(Token = "0x200046A")]
	public class Range
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B44")]
		public float from;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float to;

		[Token(Token = "0x1700044F")]
		public float RandomPosition
		{
			[Token(Token = "0x6002248")]
			[Address(RVA = "0x1773C08", Offset = "0x1773C08", VA = "0x1773C08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1773AB8", Offset = "0x1773AB8", VA = "0x1773AB8")]
		public Range(float from, float to)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x1773C60", Offset = "0x1773C60", VA = "0x1773C60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1773DE4", Offset = "0x1773DE4", VA = "0x1773DE4")]
		internal static Range FromString(string s)
		{
			return null;
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1774088", Offset = "0x1774088", VA = "0x1774088", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x1774224", Offset = "0x1774224", VA = "0x1774224", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200046B")]
	public class SongBPMAndOffsetDetector : MonoBehaviour
	{
		[Token(Token = "0x2000781")]
		public enum Algorithm
		{
			[Token(Token = "0x4002FA7")]
			Algo_1a_MostCommonOffsetBetterVersion,
			[Token(Token = "0x4002FA8")]
			Algo_1b_MostCommonOffsetAuthorsVersion,
			[Token(Token = "0x4002FA9")]
			Algo_1c_MostCommonOffsetAuthorsVersionAndRoundedBPM,
			[Token(Token = "0x4002FAA")]
			Algo_2_AverageFromMainBeat,
			[Token(Token = "0x4002FAB")]
			Algo_3_SimplisticVolumeBased
		}

		[Token(Token = "0x2000782")]
		private enum Rounding
		{
			[Token(Token = "0x4002FAD")]
			Off,
			[Token(Token = "0x4002FAE")]
			ToPoint5,
			[Token(Token = "0x4002FAF")]
			ToFull,
			[Token(Token = "0x4002FB0")]
			To1Decimal,
			[Token(Token = "0x4002FB1")]
			To2Decimals,
			[Token(Token = "0x4002FB2")]
			To3Decimals
		}

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2058", Offset = "0xBE2058")]
		private sealed class <Detect>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D724")]
			private object <>2__current;

			[Token(Token = "0x4002FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x170005A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E5")]
				[Address(RVA = "0x17274E8", Offset = "0x17274E8", VA = "0x17274E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E7")]
				[Address(RVA = "0x17275B8", Offset = "0x17275B8", VA = "0x17275B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E2")]
			[Address(RVA = "0x1727328", Offset = "0x1727328", VA = "0x1727328")]
			[DebuggerHidden]
			public <Detect>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60030E3")]
			[Address(RVA = "0x1727370", Offset = "0x1727370", VA = "0x1727370", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E4")]
			[Address(RVA = "0x1727384", Offset = "0x1727384", VA = "0x1727384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E6")]
			[Address(RVA = "0x1727518", Offset = "0x1727518", VA = "0x1727518", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2094", Offset = "0xBE2094")]
		private sealed class <Detect>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7AD")]
			private object <>2__current;

			[Token(Token = "0x4002FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x4002FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57B64")]
			public AudioClip clip;

			[Token(Token = "0x4002FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Algorithm algorithm;

			[Token(Token = "0x170005A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030EB")]
				[Address(RVA = "0x1727F50", Offset = "0x1727F50", VA = "0x1727F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030ED")]
				[Address(RVA = "0x1728020", Offset = "0x1728020", VA = "0x1728020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x17275E8", Offset = "0x17275E8", VA = "0x17275E8")]
			[DebuggerHidden]
			public <Detect>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60030E9")]
			[Address(RVA = "0x1727630", Offset = "0x1727630", VA = "0x1727630", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x1727644", Offset = "0x1727644", VA = "0x1727644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030EC")]
			[Address(RVA = "0x1727F80", Offset = "0x1727F80", VA = "0x1727F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE20D0", Offset = "0xBE20D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<float, List<RhythmTool.Beat>>, int> <>9__24_0;

			[Token(Token = "0x4002FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7B5")]
			public static Func<KeyValuePair<float, List<RhythmTool.Beat>>, int> <>9__24_1;

			[Token(Token = "0x4002FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Func<RhythmTool.Beat, float> <>9__24_2;

			[Token(Token = "0x4002FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57B6C")]
			public static Func<KeyValuePair<float, int>, int> <>9__24_3;

			[Token(Token = "0x4002FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<float, List<RhythmTool.Beat>>, int> <>9__25_0;

			[Token(Token = "0x4002FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<float, int>, int> <>9__26_0;

			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<float, int>, int> <>9__26_1;

			[Token(Token = "0x60030EF")]
			[Address(RVA = "0x178485C", Offset = "0x178485C", VA = "0x178485C")]
			public <>c()
			{
			}

			[Token(Token = "0x60030F0")]
			[Address(RVA = "0x178488C", Offset = "0x178488C", VA = "0x178488C")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo1Version>b__24_0(KeyValuePair<float, List<RhythmTool.Beat>> n)
			{
				return default(int);
			}

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0x1784940", Offset = "0x1784940", VA = "0x1784940")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo1Version>b__24_1(KeyValuePair<float, List<RhythmTool.Beat>> n)
			{
				return default(int);
			}

			[Token(Token = "0x60030F2")]
			[Address(RVA = "0x17849F4", Offset = "0x17849F4", VA = "0x17849F4")]
			internal float <AnalyzeUsingRhythmAnalyzerAlgo1Version>b__24_2(RhythmTool.Beat n)
			{
				return default(float);
			}

			[Token(Token = "0x60030F3")]
			[Address(RVA = "0x1784A70", Offset = "0x1784A70", VA = "0x1784A70")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo1Version>b__24_3(KeyValuePair<float, int> n)
			{
				return default(int);
			}

			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x1784AF8", Offset = "0x1784AF8", VA = "0x1784AF8")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo2Version>b__25_0(KeyValuePair<float, List<RhythmTool.Beat>> n)
			{
				return default(int);
			}

			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x1784BAC", Offset = "0x1784BAC", VA = "0x1784BAC")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo3Version>b__26_0(KeyValuePair<float, int> n)
			{
				return default(int);
			}

			[Token(Token = "0x60030F6")]
			[Address(RVA = "0x1784C34", Offset = "0x1784C34", VA = "0x1784C34")]
			internal int <AnalyzeUsingRhythmAnalyzerAlgo3Version>b__26_1(KeyValuePair<float, int> n)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE210C", Offset = "0xBE210C")]
		private sealed class <AnalyzeUsingRhythmAnalyzerAlgo1Version>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7BD")]
			private int <>1__state;

			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57B74")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x4002FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x4002FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool useOriginalAuthorAdaptations;

			[Token(Token = "0x4002FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool useOriginalRoundedBPM;

			[Token(Token = "0x170005A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030FA")]
				[Address(RVA = "0x1787570", Offset = "0x1787570", VA = "0x1787570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030FC")]
				[Address(RVA = "0x1787640", Offset = "0x1787640", VA = "0x1787640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x1783844", Offset = "0x1783844", VA = "0x1783844")]
			[DebuggerHidden]
			public <AnalyzeUsingRhythmAnalyzerAlgo1Version>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x1784CBC", Offset = "0x1784CBC", VA = "0x1784CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030F9")]
			[Address(RVA = "0x1784CD0", Offset = "0x1784CD0", VA = "0x1784CD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0x17875A0", Offset = "0x17875A0", VA = "0x17875A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2148", Offset = "0xBE2148")]
		private sealed class <AnalyzeUsingRhythmAnalyzerAlgo2Version>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7C5")]
			private int <>1__state;

			[Token(Token = "0x4002FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57B7C")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x4002FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x170005A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003100")]
				[Address(RVA = "0x1788DE4", Offset = "0x1788DE4", VA = "0x1788DE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003102")]
				[Address(RVA = "0x1788EB4", Offset = "0x1788EB4", VA = "0x1788EB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030FD")]
			[Address(RVA = "0x1783970", Offset = "0x1783970", VA = "0x1783970")]
			[DebuggerHidden]
			public <AnalyzeUsingRhythmAnalyzerAlgo2Version>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60030FE")]
			[Address(RVA = "0x1787670", Offset = "0x1787670", VA = "0x1787670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030FF")]
			[Address(RVA = "0x1787684", Offset = "0x1787684", VA = "0x1787684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003101")]
			[Address(RVA = "0x1788E14", Offset = "0x1788E14", VA = "0x1788E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2184", Offset = "0xBE2184")]
		private sealed class <AnalyzeUsingRhythmAnalyzerAlgo3Version>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7CD")]
			public AudioClip clip;

			[Token(Token = "0x4002FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x170005AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003106")]
				[Address(RVA = "0x1727228", Offset = "0x1727228", VA = "0x1727228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003108")]
				[Address(RVA = "0x17272F8", Offset = "0x17272F8", VA = "0x17272F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003103")]
			[Address(RVA = "0x1724B7C", Offset = "0x1724B7C", VA = "0x1724B7C")]
			[DebuggerHidden]
			public <AnalyzeUsingRhythmAnalyzerAlgo3Version>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003104")]
			[Address(RVA = "0x1724BC4", Offset = "0x1724BC4", VA = "0x1724BC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003105")]
			[Address(RVA = "0x1724BD8", Offset = "0x1724BD8", VA = "0x1724BD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003107")]
			[Address(RVA = "0x1727258", Offset = "0x1727258", VA = "0x1727258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21C0", Offset = "0xBE21C0")]
		private sealed class <GetBeatList>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57B84")]
			private int <>1__state;

			[Token(Token = "0x4002FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SongBPMAndOffsetDetector <>4__this;

			[Token(Token = "0x4002FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x170005AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600310C")]
				[Address(RVA = "0x1728678", Offset = "0x1728678", VA = "0x1728678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600310E")]
				[Address(RVA = "0x1728748", Offset = "0x1728748", VA = "0x1728748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003109")]
			[Address(RVA = "0x1728050", Offset = "0x1728050", VA = "0x1728050")]
			[DebuggerHidden]
			public <GetBeatList>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x600310A")]
			[Address(RVA = "0x1728098", Offset = "0x1728098", VA = "0x1728098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600310B")]
			[Address(RVA = "0x17280AC", Offset = "0x17280AC", VA = "0x17280AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600310D")]
			[Address(RVA = "0x17286A8", Offset = "0x17286A8", VA = "0x17286A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool DEBUG_WRITE_CSV;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RhythmAnalyzer analyzer;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD78E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08F5C", Offset = "0xC08F5C")]
		private float <bpm>k__BackingField;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08F98", Offset = "0xC08F98")]
		private float <offset>k__BackingField;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC08FD4", Offset = "0xC08FD4")]
		private bool <isError>k__BackingField;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09010", Offset = "0xC09010")]
		private string <error>k__BackingField;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string analysisFile;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RhythmTool.Beat> beatList;

		[Token(Token = "0x17000450")]
		public float bpm
		{
			[Token(Token = "0x600224D")]
			[Address(RVA = "0x1783330", Offset = "0x1783330", VA = "0x1783330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC260A0", Offset = "0xC260A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600224E")]
			[Address(RVA = "0x1783360", Offset = "0x1783360", VA = "0x1783360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC260DC", Offset = "0xC260DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public float offset
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0x1783398", Offset = "0x1783398", VA = "0x1783398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26118", Offset = "0xC26118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x17833C8", Offset = "0x17833C8", VA = "0x17833C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26154", Offset = "0xC26154")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public bool isError
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0x1783400", Offset = "0x1783400", VA = "0x1783400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26190", Offset = "0xC26190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x1783444", Offset = "0x1783444", VA = "0x1783444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC261CC", Offset = "0xC261CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public string error
		{
			[Token(Token = "0x6002253")]
			[Address(RVA = "0x1783490", Offset = "0x1783490", VA = "0x1783490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26208", Offset = "0xC26208")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002254")]
			[Address(RVA = "0x17834C0", Offset = "0x17834C0", VA = "0x17834C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26244", Offset = "0xC26244")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x17834F8", Offset = "0x17834F8", VA = "0x17834F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26280", Offset = "0xC26280")]
		internal IEnumerator Detect(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x17835DC", Offset = "0x17835DC", VA = "0x17835DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26330", Offset = "0xC26330")]
		internal IEnumerator Detect(Algorithm algorithm, AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x17836E8", Offset = "0x17836E8", VA = "0x17836E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC263E0", Offset = "0xC263E0")]
		private IEnumerator AnalyzeUsingRhythmAnalyzerAlgo1Version(AudioClip clip, bool useOriginalAuthorAdaptations, bool useOriginalRoundedBPM)
		{
			return null;
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x178388C", Offset = "0x178388C", VA = "0x178388C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26490", Offset = "0xC26490")]
		private IEnumerator AnalyzeUsingRhythmAnalyzerAlgo2Version(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x17839B8", Offset = "0x17839B8", VA = "0x17839B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26540", Offset = "0xC26540")]
		private IEnumerator AnalyzeUsingRhythmAnalyzerAlgo3Version(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1783A9C", Offset = "0x1783A9C", VA = "0x1783A9C")]
		private Dictionary<float, List<RhythmTool.Beat>> GroupBeatsByBPMDescending(Rounding rounding)
		{
			return null;
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x1784698", Offset = "0x1784698", VA = "0x1784698")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC265F0", Offset = "0xC265F0")]
		private IEnumerator GetBeatList(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x178477C", Offset = "0x178477C", VA = "0x178477C")]
		public SongBPMAndOffsetDetector()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class SplineGenerator
	{
		[Serializable]
		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21FC", Offset = "0xBE21FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<BezierPoint, int> <>9__6_0;

			[Token(Token = "0x6003110")]
			[Address(RVA = "0x18F4B34", Offset = "0x18F4B34", VA = "0x18F4B34")]
			public <>c()
			{
			}

			[Token(Token = "0x6003111")]
			[Address(RVA = "0x18F4B64", Offset = "0x18F4B64", VA = "0x18F4B64")]
			internal int <RepeatSequence>b__6_0(BezierPoint n)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7D5")]
		private static readonly int UNITS_PER_BEAT;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private BezierSpline spline;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B8C")]
		private List<BezierPoint> points;

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x18F28AC", Offset = "0x18F28AC", VA = "0x18F28AC")]
		public SplineGenerator()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x18F29D4", Offset = "0x18F29D4", VA = "0x18F29D4")]
		public BezierPoint AddPoint(Vector2 xy, float beatOffset)
		{
			return null;
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x18F2CC8", Offset = "0x18F2CC8", VA = "0x18F2CC8")]
		public BezierPoint AddCopyOfPoint(BezierPoint b)
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x18F2F7C", Offset = "0x18F2F7C", VA = "0x18F2F7C")]
		public void RepeatSequence(int times, bool mirroring, bool skipFirstOnRepetition)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x18F37C8", Offset = "0x18F37C8", VA = "0x18F37C8")]
		public void MoveInXY(float xOffset, float yOffset)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x18F3A68", Offset = "0x18F3A68", VA = "0x18F3A68")]
		public void MirrorInX()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x18F3D50", Offset = "0x18F3D50", VA = "0x18F3D50")]
		public void Calculate()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x18F3DB8", Offset = "0x18F3DB8", VA = "0x18F3DB8")]
		internal SplineGenerator CreateCopy()
		{
			return null;
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x18F4180", Offset = "0x18F4180", VA = "0x18F4180")]
		internal int AddStreamActions(int whereToStart, SongLayout layout, StreamAction.Id streamId)
		{
			return default(int);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x18F4904", Offset = "0x18F4904", VA = "0x18F4904")]
		internal void Dispose()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public enum UserPosition
	{
		[Token(Token = "0x4001F08")]
		Center,
		[Token(Token = "0x4001F09")]
		Left,
		[Token(Token = "0x4001F0A")]
		Right
	}
	[Token(Token = "0x200046E")]
	public class Window
	{
		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float leftX;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float rightX;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float lowerY;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7E5")]
		internal float upperY;

		[Token(Token = "0x17000454")]
		public Vector2 RandomPosition
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x1912BA8", Offset = "0x1912BA8", VA = "0x1912BA8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1912C70", Offset = "0x1912C70", VA = "0x1912C70")]
		public Window(float x1, float x2, float y1, float y2)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x1912E28", Offset = "0x1912E28", VA = "0x1912E28")]
		public Window(Vector2 center, Vector2 delta)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x1913068", Offset = "0x1913068", VA = "0x1913068")]
		public Window(Vector2 center, Window window)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x191327C", Offset = "0x191327C", VA = "0x191327C")]
		internal Window ShrinkBy(float reduceX, float reduceY)
		{
			return null;
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1913408", Offset = "0x1913408", VA = "0x1913408")]
		internal static Window GetOverlapWindow(Window w1, Window w2)
		{
			return null;
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x191369C", Offset = "0x191369C", VA = "0x191369C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x191397C", Offset = "0x191397C", VA = "0x191397C")]
		internal static Window FromString(string s)
		{
			return null;
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1913D40", Offset = "0x1913D40", VA = "0x1913D40")]
		internal Window Clone()
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x1913E14", Offset = "0x1913E14", VA = "0x1913E14", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x1914040", Offset = "0x1914040", VA = "0x1914040", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1914134", Offset = "0x1914134", VA = "0x1914134")]
		internal Window MultiplyX(float negativeOrPositive)
		{
			return null;
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1914250", Offset = "0x1914250", VA = "0x1914250")]
		internal Window ShiftY(float shiftY)
		{
			return null;
		}
	}
	[Token(Token = "0x200046F")]
	public class GeneratorSetting
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float balls;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57B9C")]
		public float walls;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float streams;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float swings;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float jumps;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7ED")]
		public float squats;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x17A76B8", Offset = "0x17A76B8", VA = "0x17A76B8")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x17A79D4", Offset = "0x17A79D4", VA = "0x17A79D4")]
		public static GeneratorSetting FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x17A7DE8", Offset = "0x17A7DE8", VA = "0x17A7DE8")]
		public GeneratorSetting ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x17A7DB8", Offset = "0x17A7DB8", VA = "0x17A7DB8")]
		public GeneratorSetting()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class CollidableHandObject : CollidableObject
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LLManager.HandSide handSide;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BA4")]
		public HandState handState;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponDeployer weaponAnimator;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject handArmature;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isMirrored;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7F5")]
		private Controller controller;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Transform previousParent;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BAC")]
		private GameManager gameManager;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDeployed;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x1987B6C", Offset = "0x1987B6C", VA = "0x1987B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x1987D94", Offset = "0x1987D94", VA = "0x1987D94")]
		public void Attach()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x19880A0", Offset = "0x19880A0", VA = "0x19880A0")]
		internal void Detach()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x19881F0", Offset = "0x19881F0", VA = "0x19881F0")]
		internal void TriggerDeployment(bool isPressed)
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x1988378", Offset = "0x1988378", VA = "0x1988378")]
		public bool IsDeployed()
		{
			return default(bool);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x19883BC", Offset = "0x19883BC", VA = "0x19883BC", Slot = "6")]
		internal override bool IsController()
		{
			return default(bool);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x19883E0", Offset = "0x19883E0", VA = "0x19883E0", Slot = "7")]
		internal override Controller GetController()
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x1988410", Offset = "0x1988410", VA = "0x1988410", Slot = "4")]
		internal override Vector3 GetSpeed()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x19884A8", Offset = "0x19884A8", VA = "0x19884A8", Slot = "5")]
		internal override GameManager GetGameManager()
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x19884D8", Offset = "0x19884D8", VA = "0x19884D8")]
		public CollidableHandObject()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class CollidableObjectPart : MonoBehaviour
	{
		[Token(Token = "0x200078B")]
		public enum Type
		{
			[Token(Token = "0x4002FD9")]
			HAND,
			[Token(Token = "0x4002FDA")]
			WEAPON
		}

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type type;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CollidableObject parentHandObject;

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x1988508", Offset = "0x1988508", VA = "0x1988508")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1988594", Offset = "0x1988594", VA = "0x1988594")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x19885F0", Offset = "0x19885F0", VA = "0x19885F0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x198864C", Offset = "0x198864C", VA = "0x198864C")]
		public CollidableObjectPart()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class FakeHead : MonoBehaviour
	{
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CollidableHeadObject collidableHeadObject;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CollidableObjectPart collidableObjectPart;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x171A750", Offset = "0x171A750", VA = "0x171A750")]
		public void Attach(GameManager manager)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x171A8C4", Offset = "0x171A8C4", VA = "0x171A8C4")]
		public void Detach()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x171A9D0", Offset = "0x171A9D0", VA = "0x171A9D0")]
		public FakeHead()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class Intersections
	{
		[Token(Token = "0x200078C")]
		private struct Rectangle
		{
			[Token(Token = "0x4002FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 FL;

			[Token(Token = "0x4002FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD7F4")]
			public Vector3 FR;

			[Token(Token = "0x4002FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public Vector3 BL;

			[Token(Token = "0x4002FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57BA4")]
			public Vector3 BR;

			[Token(Token = "0x6003112")]
			[Address(RVA = "0x17B8C18", Offset = "0x17B8C18", VA = "0x17B8C18")]
			public Rectangle(Vector3 FL, Vector3 FR, Vector3 BL, Vector3 BR)
			{
			}
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x17B87E8", Offset = "0x17B87E8", VA = "0x17B87E8")]
		public static bool IsIntersectingOBBRectangleRectangle(Vector3 r1_FL, Vector3 r1_FR, Vector3 r1_BL, Vector3 r1_BR, Vector3 r2_FL, Vector3 r2_FR, Vector3 r2_BL, Vector3 r2_BR)
		{
			return default(bool);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x17B8D50", Offset = "0x17B8D50", VA = "0x17B8D50")]
		private static bool IsIntersectingAABB_OBB(Rectangle r1, Rectangle r2)
		{
			return default(bool);
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x17B9F48", Offset = "0x17B9F48", VA = "0x17B9F48")]
		public static bool IsIntersectingAABB(float r1_minX, float r1_maxX, float r1_minZ, float r1_maxZ, float r2_minX, float r2_maxX, float r2_minZ, float r2_maxZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x17B98D8", Offset = "0x17B98D8", VA = "0x17B98D8")]
		private static bool SATRectangleRectangle(Rectangle r1, Rectangle r2)
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x17BA3F0", Offset = "0x17BA3F0", VA = "0x17BA3F0")]
		private static bool IsOverlapping(Vector3 normal, Rectangle r1, Rectangle r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x17BA098", Offset = "0x17BA098", VA = "0x17BA098")]
		private static Vector3 GetNormal(Vector3 startPos, Vector3 endPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x17BAB48", Offset = "0x17BAB48", VA = "0x17BAB48")]
		private static float DotProduct(Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x17BAC24", Offset = "0x17BAC24", VA = "0x17BAC24")]
		public Intersections()
		{
		}
	}
	[Token(Token = "0x2000474")]
	internal class LevelLoadingHiccupPrevention : MonoBehaviour
	{
		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2238", Offset = "0xBE2238")]
		private sealed class <LoadSceneWithCustomScriptActivation>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string sceneName;

			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD80C")]
			public LevelLoadingHiccupPrevention <>4__this;

			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private AsyncOperation <asyncOp>5__2;

			[Token(Token = "0x4002FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57BBC")]
			private GameObject[] <objects>5__3;

			[Token(Token = "0x4002FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__4;

			[Token(Token = "0x170005AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003116")]
				[Address(RVA = "0x18CA35C", Offset = "0x18CA35C", VA = "0x18CA35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003118")]
				[Address(RVA = "0x18CA42C", Offset = "0x18CA42C", VA = "0x18CA42C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003113")]
			[Address(RVA = "0x18C9984", Offset = "0x18C9984", VA = "0x18C9984")]
			[DebuggerHidden]
			public <LoadSceneWithCustomScriptActivation>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6003114")]
			[Address(RVA = "0x18C9BC0", Offset = "0x18C9BC0", VA = "0x18C9BC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003115")]
			[Address(RVA = "0x18C9BD4", Offset = "0x18C9BD4", VA = "0x18C9BD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003117")]
			[Address(RVA = "0x18CA38C", Offset = "0x18CA38C", VA = "0x18CA38C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2274", Offset = "0xBE2274")]
		private sealed class <LoadSceneWithLowerBackgroundPriority>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD814")]
			public string sceneName;

			[Token(Token = "0x170005B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600311C")]
				[Address(RVA = "0x18CA680", Offset = "0x18CA680", VA = "0x18CA680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600311E")]
				[Address(RVA = "0x18CA750", Offset = "0x18CA750", VA = "0x18CA750", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003119")]
			[Address(RVA = "0x18C9B34", Offset = "0x18C9B34", VA = "0x18C9B34")]
			[DebuggerHidden]
			public <LoadSceneWithLowerBackgroundPriority>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600311A")]
			[Address(RVA = "0x18CA45C", Offset = "0x18CA45C", VA = "0x18CA45C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600311B")]
			[Address(RVA = "0x18CA470", Offset = "0x18CA470", VA = "0x18CA470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600311D")]
			[Address(RVA = "0x18CA6B0", Offset = "0x18CA6B0", VA = "0x18CA6B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x18C98A0", Offset = "0x18C98A0", VA = "0x18C98A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC266A0", Offset = "0xC266A0")]
		private IEnumerator LoadSceneWithCustomScriptActivation(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x18C99CC", Offset = "0x18C99CC", VA = "0x18C99CC")]
		private void LoadingScreenUpdate()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x18C9A6C", Offset = "0x18C9A6C", VA = "0x18C9A6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26750", Offset = "0xC26750")]
		private IEnumerator LoadSceneWithLowerBackgroundPriority(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x18C9B7C", Offset = "0x18C9B7C", VA = "0x18C9B7C")]
		private void someMoreIdeas()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x18C9B90", Offset = "0x18C9B90", VA = "0x18C9B90")]
		public LevelLoadingHiccupPrevention()
		{
		}
	}
	[Token(Token = "0x2000475")]
	internal class LoadCustomSkyBox
	{
		[Token(Token = "0x6002298")]
		[Address(RVA = "0x18E4F10", Offset = "0x18E4F10", VA = "0x18E4F10")]
		public LoadCustomSkyBox()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class AreaBasedElement : MovingElement
	{
		[Token(Token = "0x200078F")]
		public class CurrentCollisionInformation
		{
			[Token(Token = "0x4002FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD81C")]
			internal bool leftSide;

			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal bool rightSide;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57BCC")]
			internal bool head;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool leftIsExtendedShield;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool rightIsExtendedShield;

			[Token(Token = "0x600311F")]
			[Address(RVA = "0x195E348", Offset = "0x195E348", VA = "0x195E348")]
			public CurrentCollisionInformation()
			{
			}
		}

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float startBeat;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BC4")]
		private float endBeat;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CollidableObjectPart potPart;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CollidableObject potCon;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CurrentCollisionInformation info;

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x195D67C", Offset = "0x195D67C", VA = "0x195D67C")]
		internal void Setup(float startBeat, float lastBeat)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x195D6CC", Offset = "0x195D6CC", VA = "0x195D6CC")]
		internal float GetEndBeat()
		{
			return default(float);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x195D6FC", Offset = "0x195D6FC", VA = "0x195D6FC")]
		internal float GetStartBeat()
		{
			return default(float);
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x195D72C", Offset = "0x195D72C", VA = "0x195D72C")]
		internal bool HasElementInside()
		{
			return default(bool);
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x195D818", Offset = "0x195D818", VA = "0x195D818")]
		internal CurrentCollisionInformation GetCollisionInformation()
		{
			return null;
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x195D848", Offset = "0x195D848", VA = "0x195D848")]
		internal bool IsLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x195D8A0", Offset = "0x195D8A0", VA = "0x195D8A0")]
		internal bool IsRight()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x195D8F8", Offset = "0x195D8F8", VA = "0x195D8F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x195D9D4", Offset = "0x195D9D4", VA = "0x195D9D4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x195E2A0", Offset = "0x195E2A0", VA = "0x195E2A0")]
		public AreaBasedElement()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class BallObstacle : MovingElement, DestroyableElement
	{
		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22B0", Offset = "0xBE22B0")]
		private sealed class <DestroyTheWholeThing>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57BDC")]
			private object <>2__current;

			[Token(Token = "0x4002FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float currentDebrisDuration;

			[Token(Token = "0x4002FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BallObstacle <>4__this;

			[Token(Token = "0x170005B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003123")]
				[Address(RVA = "0x1964EFC", Offset = "0x1964EFC", VA = "0x1964EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003125")]
				[Address(RVA = "0x1964FCC", Offset = "0x1964FCC", VA = "0x1964FCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003120")]
			[Address(RVA = "0x1964BB4", Offset = "0x1964BB4", VA = "0x1964BB4")]
			[DebuggerHidden]
			public <DestroyTheWholeThing>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003121")]
			[Address(RVA = "0x1964C64", Offset = "0x1964C64", VA = "0x1964C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003122")]
			[Address(RVA = "0x1964C78", Offset = "0x1964C78", VA = "0x1964C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003124")]
			[Address(RVA = "0x1964F2C", Offset = "0x1964F2C", VA = "0x1964F2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0904C", Offset = "0xC0904C")]
		[SerializeField]
		private GameObject[] destroyedParts;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD824")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC090CC", Offset = "0xC090CC")]
		[SerializeField]
		private ParticleSystem[] particlesInChildren;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0914C", Offset = "0xC0914C")]
		[SerializeField]
		private MeshRenderer[] rendererInRoot;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BD4")]
		[SerializeField]
		private SphereCollider sphereColliderInRoot;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Rigidbody rigidbodyInRoot;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float beatNo;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasBeenHit;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD82C")]
		private Tween flyingTween;

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x19641BC", Offset = "0x19641BC", VA = "0x19641BC")]
		public void Setup(GameManager g, Sequence tween, Vector3 start, Vector3 mid, Vector3 end, float flyTime, Vector3? rotation)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1964314", Offset = "0x1964314", VA = "0x1964314", Slot = "5")]
		public bool HasBeenHit()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1964358", Offset = "0x1964358", VA = "0x1964358", Slot = "6")]
		public void SetHit()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x1964388", Offset = "0x1964388", VA = "0x1964388", Slot = "12")]
		public Vector3 ReturnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x19643E8", Offset = "0x19643E8", VA = "0x19643E8", Slot = "11")]
		public void DeactivateSwingIndicator()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x19643FC", Offset = "0x19643FC", VA = "0x19643FC", Slot = "8")]
		public void BounceOff(float objectVelocity)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1964510", Offset = "0x1964510", VA = "0x1964510", Slot = "9")]
		public void DestroyWithEffect(bool completeDestruction, CollidableObject co, float currentDebrisDuration, Vector3 hitSpeed)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x1964B5C", Offset = "0x1964B5C", VA = "0x1964B5C", Slot = "10")]
		public void DestroyGameObject(float currentDebrisDuration)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x1964A78", Offset = "0x1964A78", VA = "0x1964A78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC26800", Offset = "0xC26800")]
		private IEnumerator DestroyTheWholeThing(float currentDebrisDuration)
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1964BFC", Offset = "0x1964BFC", VA = "0x1964BFC", Slot = "13")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x19649D8", Offset = "0x19649D8", VA = "0x19649D8", Slot = "7")]
		public void CancelMovement()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1964C34", Offset = "0x1964C34", VA = "0x1964C34")]
		public BallObstacle()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class Hittable : MovingElement, DestroyableElement
	{
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22EC", Offset = "0xBE22EC")]
		private sealed class <DestroyTheWholeThing>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD84C")]
			private int <>1__state;

			[Token(Token = "0x4002FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57BFC")]
			public float currentDebrisDuration;

			[Token(Token = "0x4002FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Hittable <>4__this;

			[Token(Token = "0x170005B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003129")]
				[Address(RVA = "0x17B59FC", Offset = "0x17B59FC", VA = "0x17B59FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600312B")]
				[Address(RVA = "0x17B5ACC", Offset = "0x17B5ACC", VA = "0x17B5ACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003126")]
			[Address(RVA = "0x17B5590", Offset = "0x17B5590", VA = "0x17B5590")]
			[DebuggerHidden]
			public <DestroyTheWholeThing>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6003127")]
			[Address(RVA = "0x17B5764", Offset = "0x17B5764", VA = "0x17B5764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003128")]
			[Address(RVA = "0x17B5778", Offset = "0x17B5778", VA = "0x17B5778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600312A")]
			[Address(RVA = "0x17B5A2C", Offset = "0x17B5A2C", VA = "0x17B5A2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC09244", Offset = "0xC09244")]
		[SerializeField]
		private ParticleSystem[] particlesInChildren;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD834")]
		[SerializeField]
		private bool lingeringParticlesOnKill;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC09300", Offset = "0xC09300")]
		[SerializeField]
		private MeshRenderer[] rendererInRoot;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BE4")]
		[SerializeField]
		private SphereCollider sphereColliderInRoot;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Rigidbody rigidbodyInRoot;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC093F8", Offset = "0xC093F8")]
		[SerializeField]
		private bool normalBallLowPoly;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject smallFracture;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD83C")]
		[SerializeField]
		private GameObject largeFracture;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC094F0", Offset = "0xC094F0")]
		[SerializeField]
		private bool powerBallLowPoly;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BEC")]
		[SerializeField]
		private GameObject semiFractures;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject fullFractures;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasBeenHit;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller rightController;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD844")]
		private Tween flyingTween;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Controller leftController;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57BF4")]
		private bool isSetup;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool missedReported;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject swingIndicator;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initialColliderSize;

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x17B3E24", Offset = "0x17B3E24", VA = "0x17B3E24")]
		public void Setup(GameManager g, Controller left, Controller right, Tween flyingTween, GameObject _swingIndicator, Vector3 start, Vector3 mid, Vector3 end, float flyTime, Vector3? rotation)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x17B4024", Offset = "0x17B4024", VA = "0x17B4024")]
		public void ScaleColliderUpDuringFlight(float scaling)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x17B40B0", Offset = "0x17B40B0", VA = "0x17B40B0")]
		private void FitColliderToVisuals()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x17B4108", Offset = "0x17B4108", VA = "0x17B4108", Slot = "5")]
		public bool HasBeenHit()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x17B414C", Offset = "0x17B414C", VA = "0x17B414C", Slot = "6")]
		public void SetHit()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x17B417C", Offset = "0x17B417C", VA = "0x17B417C", Slot = "7")]
		public void CancelMovement()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x17B421C", Offset = "0x17B421C", VA = "0x17B421C", Slot = "12")]
		public Vector3 ReturnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x17B427C", Offset = "0x17B427C", VA = "0x17B427C", Slot = "11")]
		public void DeactivateSwingIndicator()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x17B43C4", Offset = "0x17B43C4", VA = "0x17B43C4", Slot = "8")]
		public void BounceOff(float objectVelocity)
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x17B44D8", Offset = "0x17B44D8", VA = "0x17B44D8", Slot = "9")]
		public void DestroyWithEffect(bool completeDestruction, CollidableObject co, float currentDebrisDuration, Vector3 hitSpeed)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x17B5074", Offset = "0x17B5074", VA = "0x17B5074")]
		private void BlastAway(Rigidbody rb, CollidableObject co, bool completeDestruction)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x17B5538", Offset = "0x17B5538", VA = "0x17B5538", Slot = "10")]
		public void DestroyGameObject(float currentDebrisDuration)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x17B5454", Offset = "0x17B5454", VA = "0x17B5454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC268B0", Offset = "0xC268B0")]
		internal IEnumerator DestroyTheWholeThing(float currentDebrisDuration)
		{
			return null;
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x17B55D8", Offset = "0x17B55D8", VA = "0x17B55D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x17B56E8", Offset = "0x17B56E8", VA = "0x17B56E8", Slot = "13")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x17B5720", Offset = "0x17B5720", VA = "0x17B5720")]
		public Hittable()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public abstract class MovingElement : MonoBehaviour
	{
		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GameManager gameManager;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 startPoint;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD854")]
		internal Vector3 midPoint;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Vector3 endPoint;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D734")]
		internal float flyTime;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3? rotation;

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1808280", Offset = "0x1808280", VA = "0x1808280", Slot = "4")]
		public virtual void Setup(GameManager g, Vector3 start, Vector3 mid, Vector3 end, float flyTime, Vector3? rotation)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x18083C8", Offset = "0x18083C8", VA = "0x18083C8")]
		protected MovingElement()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class NormalBall : Hittable
	{
		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x18083F8", Offset = "0x18083F8", VA = "0x18083F8")]
		public NormalBall()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class PowerBall : Hittable
	{
		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x176CD90", Offset = "0x176CD90", VA = "0x176CD90")]
		public PowerBall()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public enum LastContact
	{
		[Token(Token = "0x4001F49")]
		Left,
		[Token(Token = "0x4001F4A")]
		Right,
		[Token(Token = "0x4001F4B")]
		Nothing
	}
	[Token(Token = "0x200047D")]
	public class Stream : AreaBasedElement
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C04")]
		public LastContact lastContact;

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x18F8390", Offset = "0x18F8390", VA = "0x18F8390")]
		public StreamElement GetActualStreamElement()
		{
			return null;
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x18F8414", Offset = "0x18F8414", VA = "0x18F8414")]
		public Stream()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class StreamCollectionSparks : MonoBehaviour
	{
		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LLManager.HandSide handSide;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameConfiguration.StreamFeedback feedbackType;

		[Token(Token = "0x4001F4F")]
		private const float MAX_TIME_DELTA = 0.2f;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD863")]
		private float lastContactTime;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ParticleSystem particles;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C0C")]
		private float time;

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x18F8C1C", Offset = "0x18F8C1C", VA = "0x18F8C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x18F8CA8", Offset = "0x18F8CA8", VA = "0x18F8CA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x18F8E30", Offset = "0x18F8E30", VA = "0x18F8E30")]
		public void SetContactTime(float contactTime)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x18F8E68", Offset = "0x18F8E68", VA = "0x18F8E68")]
		public LLManager.HandSide GetHandSide()
		{
			return default(LLManager.HandSide);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x18F8E98", Offset = "0x18F8E98", VA = "0x18F8E98")]
		public GameConfiguration.StreamFeedback GetFeedbackType()
		{
			return default(GameConfiguration.StreamFeedback);
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x18F8EC8", Offset = "0x18F8EC8", VA = "0x18F8EC8")]
		public StreamCollectionSparks()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class StreamElement : MovingElement
	{
		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject actualStreamVisual;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject colliderGameObject;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera cam;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD86B")]
		private Renderer actualStreamVisualRenderer;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 streamPos;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C14")]
		private float dieAtZ;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDestroyed;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDeflected;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isSongEditor;

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x18F92F8", Offset = "0x18F92F8", VA = "0x18F92F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x18F9378", Offset = "0x18F9378", VA = "0x18F9378")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x18F938C", Offset = "0x18F938C", VA = "0x18F938C")]
		private void MyPreCull()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x18F95B0", Offset = "0x18F95B0", VA = "0x18F95B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x18F9650", Offset = "0x18F9650", VA = "0x18F9650")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x18F9804", Offset = "0x18F9804", VA = "0x18F9804")]
		public void SetDieAtZ(float z, GameManager gameManager)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x18F9854", Offset = "0x18F9854", VA = "0x18F9854")]
		public bool DestroyWithEffect()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x18F9940", Offset = "0x18F9940", VA = "0x18F9940")]
		public void Deflect(CollidableObject co)
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x18F9CC4", Offset = "0x18F9CC4", VA = "0x18F9CC4")]
		public StreamElement()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x18F9D14", Offset = "0x18F9D14", VA = "0x18F9D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26960", Offset = "0xC26960")]
		private void <Deflect>b__16_0()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class StreamParticleGenerator : MonoBehaviour
	{
		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD873")]
		[SerializeField]
		private float stepSize;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int particleEmitCount;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C1C")]
		private BezierSpline bezier;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float appearancePoint;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float destructionPoint;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float progress;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD87B")]
		private bool isInitialized;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isGenerationFinished;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C24")]
		private StreamElement streamElementPrefab;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameManager gameManager;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameObject> particles;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject prevParticle;

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x18FA0C0", Offset = "0x18FA0C0", VA = "0x18FA0C0")]
		public void Initialize(BezierSpline bezier, StreamElement streamElement, float appearancePoint, float destructionPoint, GameManager gameManager)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x18FA1D4", Offset = "0x18FA1D4", VA = "0x18FA1D4")]
		public void Update()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x18FA234", Offset = "0x18FA234", VA = "0x18FA234")]
		private void GenerateParticles(bool generateInstantly)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x18FAC48", Offset = "0x18FAC48", VA = "0x18FAC48")]
		public void RegenerateParticles()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x18FACD0", Offset = "0x18FACD0", VA = "0x18FACD0")]
		public void DespawnAllParticles()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x18FAE84", Offset = "0x18FAE84", VA = "0x18FAE84")]
		public StreamParticleGenerator()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class WallObstacle : AreaBasedElement
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD883")]
		[SerializeField]
		private int wallType;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject frontWallElement;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C2C")]
		[SerializeField]
		private GameObject sideWallElement;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool elementInsideLastFrame;

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x190D834", Offset = "0x190D834", VA = "0x190D834")]
		internal void ScaleWall(Vector2 xyScale, float zScale)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x190DA44", Offset = "0x190DA44", VA = "0x190DA44")]
		internal int GetWallType()
		{
			return default(int);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x190DA74", Offset = "0x190DA74", VA = "0x190DA74")]
		public bool WasElementInsideLastFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x190DAB8", Offset = "0x190DAB8", VA = "0x190DAB8")]
		public void SetElementInsideLastFrame(bool isInside)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x190DB04", Offset = "0x190DB04", VA = "0x190DB04")]
		public WallObstacle()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class OverallStatistic
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool trackCalories;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float caloriesToday;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD88B")]
		public float caloriesSinceReset;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float lifetimeCalories;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C34")]
		public float caloriesSession;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool trackHeartRate;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int totalHeartRate;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int totalHeartRateSeconds;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD893")]
		public int maxHeartRate;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float playTimeToday;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C3C")]
		public float playTimeSinceReset;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float playTimeTotal;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float playTimeSession;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int squatsSession;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD89B")]
		public int squatsToday;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int squatsSinceReset;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C44")]
		public int squatsTotal;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int totalScore;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int bestCombo;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int newHighscores;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8A3")]
		public int flawlessVictories;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int balls;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C4C")]
		public int ballsHit;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ballsPerfectlyHit;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int streamElements;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int streamElementsCatched;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8AB")]
		public int collisionsPossible;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int collisionsAvoided;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D73C")]
		public float accuracy;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float strength;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxHitSpeed;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float averageHitSpeed;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8B2")]
		public int hits;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameConfiguration gameConfig;

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x180FE24", Offset = "0x180FE24", VA = "0x180FE24")]
		public void AnalyseAccuracy()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x180FF58", Offset = "0x180FF58", VA = "0x180FF58")]
		public void AnalyseStrength()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x180FFD0", Offset = "0x180FFD0", VA = "0x180FFD0")]
		public OverallStatistic()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class FlyPath
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C54")]
		private Vector3 start;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 middle;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 player;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 end;

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x171AD14", Offset = "0x171AD14", VA = "0x171AD14")]
		public FlyPath(Vector3 start, Vector3 middle, Vector3 player, Vector3 end)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x171AE58", Offset = "0x171AE58", VA = "0x171AE58")]
		public Vector3[] GetFromStartToPlayer()
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x171AFB4", Offset = "0x171AFB4", VA = "0x171AFB4")]
		public Vector3[] GetFromPlayerToEnd()
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x171B0C0", Offset = "0x171B0C0", VA = "0x171B0C0")]
		internal Vector3[] GetFromPlayerToEndObstacle()
		{
			return null;
		}
	}
	[Token(Token = "0x2000484")]
	public class FlyPaths : MonoBehaviour
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8BA")]
		public static readonly Vector3 APPEARANCE_POINT;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly Vector3 DISAPPEARANCE_POINT;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C5C")]
		private float zDisplacementToPlayer;

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x171B22C", Offset = "0x171B22C", VA = "0x171B22C")]
		public FlyPath GetPathForEndPoint(Vector2 endpoint, float zLagOffset, bool curved, Vector2 scaling)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x171BBD8", Offset = "0x171BBD8", VA = "0x171BBD8")]
		public FlyPaths()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class Playlist
	{
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0978C", Offset = "0xC0978C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC097C8", Offset = "0xC097C8")]
		private bool <IsAutoGenerated>k__BackingField;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09804", Offset = "0xC09804")]
		private bool <IsShuffle>k__BackingField;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09840", Offset = "0xC09840")]
		private bool <IsRepeat>k__BackingField;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0987C", Offset = "0xC0987C")]
		private bool <IsEndurance>k__BackingField;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC098B8", Offset = "0xC098B8")]
		private float <MusicDurationInSeconds>k__BackingField;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<PlaylistEntry> entries;

		[Token(Token = "0x17000455")]
		public string Name
		{
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x1759710", Offset = "0x1759710", VA = "0x1759710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2699C", Offset = "0xC2699C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x1759740", Offset = "0x1759740", VA = "0x1759740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC269D8", Offset = "0xC269D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public bool IsAutoGenerated
		{
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x1759778", Offset = "0x1759778", VA = "0x1759778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26A14", Offset = "0xC26A14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x17597BC", Offset = "0x17597BC", VA = "0x17597BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26A50", Offset = "0xC26A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public bool IsShuffle
		{
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x1759808", Offset = "0x1759808", VA = "0x1759808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26A8C", Offset = "0xC26A8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x175984C", Offset = "0x175984C", VA = "0x175984C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26AC8", Offset = "0xC26AC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public bool IsRepeat
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x1759898", Offset = "0x1759898", VA = "0x1759898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26B04", Offset = "0xC26B04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x17598DC", Offset = "0x17598DC", VA = "0x17598DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26B40", Offset = "0xC26B40")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public bool IsEndurance
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x1759928", Offset = "0x1759928", VA = "0x1759928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26B7C", Offset = "0xC26B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x175996C", Offset = "0x175996C", VA = "0x175996C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26BB8", Offset = "0xC26BB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public float MusicDurationInSeconds
		{
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x17599B8", Offset = "0x17599B8", VA = "0x17599B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26BF4", Offset = "0xC26BF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x17599E8", Offset = "0x17599E8", VA = "0x17599E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26C30", Offset = "0xC26C30")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public int Count
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x1759A20", Offset = "0x1759A20", VA = "0x1759A20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x1759AB8", Offset = "0x1759AB8", VA = "0x1759AB8")]
		public PlaylistEntry GetEntry(int index)
		{
			return null;
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1759B60", Offset = "0x1759B60", VA = "0x1759B60")]
		public void AddEntry(PlaylistEntry entry)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x1759C00", Offset = "0x1759C00", VA = "0x1759C00")]
		public void AddEntry(Song song, Song.Difficulty difficulty, int position)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x175A0A8", Offset = "0x175A0A8", VA = "0x175A0A8")]
		public void AddEntry(string songName, string fullAudioPath, float musicLength, float layoutLength, Song.Difficulty difficulty, int position)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x175A558", Offset = "0x175A558", VA = "0x175A558")]
		public void RemoveEntry(int index)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x175A6E0", Offset = "0x175A6E0", VA = "0x175A6E0")]
		public void MoveEntry(int index, int direction)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x175A970", Offset = "0x175A970", VA = "0x175A970")]
		public static Playlist LoadFromJSON(JSONObject serializedPlaylist)
		{
			return null;
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x175B660", Offset = "0x175B660", VA = "0x175B660")]
		internal Playlist Clone()
		{
			return null;
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x175BC40", Offset = "0x175BC40", VA = "0x175BC40")]
		internal JSONObject SaveToJSON()
		{
			return null;
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x175C580", Offset = "0x175C580", VA = "0x175C580")]
		internal float GetLayoutBasedDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x175C944", Offset = "0x175C944", VA = "0x175C944")]
		internal string GetDurationFormatted()
		{
			return null;
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x175CC84", Offset = "0x175CC84", VA = "0x175CC84")]
		internal bool HasInvalidFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x175D08C", Offset = "0x175D08C", VA = "0x175D08C")]
		internal void RemoveInvalidEntries()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x175B13C", Offset = "0x175B13C", VA = "0x175B13C")]
		public Playlist()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class PlaylistAdjuster : MonoBehaviour
	{
		[Token(Token = "0x2000792")]
		private enum Mode
		{
			[Token(Token = "0x4002FF7")]
			ALL_PLAYLISTS,
			[Token(Token = "0x4002FF8")]
			SINGLE_PLAYLIST
		}

		[Token(Token = "0x2000793")]
		public delegate void OnButtonHover();

		[Serializable]
		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2328", Offset = "0xBE2328")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57C84")]
			public static Action <>9__40_0;

			[Token(Token = "0x6003131")]
			[Address(RVA = "0x1760EA0", Offset = "0x1760EA0", VA = "0x1760EA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003132")]
			[Address(RVA = "0x1760ED0", Offset = "0x1760ED0", VA = "0x1760ED0")]
			internal void <OpenProgressDialog>b__40_0()
			{
			}
		}

		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2364", Offset = "0xBE2364")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4002FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlaylistAdjuster <>4__this;

			[Token(Token = "0x4002FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<int, bool> callback;

			[Token(Token = "0x6003133")]
			[Address(RVA = "0x1760DA0", Offset = "0x1760DA0", VA = "0x1760DA0")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6003134")]
			[Address(RVA = "0x1760EE4", Offset = "0x1760EE4", VA = "0x1760EE4")]
			internal void <ShowBoundaryWarning>b__0(int result, bool remember)
			{
			}
		}

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private PlaylistListManager playlistListManager;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C6C")]
		[SerializeField]
		private GameObject listOfPlaylists;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private PlaylistEntryManager playlistEntryManager;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject playlistContent;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton toPlaylistsButton;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8D2")]
		[SerializeField]
		private TextMeshProUGUI playlistNameText;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject playlistSpecificOptions;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C74")]
		[SerializeField]
		private GameObject playlistOptions;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ProgressDialog progressDialog;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private StringEditDialog stringEditDialog;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8DA")]
		private Mode mode;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private FrameworkManager fm;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C7C")]
		private PlaylistManager playlistManager;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Playlist currentPlaylist;

		[Token(Token = "0x14000036")]
		public event Action startPressed
		{
			[Token(Token = "0x6002305")]
			[Address(RVA = "0x175D230", Offset = "0x175D230", VA = "0x175D230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26C6C", Offset = "0xC26C6C")]
			add
			{
			}
			[Token(Token = "0x6002306")]
			[Address(RVA = "0x175D37C", Offset = "0x175D37C", VA = "0x175D37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26CA8", Offset = "0xC26CA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<PlaylistEntry> entrySelected
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0x175D4C8", Offset = "0x175D4C8", VA = "0x175D4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26CE4", Offset = "0xC26CE4")]
			add
			{
			}
			[Token(Token = "0x6002308")]
			[Address(RVA = "0x175D614", Offset = "0x175D614", VA = "0x175D614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26D20", Offset = "0xC26D20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event OnButtonHover buttonHovered
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x175D760", Offset = "0x175D760", VA = "0x175D760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26D5C", Offset = "0xC26D5C")]
			add
			{
			}
			[Token(Token = "0x600230A")]
			[Address(RVA = "0x175D8AC", Offset = "0x175D8AC", VA = "0x175D8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26D98", Offset = "0xC26D98")]
			remove
			{
			}
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x175D9F8", Offset = "0x175D9F8", VA = "0x175D9F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x175E790", Offset = "0x175E790", VA = "0x175E790")]
		private void PlaylistEntryManager_entrySelected(PlaylistEntry entry)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x175E87C", Offset = "0x175E87C", VA = "0x175E87C")]
		private void PlaylistEntryManager_PlaylistRenamed(Playlist playlist)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x175EC74", Offset = "0x175EC74", VA = "0x175EC74")]
		private void PlaylistEntryManager_playlistDeleted(Playlist playlist)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x175EF9C", Offset = "0x175EF9C", VA = "0x175EF9C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x175EE60", Offset = "0x175EE60", VA = "0x175EE60")]
		private void ToPlaylistsButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x175F370", Offset = "0x175F370", VA = "0x175F370")]
		private void PlaylistEntryManager_playlistChanged(Playlist playlist)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x175F8BC", Offset = "0x175F8BC", VA = "0x175F8BC")]
		private void PlaylistListManager_playlistsChanged()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x175F904", Offset = "0x175F904", VA = "0x175F904")]
		public void PlaylistListManager_playlistSelected(Playlist playlist, int index)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x175FDA4", Offset = "0x175FDA4", VA = "0x175FDA4")]
		public void SetPlaylist(Playlist playlist)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x175FDEC", Offset = "0x175FDEC", VA = "0x175FDEC")]
		public bool CanAddSong()
		{
			return default(bool);
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x175FE58", Offset = "0x175FE58", VA = "0x175FE58")]
		public void AddSongToPlaylist(Song song, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x175F1A4", Offset = "0x175F1A4", VA = "0x175F1A4")]
		private void ToggleMode(Mode mode)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x17601B8", Offset = "0x17601B8", VA = "0x17601B8")]
		private void PlaylistEntryManager_startPressed(Playlist list)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x17602A8", Offset = "0x17602A8", VA = "0x17602A8")]
		public void OpenProgressDialog()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x17608C8", Offset = "0x17608C8", VA = "0x17608C8")]
		public void HideProgressDialog()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1760A7C", Offset = "0x1760A7C", VA = "0x1760A7C")]
		public void HideInitially()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1760B60", Offset = "0x1760B60", VA = "0x1760B60")]
		public void GoUp()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1760B98", Offset = "0x1760B98", VA = "0x1760B98")]
		public void ShowBoundaryWarning(string text, string dontShowAgain, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1760DD0", Offset = "0x1760DD0", VA = "0x1760DD0")]
		public PlaylistAdjuster()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class PlaylistEntry
	{
		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09C3C", Offset = "0xC09C3C")]
		private string <SongName>k__BackingField;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09C78", Offset = "0xC09C78")]
		private string <SongPath>k__BackingField;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09CB4", Offset = "0xC09CB4")]
		private float <SongMusicLength>k__BackingField;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09CF0", Offset = "0xC09CF0")]
		private float <SongLayoutLength>k__BackingField;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09D2C", Offset = "0xC09D2C")]
		private Song.Difficulty <Difficulty>k__BackingField;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09D68", Offset = "0xC09D68")]
		private bool <IsFileValid>k__BackingField;

		[Token(Token = "0x1700045C")]
		public string SongName
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0x1762350", Offset = "0x1762350", VA = "0x1762350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26DD4", Offset = "0xC26DD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x1762380", Offset = "0x1762380", VA = "0x1762380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26E10", Offset = "0xC26E10")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public string SongPath
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x17623B8", Offset = "0x17623B8", VA = "0x17623B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26E4C", Offset = "0xC26E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x17623E8", Offset = "0x17623E8", VA = "0x17623E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26E88", Offset = "0xC26E88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public float SongMusicLength
		{
			[Token(Token = "0x6002323")]
			[Address(RVA = "0x1762420", Offset = "0x1762420", VA = "0x1762420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26EC4", Offset = "0xC26EC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002324")]
			[Address(RVA = "0x1762450", Offset = "0x1762450", VA = "0x1762450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26F00", Offset = "0xC26F00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public float SongLayoutLength
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x1762488", Offset = "0x1762488", VA = "0x1762488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26F3C", Offset = "0xC26F3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002326")]
			[Address(RVA = "0x17624B8", Offset = "0x17624B8", VA = "0x17624B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26F78", Offset = "0xC26F78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public Song.Difficulty Difficulty
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x17624F0", Offset = "0x17624F0", VA = "0x17624F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26FB4", Offset = "0xC26FB4")]
			get
			{
				return default(Song.Difficulty);
			}
			[Token(Token = "0x6002328")]
			[Address(RVA = "0x1762520", Offset = "0x1762520", VA = "0x1762520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC26FF0", Offset = "0xC26FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public bool IsFileValid
		{
			[Token(Token = "0x6002329")]
			[Address(RVA = "0x1762558", Offset = "0x1762558", VA = "0x1762558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2702C", Offset = "0xC2702C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600232A")]
			[Address(RVA = "0x176259C", Offset = "0x176259C", VA = "0x176259C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27068", Offset = "0xC27068")]
			private set
			{
			}
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x175A2C4", Offset = "0x175A2C4", VA = "0x175A2C4")]
		public PlaylistEntry(string name, string path, float musicLength, float layoutLength, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x175B208", Offset = "0x175B208", VA = "0x175B208")]
		internal static PlaylistEntry LoadFromJSON(JSONObject serializedPlaylistEntry)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x175C258", Offset = "0x175C258", VA = "0x175C258")]
		internal JSONObject SaveToJSON()
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x17625E8", Offset = "0x17625E8", VA = "0x17625E8")]
		internal void UpdateLayoutLength(float newLength)
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class PlaylistManager : MonoBehaviour
	{
		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE23A0", Offset = "0xBE23A0")]
		private sealed class <UnitTest>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57C94")]
			private int <>1__state;

			[Token(Token = "0x4002FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlaylistManager <>4__this;

			[Token(Token = "0x4003000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Song <song>5__2;

			[Token(Token = "0x170005B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003138")]
				[Address(RVA = "0x17685F8", Offset = "0x17685F8", VA = "0x17685F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600313A")]
				[Address(RVA = "0x17686C8", Offset = "0x17686C8", VA = "0x17686C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003135")]
			[Address(RVA = "0x176708C", Offset = "0x176708C", VA = "0x176708C")]
			[DebuggerHidden]
			public <UnitTest>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003136")]
			[Address(RVA = "0x1767AF4", Offset = "0x1767AF4", VA = "0x1767AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003137")]
			[Address(RVA = "0x1767B08", Offset = "0x1767B08", VA = "0x1767B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003139")]
			[Address(RVA = "0x1768628", Offset = "0x1768628", VA = "0x1768628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09DA4", Offset = "0xC09DA4")]
		private List<Playlist> <Playlists>k__BackingField;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8F2")]
		internal static readonly string PLAYLIST_FILE_NAME;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string playlistFile;

		[Token(Token = "0x17000462")]
		public List<Playlist> Playlists
		{
			[Token(Token = "0x600232F")]
			[Address(RVA = "0x1766A54", Offset = "0x1766A54", VA = "0x1766A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC270A4", Offset = "0xC270A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002330")]
			[Address(RVA = "0x1766A84", Offset = "0x1766A84", VA = "0x1766A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC270E0", Offset = "0xC270E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x1766ABC", Offset = "0x1766ABC", VA = "0x1766ABC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1766CE4", Offset = "0x1766CE4", VA = "0x1766CE4")]
		private void Load()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x175F3DC", Offset = "0x175F3DC", VA = "0x175F3DC")]
		public void Save()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1766FD0", Offset = "0x1766FD0", VA = "0x1766FD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2711C", Offset = "0xC2711C")]
		private IEnumerator UnitTest()
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x17670D4", Offset = "0x17670D4", VA = "0x17670D4")]
		private void SimpleAssert(object actual, object expected, string message)
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1767398", Offset = "0x1767398", VA = "0x1767398")]
		internal void UpdateSongLayoutLength(Song song, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1767A38", Offset = "0x1767A38", VA = "0x1767A38")]
		public PlaylistManager()
		{
		}
	}
	[Token(Token = "0x2000489")]
	internal class PlaylistPlaybackManager
	{
		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09DE0", Offset = "0xC09DE0")]
		private int <CurrentIndex>k__BackingField;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC09E1C", Offset = "0xC09E1C")]
		private readonly Playlist <Playlist>k__BackingField;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57C9C")]
		private bool isCancelled;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> indexSequence;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> nextIndexSequence;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly System.Random rand;

		[Token(Token = "0x17000463")]
		public int CurrentIndex
		{
			[Token(Token = "0x6002339")]
			[Address(RVA = "0x17686F8", Offset = "0x17686F8", VA = "0x17686F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC271CC", Offset = "0xC271CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600233A")]
			[Address(RVA = "0x1768728", Offset = "0x1768728", VA = "0x1768728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27208", Offset = "0xC27208")]
			private set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public Playlist Playlist
		{
			[Token(Token = "0x600233B")]
			[Address(RVA = "0x1768760", Offset = "0x1768760", VA = "0x1768760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27244", Offset = "0xC27244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1768790", Offset = "0x1768790", VA = "0x1768790")]
		private PlaylistPlaybackManager()
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x17688A8", Offset = "0x17688A8", VA = "0x17688A8")]
		public PlaylistPlaybackManager(Playlist playlist)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1768C04", Offset = "0x1768C04", VA = "0x1768C04")]
		public void AdvanceToNextEntry()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x176909C", Offset = "0x176909C", VA = "0x176909C")]
		public bool IsAtEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x17691C4", Offset = "0x17691C4", VA = "0x17691C4")]
		public void CancelPlaylist()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x17689E4", Offset = "0x17689E4", VA = "0x17689E4")]
		internal void Initialize()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1768E5C", Offset = "0x1768E5C", VA = "0x1768E5C")]
		private List<int> CreateConstrainedIndexSequence(int count, int indexNotToBeFirst)
		{
			return null;
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x17691F4", Offset = "0x17691F4", VA = "0x17691F4")]
		private List<int> CreateRandomIndexSequence(int count)
		{
			return null;
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1769484", Offset = "0x1769484", VA = "0x1769484")]
		public PlaylistEntry GetCurrentEntry()
		{
			return null;
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x1769564", Offset = "0x1769564", VA = "0x1769564")]
		public PlaylistEntry GetNextEntry()
		{
			return null;
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x17697A4", Offset = "0x17697A4", VA = "0x17697A4")]
		public bool HasNextEntry()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200048A")]
	public class PlaylistSongItemView : ListItemView
	{
		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD902")]
		[SerializeField]
		private TextMeshProUGUI indexAndSongTitle;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI difficulty;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D744")]
		[SerializeField]
		private TextMeshProUGUI rating;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI calories;

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x1761EC8", Offset = "0x1761EC8", VA = "0x1761EC8")]
		public void SetIndexAndSongTitle(string text)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1761F20", Offset = "0x1761F20", VA = "0x1761F20")]
		public void ColorText(Color color)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x1762208", Offset = "0x1762208", VA = "0x1762208")]
		public void SetDifficulty(string text)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x17620CC", Offset = "0x17620CC", VA = "0x17620CC")]
		public void SetRating(string text)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x1762074", Offset = "0x1762074", VA = "0x1762074")]
		public void SetCalories(string text)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x17698B4", Offset = "0x17698B4", VA = "0x17698B4")]
		public PlaylistSongItemView()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class PlayspaceWarning : MonoBehaviour
	{
		[Token(Token = "0x2000797")]
		public enum WarningType
		{
			[Token(Token = "0x4003002")]
			FRONT,
			[Token(Token = "0x4003003")]
			BACK
		}

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float warningFront;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float warningBack;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD909")]
		[SerializeField]
		private WarningType warningType;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject head;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CA4")]
		[SerializeField]
		private AudioClip warningSoundMale;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip warningSoundFemale;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject text;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem warningIndicator;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD911")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isChecking;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CAC")]
		private float samplingInterval;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FrameworkManager fm;

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x176C124", Offset = "0x176C124", VA = "0x176C124")]
		private void Start()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x176C220", Offset = "0x176C220", VA = "0x176C220")]
		private void Update()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x176C704", Offset = "0x176C704", VA = "0x176C704")]
		public void SetTreshold(float value)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x176C75C", Offset = "0x176C75C", VA = "0x176C75C")]
		public void SetChecking(bool shouldCheck)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x176C7DC", Offset = "0x176C7DC", VA = "0x176C7DC")]
		public void SetVoice(bool isActivated)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x176C66C", Offset = "0x176C66C", VA = "0x176C66C")]
		private void Disable()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x176C880", Offset = "0x176C880", VA = "0x176C880")]
		public PlayspaceWarning()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class PowerFistChargeDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image circularBar;

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x176DEC4", Offset = "0x176DEC4", VA = "0x176DEC4")]
		public void SetActive()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x176DF88", Offset = "0x176DF88", VA = "0x176DF88")]
		public void SetValue(float chargeLevel)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x176E240", Offset = "0x176E240", VA = "0x176E240")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x176E304", Offset = "0x176E304", VA = "0x176E304")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x176E358", Offset = "0x176E358", VA = "0x176E358")]
		public void DisableAndReset()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x176E448", Offset = "0x176E448", VA = "0x176E448")]
		public PowerFistChargeDisplay()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class PurchaseInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE23DC", Offset = "0xBE23DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4003004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__15_1;

			[Token(Token = "0x600313C")]
			[Address(RVA = "0x177244C", Offset = "0x177244C", VA = "0x177244C")]
			public <>c()
			{
			}

			[Token(Token = "0x600313D")]
			[Address(RVA = "0x177247C", Offset = "0x177247C", VA = "0x177247C")]
			internal void <BuyNowInBrowserButton_onClick>b__15_1(int status2, bool ok2)
			{
			}
		}

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LLPlatform.Feature feature;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI twoOptionsText;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD921")]
		[SerializeField]
		private MenuSelectButton buyNowInBrowserButton;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton buyNowInGameButton;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CBC")]
		[SerializeField]
		private MenuSelectButton cancelButton;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x14000039")]
		public event Action dialogCanceled
		{
			[Token(Token = "0x600235A")]
			[Address(RVA = "0x1770FB4", Offset = "0x1770FB4", VA = "0x1770FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27280", Offset = "0xC27280")]
			add
			{
			}
			[Token(Token = "0x600235B")]
			[Address(RVA = "0x1771100", Offset = "0x1771100", VA = "0x1771100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC272BC", Offset = "0xC272BC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action<bool> purchaseFunctionPerformed
		{
			[Token(Token = "0x600235C")]
			[Address(RVA = "0x177124C", Offset = "0x177124C", VA = "0x177124C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC272F8", Offset = "0xC272F8")]
			add
			{
			}
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x1771398", Offset = "0x1771398", VA = "0x1771398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27334", Offset = "0xC27334")]
			remove
			{
			}
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x17714E4", Offset = "0x17714E4", VA = "0x17714E4")]
		public void HideDialog()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x1771540", Offset = "0x1771540", VA = "0x1771540")]
		private void Start()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x17719F0", Offset = "0x17719F0", VA = "0x17719F0")]
		private void CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x1771A84", Offset = "0x1771A84", VA = "0x1771A84")]
		private void BuyNowInBrowserButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1771D7C", Offset = "0x1771D7C", VA = "0x1771D7C")]
		private void BuyNowInGameButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x1771FA8", Offset = "0x1771FA8", VA = "0x1771FA8")]
		public PurchaseInfo()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x1771FD8", Offset = "0x1771FD8", VA = "0x1771FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27370", Offset = "0xC27370")]
		private void <BuyNowInBrowserButton_onClick>b__15_0(int status, bool ok)
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class RatingCalculator
	{
		[Token(Token = "0x2000799")]
		public enum Rating
		{
			[Token(Token = "0x4003007")]
			A_PLUS,
			[Token(Token = "0x4003008")]
			A,
			[Token(Token = "0x4003009")]
			A_MINUS,
			[Token(Token = "0x400300A")]
			B_PLUS,
			[Token(Token = "0x400300B")]
			B,
			[Token(Token = "0x400300C")]
			B_MINUS,
			[Token(Token = "0x400300D")]
			C_PLUS,
			[Token(Token = "0x400300E")]
			C,
			[Token(Token = "0x400300F")]
			C_MINUS,
			[Token(Token = "0x4003010")]
			D_PLUS,
			[Token(Token = "0x4003011")]
			D,
			[Token(Token = "0x4003012")]
			D_MINUS,
			[Token(Token = "0x4003013")]
			F
		}

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD929")]
		public static readonly Dictionary<Rating, string> RATING_TO_STRING;

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x17742C0", Offset = "0x17742C0", VA = "0x17742C0")]
		public static Rating CalculateRating(SongStatistic songStat)
		{
			return default(Rating);
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1774AA8", Offset = "0x1774AA8", VA = "0x1774AA8")]
		public RatingCalculator()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class BallObstacleAction : ObstacleAction
	{
		[Token(Token = "0x6002368")]
		[Address(RVA = "0x1964FFC", Offset = "0x1964FFC", VA = "0x1964FFC")]
		public BallObstacleAction(Beat beat, Vector2 position)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x19650F4", Offset = "0x19650F4", VA = "0x19650F4", Slot = "4")]
		internal override BeatAction DeepClone(Beat parent)
		{
			return null;
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x196519C", Offset = "0x196519C", VA = "0x196519C", Slot = "5")]
		internal override void AdjustPositionForPlayWindow(Vector2 scale)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public abstract class Beat
	{
		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<BeatAction> beatActions;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Label;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 temp_Stream_A;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD941")]
		private Vector2 temp_Stream_B;

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1965658", Offset = "0x1965658", VA = "0x1965658")]
		public void AddBeatAction(BeatAction ba)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x19657F0", Offset = "0x19657F0", VA = "0x19657F0")]
		public List<BeatAction> GetBeatActions()
		{
			return null;
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1965820", Offset = "0x1965820", VA = "0x1965820")]
		public bool HasCollectible()
		{
			return default(bool);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1965C2C", Offset = "0x1965C2C", VA = "0x1965C2C")]
		public bool HasObstacle()
		{
			return default(bool);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1966038", Offset = "0x1966038", VA = "0x1966038", Slot = "4")]
		internal virtual int GetHittablesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x19663D0", Offset = "0x19663D0", VA = "0x19663D0", Slot = "5")]
		internal virtual int GetPowerBallsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1966768", Offset = "0x1966768", VA = "0x1966768", Slot = "6")]
		internal virtual int GetObstaclesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1966B00", Offset = "0x1966B00", VA = "0x1966B00", Slot = "7")]
		internal virtual int GetStreamCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1966E98", Offset = "0x1966E98", VA = "0x1966E98", Slot = "8")]
		internal virtual int GetWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1967230", Offset = "0x1967230", VA = "0x1967230", Slot = "9")]
		internal virtual int GetHorizontalWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x19676A0", Offset = "0x19676A0", VA = "0x19676A0", Slot = "10")]
		internal virtual int GetTunnelCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002376")]
		internal abstract float GetBeatNumber();

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x1967B2C", Offset = "0x1967B2C", VA = "0x1967B2C")]
		internal void SetStreamPosition(StreamAction.Id id, Vector2 streamPosition)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1967C94", Offset = "0x1967C94", VA = "0x1967C94")]
		protected Beat()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public abstract class BeatAction
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Beat beat;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CDC")]
		internal Vector2 position;

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1967D68", Offset = "0x1967D68", VA = "0x1967D68")]
		public BeatAction(Beat beat, Vector2 position)
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1967E64", Offset = "0x1967E64", VA = "0x1967E64")]
		public void SetBeat(Beat beat)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1967E9C", Offset = "0x1967E9C", VA = "0x1967E9C")]
		public Beat GetBeat()
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x196534C", Offset = "0x196534C", VA = "0x196534C")]
		public Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x19654D8", Offset = "0x19654D8", VA = "0x19654D8")]
		internal void SetPosition(Vector3 newPos)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1967ECC", Offset = "0x1967ECC", VA = "0x1967ECC")]
		public Vector2 GetRawPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1967F04", Offset = "0x1967F04", VA = "0x1967F04")]
		internal void SetRawPosition(float x, float y)
		{
		}

		[Token(Token = "0x6002380")]
		internal abstract BeatAction DeepClone(Beat parent);

		[Token(Token = "0x6002381")]
		internal abstract void AdjustPositionForPlayWindow(Vector2 scale);
	}
	[Token(Token = "0x2000492")]
	public class BeatPattern : BeatSequence
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0A308", Offset = "0xC0A308")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000465")]
		public string Name
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0x1967FD8", Offset = "0x1967FD8", VA = "0x1967FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC273AC", Offset = "0xC273AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x1968008", Offset = "0x1968008", VA = "0x1968008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC273E8", Offset = "0xC273E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1968040", Offset = "0x1968040", VA = "0x1968040")]
		public BeatPattern()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x19681A4", Offset = "0x19681A4", VA = "0x19681A4")]
		public BeatPattern(BeatPattern copy)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1968664", Offset = "0x1968664", VA = "0x1968664", Slot = "4")]
		internal override BeatSequence DeepClone()
		{
			return null;
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x19686FC", Offset = "0x19686FC", VA = "0x19686FC")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1968750", Offset = "0x1968750", VA = "0x1968750")]
		private static string MakeValidFileName(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x2000493")]
	public abstract class BeatSequence
	{
		[Token(Token = "0x200079A")]
		internal enum Direction
		{
			[Token(Token = "0x4003015")]
			FORWARD,
			[Token(Token = "0x4003016")]
			BACKWARD
		}

		[Token(Token = "0x200079B")]
		internal class MergeDifference
		{
			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D74C")]
			internal List<BeatAction> added;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal List<BeatAction> removed;

			[Token(Token = "0x600313E")]
			[Address(RVA = "0x1970E18", Offset = "0x1970E18", VA = "0x1970E18")]
			public MergeDifference()
			{
			}
		}

		[Token(Token = "0x200079C")]
		private class WallInfo
		{
			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WallObstacleAction currentWallAction;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float currentWallStartBeat;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD960")]
			public float currentWallEndBeat;

			[Token(Token = "0x600313F")]
			[Address(RVA = "0x1982DC0", Offset = "0x1982DC0", VA = "0x1982DC0")]
			public WallInfo()
			{
			}
		}

		[Token(Token = "0x4001FDE")]
		public const int ALL_BEATS = int.MaxValue;

		[Token(Token = "0x4001FDF")]
		private const string SONG_NORMAL_BALL_NAME = "NormalBall";

		[Token(Token = "0x4001FE0")]
		private const string SONG_POWER_BALL_NAME = "PowerBall";

		[Token(Token = "0x4001FE1")]
		private const string SONG_BALL_OBSTACLE_NAME = "BallObstacle";

		[Token(Token = "0x4001FE2")]
		private const string SONG_WALL_OBSTACLE_NAME = "WallObstacle";

		[Token(Token = "0x4001FE3")]
		private const string SONG_STREAM_NAME = "Stream";

		[Token(Token = "0x4001FE4")]
		private const float SIZE_HITTABLE = 0.225f;

		[Token(Token = "0x4001FE5")]
		private const float SIZE_BALL_OBSTACLE = 0.3375f;

		[Token(Token = "0x4001FE6")]
		private const float SIZE_STREAM = 0.1f;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SortedDictionary<int, OnBeat> beats;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CEC")]
		private bool isGenerated;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<BezierListStruct> listStructCache;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hadDoubleBalls;

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x19680D4", Offset = "0x19680D4", VA = "0x19680D4")]
		public BeatSequence()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x1968218", Offset = "0x1968218", VA = "0x1968218")]
		protected BeatSequence(BeatSequence copy)
		{
		}

		[Token(Token = "0x600238B")]
		internal abstract BeatSequence DeepClone();

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x196895C", Offset = "0x196895C", VA = "0x196895C")]
		internal ICollection<OnBeat> GetOnBeats()
		{
			return null;
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x19689F4", Offset = "0x19689F4", VA = "0x19689F4")]
		internal OnBeat GetBeat(int currentBeat)
		{
			return null;
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x1968B0C", Offset = "0x1968B0C", VA = "0x1968B0C")]
		internal OnBeat AddBeat(OnBeat onBeat)
		{
			return null;
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x1968BD8", Offset = "0x1968BD8", VA = "0x1968BD8")]
		internal int GetHittablesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1968F14", Offset = "0x1968F14", VA = "0x1968F14")]
		internal int GetPowerBallsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1969250", Offset = "0x1969250", VA = "0x1969250")]
		internal int GetObstaclesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x196958C", Offset = "0x196958C", VA = "0x196958C")]
		internal int GetStreamCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x19698C8", Offset = "0x19698C8", VA = "0x19698C8")]
		internal int GetWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1969C04", Offset = "0x1969C04", VA = "0x1969C04")]
		internal int GetHorizontalWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x1969F40", Offset = "0x1969F40", VA = "0x1969F40")]
		internal int GetTunnelCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x196A27C", Offset = "0x196A27C", VA = "0x196A27C")]
		public int GetLastBeat()
		{
			return default(int);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x196A39C", Offset = "0x196A39C", VA = "0x196A39C")]
		internal void LoadFromJSON(JSONArray beatsArray)
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x196ABB8", Offset = "0x196ABB8", VA = "0x196ABB8")]
		private static void ResolveActionArray(Beat beat, JSONArray actionArray)
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x196B76C", Offset = "0x196B76C", VA = "0x196B76C")]
		public JSONArray SaveToJSON()
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x196C578", Offset = "0x196C578", VA = "0x196C578")]
		private JSONArray GetActionArray(Beat ob)
		{
			return null;
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x196D3B4", Offset = "0x196D3B4", VA = "0x196D3B4")]
		internal List<Beat> GetFlattenedBeats()
		{
			return null;
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x196D3F8", Offset = "0x196D3F8", VA = "0x196D3F8")]
		internal List<Beat> GetFlattenedBeats(float from, float to)
		{
			return null;
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x196DB4C", Offset = "0x196DB4C", VA = "0x196DB4C")]
		internal StreamAction GetPreviousStreamActionAtBeat(StreamAction.Id id, float beat)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x196E6A4", Offset = "0x196E6A4", VA = "0x196E6A4")]
		internal StreamAction GetNextStreamActionAtBeat(StreamAction.Id id, float beat)
		{
			return null;
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x196DC78", Offset = "0x196DC78", VA = "0x196DC78")]
		private StreamAction FindStreamAction(List<Beat> allBeats, Direction direction, float from, bool inclusiveStart, float to, bool inclusiveEnd, StreamAction.Id id)
		{
			return null;
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x196E7C4", Offset = "0x196E7C4", VA = "0x196E7C4")]
		internal BeatPattern ExtractPattern(int fromBeat, int toBeat)
		{
			return null;
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x196EF68", Offset = "0x196EF68", VA = "0x196EF68")]
		internal MergeDifference MergePattern(BeatPattern patternToMerge, int fromBeat, bool copyAdditive, bool copyMirrorX, bool copyMirrorY)
		{
			return null;
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x196EF4C", Offset = "0x196EF4C", VA = "0x196EF4C")]
		private static void CheckSequenceForWallSanity(int fromBeat, int toBeat, List<Beat> allBeats)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x19708B8", Offset = "0x19708B8", VA = "0x19708B8")]
		private bool CheckSequenceForOverlappingStreams(BeatPattern patternToMerge, int fromBeat, List<Beat> allBeats)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x196EB24", Offset = "0x196EB24", VA = "0x196EB24")]
		private void CheckSequenceForStreamSanity(int fromBeat, int toBeat, List<Beat> allBeats)
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1971ADC", Offset = "0x1971ADC", VA = "0x1971ADC")]
		private bool IsTouchedByStream(BeatPattern patternToMerge, int fromBeat, List<Beat> allBeats, StreamAction.Id id)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1970EFC", Offset = "0x1970EFC", VA = "0x1970EFC")]
		private void ModifyAction(BeatAction ba, bool copyMirrorX, bool copyMirrorY, bool switchInputStream)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x1971F18", Offset = "0x1971F18", VA = "0x1971F18")]
		internal MergeDifference InsertBeat(int whereToInsert)
		{
			return null;
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x19721A4", Offset = "0x19721A4", VA = "0x19721A4")]
		internal MergeDifference DeleteBeat(int beatWhereToShift)
		{
			return null;
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x19728E4", Offset = "0x19728E4", VA = "0x19728E4")]
		internal void ForceDeleteBeat(int beatNo)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x1972984", Offset = "0x1972984", VA = "0x1972984")]
		internal int ConvertToHalfBeats(int firstBeat, int lastBeat)
		{
			return default(int);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x1973944", Offset = "0x1973944", VA = "0x1973944")]
		internal BeatSequence GetGameAdjustedCopy(Vector2 scaling, int ballFlightDuration, Song.Difficulty difficulty, Dictionary<GameConfiguration.Modifier, GameConfiguration.OffOn> modifiers)
		{
			return null;
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x1978040", Offset = "0x1978040", VA = "0x1978040")]
		internal BeatSequence GetScaledOnlyCopy(Vector2 scaling)
		{
			return null;
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x1977BF0", Offset = "0x1977BF0", VA = "0x1977BF0")]
		private void Cleanup(BeatSequence copy)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x1974B90", Offset = "0x1974B90", VA = "0x1974B90")]
		private BeatSequence MakeModifierAdjustments(BeatSequence clone, Dictionary<GameConfiguration.Modifier, GameConfiguration.OffOn> modifiers, Song.Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x197961C", Offset = "0x197961C", VA = "0x197961C")]
		private void SetHadDoubleBalls(bool v)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x1979668", Offset = "0x1979668", VA = "0x1979668")]
		public bool HadDoubleBalls()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1973BBC", Offset = "0x1973BBC", VA = "0x1973BBC")]
		private void RunSwingDetection(BeatSequence copy)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x197B91C", Offset = "0x197B91C", VA = "0x197B91C")]
		private Beat GetBeatIfExists(BeatSequence layout, float fullBeatNumber)
		{
			return null;
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x19796AC", Offset = "0x19796AC", VA = "0x19796AC")]
		private Swing[] FindSwing(BeatSequence bs, HittableAction thisFirstBall)
		{
			return null;
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1979174", Offset = "0x1979174", VA = "0x1979174")]
		private static List<HittableAction> GetHittablesOnBeat(Beat someBeat)
		{
			return null;
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x1978174", Offset = "0x1978174", VA = "0x1978174")]
		internal BeatSequence MakeScaleOnlyAdjustments(BeatSequence clone, Vector2 scaling)
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x1976A28", Offset = "0x1976A28", VA = "0x1976A28")]
		internal BeatSequence MakePlayspaceAdjustments(BeatSequence clone, Vector2 scaling, int ballFlightDuration)
		{
			return null;
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x197C2F8", Offset = "0x197C2F8", VA = "0x197C2F8")]
		private void FixBallOverlap(List<BeatAction> bas)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x19741F8", Offset = "0x19741F8", VA = "0x19741F8")]
		private void RunStreamDetection(BeatSequence copy, float ballFlightDuration)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x197CB64", Offset = "0x197CB64", VA = "0x197CB64")]
		private void HandleStreams(Beat clonedBeat, Dictionary<StreamAction.Id, StreamAction> streamStarts)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x1980388", Offset = "0x1980388", VA = "0x1980388")]
		private string V3TS(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1980A50", Offset = "0x1980A50", VA = "0x1980A50")]
		private void HandleWalls(Beat clonedBeat, WallInfo wallInfo, Vector2 scaling)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x198064C", Offset = "0x198064C", VA = "0x198064C")]
		private bool IsBetween(Vector2 streamPositionHereA, Vector2 streamPositionHereB, BeatAction ba)
		{
			return default(bool);
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x197F34C", Offset = "0x197F34C", VA = "0x197F34C")]
		private StreamAction GetStreamStartAction(Beat clonedBeat, StreamAction.Id id)
		{
			return null;
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1978818", Offset = "0x1978818", VA = "0x1978818")]
		private StreamAction GetStreamAction(Beat clonedBeat, StreamAction.Id id)
		{
			return null;
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x1982098", Offset = "0x1982098", VA = "0x1982098")]
		private List<StreamAction> GetStreamActions(List<BeatAction> bas)
		{
			return null;
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x197F040", Offset = "0x197F040", VA = "0x197F040")]
		private float GetDistanceBetween(BeatAction ba1, BeatAction ba2)
		{
			return default(float);
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x197F1A0", Offset = "0x197F1A0", VA = "0x197F1A0")]
		private float GetRequiredMinimumDistance(BeatAction ba1, BeatAction ba2)
		{
			return default(float);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x198089C", Offset = "0x198089C", VA = "0x198089C")]
		private float GetRequiredMinimumDistanceForStream(BeatAction ba1, bool upwards = false)
		{
			return default(float);
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x197F22C", Offset = "0x197F22C", VA = "0x197F22C")]
		private float GetBallRadius(BeatAction ba)
		{
			return default(float);
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x197BEE4", Offset = "0x197BEE4", VA = "0x197BEE4")]
		private List<BeatAction> GetBallActions(Beat beat)
		{
			return null;
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1981DC4", Offset = "0x1981DC4", VA = "0x1981DC4")]
		private Bounds GetNearestBounds(Bounds[] innerWindows, Bounds boundingBoxToCheck)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x198194C", Offset = "0x198194C", VA = "0x198194C")]
		private WallObstacleAction GetWallAction(Beat beat)
		{
			return null;
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1982528", Offset = "0x1982528", VA = "0x1982528")]
		internal float GetLayoutLengthInBeats()
		{
			return default(float);
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x1982C5C", Offset = "0x1982C5C", VA = "0x1982C5C")]
		internal bool IsGenerated()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1982CA0", Offset = "0x1982CA0", VA = "0x1982CA0")]
		internal void SetGenerated(bool generated)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x1982CEC", Offset = "0x1982CEC", VA = "0x1982CEC")]
		internal List<Beat> GetBeats()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000494")]
	internal class BeatSequenceException : Exception
	{
		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x1982E34", Offset = "0x1982E34", VA = "0x1982E34")]
		public BeatSequenceException()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x1971E20", Offset = "0x1971E20", VA = "0x1971E20")]
		public BeatSequenceException(string message)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x1982F1C", Offset = "0x1982F1C", VA = "0x1982F1C")]
		public BeatSequenceException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x1983024", Offset = "0x1983024", VA = "0x1983024")]
		protected BeatSequenceException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x2000495")]
	internal class BezierListStruct
	{
		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2418", Offset = "0xBE2418")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD968")]
			public float beatNumber;

			[Token(Token = "0x6003140")]
			[Address(RVA = "0x1984CB8", Offset = "0x1984CB8", VA = "0x1984CB8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003141")]
			[Address(RVA = "0x1984CE8", Offset = "0x1984CE8", VA = "0x1984CE8")]
			internal float <GetPosition>b__0(float item)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<BezierPointStruct> listOfPoints;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CF4")]
		private float startBeatNumber;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float unitsPerBeat;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BezierSpline spline;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<float, Vector3> positionsOfFullBeats;

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x197F798", Offset = "0x197F798", VA = "0x197F798")]
		public BezierListStruct(float beatStart, float unitsPerBeat)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x197F880", Offset = "0x197F880", VA = "0x197F880")]
		internal void PopulateFromStartAction(BeatSequence seq, StreamAction action)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x19846BC", Offset = "0x19846BC", VA = "0x19846BC")]
		internal void CopyIntoSpline(BezierSpline spline)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x197FDFC", Offset = "0x197FDFC", VA = "0x197FDFC")]
		internal void CreateSpline()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1984B7C", Offset = "0x1984B7C", VA = "0x1984B7C")]
		public float GetStartBeatNumber()
		{
			return default(float);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1984BAC", Offset = "0x1984BAC", VA = "0x1984BAC")]
		internal float GetLastBeatNumber()
		{
			return default(float);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x197870C", Offset = "0x197870C", VA = "0x197870C")]
		internal void Destroy()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x197FF10", Offset = "0x197FF10", VA = "0x197FF10")]
		internal void CalculateSplineBeatPositions()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1978C24", Offset = "0x1978C24", VA = "0x1978C24")]
		internal Vector3 GetPosition(float beatNumber)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000496")]
	internal class BezierPointStruct
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		internal Quaternion rotation;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57CFC")]
		internal Vector3 position;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 precedingControlPointLocalPosition;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 followingControlPointLocalPosition;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float beat;

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x198468C", Offset = "0x198468C", VA = "0x198468C")]
		public BezierPointStruct()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public abstract class HittableAction : BeatAction
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD970")]
		private Swing belongsToSwing;

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x17B5AFC", Offset = "0x17B5AFC", VA = "0x17B5AFC")]
		public HittableAction(Beat beat, Vector2 position)
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x17B5BF4", Offset = "0x17B5BF4", VA = "0x17B5BF4", Slot = "5")]
		internal override void AdjustPositionForPlayWindow(Vector2 scale)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x17B5DA4", Offset = "0x17B5DA4", VA = "0x17B5DA4")]
		internal bool IsPartOfSwing()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x17B5E2C", Offset = "0x17B5E2C", VA = "0x17B5E2C")]
		internal void RegisterSwing(Swing swing)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x17B5E64", Offset = "0x17B5E64", VA = "0x17B5E64")]
		internal Swing GetSwing()
		{
			return null;
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x17B5E94", Offset = "0x17B5E94", VA = "0x17B5E94")]
		internal bool IsStartOfSwing()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x17B5F74", Offset = "0x17B5F74", VA = "0x17B5F74")]
		internal bool IsEndOfSwing()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000498")]
	public class NormalBallAction : HittableAction
	{
		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1808428", Offset = "0x1808428", VA = "0x1808428")]
		public NormalBallAction(Beat beat, Vector2 position)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1808520", Offset = "0x1808520", VA = "0x1808520", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1808624", Offset = "0x1808624", VA = "0x1808624", Slot = "4")]
		internal override BeatAction DeepClone(Beat parent)
		{
			return null;
		}
	}
	[Token(Token = "0x2000499")]
	public abstract class ObstacleAction : BeatAction
	{
		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x180891C", Offset = "0x180891C", VA = "0x180891C")]
		public ObstacleAction(Beat beat, Vector2 position)
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class OffBeat : Beat
	{
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float offset;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D04")]
		private OnBeat onBeat;

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1808A14", Offset = "0x1808A14", VA = "0x1808A14")]
		public OffBeat(OnBeat onBeat, float offset)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1808A74", Offset = "0x1808A74", VA = "0x1808A74")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1808AAC", Offset = "0x1808AAC", VA = "0x1808AAC")]
		public float GetOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1808ADC", Offset = "0x1808ADC", VA = "0x1808ADC", Slot = "11")]
		internal override float GetBeatNumber()
		{
			return default(float);
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1808B40", Offset = "0x1808B40", VA = "0x1808B40")]
		public OnBeat GetOnBeat()
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1808B70", Offset = "0x1808B70", VA = "0x1808B70")]
		internal OffBeat DeepClone(OnBeat newParent)
		{
			return null;
		}
	}
	[Token(Token = "0x200049B")]
	public class OnBeat : Beat
	{
		[Token(Token = "0x4001FF8")]
		private const int USE_EXISTING = -99;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int beatNo;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<OffBeat> offBeats;

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x180A3A0", Offset = "0x180A3A0", VA = "0x180A3A0")]
		public OnBeat(int beatNo)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x180A470", Offset = "0x180A470", VA = "0x180A470")]
		public List<OffBeat> GetOffBeats()
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x180A4A0", Offset = "0x180A4A0", VA = "0x180A4A0")]
		public void AddOffBeat(OffBeat offBeat)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x180A7B0", Offset = "0x180A7B0", VA = "0x180A7B0")]
		internal OffBeat GetOffBeat(float offset)
		{
			return null;
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x180AB6C", Offset = "0x180AB6C", VA = "0x180AB6C")]
		public int GetBeatNo()
		{
			return default(int);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x180AB9C", Offset = "0x180AB9C", VA = "0x180AB9C")]
		public bool HasAnyActions()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x180B074", Offset = "0x180B074", VA = "0x180B074", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x180B990", Offset = "0x180B990", VA = "0x180B990", Slot = "4")]
		internal override int GetHittablesCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x180BD50", Offset = "0x180BD50", VA = "0x180BD50", Slot = "5")]
		internal override int GetPowerBallsCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x180C110", Offset = "0x180C110", VA = "0x180C110", Slot = "6")]
		internal override int GetObstaclesCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x180C4D0", Offset = "0x180C4D0", VA = "0x180C4D0", Slot = "7")]
		internal override int GetStreamCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x180C890", Offset = "0x180C890", VA = "0x180C890", Slot = "8")]
		internal override int GetWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x180CC50", Offset = "0x180CC50", VA = "0x180CC50", Slot = "9")]
		internal override int GetHorizontalWallCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x180D010", Offset = "0x180D010", VA = "0x180D010", Slot = "10")]
		internal override int GetTunnelCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x180D3D0", Offset = "0x180D3D0", VA = "0x180D3D0", Slot = "11")]
		internal override float GetBeatNumber()
		{
			return default(float);
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x180D404", Offset = "0x180D404", VA = "0x180D404")]
		internal OnBeat DeepClone(int beatNoToUse = -99)
		{
			return null;
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x180DA9C", Offset = "0x180DA9C", VA = "0x180DA9C")]
		internal void AdjustSetBeatNumber(int newBeatNumber)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x180DAD4", Offset = "0x180DAD4", VA = "0x180DAD4")]
		internal List<BeatAction> GetFlattenedActions()
		{
			return null;
		}
	}
	[Token(Token = "0x200049C")]
	public class PatternManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2454", Offset = "0xBE2454")]
		private sealed class <>c
		{
			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<BeatPattern> <>9__7_0;

			[Token(Token = "0x6003143")]
			[Address(RVA = "0x181DE38", Offset = "0x181DE38", VA = "0x181DE38")]
			public <>c()
			{
			}

			[Token(Token = "0x6003144")]
			[Address(RVA = "0x181DE68", Offset = "0x181DE68", VA = "0x181DE68")]
			internal int <SortPatternsByName>b__7_0(BeatPattern x, BeatPattern y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD978")]
		internal static readonly string PATTERN_DIRECTORY_NAME;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string patternFolder;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D0C")]
		[SerializeField]
		private TextAsset[] builtInPatterns;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<BeatPattern> patterns;

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x181CC98", Offset = "0x181CC98", VA = "0x181CC98")]
		public void Awake()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x181D1E8", Offset = "0x181D1E8", VA = "0x181D1E8")]
		private BeatPattern Load(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x181D3FC", Offset = "0x181D3FC", VA = "0x181D3FC")]
		internal void AddAndSave(BeatPattern pattern)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x181DA38", Offset = "0x181DA38", VA = "0x181DA38")]
		private void SortPatternsByName()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x181DCAC", Offset = "0x181DCAC", VA = "0x181DCAC")]
		internal List<BeatPattern> GetPatterns()
		{
			return null;
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1817944", Offset = "0x1817944", VA = "0x1817944")]
		internal void DeletePattern(BeatPattern pattern)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x181D68C", Offset = "0x181D68C", VA = "0x181D68C")]
		internal BeatPattern GetPattern(string patternName)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x181DCDC", Offset = "0x181DCDC", VA = "0x181DCDC")]
		public PatternManager()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class PowerBallAction : HittableAction
	{
		[Token(Token = "0x6002405")]
		[Address(RVA = "0x176CDC0", Offset = "0x176CDC0", VA = "0x176CDC0")]
		public PowerBallAction(Beat beat, Vector2 position)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x176CEB8", Offset = "0x176CEB8", VA = "0x176CEB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x176CFBC", Offset = "0x176CFBC", VA = "0x176CFBC", Slot = "4")]
		internal override BeatAction DeepClone(Beat parent)
		{
			return null;
		}
	}
	[Token(Token = "0x200049E")]
	public class Song
	{
		[Token(Token = "0x200079F")]
		public enum SongType
		{
			[Token(Token = "0x4003020")]
			Internal,
			[Token(Token = "0x4003021")]
			External
		}

		[Token(Token = "0x20007A0")]
		public enum Difficulty
		{
			[Token(Token = "0x4003023")]
			Beginner,
			[Token(Token = "0x4003024")]
			Advanced,
			[Token(Token = "0x4003025")]
			Expert
		}

		[Token(Token = "0x20007A1")]
		public enum BPMRange
		{
			[Token(Token = "0x4003027")]
			Low,
			[Token(Token = "0x4003028")]
			Mid,
			[Token(Token = "0x4003029")]
			High
		}

		[Token(Token = "0x20007A2")]
		public enum LoadingState
		{
			[Token(Token = "0x400302B")]
			NothingLoaded,
			[Token(Token = "0x400302C")]
			Loading,
			[Token(Token = "0x400302D")]
			Done_OK,
			[Token(Token = "0x400302E")]
			Done_Cancelled,
			[Token(Token = "0x400302F")]
			Done_Error,
			[Token(Token = "0x4003030")]
			Done_ErrorAnalyzing,
			[Token(Token = "0x4003031")]
			Destroyed
		}

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD980")]
		internal static readonly float UNKNOWN;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string name;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D14")]
		private string author;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongType type;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string fullPathToAudioFile;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offset;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD988")]
		private float bpm;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AudioClip clip;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0A380", Offset = "0xC0A380")]
		private LoadingState <loadingState>k__BackingField;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Difficulty, SongLayout> layouts;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Difficulty, int> maxHighscore;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string errorMessage;

		[Token(Token = "0x17000466")]
		public LoadingState loadingState
		{
			[Token(Token = "0x6002408")]
			[Address(RVA = "0x1782358", Offset = "0x1782358", VA = "0x1782358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27424", Offset = "0xC27424")]
			get
			{
				return default(LoadingState);
			}
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x1782388", Offset = "0x1782388", VA = "0x1782388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27460", Offset = "0xC27460")]
			set
			{
			}
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1762124", Offset = "0x1762124", VA = "0x1762124")]
		public static string GetSongDifficultyLocalizationKey(Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x17823C0", Offset = "0x17823C0", VA = "0x17823C0")]
		public Song(SongType type, string fullPathToAudioFile)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1782728", Offset = "0x1782728", VA = "0x1782728")]
		internal void UpdateInformation(string name, string author, float bpm, float offset)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x17827A8", Offset = "0x17827A8", VA = "0x17827A8")]
		internal void AddLayout(SongLayout layout)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1782874", Offset = "0x1782874", VA = "0x1782874")]
		internal void ReplaceLayout(SongLayout replaceLayout)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x1782940", Offset = "0x1782940", VA = "0x1782940")]
		internal float GetBeatsPerMinute()
		{
			return default(float);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x1782970", Offset = "0x1782970", VA = "0x1782970")]
		internal float GetFirstBeatOffsetInSeconds()
		{
			return default(float);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x17829A0", Offset = "0x17829A0", VA = "0x17829A0")]
		internal void SetFirstBeatOffsetInSeconds(float newOffset)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x17829D8", Offset = "0x17829D8", VA = "0x17829D8")]
		internal bool HasLayout(Difficulty difficulty)
		{
			return default(bool);
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1759FAC", Offset = "0x1759FAC", VA = "0x1759FAC")]
		internal SongLayout GetLayout(Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x1782A94", Offset = "0x1782A94", VA = "0x1782A94")]
		internal SongType GetSongType()
		{
			return default(SongType);
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x1782AC4", Offset = "0x1782AC4", VA = "0x1782AC4")]
		internal AudioClip GetAudioClip()
		{
			return null;
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x1782AF4", Offset = "0x1782AF4", VA = "0x1782AF4")]
		internal void SetErrorWhileLoading(string error)
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x1782B5C", Offset = "0x1782B5C", VA = "0x1782B5C")]
		internal void SetAudioClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1782B94", Offset = "0x1782B94", VA = "0x1782B94")]
		public string GetErrorMessage()
		{
			return null;
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1782C70", Offset = "0x1782C70", VA = "0x1782C70")]
		internal string GetName()
		{
			return null;
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1782CA0", Offset = "0x1782CA0", VA = "0x1782CA0")]
		internal string GetAuthor()
		{
			return null;
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1782CD0", Offset = "0x1782CD0", VA = "0x1782CD0")]
		internal Difficulty GetFirstAvailableDifficulty()
		{
			return default(Difficulty);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1782D9C", Offset = "0x1782D9C", VA = "0x1782D9C")]
		internal bool HasAnyDifficulty()
		{
			return default(bool);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1782E70", Offset = "0x1782E70", VA = "0x1782E70")]
		internal string GetFullPathToAudioFile()
		{
			return null;
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1782EA0", Offset = "0x1782EA0", VA = "0x1782EA0")]
		internal void SetBeatsPerMinute(float newBPM)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x1759F68", Offset = "0x1759F68", VA = "0x1759F68")]
		internal float GetSecondsPerBeat()
		{
			return default(float);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1782ED8", Offset = "0x1782ED8", VA = "0x1782ED8")]
		internal BPMRange GetBMPMRange()
		{
			return default(BPMRange);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x1782F98", Offset = "0x1782F98", VA = "0x1782F98")]
		public bool NeedsGeneration(Difficulty difficulty)
		{
			return default(bool);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x1783150", Offset = "0x1783150", VA = "0x1783150")]
		public void SetMaxHighscore(Difficulty difficulty, int maxHighscore)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1783200", Offset = "0x1783200", VA = "0x1783200")]
		public int GetMaxHighscore(Difficulty difficulty)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200049F")]
	public class SongLayout : BeatSequence
	{
		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly Song song;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D3C")]
		private readonly Song.Difficulty difficulty;

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1733314", Offset = "0x1733314", VA = "0x1733314")]
		public SongLayout(Song song, Song.Difficulty difficulty, bool isGenerated)
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1752024", Offset = "0x1752024", VA = "0x1752024")]
		public SongLayout(SongLayout copy)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x17520B4", Offset = "0x17520B4", VA = "0x17520B4", Slot = "4")]
		internal override BeatSequence DeepClone()
		{
			return null;
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x175214C", Offset = "0x175214C", VA = "0x175214C")]
		public Song GetSong()
		{
			return null;
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x175217C", Offset = "0x175217C", VA = "0x175217C")]
		public Song.Difficulty GetDifficulty()
		{
			return default(Song.Difficulty);
		}
	}
	[Token(Token = "0x20004A0")]
	public class SongManager : MonoBehaviour
	{
		[Token(Token = "0x20007A3")]
		public enum SaveType
		{
			[Token(Token = "0x4003033")]
			NORMAL,
			[Token(Token = "0x4003034")]
			AUTOSAVE
		}

		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2490", Offset = "0xBE2490")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4003035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Song song;

			[Token(Token = "0x4003036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Predicate<Song> <>9__0;

			[Token(Token = "0x6003145")]
			[Address(RVA = "0x18EA100", Offset = "0x18EA100", VA = "0x18EA100")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6003146")]
			[Address(RVA = "0x18EA130", Offset = "0x18EA130", VA = "0x18EA130")]
			internal bool <FindSongPack>b__0(Song s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE24CC", Offset = "0xBE24CC")]
		private sealed class <LoadAudioFile>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD9C5")]
			private object <>2__current;

			[Token(Token = "0x4003039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Song song;

			[Token(Token = "0x400303A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57D4C")]
			public SongManager <>4__this;

			[Token(Token = "0x400303B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ResourceRequest <rr>5__2;

			[Token(Token = "0x170005B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600314A")]
				[Address(RVA = "0x18EC9E4", Offset = "0x18EC9E4", VA = "0x18EC9E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600314C")]
				[Address(RVA = "0x18ECAB4", Offset = "0x18ECAB4", VA = "0x18ECAB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003147")]
			[Address(RVA = "0x18EBCBC", Offset = "0x18EBCBC", VA = "0x18EBCBC")]
			[DebuggerHidden]
			public <LoadAudioFile>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003148")]
			[Address(RVA = "0x18EBD04", Offset = "0x18EBD04", VA = "0x18EBD04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003149")]
			[Address(RVA = "0x18EBD18", Offset = "0x18EBD18", VA = "0x18EBD18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600314B")]
			[Address(RVA = "0x18ECA14", Offset = "0x18ECA14", VA = "0x18ECA14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2508", Offset = "0xBE2508")]
		private sealed class <LoadAudioClipUsingUnity>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400303C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400303D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400303E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD9CD")]
			public Song song;

			[Token(Token = "0x400303F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SongManager <>4__this;

			[Token(Token = "0x4003040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57D54")]
			private string <fullPath>5__2;

			[Token(Token = "0x4003041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x170005BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003151")]
				[Address(RVA = "0x18EBBBC", Offset = "0x18EBBBC", VA = "0x18EBBBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003153")]
				[Address(RVA = "0x18EBC8C", Offset = "0x18EBC8C", VA = "0x18EBC8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600314D")]
			[Address(RVA = "0x18EA8C0", Offset = "0x18EA8C0", VA = "0x18EA8C0")]
			[DebuggerHidden]
			public <LoadAudioClipUsingUnity>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600314E")]
			[Address(RVA = "0x18EA908", Offset = "0x18EA908", VA = "0x18EA908", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600314F")]
			[Address(RVA = "0x18EAB88", Offset = "0x18EAB88", VA = "0x18EAB88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003150")]
			[Address(RVA = "0x18EAAB0", Offset = "0x18EAAB0", VA = "0x18EAAB0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003152")]
			[Address(RVA = "0x18EBBEC", Offset = "0x18EBBEC", VA = "0x18EBBEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2544", Offset = "0xBE2544")]
		private sealed class <ContinueMonitoringLoading>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD9D5")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x4003045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Song song;

			[Token(Token = "0x4003046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57D5C")]
			public SongManager <>4__this;

			[Token(Token = "0x170005BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003157")]
				[Address(RVA = "0x18EA7C0", Offset = "0x18EA7C0", VA = "0x18EA7C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003159")]
				[Address(RVA = "0x18EA890", Offset = "0x18EA890", VA = "0x18EA890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003154")]
			[Address(RVA = "0x18EA1D4", Offset = "0x18EA1D4", VA = "0x18EA1D4")]
			[DebuggerHidden]
			public <ContinueMonitoringLoading>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003155")]
			[Address(RVA = "0x18EA21C", Offset = "0x18EA21C", VA = "0x18EA21C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003156")]
			[Address(RVA = "0x18EA230", Offset = "0x18EA230", VA = "0x18EA230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003158")]
			[Address(RVA = "0x18EA7F0", Offset = "0x18EA7F0", VA = "0x18EA7F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool FULL_LOG;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string FILE_EXT;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string FILE_EXT_AUTOSAVE;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9B0")]
		private static readonly string RESOURCES_INTERNAL_SONGS_DIRECTORY_NAME;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string EXTERNAL_LAYOUTS_DIRECTORY_NAME_SONGS_DIRECTORY_NAME;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6BC")]
		public static readonly string INTERNAL_SONG_PATH_PREFIX;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int MAX_EXTERNAL_SONGS_IN_MEMORY;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] SONGS_INTERNAL;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] SONGS_INTERNAL_2;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9B6")]
		private List<List<Song>> internalSongs;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Song> externalSongs;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D754")]
		private string externalLayoutsFolder;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SongImporter> runningInstancesNAudio;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Song newSongToLoad;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FFMPEGAudioImporter singleRunningFFMPEGInstance;

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1752BDC", Offset = "0x1752BDC", VA = "0x1752BDC")]
		internal void Awake()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x175338C", Offset = "0x175338C", VA = "0x175338C")]
		private string AddInternal(string path)
		{
			return null;
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x175426C", Offset = "0x175426C", VA = "0x175426C")]
		private string RemoveInternal(string path)
		{
			return null;
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x17543A0", Offset = "0x17543A0", VA = "0x17543A0")]
		public Song RetrieveSong(PlaylistEntry entry)
		{
			return null;
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1754578", Offset = "0x1754578", VA = "0x1754578")]
		public int FindSongPack(Song song)
		{
			return default(int);
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x17534A0", Offset = "0x17534A0", VA = "0x17534A0")]
		public Song RetrieveSong(Song.SongType type, string fullPathToAudioFile)
		{
			return null;
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1755724", Offset = "0x1755724", VA = "0x1755724")]
		private void Update()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x17548B8", Offset = "0x17548B8", VA = "0x17548B8")]
		private void LoadSongInformationFromJSON(Song song, string json)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1755640", Offset = "0x1755640", VA = "0x1755640")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2749C", Offset = "0xC2749C")]
		private IEnumerator LoadAudioFile(Song song)
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1755B38", Offset = "0x1755B38", VA = "0x1755B38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2754C", Offset = "0xC2754C")]
		private IEnumerator LoadAudioClipUsingUnity(Song song)
		{
			return null;
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1755C1C", Offset = "0x1755C1C", VA = "0x1755C1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC275FC", Offset = "0xC275FC")]
		private IEnumerator ContinueMonitoringLoading(Song song, UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1755D28", Offset = "0x1755D28", VA = "0x1755D28")]
		private void SongImporterCallbackFFMPEG(FFMPEGAudioImporter importer)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1756374", Offset = "0x1756374", VA = "0x1756374")]
		private void DestroyInstance(FFMPEGAudioImporter importer)
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1756494", Offset = "0x1756494", VA = "0x1756494")]
		private void SongImporterCallbackNAudio(SongImporter si)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1755444", Offset = "0x1755444", VA = "0x1755444")]
		private void StoreSongInPreferences(string fullPath)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1756B64", Offset = "0x1756B64", VA = "0x1756B64")]
		internal List<Song> GetInternalSongs(int songPack)
		{
			return null;
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1744CFC", Offset = "0x1744CFC", VA = "0x1744CFC")]
		public void PersistAll(Song song, SaveType type)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1756C80", Offset = "0x1756C80", VA = "0x1756C80")]
		public SongManager()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class StreamAction : BeatAction
	{
		[Token(Token = "0x20007A8")]
		public enum CAType
		{
			[Token(Token = "0x4003048")]
			START,
			[Token(Token = "0x4003049")]
			INBETWEEN,
			[Token(Token = "0x400304A")]
			END
		}

		[Token(Token = "0x20007A9")]
		public enum Id
		{
			[Token(Token = "0x400304C")]
			A,
			[Token(Token = "0x400304D")]
			B
		}

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CAType type;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Id id;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion rotation;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9DD")]
		private Vector3 inHandle;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 outHandle;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D64")]
		private BezierListStruct streamInfo;

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x18F25DC", Offset = "0x18F25DC", VA = "0x18F25DC")]
		public StreamAction(Beat beat, Vector2 position, CAType type, Id id, Quaternion rotation, Vector3 inHandle, Vector3 outHandle)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x18F8458", Offset = "0x18F8458", VA = "0x18F8458")]
		public CAType GetCAType()
		{
			return default(CAType);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x18F8488", Offset = "0x18F8488", VA = "0x18F8488")]
		public Id GetId()
		{
			return default(Id);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x18F84B8", Offset = "0x18F84B8", VA = "0x18F84B8")]
		public Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x18F8500", Offset = "0x18F8500", VA = "0x18F8500")]
		public Vector3 GetInHandle()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x18F8540", Offset = "0x18F8540", VA = "0x18F8540")]
		public Vector3 GetOutHandle()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x18F8580", Offset = "0x18F8580", VA = "0x18F8580")]
		internal void SetRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x18F86B0", Offset = "0x18F86B0", VA = "0x18F86B0")]
		internal void SetInHandle(Vector3 handle)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x18F8710", Offset = "0x18F8710", VA = "0x18F8710")]
		internal void SetOutHandle(Vector3 handle)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x18F8770", Offset = "0x18F8770", VA = "0x18F8770")]
		internal void SetCAType(CAType type)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x18F87A8", Offset = "0x18F87A8", VA = "0x18F87A8", Slot = "4")]
		internal override BeatAction DeepClone(Beat parent)
		{
			return null;
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x18F891C", Offset = "0x18F891C", VA = "0x18F891C")]
		internal void AdjustSetId(Id newId)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x18F8954", Offset = "0x18F8954", VA = "0x18F8954", Slot = "5")]
		internal override void AdjustPositionForPlayWindow(Vector2 scale)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x18F8B04", Offset = "0x18F8B04", VA = "0x18F8B04")]
		internal void SetStreamInfo(BezierListStruct streamInfo)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x18F8B90", Offset = "0x18F8B90", VA = "0x18F8B90")]
		internal BezierListStruct GetStreamInfo()
		{
			return null;
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x18F8BC0", Offset = "0x18F8BC0", VA = "0x18F8BC0")]
		internal void Destroy()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	internal class StreamInfo
	{
		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StreamAction.Id id;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StreamAction currentStreamStartAction;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9ED")]
		public float currentStreamStartBeat;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float currentStreamEndBeat;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D74")]
		internal BezierSpline spline;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float streamLengthInBeats;

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x18F9E0C", Offset = "0x18F9E0C", VA = "0x18F9E0C")]
		public StreamInfo(StreamAction.Id id)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x18F9E98", Offset = "0x18F9E98", VA = "0x18F9E98")]
		public Vector2 GetPosition(float beatNumber)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x18F9FB4", Offset = "0x18F9FB4", VA = "0x18F9FB4")]
		internal void Destroy()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	internal class Swing
	{
		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDoubleSwing;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HittableAction b1_1;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9F5")]
		private HittableAction b1_2;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HittableAction b1_3;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D7C")]
		private Swing otherSwing;

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x18FF670", Offset = "0x18FF670", VA = "0x18FF670")]
		public Swing(bool isDoubleSwing, HittableAction firstBall, HittableAction midBall, HittableAction lastBall)
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x18FF714", Offset = "0x18FF714", VA = "0x18FF714")]
		internal void Register()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x18FF7A8", Offset = "0x18FF7A8", VA = "0x18FF7A8")]
		internal void SetOtherSwing(Swing s2)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x18FF7E0", Offset = "0x18FF7E0", VA = "0x18FF7E0")]
		internal HittableAction GetFirstBall()
		{
			return null;
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x18FF810", Offset = "0x18FF810", VA = "0x18FF810")]
		internal HittableAction GetLastBall()
		{
			return null;
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x18FF840", Offset = "0x18FF840", VA = "0x18FF840")]
		internal bool IsDouble()
		{
			return default(bool);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x18FF884", Offset = "0x18FF884", VA = "0x18FF884")]
		internal Swing GetOtherSwing()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A4")]
	public class WallObstacleAction : ObstacleAction
	{
		[Token(Token = "0x20007AA")]
		public enum WallType
		{
			[Token(Token = "0x400304F")]
			SingleColumn,
			[Token(Token = "0x4003050")]
			DoubleColumn,
			[Token(Token = "0x4003051")]
			ArchwayCenter,
			[Token(Token = "0x4003052")]
			ArchwayLeft,
			[Token(Token = "0x4003053")]
			ArchwayRight,
			[Token(Token = "0x4003054")]
			OpeningLeft,
			[Token(Token = "0x4003055")]
			OpeningRight,
			[Token(Token = "0x4003056")]
			BarAcrossTheForehead
		}

		[Token(Token = "0x20007AB")]
		public enum WallPlacementType
		{
			[Token(Token = "0x4003058")]
			MustBeCentered,
			[Token(Token = "0x4003059")]
			CanMoveHorizontal,
			[Token(Token = "0x400305A")]
			CanMoveVertical,
			[Token(Token = "0x400305B")]
			MustBeLeftOrRight
		}

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int wallType;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float depthInBeats;

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x18F24B4", Offset = "0x18F24B4", VA = "0x18F24B4")]
		public WallObstacleAction(Beat beat, Vector2 position, int wallType, float depthInBeats)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x190DB34", Offset = "0x190DB34", VA = "0x190DB34")]
		internal int GetTypeOfWall()
		{
			return default(int);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x190DB64", Offset = "0x190DB64", VA = "0x190DB64")]
		internal static int GetTypeOfWallAsInt(WallType wallType)
		{
			return default(int);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x190DB84", Offset = "0x190DB84", VA = "0x190DB84")]
		internal static WallType GetTypeOfWallAsEnum(int wallType)
		{
			return default(WallType);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x190DBA4", Offset = "0x190DBA4", VA = "0x190DBA4")]
		internal static WallPlacementType GetWallPlacementType(int wallType)
		{
			return default(WallPlacementType);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x190DD08", Offset = "0x190DD08", VA = "0x190DD08")]
		internal void SetTypeOfWall(int type)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x190DD40", Offset = "0x190DD40", VA = "0x190DD40")]
		internal float GetDepthInBeats()
		{
			return default(float);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x190DD70", Offset = "0x190DD70", VA = "0x190DD70")]
		internal void SetDepthInBeats(float depthInBeats)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x190DDA8", Offset = "0x190DDA8", VA = "0x190DDA8", Slot = "4")]
		internal override BeatAction DeepClone(Beat parent)
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x190DE70", Offset = "0x190DE70", VA = "0x190DE70", Slot = "5")]
		internal override void AdjustPositionForPlayWindow(Vector2 scale)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x190E3E0", Offset = "0x190E3E0", VA = "0x190E3E0")]
		internal Vector2 GetFrontScale(Vector2 scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x190E620", Offset = "0x190E620", VA = "0x190E620")]
		internal Bounds[] GetAllowedWindows(Vector2 scale)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A5")]
	public class SongStatistic
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Song song;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D75C")]
		public Song.Difficulty currentDifficulty;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int songNumber;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int scoreWithoutBonus;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA14")]
		public int previousScore;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool playFireworks;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D94")]
		public RatingCalculator.Rating rating;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool songFinished;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int maxCombo;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int streamElementsSpawned;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA1C")]
		public int streamElementsMissed;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int streamElementsCatched;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57D9C")]
		public int streamSpawnCount;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int streamMissedCount;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float streamsCatched;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int fails;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA24")]
		public int maxFails;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int failRate;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DA4")]
		public int evadeRate;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int missed;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hitsPossible;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int perfectHits;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA2C")]
		public float caloriesSession;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int squatsSession;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DAC")]
		public int totalHeartRate;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int totalHeartRateSeconds;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int minHeartRate;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int maxHeartRate;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA34")]
		public float totalMovementInMeters;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Dictionary<GameConfiguration.Modifier, bool> modifiers;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DB4")]
		public int strengthBonus;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int activityBonus;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool flawlessVictory;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool newHighscore;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA3C")]
		public float maxHitSpeed;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float averageHitSpeed;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DBC")]
		public float lastHitSpeed;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hits;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int accumulatedHitsScoreWithoutModifier;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lastHitSpeedLeft;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA44")]
		public float averageHitSpeedLeft;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxHitSpeedLeft;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DC4")]
		public int hitsLeft;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lastHitSpeedRight;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float averageHitSpeedRight;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxHitSpeedRight;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA4C")]
		public int hitsRight;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isImperial;

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x18EDA5C", Offset = "0x18EDA5C", VA = "0x18EDA5C")]
		public SongStatistic()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x18EE080", Offset = "0x18EE080", VA = "0x18EE080")]
		public int GetTotalScore()
		{
			return default(int);
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x18EE0D8", Offset = "0x18EE0D8", VA = "0x18EE0D8")]
		public void ConvertToImperial()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class StatusPositioner : MonoBehaviour
	{
		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DCC")]
		public GameObject score;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject statusLeft;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject statusRight;

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x18F8130", Offset = "0x18F8130", VA = "0x18F8130")]
		public void SetupStatusDisplay()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x18F8360", Offset = "0x18F8360", VA = "0x18F8360")]
		public StatusPositioner()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class StreamCounter : MonoBehaviour
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int streamCounter;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA54")]
		private int maximum;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image circularBar;

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x18F8EF8", Offset = "0x18F8EF8", VA = "0x18F8EF8")]
		public void SetActive()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x18F906C", Offset = "0x18F906C", VA = "0x18F906C")]
		public float GetCurrentBarFillandReset()
		{
			return default(float);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x18F90E0", Offset = "0x18F90E0", VA = "0x18F90E0")]
		public void DisableAndReset()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x18F91BC", Offset = "0x18F91BC", VA = "0x18F91BC")]
		public bool IncrementUntilFull()
		{
			return default(bool);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x18F8FE0", Offset = "0x18F8FE0", VA = "0x18F8FE0")]
		private void UpdateBarFillAmount()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x18F92B4", Offset = "0x18F92B4", VA = "0x18F92B4")]
		public StreamCounter()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class VFXController : MonoBehaviour
	{
		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DD4")]
		private VFXPoolManager vfxPool;

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1906850", Offset = "0x1906850", VA = "0x1906850")]
		private void Awake()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x19069B4", Offset = "0x19069B4", VA = "0x19069B4")]
		public ParticleSystem InstantiateAtPosition(ParticleSystem ps, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1906C10", Offset = "0x1906C10", VA = "0x1906C10")]
		public ParticleSystem PlayAtPosition(ParticleSystem ps, Transform _transform, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1906F20", Offset = "0x1906F20", VA = "0x1906F20")]
		public VFXController()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class ShockwaveAnimationControl : StateMachineBehaviour
	{
		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ShockwaveControl shockwaveControl;

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x177BF04", Offset = "0x177BF04", VA = "0x177BF04", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x177C00C", Offset = "0x177C00C", VA = "0x177C00C")]
		public void SetShockwaveControl(ShockwaveControl shockwaveControl)
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x177C044", Offset = "0x177C044", VA = "0x177C044")]
		public ShockwaveAnimationControl()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class ShockwaveControl : MonoBehaviour
	{
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem effect;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool running;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA5C")]
		private Vector3 triggeredPosition;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Quaternion triggeredRotation;

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x177C074", Offset = "0x177C074", VA = "0x177C074")]
		public void StartShockwave()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x177C2B8", Offset = "0x177C2B8", VA = "0x177C2B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x177C3A8", Offset = "0x177C3A8", VA = "0x177C3A8")]
		public void ShockwaveAnimationCompleted()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x177C4CC", Offset = "0x177C4CC", VA = "0x177C4CC")]
		public ShockwaveControl()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public abstract class PowerFistCharger : MonoBehaviour
	{
		[Token(Token = "0x6002479")]
		public abstract void SetChargeLevel(float level);

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x176E478", Offset = "0x176E478", VA = "0x176E478")]
		protected PowerFistCharger()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class PowerFistChargerDesert : PowerFistCharger
	{
		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DDC")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float particlesMin;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float particlesMax;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] maxLoadEffects;

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x176E4A8", Offset = "0x176E4A8", VA = "0x176E4A8", Slot = "4")]
		public override void SetChargeLevel(float level)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x176EA68", Offset = "0x176EA68", VA = "0x176EA68")]
		public PowerFistChargerDesert()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class PowerFistChargerGeneric : PowerFistCharger
	{
		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA64")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float particlesMin;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D764")]
		[SerializeField]
		private float particlesMax;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material[] materials;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float materialMin;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float materialMax;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA6B")]
		[SerializeField]
		private GameObject[] maxLoadEffects;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Material[] maxLoadBlinkingLights;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DE4")]
		private ParticleSystem.EmissionModule emission;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool previouslyFullyCharged;

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x176EA98", Offset = "0x176EA98", VA = "0x176EA98")]
		private void Start()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x176EC30", Offset = "0x176EC30", VA = "0x176EC30", Slot = "4")]
		public override void SetChargeLevel(float level)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x176F6D0", Offset = "0x176F6D0", VA = "0x176F6D0")]
		public PowerFistChargerGeneric()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class PowerFistChargerMedieval : PowerFistCharger
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem[] particles1;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem[] particles2;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA73")]
		[SerializeField]
		private float particles1Min;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float particles1Max;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DEC")]
		[SerializeField]
		private float particles2Min;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float particles2Max;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] maxLoadEffects;

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x176F700", Offset = "0x176F700", VA = "0x176F700", Slot = "4")]
		public override void SetChargeLevel(float level)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x176FE7C", Offset = "0x176FE7C", VA = "0x176FE7C")]
		public PowerFistChargerMedieval()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class PowerFistChargerSky : PowerFistCharger
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA7B")]
		[SerializeField]
		private float particlesMin;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float particlesMax;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DF4")]
		[SerializeField]
		private Material[] materials;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float materialMin;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float materialMax;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] maxLoadEffects;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA83")]
		private ParticleSystem.EmissionModule emission;

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x176FEAC", Offset = "0x176FEAC", VA = "0x176FEAC", Slot = "4")]
		public override void SetChargeLevel(float level)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x17704F0", Offset = "0x17704F0", VA = "0x17704F0")]
		public PowerFistChargerSky()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class PowerFistChargerSpace : PowerFistCharger
	{
		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57DFC")]
		[SerializeField]
		private float particlesMin;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float particlesMax;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material[] materials;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float materialMin;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA8B")]
		[SerializeField]
		private float materialMax;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject[] maxLoadEffects;

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1770520", Offset = "0x1770520", VA = "0x1770520", Slot = "4")]
		public override void SetChargeLevel(float level)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1770C00", Offset = "0x1770C00", VA = "0x1770C00")]
		public PowerFistChargerSpace()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class WeaponDeployerPowerFist : WeaponDeployer
	{
		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E04")]
		public ShockwaveControl shockwaveControl;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1910E1C", Offset = "0x1910E1C", VA = "0x1910E1C", Slot = "4")]
		internal override void TriggerDeployment(bool turnOn)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1910E8C", Offset = "0x1910E8C", VA = "0x1910E8C", Slot = "5")]
		internal override void ShowCollision()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1910EA0", Offset = "0x1910EA0", VA = "0x1910EA0")]
		public WeaponDeployerPowerFist()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class WeaponDeployerPowerFistGeneric : WeaponDeployer
	{
		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ShockwaveControl shockwaveControl;

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1910ED0", Offset = "0x1910ED0", VA = "0x1910ED0", Slot = "4")]
		internal override void TriggerDeployment(bool turnOn)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1910F40", Offset = "0x1910F40", VA = "0x1910F40", Slot = "5")]
		internal override void ShowCollision()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1910F54", Offset = "0x1910F54", VA = "0x1910F54")]
		public WeaponDeployerPowerFistGeneric()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class WeaponDeployerPowerFistSky : WeaponDeployer
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ShockwaveControl shockwaveControl;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Animator powerfistAnimator;

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1910F84", Offset = "0x1910F84", VA = "0x1910F84", Slot = "4")]
		internal override void TriggerDeployment(bool turnOn)
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x1911068", Offset = "0x1911068", VA = "0x1911068", Slot = "5")]
		internal override void ShowCollision()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x191107C", Offset = "0x191107C", VA = "0x191107C")]
		public WeaponDeployerPowerFistSky()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class WeaponDeployerShieldMedieval : WeaponDeployer
	{
		[Token(Token = "0x20007AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2580", Offset = "0xBE2580")]
		private sealed class <AnimateShield>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400305C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400305D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400305E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDAA3")]
			public WeaponDeployerShieldMedieval <>4__this;

			[Token(Token = "0x400305F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public bool flyingTowardsHand;

			[Token(Token = "0x170005BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600315D")]
				[Address(RVA = "0x1912770", Offset = "0x1912770", VA = "0x1912770", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600315F")]
				[Address(RVA = "0x1912840", Offset = "0x1912840", VA = "0x1912840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600315A")]
			[Address(RVA = "0x19113E8", Offset = "0x19113E8", VA = "0x19113E8")]
			[DebuggerHidden]
			public <AnimateShield>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600315B")]
			[Address(RVA = "0x1911830", Offset = "0x1911830", VA = "0x1911830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600315C")]
			[Address(RVA = "0x1911844", Offset = "0x1911844", VA = "0x1911844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600315E")]
			[Address(RVA = "0x19127A0", Offset = "0x19127A0", VA = "0x19127A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA93")]
		public GameObject theShield;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float durationInSeconds;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E0C")]
		public LLManager.HandSide handSide;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool debug;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 localEndPosition;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 localEndRotation;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA9B")]
		private bool flyActive;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Coroutine flyRoutine;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E14")]
		private float t;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera cam;

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x19110AC", Offset = "0x19110AC", VA = "0x19110AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x19111F8", Offset = "0x19111F8", VA = "0x19111F8", Slot = "5")]
		internal override void ShowCollision()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x191120C", Offset = "0x191120C", VA = "0x191120C", Slot = "4")]
		internal override void TriggerDeployment(bool flyTowardsTheHand)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x19112F0", Offset = "0x19112F0", VA = "0x19112F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC276AC", Offset = "0xC276AC")]
		private IEnumerator AnimateShield(bool flyingTowardsHand)
		{
			return null;
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1911430", Offset = "0x1911430", VA = "0x1911430")]
		private void VisualizePath(Vector3 initialWorld, Vector3 middleWorld, Vector3 endWorld)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x19117EC", Offset = "0x19117EC", VA = "0x19117EC")]
		public WeaponDeployerShieldMedieval()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public enum WeaponType
	{
		[Token(Token = "0x400209F")]
		Hands = 0,
		[Token(Token = "0x40020A0")]
		Hammer = 1,
		[Token(Token = "0x40020A1")]
		Shield = 2,
		[Token(Token = "0x40020A2")]
		PowerFist = 3,
		[Token(Token = "0x40020A3")]
		Head = 4,
		[Token(Token = "0x40020A4")]
		None = 255
	}
	[Token(Token = "0x20004B6")]
	public class GamespaceManager : MonoBehaviour
	{
		[Token(Token = "0x20007AD")]
		private enum CalculationResult
		{
			[Token(Token = "0x4003061")]
			OK,
			[Token(Token = "0x4003062")]
			IsStationaryMode,
			[Token(Token = "0x4003063")]
			GuardianIsTooSmallInGeneral,
			[Token(Token = "0x4003064")]
			CenterOutsideGuardian,
			[Token(Token = "0x4003065")]
			CalculatedSpaceTooSmallDueToRecentering,
			[Token(Token = "0x4003066")]
			ManualWidthLargerThanTotalAvailable,
			[Token(Token = "0x4003067")]
			ManualWidthLargerThanAvailableInRotation
		}

		[Token(Token = "0x20007AE")]
		private class GuardianWarning
		{
			[Token(Token = "0x4003068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string width_meters;

			[Token(Token = "0x4003069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string width_feet;

			[Token(Token = "0x400306A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string depth_meters;

			[Token(Token = "0x400306B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDAE2")]
			public string depth_feet;

			[Token(Token = "0x6003160")]
			[Address(RVA = "0x1799B70", Offset = "0x1799B70", VA = "0x1799B70")]
			public GuardianWarning(string width_meters, string width_feet, string depth_meters, string depth_feet)
			{
			}
		}

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE25BC", Offset = "0xBE25BC")]
		private sealed class <ResetPlayspace>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400306C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x400306D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57E54")]
			private object <>2__current;

			[Token(Token = "0x400306E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GamespaceManager <>4__this;

			[Token(Token = "0x170005C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003164")]
				[Address(RVA = "0x179A334", Offset = "0x179A334", VA = "0x179A334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003166")]
				[Address(RVA = "0x179A404", Offset = "0x179A404", VA = "0x179A404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003161")]
			[Address(RVA = "0x179441C", Offset = "0x179441C", VA = "0x179441C")]
			[DebuggerHidden]
			public <ResetPlayspace>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6003162")]
			[Address(RVA = "0x1799FC0", Offset = "0x1799FC0", VA = "0x1799FC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003163")]
			[Address(RVA = "0x1799FD4", Offset = "0x1799FD4", VA = "0x1799FD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003165")]
			[Address(RVA = "0x179A364", Offset = "0x179A364", VA = "0x179A364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float STEP_SIZE;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float TWO_THIRDS;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool DEBUG;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDAB3")]
		public static readonly float MIN_WIDTH;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly float MAX_WIDTH;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E2C")]
		public static readonly float DEFAULT_WIDTH;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float DEFAULT_DEPTH;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int DECIMAL_PLACES;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SIZES_PLAYSPACEWIDTH;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDABB")]
		private static readonly string SETTINGS_SIZES_PLAYSPACEWIDTH_AUTO;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static GamespaceManager INSTANCE;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isAutoMode;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float manuallySetWidthValue;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 manuallySetLocation;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDAC2")]
		private float manuallySetRotation;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 platformCenterLocation;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E34")]
		public Vector3 platformDirection;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float platformCenterRotation;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float platformWidth;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float platformDepth;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDACA")]
		private float calculatedWidth;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float calculatedDepth;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E3C")]
		private float gamespaceWidth;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float gamespaceDepth;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CalculationResult result;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlatRect previousSize;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDAD2")]
		private Rig rig;

		[Token(Token = "0x1400003B")]
		public event Action GamespaceRecalculated
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x17905A8", Offset = "0x17905A8", VA = "0x17905A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2775C", Offset = "0xC2775C")]
			add
			{
			}
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x1790E1C", Offset = "0x1790E1C", VA = "0x1790E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27798", Offset = "0xC27798")]
			remove
			{
			}
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1793D0C", Offset = "0x1793D0C", VA = "0x1793D0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1794318", Offset = "0x1794318", VA = "0x1794318")]
		private void Start()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1794360", Offset = "0x1794360", VA = "0x1794360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC277D4", Offset = "0xC277D4")]
		private IEnumerator ResetPlayspace()
		{
			return null;
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1794464", Offset = "0x1794464", VA = "0x1794464")]
		private void GamespaceManager_PotentialViewReset(object sender)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1797C20", Offset = "0x1797C20", VA = "0x1797C20")]
		internal bool IsAutoActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1797C64", Offset = "0x1797C64", VA = "0x1797C64")]
		internal float GetGameplayWidth()
		{
			return default(float);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1797C94", Offset = "0x1797C94", VA = "0x1797C94")]
		internal float GetGameplayDepth()
		{
			return default(float);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1791D6C", Offset = "0x1791D6C", VA = "0x1791D6C")]
		internal float GetAdjustedRotationForUI()
		{
			return default(float);
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1797CC4", Offset = "0x1797CC4", VA = "0x1797CC4")]
		internal float GetManuallySetRotation()
		{
			return default(float);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1797CF4", Offset = "0x1797CF4", VA = "0x1797CF4")]
		internal Vector3 GetManuallySetLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1797D34", Offset = "0x1797D34", VA = "0x1797D34")]
		internal float GetManualWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1791B60", Offset = "0x1791B60", VA = "0x1791B60")]
		internal Vector2 GetAdjustedCenterPointForUI()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1791800", Offset = "0x1791800", VA = "0x1791800")]
		internal float GetPlatformWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x17918D4", Offset = "0x17918D4", VA = "0x17918D4")]
		internal float GetPlatformDepth()
		{
			return default(float);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x1792DE4", Offset = "0x1792DE4", VA = "0x1792DE4")]
		internal void SetAuto(bool autoIsNowSet)
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1794498", Offset = "0x1794498", VA = "0x1794498")]
		private void PerformGamespaceCalculations()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x179903C", Offset = "0x179903C", VA = "0x179903C")]
		private bool IsRectangleContained(Vector3[] innerRectangle, Vector3[] outerRectangle)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1798D38", Offset = "0x1798D38", VA = "0x1798D38")]
		private Vector3[] RotateRectangle(Vector3 center, Vector3[] currentArea)
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1799384", Offset = "0x1799384", VA = "0x1799384")]
		private Vector3 TranslateToManuallyRotatedRecenteredSpace(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1798AD8", Offset = "0x1798AD8", VA = "0x1798AD8")]
		private static Vector3[] GetOriginBasedRectangle(float currentX, float currentZ)
		{
			return null;
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1797D64", Offset = "0x1797D64", VA = "0x1797D64")]
		private void SetMinimumValues()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x17919A8", Offset = "0x17919A8", VA = "0x17919A8")]
		public bool IsStationaryMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1792FE8", Offset = "0x1792FE8", VA = "0x1792FE8")]
		internal void SetManualWidth(float value)
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1799540", Offset = "0x1799540", VA = "0x1799540")]
		private void Update()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1799688", Offset = "0x1799688", VA = "0x1799688")]
		private bool HasGuardianChanged(FlatRect currentSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1791EBC", Offset = "0x1791EBC", VA = "0x1791EBC")]
		internal bool NeedsWarning()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1799AAC", Offset = "0x1799AAC", VA = "0x1799AAC")]
		internal string GetLongWarningText()
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1791F38", Offset = "0x1791F38", VA = "0x1791F38")]
		internal string GetShortWarningText()
		{
			return null;
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x17991E0", Offset = "0x17991E0", VA = "0x17991E0")]
		private float GetCappedManuallySetDepth()
		{
			return default(float);
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x17914F4", Offset = "0x17914F4", VA = "0x17914F4")]
		internal void Recenter(Vector3 newPosition, float newRotation)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x179811C", Offset = "0x179811C", VA = "0x179811C")]
		private void CreateLine(string name, Vector3 fromWorld, Vector3 toWorld, Color color)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1797EC8", Offset = "0x1797EC8", VA = "0x1797EC8")]
		private void CreateSphere(string name, Vector3 p, Color c)
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x179860C", Offset = "0x179860C", VA = "0x179860C")]
		public static bool IsPointInPolygon(Vector3[] polygon, Vector3 testPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1799C00", Offset = "0x1799C00", VA = "0x1799C00")]
		public GamespaceManager()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class ExperienceStorageHelper
	{
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1718568", Offset = "0x1718568", VA = "0x1718568")]
		public static void StoreExperienceToDisk(int experience)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1718F74", Offset = "0x1718F74", VA = "0x1718F74")]
		public static int GetExperienceFromDisk()
		{
			return default(int);
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1718BE8", Offset = "0x1718BE8", VA = "0x1718BE8")]
		public static string GetExperienceFilePath()
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x17195B8", Offset = "0x17195B8", VA = "0x17195B8")]
		public ExperienceStorageHelper()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public abstract class LLController
	{
		[Token(Token = "0x20007B0")]
		public enum VRControllerType
		{
			[Token(Token = "0x4003070")]
			Unknown,
			[Token(Token = "0x4003071")]
			Vive,
			[Token(Token = "0x4003072")]
			OculusTouchRiftOriginal,
			[Token(Token = "0x4003073")]
			OculusTouchRiftSAndQuest,
			[Token(Token = "0x4003074")]
			WMR,
			[Token(Token = "0x4003075")]
			Knuckles,
			[Token(Token = "0x4003076")]
			Cosmos,
			[Token(Token = "0x4003077")]
			PicoNeo2,
			[Token(Token = "0x4003078")]
			PicoNeo3,
			[Token(Token = "0x4003079")]
			YVR
		}

		[Token(Token = "0x20007B1")]
		public struct ControllerVelocity
		{
			[Token(Token = "0x400307A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D764")]
			public Vector3 velocity;

			[Token(Token = "0x400307B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 angularVelocity;

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x18B86E8", Offset = "0x18B86E8", VA = "0x18B86E8")]
			public ControllerVelocity(Vector3 velocity, Vector3 angularVelocity)
			{
			}
		}

		[Token(Token = "0x20007B2")]
		public enum PulseType
		{
			[Token(Token = "0x400307D")]
			STREAM,
			[Token(Token = "0x400307E")]
			HIT
		}

		[Token(Token = "0x20007B3")]
		public enum JoystickPosition
		{
			[Token(Token = "0x4003080")]
			NONE,
			[Token(Token = "0x4003081")]
			UP,
			[Token(Token = "0x4003082")]
			RIGHT,
			[Token(Token = "0x4003083")]
			DOWN,
			[Token(Token = "0x4003084")]
			LEFT
		}

		[Token(Token = "0x20007B4")]
		public delegate void HardwareButtonEventHandler(LLController sender);

		[Token(Token = "0x20007B5")]
		public delegate void HardwareAxisEventHandler(object sender, Vector2 value);

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isPaused;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57E74")]
		private Position lastPosition;

		[Token(Token = "0x1400003C")]
		public event HardwareButtonEventHandler TakeInteractButtonDown
		{
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x17906F4", Offset = "0x17906F4", VA = "0x17906F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27884", Offset = "0xC27884")]
			add
			{
			}
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x1790F68", Offset = "0x1790F68", VA = "0x1790F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC278C0", Offset = "0xC278C0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event HardwareButtonEventHandler TakeInteractButtonUp
		{
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x17B03EC", Offset = "0x17B03EC", VA = "0x17B03EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC278FC", Offset = "0xC278FC")]
			add
			{
			}
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x17B0774", Offset = "0x17B0774", VA = "0x17B0774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27938", Offset = "0xC27938")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event HardwareButtonEventHandler AppMenuDown
		{
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x17BC094", Offset = "0x17BC094", VA = "0x17BC094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27974", Offset = "0xC27974")]
			add
			{
			}
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x17BC1E0", Offset = "0x17BC1E0", VA = "0x17BC1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC279B0", Offset = "0xC279B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event HardwareButtonEventHandler AppMenuUp
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x17BC32C", Offset = "0x17BC32C", VA = "0x17BC32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC279EC", Offset = "0xC279EC")]
			add
			{
			}
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x17BC478", Offset = "0x17BC478", VA = "0x17BC478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27A28", Offset = "0xC27A28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event HardwareButtonEventHandler UseButtonDown
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x17BC5C4", Offset = "0x17BC5C4", VA = "0x17BC5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27A64", Offset = "0xC27A64")]
			add
			{
			}
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x17BC710", Offset = "0x17BC710", VA = "0x17BC710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27AA0", Offset = "0xC27AA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event HardwareButtonEventHandler UseButtonUp
		{
			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x17BC85C", Offset = "0x17BC85C", VA = "0x17BC85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27ADC", Offset = "0xC27ADC")]
			add
			{
			}
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x17BC9A8", Offset = "0x17BC9A8", VA = "0x17BC9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27B18", Offset = "0xC27B18")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event HardwareButtonEventHandler TeleportButtonDown
		{
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x17BCAF4", Offset = "0x17BCAF4", VA = "0x17BCAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27B54", Offset = "0xC27B54")]
			add
			{
			}
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x17BCC40", Offset = "0x17BCC40", VA = "0x17BCC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27B90", Offset = "0xC27B90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event HardwareButtonEventHandler TeleportButtonUp
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x17BCD8C", Offset = "0x17BCD8C", VA = "0x17BCD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27BCC", Offset = "0xC27BCC")]
			add
			{
			}
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x17BCED8", Offset = "0x17BCED8", VA = "0x17BCED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27C08", Offset = "0xC27C08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event HardwareButtonEventHandler Pause
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x17BD024", Offset = "0x17BD024", VA = "0x17BD024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27C44", Offset = "0xC27C44")]
			add
			{
			}
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x17BD170", Offset = "0x17BD170", VA = "0x17BD170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27C80", Offset = "0xC27C80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event HardwareButtonEventHandler UnPause
		{
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x17BD2BC", Offset = "0x17BD2BC", VA = "0x17BD2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27CBC", Offset = "0xC27CBC")]
			add
			{
			}
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x17BD408", Offset = "0x17BD408", VA = "0x17BD408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27CF8", Offset = "0xC27CF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event HardwareButtonEventHandler TrackpadUp
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x17BD554", Offset = "0x17BD554", VA = "0x17BD554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27D34", Offset = "0xC27D34")]
			add
			{
			}
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x17BD6A0", Offset = "0x17BD6A0", VA = "0x17BD6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27D70", Offset = "0xC27D70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event HardwareButtonEventHandler TrackpadDown
		{
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x17BD7EC", Offset = "0x17BD7EC", VA = "0x17BD7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27DAC", Offset = "0xC27DAC")]
			add
			{
			}
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x17BD938", Offset = "0x17BD938", VA = "0x17BD938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27DE8", Offset = "0xC27DE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event HardwareButtonEventHandler JoystickUpUp
		{
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x17BDA84", Offset = "0x17BDA84", VA = "0x17BDA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27E24", Offset = "0xC27E24")]
			add
			{
			}
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x17BDBD0", Offset = "0x17BDBD0", VA = "0x17BDBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27E60", Offset = "0xC27E60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event HardwareButtonEventHandler JoystickUpDown
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x17BDD1C", Offset = "0x17BDD1C", VA = "0x17BDD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27E9C", Offset = "0xC27E9C")]
			add
			{
			}
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x17BDE68", Offset = "0x17BDE68", VA = "0x17BDE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27ED8", Offset = "0xC27ED8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event HardwareButtonEventHandler JoystickDownUp
		{
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x17BDFB4", Offset = "0x17BDFB4", VA = "0x17BDFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27F14", Offset = "0xC27F14")]
			add
			{
			}
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x17BE100", Offset = "0x17BE100", VA = "0x17BE100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27F50", Offset = "0xC27F50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event HardwareButtonEventHandler JoystickDownDown
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x17BE24C", Offset = "0x17BE24C", VA = "0x17BE24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27F8C", Offset = "0xC27F8C")]
			add
			{
			}
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x17BE398", Offset = "0x17BE398", VA = "0x17BE398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC27FC8", Offset = "0xC27FC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event HardwareButtonEventHandler JoystickLeftUp
		{
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x17BE4E4", Offset = "0x17BE4E4", VA = "0x17BE4E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28004", Offset = "0xC28004")]
			add
			{
			}
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x17BE630", Offset = "0x17BE630", VA = "0x17BE630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28040", Offset = "0xC28040")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event HardwareButtonEventHandler JoystickLeftDown
		{
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x17BE77C", Offset = "0x17BE77C", VA = "0x17BE77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2807C", Offset = "0xC2807C")]
			add
			{
			}
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x17BE8C8", Offset = "0x17BE8C8", VA = "0x17BE8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC280B8", Offset = "0xC280B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event HardwareButtonEventHandler JoystickRightUp
		{
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x17BEA14", Offset = "0x17BEA14", VA = "0x17BEA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC280F4", Offset = "0xC280F4")]
			add
			{
			}
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x17BEB60", Offset = "0x17BEB60", VA = "0x17BEB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28130", Offset = "0xC28130")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event HardwareButtonEventHandler JoystickRightDown
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x17BECAC", Offset = "0x17BECAC", VA = "0x17BECAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2816C", Offset = "0xC2816C")]
			add
			{
			}
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x17BEDF8", Offset = "0x17BEDF8", VA = "0x17BEDF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC281A8", Offset = "0xC281A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event HardwareAxisEventHandler AxisPressed
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x17BEF44", Offset = "0x17BEF44", VA = "0x17BEF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC281E4", Offset = "0xC281E4")]
			add
			{
			}
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x17BF090", Offset = "0x17BF090", VA = "0x17BF090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28220", Offset = "0xC28220")]
			remove
			{
			}
		}

		[Token(Token = "0x60024E8")]
		public abstract VRControllerType GetControllerType();

		[Token(Token = "0x60024E9")]
		public abstract void DoHapticPulse(PulseType type);

		[Token(Token = "0x60024EA")]
		public abstract ControllerVelocity GetControllerVelocity(Transform playArea);

		[Token(Token = "0x60024EB")]
		public abstract void Update(Transform controllerTransform);

		[Token(Token = "0x60024EC")]
		public abstract void Start();

		[Token(Token = "0x60024ED")]
		public abstract JoystickPosition GetJoystickPosition();

		[Token(Token = "0x60024EE")]
		public abstract void SetTestValues(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity);

		[Token(Token = "0x60024EF")]
		public abstract GameObject GetVisualControllerRepresentation(GameObject parent);

		[Token(Token = "0x60024F0")]
		public abstract void ConfigureVisualControllerRepresentation(GameObject model);

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x17BF1DC", Offset = "0x17BF1DC", VA = "0x17BF1DC")]
		public void SetPause(bool shouldPause)
		{
		}

		[Token(Token = "0x60024F2")]
		internal abstract Position GetControllerPosition_Internal();

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x17BF228", Offset = "0x17BF228", VA = "0x17BF228")]
		public Position GetControllerPosition()
		{
			return null;
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x17BF298", Offset = "0x17BF298", VA = "0x17BF298")]
		internal void OnTakeInteractButtonDown()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x17BF374", Offset = "0x17BF374", VA = "0x17BF374")]
		internal void OnTakeInteractButtonUp()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x17BF3B8", Offset = "0x17BF3B8", VA = "0x17BF3B8")]
		internal void OnAppMenuDown()
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x17BF3FC", Offset = "0x17BF3FC", VA = "0x17BF3FC")]
		internal void OnAppMenuUp()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x17BF440", Offset = "0x17BF440", VA = "0x17BF440")]
		internal void OnUseButtonDown()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x17BF484", Offset = "0x17BF484", VA = "0x17BF484")]
		internal void OnUseButtonUp()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x17BF4C8", Offset = "0x17BF4C8", VA = "0x17BF4C8")]
		internal void OnTeleportButtonDown()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x17BF50C", Offset = "0x17BF50C", VA = "0x17BF50C")]
		internal void OnTeleportButtonUp()
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x17BF550", Offset = "0x17BF550", VA = "0x17BF550")]
		internal void OnTrackpadDown()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x17BF594", Offset = "0x17BF594", VA = "0x17BF594")]
		internal void OnTrackpadUp()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x17BF5D8", Offset = "0x17BF5D8", VA = "0x17BF5D8")]
		internal void OnJoystickUpDown()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x17BF61C", Offset = "0x17BF61C", VA = "0x17BF61C")]
		internal void OnJoystickUpUp()
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x17BF660", Offset = "0x17BF660", VA = "0x17BF660")]
		internal void OnJoystickDownDown()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x17BF6A4", Offset = "0x17BF6A4", VA = "0x17BF6A4")]
		internal void OnJoystickDownUp()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x17BF6E8", Offset = "0x17BF6E8", VA = "0x17BF6E8")]
		internal void OnJoystickLeftDown()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x17BF72C", Offset = "0x17BF72C", VA = "0x17BF72C")]
		internal void OnJoystickLeftUp()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x17BF770", Offset = "0x17BF770", VA = "0x17BF770")]
		internal void OnJoystickRightDown()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x17BF7B4", Offset = "0x17BF7B4", VA = "0x17BF7B4")]
		internal void OnJoystickRightUp()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x17BF7F8", Offset = "0x17BF7F8", VA = "0x17BF7F8")]
		internal void OnPause()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x17BF83C", Offset = "0x17BF83C", VA = "0x17BF83C")]
		internal void OnUnPause()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x17BF880", Offset = "0x17BF880", VA = "0x17BF880")]
		internal void OnAxisPressed(Vector2 value)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x17BF2DC", Offset = "0x17BF2DC", VA = "0x17BF2DC")]
		private void Handle(HardwareButtonEventHandler toHandle)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x17BF9B4", Offset = "0x17BF9B4", VA = "0x17BF9B4")]
		protected LLController()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public abstract class LLHeadset
	{
		[Token(Token = "0x20007B6")]
		public enum VRHeadsetType
		{
			[Token(Token = "0x4003086")]
			Vive,
			[Token(Token = "0x4003087")]
			RiftOriginal,
			[Token(Token = "0x4003088")]
			RiftS,
			[Token(Token = "0x4003089")]
			WMR,
			[Token(Token = "0x400308A")]
			Index,
			[Token(Token = "0x400308B")]
			Cosmos,
			[Token(Token = "0x400308C")]
			Quest1,
			[Token(Token = "0x400308D")]
			Quest2,
			[Token(Token = "0x400308E")]
			Quest12viaLink,
			[Token(Token = "0x400308F")]
			PicoNeo3,
			[Token(Token = "0x4003090")]
			YVR1
		}

		[Token(Token = "0x20007B7")]
		public enum VRMiddlewareType
		{
			[Token(Token = "0x4003092")]
			OpenVR,
			[Token(Token = "0x4003093")]
			Oculus,
			[Token(Token = "0x4003094")]
			Pico,
			[Token(Token = "0x4003095")]
			YVR
		}

		[Token(Token = "0x20007B8")]
		public enum Foveation
		{
			[Token(Token = "0x4003097")]
			SONG,
			[Token(Token = "0x4003098")]
			SONGMENU,
			[Token(Token = "0x4003099")]
			MAINMENU
		}

		[Token(Token = "0x20007B9")]
		public enum PBVRColorSpace
		{
			[Token(Token = "0x400309B")]
			Adobe_RGB,
			[Token(Token = "0x400309C")]
			Quest,
			[Token(Token = "0x400309D")]
			P3
		}

		[Token(Token = "0x20007BA")]
		public struct HardwareSettings
		{
			[Token(Token = "0x400309E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool setMinCPUAndGPULevel;

			[Token(Token = "0x400309F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int minCPULevel;

			[Token(Token = "0x40030A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int minGPULevel;

			[Token(Token = "0x40030A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB39")]
			private bool changeColorSpace;
		}

		[Token(Token = "0x14000051")]
		public event Util.SimpleInfoEvent potentialViewReset
		{
			[Token(Token = "0x600250B")]
			[Address(RVA = "0x18BBCFC", Offset = "0x18BBCFC", VA = "0x18BBCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2825C", Offset = "0xC2825C")]
			add
			{
			}
			[Token(Token = "0x600250C")]
			[Address(RVA = "0x18BBE48", Offset = "0x18BBE48", VA = "0x18BBE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28298", Offset = "0xC28298")]
			remove
			{
			}
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x18BBF94", Offset = "0x18BBF94", VA = "0x18BBF94")]
		internal void PotentialViewReset()
		{
		}

		[Token(Token = "0x600250E")]
		public abstract void Start();

		[Token(Token = "0x600250F")]
		public abstract IEnumerator FadeToLoadingScreen(GameObject loadingScreen, float cameraVectorY);

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x18BC028", Offset = "0x18BC028", VA = "0x18BC028", Slot = "6")]
		public virtual IEnumerator FadeToLoadingScreen(GameObject loadingScreen, float cameraVectorY, Vector3 offset)
		{
			return null;
		}

		[Token(Token = "0x6002511")]
		public abstract IEnumerator FadeBackToSceneView();

		[Token(Token = "0x6002512")]
		public abstract FlatRect GetPlayAreaSize();

		[Token(Token = "0x6002513")]
		public abstract Vector3[] GetPlayAreaPoints();

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x18BC088", Offset = "0x18BC088", VA = "0x18BC088", Slot = "10")]
		internal virtual void ResetPlayArea()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x18BC09C", Offset = "0x18BC09C", VA = "0x18BC09C", Slot = "11")]
		internal virtual bool IsPlatformRecentering()
		{
			return default(bool);
		}

		[Token(Token = "0x6002516")]
		public abstract VRMiddlewareType GetVRMiddlewareType();

		[Token(Token = "0x6002517")]
		public abstract VRHeadsetType GetVRHeadsetType();

		[Token(Token = "0x6002518")]
		public abstract bool Calibrate();

		[Token(Token = "0x6002519")]
		public abstract void Update(Transform playAreaTransform);

		[Token(Token = "0x600251A")]
		public abstract void FixedUpdate();

		[Token(Token = "0x600251B")]
		public abstract void LateUpdate();

		[Token(Token = "0x600251C")]
		public abstract void SetTestValues(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity);

		[Token(Token = "0x600251D")]
		public abstract void ActivateFixedFoveation(bool shouldEnable);

		[Token(Token = "0x600251E")]
		public abstract void SetFixedFoveationLevel(Foveation level);

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x18BC0C0", Offset = "0x18BC0C0", VA = "0x18BC0C0", Slot = "21")]
		internal virtual void SetColorSpace(PBVRColorSpace color)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x18BC0D8", Offset = "0x18BC0D8", VA = "0x18BC0D8", Slot = "22")]
		internal virtual bool IsFadingAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x18BC0FC", Offset = "0x18BC0FC", VA = "0x18BC0FC")]
		protected LLHeadset()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class LLManager
	{
		[Token(Token = "0x20007BB")]
		public enum HandSide
		{
			[Token(Token = "0x40030A3")]
			LEFT,
			[Token(Token = "0x40030A4")]
			RIGHT
		}

		[Token(Token = "0x20007BC")]
		public enum OS
		{
			[Token(Token = "0x40030A6")]
			PC,
			[Token(Token = "0x40030A7")]
			ANDROID
		}

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Dictionary<HandSide, LLController> controllers;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57EB4")]
		private static LLHeadset playArea;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LLPlatform platformIntegration;

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x18BD3A8", Offset = "0x18BD3A8", VA = "0x18BD3A8")]
		public static LLController GetController(HandSide side)
		{
			return null;
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x18BD6D8", Offset = "0x18BD6D8", VA = "0x18BD6D8")]
		public static LLHeadset GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x18BD940", Offset = "0x18BD940", VA = "0x18BD940")]
		public static bool IsMobilePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x18BDAE0", Offset = "0x18BDAE0", VA = "0x18BDAE0")]
		public static LLPlatform GetPlatform()
		{
			return null;
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x18BDE00", Offset = "0x18BDE00", VA = "0x18BDE00")]
		public static OS GetOS()
		{
			return default(OS);
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x18BDE60", Offset = "0x18BDE60", VA = "0x18BDE60")]
		public static string GetApplicationDataStorageDirectory()
		{
			return null;
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x18BDEE0", Offset = "0x18BDEE0", VA = "0x18BDEE0")]
		public LLManager()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public abstract class LLPlatform
	{
		[Token(Token = "0x20007BD")]
		public enum PlatformType
		{
			[Token(Token = "0x40030A9")]
			Steamworks,
			[Token(Token = "0x40030AA")]
			Viveport,
			[Token(Token = "0x40030AB")]
			Oculus,
			[Token(Token = "0x40030AC")]
			Pico,
			[Token(Token = "0x40030AD")]
			YVR
		}

		[Token(Token = "0x20007BE")]
		public struct LeaderboardSelector
		{
			[Token(Token = "0x40030AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool isOverall;

			[Token(Token = "0x40030AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string songName;

			[Token(Token = "0x40030B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB51")]
			internal Song.Difficulty difficulty;

			[Token(Token = "0x40030B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			internal WeaponType weapon;
		}

		[Token(Token = "0x20007BF")]
		public struct LeaderboardEntry
		{
			[Token(Token = "0x40030B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57ECC")]
			public static readonly object PLAYER_UNKNOWN;

			[Token(Token = "0x40030B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal object playerId;

			[Token(Token = "0x40030B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string playerName;

			[Token(Token = "0x40030B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int score;

			[Token(Token = "0x40030B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB59")]
			internal int rank;

			[Token(Token = "0x40030B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			internal RatingCalculator.Rating rating;

			[Token(Token = "0x40030B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D76C")]
			internal WeaponType weapon;
		}

		[Token(Token = "0x20007C0")]
		public enum LeaderboardType
		{
			[Token(Token = "0x40030BA")]
			FullWithWeaponsAndSizes,
			[Token(Token = "0x40030BB")]
			JustOverall
		}

		[Token(Token = "0x20007C1")]
		public enum Feature
		{
			[Token(Token = "0x40030BD")]
			INVALID,
			[Token(Token = "0x40030BE")]
			SKYBOXES
		}

		[Token(Token = "0x20007C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE25F8", Offset = "0xBE25F8")]
		private sealed class <MigrateLeaderboards>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x170005C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003174")]
				[Address(RVA = "0x18BE404", Offset = "0x18BE404", VA = "0x18BE404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003176")]
				[Address(RVA = "0x18BE4D4", Offset = "0x18BE4D4", VA = "0x18BE4D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003171")]
			[Address(RVA = "0x18BE198", Offset = "0x18BE198", VA = "0x18BE198")]
			[DebuggerHidden]
			public <MigrateLeaderboards>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003172")]
			[Address(RVA = "0x18BE27C", Offset = "0x18BE27C", VA = "0x18BE27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003173")]
			[Address(RVA = "0x18BE290", Offset = "0x18BE290", VA = "0x18BE290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003175")]
			[Address(RVA = "0x18BE434", Offset = "0x18BE434", VA = "0x18BE434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600252A")]
		public abstract void InitializePlatform();

		[Token(Token = "0x600252B")]
		public abstract PlatformType GetPlatformType();

		[Token(Token = "0x600252C")]
		public abstract SystemLanguage GetUserLanguage();

		[Token(Token = "0x600252D")]
		public abstract void SetCountingAchievement(string achievementName, string statsName, List<string> globalListOfElements, int maximum, int modulo);

		[Token(Token = "0x600252E")]
		public abstract void SetAchievement(string achievementName);

		[Token(Token = "0x600252F")]
		public abstract void GetExperience(Action<int> action);

		[Token(Token = "0x6002530")]
		public abstract void StoreExperience(int experience);

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x18BDFC4", Offset = "0x18BDFC4", VA = "0x18BDFC4", Slot = "11")]
		public virtual bool AreLeaderboardsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002532")]
		public abstract LeaderboardType GetLeaderBoardType();

		[Token(Token = "0x6002533")]
		public abstract void SetLeaderboardEntry(LeaderboardSelector selector, LeaderboardEntry entry, Action leaderboardUpdateFinished);

		[Token(Token = "0x6002534")]
		public abstract void GetLeaderboardEntries(LeaderboardSelector selector, Action<LeaderboardSelector, List<LeaderboardEntry>, bool> highscoresReceived);

		[Token(Token = "0x6002535")]
		public abstract void GetHighscoreForSong(LeaderboardSelector selector, Action<int> highscoreRetrieved);

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x18BDFE8", Offset = "0x18BDFE8", VA = "0x18BDFE8", Slot = "16")]
		public virtual void StopLeaderboardCallbacks()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x18BDFFC", Offset = "0x18BDFFC", VA = "0x18BDFFC", Slot = "17")]
		public virtual DateTime GetPurchaseTime()
		{
			return default(DateTime);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x18BE0F4", Offset = "0x18BE0F4", VA = "0x18BE0F4", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC282D4", Offset = "0xC282D4")]
		public virtual IEnumerator MigrateLeaderboards(string songName)
		{
			return null;
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x18BE1E0", Offset = "0x18BE1E0", VA = "0x18BE1E0", Slot = "19")]
		public virtual void StopMigration()
		{
		}

		[Token(Token = "0x600253A")]
		public abstract object GetUserId();

		[Token(Token = "0x600253B")]
		public abstract void ClosePlatform();

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x18BE1F4", Offset = "0x18BE1F4", VA = "0x18BE1F4", Slot = "22")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x18BE208", Offset = "0x18BE208", VA = "0x18BE208", Slot = "23")]
		public virtual bool IsFeaturePurchased(Feature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x18BE230", Offset = "0x18BE230", VA = "0x18BE230", Slot = "24")]
		public virtual void StartFeaturePurchase(Feature feature, Action<bool> purchaseFunctionFinished)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x18BE24C", Offset = "0x18BE24C", VA = "0x18BE24C")]
		protected LLPlatform()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class L10nImageCreator : MonoBehaviour
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera renderCamera;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB78")]
		public TextMeshProUGUI loadingText;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57EDC")]
		public string locales;

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x17BB6A4", Offset = "0x17BB6A4", VA = "0x17BB6A4")]
		public List<string> DoCreateL10()
		{
			return null;
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x17BC004", Offset = "0x17BC004", VA = "0x17BC004")]
		public L10nImageCreator()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class AccuracyStrengthLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ballHitCount;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ballMaxCount;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string averageSpeed;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB80")]
		public string topSpeed;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int streamPercent;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57EE4")]
		public int collisionsAvoided;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int collisionsPossible;

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x195C430", Offset = "0x195C430", VA = "0x195C430")]
		public void SetValues(int ballHitCount, int ballMaxCount, float averageSpeed, float topSpeed, string speedUnit, int streamPercent, int collisionsAvoided, int collisionsPossible)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x195C60C", Offset = "0x195C60C", VA = "0x195C60C")]
		public AccuracyStrengthLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ControllerButtonLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x20007C3")]
		public enum L10Button
		{
			[Token(Token = "0x40030C2")]
			Trigger,
			[Token(Token = "0x40030C3")]
			Pause,
			[Token(Token = "0x40030C4")]
			StartStop,
			[Token(Token = "0x40030C5")]
			Adjust
		}

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public L10Button buttonToShow;

		[Token(Token = "0x17000467")]
		public string Name
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x16F6794", Offset = "0x16F6794", VA = "0x16F6794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x16F6928", Offset = "0x16F6928", VA = "0x16F6928")]
		public static string GetButtonL10Name(L10Button theButton)
		{
			return null;
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x16F7018", Offset = "0x16F7018", VA = "0x16F7018")]
		public ControllerButtonLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	internal class ErrorInfo
	{
		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string errorMessage;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x1718520", Offset = "0x1718520", VA = "0x1718520")]
		public ErrorInfo(string em)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class GuideTextString : MonoBehaviour
	{
		[Token(Token = "0x20007C4")]
		public class HrmInfo
		{
			[Token(Token = "0x40030C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string hrmInfo;

			[Token(Token = "0x6003177")]
			[Address(RVA = "0x17AA468", Offset = "0x17AA468", VA = "0x17AA468")]
			public HrmInfo()
			{
			}
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x17AA214", Offset = "0x17AA214", VA = "0x17AA214")]
		private void Start()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x17AA498", Offset = "0x17AA498", VA = "0x17AA498")]
		public GuideTextString()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	internal class HighscoreSongInfoLocalizationString : MonoBehaviour
	{
		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB90")]
		private LLPlatform.LeaderboardSelector? selector;

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x17B3608", Offset = "0x17B3608", VA = "0x17B3608")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x17B3BC8", Offset = "0x17B3BC8", VA = "0x17B3BC8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x17B3C8C", Offset = "0x17B3C8C", VA = "0x17B3C8C")]
		private void LocalizationSettings_SelectedLocaleChanged(Locale obj)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x17B3CC0", Offset = "0x17B3CC0", VA = "0x17B3CC0")]
		internal void UpdateData(LLPlatform.LeaderboardSelector selector)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x17B36D8", Offset = "0x17B36D8", VA = "0x17B36D8")]
		protected void UpdateUI()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x17B3DF4", Offset = "0x17B3DF4", VA = "0x17B3DF4")]
		public HighscoreSongInfoLocalizationString()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class LocaleAdjuster : MonoBehaviour
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton prevButton;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57EF4")]
		[SerializeField]
		private MenuSelectButton nextButton;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI languageText;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuToggleArea autoToggle;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB98")]
		private List<Locale> list;

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x18E8770", Offset = "0x18E8770", VA = "0x18E8770")]
		private void Start()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x18E8824", Offset = "0x18E8824", VA = "0x18E8824")]
		private void InitDone()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x18E8E84", Offset = "0x18E8E84", VA = "0x18E8E84")]
		private void UpdateUIAndSettings()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x18E93C8", Offset = "0x18E93C8", VA = "0x18E93C8")]
		private string ShortName(string v)
		{
			return null;
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x18E94F8", Offset = "0x18E94F8", VA = "0x18E94F8")]
		private void NextButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x18E9630", Offset = "0x18E9630", VA = "0x18E9630")]
		private void PrevButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x18E9768", Offset = "0x18E9768", VA = "0x18E9768")]
		private void AutoToggle_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x18E9B84", Offset = "0x18E9B84", VA = "0x18E9B84")]
		private int GetIndexForCurrentLocale()
		{
			return default(int);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x18E9DD4", Offset = "0x18E9DD4", VA = "0x18E9DD4")]
		public LocaleAdjuster()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class LocalizationHelper
	{
		[Token(Token = "0x20007C5")]
		private class Value
		{
			[Token(Token = "0x40030C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public string value;

			[Token(Token = "0x6003178")]
			[Address(RVA = "0x18856C0", Offset = "0x18856C0", VA = "0x18856C0")]
			public Value(string value)
			{
			}
		}

		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2634", Offset = "0xBE2634")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40030C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57EFC")]
			public Action initDone;

			[Token(Token = "0x6003179")]
			[Address(RVA = "0x1885EF4", Offset = "0x1885EF4", VA = "0x1885EF4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600317A")]
			[Address(RVA = "0x1885F84", Offset = "0x1885F84", VA = "0x1885F84")]
			internal void <WaitForL10nInitialization>b__0(AsyncOperationHandle<LocalizationSettings> notUsed)
			{
			}
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x1885224", Offset = "0x1885224", VA = "0x1885224")]
		public static string LoadEntry(string entryName)
		{
			return null;
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x1885374", Offset = "0x1885374", VA = "0x1885374")]
		internal static string LoadEntry(string entryName, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x18854D4", Offset = "0x18854D4", VA = "0x18854D4")]
		internal static string LoadEntryWithValue(string entryName, string value)
		{
			return null;
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x1885708", Offset = "0x1885708", VA = "0x1885708")]
		public static string LoadEntryForLocale(string entryName, string localeIdentifierCode)
		{
			return null;
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x1885CE8", Offset = "0x1885CE8", VA = "0x1885CE8")]
		internal static void WaitForL10nInitialization(Action initDone)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x1885F24", Offset = "0x1885F24", VA = "0x1885F24")]
		internal static Locale GetCurrentLocale()
		{
			return null;
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x1885F54", Offset = "0x1885F54", VA = "0x1885F54")]
		public LocalizationHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C4")]
	public class PowerBeatsLocaleSelector : IStartupLocaleSelector, IInitialize
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_LOCALE_ISAUTO;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_LOCALE_LOCALE;

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x176D064", Offset = "0x176D064", VA = "0x176D064", Slot = "5")]
		public void PostInitialization(LocalizationSettings settings)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x176D07C", Offset = "0x176D07C", VA = "0x176D07C", Slot = "4")]
		public Locale GetStartupLocale(ILocalesProvider availableLocales)
		{
			return null;
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x176D8F0", Offset = "0x176D8F0", VA = "0x176D8F0")]
		public static Locale GetSystemLocale(ILocalesProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x176DB00", Offset = "0x176DB00", VA = "0x176DB00")]
		internal static void SetAuto(bool isAuto)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x176D7B4", Offset = "0x176D7B4", VA = "0x176D7B4")]
		public static bool IsAuto()
		{
			return default(bool);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x176DC74", Offset = "0x176DC74", VA = "0x176DC74")]
		public static void SetUserSelectedLocale(Locale l)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x176DDE4", Offset = "0x176DDE4", VA = "0x176DDE4")]
		public PowerBeatsLocaleSelector()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class PrefixBasedLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string l10_prefix;

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1770C30", Offset = "0x1770C30", VA = "0x1770C30")]
		internal void SetPrefixedEntryName(string suffix)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x1770DD8", Offset = "0x1770DD8", VA = "0x1770DD8")]
		public PrefixBasedLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class TextBasedLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBA0")]
		public string value;

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x18FF8B4", Offset = "0x18FF8B4", VA = "0x18FF8B4")]
		internal void UpdateEntry(string value)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x18FF968", Offset = "0x18FF968", VA = "0x18FF968")]
		internal void UpdateEntry(string entryName, string value)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x18FFA8C", Offset = "0x18FFA8C", VA = "0x18FFA8C")]
		public TextBasedLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class ValueBasedLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int min;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F04")]
		public int value;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int max;

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x190AB3C", Offset = "0x190AB3C", VA = "0x190AB3C")]
		internal void UpdateEntry(int min, int value, int max)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x190AC20", Offset = "0x190AC20", VA = "0x190AC20")]
		public ValueBasedLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class VersionLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x600256F")]
		[Address(RVA = "0x190AC50", Offset = "0x190AC50", VA = "0x190AC50")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x190AD74", Offset = "0x190AD74", VA = "0x190AD74")]
		public VersionLocalizedString()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class BPMOffsetAdjuster : MonoBehaviour
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float GENERATOR_BPM_MIN;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float GENERATOR_BPM_MAX;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBA8")]
		[SerializeField]
		private TextMeshProUGUI generatorBpmText;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI generatorOffsetText;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F0C")]
		private float initialBpm;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initialOffset;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBB0")]
		private MenuSelectButton generatorBpmHalfButton;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSelectButton generatorBpmDecreaseButton;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F14")]
		private MenuSelectButton generatorBpmIncreaseButton;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton generatorBpmDoubleButton;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton generatorOffsetDecreaseButton;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton generatorOffsetIncreaseButton;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBB8")]
		private float generatorBpm;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float generatorOffset;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F1C")]
		private float generatorOffsetMax;

		[Token(Token = "0x14000052")]
		public event Action<float> bpmChanged
		{
			[Token(Token = "0x6002571")]
			[Address(RVA = "0x195EDD0", Offset = "0x195EDD0", VA = "0x195EDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28384", Offset = "0xC28384")]
			add
			{
			}
			[Token(Token = "0x6002572")]
			[Address(RVA = "0x195EF1C", Offset = "0x195EF1C", VA = "0x195EF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC283C0", Offset = "0xC283C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action<float> offsetChanged
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0x195F068", Offset = "0x195F068", VA = "0x195F068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC283FC", Offset = "0xC283FC")]
			add
			{
			}
			[Token(Token = "0x6002574")]
			[Address(RVA = "0x195F1B4", Offset = "0x195F1B4", VA = "0x195F1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28438", Offset = "0xC28438")]
			remove
			{
			}
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x195F300", Offset = "0x195F300", VA = "0x195F300")]
		public void Initialize(float bpm, float offset)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x195FC2C", Offset = "0x195FC2C", VA = "0x195FC2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x19601E4", Offset = "0x19601E4", VA = "0x19601E4")]
		private void DoReset(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x1960398", Offset = "0x1960398", VA = "0x1960398")]
		private void DoOffsetToggle(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x19605B4", Offset = "0x19605B4", VA = "0x19605B4")]
		private void DoOffsetInc(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x1960784", Offset = "0x1960784", VA = "0x1960784")]
		private void DoOffsetDec(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x1960954", Offset = "0x1960954", VA = "0x1960954")]
		private void DoBPMDouble(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x1960A8C", Offset = "0x1960A8C", VA = "0x1960A8C")]
		private void DoBPMInc(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1960BC4", Offset = "0x1960BC4", VA = "0x1960BC4")]
		private void DoBPMDec(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x1960CFC", Offset = "0x1960CFC", VA = "0x1960CFC")]
		private void DoBPMHalf(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x195F3C0", Offset = "0x195F3C0", VA = "0x195F3C0")]
		private void ValidateGeneratorBpmButtons()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x195FA2C", Offset = "0x195FA2C", VA = "0x195FA2C")]
		private void ValidateGeneratorOffsetButtons()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x1960EC0", Offset = "0x1960EC0", VA = "0x1960EC0")]
		public BPMOffsetAdjuster()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	internal class CustomButton : Button
	{
		[Token(Token = "0x6002583")]
		[Address(RVA = "0x16F7048", Offset = "0x16F7048", VA = "0x16F7048")]
		public void Unhighlight()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x16F7084", Offset = "0x16F7084", VA = "0x16F7084")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class EnvironmentalVisualization : MonoBehaviour
	{
		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameConfiguration.GameEnvironmentID environment;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite image_Fist;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite image_Hammer;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBC0")]
		[SerializeField]
		private Sprite image_Shield;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Sprite image_Power;

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x1718408", Offset = "0x1718408", VA = "0x1718408")]
		internal void Apply(Image iFist, Image iHammer, Image iShield, Image iPower)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x17184F0", Offset = "0x17184F0", VA = "0x17184F0")]
		public EnvironmentalVisualization()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class GamespaceDialog : MonoBehaviour
	{
		[Token(Token = "0x20007C7")]
		private class ButtonName
		{
			[Token(Token = "0x40030C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string buttonName;

			[Token(Token = "0x600317B")]
			[Address(RVA = "0x1791758", Offset = "0x1791758", VA = "0x1791758")]
			public ButtonName(string buttonName)
			{
			}
		}

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D784")]
		[SerializeField]
		private MenuSelectButton resetButton;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton okButton;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton cancelButton;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject emptyLookRightDialog;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBC7")]
		[SerializeField]
		private RectTransform scaler;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image platformImage;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F24")]
		[SerializeField]
		private Image stationaryImage;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI platformText;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image gamespaceImage;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI gamespaceText;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBCF")]
		[SerializeField]
		private TextMeshProUGUI arrowText;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI howToText;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F2C")]
		[SerializeField]
		private TextMeshProUGUI debugText;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI infoText;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Slider playspaceWidthSlider;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI playspaceWidthText;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBD7")]
		[SerializeField]
		private MenuSelectButton playSpaceWidthDecreaseButton;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton playSpaceWidthIncreaseButton;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F34")]
		[SerializeField]
		private MenuToggleArea playspaceWidthAutoToggle;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] objectsToDeactivate;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isEnabled;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool startup_Auto;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBDF")]
		private float startup_ManualWidth;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 startup_ManualLocation;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F3C")]
		private float startup_ManualRotation;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x178C810", Offset = "0x178C810", VA = "0x178C810")]
		internal void OpenDialog()
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x178F74C", Offset = "0x178F74C", VA = "0x178F74C")]
		internal bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x178F7B4", Offset = "0x178F7B4", VA = "0x178F7B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x178FFD8", Offset = "0x178FFD8", VA = "0x178FFD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x1790840", Offset = "0x1790840", VA = "0x1790840")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x17910B4", Offset = "0x17910B4", VA = "0x17910B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x1791238", Offset = "0x1791238", VA = "0x1791238")]
		private void GameplayWidthDialog_TakeInteractButtonDown(LLController sender)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x178CA18", Offset = "0x178CA18", VA = "0x178CA18")]
		private void AdjustDisplay()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x179277C", Offset = "0x179277C", VA = "0x179277C")]
		private void CreatePoint(string name, Vector3 platform0, Color c)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x1792AAC", Offset = "0x1792AAC", VA = "0x1792AAC")]
		private void OkButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1792B88", Offset = "0x1792B88", VA = "0x1792B88")]
		private void CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x1793444", Offset = "0x1793444", VA = "0x1793444")]
		private void ResetButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1792B40", Offset = "0x1792B40", VA = "0x1792B40")]
		private void PlayClickSound()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x179365C", Offset = "0x179365C", VA = "0x179365C")]
		private void Buttons_onHover(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x17936A8", Offset = "0x17936A8", VA = "0x17936A8")]
		private void ToggleButtons_onHover(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x17936F4", Offset = "0x17936F4", VA = "0x17936F4")]
		private void PlayspaceWidthAutoToggle_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x179384C", Offset = "0x179384C", VA = "0x179384C")]
		private void PlayspaceWidthSlider_onValueChanged(float value)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1793960", Offset = "0x1793960", VA = "0x1793960")]
		private void PlaySpaceWidthIncreaseButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x1793AC4", Offset = "0x1793AC4", VA = "0x1793AC4")]
		private void PlaySpaceWidthDecreaseButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1793C28", Offset = "0x1793C28", VA = "0x1793C28")]
		public GamespaceDialog()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class GamespaceMenuUI : MonoBehaviour
	{
		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton adjustPlayspaceButton;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBE7")]
		[SerializeField]
		private GamespaceDialog adjustPlayspaceDialog;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x179A434", Offset = "0x179A434", VA = "0x179A434")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x179A500", Offset = "0x179A500", VA = "0x179A500")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x179A5CC", Offset = "0x179A5CC", VA = "0x179A5CC")]
		private void AdjustPlayspaceButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x179A600", Offset = "0x179A600", VA = "0x179A600")]
		internal void OpenDialog()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x179A6B0", Offset = "0x179A6B0", VA = "0x179A6B0")]
		internal bool IsDialogOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x179A714", Offset = "0x179A714", VA = "0x179A714")]
		public GamespaceMenuUI()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class GeneratorSettingsAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Slider ballsSlider;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F44")]
		public TextMeshProUGUI ballsText;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider wallsSlider;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI wallsText;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider streamsSlider;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBEF")]
		public TextMeshProUGUI streamsText;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Slider swingsSlider;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F4C")]
		public TextMeshProUGUI swingsText;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI swingsLabel;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Slider jumpsSlider;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI jumpsText;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBF7")]
		public TextMeshProUGUI jumpsLabel;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Slider squatsSlider;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F54")]
		public TextMeshProUGUI squatsText;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI squatsLabel;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color defaultTextColor;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color disabledTextColor;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MenuSelectButton ballsDownButton;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F5C")]
		public MenuSelectButton ballsUpButton;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton wallsDownButton;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton wallsUpButton;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton streamsDownButton;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC07")]
		public MenuSelectButton streamsUpButton;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MenuSelectButton swingsDownButton;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F64")]
		public MenuSelectButton swingsUpButton;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton jumpsDownButton;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton jumpsUpButton;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton squatsDownButton;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC0F")]
		public MenuSelectButton squatsUpButton;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MenuSelectButton resetButton;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F6C")]
		private GeneratorSetting setting;

		[Token(Token = "0x14000054")]
		public event Action ResetParameters
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x17A7E7C", Offset = "0x17A7E7C", VA = "0x17A7E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28474", Offset = "0xC28474")]
			add
			{
			}
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x17A7FC8", Offset = "0x17A7FC8", VA = "0x17A7FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC284B0", Offset = "0xC284B0")]
			remove
			{
			}
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x17A8114", Offset = "0x17A8114", VA = "0x17A8114")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x17A8638", Offset = "0x17A8638", VA = "0x17A8638")]
		public void Initialize(GeneratorSetting setting, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x17A8E48", Offset = "0x17A8E48", VA = "0x17A8E48")]
		public void SetBallsValue(float value)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x17A9024", Offset = "0x17A9024", VA = "0x17A9024")]
		public void SetWallsValue(float value)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x17A9200", Offset = "0x17A9200", VA = "0x17A9200")]
		public void SetStreamsValue(float value)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x17A93DC", Offset = "0x17A93DC", VA = "0x17A93DC")]
		public void SetSwingsValue(float value)
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x17A95B8", Offset = "0x17A95B8", VA = "0x17A95B8")]
		public void SetJumpsValue(float value)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x17A9794", Offset = "0x17A9794", VA = "0x17A9794")]
		public void SetSquatsValue(float value)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x17A9970", Offset = "0x17A9970", VA = "0x17A9970")]
		public GeneratorSetting GetSettings()
		{
			return null;
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x17A99A0", Offset = "0x17A99A0", VA = "0x17A99A0")]
		public GeneratorSettingsAdjuster()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x17A99D0", Offset = "0x17A99D0", VA = "0x17A99D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC284EC", Offset = "0xC284EC")]
		private void <Awake>b__34_0(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x17A9A48", Offset = "0x17A9A48", VA = "0x17A9A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28528", Offset = "0xC28528")]
		private void <Awake>b__34_1(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x17A9AC0", Offset = "0x17A9AC0", VA = "0x17A9AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28564", Offset = "0xC28564")]
		private void <Awake>b__34_2(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x17A9B38", Offset = "0x17A9B38", VA = "0x17A9B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC285A0", Offset = "0xC285A0")]
		private void <Awake>b__34_3(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x17A9BB0", Offset = "0x17A9BB0", VA = "0x17A9BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC285DC", Offset = "0xC285DC")]
		private void <Awake>b__34_4(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x17A9C28", Offset = "0x17A9C28", VA = "0x17A9C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28618", Offset = "0xC28618")]
		private void <Awake>b__34_5(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x17A9CA0", Offset = "0x17A9CA0", VA = "0x17A9CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28654", Offset = "0xC28654")]
		private void <Awake>b__34_6(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x17A9D18", Offset = "0x17A9D18", VA = "0x17A9D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28690", Offset = "0xC28690")]
		private void <Awake>b__34_7(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x17A9D90", Offset = "0x17A9D90", VA = "0x17A9D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC286CC", Offset = "0xC286CC")]
		private void <Awake>b__34_8(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x17A9E08", Offset = "0x17A9E08", VA = "0x17A9E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28708", Offset = "0xC28708")]
		private void <Awake>b__34_9(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x17A9E80", Offset = "0x17A9E80", VA = "0x17A9E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28744", Offset = "0xC28744")]
		private void <Awake>b__34_10(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x17A9EF8", Offset = "0x17A9EF8", VA = "0x17A9EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28780", Offset = "0xC28780")]
		private void <Awake>b__34_11(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x17A9F70", Offset = "0x17A9F70", VA = "0x17A9F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC287BC", Offset = "0xC287BC")]
		private void <Awake>b__34_12(MenuSelectButton MenuSelectButton)
		{
		}
	}
	[Token(Token = "0x20004CF")]
	internal class HRMAdjuster : MonoBehaviour
	{
		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2670", Offset = "0xBE2670")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40030CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57F84")]
			public MainThreadDispatcherPBVR dispatcher;

			[Token(Token = "0x40030CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HRMAdjuster <>4__this;

			[Token(Token = "0x600317C")]
			[Address(RVA = "0x17AD1E8", Offset = "0x17AD1E8", VA = "0x17AD1E8")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600317D")]
			[Address(RVA = "0x17AEEE0", Offset = "0x17AEEE0", VA = "0x17AEEE0")]
			internal void <RequestPermission>b__0(string permissionName)
			{
			}
		}

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC17")]
		[SerializeField]
		private MenuToggleArea onOffSelector;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuToggleArea platformSelector;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D78C")]
		[SerializeField]
		private MenuSelectButton infoButton;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject searchAndConnectPanel;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton searchButton;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton prevDeviceButton;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC1E")]
		[SerializeField]
		private MenuSelectButton nextDeviceButton;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton connectButton;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F74")]
		[SerializeField]
		private MenuSelectButton disconnectButton;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI deviceListText;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI connectedDeviceText;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform hrmContainer;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC26")]
		[SerializeField]
		private InfoDialog requestPermissionDialog;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private HRMCon hrmCon;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F7C")]
		private List<HRMDevice> hrmDevices;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int hrmIndex;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int platform;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int progressDotCount;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC2E")]
		private float progressDotsTime;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool noRadio;

		[Token(Token = "0x14000055")]
		public event Action<int> onOffChanged
		{
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x17AA4C8", Offset = "0x17AA4C8", VA = "0x17AA4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC287F8", Offset = "0xC287F8")]
			add
			{
			}
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x17AA614", Offset = "0x17AA614", VA = "0x17AA614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28834", Offset = "0xC28834")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action<HRMPlatform> platformChanged
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x17AA760", Offset = "0x17AA760", VA = "0x17AA760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28870", Offset = "0xC28870")]
			add
			{
			}
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x17AA8AC", Offset = "0x17AA8AC", VA = "0x17AA8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC288AC", Offset = "0xC288AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action<long> hrmDeviceChanged
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x17AA9F8", Offset = "0x17AA9F8", VA = "0x17AA9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC288E8", Offset = "0xC288E8")]
			add
			{
			}
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x17AAB44", Offset = "0x17AAB44", VA = "0x17AAB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28924", Offset = "0xC28924")]
			remove
			{
			}
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x17AAC90", Offset = "0x17AAC90", VA = "0x17AAC90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x17AB200", Offset = "0x17AB200", VA = "0x17AB200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x17ABF84", Offset = "0x17ABF84", VA = "0x17ABF84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x17AC35C", Offset = "0x17AC35C", VA = "0x17AC35C")]
		public void SetOnOffStatus(int status)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x17AC454", Offset = "0x17AC454", VA = "0x17AC454")]
		public void SetPlatform(int platform)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x17AC4C0", Offset = "0x17AC4C0", VA = "0x17AC4C0")]
		private void OnOffSelector_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x17AD00C", Offset = "0x17AD00C", VA = "0x17AD00C")]
		private void RequestPermission(int result, bool checkbox)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x17AC3CC", Offset = "0x17AC3CC", VA = "0x17AC3CC")]
		private void ToggleOnOff(int value)
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x17AD218", Offset = "0x17AD218", VA = "0x17AD218")]
		private void InfoButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x17AD2A0", Offset = "0x17AD2A0", VA = "0x17AD2A0")]
		private void PlatformSelector_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x17AD8F8", Offset = "0x17AD8F8", VA = "0x17AD8F8")]
		private void SearchButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x17ADB58", Offset = "0x17ADB58", VA = "0x17ADB58")]
		private void PrevDeviceButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x17ADD58", Offset = "0x17ADD58", VA = "0x17ADD58")]
		private void NextDeviceButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x17AD77C", Offset = "0x17AD77C", VA = "0x17AD77C")]
		private void UpdateDeviceListButtons()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x17ADFA8", Offset = "0x17ADFA8", VA = "0x17ADFA8")]
		private void ConnectButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x17AE310", Offset = "0x17AE310", VA = "0x17AE310")]
		private void DisconnectButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x17AE568", Offset = "0x17AE568", VA = "0x17AE568")]
		private void HrmCon_StatusChanged(HRMStatus newStatus, HRMStatus oldStatus)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x17AB788", Offset = "0x17AB788", VA = "0x17AB788")]
		private void EvaluateHrmStatus(HRMStatus oldStatus, HRMStatus newStatus)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x17AE888", Offset = "0x17AE888", VA = "0x17AE888")]
		private void HrmCon_HeartRateChanged(int heartRate)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x17AEAE4", Offset = "0x17AEAE4", VA = "0x17AEAE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x17AC970", Offset = "0x17AC970", VA = "0x17AC970")]
		private bool IsMissingPermission()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x17AEDD4", Offset = "0x17AEDD4", VA = "0x17AEDD4")]
		public HRMAdjuster()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x17AEE8C", Offset = "0x17AEE8C", VA = "0x17AEE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28960", Offset = "0xC28960")]
		private void <RequestPermission>b__35_1()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class HandAdjustment : MonoBehaviour
	{
		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LLManager.HandSide side;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LaserPointer pointer;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC36")]
		public bool allowModification;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Controller controller;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F8C")]
		private GameObject controllerModel;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform previousParent;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform previousHandParent;

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x17AFC60", Offset = "0x17AFC60", VA = "0x17AFC60")]
		private void Start()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x17B012C", Offset = "0x17B012C", VA = "0x17B012C")]
		public void Attach()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x17B0538", Offset = "0x17B0538", VA = "0x17B0538")]
		internal void Detach()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x17B08C0", Offset = "0x17B08C0", VA = "0x17B08C0")]
		private void HandAdjustment_TakeInteractButtonDown(LLController sender)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x17B0B18", Offset = "0x17B0B18", VA = "0x17B0B18")]
		private void HandAdjustment_TakeInteractButtonUp(LLController sender)
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x17B0C24", Offset = "0x17B0C24", VA = "0x17B0C24")]
		internal void SetAdjustmentToScene(Tuple<Vector3, Quaternion> tuple)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x17B0DB8", Offset = "0x17B0DB8", VA = "0x17B0DB8")]
		internal Tuple<Vector3, Quaternion> GetAdjustmentFromScene()
		{
			return null;
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x17B0F18", Offset = "0x17B0F18", VA = "0x17B0F18")]
		public HandAdjustment()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	internal class HandAdjustmentSettings
	{
		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<LLManager.HandSide, Tuple<Vector3, Quaternion>> offset;

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x17B0F48", Offset = "0x17B0F48", VA = "0x17B0F48")]
		public HandAdjustmentSettings(Tuple<Vector3, Quaternion> left, Tuple<Vector3, Quaternion> right)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x17B1090", Offset = "0x17B1090", VA = "0x17B1090")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x17B163C", Offset = "0x17B163C", VA = "0x17B163C")]
		public static HandAdjustmentSettings FromJson(string json)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D2")]
	public class InfoDialog : MonoBehaviour
	{
		[Token(Token = "0x20007C9")]
		private struct InfoType
		{
			[Token(Token = "0x40030CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public string icon;

			[Token(Token = "0x40030CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD57F9C")]
			public Color color;

			[Token(Token = "0x600317E")]
			[Address(RVA = "0x17B8590", Offset = "0x17B8590", VA = "0x17B8590")]
			public InfoType(string icon, Color color)
			{
			}
		}

		[Token(Token = "0x20007CA")]
		public delegate void OnInfoDialogClosed();

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC3E")]
		private readonly InfoType INFO;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly InfoType WARNING;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F94")]
		private readonly InfoType ERROR;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI icon;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI title;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI message;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC46")]
		[SerializeField]
		private MenuSelectButton firstButton;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI firstButtonText;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57F9C")]
		[SerializeField]
		private MenuSelectButton secondButton;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI secondButtonText;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton thirdButton;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI thirdButtonText;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC4E")]
		[SerializeField]
		private MenuToggleArea checkBoxObject;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI checkBoxText;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD57FA4")]
		[SerializeField]
		private GameObject[] objectsToDeactivate;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<int, bool> callback;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int numberOfButtons;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool checkBoxIsSelected;

		[Token(Token = "0x14000058")]
		public event OnInfoDialogClosed infoDialogClosed
		{
			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x17B6134", Offset = "0x17B6134", VA = "0x17B6134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2899C", Offset = "0xC2899C")]
			add
			{
			}
			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x17B6280", Offset = "0x17B6280", VA = "0x17B6280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC289D8", Offset = "0xC289D8")]
			remove
			{
			}
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x17B63CC", Offset = "0x17B63CC", VA = "0x17B63CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x17B65AC", Offset = "0x17B65AC", VA = "0x17B65AC")]
		public void HideInitially()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x17B6608", Offset = "0x17B6608", VA = "0x17B6608")]
		public void OpenInfoDialog(string title, string message, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x17ACB98", Offset = "0x17ACB98", VA = "0x17ACB98")]
		public void OpenInfoDialog(string title, string message, string firstButtonString, string secondButtonString, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x17B73F4", Offset = "0x17B73F4", VA = "0x17B73F4")]
		public void OpenInfoDialog(string title, string message, string firstButtonString, string secondButtonString, string thirdButtonString, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x17B7520", Offset = "0x17B7520", VA = "0x17B7520")]
		public void OpenWarningDialog(string message, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x17B768C", Offset = "0x17B768C", VA = "0x17B768C")]
		public void OpenWarningDialog(string message, string firstButtonString, string secondButtonString, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x17B77F8", Offset = "0x17B77F8", VA = "0x17B77F8")]
		public void OpenWarningDialog(string message, string firstButtonString, string secondButtonString, string checkBoxText, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x17B7970", Offset = "0x17B7970", VA = "0x17B7970")]
		public void OpenErrorDialog(string message, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x17B6760", Offset = "0x17B6760", VA = "0x17B6760")]
		private void OpenInternal(string title, string content, string firstButtonString, string secondButtonString, string thirdButtonString, InfoType infoType, string checkbox, Action<int, bool> callback)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x17B7ADC", Offset = "0x17B7ADC", VA = "0x17B7ADC")]
		private void FirstButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x17B7C88", Offset = "0x17B7C88", VA = "0x17B7C88")]
		private void SecondButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x17B7CC4", Offset = "0x17B7CC4", VA = "0x17B7CC4")]
		private void ThirdButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x17B7B18", Offset = "0x17B7B18", VA = "0x17B7B18")]
		private void Select(int which)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x17B7D00", Offset = "0x17B7D00", VA = "0x17B7D00")]
		private void ReactivateGameObjects()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x17B805C", Offset = "0x17B805C", VA = "0x17B805C")]
		private void CheckBoxObject_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x17B80BC", Offset = "0x17B80BC", VA = "0x17B80BC")]
		public bool isOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x17B8124", Offset = "0x17B8124", VA = "0x17B8124")]
		public InfoDialog()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class KeyboardKey : MonoBehaviour
	{
		[Token(Token = "0x20007CB")]
		public enum KeyStatus
		{
			[Token(Token = "0x40030CF")]
			Normal,
			[Token(Token = "0x40030D0")]
			Shifted
		}

		[Token(Token = "0x20007CC")]
		public enum KeyType
		{
			[Token(Token = "0x40030D2")]
			Normal,
			[Token(Token = "0x40030D3")]
			Backspace,
			[Token(Token = "0x40030D4")]
			Shift
		}

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string normalText;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string shiftedText;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyType keyType;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC5E")]
		private MenuSelectButton menuSelectButton;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private TextMeshProUGUI keyboardShownText;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D794")]
		private Image keyboardShownImage;

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x17BAC54", Offset = "0x17BAC54", VA = "0x17BAC54")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x17BAFDC", Offset = "0x17BAFDC", VA = "0x17BAFDC")]
		private Image GetActualImage()
		{
			return null;
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x17BADAC", Offset = "0x17BADAC", VA = "0x17BADAC")]
		private TextMeshProUGUI GetActualText()
		{
			return null;
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x17BB20C", Offset = "0x17BB20C", VA = "0x17BB20C")]
		internal void SetKeyStatus(KeyStatus status)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x17BB644", Offset = "0x17BB644", VA = "0x17BB644")]
		internal MenuSelectButton GetButton()
		{
			return null;
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x17BB674", Offset = "0x17BB674", VA = "0x17BB674")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform beam;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float dotOffsetX;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC6C")]
		[SerializeField]
		private float dotOffsetY;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject laserPoint;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C514")]
		private Controller leftController;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller rightController;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller usedController;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Ray laserBeamRay;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC71")]
		private Vector3 laserPointStart;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 hitPositionIn3D;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6C4")]
		private VRInputCanvas canvas;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit hit;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int layerMask;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float xCorrectionForControllerRotation;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC77")]
		private float yCorrectionForControllerRotation;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float controlX;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7A4")]
		public float controlY;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float rigScale;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<LLManager.HandSide, Transform> fingerTips;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FrameworkManager fm;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC7E")]
		private static readonly string SETTINGS_LASER_HAND;

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x18C3A48", Offset = "0x18C3A48", VA = "0x18C3A48")]
		private void Start()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x18C41D0", Offset = "0x18C41D0", VA = "0x18C41D0")]
		public void SetRigScale(float scale)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x18C4208", Offset = "0x18C4208", VA = "0x18C4208")]
		private void LeftController_systemButtonPressed(bool pauseActivated)
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x18C4390", Offset = "0x18C4390", VA = "0x18C4390")]
		private void LaserPointer_UseButtonUpRight(LLController sender)
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x18C458C", Offset = "0x18C458C", VA = "0x18C458C")]
		private void LaserPointer_UseButtonUpLeft(LLController sender)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x18C4614", Offset = "0x18C4614", VA = "0x18C4614")]
		private void LaserPointer_UseButtonDownRight(LLController sender)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x18C469C", Offset = "0x18C469C", VA = "0x18C469C")]
		private void LaserPointer_UseButtonDownLeft(LLController sender)
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x18C4418", Offset = "0x18C4418", VA = "0x18C4418")]
		private void SaveHandSide(GameConfiguration.LaserHand handside)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x18C4724", Offset = "0x18C4724", VA = "0x18C4724")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x18C4B10", Offset = "0x18C4B10", VA = "0x18C4B10")]
		private void Update()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x18C5B98", Offset = "0x18C5B98", VA = "0x18C5B98")]
		private Transform CreateFingerTip(LLManager.HandSide handSide)
		{
			return null;
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x18C5FAC", Offset = "0x18C5FAC", VA = "0x18C5FAC")]
		private Transform FindRecursively(string v, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x18C64AC", Offset = "0x18C64AC", VA = "0x18C64AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x18C66D8", Offset = "0x18C66D8", VA = "0x18C66D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x18C6770", Offset = "0x18C6770", VA = "0x18C6770")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class LeaveReviewController : MonoBehaviour
	{
		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string OCULUS_APP_LAB_URL;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7AC")]
		private static readonly int GAME_START_COUNT_REVIEW_REQUEST;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton button;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC85")]
		private FrameworkManager fm;

		[Token(Token = "0x14000059")]
		public event Action<bool> reviewRequestIsActive
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x18C89C8", Offset = "0x18C89C8", VA = "0x18C89C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28A14", Offset = "0xC28A14")]
			add
			{
			}
			[Token(Token = "0x600260D")]
			[Address(RVA = "0x18C8B14", Offset = "0x18C8B14", VA = "0x18C8B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28A50", Offset = "0xC28A50")]
			remove
			{
			}
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x18C8C60", Offset = "0x18C8C60", VA = "0x18C8C60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x18C8E90", Offset = "0x18C8E90", VA = "0x18C8E90")]
		private void Start()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x18C90C4", Offset = "0x18C90C4", VA = "0x18C90C4")]
		public void ShowReviewRequest()
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x18C9518", Offset = "0x18C9518", VA = "0x18C9518")]
		private void Button_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x18C9618", Offset = "0x18C9618", VA = "0x18C9618")]
		public LeaveReviewController()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x18C96F0", Offset = "0x18C96F0", VA = "0x18C96F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28A8C", Offset = "0xC28A8C")]
		private void <ShowReviewRequest>b__10_0(int btn, bool dontcare)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class EnvironmentListItemView : ListItemView
	{
		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image previewImage;

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1715844", Offset = "0x1715844", VA = "0x1715844")]
		internal void SetPreviewImage(Sprite image)
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x171589C", Offset = "0x171589C", VA = "0x171589C")]
		public EnvironmentListItemView()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	internal class EnvironmentListManager : GenericListManager<EnvironmentListItemView>
	{
		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7B4")]
		private EnvironmentManager environmentManager;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameEnvironment> environments;

		[Token(Token = "0x1400005A")]
		public event Action<GameEnvironment> EnvClicked
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0x1713D6C", Offset = "0x1713D6C", VA = "0x1713D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28AC8", Offset = "0xC28AC8")]
			add
			{
			}
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x17158CC", Offset = "0x17158CC", VA = "0x17158CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28B04", Offset = "0xC28B04")]
			remove
			{
			}
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1715A18", Offset = "0x1715A18", VA = "0x1715A18", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x1715B30", Offset = "0x1715B30", VA = "0x1715B30")]
		private void Start()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1714B54", Offset = "0x1714B54", VA = "0x1714B54")]
		public void RefreshData()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x1715C2C", Offset = "0x1715C2C", VA = "0x1715C2C", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x171533C", Offset = "0x171533C", VA = "0x171533C")]
		internal void SetEnvironment(GameEnvironment selectedEnvironment)
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x1715D50", Offset = "0x1715D50", VA = "0x1715D50", Slot = "5")]
		internal override bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1715D74", Offset = "0x1715D74", VA = "0x1715D74", Slot = "7")]
		internal override void PopulateItem(EnvironmentListItemView item, int index)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1715E7C", Offset = "0x1715E7C", VA = "0x1715E7C")]
		public EnvironmentListManager()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class FileListItemViewWithButton : ListItemViewWithButton, IListItemWithIconAndText
	{
		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI icon;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC8C")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x171AA00", Offset = "0x171AA00", VA = "0x171AA00", Slot = "6")]
		public void SetIcon(string text)
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x171AA58", Offset = "0x171AA58", VA = "0x171AA58", Slot = "7")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x171AAB0", Offset = "0x171AAB0", VA = "0x171AAB0", Slot = "5")]
		internal override bool ShowAlways()
		{
			return default(bool);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x171AAD4", Offset = "0x171AAD4", VA = "0x171AAD4")]
		public FileListItemViewWithButton()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public abstract class FileListManager<T> : GenericListManager<T> where T : ListItemView, IListItemWithIconAndText
	{
		[Serializable]
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE26AC", Offset = "0xBE26AC")]
		private sealed class <>c
		{
			[Token(Token = "0x40030D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<DriveInfo> <>9__32_0;

			[Token(Token = "0x6003184")]
			public <>c()
			{
			}

			[Token(Token = "0x6003185")]
			internal int <GenerateDriveList>b__32_0(DriveInfo item1, DriveInfo item2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE26E8", Offset = "0xBE26E8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40030D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FileSystemInfo fsi;

			[Token(Token = "0x6003186")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6003187")]
			internal bool <GenerateDirEntries>b__1(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2724", Offset = "0xBE2724")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40030D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string entryName;

			[Token(Token = "0x6003188")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6003189")]
			internal bool <GetIndexOfEntry>b__0(FileSystemInfo item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string DIR_ICON;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI currentDirName;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton dirUpButton;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject missingPermissionPanel;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private PermissionsHelper permissionsHelper;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected DirectoryInfo currentDir;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<FileSystemInfo> items;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<DriveInfo> drives;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool isShowingDrives;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string androidBasePath;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isMissingPermission;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPermissionGranted;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected FrameworkManager fm;

		[Token(Token = "0x1400005B")]
		public event Action<int, string> FileClicked
		{
			[Token(Token = "0x6002625")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28B40", Offset = "0xC28B40")]
			add
			{
			}
			[Token(Token = "0x6002626")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28B7C", Offset = "0xC28B7C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action<string> NavigationHappened
		{
			[Token(Token = "0x6002627")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28BB8", Offset = "0xC28BB8")]
			add
			{
			}
			[Token(Token = "0x6002628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28BF4", Offset = "0xC28BF4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002629")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x600262A")]
		private void PermissionsHelper_PermissionGranted()
		{
		}

		[Token(Token = "0x600262B")]
		private void Start()
		{
		}

		[Token(Token = "0x600262C")]
		private void Update()
		{
		}

		[Token(Token = "0x600262D")]
		private void DirUpButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600262E")]
		protected virtual void DriveListShown()
		{
		}

		[Token(Token = "0x600262F")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x6002630")]
		protected virtual void ItemClickedInternal(int index)
		{
		}

		[Token(Token = "0x6002631")]
		internal override void PopulateItem(T item, int index)
		{
		}

		[Token(Token = "0x6002632")]
		protected virtual void DecorateItem(T item, FileSystemInfo fsi)
		{
		}

		[Token(Token = "0x6002633")]
		protected abstract void PopulateItem(T item, FileSystemInfo fsi);

		[Token(Token = "0x6002634")]
		protected abstract void StoreScrollPosition(int index);

		[Token(Token = "0x6002635")]
		protected abstract int RestoreScrollPosition(string path);

		[Token(Token = "0x6002636")]
		private void GenerateDriveList()
		{
		}

		[Token(Token = "0x6002637")]
		protected void GenerateList()
		{
		}

		[Token(Token = "0x6002638")]
		public List<FileSystemInfo> GenerateDirEntries(string dirName, bool includeDirectories = true)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		protected abstract string[] GetFileExts();

		[Token(Token = "0x600263A")]
		protected bool IsDirectory(FileSystemInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x600263B")]
		public void Initialize(string dir)
		{
		}

		[Token(Token = "0x600263C")]
		protected virtual void InitializeInternal(bool isDriveList)
		{
		}

		[Token(Token = "0x600263D")]
		public int GetIndexOfEntry(string entryName)
		{
			return default(int);
		}

		[Token(Token = "0x600263E")]
		private void UpdateCurrentDirText()
		{
		}

		[Token(Token = "0x600263F")]
		private void ElideIfNecessary()
		{
		}

		[Token(Token = "0x6002640")]
		protected FileListManager()
		{
		}

		[Token(Token = "0x6002642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28C30", Offset = "0xC28C30")]
		private int <GenerateDirEntries>b__34_0(FileSystemInfo item1, FileSystemInfo item2)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004DA")]
	public abstract class GenericListManager<T> : MonoBehaviour where T : ListItemView
	{
		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int FAST_SCROLL_FACTOR;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform container;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform elementsContainer;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LayoutGroup layoutGroup;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton scrollUpButton;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton scrollDownButton;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton scrollUpFastButton;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton scrollDownFastButton;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T itemTemplate;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		internal GameObject emptyListInfo;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal List<T> viewsItems;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea toggleArea;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int selectedIndex;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int itemsPerPage;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int listOffset;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int listSize;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x6002643")]
		internal virtual void Awake()
		{
		}

		[Token(Token = "0x6002644")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002645")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002646")]
		private void ScrollUpButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002647")]
		private void ScrollDownButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002648")]
		private void ScrollUpFastButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002649")]
		private void ScrollDownFastButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600264A")]
		internal void PerformScrolling(int stepsize)
		{
		}

		[Token(Token = "0x600264B")]
		internal void GenerateList(int listSize, bool scrollToFirstPage = true)
		{
		}

		[Token(Token = "0x600264C")]
		private void PopulateList()
		{
		}

		[Token(Token = "0x600264D")]
		internal void ResetSelection()
		{
		}

		[Token(Token = "0x600264E")]
		private void ValidateScrollButtons()
		{
		}

		[Token(Token = "0x600264F")]
		public void SelectItem(int index)
		{
		}

		[Token(Token = "0x6002650")]
		public void SelectItemSilent(int index)
		{
		}

		[Token(Token = "0x6002651")]
		public void ScrollItemIntoSight(int itemIndex)
		{
		}

		[Token(Token = "0x6002652")]
		private void ItemClicked_Internal(int index)
		{
		}

		[Token(Token = "0x6002653")]
		private void ItemHovered_Internal()
		{
		}

		[Token(Token = "0x6002654")]
		internal virtual bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6002655")]
		internal abstract void ItemClicked(int index);

		[Token(Token = "0x6002656")]
		internal abstract void PopulateItem(T item, int index);

		[Token(Token = "0x6002657")]
		internal virtual void InitializeItem(T item)
		{
		}

		[Token(Token = "0x6002658")]
		internal int IndexLocalToGlobal(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002659")]
		protected GenericListManager()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class HighscoreItemView : ListItemView
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Image highlightBackground;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7BC")]
		public TextMeshProUGUI weaponIcon;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI rankText;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI nameText;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI scoreText;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC93")]
		public TextMeshProUGUI rankIcon;

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x17B1A00", Offset = "0x17B1A00", VA = "0x17B1A00")]
		public HighscoreItemView()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class HighscoreManager : GenericListManager<HighscoreItemView>
	{
		[Token(Token = "0x20007D0")]
		public enum InfoType
		{
			[Token(Token = "0x40030DA")]
			Empty,
			[Token(Token = "0x40030DB")]
			Loading,
			[Token(Token = "0x40030DC")]
			PlatformNotAvailable
		}

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Dictionary<WeaponType, string> WEAPON_ICON;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7C4")]
		private static readonly Color[] RANK_COLORS;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color highlightColor;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton toTopButton;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton toPlayerPosButton;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC9A")]
		private int playerPos;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<LLPlatform.LeaderboardEntry> entries;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7CC")]
		private object playerId;

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x17B1A30", Offset = "0x17B1A30", VA = "0x17B1A30", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x17B1B70", Offset = "0x17B1B70", VA = "0x17B1B70")]
		private void ToPlayerPosButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x17B1C00", Offset = "0x17B1C00", VA = "0x17B1C00")]
		private void ToTopButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x17B1C84", Offset = "0x17B1C84", VA = "0x17B1C84")]
		public void PopulateHighscore(List<LLPlatform.LeaderboardEntry> entries, object playerId, bool isFirstCallback)
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x17B2770", Offset = "0x17B2770", VA = "0x17B2770")]
		private void HideLoadingScreen()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x17B27C8", Offset = "0x17B27C8", VA = "0x17B27C8", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x17B27E0", Offset = "0x17B27E0", VA = "0x17B27E0", Slot = "7")]
		internal override void PopulateItem(HighscoreItemView item, int index)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x17B2414", Offset = "0x17B2414", VA = "0x17B2414")]
		internal void SetInfoType(InfoType infoType)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x17B2FA0", Offset = "0x17B2FA0", VA = "0x17B2FA0")]
		public HighscoreManager()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class IconTextItemView : ListItemView, IListItemWithIconAndText
	{
		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI icon;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7D4")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x17B6054", Offset = "0x17B6054", VA = "0x17B6054", Slot = "5")]
		public void SetIcon(string text)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x17B60AC", Offset = "0x17B60AC", VA = "0x17B60AC", Slot = "6")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x17B6104", Offset = "0x17B6104", VA = "0x17B6104")]
		public IconTextItemView()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class ListItemView : MonoBehaviour
	{
		[Token(Token = "0x20007D1")]
		public delegate void ItemHovered();

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC0C75C", Offset = "0xC0C75C")]
		private int <index>k__BackingField;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCA8")]
		private MenuToggleButton mtb;

		[Token(Token = "0x17000468")]
		public int index
		{
			[Token(Token = "0x6002669")]
			[Address(RVA = "0x18CA780", Offset = "0x18CA780", VA = "0x18CA780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28C6C", Offset = "0xC28C6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x18CA7B0", Offset = "0x18CA7B0", VA = "0x18CA7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28CA8", Offset = "0xC28CA8")]
			set
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action<int> ItemClicked
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x18CA7E8", Offset = "0x18CA7E8", VA = "0x18CA7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28CE4", Offset = "0xC28CE4")]
			add
			{
			}
			[Token(Token = "0x600266C")]
			[Address(RVA = "0x18CA934", Offset = "0x18CA934", VA = "0x18CA934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28D20", Offset = "0xC28D20")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event ItemHovered itemHovered
		{
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x18CAA80", Offset = "0x18CAA80", VA = "0x18CAA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28D5C", Offset = "0xC28D5C")]
			add
			{
			}
			[Token(Token = "0x600266E")]
			[Address(RVA = "0x18CABCC", Offset = "0x18CABCC", VA = "0x18CABCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28D98", Offset = "0xC28D98")]
			remove
			{
			}
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x18CAD18", Offset = "0x18CAD18", VA = "0x18CAD18", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x18CAF2C", Offset = "0x18CAF2C", VA = "0x18CAF2C")]
		private void Mtb_onClick(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x18CB028", Offset = "0x18CB028", VA = "0x18CB028")]
		private void Mtb_onHover(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x18CB310", Offset = "0x18CB310", VA = "0x18CB310")]
		internal bool IsSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x18CB488", Offset = "0x18CB488", VA = "0x18CB488")]
		public ListItemView()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public abstract class ListItemViewWithButton : ListItemView
	{
		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton button;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7DC")]
		[SerializeField]
		private List<RectTransform> itemsToMove;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<RectTransform> itemsToShorten;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float margin;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCAF")]
		private Dictionary<RectTransform, float> initialPosX;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<RectTransform, float> initialWidth;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7E4")]
		private bool isButtonEnabled;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x1400005F")]
		public event Action<int> ButtonClicked
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0x18CB5C8", Offset = "0x18CB5C8", VA = "0x18CB5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28DD4", Offset = "0xC28DD4")]
			add
			{
			}
			[Token(Token = "0x6002675")]
			[Address(RVA = "0x18CB714", Offset = "0x18CB714", VA = "0x18CB714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28E10", Offset = "0xC28E10")]
			remove
			{
			}
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x18CB860", Offset = "0x18CB860", VA = "0x18CB860", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x18CBF40", Offset = "0x18CBF40", VA = "0x18CBF40")]
		private void Button_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x18CC05C", Offset = "0x18CC05C", VA = "0x18CC05C")]
		private void Button_onHover(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x18CC0A8", Offset = "0x18CC0A8", VA = "0x18CC0A8")]
		private void Mtb_onClick(MenuToggleButton button)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x18CC1B4", Offset = "0x18CC1B4", VA = "0x18CC1B4")]
		private void Mtb_OnDeselect(MenuToggleButton obj)
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x18CC0DC", Offset = "0x18CC0DC", VA = "0x18CC0DC")]
		public void EvaluateButtonState()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x18CC1E8", Offset = "0x18CC1E8", VA = "0x18CC1E8")]
		public void ToggleButton(bool shouldShow)
		{
		}

		[Token(Token = "0x600267D")]
		internal abstract bool ShowAlways();

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x18CCB04", Offset = "0x18CCB04", VA = "0x18CCB04")]
		public void SetEnableButton(bool shouldEnable)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x18CCB64", Offset = "0x18CCB64", VA = "0x18CCB64")]
		protected ListItemViewWithButton()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class OfficialSongListItemView : ListItemViewWithButton
	{
		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI title;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI artist;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCB6")]
		[SerializeField]
		private TextMeshProUGUI difficulties;

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x1808F40", Offset = "0x1808F40", VA = "0x1808F40")]
		public void SetTitle(string text)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x1808F98", Offset = "0x1808F98", VA = "0x1808F98")]
		public void SetArtist(string text)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1808FF0", Offset = "0x1808FF0", VA = "0x1808FF0")]
		public void SetDifficulties(string text)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1809048", Offset = "0x1809048", VA = "0x1809048", Slot = "5")]
		internal override bool ShowAlways()
		{
			return default(bool);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x180906C", Offset = "0x180906C", VA = "0x180906C")]
		public OfficialSongListItemView()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	internal class OfficialSongListManager : GenericListManager<OfficialSongListItemView>
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongManager songManager;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Song> songs;

		[Token(Token = "0x14000060")]
		public event Action<int> SongClicked
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x180909C", Offset = "0x180909C", VA = "0x180909C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28E4C", Offset = "0xC28E4C")]
			add
			{
			}
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x18091E8", Offset = "0x18091E8", VA = "0x18091E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28E88", Offset = "0xC28E88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<Song> AddToPlaylistClicked
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x1809334", Offset = "0x1809334", VA = "0x1809334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28EC4", Offset = "0xC28EC4")]
			add
			{
			}
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x1809480", Offset = "0x1809480", VA = "0x1809480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28F00", Offset = "0xC28F00")]
			remove
			{
			}
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x18095CC", Offset = "0x18095CC", VA = "0x18095CC", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x18096E4", Offset = "0x18096E4", VA = "0x18096E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x18097EC", Offset = "0x18097EC", VA = "0x18097EC")]
		public void SetSongPack(int songPack)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x18098F8", Offset = "0x18098F8", VA = "0x18098F8", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x18099E4", Offset = "0x18099E4", VA = "0x18099E4", Slot = "5")]
		internal override bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x1809A08", Offset = "0x1809A08", VA = "0x1809A08", Slot = "7")]
		internal override void PopulateItem(OfficialSongListItemView item, int index)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1809D50", Offset = "0x1809D50", VA = "0x1809D50", Slot = "8")]
		internal override void InitializeItem(OfficialSongListItemView item)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1809E2C", Offset = "0x1809E2C", VA = "0x1809E2C")]
		private void AddToPlaylistButton_onClick(int index)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x1809F74", Offset = "0x1809F74", VA = "0x1809F74")]
		public void SetShowAddToPlaylistButton(bool shouldShow)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x180A2B0", Offset = "0x180A2B0", VA = "0x180A2B0")]
		public OfficialSongListManager()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class PlaylistEndscreenManager : GenericListManager<PlaylistSongItemView>
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCBD")]
		private List<SongStatistic> songStats;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int index;

		[Token(Token = "0x14000062")]
		public event Action<int> songClicked
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0x1761620", Offset = "0x1761620", VA = "0x1761620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28F3C", Offset = "0xC28F3C")]
			add
			{
			}
			[Token(Token = "0x6002694")]
			[Address(RVA = "0x176176C", Offset = "0x176176C", VA = "0x176176C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28F78", Offset = "0xC28F78")]
			remove
			{
			}
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x17618B8", Offset = "0x17618B8", VA = "0x17618B8")]
		public void SetSongStats(List<SongStatistic> songStats)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x17619BC", Offset = "0x17619BC", VA = "0x17619BC", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1761ABC", Offset = "0x1761ABC", VA = "0x1761ABC", Slot = "7")]
		internal override void PopulateItem(PlaylistSongItemView item, int index)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x1762260", Offset = "0x1762260", VA = "0x1762260")]
		public PlaylistEndscreenManager()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class PlaylistEntryItemView : ListItemViewWithButton
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6CC")]
		private static readonly Color DARK_GREY;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color LIGHT_GREY;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI title;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI difficulties;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCC3")]
		[SerializeField]
		private GameObject warning;

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1762628", Offset = "0x1762628", VA = "0x1762628")]
		public void SetTitle(string text)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x1762680", Offset = "0x1762680", VA = "0x1762680")]
		public void SetDifficulties(string text)
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x17626D8", Offset = "0x17626D8", VA = "0x17626D8")]
		public void SetWarning(bool isWarning)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1762A1C", Offset = "0x1762A1C", VA = "0x1762A1C", Slot = "5")]
		internal override bool ShowAlways()
		{
			return default(bool);
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1762A40", Offset = "0x1762A40", VA = "0x1762A40")]
		public PlaylistEntryItemView()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class PlaylistEntryManager : GenericListManager<PlaylistEntryItemView>
	{
		[Token(Token = "0x20007D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2760", Offset = "0xBE2760")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40030DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlaylistEntryManager <>4__this;

			[Token(Token = "0x40030DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Playlist temporaryList;

			[Token(Token = "0x600318E")]
			[Address(RVA = "0x1765718", Offset = "0x1765718", VA = "0x1765718")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x1765BF4", Offset = "0x1765BF4", VA = "0x1765BF4")]
			internal void <StartButton_onClick>b__0(int result, bool checkbox)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE279C", Offset = "0xBE279C")]
		private sealed class <>c
		{
			[Token(Token = "0x40030DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDCDF")]
			public static Action<int, bool> <>9__48_1;

			[Token(Token = "0x6003191")]
			[Address(RVA = "0x1765BA0", Offset = "0x1765BA0", VA = "0x1765BA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003192")]
			[Address(RVA = "0x1765BD0", Offset = "0x1765BD0", VA = "0x1765BD0")]
			internal void <StartButton_onClick>b__48_1(int result, bool checkbox)
			{
			}
		}

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCCA")]
		[SerializeField]
		private MenuToggleArea shuffleToggleArea;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuToggleArea enduranceToggleArea;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D7FC")]
		[SerializeField]
		private MenuToggleArea repeatToggleArea;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton renamePlaylist;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton deletePlaylist;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton moveUp;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCD1")]
		[SerializeField]
		private MenuSelectButton moveDown;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton findSong;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D804")]
		[SerializeField]
		private ValueBasedLocalizedString songCounter;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI durationText;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private StringEditDialog playlistNameEditDialog;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCD8")]
		[SerializeField]
		private StartButton playlistStartButton;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Playlist playlist;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D80C")]
		private bool isInteractable;

		[Token(Token = "0x14000063")]
		public event Action<Playlist> playlistChanged
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0x175E114", Offset = "0x175E114", VA = "0x175E114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28FB4", Offset = "0xC28FB4")]
			add
			{
			}
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x1762C9C", Offset = "0x1762C9C", VA = "0x1762C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC28FF0", Offset = "0xC28FF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event Action<Playlist> PlaylistRenamed
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x175E260", Offset = "0x175E260", VA = "0x175E260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2902C", Offset = "0xC2902C")]
			add
			{
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x1762DE8", Offset = "0x1762DE8", VA = "0x1762DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29068", Offset = "0xC29068")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event Action<Playlist> PlaylistDeleted
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x175E3AC", Offset = "0x175E3AC", VA = "0x175E3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC290A4", Offset = "0xC290A4")]
			add
			{
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x1762F34", Offset = "0x1762F34", VA = "0x1762F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC290E0", Offset = "0xC290E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action<PlaylistEntry> entrySelected
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x175E4F8", Offset = "0x175E4F8", VA = "0x175E4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2911C", Offset = "0xC2911C")]
			add
			{
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x1763080", Offset = "0x1763080", VA = "0x1763080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29158", Offset = "0xC29158")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event Action<Playlist> startPressed
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x175E644", Offset = "0x175E644", VA = "0x175E644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29194", Offset = "0xC29194")]
			add
			{
			}
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x17631CC", Offset = "0x17631CC", VA = "0x17631CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC291D0", Offset = "0xC291D0")]
			remove
			{
			}
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x1763318", Offset = "0x1763318", VA = "0x1763318", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x1763960", Offset = "0x1763960", VA = "0x1763960")]
		private void FindSong_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x1763AF8", Offset = "0x1763AF8", VA = "0x1763AF8")]
		private void MoveUp_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1763D08", Offset = "0x1763D08", VA = "0x1763D08")]
		private void MoveDown_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x1763F74", Offset = "0x1763F74", VA = "0x1763F74")]
		private void DeletePlaylist_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x176414C", Offset = "0x176414C", VA = "0x176414C")]
		private void RenamePlaylist_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x17640E0", Offset = "0x17640E0", VA = "0x17640E0")]
		private void ToggleStartButtonActive(bool isActive)
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1764298", Offset = "0x1764298", VA = "0x1764298")]
		private void RepeatToggleArea_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x17643F4", Offset = "0x17643F4", VA = "0x17643F4")]
		private void EnduranceToggleArea_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x1764550", Offset = "0x1764550", VA = "0x1764550")]
		private void ShuffleToggleArea_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x17646AC", Offset = "0x17646AC", VA = "0x17646AC", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x17647B8", Offset = "0x17647B8", VA = "0x17647B8")]
		private void UpdateSongStats()
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x175FEEC", Offset = "0x175FEEC", VA = "0x175FEEC")]
		public void AddSongToPlaylist(Song song, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x175FA0C", Offset = "0x175FA0C", VA = "0x175FA0C")]
		public void SetPlaylist(Playlist playlist)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x17607E4", Offset = "0x17607E4", VA = "0x17607E4")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x1764888", Offset = "0x1764888", VA = "0x1764888", Slot = "7")]
		internal override void PopulateItem(PlaylistEntryItemView item, int index)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x1764B70", Offset = "0x1764B70", VA = "0x1764B70", Slot = "8")]
		internal override void InitializeItem(PlaylistEntryItemView item)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x1764C4C", Offset = "0x1764C4C", VA = "0x1764C4C")]
		private void RemoveFromPlaylistButton_onClick(int localIndex)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x1764F5C", Offset = "0x1764F5C", VA = "0x1764F5C")]
		private void StartButton_onClick()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x1763748", Offset = "0x1763748", VA = "0x1763748")]
		private void SetSongSelected(bool isSelected, bool isFirst = false, bool isLast = false)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1765748", Offset = "0x1765748", VA = "0x1765748")]
		public PlaylistEntryManager()
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x1765838", Offset = "0x1765838", VA = "0x1765838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2920C", Offset = "0xC2920C")]
		private void <DeletePlaylist_onClick>b__34_0(int result, bool checkbox)
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1765984", Offset = "0x1765984", VA = "0x1765984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29248", Offset = "0xC29248")]
		private void <RenamePlaylist_onClick>b__35_0(bool ok, string result)
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class PlaylistListItemView : ListItemView
	{
		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI plName;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D814")]
		[SerializeField]
		private TextMeshProUGUI stats;

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x1765CD0", Offset = "0x1765CD0", VA = "0x1765CD0")]
		public void SetName(string text)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x1765D28", Offset = "0x1765D28", VA = "0x1765D28")]
		public void SetStats(string text)
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x1765D80", Offset = "0x1765D80", VA = "0x1765D80")]
		public PlaylistListItemView()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class PlaylistListManager : GenericListManager<PlaylistListItemView>
	{
		[Serializable]
		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE27D8", Offset = "0xBE27D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D81C")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<Playlist> <>9__16_0;

			[Token(Token = "0x6003194")]
			[Address(RVA = "0x1766994", Offset = "0x1766994", VA = "0x1766994")]
			public <>c()
			{
			}

			[Token(Token = "0x6003195")]
			[Address(RVA = "0x17669C4", Offset = "0x17669C4", VA = "0x17669C4")]
			internal int <SortList>b__16_0(Playlist x, Playlist y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton addButton;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCE6")]
		[SerializeField]
		private StringEditDialog playlistNameEditDialog;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Playlist> playlists;

		[Token(Token = "0x14000068")]
		public event Action<Playlist, int> playlistSelected
		{
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x175DE7C", Offset = "0x175DE7C", VA = "0x175DE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29284", Offset = "0xC29284")]
			add
			{
			}
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x1765DB0", Offset = "0x1765DB0", VA = "0x1765DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC292C0", Offset = "0xC292C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action playlistsChanged
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x175DFC8", Offset = "0x175DFC8", VA = "0x175DFC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC292FC", Offset = "0xC292FC")]
			add
			{
			}
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x1765EFC", Offset = "0x1765EFC", VA = "0x1765EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29338", Offset = "0xC29338")]
			remove
			{
			}
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1766048", Offset = "0x1766048", VA = "0x1766048", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1766130", Offset = "0x1766130", VA = "0x1766130")]
		private void AddButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1766268", Offset = "0x1766268", VA = "0x1766268", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x175F0CC", Offset = "0x175F0CC", VA = "0x175F0CC")]
		public void SetPlaylists(List<Playlist> playlists)
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1766398", Offset = "0x1766398", VA = "0x1766398", Slot = "7")]
		internal override void PopulateItem(PlaylistListItemView item, int index)
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x175ECE4", Offset = "0x175ECE4", VA = "0x175ECE4")]
		public void DeletePlaylist(Playlist playlist)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x175F7F8", Offset = "0x175F7F8", VA = "0x175F7F8")]
		public void UpdateList()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x175E914", Offset = "0x175E914", VA = "0x175E914")]
		public void SortList()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x17665B8", Offset = "0x17665B8", VA = "0x17665B8")]
		public PlaylistListManager()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x17666A8", Offset = "0x17666A8", VA = "0x17666A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29374", Offset = "0xC29374")]
		private void <AddButton_onClick>b__10_0(bool ok, string result)
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class SkyboxFileListManager : FileListManager<IconTextItemView>
	{
		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] FILE_EXTS;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string IMAGE_ICON;

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x177CD58", Offset = "0x177CD58", VA = "0x177CD58", Slot = "5")]
		internal override bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x177CD7C", Offset = "0x177CD7C", VA = "0x177CD7C", Slot = "13")]
		protected override void StoreScrollPosition(int index)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x177CE78", Offset = "0x177CE78", VA = "0x177CE78", Slot = "14")]
		protected override int RestoreScrollPosition(string path)
		{
			return default(int);
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x177CF64", Offset = "0x177CF64", VA = "0x177CF64", Slot = "12")]
		protected override void PopulateItem(IconTextItemView item, FileSystemInfo fsi)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x177D0C8", Offset = "0x177D0C8", VA = "0x177D0C8", Slot = "15")]
		protected override string[] GetFileExts()
		{
			return null;
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x177D1B4", Offset = "0x177D1B4", VA = "0x177D1B4")]
		public SkyboxFileListManager()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class SkyboxInternalListManager : GenericListManager<IconTextItemView>
	{
		[Token(Token = "0x400220B")]
		public const string INTERNAL_PREFIX = ":internal:";

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string[] SKYBOXES;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D824")]
		private static readonly string IMAGE_ICON;

		[Token(Token = "0x1400006A")]
		public event Action<string> SkyboxSelected
		{
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x177D440", Offset = "0x177D440", VA = "0x177D440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC293B0", Offset = "0xC293B0")]
			add
			{
			}
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x177D58C", Offset = "0x177D58C", VA = "0x177D58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC293EC", Offset = "0xC293EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x177D6D8", Offset = "0x177D6D8", VA = "0x177D6D8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x177D804", Offset = "0x177D804", VA = "0x177D804", Slot = "5")]
		internal override bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x177D828", Offset = "0x177D828", VA = "0x177D828", Slot = "6")]
		internal override void ItemClicked(int index)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x177D9F0", Offset = "0x177D9F0", VA = "0x177D9F0", Slot = "7")]
		internal override void PopulateItem(IconTextItemView item, int index)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x177DB6C", Offset = "0x177DB6C", VA = "0x177DB6C")]
		internal void SelectSkybox(string nameWithPrefix)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x177DE28", Offset = "0x177DE28", VA = "0x177DE28")]
		public SkyboxInternalListManager()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class SongFileListManager : FileListManager<FileListItemViewWithButton>
	{
		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] FILE_EXTS;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string MUSIC_ICON;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCF4")]
		[SerializeField]
		private MenuSelectButton addFolderToPlaylistButton;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool showAddToPlaylistButtons;

		[Token(Token = "0x1400006B")]
		public event Action<string> SongAddToPlaylistClicked
		{
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x174DF64", Offset = "0x174DF64", VA = "0x174DF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29428", Offset = "0xC29428")]
			add
			{
			}
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x174E0B0", Offset = "0x174E0B0", VA = "0x174E0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29464", Offset = "0xC29464")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event Action<string> FolderAddToPlaylistClicked
		{
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x174E1FC", Offset = "0x174E1FC", VA = "0x174E1FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC294A0", Offset = "0xC294A0")]
			add
			{
			}
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x174E348", Offset = "0x174E348", VA = "0x174E348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC294DC", Offset = "0xC294DC")]
			remove
			{
			}
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x174E494", Offset = "0x174E494", VA = "0x174E494", Slot = "4")]
		internal override void Awake()
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x174E57C", Offset = "0x174E57C", VA = "0x174E57C")]
		private void AddFolderToPlaylistButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x174E690", Offset = "0x174E690", VA = "0x174E690", Slot = "5")]
		internal override bool ShouldPlayClickSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x174E6B4", Offset = "0x174E6B4", VA = "0x174E6B4", Slot = "13")]
		protected override void StoreScrollPosition(int index)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x174E7B0", Offset = "0x174E7B0", VA = "0x174E7B0", Slot = "14")]
		protected override int RestoreScrollPosition(string path)
		{
			return default(int);
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x174E89C", Offset = "0x174E89C", VA = "0x174E89C")]
		public void SetShowAddToPlaylistButton(bool shouldShow)
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x174E9C0", Offset = "0x174E9C0", VA = "0x174E9C0", Slot = "8")]
		internal override void InitializeItem(FileListItemViewWithButton item)
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x174EA9C", Offset = "0x174EA9C", VA = "0x174EA9C")]
		private void AddToPlaylistButton_onClick(int localIndex)
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x174EC74", Offset = "0x174EC74", VA = "0x174EC74", Slot = "9")]
		protected override void DriveListShown()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x174ECE4", Offset = "0x174ECE4", VA = "0x174ECE4", Slot = "10")]
		protected override void ItemClickedInternal(int index)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x174ED64", Offset = "0x174ED64", VA = "0x174ED64", Slot = "11")]
		protected override void DecorateItem(FileListItemViewWithButton item, FileSystemInfo fsi)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x174EE90", Offset = "0x174EE90", VA = "0x174EE90", Slot = "12")]
		protected override void PopulateItem(FileListItemViewWithButton item, FileSystemInfo fsi)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x174F02C", Offset = "0x174F02C", VA = "0x174F02C", Slot = "16")]
		protected override void InitializeInternal(bool isDriveList)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x174F11C", Offset = "0x174F11C", VA = "0x174F11C", Slot = "15")]
		protected override string[] GetFileExts()
		{
			return null;
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x174F208", Offset = "0x174F208", VA = "0x174F208")]
		public SongFileListManager()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class Menu : MonoBehaviour
	{
		[Token(Token = "0x20007D5")]
		private class CountInfo
		{
			[Token(Token = "0x40030E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x17F97D4", Offset = "0x17F97D4", VA = "0x17F97D4")]
			public CountInfo(int count)
			{
			}
		}

		[Token(Token = "0x20007D6")]
		private class PlaylistProgress
		{
			[Token(Token = "0x40030E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE62")]
			public int current;

			[Token(Token = "0x40030E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public int max;

			[Token(Token = "0x40030E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9AC")]
			public string name;

			[Token(Token = "0x6003197")]
			[Address(RVA = "0x17F975C", Offset = "0x17F975C", VA = "0x17F975C")]
			public PlaylistProgress(int current, int max, string name)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2814", Offset = "0xBE2814")]
		private sealed class <>c
		{
			[Token(Token = "0x40030E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__315_0;

			[Token(Token = "0x40030E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__319_0;

			[Token(Token = "0x40030EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE69")]
			public static Predicate<Song> <>9__321_0;

			[Token(Token = "0x40030EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Func<Song, string> <>9__321_1;

			[Token(Token = "0x40030EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9B4")]
			public static Func<string, string, string> <>9__321_2;

			[Token(Token = "0x40030ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__321_3;

			[Token(Token = "0x40030EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__324_0;

			[Token(Token = "0x40030EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<int, bool> <>9__398_0;

			[Token(Token = "0x40030F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE70")]
			public static Action<int, bool> <>9__399_0;

			[Token(Token = "0x40030F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<int, bool> <>9__402_0;

			[Token(Token = "0x6003199")]
			[Address(RVA = "0x18B7A24", Offset = "0x18B7A24", VA = "0x18B7A24")]
			public <>c()
			{
			}

			[Token(Token = "0x600319A")]
			[Address(RVA = "0x18B7A54", Offset = "0x18B7A54", VA = "0x18B7A54")]
			internal void <LocalSongsInfoButton_onClick>b__315_0(int status, bool ok)
			{
			}

			[Token(Token = "0x600319B")]
			[Address(RVA = "0x18B7A78", Offset = "0x18B7A78", VA = "0x18B7A78")]
			internal void <FileListManager_FolderAddToPlaylistClicked>b__319_0(int result, bool checkbox)
			{
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x18B7A9C", Offset = "0x18B7A9C", VA = "0x18B7A9C")]
			internal bool <AddFolderToPlaylist>b__321_0(Song song)
			{
				return default(bool);
			}

			[Token(Token = "0x600319D")]
			[Address(RVA = "0x18B7B34", Offset = "0x18B7B34", VA = "0x18B7B34")]
			internal string <AddFolderToPlaylist>b__321_1(Song song)
			{
				return null;
			}

			[Token(Token = "0x600319E")]
			[Address(RVA = "0x18B7B84", Offset = "0x18B7B84", VA = "0x18B7B84")]
			internal string <AddFolderToPlaylist>b__321_2(string s1, string s2)
			{
				return null;
			}

			[Token(Token = "0x600319F")]
			[Address(RVA = "0x18B7C30", Offset = "0x18B7C30", VA = "0x18B7C30")]
			internal void <AddFolderToPlaylist>b__321_3(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x18B7C54", Offset = "0x18B7C54", VA = "0x18B7C54")]
			internal void <ShowNoPlaylistMessage>b__324_0(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x18B7C78", Offset = "0x18B7C78", VA = "0x18B7C78")]
			internal void <OpenGeneratorSettings>b__398_0(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x18B7C9C", Offset = "0x18B7C9C", VA = "0x18B7C9C")]
			internal void <DetectBPMAndOffset>b__399_0(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x18B7CC0", Offset = "0x18B7CC0", VA = "0x18B7CC0")]
			internal void <StartSong>b__402_0(int a, bool b)
			{
			}
		}

		[Token(Token = "0x20007D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2850", Offset = "0xBE2850")]
		private sealed class <>c__DisplayClass317_0
		{
			[Token(Token = "0x40030F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9BC")]
			public Song song;

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x18971D8", Offset = "0x18971D8", VA = "0x18971D8")]
			public <>c__DisplayClass317_0()
			{
			}

			[Token(Token = "0x60031A5")]
			[Address(RVA = "0x18B7CE4", Offset = "0x18B7CE4", VA = "0x18B7CE4")]
			internal bool <PlaylistAdjuster_entrySelected>b__0(Song s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE288C", Offset = "0xBE288C")]
		private sealed class <>c__DisplayClass319_0
		{
			[Token(Token = "0x40030F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x40030F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string folderName;

			[Token(Token = "0x40030F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action <>9__3;

			[Token(Token = "0x40030F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE77")]
			public Action<bool, bool> <>9__2;

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0x189889C", Offset = "0x189889C", VA = "0x189889C")]
			public <>c__DisplayClass319_0()
			{
			}

			[Token(Token = "0x60031A7")]
			[Address(RVA = "0x18B7D88", Offset = "0x18B7D88", VA = "0x18B7D88")]
			internal void <FileListManager_FolderAddToPlaylistClicked>b__1(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x18B8168", Offset = "0x18B8168", VA = "0x18B8168")]
			internal void <FileListManager_FolderAddToPlaylistClicked>b__2(bool ok2, bool ignore)
			{
			}

			[Token(Token = "0x60031A9")]
			[Address(RVA = "0x18B848C", Offset = "0x18B848C", VA = "0x18B848C")]
			internal void <FileListManager_FolderAddToPlaylistClicked>b__3()
			{
			}
		}

		[Token(Token = "0x20007DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE28C8", Offset = "0xBE28C8")]
		private sealed class <AddFolderToPlaylist>d__321 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9C4")]
			private object <>2__current;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x40030FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string folderName;

			[Token(Token = "0x40030FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<FileSystemInfo> <list>5__2;

			[Token(Token = "0x40030FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE7E")]
			private int <item>5__3;

			[Token(Token = "0x40030FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private List<Song> <songs>5__4;

			[Token(Token = "0x40030FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9CC")]
			private List<FileSystemInfo>.Enumerator <>7__wrap4;

			[Token(Token = "0x40030FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FileSystemInfo <fsi>5__6;

			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Song <song>5__7;

			[Token(Token = "0x4003101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Song.Difficulty <difficulty>5__8;

			[Token(Token = "0x170005C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031AE")]
				[Address(RVA = "0x17F981C", Offset = "0x17F981C", VA = "0x17F981C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031B0")]
				[Address(RVA = "0x17F98EC", Offset = "0x17F98EC", VA = "0x17F98EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x17F72E0", Offset = "0x17F72E0", VA = "0x17F72E0")]
			[DebuggerHidden]
			public <AddFolderToPlaylist>d__321(int <>1__state)
			{
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x17F7328", Offset = "0x17F7328", VA = "0x17F7328", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x17F7564", Offset = "0x17F7564", VA = "0x17F7564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031AD")]
			[Address(RVA = "0x17F74D0", Offset = "0x17F74D0", VA = "0x17F74D0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60031AF")]
			[Address(RVA = "0x17F984C", Offset = "0x17F984C", VA = "0x17F984C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2904", Offset = "0xBE2904")]
		private sealed class <ShowBoundary>d__346 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE85")]
			private int <>1__state;

			[Token(Token = "0x4003103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x170005C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B4")]
				[Address(RVA = "0x17FCAFC", Offset = "0x17FCAFC", VA = "0x17FCAFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031B6")]
				[Address(RVA = "0x17FCBCC", Offset = "0x17FCBCC", VA = "0x17FCBCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x17FC740", Offset = "0x17FC740", VA = "0x17FC740")]
			[DebuggerHidden]
			public <ShowBoundary>d__346(int <>1__state)
			{
			}

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x17FC788", Offset = "0x17FC788", VA = "0x17FC788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B3")]
			[Address(RVA = "0x17FC79C", Offset = "0x17FC79C", VA = "0x17FC79C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B5")]
			[Address(RVA = "0x17FCB2C", Offset = "0x17FCB2C", VA = "0x17FCB2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2940", Offset = "0xBE2940")]
		private sealed class <PlayAudioOnceAvailable>d__379 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6FC")]
			private int <>1__state;

			[Token(Token = "0x4003105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x170005C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031BA")]
				[Address(RVA = "0x17FC640", Offset = "0x17FC640", VA = "0x17FC640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031BC")]
				[Address(RVA = "0x17FC710", Offset = "0x17FC710", VA = "0x17FC710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x17FBEC4", Offset = "0x17FBEC4", VA = "0x17FBEC4")]
			[DebuggerHidden]
			public <PlayAudioOnceAvailable>d__379(int <>1__state)
			{
			}

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x17FBF0C", Offset = "0x17FBF0C", VA = "0x17FBF0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x17FBF20", Offset = "0x17FBF20", VA = "0x17FBF20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031BB")]
			[Address(RVA = "0x17FC670", Offset = "0x17FC670", VA = "0x17FC670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE297C", Offset = "0xBE297C")]
		private sealed class <StartEditor>d__393 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE8B")]
			private object <>2__current;

			[Token(Token = "0x4003109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public Menu <>4__this;

			[Token(Token = "0x170005CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C0")]
				[Address(RVA = "0x17FD4F0", Offset = "0x17FD4F0", VA = "0x17FD4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C2")]
				[Address(RVA = "0x17FD5C0", Offset = "0x17FD5C0", VA = "0x17FD5C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x17FCBFC", Offset = "0x17FCBFC", VA = "0x17FCBFC")]
			[DebuggerHidden]
			public <StartEditor>d__393(int <>1__state)
			{
			}

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0x17FCC44", Offset = "0x17FCC44", VA = "0x17FCC44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x17FCC58", Offset = "0x17FCC58", VA = "0x17FCC58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C1")]
			[Address(RVA = "0x17FD520", Offset = "0x17FD520", VA = "0x17FD520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE29B8", Offset = "0xBE29B8")]
		private sealed class <StartGame>d__396 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400310A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9D4")]
			private int <>1__state;

			[Token(Token = "0x400310B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400310C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x170005CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C6")]
				[Address(RVA = "0x17FE008", Offset = "0x17FE008", VA = "0x17FE008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C8")]
				[Address(RVA = "0x17FE0D8", Offset = "0x17FE0D8", VA = "0x17FE0D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031C3")]
			[Address(RVA = "0x17FD5F0", Offset = "0x17FD5F0", VA = "0x17FD5F0")]
			[DebuggerHidden]
			public <StartGame>d__396(int <>1__state)
			{
			}

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0x17FD638", Offset = "0x17FD638", VA = "0x17FD638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x17FD64C", Offset = "0x17FD64C", VA = "0x17FD64C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C7")]
			[Address(RVA = "0x17FE038", Offset = "0x17FE038", VA = "0x17FE038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE29F4", Offset = "0xBE29F4")]
		private sealed class <>c__DisplayClass398_0
		{
			[Token(Token = "0x400310D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x400310E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE92")]
			public Action<bool, bool> onConfirm;

			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public bool isStartedFromPlaylistPanel;

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0x17F6FF4", Offset = "0x17F6FF4", VA = "0x17F6FF4")]
			public <>c__DisplayClass398_0()
			{
			}

			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x17F7024", Offset = "0x17F7024", VA = "0x17F7024")]
			internal void <OpenGeneratorSettings>b__1(bool ok, bool playAfterGenerate)
			{
			}

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x17F7144", Offset = "0x17F7144", VA = "0x17F7144")]
			internal void <OpenGeneratorSettings>b__2(int result, bool checkbox)
			{
			}

			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x17F71C0", Offset = "0x17F71C0", VA = "0x17F71C0")]
			internal void <OpenGeneratorSettings>b__3(bool ok, bool playAfterGenerate)
			{
			}
		}

		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A30", Offset = "0xBE2A30")]
		private sealed class <OpenGeneratorSettings>d__398 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9DC")]
			private int <>1__state;

			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, bool> onConfirm;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE99")]
			public bool isStartedFromPlaylistPanel;

			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public string confirmText;

			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9E4")]
			public bool confirmIsPlay;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass398_0 <>8__1;

			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Song <song>5__2;

			[Token(Token = "0x4003119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <songWasReloaded>5__3;

			[Token(Token = "0x400311A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDEA0")]
			private bool <neededAnalysis>5__4;

			[Token(Token = "0x170005CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D0")]
				[Address(RVA = "0x17FBDC4", Offset = "0x17FBDC4", VA = "0x17FBDC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D2")]
				[Address(RVA = "0x17FBE94", Offset = "0x17FBE94", VA = "0x17FBE94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x17FACC4", Offset = "0x17FACC4", VA = "0x17FACC4")]
			[DebuggerHidden]
			public <OpenGeneratorSettings>d__398(int <>1__state)
			{
			}

			[Token(Token = "0x60031CE")]
			[Address(RVA = "0x17FAD0C", Offset = "0x17FAD0C", VA = "0x17FAD0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0x17FAD20", Offset = "0x17FAD20", VA = "0x17FAD20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0x17FBDF4", Offset = "0x17FBDF4", VA = "0x17FBDF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A6C", Offset = "0xBE2A6C")]
		private sealed class <DetectBPMAndOffset>d__399 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400311B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x400311C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9EC")]
			private object <>2__current;

			[Token(Token = "0x400311D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Song song;

			[Token(Token = "0x400311E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x400311F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool persist;

			[Token(Token = "0x4003120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDEA7")]
			private SongBPMAndOffsetDetector <bpmDetector>5__2;

			[Token(Token = "0x170005D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D6")]
				[Address(RVA = "0x17FA590", Offset = "0x17FA590", VA = "0x17FA590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D8")]
				[Address(RVA = "0x17FA660", Offset = "0x17FA660", VA = "0x17FA660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x17F991C", Offset = "0x17F991C", VA = "0x17F991C")]
			[DebuggerHidden]
			public <DetectBPMAndOffset>d__399(int <>1__state)
			{
			}

			[Token(Token = "0x60031D4")]
			[Address(RVA = "0x17F9964", Offset = "0x17F9964", VA = "0x17F9964", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x17F9978", Offset = "0x17F9978", VA = "0x17F9978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x17FA5C0", Offset = "0x17FA5C0", VA = "0x17FA5C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2AA8", Offset = "0xBE2AA8")]
		private sealed class <DetectBPMAndOffsetAgain>d__400 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4003122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9F4")]
			private object <>2__current;

			[Token(Token = "0x4003123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Menu <>4__this;

			[Token(Token = "0x4003124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Song song;

			[Token(Token = "0x170005D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031DC")]
				[Address(RVA = "0x17FABC4", Offset = "0x17FABC4", VA = "0x17FABC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031DE")]
				[Address(RVA = "0x17FAC94", Offset = "0x17FAC94", VA = "0x17FAC94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0x17FA690", Offset = "0x17FA690", VA = "0x17FA690")]
			[DebuggerHidden]
			public <DetectBPMAndOffsetAgain>d__400(int <>1__state)
			{
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0x17FA6D8", Offset = "0x17FA6D8", VA = "0x17FA6D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x17FA6EC", Offset = "0x17FA6EC", VA = "0x17FA6EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031DD")]
			[Address(RVA = "0x17FABF4", Offset = "0x17FABF4", VA = "0x17FABF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002215")]
		private const int MAX_EXPERIENCE = 983500000;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_PLAYER_SIZE;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDCFB")]
		private static readonly string SETTINGS_PLAYSPACE_SIZE;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_SIZES_CONVERSION_DONE;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D834")]
		private static readonly string SETTINGS_SIZES_PLAYERHEIGHT;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string SETTINGS_PLAYSPACE_ROTATION;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string SETTINGS_PLAYSPACE_XOFFSET;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string SETTINGS_PLAYSPACE_ZOFFSET;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD02")]
		private static readonly string SETTINGS_GAME_HINTS;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_FLIGHT_PATHS;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D83C")]
		private static readonly string SETTINGS_PLAYSPACE_WARNING;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_PLAYSPACE_WARNING_TRESHOLD;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SHOW_BOUNDS;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_STRENGTH_METER;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD09")]
		private static readonly string SETTINGS_STRENGTH_FORMAT;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_PLAY_MUSIC_ON_RETURN;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6D4")]
		private static readonly string SETTINGS_NO_HORIZONTAL_WALLS_MODIFIER;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NO_TUNNELS_MODIFIER;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NO_VERTICAL_WALLS_MODIFIER;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NORMALBALLS_ONLY_MODIFIER;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD0F")]
		private static readonly string SETTINGS_POWERBALLS_ONLY_MODIFIER;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_SUPERSPEED_MODIFIER;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D844")]
		private static readonly string SETTINGS_SMALLER_BALLS_MODIFIER;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NO_BADBALLS_MODIFIER;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NO_DOUBLE_BALLS_MODIFIER;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_NO_STREAMS_MODIFIER;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD16")]
		private static readonly string SETTINGS_SCORE_VISUALIZATION;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_STREAM_FEEDBACK;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D84C")]
		private static readonly string SETTINGS_COMBO_HIGHLIGHTING;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SPECTATOR_CAMERA;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_CAMERA_MODE;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_BLOOM_USAGE;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD1D")]
		private static readonly string SETTINGS_BEAUTIFY_USAGE;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_GAME_QUALITY;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D854")]
		private static readonly string SETTINGS_TRACK_CALORIES;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_GENDER;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_AGE;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_DAILY_CALORIES;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD24")]
		private static readonly string SETTINGS_WEIGHT_KILOGRAMS;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string PLAYTIME_TOTAL;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D85C")]
		private static readonly string PLAYTIME_TODAY;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string PLAYTIME_SINCE_RESET;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string DATE_LAST_SESSION;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string GAME_START_COUNT;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD2B")]
		private static readonly string TODAYS_CALORIES;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string CALORIES_SINCE_RESET;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D864")]
		private static readonly string TOTAL_CALORIES_BURNT;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SQUATS_TODAY;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SQUATS_SINCE_RESET;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SQUATS_TOTAL;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD32")]
		private static readonly string SETTINGS_OPTIONS_TAB;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string GAMEPLAY_OPTIONS_TAB;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D86C")]
		private static readonly string SETTINGS_TUTORIAL_TAB;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_CHALLENGE_MODE;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_ENVIRONMENT;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_WEAPON;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD39")]
		private static readonly string SETTINGS_LEADERBOARD_PANEL;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_LEADERBOARD_PANEL_DISPLAY_TYPE;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D874")]
		private static readonly string SETTINGS_PLAYLISTS_PANEL;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_PLAYLIST_PULSE;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_HIT_SOUND;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_VOICE;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD40")]
		private static readonly string SETTINGS_PANEL_VISBILITY;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_TRACK_HEARTRATE;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D87C")]
		private static readonly string SETTINGS_HRM_PLATFORM;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_HRM_ID;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SONG_INTERNAL_1;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SONG_INTERNAL_2;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD47")]
		private static readonly string SETTINGS_SONG_FILE_DIR;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly string SETTINGS_SKYBOX_FILE_DIR;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D884")]
		internal static readonly string SETTINGS_SONG_EXTERNAL_NAME;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_SONG_DIFFICULTY;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_GENERATOR_BEGINNER;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_GENERATOR_ADVANCED;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD4E")]
		private static readonly string SETTINGS_GENERATOR_EXPERT;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_HAND_ADJUSTMENT;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D88C")]
		private static readonly int PLAYLIST_BPM_DETECT_ERROR_COUNT;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Dictionary<int, WeaponType> EXPERIENCE_TO_UNLOCK;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Dictionary<WeaponType, string> WEAPON_NAME;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D1E8", Offset = "0xC0D1E8")]
		[SerializeField]
		private MenuToggleButton easyDifficulty;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD55")]
		[SerializeField]
		private MenuToggleButton middleDifficulty;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuToggleButton hardDifficulty;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6DC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D2E0", Offset = "0xC0D2E0")]
		[SerializeField]
		private Image image_fist;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image image_hammer;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image image_shield;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image image_power;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD5B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D414", Offset = "0xC0D414")]
		[SerializeField]
		private AudioSource audioSourceMusic;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioSource audioSourceEffects;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D894")]
		[SerializeField]
		private AudioSource audioSourceVoices;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource audioSourceAmbient;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource audioSourceTreadmill;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSoundConfiguration menuSoundConfiguration;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD62")]
		[SerializeField]
		private PrefixBasedLocalizedString hitSoundText;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private PrefixBasedLocalizedString voiceText;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D89C")]
		[SerializeField]
		private AudioClip successJingle;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D674", Offset = "0xC0D674")]
		[SerializeField]
		private AudioMixer mixer;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider musicSlider;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string musicExposedParam;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD69")]
		[SerializeField]
		private TextMeshProUGUI musicVolText;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Slider sfxSlider;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8A4")]
		[SerializeField]
		private string sfxExposedParam;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI sfxVolText;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip sfxTestSound;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D898", Offset = "0xC0D898")]
		[SerializeField]
		private CollidableHandObject leftHand;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD70")]
		[SerializeField]
		private CollidableHandObject rightHand;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private HandAdjustment leftHandAdjustment;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8AC")]
		[SerializeField]
		private HandAdjustment rightHandAdjustment;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0D9CC", Offset = "0xC0D9CC")]
		[SerializeField]
		private GameObject settingsPanel;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject creditsPanel;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject guidePanel;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD77")]
		[SerializeField]
		private GameObject guidePanelContent;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject settingsGameplayPanel;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8B4")]
		[SerializeField]
		private GameObject settingsVideoPanel;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject settingsSoundPanel;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject settingsPlayerPanel;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject gameplayStylePanel;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD7E")]
		[SerializeField]
		private GameObject gameplayModifierPanel;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject officialChallengesPanel;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8BC")]
		[SerializeField]
		private GameObject customChallengesPanel;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Canvas[] mainCanvases;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform songsRectTransform;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject welcomeMenu;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD85")]
		[SerializeField]
		private GameObject patchNotesVideoPlayer;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject highscorePanel;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8C4")]
		[SerializeField]
		private GameObject playlistsPanel;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject playlistButtonPulse;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private PlaylistAdjuster playlistAdjuster;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject songStatsPanel;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD8C")]
		[SerializeField]
		private GameObject songStatsNotAvail;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject tutorialObjectsPanel;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8CC")]
		[SerializeField]
		private GameObject tutorialWeaponsPanel;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject tutorialMiscPanel;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0DFEC", Offset = "0xC0DFEC")]
		[SerializeField]
		private OfficialSongListManager officialSongManager;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SongFileListManager fileListManager;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD93")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0E0A8", Offset = "0xC0E0A8")]
		[SerializeField]
		private TextMeshProUGUI songDurationText;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI bpmText;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8D4")]
		[SerializeField]
		private TextMeshProUGUI targetCountText;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI streamText;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI ballObstacleCountText;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI wallObstacleCountText;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD9A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0E254", Offset = "0xC0E254")]
		[SerializeField]
		private GameObject editorButton;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject adjustButton;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8DC")]
		[SerializeField]
		private BeautifyProfile beautifyMenuProfile;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider weaponExperienceSlider;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider hammerExperienceSlider;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider shieldExperienceSlider;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDA1")]
		[SerializeField]
		private Slider powerfistExperienceSlider;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Text weaponExperienceText;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6E4")]
		[SerializeField]
		private RectTransform spectatorCameraRectTransform;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform qualitySettingsRectTransform;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject adjustControllersDialog;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI adjustControllersText;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDA7")]
		[SerializeField]
		private MenuSelectButton migrateHighscoreButton;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject migrateHighscoreOption;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8E4")]
		[SerializeField]
		private MenuSelectButton localSongsInfoButton;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0E61C", Offset = "0xC0E61C")]
		[SerializeField]
		private TextMeshProUGUI playtimeTodayText;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI playtimeSinceResetText;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI playtimeTotalText;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDAE")]
		[SerializeField]
		private TextMeshProUGUI todaysCaloriesText;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI todaysCaloriesDisabledText;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8EC")]
		[SerializeField]
		private TextMeshProUGUI calorieSinceResetText;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI calorieSinceResetDisabledText;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI totalCaloriesText;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI totalCaloriesDisabledText;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDB5")]
		[SerializeField]
		private TextMeshProUGUI squatsTodayText;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI squatsSinceResetText;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8F4")]
		[SerializeField]
		private TextMeshProUGUI squatsTotalText;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject dailyGoalReachedEffect;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0E96C", Offset = "0xC0E96C")]
		[SerializeField]
		private GameObject playspaceWarningAdjustment;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform playspaceWarningRectTransform;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDBC")]
		[SerializeField]
		private TextMeshProUGUI playspaceWarningMetricText;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI playspaceWarningImperialText;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D8FC")]
		[SerializeField]
		private Slider playspaceWarningSlider;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject fitnessMat;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0EB18", Offset = "0xC0EB18")]
		[SerializeField]
		private HighscoreManager highscoreManager;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private HighscoreSongInfoLocalizationString highscoreCombinationText;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDC3")]
		[SerializeField]
		private GameObject highscoreCurrentWeaponTab;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0EC10", Offset = "0xC0EC10")]
		[SerializeField]
		private PrefixBasedLocalizedString gameQualityText;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D904")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0EC90", Offset = "0xC0EC90")]
		[SerializeField]
		private GamespaceMenuUI gamespaceUI;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private PlayspaceHeightAdjuster playspaceHeightSetting;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0ED4C", Offset = "0xC0ED4C")]
		[SerializeField]
		private RectTransform strengthMeterRectTransform;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private PrefixBasedLocalizedString genderText;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDCA")]
		[SerializeField]
		private Slider ageSlider;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ValueBasedLocalizedString ageText;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D90C")]
		[SerializeField]
		private Slider weightSlider;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ValueBasedLocalizedString weightMetricText;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ValueBasedLocalizedString weightImperialText;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject genderInput;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDD1")]
		[SerializeField]
		private GameObject ageInput;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject weightInput;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D914")]
		[SerializeField]
		private Slider dailyCaloriesInputSlider;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ValueBasedLocalizedString dailyCaloriesInputText;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject dailyCaloriesInput;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform calorieTrackerRectTransform;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDD8")]
		[SerializeField]
		private HRMAdjuster hrmAdjuster;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0F114", Offset = "0xC0F114")]
		[SerializeField]
		private Slider experienceSlider;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D91C")]
		[SerializeField]
		private TextMeshProUGUI levelText;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject dailyCalories;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI dailyCaloriesPercentageText;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ValueBasedLocalizedString dailyCaloriesCurrentMaxText;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDDF")]
		[SerializeField]
		private Slider dailyCaloriesSlider;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI heartrateStatisticsText;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D924")]
		[SerializeField]
		private GameObject trackingHint;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0F338", Offset = "0xC0F338")]
		[SerializeField]
		private StartButton startButton;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private StartButton playlistStartButton;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0F3F4", Offset = "0xC0F3F4")]
		[SerializeField]
		private EnvironmentAdjustor envAdjustor;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDE6")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0F474", Offset = "0xC0F474")]
		[SerializeField]
		private SongSettingsDialog songSettingsDialog;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject generateCheckbox;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D92C")]
		[SerializeField]
		private Button previewButton;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource metronomeSource;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GeneratorSettingsAdjuster generatorSettingsAdjuster;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BPMOffsetAdjuster bpmOffsetAdjuster;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDED")]
		[SerializeField]
		private InfoDialog infoDialog;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private InfoDialog requestPermissionDialog;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6EC")]
		[SerializeField]
		private ProgressDialog progressDialog;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject playButtonGlow;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LeaveReviewController leaveReviewController;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton[] clickableButtons;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDF3")]
		private MenuToggleArea[] selectionAreas;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<MenuToggleArea.Selection, MenuToggleArea> selectionAreaMapping;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D934")]
		private MenuSelectButton settingsButton;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton leaderboardsButton;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton creditsButton;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton guideButton;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDDFA")]
		private MenuSelectButton playlistsButton;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSelectButton decreaseQualityButton;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D93C")]
		private MenuSelectButton increaseQualityButton;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton genderLeftButton;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton genderRightButton;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton decreaseAgeButton;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE01")]
		private MenuSelectButton increaseAgeButton;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSelectButton decreaseDailyCaloriesButton;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D944")]
		private MenuSelectButton increaseDailyCaloriesButton;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton decreaseMusicVolumeButton;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton increaseMusicVolumeButton;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton decreaseSFXVolumeButton;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE08")]
		private MenuSelectButton increaseSFXVolumeButton;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSelectButton decreaseWeightButton;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D94C")]
		private MenuSelectButton increaseWeightButton;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton decreasePlayspaceDistanceButton;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton increasePlayspaceDistanceButton;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSelectButton hitSoundLeftButton;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE0F")]
		private MenuSelectButton hitSoundRightButton;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSelectButton voiceLeftButton;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D954")]
		private MenuSelectButton voiceRightButton;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject playerRig;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject fakeHead;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongManager songManager;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE16")]
		private FrameworkManager fm;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private PlaylistManager playlistManager;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D95C")]
		private Dictionary<GameConfiguration.GameEnvironmentID, EnvironmentalVisualization> environments;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int experience;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int previousCalculatedExperience;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nextCalculatedExperience;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE1D")]
		private int calculatedLevel;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float lastExperienceQueryTime;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D964")]
		private MenuToggleArea settingsScoreVisualizationArea;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsStreamFeedbackArea;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsComboHighlightingArea;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsSpectatorCameraArea;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE24")]
		private MenuToggleArea settingsCameraModeArea;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuToggleArea settingsOptionsTabArea;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D96C")]
		private MenuToggleArea settingsTutorialTabArea;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsTrackCaloriesArea;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsGameHintsArea;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsFlightPathsArea;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE2B")]
		private MenuToggleArea settingsPlayspaceWarningArea;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuToggleArea settingsShowBoundsArea;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D974")]
		private MenuToggleArea settingsStrengthMeterArea;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsStrengthFormatArea;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsPlayMusicOnReturn;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsBeautifyUsageArea;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE32")]
		private MenuToggleArea settingsNoHorizontalWallsModifierArea;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuToggleArea settingsNoTunnelsModifierArea;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D97C")]
		private MenuToggleArea settingsNoVerticalWallsModifierArea;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsNormalballsOnlyModifierArea;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsPowerballsOnlyModifierArea;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsSuperSpeedModifierArea;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE39")]
		private MenuToggleArea settingsSmallerBallsModifierArea;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuToggleArea settingsNoDoubleBallsModifierArea;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C6F4")]
		private MenuToggleArea settingsNoStreamsModifierArea;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsNoBadBallsModifierArea;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsMuteMusicArea;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea settingsChallengeModeArea;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE3F")]
		private MenuToggleArea settingsWeaponArea;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool avatarSpectatorCamActive;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D984")]
		private bool isAwaking;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isEndOfStart;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool startButtonHasBeenPressed;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleButton currentToggleButton;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE46")]
		private HRMCon hrmCon;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AudioClip selectedHitSound;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D98C")]
		private bool updateHighscoreInDifficulty;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPaused;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool firstStartAudioDelay;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float generatorBpm;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE4D")]
		private float generatorOffset;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool generatorTestIsPlaying;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D994")]
		private double generatorTestStartTime;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double generatorNextMetronomeTime;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Beautify[] beautifyScripts;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BlackPlane[] blackPlanes;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE54")]
		private bool editorStarted;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int playMusicAttempts;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D99C")]
		private bool folderImportIsCancelled;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool leaderboardMigrationIsCancelled;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int level;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HandAdjustmentSettings savedControllerOffset;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE5B")]
		private LLPlatform.LeaderboardSelector previousLeaderboardSelector;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isInSwitchMenuToSong;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9A4")]
		private bool createPlaylistConfirmed;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScreenshotMaker screenshotMaker;

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x1887738", Offset = "0x1887738", VA = "0x1887738")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x1896480", Offset = "0x1896480", VA = "0x1896480")]
		private void LeaveReviewController_reviewRequestIsActive(bool isActive)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x1896524", Offset = "0x1896524", VA = "0x1896524")]
		private void LocalSongsInfoButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x1896178", Offset = "0x1896178", VA = "0x1896178")]
		private void DeactivateWelcomeMenu()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x1896A80", Offset = "0x1896A80", VA = "0x1896A80")]
		private void PlaylistAdjuster_entrySelected(PlaylistEntry entry)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x18982D8", Offset = "0x18982D8", VA = "0x18982D8")]
		private void FileListManager_FolderAddToPlaylistClicked(string folderName)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x1898B7C", Offset = "0x1898B7C", VA = "0x1898B7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC29518", Offset = "0xC29518")]
		private IEnumerator AddFolderToPlaylist(string folderName)
		{
			return null;
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x1898C60", Offset = "0x1898C60", VA = "0x1898C60")]
		private void FileListManager_SongAddToPlaylistClicked(string fileName)
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x18990A4", Offset = "0x18990A4", VA = "0x18990A4")]
		private void OfficialSongManager_AddToPlaylistClicked(Song song)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x18988CC", Offset = "0x18988CC", VA = "0x18988CC")]
		private void ShowNoPlaylistMessage()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x189917C", Offset = "0x189917C", VA = "0x189917C")]
		private void PlaylistAdjuster_startPressed()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x18998B8", Offset = "0x18998B8", VA = "0x18998B8")]
		private void PlayspaceHeightSetting_PlayerHeightSettingsChanged(float heightFromUI)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x189496C", Offset = "0x189496C", VA = "0x189496C")]
		private void SetPlayerHeight(float height)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x18998F8", Offset = "0x18998F8", VA = "0x18998F8")]
		private void SetFitnessMatSize()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x1899AA4", Offset = "0x1899AA4", VA = "0x1899AA4")]
		private void HrmAdjuster_platformChanged(HRMPlatform platform)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1899CB8", Offset = "0x1899CB8", VA = "0x1899CB8")]
		private void HrmAdjuster_onOffChanged(int value)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x189A2C0", Offset = "0x189A2C0", VA = "0x189A2C0")]
		private void HrmAdjuster_hrmDeviceChanged(long deviceId)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x189A4AC", Offset = "0x189A4AC", VA = "0x189A4AC")]
		private void OfficialSongManager_SongClicked(int index)
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x189A7BC", Offset = "0x189A7BC", VA = "0x189A7BC")]
		private void GeneratorSettingsAdjuster_ResetParameters()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1894B88", Offset = "0x1894B88", VA = "0x1894B88")]
		private GeneratorSetting PrepopulateGeneratorSettings(Song.Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x189A9BC", Offset = "0x189A9BC", VA = "0x189A9BC")]
		private void ApplyGeneratorSettings(Song.Difficulty difficulty, GeneratorSetting setting)
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x189B118", Offset = "0x189B118", VA = "0x189B118")]
		private void ApplyGeneratorSettingForAllRanges(Song.Difficulty difficulty, Pattern pattern, int value)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x189B7E4", Offset = "0x189B7E4", VA = "0x189B7E4")]
		private void SaveGeneratorSettings(GeneratorSetting settings)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x189BAD0", Offset = "0x189BAD0", VA = "0x189BAD0")]
		private void BpmOffsetAdjuster_bpmChanged(float newBpm)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x189BD30", Offset = "0x189BD30", VA = "0x189BD30")]
		private void BpmOffsetAdjuster_offsetChanged(float newOffset)
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x189BD7C", Offset = "0x189BD7C", VA = "0x189BD7C")]
		private void HrmCon_StatusChanged(HRMStatus newStatus, HRMStatus oldStatus)
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x189BDB4", Offset = "0x189BDB4", VA = "0x189BDB4")]
		private void HrmCon_HeartRateChanged(int heartRate)
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x189BDE8", Offset = "0x189BDE8", VA = "0x189BDE8")]
		private void MenuButtonTogglePointerDown(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x189BE64", Offset = "0x189BE64", VA = "0x189BE64")]
		private void MenuButtonSelectHoverEnter(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x189BEE0", Offset = "0x189BEE0", VA = "0x189BEE0")]
		private void MenuButtonToggleHoverEnter(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x189C124", Offset = "0x189C124", VA = "0x189C124")]
		private void Start()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x18A519C", Offset = "0x18A519C", VA = "0x18A519C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC295C8", Offset = "0xC295C8")]
		private IEnumerator ShowBoundary()
		{
			return null;
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x18A523C", Offset = "0x18A523C", VA = "0x18A523C")]
		private void EnvAdjustor_EnvChanged(GameEnvironment obj)
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x18A550C", Offset = "0x18A550C", VA = "0x18A550C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1895834", Offset = "0x1895834", VA = "0x1895834")]
		private void ResetWeaponLocking()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x18A5FDC", Offset = "0x18A5FDC", VA = "0x18A5FDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x18A6670", Offset = "0x18A6670", VA = "0x18A6670")]
		private void GamespaceRecalculated()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x189F2D0", Offset = "0x189F2D0", VA = "0x189F2D0")]
		public void SetGameQuality(int setting)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x189FB7C", Offset = "0x189FB7C", VA = "0x189FB7C")]
		public void SetGender(int setting)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x18A3BA0", Offset = "0x18A3BA0", VA = "0x18A3BA0")]
		public void SetHitSound(int setting)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x18A3FB0", Offset = "0x18A3FB0", VA = "0x18A3FB0")]
		public void SetVoice(int setting)
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x18A0704", Offset = "0x18A0704", VA = "0x18A0704")]
		public void SetCaloriesToday()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x18A0D04", Offset = "0x18A0D04", VA = "0x18A0D04")]
		public void SetCaloriesSinceReset()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x18A0A04", Offset = "0x18A0A04", VA = "0x18A0A04")]
		public void SetTotalCalories()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x18A70D4", Offset = "0x18A70D4", VA = "0x18A70D4")]
		public void ResetCalories()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x18A7250", Offset = "0x18A7250", VA = "0x18A7250")]
		public void UpdateCalories(float caloriesToday, float caloriesSinceReset, float lifetimeCalories)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x18A77B0", Offset = "0x18A77B0", VA = "0x18A77B0")]
		private void SetTrackingHint()
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x18A7880", Offset = "0x18A7880", VA = "0x18A7880")]
		public void UpdateSquats(int squatsToday, int squatsSinceReset, int squatsTotal)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x18A7B94", Offset = "0x18A7B94", VA = "0x18A7B94")]
		public void ResetSquats()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x18A1910", Offset = "0x18A1910", VA = "0x18A1910")]
		private void SetSquatsToday()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x18A1B4C", Offset = "0x18A1B4C", VA = "0x18A1B4C")]
		private void SetSquatsSinceReset()
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x18A1D88", Offset = "0x18A1D88", VA = "0x18A1D88")]
		private void SetSquatsTotal()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x18A1004", Offset = "0x18A1004", VA = "0x18A1004")]
		public void SetPlayTimeToday()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x18A1308", Offset = "0x18A1308", VA = "0x18A1308")]
		public void SetPlayTimeSinceReset()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x18A160C", Offset = "0x18A160C", VA = "0x18A160C")]
		public void SetPlayTimeTotal()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x18A7D10", Offset = "0x18A7D10", VA = "0x18A7D10")]
		public void ResetPlayTime()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x18A7E8C", Offset = "0x18A7E8C", VA = "0x18A7E8C")]
		public void UpdatePlayTime(float playTimeToday, float playTimeSinceReset, float playTimeTotal)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x18A0024", Offset = "0x18A0024", VA = "0x18A0024")]
		public void CheckIfNewDay()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x18A81A0", Offset = "0x18A81A0", VA = "0x18A81A0")]
		public void UpdateLeaderboardPanel()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x18A4D44", Offset = "0x18A4D44", VA = "0x18A4D44")]
		private void SetSettingsPanelVisibility()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x18A962C", Offset = "0x18A962C", VA = "0x18A962C")]
		private void ToggleAreaSelection(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x18AE17C", Offset = "0x18AE17C", VA = "0x18AE17C")]
		private void ToggleModifier(GameConfiguration.Modifier modifier, GameConfiguration.OffOn value, string setting)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1897208", Offset = "0x1897208", VA = "0x1897208")]
		private void SwitchMenuToSong(bool selectSonginUI)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x18AE440", Offset = "0x18AE440", VA = "0x18AE440")]
		private void SetGenerateOptionVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x18AE4AC", Offset = "0x18AE4AC", VA = "0x18AE4AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC29678", Offset = "0xC29678")]
		private IEnumerator PlayAudioOnceAvailable()
		{
			return null;
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x189820C", Offset = "0x189820C", VA = "0x189820C")]
		private void SetDifficulty(Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x189F06C", Offset = "0x189F06C", VA = "0x189F06C")]
		private void SetOptionsTab(GameConfiguration.Settings settings)
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x189F138", Offset = "0x189F138", VA = "0x189F138")]
		private void SetGameplayTab(GameConfiguration.Gameplay gameplay)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x189F204", Offset = "0x189F204", VA = "0x189F204")]
		private void SetTutorialTab(GameConfiguration.Tutorial tutorial)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x18969B4", Offset = "0x18969B4", VA = "0x18969B4")]
		private void SetChallengesTab(GameConfiguration.ChallengeMode challengeMode)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x189EFA0", Offset = "0x189EFA0", VA = "0x189EFA0")]
		private void SetWeaponType(WeaponType selectedWeaponType)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x18AE568", Offset = "0x18AE568", VA = "0x18AE568")]
		private void SelectionButtonSelect(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x18B0E0C", Offset = "0x18B0E0C", VA = "0x18B0E0C")]
		private void TakeScreenshot()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x18B1808", Offset = "0x18B1808", VA = "0x18B1808")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x18B1910", Offset = "0x18B1910", VA = "0x18B1910")]
		private void CloseSongAdjust()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x1895C38", Offset = "0x1895C38", VA = "0x1895C38")]
		public void TogglePlaylistPanel(bool isVisible)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x18B0BB4", Offset = "0x18B0BB4", VA = "0x18B0BB4")]
		private void ActivateSettings(bool activate)
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x18B0CE0", Offset = "0x18B0CE0", VA = "0x18B0CE0")]
		private void ActivateGuide(bool activate)
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x18B0AF8", Offset = "0x18B0AF8", VA = "0x18B0AF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC29728", Offset = "0xC29728")]
		private IEnumerator StartEditor()
		{
			return null;
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x18A58C0", Offset = "0x18A58C0", VA = "0x18A58C0")]
		private void SetGeneratorTestMode(bool shouldPlay, bool stopMusic = true)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x189BB1C", Offset = "0x189BB1C", VA = "0x189BB1C")]
		private void ResyncGeneratorMetronome()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x18B0A3C", Offset = "0x18B0A3C", VA = "0x18B0A3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC297D8", Offset = "0xC297D8")]
		private IEnumerator StartGame()
		{
			return null;
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x18B1A04", Offset = "0x18B1A04", VA = "0x18B1A04")]
		private void GenerateAndStart(bool startSong, bool isStartedFromPlaylistPanel)
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1898F20", Offset = "0x1898F20", VA = "0x1898F20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC29888", Offset = "0xC29888")]
		private IEnumerator OpenGeneratorSettings(string confirmText, bool confirmIsPlay, bool isStartedFromPlaylistPanel, Action<bool, bool> onConfirm)
		{
			return null;
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x18B2700", Offset = "0x18B2700", VA = "0x18B2700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC29938", Offset = "0xC29938")]
		private IEnumerator DetectBPMAndOffset(Song song, bool persist)
		{
			return null;
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x18B0F10", Offset = "0x18B0F10", VA = "0x18B0F10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC299E8", Offset = "0xC299E8")]
		private IEnumerator DetectBPMAndOffsetAgain(Song song)
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x18B1D78", Offset = "0x18B1D78", VA = "0x18B1D78")]
		private void GenerateSongLayout(Song song, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x18991BC", Offset = "0x18991BC", VA = "0x18991BC")]
		private void StartSong(bool createPlaylist, bool startedFromPlaylistPanel)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x18B2820", Offset = "0x18B2820", VA = "0x18B2820")]
		private void WidthHasBeenConfirmed(int action, bool dontshowagain)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x18B2CBC", Offset = "0x18B2CBC", VA = "0x18B2CBC")]
		private void FileListManager_SongSelected(int index, string fileName)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x18B2DD8", Offset = "0x18B2DD8", VA = "0x18B2DD8")]
		private void FileListManager_NavigationHappened(string dir)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x18B2278", Offset = "0x18B2278", VA = "0x18B2278")]
		private void DisplaySongStats()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x18AD098", Offset = "0x18AD098", VA = "0x18AD098")]
		private void DisplaySongLayoutStats()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x18A5EEC", Offset = "0x18A5EEC", VA = "0x18A5EEC")]
		private void SetWeaponAvailability(WeaponType weapon, bool isAvailable)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x189BE98", Offset = "0x189BE98", VA = "0x189BE98")]
		public void PlayHoverSound()
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x189BE1C", Offset = "0x189BE1C", VA = "0x189BE1C")]
		public void PlayClickSound()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x18B2FD4", Offset = "0x18B2FD4", VA = "0x18B2FD4")]
		private void InfoDialogClosed()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1894694", Offset = "0x1894694", VA = "0x1894694")]
		private void SetBeautifyProfile()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x18A6CA4", Offset = "0x18A6CA4", VA = "0x18A6CA4")]
		private void SetBeautify(GameConfiguration.OffOn isOn)
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x18A6874", Offset = "0x18A6874", VA = "0x18A6874")]
		private void SetBloom(GameConfiguration.OffOn isON)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x18A2CE8", Offset = "0x18A2CE8", VA = "0x18A2CE8")]
		public void SetMusicVolume(float value)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x18A319C", Offset = "0x18A319C", VA = "0x18A319C")]
		public void SetAge(float value)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x18A3510", Offset = "0x18A3510", VA = "0x18A3510")]
		public void SetDailyCalories(float value)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x18A448C", Offset = "0x18A448C", VA = "0x18A448C")]
		public void SetWeightKilograms(float value)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x18A4890", Offset = "0x18A4890", VA = "0x18A4890")]
		public void SetSFXVolume(float value)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x18A1FC4", Offset = "0x18A1FC4", VA = "0x18A1FC4")]
		public void DisplayCalorieDataInput()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1899FA4", Offset = "0x1899FA4", VA = "0x1899FA4")]
		public void DisplayHeartrateControls()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x18A2194", Offset = "0x18A2194", VA = "0x18A2194")]
		public void DisplayPlayspaceWarningAdjustment()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x18A261C", Offset = "0x18A261C", VA = "0x18A261C")]
		public void SetPlayspaceWarningTreshold(float value)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x18B3064", Offset = "0x18B3064", VA = "0x18B3064")]
		public void PlaySliderSound(AudioClip sound)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x18AD914", Offset = "0x18AD914", VA = "0x18AD914")]
		private void SetSpectatorCameras()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x18A9508", Offset = "0x18A9508", VA = "0x18A9508")]
		private void SetButtonStates()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x18AD78C", Offset = "0x18AD78C", VA = "0x18AD78C")]
		private void ToggleCameraModeOption()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x18B30BC", Offset = "0x18B30BC", VA = "0x18B30BC")]
		private void ToggleStrengthMeterOption()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x189BF30", Offset = "0x189BF30", VA = "0x189BF30")]
		public void StoreCurrentToggleButton(MenuToggleButton button)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x18B33E0", Offset = "0x18B33E0", VA = "0x18B33E0")]
		private void DisableCanvasGroup(GameObject canvasGroupObject)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x18B35EC", Offset = "0x18B35EC", VA = "0x18B35EC")]
		private void EnableCanvasGroup(GameObject canvasGroupObject)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x18B37FC", Offset = "0x18B37FC", VA = "0x18B37FC")]
		public void OpenTheBasement()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x18B3880", Offset = "0x18B3880", VA = "0x18B3880")]
		public void OpenTrappedAboveTheClouds()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x189A738", Offset = "0x189A738", VA = "0x189A738")]
		private void UnmuteMusic()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x18B3904", Offset = "0x18B3904", VA = "0x18B3904")]
		public void AddExperience(int pointsToAdd)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x18B493C", Offset = "0x18B493C", VA = "0x18B493C")]
		private void SaveExperience()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x189D0A0", Offset = "0x189D0A0", VA = "0x189D0A0")]
		private void CheckExperience()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x18B0FF4", Offset = "0x18B0FF4", VA = "0x18B0FF4")]
		private void AdjustControllers()
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x18B1390", Offset = "0x18B1390", VA = "0x18B1390")]
		private void AdjustControllersOK()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x18B162C", Offset = "0x18B162C", VA = "0x18B162C")]
		private void AdjustControllersCancel()
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x18B1170", Offset = "0x18B1170", VA = "0x18B1170")]
		private void ResetControllers()
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x189DA3C", Offset = "0x189DA3C", VA = "0x189DA3C")]
		private void UpdateExperienceInfo()
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x18B4B20", Offset = "0x18B4B20", VA = "0x18B4B20")]
		private void AnimateSlider(Slider slider, float oldValue, float newValue)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x18A8938", Offset = "0x18A8938", VA = "0x18A8938")]
		private void UpdateHighscore(bool force = false)
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x18B4F84", Offset = "0x18B4F84", VA = "0x18B4F84")]
		private LLPlatform.LeaderboardSelector GetCurrentLeaderboardSelector()
		{
			return default(LLPlatform.LeaderboardSelector);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x18B5154", Offset = "0x18B5154", VA = "0x18B5154")]
		private void CreateFakeHighscores()
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x18B572C", Offset = "0x18B572C", VA = "0x18B572C")]
		private void UpdateHighscoreCallback(LLPlatform.LeaderboardSelector selector, List<LLPlatform.LeaderboardEntry> entries, bool isFirstCallback)
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x18B5D98", Offset = "0x18B5D98", VA = "0x18B5D98")]
		internal void SystemMenuToggle(bool pauseWasActivated)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x18B6470", Offset = "0x18B6470", VA = "0x18B6470")]
		public Menu()
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x18B7240", Offset = "0x18B7240", VA = "0x18B7240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29A98", Offset = "0xC29A98")]
		private void <FileListManager_SongAddToPlaylistClicked>b__322_0(bool ignore1, bool ignore2)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x18B7590", Offset = "0x18B7590", VA = "0x18B7590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29AD4", Offset = "0xC29AD4")]
		private void <SelectionButtonSelect>b__386_0(int result, bool checkbox)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x18B76C8", Offset = "0x18B76C8", VA = "0x18B76C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29B10", Offset = "0xC29B10")]
		private void <StartEditor>b__393_0(int result, bool checkbox)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x18B7730", Offset = "0x18B7730", VA = "0x18B7730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29B4C", Offset = "0xC29B4C")]
		private void <StartGame>b__396_0(int result, bool checkbox)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x18B7798", Offset = "0x18B7798", VA = "0x18B7798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29B88", Offset = "0xC29B88")]
		private void <DetectBPMAndOffsetAgain>b__400_0(int result, bool checkbox)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x18B7800", Offset = "0x18B7800", VA = "0x18B7800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29BC4", Offset = "0xC29BC4")]
		private void <CheckExperience>b__437_0(int exp)
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class MenuModifierNameFactorDisplay : MonoBehaviour
	{
		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public GameConfiguration.Modifier modifier;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDEAE")]
		[SerializeField]
		public TextMeshProUGUI nameText;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public LocalizeStringEvent localization;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4D9FC")]
		[SerializeField]
		public TextMeshProUGUI factor;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public MenuToggleArea toggleArea;

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x17FE108", Offset = "0x17FE108", VA = "0x17FE108")]
		public MenuModifierNameFactorDisplay()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class MenuSelectButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x20007E3")]
		public enum Action
		{
			[Token(Token = "0x4003126")]
			StartGame,
			[Token(Token = "0x4003127")]
			Exit,
			[Token(Token = "0x4003128")]
			Settings,
			[Token(Token = "0x4003129")]
			Scores,
			[Token(Token = "0x400312A")]
			Editor,
			[Token(Token = "0x400312B")]
			NextSongs,
			[Token(Token = "0x400312C")]
			PreviousSongs,
			[Token(Token = "0x400312D")]
			WelcomeClose,
			[Token(Token = "0x400312E")]
			JoinCommunity,
			[Token(Token = "0x400312F")]
			NeedHelp,
			[Token(Token = "0x4003130")]
			ReportBug,
			[Token(Token = "0x4003131")]
			Credits,
			[Token(Token = "0x4003132")]
			DecreaseQuality,
			[Token(Token = "0x4003133")]
			IncreaseQuality,
			[Token(Token = "0x4003134")]
			ScrollToTop,
			[Token(Token = "0x4003135")]
			ScrollToPlayer,
			[Token(Token = "0x4003136")]
			EMenuPosLeft,
			[Token(Token = "0x4003137")]
			EMenuPosRight,
			[Token(Token = "0x4003138")]
			EBeatStepLeft,
			[Token(Token = "0x4003139")]
			EBeatStepRight,
			[Token(Token = "0x400313A")]
			EUndo,
			[Token(Token = "0x400313B")]
			ERedo,
			[Token(Token = "0x400313C")]
			ERevert,
			[Token(Token = "0x400313D")]
			ESave,
			[Token(Token = "0x400313E")]
			EExit,
			[Token(Token = "0x400313F")]
			EBallNormal,
			[Token(Token = "0x4003140")]
			EBallPower,
			[Token(Token = "0x4003141")]
			EBallObstacle,
			[Token(Token = "0x4003142")]
			EWall1,
			[Token(Token = "0x4003143")]
			EWall2,
			[Token(Token = "0x4003144")]
			EWall3,
			[Token(Token = "0x4003145")]
			EWall4,
			[Token(Token = "0x4003146")]
			EWall5,
			[Token(Token = "0x4003147")]
			EWall6,
			[Token(Token = "0x4003148")]
			EWall7,
			[Token(Token = "0x4003149")]
			EWall8,
			[Token(Token = "0x400314A")]
			EStreamAStartMid,
			[Token(Token = "0x400314B")]
			EStreamAEnd,
			[Token(Token = "0x400314C")]
			EStreamBStartMid,
			[Token(Token = "0x400314D")]
			EStreamBEnd,
			[Token(Token = "0x400314E")]
			EOffsetLeft,
			[Token(Token = "0x400314F")]
			EOffsetRight,
			[Token(Token = "0x4003150")]
			ECopySetStart,
			[Token(Token = "0x4003151")]
			ECopySetEnd,
			[Token(Token = "0x4003152")]
			ECopyMerge,
			[Token(Token = "0x4003153")]
			ECopyOverwrite,
			[Token(Token = "0x4003154")]
			ERippleInsert,
			[Token(Token = "0x4003155")]
			ERippleDelete,
			[Token(Token = "0x4003156")]
			ESmoothA,
			[Token(Token = "0x4003157")]
			ESmoothB,
			[Token(Token = "0x4003158")]
			EExitConfirm,
			[Token(Token = "0x4003159")]
			ERevertConfirm,
			[Token(Token = "0x400315A")]
			ECancelConfirmDialog,
			[Token(Token = "0x400315B")]
			GenderLeft,
			[Token(Token = "0x400315C")]
			GenderRight,
			[Token(Token = "0x400315D")]
			DecreaseAge,
			[Token(Token = "0x400315E")]
			IncreaseAge,
			[Token(Token = "0x400315F")]
			DecreaseWeight,
			[Token(Token = "0x4003160")]
			IncreaseWeight,
			[Token(Token = "0x4003161")]
			ResetCalories,
			[Token(Token = "0x4003162")]
			HeartrateMonitorSearch,
			[Token(Token = "0x4003163")]
			HeartrateMonitorConnect,
			[Token(Token = "0x4003164")]
			HeartrateMonitorToggleLeft,
			[Token(Token = "0x4003165")]
			HeartrateMonitorToggleRight,
			[Token(Token = "0x4003166")]
			GuideToCustomSongs,
			[Token(Token = "0x4003167")]
			HeartRateMonitorInfo,
			[Token(Token = "0x4003168")]
			HitSoundLeft,
			[Token(Token = "0x4003169")]
			HitSoundRight,
			[Token(Token = "0x400316A")]
			HeartRateMonitorDisconnect,
			[Token(Token = "0x400316B")]
			ECopyToClipboardRequest,
			[Token(Token = "0x400316C")]
			ECopyToPatternRequest,
			[Token(Token = "0x400316D")]
			EPasteFromPatternRequested,
			[Token(Token = "0x400316E")]
			EPasteFromClipboardRequest,
			[Token(Token = "0x400316F")]
			ECloseSingleButtonDialog,
			[Token(Token = "0x4003170")]
			ECopyToPatternConfirm,
			[Token(Token = "0x4003171")]
			EPasteFromPatternConfirm,
			[Token(Token = "0x4003172")]
			EKeyboardKey,
			[Token(Token = "0x4003173")]
			ECancelPatternDialog,
			[Token(Token = "0x4003174")]
			ECopyToPatternConfirmConfirm,
			[Token(Token = "0x4003175")]
			EDeletePattern,
			[Token(Token = "0x4003176")]
			EDeletePatternConfirm,
			[Token(Token = "0x4003177")]
			DebugSelectExternal,
			[Token(Token = "0x4003178")]
			EDetectBPMAndOffset,
			[Token(Token = "0x4003179")]
			EBPMLeft,
			[Token(Token = "0x400317A")]
			EBPMRight,
			[Token(Token = "0x400317B")]
			EInvertOffset,
			[Token(Token = "0x400317C")]
			EGenerate,
			[Token(Token = "0x400317D")]
			EConfirmGenerate,
			[Token(Token = "0x400317E")]
			GContinue,
			[Token(Token = "0x400317F")]
			GToMainMenu,
			[Token(Token = "0x4003180")]
			GBPMHalf,
			[Token(Token = "0x4003181")]
			GBPMDec,
			[Token(Token = "0x4003182")]
			GBPMInc,
			[Token(Token = "0x4003183")]
			GBPMDouble,
			[Token(Token = "0x4003184")]
			GOffsetDec,
			[Token(Token = "0x4003185")]
			GOffsetInc,
			[Token(Token = "0x4003186")]
			GOffsetToggle,
			[Token(Token = "0x4003187")]
			GReset,
			[Token(Token = "0x4003188")]
			GPreview,
			[Token(Token = "0x4003189")]
			GCancel,
			[Token(Token = "0x400318A")]
			GPlay,
			[Token(Token = "0x400318B")]
			GInfoDialogOK,
			[Token(Token = "0x400318C")]
			GSettingsBallsDown,
			[Token(Token = "0x400318D")]
			GSettingsBallsUp,
			[Token(Token = "0x400318E")]
			GSettingsWallsDown,
			[Token(Token = "0x400318F")]
			GSettingsWallsUp,
			[Token(Token = "0x4003190")]
			GSettingsStreamsDown,
			[Token(Token = "0x4003191")]
			GSettingsStreamsUp,
			[Token(Token = "0x4003192")]
			GSettingsSwingsDown,
			[Token(Token = "0x4003193")]
			GSettingsSwingsUp,
			[Token(Token = "0x4003194")]
			GSettingsJumpsDown,
			[Token(Token = "0x4003195")]
			GSettingsJumpsUp,
			[Token(Token = "0x4003196")]
			GSettingsSquatsDown,
			[Token(Token = "0x4003197")]
			GSettingsSquatsUp,
			[Token(Token = "0x4003198")]
			TakeScreenShot,
			[Token(Token = "0x4003199")]
			SongAdjust,
			[Token(Token = "0x400319A")]
			GSettingsReset,
			[Token(Token = "0x400319B")]
			UNUSED,
			[Token(Token = "0x400319C")]
			AdjustControllers,
			[Token(Token = "0x400319D")]
			ResetControllers,
			[Token(Token = "0x400319E")]
			AdjustControllersOK,
			[Token(Token = "0x400319F")]
			AdjustControllersCancel,
			[Token(Token = "0x40031A0")]
			GDetectAgain,
			[Token(Token = "0x40031A1")]
			MuteMusic,
			[Token(Token = "0x40031A2")]
			GoToSettingsFromWelcomePanel,
			[Token(Token = "0x40031A3")]
			Playlists,
			[Token(Token = "0x40031A4")]
			DecreaseMusicVolume,
			[Token(Token = "0x40031A5")]
			IncreaseMusicVolume,
			[Token(Token = "0x40031A6")]
			DecreaseSFXVolume,
			[Token(Token = "0x40031A7")]
			IncreaseSFXVolume,
			[Token(Token = "0x40031A8")]
			EPlayPause,
			[Token(Token = "0x40031A9")]
			EMark,
			[Token(Token = "0x40031AA")]
			EClearMarks,
			[Token(Token = "0x40031AB")]
			PlaylistAnalysis,
			[Token(Token = "0x40031AC")]
			DecreaseDailyCalories,
			[Token(Token = "0x40031AD")]
			IncreaseDailyCalories,
			[Token(Token = "0x40031AE")]
			VoiceLeft,
			[Token(Token = "0x40031AF")]
			VoiceRight,
			[Token(Token = "0x40031B0")]
			DecreasePlayspaceDistance,
			[Token(Token = "0x40031B1")]
			IncreasePlayspaceDistance,
			[Token(Token = "0x40031B2")]
			Guide,
			[Token(Token = "0x40031B3")]
			PlaylistEntryMoveUp,
			[Token(Token = "0x40031B4")]
			PlaylistEntryMoveDown,
			[Token(Token = "0x40031B5")]
			EMovePalette,
			[Token(Token = "0x40031B6")]
			ELiveRecorder,
			[Token(Token = "0x40031B7")]
			EMinHitSpeedLeft,
			[Token(Token = "0x40031B8")]
			EMinHitSpeedRight,
			[Token(Token = "0x40031B9")]
			EPowerHitSpeedLeft,
			[Token(Token = "0x40031BA")]
			EPowerHitSpeedRight,
			[Token(Token = "0x40031BB")]
			ELRSubbeatModeLeft,
			[Token(Token = "0x40031BC")]
			ELRSubbeatModeRight,
			[Token(Token = "0x40031BD")]
			ELRSquatSensitivityLeft,
			[Token(Token = "0x40031BE")]
			ELRSquatSensitivityRight,
			[Token(Token = "0x40031BF")]
			ELRObstacleTypeLeft,
			[Token(Token = "0x40031C0")]
			ELRObstacleTypeRight,
			[Token(Token = "0x40031C1")]
			EClearAll,
			[Token(Token = "0x40031C2")]
			ELRSidestepSensitivityLeft,
			[Token(Token = "0x40031C3")]
			ELRSidestepSensitivityRight,
			[Token(Token = "0x40031C4")]
			ELRSwingSensitivityLeft,
			[Token(Token = "0x40031C5")]
			ELRSwingSensitivityRight,
			[Token(Token = "0x40031C6")]
			EClearStreams,
			[Token(Token = "0x40031C7")]
			EClearRange,
			[Token(Token = "0x40031C8")]
			EClearAllConfirm,
			[Token(Token = "0x40031C9")]
			ELRResetSensitivities
		}

		[Token(Token = "0x20007E4")]
		public delegate void OnClick(MenuSelectButton button);

		[Token(Token = "0x20007E5")]
		public delegate void OnHoverEnter(MenuSelectButton button);

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Action action;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Animator tooltipAnimator;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDEB5")]
		[SerializeField]
		private Animator noteOnClickAnimator;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image childImage;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DA04")]
		[SerializeField]
		internal bool hasScaleTweening;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		internal bool dontChangeSelectionColor;

		[Token(Token = "0x1400006D")]
		public event OnClick onClick
		{
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x17FE138", Offset = "0x17FE138", VA = "0x17FE138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29C00", Offset = "0xC29C00")]
			add
			{
			}
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x17FE284", Offset = "0x17FE284", VA = "0x17FE284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29C3C", Offset = "0xC29C3C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event OnHoverEnter onHoverEnter
		{
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x17FE3D0", Offset = "0x17FE3D0", VA = "0x17FE3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29C78", Offset = "0xC29C78")]
			add
			{
			}
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x17FE51C", Offset = "0x17FE51C", VA = "0x17FE51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29CB4", Offset = "0xC29CB4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x17FE668", Offset = "0x17FE668", VA = "0x17FE668")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x17FE904", Offset = "0x17FE904", VA = "0x17FE904", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x17FEFA4", Offset = "0x17FEFA4", VA = "0x17FEFA4", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x17FF150", Offset = "0x17FF150", VA = "0x17FF150")]
		private void HideToolTip()
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x17FEF08", Offset = "0x17FEF08", VA = "0x17FEF08")]
		private void ShowToolTip()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x17FF1EC", Offset = "0x17FF1EC", VA = "0x17FF1EC")]
		public void ShowSelectionGlow(bool isSelected)
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x17FF5F4", Offset = "0x17FF5F4", VA = "0x17FF5F4")]
		public void ShowNoteOnClick()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x17FF690", Offset = "0x17FF690", VA = "0x17FF690", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x17FFC10", Offset = "0x17FFC10", VA = "0x17FFC10")]
		public Action GetAction()
		{
			return default(Action);
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x17FFC40", Offset = "0x17FFC40", VA = "0x17FFC40", Slot = "7")]
		internal virtual bool IsInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x17FFCF8", Offset = "0x17FFCF8", VA = "0x17FFCF8")]
		internal void SetInteractable(bool interactable)
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x18000BC", Offset = "0x18000BC", VA = "0x18000BC")]
		internal void SetChildImage(bool isShown)
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1800218", Offset = "0x1800218", VA = "0x1800218")]
		internal void SetAction(Action actionToUse)
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x1800250", Offset = "0x1800250", VA = "0x1800250")]
		public MenuSelectButton()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class MenuSlider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Menu menu;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FrameworkManager fm;

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1800490", Offset = "0x1800490", VA = "0x1800490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x18005B4", Offset = "0x18005B4", VA = "0x18005B4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x18005CC", Offset = "0x18005CC", VA = "0x18005CC", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x1800678", Offset = "0x1800678", VA = "0x1800678")]
		public MenuSlider()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class MenuSoundManager : MonoBehaviour
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0FA58", Offset = "0xC0FA58")]
		public AudioClip buttonHover;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF7B")]
		public AudioClip buttonClick;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public AudioClip startGame;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DACC")]
		public AudioClip cameraShutter;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC0FABC", Offset = "0xC0FABC")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isActive;

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x18006A8", Offset = "0x18006A8", VA = "0x18006A8")]
		public void PlayHoverSound()
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1800720", Offset = "0x1800720", VA = "0x1800720")]
		public void PlayClickSound()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1800798", Offset = "0x1800798", VA = "0x1800798")]
		public void PlayStartSound()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1800810", Offset = "0x1800810", VA = "0x1800810")]
		public void PlayCameraSound()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1800888", Offset = "0x1800888", VA = "0x1800888")]
		public void SetEnabled(bool isActive)
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x18008D4", Offset = "0x18008D4", VA = "0x18008D4")]
		public MenuSoundManager()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class MenuToggleArea : MonoBehaviour
	{
		[Token(Token = "0x20007E6")]
		public enum Selection
		{
			[Token(Token = "0x40031CB")]
			Environment,
			[Token(Token = "0x40031CC")]
			Song,
			[Token(Token = "0x40031CD")]
			Difficulty,
			[Token(Token = "0x40031CE")]
			Weapon,
			[Token(Token = "0x40031CF")]
			HighscoreOverallOrWeaponSpecific,
			[Token(Token = "0x40031D0")]
			PlayerSize,
			[Token(Token = "0x40031D1")]
			PlayspaceSize,
			[Token(Token = "0x40031D2")]
			ScoreVisualization,
			[Token(Token = "0x40031D3")]
			SpectatorCamera,
			[Token(Token = "0x40031D4")]
			CameraMode,
			[Token(Token = "0x40031D5")]
			Settings,
			[Token(Token = "0x40031D6")]
			Bloom,
			[Token(Token = "0x40031D7")]
			MirrorModifier,
			[Token(Token = "0x40031D8")]
			NoHorizontalWallsModifier,
			[Token(Token = "0x40031D9")]
			NoFailModifier,
			[Token(Token = "0x40031DA")]
			ChallengeMode,
			[Token(Token = "0x40031DB")]
			EPanelToggle,
			[Token(Token = "0x40031DC")]
			SongExternal,
			[Token(Token = "0x40031DD")]
			ECopyMirrorHorizontal,
			[Token(Token = "0x40031DE")]
			EMetronome,
			[Token(Token = "0x40031DF")]
			TrackCalories,
			[Token(Token = "0x40031E0")]
			Beautify,
			[Token(Token = "0x40031E1")]
			TrackHeartrate,
			[Token(Token = "0x40031E2")]
			GameHints,
			[Token(Token = "0x40031E3")]
			PlayspaceWarning,
			[Token(Token = "0x40031E4")]
			StreamFeedbackVisualization,
			[Token(Token = "0x40031E5")]
			ComboHighlighting,
			[Token(Token = "0x40031E6")]
			ECopyMirrorVertical,
			[Token(Token = "0x40031E7")]
			ECopyAdditive,
			[Token(Token = "0x40031E8")]
			EPatternNew,
			[Token(Token = "0x40031E9")]
			ShowBounds,
			[Token(Token = "0x40031EA")]
			NormalBallsOnlyModifier,
			[Token(Token = "0x40031EB")]
			NoVerticalWallsModifier,
			[Token(Token = "0x40031EC")]
			VoiceOver,
			[Token(Token = "0x40031ED")]
			Generate,
			[Token(Token = "0x40031EE")]
			FlightPaths,
			[Token(Token = "0x40031EF")]
			SongSettings,
			[Token(Token = "0x40031F0")]
			SuperSpeedModifier,
			[Token(Token = "0x40031F1")]
			PlayspaceSizeWelcomePanel,
			[Token(Token = "0x40031F2")]
			PlayMusicOnReturn,
			[Token(Token = "0x40031F3")]
			UNUSED,
			[Token(Token = "0x40031F4")]
			MuteMusicToggle,
			[Token(Token = "0x40031F5")]
			SmallerBallsModifier,
			[Token(Token = "0x40031F6")]
			SongPack,
			[Token(Token = "0x40031F7")]
			PowerBallsOnlyModifier,
			[Token(Token = "0x40031F8")]
			Tutorial,
			[Token(Token = "0x40031F9")]
			StrengthMeter,
			[Token(Token = "0x40031FA")]
			StrengthFormat,
			[Token(Token = "0x40031FB")]
			NoBadBallsModifier,
			[Token(Token = "0x40031FC")]
			NoTunnelsModifier,
			[Token(Token = "0x40031FD")]
			ELiveRecorderMetronome,
			[Token(Token = "0x40031FE")]
			ELiveRecorderBallSelection,
			[Token(Token = "0x40031FF")]
			ELROSNormalBall,
			[Token(Token = "0x4003200")]
			ELROSPowerBall,
			[Token(Token = "0x4003201")]
			ELROSSwing,
			[Token(Token = "0x4003202")]
			ELROSBallObstacle,
			[Token(Token = "0x4003203")]
			ELROSHorizontalWall,
			[Token(Token = "0x4003204")]
			ELROSLeftTunnel,
			[Token(Token = "0x4003205")]
			ELROSCenteredTunnel,
			[Token(Token = "0x4003206")]
			ELROSRightTunnel,
			[Token(Token = "0x4003207")]
			ELROSLeftUpsidedownL,
			[Token(Token = "0x4003208")]
			ELROSRightUpsidedownL,
			[Token(Token = "0x4003209")]
			ELROSNarrowVerticalWall,
			[Token(Token = "0x400320A")]
			ELROSWideVerticalWall,
			[Token(Token = "0x400320B")]
			NoDoubleBallsModifier,
			[Token(Token = "0x400320C")]
			NoStreamsModifier,
			[Token(Token = "0x400320D")]
			Gameplay,
			[Token(Token = "0x400320E")]
			EBeatUnits
		}

		[Token(Token = "0x20007E7")]
		public delegate void OnSelect(Selection selection, int value);

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Selection selection;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF82")]
		private Dictionary<int, MenuToggleButton> buttons;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DAD4")]
		private bool isInitialized;

		[Token(Token = "0x1400006F")]
		public event OnSelect onSelect
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1800918", Offset = "0x1800918", VA = "0x1800918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29CF0", Offset = "0xC29CF0")]
			add
			{
			}
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x1800A64", Offset = "0x1800A64", VA = "0x1800A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29D2C", Offset = "0xC29D2C")]
			remove
			{
			}
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1800BB0", Offset = "0x1800BB0", VA = "0x1800BB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1800C08", Offset = "0x1800C08", VA = "0x1800C08")]
		public void InitializeSelectionButtons()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1801628", Offset = "0x1801628", VA = "0x1801628")]
		private void OnButtonClicked(MenuToggleButton button)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1801D84", Offset = "0x1801D84", VA = "0x1801D84")]
		public Selection GetSelection()
		{
			return default(Selection);
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1801DB4", Offset = "0x1801DB4", VA = "0x1801DB4")]
		public void SetSelection(Selection selection)
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x1801DEC", Offset = "0x1801DEC", VA = "0x1801DEC")]
		public void SetSelectionValue(int value)
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x1802070", Offset = "0x1802070", VA = "0x1802070")]
		public void SetSelectionValueSilent(int value)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x1802450", Offset = "0x1802450", VA = "0x1802450")]
		public void ForceSelectionBoxValue(int value)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x18027B4", Offset = "0x18027B4", VA = "0x18027B4")]
		public void SetButtonInteractable(int buttonValue, bool isInteractable)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x18029E4", Offset = "0x18029E4", VA = "0x18029E4")]
		public MenuToggleArea()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class MenuToggleButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x20007E8")]
		public delegate void OnClick(MenuToggleButton button);

		[Token(Token = "0x20007E9")]
		public delegate void OnHoverEnter(MenuToggleButton button);

		[Token(Token = "0x20007EA")]
		public delegate void OnPointerIsDown(MenuToggleButton button);

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFD5")]
		[SerializeField]
		private int selectionValue;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool lessAlphaChanges;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB2C")]
		[SerializeField]
		private bool isSelectionBox;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool hasScaleTweening;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool isTab;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject toolTip;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFDC")]
		[SerializeField]
		private GameObject unlockToolTip;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject activeOnInteractable;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB34")]
		[SerializeField]
		private bool isInvisibleWhenNotInteractive;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Selectable actualButton;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isToggledOn;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image frameImage;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFE3")]
		private Text buttonText;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private TextMeshProUGUI buttonTextTMP;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFEA")]
		private AudioSource audioSourceEffects;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Image buttonImage;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB44")]
		private Color initialbuttonImageColor;

		[Token(Token = "0x14000070")]
		public event OnClick onClick
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x18014DC", Offset = "0x18014DC", VA = "0x18014DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29D68", Offset = "0xC29D68")]
			add
			{
			}
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x1801390", Offset = "0x1801390", VA = "0x1801390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29DA4", Offset = "0xC29DA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event OnHoverEnter onHoverEnter
		{
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x1802C30", Offset = "0x1802C30", VA = "0x1802C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29DE0", Offset = "0xC29DE0")]
			add
			{
			}
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x1802D7C", Offset = "0x1802D7C", VA = "0x1802D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29E1C", Offset = "0xC29E1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event OnPointerIsDown onPointerIsDown
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x1802EC8", Offset = "0x1802EC8", VA = "0x1802EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29E58", Offset = "0xC29E58")]
			add
			{
			}
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x1803014", Offset = "0x1803014", VA = "0x1803014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29E94", Offset = "0xC29E94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event Action<MenuToggleButton> OnDeselect
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x1803160", Offset = "0x1803160", VA = "0x1803160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29ED0", Offset = "0xC29ED0")]
			add
			{
			}
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x18032AC", Offset = "0x18032AC", VA = "0x18032AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29F0C", Offset = "0xC29F0C")]
			remove
			{
			}
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x18033F8", Offset = "0x18033F8", VA = "0x18033F8", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1803884", Offset = "0x1803884", VA = "0x1803884", Slot = "8")]
		internal virtual void SetToggle(bool v)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1804154", Offset = "0x1804154", VA = "0x1804154")]
		internal void SetSelectionValue(int value)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x180418C", Offset = "0x180418C", VA = "0x180418C")]
		internal int GetSelectionValue()
		{
			return default(int);
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x18041BC", Offset = "0x18041BC", VA = "0x18041BC")]
		public bool IsToggledOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1804200", Offset = "0x1804200", VA = "0x1804200", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x180466C", Offset = "0x180466C", VA = "0x180466C", Slot = "9")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1804D44", Offset = "0x1804D44", VA = "0x1804D44", Slot = "10")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x1804FE4", Offset = "0x1804FE4", VA = "0x1804FE4")]
		public void ForceOnPointerExit()
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x1801EAC", Offset = "0x1801EAC", VA = "0x1801EAC")]
		public void Click()
		{
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x180261C", Offset = "0x180261C", VA = "0x180261C")]
		public void SetGray()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x1805664", Offset = "0x1805664", VA = "0x1805664", Slot = "11")]
		internal virtual bool IsInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x18056C8", Offset = "0x18056C8", VA = "0x18056C8", Slot = "12")]
		internal virtual void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x1805808", Offset = "0x1805808", VA = "0x1805808")]
		public void RemoveTooltip()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1805838", Offset = "0x1805838", VA = "0x1805838")]
		public MenuToggleButton()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class MenuToggleButtonLockable : MenuToggleButton
	{
		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image lockImage;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TextMeshProUGUI text;

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1805B18", Offset = "0x1805B18", VA = "0x1805B18", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1805BB8", Offset = "0x1805BB8", VA = "0x1805BB8", Slot = "12")]
		internal override void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x1805E74", Offset = "0x1805E74", VA = "0x1805E74")]
		public MenuToggleButtonLockable()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class MenuToggleButtonWithText : MenuToggleButtonLockable
	{
		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LocalizeStringEvent textToChange;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFF1")]
		[SerializeField]
		private string i18nHandle;

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1805EA4", Offset = "0x1805EA4", VA = "0x1805EA4", Slot = "9")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1806050", Offset = "0x1806050", VA = "0x1806050", Slot = "10")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1805EF4", Offset = "0x1805EF4", VA = "0x1805EF4")]
		private void SetStringReference()
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1806228", Offset = "0x1806228", VA = "0x1806228", Slot = "8")]
		internal override void SetToggle(bool v)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x18062A8", Offset = "0x18062A8", VA = "0x18062A8")]
		public MenuToggleButtonWithText()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class PatchNotes : MonoBehaviour
	{
		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1810090", Offset = "0x1810090", VA = "0x1810090")]
		private void Start()
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1810144", Offset = "0x1810144", VA = "0x1810144")]
		private void EnableOrDisable()
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1810280", Offset = "0x1810280", VA = "0x1810280")]
		public PatchNotes()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class PauseMenu : MonoBehaviour
	{
		[Token(Token = "0x20007EB")]
		public enum CancelAction
		{
			[Token(Token = "0x4003210")]
			STOP_PLAYLIST,
			[Token(Token = "0x4003211")]
			GOTO_MAIN_MENU
		}

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BPMOffsetAdjuster bpmOffsetAdjuster;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject generatorPart;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject mainButtonsPart;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFF8")]
		[SerializeField]
		private GameObject actualBPMAndOffsetPanel;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject messageForManuallyChangedLayouts;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB54")]
		public TextMeshProUGUI songTitleText;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI cancelButtonText;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton cancelButton;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSelectButton continueButton;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDFFF")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC10118", Offset = "0xC10118")]
		[SerializeField]
		private Slider musicSlider;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI musicVolText;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB5C")]
		[SerializeField]
		private AudioMixer mixer;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string musicExposedParam;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton decreaseMusicVolumeButton;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton increaseMusicVolumeButton;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE006")]
		private MenuSelectButton[] selectionButtons;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float musicVolume;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C724")]
		private float bpm;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offset;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 originalButtonPosition;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float generatorPartHeight;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE00C")]
		private FrameworkManager fm;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x14000074")]
		public event Action cancelPressed
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x18229F0", Offset = "0x18229F0", VA = "0x18229F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29F48", Offset = "0xC29F48")]
			add
			{
			}
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x1822B3C", Offset = "0x1822B3C", VA = "0x1822B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29F84", Offset = "0xC29F84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event Action continuePressed
		{
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x1822C88", Offset = "0x1822C88", VA = "0x1822C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29FC0", Offset = "0xC29FC0")]
			add
			{
			}
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x1822DD4", Offset = "0x1822DD4", VA = "0x1822DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC29FFC", Offset = "0xC29FFC")]
			remove
			{
			}
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1822F20", Offset = "0x1822F20", VA = "0x1822F20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1823500", Offset = "0x1823500", VA = "0x1823500")]
		private void ContinueButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x1823594", Offset = "0x1823594", VA = "0x1823594")]
		private void CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1823628", Offset = "0x1823628", VA = "0x1823628")]
		private void BpmOffsetAdjuster_offsetChanged(float newOffset)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1823660", Offset = "0x1823660", VA = "0x1823660")]
		private void BpmOffsetAdjuster_bpmChanged(float newBpm)
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1823698", Offset = "0x1823698", VA = "0x1823698")]
		private void SelectionButtonSelect(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x1823714", Offset = "0x1823714", VA = "0x1823714")]
		private void MenuButtonSelectHoverEnter(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x1823790", Offset = "0x1823790", VA = "0x1823790")]
		public void ShowPauseMenu(float bpm, float offset, string songTitle, CancelAction cancelAction)
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x1823E84", Offset = "0x1823E84", VA = "0x1823E84")]
		public void SetGeneratorSettingType(bool showGeneratorSettings, bool showManualMessage)
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x1824148", Offset = "0x1824148", VA = "0x1824148")]
		internal void HidePauseMenu()
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x18241A4", Offset = "0x18241A4", VA = "0x18241A4")]
		public float GetBPM()
		{
			return default(float);
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x18241D4", Offset = "0x18241D4", VA = "0x18241D4")]
		public float GetOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x18239BC", Offset = "0x18239BC", VA = "0x18239BC")]
		public void SetMusicVolume(float value)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x1824204", Offset = "0x1824204", VA = "0x1824204")]
		private void DecreaseMusicVolumeButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x182429C", Offset = "0x182429C", VA = "0x182429C")]
		private void IncreaseMusicVolumeButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x18236CC", Offset = "0x18236CC", VA = "0x18236CC")]
		public void PlayClickSound()
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x1823748", Offset = "0x1823748", VA = "0x1823748")]
		public void PlayHoverSound()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x1824334", Offset = "0x1824334", VA = "0x1824334")]
		public PauseMenu()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class PermissionsHelper : MonoBehaviour
	{
		[Token(Token = "0x20007EC")]
		public enum Permission
		{
			[Token(Token = "0x4003213")]
			ExternalStorage,
			[Token(Token = "0x4003214")]
			FineLocation
		}

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<Permission, string> PERMISSION_TO_STRING;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE013")]
		[SerializeField]
		private MenuSelectButton button;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Permission permission;

		[Token(Token = "0x14000076")]
		public event Action PermissionGranted
		{
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x1824364", Offset = "0x1824364", VA = "0x1824364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A038", Offset = "0xC2A038")]
			add
			{
			}
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x18244B0", Offset = "0x18244B0", VA = "0x18244B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A074", Offset = "0xC2A074")]
			remove
			{
			}
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x18245FC", Offset = "0x18245FC", VA = "0x18245FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x18246C8", Offset = "0x18246C8", VA = "0x18246C8")]
		private void Button_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1824814", Offset = "0x1824814", VA = "0x1824814")]
		public PermissionsHelper()
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1824958", Offset = "0x1824958", VA = "0x1824958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A0B0", Offset = "0xC2A0B0")]
		private void <Button_onClick>b__8_0(string permissionName)
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class PlatformDeactivator : MonoBehaviour
	{
		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE01A")]
		public List<LLPlatform.PlatformType> deactivateOnPlatforms;

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x18263F4", Offset = "0x18263F4", VA = "0x18263F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1826580", Offset = "0x1826580", VA = "0x1826580")]
		public PlatformDeactivator()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class PlayspaceHeightAdjuster : MonoBehaviour
	{
		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static float MIN_VALUE;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB74")]
		private static float MAX_VALUE;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Slider heightSlider;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI heightText;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton heightDecreaseButton;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE021")]
		[SerializeField]
		private MenuSelectButton heightIncreaseButton;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton calibrateButton;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playerHeight;

		[Token(Token = "0x14000077")]
		public event Action<float> PlayerHeightSettingsChanged
		{
			[Token(Token = "0x60027EC")]
			[Address(RVA = "0x17698E4", Offset = "0x17698E4", VA = "0x17698E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A0EC", Offset = "0xC2A0EC")]
			add
			{
			}
			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x1769A30", Offset = "0x1769A30", VA = "0x1769A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A128", Offset = "0xC2A128")]
			remove
			{
			}
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1769B7C", Offset = "0x1769B7C", VA = "0x1769B7C")]
		internal void Initialize(float playerHeight)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x1769F44", Offset = "0x1769F44", VA = "0x1769F44")]
		internal void Awake()
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x176A28C", Offset = "0x176A28C", VA = "0x176A28C")]
		private void SliderValueChanged()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x176A2F0", Offset = "0x176A2F0", VA = "0x176A2F0")]
		private void CalibrateButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x176A3B0", Offset = "0x176A3B0", VA = "0x176A3B0")]
		private void UpdateWithNewValues()
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x1769BBC", Offset = "0x1769BBC", VA = "0x1769BBC")]
		public void SetHeightValue(float value)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x176A91C", Offset = "0x176A91C", VA = "0x176A91C")]
		public PlayspaceHeightAdjuster()
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x176AA10", Offset = "0x176AA10", VA = "0x176AA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A164", Offset = "0xC2A164")]
		private void <Awake>b__12_0(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x176AA78", Offset = "0x176AA78", VA = "0x176AA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A1A0", Offset = "0xC2A1A0")]
		private void <Awake>b__12_1(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x176AAE0", Offset = "0x176AAE0", VA = "0x176AAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A1DC", Offset = "0xC2A1DC")]
		private void <Awake>b__12_2(float <p0>)
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class PlayspaceOffsetAdjuster : MonoBehaviour
	{
		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton recenterButton;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton resetButton;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE028")]
		private GameObject playerRig;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject fakeHead;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB84")]
		private float modifiedX;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float modifiedZ;

		[Token(Token = "0x14000078")]
		public event Action<float, float> PlaySpaceOffsetSettingsChanged
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x176AB14", Offset = "0x176AB14", VA = "0x176AB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A218", Offset = "0xC2A218")]
			add
			{
			}
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x176AC60", Offset = "0x176AC60", VA = "0x176AC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A254", Offset = "0xC2A254")]
			remove
			{
			}
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x176ADAC", Offset = "0x176ADAC", VA = "0x176ADAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x176AED0", Offset = "0x176AED0", VA = "0x176AED0")]
		public void Initialize(GameObject playerRig, GameObject fakeHead, float oldX, float oldZ)
		{
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x176AFE4", Offset = "0x176AFE4", VA = "0x176AFE4")]
		private void RecenterButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x176B24C", Offset = "0x176B24C", VA = "0x176B24C")]
		private void ResetButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x176B3AC", Offset = "0x176B3AC", VA = "0x176B3AC")]
		public void CalculateNewCenter(Vector3 rotation)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x176B68C", Offset = "0x176B68C", VA = "0x176B68C")]
		public PlayspaceOffsetAdjuster()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class PlayspaceRotationAdjuster : MonoBehaviour
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton turnLeftButton;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE02F")]
		[SerializeField]
		private MenuSelectButton turnRightButton;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI degreeText;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB8C")]
		private GameObject playerRig;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int playspaceRotation;

		[Token(Token = "0x14000079")]
		public event Action<int, bool> PlaySpaceRotationSettingsChanged
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x176B6BC", Offset = "0x176B6BC", VA = "0x176B6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A290", Offset = "0xC2A290")]
			add
			{
			}
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x176B808", Offset = "0x176B808", VA = "0x176B808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A2CC", Offset = "0xC2A2CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x176B954", Offset = "0x176B954", VA = "0x176B954")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x176BA78", Offset = "0x176BA78", VA = "0x176BA78")]
		public void Initialize(GameObject playerRig, int playspaceRotation)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x176BC34", Offset = "0x176BC34", VA = "0x176BC34")]
		private void TurnLeftButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x176BE94", Offset = "0x176BE94", VA = "0x176BE94")]
		private void TurnRightButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x176C0F4", Offset = "0x176C0F4", VA = "0x176C0F4")]
		public PlayspaceRotationAdjuster()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class ProgressDialog : MonoBehaviour
	{
		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE036")]
		public TextMeshProUGUI text;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public MenuSelectButton cancelButton;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB94")]
		[SerializeField]
		private GameObject[] objectsToDeactivate;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action cancelAction;

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x1770E08", Offset = "0x1770E08", VA = "0x1770E08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x1760B04", Offset = "0x1760B04", VA = "0x1760B04")]
		public void HideInitially()
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x1770ED4", Offset = "0x1770ED4", VA = "0x1770ED4")]
		private void CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x17605AC", Offset = "0x17605AC", VA = "0x17605AC")]
		public void OpenDialog(string title, bool showStatus, Action cancelAction)
		{
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x1770F2C", Offset = "0x1770F2C", VA = "0x1770F2C")]
		public void SetStatus(string status)
		{
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x1760940", Offset = "0x1760940", VA = "0x1760940")]
		public void HideDialog()
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1770F84", Offset = "0x1770F84", VA = "0x1770F84")]
		public ProgressDialog()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class ShaderVariants : MonoBehaviour
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ShaderVariantCollection shaderVariants;

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x177BD8C", Offset = "0x177BD8C", VA = "0x177BD8C")]
		public ShaderVariantCollection ReturnShaderCollection()
		{
			return null;
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x177BED4", Offset = "0x177BED4", VA = "0x177BED4")]
		public ShaderVariants()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class SliderAdjustor : MonoBehaviour
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE03D")]
		[SerializeField]
		public Slider slider;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DB9C")]
		[SerializeField]
		private MenuSelectButton decreaseButton;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton increaseButton;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float minValue;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float maxValue;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE044")]
		[SerializeField]
		private bool wholeNumbers;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int roundTo;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBA4")]
		[SerializeField]
		private float increaseDecreaseByButton;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string textPrefix;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string textSuffix;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentValue;

		[Token(Token = "0x1400007A")]
		public event Action<float> OnValueChanged
		{
			[Token(Token = "0x6002811")]
			[Address(RVA = "0x1781630", Offset = "0x1781630", VA = "0x1781630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A308", Offset = "0xC2A308")]
			add
			{
			}
			[Token(Token = "0x6002812")]
			[Address(RVA = "0x178177C", Offset = "0x178177C", VA = "0x178177C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A344", Offset = "0xC2A344")]
			remove
			{
			}
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x17818C8", Offset = "0x17818C8", VA = "0x17818C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1781BE8", Offset = "0x1781BE8", VA = "0x1781BE8")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x1781CC4", Offset = "0x1781CC4", VA = "0x1781CC4")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x17820A0", Offset = "0x17820A0", VA = "0x17820A0")]
		internal static string FloatToString(float someFloat, int decimalPolaces)
		{
			return null;
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x17821C8", Offset = "0x17821C8", VA = "0x17821C8")]
		internal float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x17821F8", Offset = "0x17821F8", VA = "0x17821F8")]
		public SliderAdjustor()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1782228", Offset = "0x1782228", VA = "0x1782228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A380", Offset = "0xC2A380")]
		private void <Awake>b__15_0(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x178228C", Offset = "0x178228C", VA = "0x178228C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A3BC", Offset = "0xC2A3BC")]
		private void <Awake>b__15_1(MenuSelectButton MenuSelectButton)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x17822F0", Offset = "0x17822F0", VA = "0x17822F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A3F8", Offset = "0xC2A3F8")]
		private void <Awake>b__15_2(float <p0>)
		{
		}
	}
	[Token(Token = "0x20004FD")]
	internal class SongSettingsDialog : MonoBehaviour
	{
		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE04B")]
		[SerializeField]
		private GameObject container;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject waitMessage;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBAC")]
		[SerializeField]
		private GameObject content;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject detectionSettings;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject generatorSettings;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton cancelButton;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE052")]
		[SerializeField]
		private MenuSelectButton playButton;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MenuSelectButton addButton;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C72C")]
		[SerializeField]
		private MenuToggleArea playAfterGenerateToggle;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject generatorOnlyHeading;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuToggleArea toggle;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool playAfterGenerate;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE058")]
		private Action<bool, bool> callback;

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x18ECAE4", Offset = "0x18ECAE4", VA = "0x18ECAE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x18ECE50", Offset = "0x18ECE50", VA = "0x18ECE50")]
		private void PlayAfterGenerateToggle_onSelect(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x18ECEB0", Offset = "0x18ECEB0", VA = "0x18ECEB0")]
		private void CancelButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x18ECFA0", Offset = "0x18ECFA0", VA = "0x18ECFA0")]
		private void PlayButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x18ED09C", Offset = "0x18ED09C", VA = "0x18ED09C")]
		private void addButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x18ED198", Offset = "0x18ED198", VA = "0x18ED198")]
		public void OpenDialog(bool showWaitingMessage, bool showDetectionSettings, bool startWithDetectionSettings, string confirmText, bool confirmIsPlay, Action<bool, bool> callback)
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x18ED7E4", Offset = "0x18ED7E4", VA = "0x18ED7E4")]
		internal bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x18ED84C", Offset = "0x18ED84C", VA = "0x18ED84C")]
		public void CloseWaitingMessage()
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x18ED8D4", Offset = "0x18ED8D4", VA = "0x18ED8D4")]
		private void AdjustPanels(bool detectionIsVisible)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x18ED9B0", Offset = "0x18ED9B0", VA = "0x18ED9B0")]
		public SongSettingsDialog()
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x18ED9F4", Offset = "0x18ED9F4", VA = "0x18ED9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A434", Offset = "0xC2A434")]
		private void <Awake>b__13_0(MenuToggleArea.Selection selection, int value)
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class StartButton : MonoBehaviour
	{
		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBB4")]
		[SerializeField]
		private GameObject startButtonGlow;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject startButtonActiveText;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject startButtonInActiveText;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem startButtonPressEffect;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE05F")]
		private MenuSelectButton button;

		[Token(Token = "0x1400007B")]
		public event Action ButtonPressed
		{
			[Token(Token = "0x6002827")]
			[Address(RVA = "0x18F4CC0", Offset = "0x18F4CC0", VA = "0x18F4CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A470", Offset = "0xC2A470")]
			add
			{
			}
			[Token(Token = "0x6002828")]
			[Address(RVA = "0x18F4E0C", Offset = "0x18F4E0C", VA = "0x18F4E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A4AC", Offset = "0xC2A4AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x18F4F58", Offset = "0x18F4F58", VA = "0x18F4F58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x18F5050", Offset = "0x18F5050", VA = "0x18F5050")]
		private void Button_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x18F50E4", Offset = "0x18F50E4", VA = "0x18F50E4")]
		public void SetButtonActive(bool isActive)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x18F5230", Offset = "0x18F5230", VA = "0x18F5230")]
		public void PlayPressEffect()
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x18F5278", Offset = "0x18F5278", VA = "0x18F5278")]
		public StartButton()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class StringEditDialog : MonoBehaviour
	{
		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI titleText;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBBC")]
		[SerializeField]
		private TextMeshProUGUI contentText;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton okButton;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton cancelButton;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private KeyboardKey.KeyStatus shiftStatus;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE066")]
		private List<KeyboardKey> allKeys;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isEmpty;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBC4")]
		private string initialText;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<bool, string> callback;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isCreateNew;

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x18FD100", Offset = "0x18FD100", VA = "0x18FD100")]
		private void Awake()
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x18FD4F8", Offset = "0x18FD4F8", VA = "0x18FD4F8")]
		public void HideInitially()
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x18FD554", Offset = "0x18FD554", VA = "0x18FD554")]
		internal void OpenDialog(string title, string content, bool isCreateNew, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x18FD8DC", Offset = "0x18FD8DC", VA = "0x18FD8DC")]
		private void CancelButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x18FD9C8", Offset = "0x18FD9C8", VA = "0x18FD9C8")]
		private void OKButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x18FDABC", Offset = "0x18FDABC", VA = "0x18FDABC")]
		private string GetTextWithoutCursor()
		{
			return null;
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x18FDB98", Offset = "0x18FDB98", VA = "0x18FDB98")]
		private void KeyButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x18FD714", Offset = "0x18FD714", VA = "0x18FD714")]
		private void EnsureCursor()
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x18FD434", Offset = "0x18FD434", VA = "0x18FD434")]
		private void SetEmpty(bool isEmpty)
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x18FE1F8", Offset = "0x18FE1F8", VA = "0x18FE1F8")]
		private void UpdateShiftStatus()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x18FE534", Offset = "0x18FE534", VA = "0x18FE534")]
		public StringEditDialog()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class Controller : MonoBehaviour
	{
		[Token(Token = "0x20007ED")]
		public delegate void UseButtonChanged(Controller sender, bool isPressed);

		[Token(Token = "0x20007EE")]
		public delegate void TeleportButtonChanged(bool isPressed);

		[Token(Token = "0x20007EF")]
		public delegate void AppButtonChanged(bool isPressed);

		[Token(Token = "0x20007F0")]
		public delegate void TakeInteractButtonChanged(Controller sender, bool isPressed);

		[Token(Token = "0x20007F1")]
		public delegate void JoystickUpPressed(bool isPressed);

		[Token(Token = "0x20007F2")]
		public delegate void JoystickDownPressed(bool isPressed);

		[Token(Token = "0x20007F3")]
		public delegate void JoystickLeftPressed(Controller sender);

		[Token(Token = "0x20007F4")]
		public delegate void JoystickRightPressed(Controller sender);

		[Token(Token = "0x20007F5")]
		public delegate void SystemButtonPressed(bool pausePressed);

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public LLManager.HandSide handSide;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE06D")]
		[SerializeField]
		private GameObject handParent;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject handHandle;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBCC")]
		[SerializeField]
		private Rig rig;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE07B")]
		private LLController controllerHardwareInterface;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly float SPHERE_HIT_THRESHOLD_VELOCITY_SQUARED;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DBDC")]
		private Position cPos;

		[Token(Token = "0x1400007C")]
		public event UseButtonChanged useButtonChanged
		{
			[Token(Token = "0x6002839")]
			[Address(RVA = "0x198867C", Offset = "0x198867C", VA = "0x198867C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A4E8", Offset = "0xC2A4E8")]
			add
			{
			}
			[Token(Token = "0x600283A")]
			[Address(RVA = "0x19887C8", Offset = "0x19887C8", VA = "0x19887C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A524", Offset = "0xC2A524")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event TeleportButtonChanged teleportButtonChanged
		{
			[Token(Token = "0x600283B")]
			[Address(RVA = "0x1988914", Offset = "0x1988914", VA = "0x1988914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A560", Offset = "0xC2A560")]
			add
			{
			}
			[Token(Token = "0x600283C")]
			[Address(RVA = "0x1988A60", Offset = "0x1988A60", VA = "0x1988A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A59C", Offset = "0xC2A59C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event AppButtonChanged appButtonChanged
		{
			[Token(Token = "0x600283D")]
			[Address(RVA = "0x1988BAC", Offset = "0x1988BAC", VA = "0x1988BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A5D8", Offset = "0xC2A5D8")]
			add
			{
			}
			[Token(Token = "0x600283E")]
			[Address(RVA = "0x1988CF8", Offset = "0x1988CF8", VA = "0x1988CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A614", Offset = "0xC2A614")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event TakeInteractButtonChanged takeInteractButtonChanged
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0x1988E44", Offset = "0x1988E44", VA = "0x1988E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A650", Offset = "0xC2A650")]
			add
			{
			}
			[Token(Token = "0x6002840")]
			[Address(RVA = "0x1988F90", Offset = "0x1988F90", VA = "0x1988F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A68C", Offset = "0xC2A68C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event JoystickUpPressed joystickUpPressed
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0x19890DC", Offset = "0x19890DC", VA = "0x19890DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A6C8", Offset = "0xC2A6C8")]
			add
			{
			}
			[Token(Token = "0x6002842")]
			[Address(RVA = "0x1989228", Offset = "0x1989228", VA = "0x1989228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A704", Offset = "0xC2A704")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event JoystickDownPressed joystickDownPressed
		{
			[Token(Token = "0x6002843")]
			[Address(RVA = "0x1989374", Offset = "0x1989374", VA = "0x1989374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A740", Offset = "0xC2A740")]
			add
			{
			}
			[Token(Token = "0x6002844")]
			[Address(RVA = "0x19894C0", Offset = "0x19894C0", VA = "0x19894C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A77C", Offset = "0xC2A77C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event JoystickLeftPressed joystickLeftPressed
		{
			[Token(Token = "0x6002845")]
			[Address(RVA = "0x198960C", Offset = "0x198960C", VA = "0x198960C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A7B8", Offset = "0xC2A7B8")]
			add
			{
			}
			[Token(Token = "0x6002846")]
			[Address(RVA = "0x1989758", Offset = "0x1989758", VA = "0x1989758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A7F4", Offset = "0xC2A7F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event JoystickRightPressed joystickRightPressed
		{
			[Token(Token = "0x6002847")]
			[Address(RVA = "0x19898A4", Offset = "0x19898A4", VA = "0x19898A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A830", Offset = "0xC2A830")]
			add
			{
			}
			[Token(Token = "0x6002848")]
			[Address(RVA = "0x19899F0", Offset = "0x19899F0", VA = "0x19899F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A86C", Offset = "0xC2A86C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event SystemButtonPressed systemButtonPressed
		{
			[Token(Token = "0x6002849")]
			[Address(RVA = "0x1989B3C", Offset = "0x1989B3C", VA = "0x1989B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A8A8", Offset = "0xC2A8A8")]
			add
			{
			}
			[Token(Token = "0x600284A")]
			[Address(RVA = "0x1989C88", Offset = "0x1989C88", VA = "0x1989C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A8E4", Offset = "0xC2A8E4")]
			remove
			{
			}
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x1989DD4", Offset = "0x1989DD4", VA = "0x1989DD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x198A484", Offset = "0x198A484", VA = "0x198A484")]
		private void PauseUnpressed(LLController sender)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x198A50C", Offset = "0x198A50C", VA = "0x198A50C")]
		private void PausePressed(LLController sender)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x198A594", Offset = "0x198A594", VA = "0x198A594")]
		private void TakeInteractButtonUnpressed(LLController sender)
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x198A620", Offset = "0x198A620", VA = "0x198A620")]
		private void TakeInteractButtonPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x198A6AC", Offset = "0x198A6AC", VA = "0x198A6AC")]
		private void JoystickRightDownPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x198A728", Offset = "0x198A728", VA = "0x198A728")]
		private void JoystickLeftDownPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x198A7A4", Offset = "0x198A7A4", VA = "0x198A7A4")]
		private void JoystickDownDownPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x198A82C", Offset = "0x198A82C", VA = "0x198A82C")]
		private void JoystickDownUpPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x198A8B4", Offset = "0x198A8B4", VA = "0x198A8B4")]
		private void JoystickUpDownPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x198A93C", Offset = "0x198A93C", VA = "0x198A93C")]
		private void JoystickUpUpPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x198A9C4", Offset = "0x198A9C4", VA = "0x198A9C4")]
		private void AppMenuPressed(LLController sender)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x198AD34", Offset = "0x198AD34", VA = "0x198AD34")]
		private void AppMenuUnpressed(LLController sender)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x198ADBC", Offset = "0x198ADBC", VA = "0x198ADBC")]
		private void TeleportButtonUnpressed(LLController sender)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x198AE44", Offset = "0x198AE44", VA = "0x198AE44")]
		private void TeleportButtonPressed(LLController sender)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x198AECC", Offset = "0x198AECC", VA = "0x198AECC")]
		private void UseButtonUnpressed(LLController sender)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x198AF58", Offset = "0x198AF58", VA = "0x198AF58")]
		private void UseButtonPressed(LLController sender)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x198AFE4", Offset = "0x198AFE4", VA = "0x198AFE4")]
		internal void DoHapticPulse(LLController.PulseType pulseType)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x198B03C", Offset = "0x198B03C", VA = "0x198B03C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x198B4D8", Offset = "0x198B4D8", VA = "0x198B4D8")]
		public void Update()
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x198B548", Offset = "0x198B548", VA = "0x198B548")]
		private void SetControllerPosition()
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x198B698", Offset = "0x198B698", VA = "0x198B698")]
		internal GameObject GetHandHandle()
		{
			return null;
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x198B6C8", Offset = "0x198B6C8", VA = "0x198B6C8")]
		internal GameObject GetHandParent()
		{
			return null;
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x198B6F8", Offset = "0x198B6F8", VA = "0x198B6F8")]
		internal LLController GetHardwareInterface()
		{
			return null;
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x198B728", Offset = "0x198B728", VA = "0x198B728")]
		public Controller()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public enum HandState
	{
		[Token(Token = "0x40023F5")]
		Idle = 0,
		[Token(Token = "0x40023F6")]
		ThumbsUp = 1,
		[Token(Token = "0x40023F7")]
		Point = 2,
		[Token(Token = "0x40023F8")]
		GrabRoundS = 10,
		[Token(Token = "0x40023F9")]
		GrabRoundM = 11,
		[Token(Token = "0x40023FA")]
		GrabRoundL = 12,
		[Token(Token = "0x40023FB")]
		GrabRoundXL = 13,
		[Token(Token = "0x40023FC")]
		GrabRoundXXL = 14,
		[Token(Token = "0x40023FD")]
		GrabRectS = 20,
		[Token(Token = "0x40023FE")]
		GrabRectM = 21,
		[Token(Token = "0x40023FF")]
		GrabRectL = 22,
		[Token(Token = "0x4002400")]
		TweezeS = 30,
		[Token(Token = "0x4002401")]
		TweezeM = 31,
		[Token(Token = "0x4002402")]
		TweezeL = 32,
		[Token(Token = "0x4002403")]
		TweezeXS = 33,
		[Token(Token = "0x4002404")]
		TweezeSM = 34,
		[Token(Token = "0x4002405")]
		GrabFlatS = 40,
		[Token(Token = "0x4002406")]
		GrabFlatM = 41,
		[Token(Token = "0x4002407")]
		GrabFlatL = 42,
		[Token(Token = "0x4002408")]
		GrabFlatXL = 43,
		[Token(Token = "0x4002409")]
		GrabKey = 50,
		[Token(Token = "0x400240A")]
		GrabBroomOver = 51,
		[Token(Token = "0x400240B")]
		GrabFireExt = 52,
		[Token(Token = "0x400240C")]
		TriggerFireExt = 53,
		[Token(Token = "0x400240D")]
		DrillHold = 54,
		[Token(Token = "0x400240E")]
		DrillTrigger = 55,
		[Token(Token = "0x400240F")]
		GrabClothesHanger = 60,
		[Token(Token = "0x4002410")]
		GrabPowderBrush = 61,
		[Token(Token = "0x4002411")]
		TurnDial = 62,
		[Token(Token = "0x4002412")]
		GrabCutterNormal = 63,
		[Token(Token = "0x4002413")]
		GrabCutterBig = 64,
		[Token(Token = "0x4002414")]
		GrabParachuteHandle = 65,
		[Token(Token = "0x4002415")]
		GrabSpray = 66,
		[Token(Token = "0x4002416")]
		DontChangeState = 255
	}
	[Token(Token = "0x2000502")]
	public class Head : MonoBehaviour
	{
		[Token(Token = "0x6002864")]
		[Address(RVA = "0x17B19D0", Offset = "0x17B19D0", VA = "0x17B19D0")]
		public Head()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class PicoControllerVisual : MonoBehaviour
	{
		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC04")]
		public GameObject neo2;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject neo3;

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x18257E8", Offset = "0x18257E8", VA = "0x18257E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x1825868", Offset = "0x1825868", VA = "0x1825868")]
		public PicoControllerVisual()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class Rig : MonoBehaviour
	{
		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LLHeadset hwRig;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera eyeCamera;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0AB")]
		public GameObject moveable;

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x17778AC", Offset = "0x17778AC", VA = "0x17778AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x17779A0", Offset = "0x17779A0", VA = "0x17779A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x1777A04", Offset = "0x1777A04", VA = "0x1777A04")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x1777A4C", Offset = "0x1777A4C", VA = "0x1777A4C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x1777A94", Offset = "0x1777A94", VA = "0x1777A94")]
		public Rig()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class VRMiddlewareControllerVisual : MonoBehaviour
	{
		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public LLManager.HandSide side;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC0C")]
		public LLHeadset.VRMiddlewareType type;

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x190A9D8", Offset = "0x190A9D8", VA = "0x190A9D8")]
		internal GameObject GetVisualRepresentation()
		{
			return null;
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x190AB0C", Offset = "0x190AB0C", VA = "0x190AB0C")]
		public VRMiddlewareControllerVisual()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class MobilePCShaderSwitcher : AbstractPCMobileSwitcher
	{
		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader mobileDiffuseBumpedShader;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<Renderer> objectsForMobileDiffuseBumped;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader standardShader;

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x18062D8", Offset = "0x18062D8", VA = "0x18062D8", Slot = "4")]
		public override void SwitchToPC()
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x1806784", Offset = "0x1806784", VA = "0x1806784", Slot = "5")]
		public override void SwitchToMobile()
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x1806C30", Offset = "0x1806C30", VA = "0x1806C30")]
		public MobilePCShaderSwitcher()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class MobilePCShadowSwitcher : AbstractPCMobileSwitcher
	{
		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0B2")]
		[SerializeField]
		private List<Renderer> shadowsToDisableOnQuest;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private List<Renderer> shadowsToDisableButKeepReceivingOnQuest;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC14")]
		[SerializeField]
		private List<Renderer> twoSidedShadowsToDisableOnQuest;

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x1806C60", Offset = "0x1806C60", VA = "0x1806C60", Slot = "4")]
		public override void SwitchToPC()
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x180760C", Offset = "0x180760C", VA = "0x180760C", Slot = "5")]
		public override void SwitchToMobile()
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x1807FB8", Offset = "0x1807FB8", VA = "0x1807FB8")]
		public MobilePCShadowSwitcher()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class QuestShadowDistanceChanger : MonoBehaviour
	{
		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sceneSpecificShadowDistance;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float defaultShadowDistance;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isQuest;

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x17724A0", Offset = "0x17724A0", VA = "0x17724A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x17725CC", Offset = "0x17725CC", VA = "0x17725CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x17726E0", Offset = "0x17726E0", VA = "0x17726E0")]
		public QuestShadowDistanceChanger()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class QuestShadowMaskSwitcherOnStart : MonoBehaviour
	{
		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0B9")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ShadowmaskMode modeBeforeSwitching;

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x1772724", Offset = "0x1772724", VA = "0x1772724")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x1772850", Offset = "0x1772850", VA = "0x1772850")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x1772964", Offset = "0x1772964", VA = "0x1772964")]
		public QuestShadowMaskSwitcherOnStart()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class QuestSpecificObjects : MonoBehaviour
	{
		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC1C")]
		[SerializeField]
		private List<GameObject> objectsToDisableOnQuest;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<GameObject> objectsToEnableOnQuest;

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x1772994", Offset = "0x1772994", VA = "0x1772994")]
		private void Awake()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x1773078", Offset = "0x1773078", VA = "0x1773078")]
		public QuestSpecificObjects()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class QuestVersionSwitcher : MonoBehaviour
	{
		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<GameObject> objectsToEnableOnlyOnQuest2;

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x17730A8", Offset = "0x17730A8", VA = "0x17730A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x1773864", Offset = "0x1773864", VA = "0x1773864")]
		public QuestVersionSwitcher()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class RenderQueueUpdate : MonoBehaviour
	{
		[Token(Token = "0x20007F6")]
		private enum RenderQueue
		{
			[Token(Token = "0x4003216")]
			Background = 1000,
			[Token(Token = "0x4003217")]
			Geometry = 2000,
			[Token(Token = "0x4003218")]
			AlphaTest = 2450,
			[Token(Token = "0x4003219")]
			Geometrylast = 2500,
			[Token(Token = "0x400321A")]
			Transparent = 3000,
			[Token(Token = "0x400321B")]
			Overlay = 4000
		}

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Material> layer1;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0C0")]
		public List<Material> layer2;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public List<Material> layer3;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC24")]
		public List<Material> layer4;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Material> layer5;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Material> layer6;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Material> layer7;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0C7")]
		public List<Material> layer8;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public List<Material> layer9;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC2C")]
		public List<Material> layer10;

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x17752B0", Offset = "0x17752B0", VA = "0x17752B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x1777668", Offset = "0x1777668", VA = "0x1777668")]
		public RenderQueueUpdate()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class SetColorSpace : MonoBehaviour
	{
		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LLHeadset.PBVRColorSpace colorSpace;

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x177BC30", Offset = "0x177BC30", VA = "0x177BC30")]
		private void Start()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x177BD48", Offset = "0x177BD48", VA = "0x177BD48")]
		public SetColorSpace()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class RotatingCameraAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private CameraRotator cameraRotator;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0D5")]
		[SerializeField]
		private float positionStepSize;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float rotationStepSize;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC3C")]
		[SerializeField]
		private float adjustSpeed;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1777AC4", Offset = "0x1777AC4", VA = "0x1777AC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1777B90", Offset = "0x1777B90", VA = "0x1777B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x1777F34", Offset = "0x1777F34", VA = "0x1777F34")]
		private void DecreaseDistance()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x17782D8", Offset = "0x17782D8", VA = "0x17782D8")]
		private void IncreaseDistance()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x177867C", Offset = "0x177867C", VA = "0x177867C")]
		private void IncreaseHeight()
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x1778A20", Offset = "0x1778A20", VA = "0x1778A20")]
		private void DecreaseHeight()
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x17792B4", Offset = "0x17792B4", VA = "0x17792B4")]
		private void RotateUp()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x1778DC4", Offset = "0x1778DC4", VA = "0x1778DC4")]
		private void RotateDown()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x17797A4", Offset = "0x17797A4", VA = "0x17797A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x17797FC", Offset = "0x17797FC", VA = "0x17797FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x1777DD8", Offset = "0x1777DD8", VA = "0x1777DD8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x1779854", Offset = "0x1779854", VA = "0x1779854")]
		public RotatingCameraAdjuster()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class ShortGlowOnContact : MonoBehaviour
	{
		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Renderer objectRenderer;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0DC")]
		private Material objectSharedMaterial;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color originalColor;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC44")]
		private Color highlightColor;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool leftHandedContact;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool rightHandedContact;

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x177C4FC", Offset = "0x177C4FC", VA = "0x177C4FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x177C60C", Offset = "0x177C60C", VA = "0x177C60C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x177C7A4", Offset = "0x177C7A4", VA = "0x177C7A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x177C964", Offset = "0x177C964", VA = "0x177C964")]
		public ShortGlowOnContact()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class SkyboxLoader
	{
		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2AE4", Offset = "0xBE2AE4")]
		private sealed class <LoadCubemapCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400321C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400321D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0EA")]
			private object <>2__current;

			[Token(Token = "0x400321E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SkyboxLoader <>4__this;

			[Token(Token = "0x400321F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C73C")]
			public string filename;

			[Token(Token = "0x4003220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Shader cubemapShader;

			[Token(Token = "0x4003221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Shader panoramicShader;

			[Token(Token = "0x4003222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x170005D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600321F")]
				[Address(RVA = "0x1781530", Offset = "0x1781530", VA = "0x1781530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003221")]
				[Address(RVA = "0x1781600", Offset = "0x1781600", VA = "0x1781600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600321B")]
			[Address(RVA = "0x177E358", Offset = "0x177E358", VA = "0x177E358")]
			[DebuggerHidden]
			public <LoadCubemapCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600321C")]
			[Address(RVA = "0x17802CC", Offset = "0x17802CC", VA = "0x17802CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600321D")]
			[Address(RVA = "0x178053C", Offset = "0x178053C", VA = "0x178053C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600321E")]
			[Address(RVA = "0x1780464", Offset = "0x1780464", VA = "0x1780464")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003220")]
			[Address(RVA = "0x1781560", Offset = "0x1781560", VA = "0x1781560", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material material;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0E3")]
		private bool isFinished;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isError;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC4C")]
		private string errorMessage;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Cubemap previousLoadedCubemap;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D previousTexture;

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x177E224", Offset = "0x177E224", VA = "0x177E224")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2A920", Offset = "0xC2A920")]
		public IEnumerator LoadCubemapCoroutine(string filename, Shader cubemapShader, Shader panoramicShader)
		{
			return null;
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x177E3A0", Offset = "0x177E3A0", VA = "0x177E3A0")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x177E3E4", Offset = "0x177E3E4", VA = "0x177E3E4")]
		public bool IsError()
		{
			return default(bool);
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x177E428", Offset = "0x177E428", VA = "0x177E428")]
		public Material GetMaterial()
		{
			return null;
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x177E458", Offset = "0x177E458", VA = "0x177E458")]
		private void LoadCubemapIntoSkybox(Texture2D textureFromUWR, Shader cubemapShader, Shader panoramicShader)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x177FDC4", Offset = "0x177FDC4", VA = "0x177FDC4")]
		internal string GetErrorMessage()
		{
			return null;
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x177FB70", Offset = "0x177FB70", VA = "0x177FB70")]
		private Color[] reverse(Color[] input, int size)
		{
			return null;
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x177FDF4", Offset = "0x177FDF4", VA = "0x177FDF4")]
		public static bool IsInternal(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x177FEA8", Offset = "0x177FEA8", VA = "0x177FEA8")]
		public static string GetFileNameWithExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x1780110", Offset = "0x1780110", VA = "0x1780110")]
		public static string GetFileNameWithoutExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x178028C", Offset = "0x178028C", VA = "0x178028C")]
		public SkyboxLoader()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class EditorController : MonoBehaviour
	{
		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0F0")]
		[SerializeField]
		public LLManager.HandSide handSide;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xC114D0", Offset = "0xC114D0")]
		[SerializeField]
		private GameObject normalHand;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC54")]
		[SerializeField]
		private Transform tip;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isGrabbing;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HandState currentHandState;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject touchedObject;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0F7")]
		private GameObject grabbedObject;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject attachedObject;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC5C")]
		private Vector3 attachedObjectOffset;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 attachedObjectRotationOffEuler;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion attachedObjectRotationOffset;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller controller;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0FE")]
		private Transform previousParent;

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x16F9A8C", Offset = "0x16F9A8C", VA = "0x16F9A8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x16F9C8C", Offset = "0x16F9C8C", VA = "0x16F9C8C")]
		internal Controller Attach()
		{
			return null;
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x16FA2E0", Offset = "0x16FA2E0", VA = "0x16FA2E0")]
		internal void Detach()
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x16FA428", Offset = "0x16FA428", VA = "0x16FA428")]
		private void Controller_triggerButtonChanged(Controller controller, bool isPressed)
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x16FA1A4", Offset = "0x16FA1A4", VA = "0x16FA1A4")]
		public void SetHandState(HandState state)
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x16FA5D0", Offset = "0x16FA5D0", VA = "0x16FA5D0")]
		public void ResetHandState(HandState state)
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x16FA478", Offset = "0x16FA478", VA = "0x16FA478")]
		private void ConditionalSetHandState(GameObject hand, HandState state)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x16FA704", Offset = "0x16FA704", VA = "0x16FA704")]
		public GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x16FA734", Offset = "0x16FA734", VA = "0x16FA734")]
		public GameObject GetTouchedMovableObject()
		{
			return null;
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x16FA8BC", Offset = "0x16FA8BC", VA = "0x16FA8BC")]
		public void InjectGameObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x16FA8F4", Offset = "0x16FA8F4", VA = "0x16FA8F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x16FABC0", Offset = "0x16FABC0", VA = "0x16FABC0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x16FAF7C", Offset = "0x16FAF7C", VA = "0x16FAF7C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x16FAFB0", Offset = "0x16FAFB0", VA = "0x16FAFB0")]
		public Controller GetActualController()
		{
			return null;
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x16FAFE0", Offset = "0x16FAFE0", VA = "0x16FAFE0")]
		public Transform GetControllerTip()
		{
			return null;
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x16FB010", Offset = "0x16FB010", VA = "0x16FB010")]
		public void SetGrabbedObject(GameObject grabbedObject)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x16FB048", Offset = "0x16FB048", VA = "0x16FB048")]
		public GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x16FB078", Offset = "0x16FB078", VA = "0x16FB078")]
		public bool IsOccupied()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x16FB194", Offset = "0x16FB194", VA = "0x16FB194")]
		public bool IsTriggerButtonDownThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x16FB1D8", Offset = "0x16FB1D8", VA = "0x16FB1D8")]
		public Vector3 GetSpeed()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x16FB270", Offset = "0x16FB270", VA = "0x16FB270")]
		public EditorController()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class EditorPalette : MonoBehaviour
	{
		[Token(Token = "0x20007F8")]
		private enum MenuPos
		{
			[Token(Token = "0x4003224")]
			Left,
			[Token(Token = "0x4003225")]
			Center,
			[Token(Token = "0x4003226")]
			Right
		}

		[Token(Token = "0x20007F9")]
		private enum UseController
		{
			[Token(Token = "0x4003228")]
			None,
			[Token(Token = "0x4003229")]
			Left,
			[Token(Token = "0x400322A")]
			Right
		}

		[Token(Token = "0x20007FA")]
		private class BooleanToggle
		{
			[Token(Token = "0x400322B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MenuToggleArea toggleArea;

			[Token(Token = "0x400322C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE17B")]
			private bool currentValue;

			[Token(Token = "0x6003222")]
			[Address(RVA = "0x16FEF14", Offset = "0x16FEF14", VA = "0x16FEF14")]
			public BooleanToggle(MenuToggleArea toggleArea, bool isChecked)
			{
			}

			[Token(Token = "0x6003223")]
			[Address(RVA = "0x1709C68", Offset = "0x1709C68", VA = "0x1709C68")]
			public void SetValue(bool isChecked)
			{
			}

			[Token(Token = "0x6003224")]
			[Address(RVA = "0x1707420", Offset = "0x1707420", VA = "0x1707420")]
			internal void SetRawValue(int value)
			{
			}

			[Token(Token = "0x6003225")]
			[Address(RVA = "0x1709D44", Offset = "0x1709D44", VA = "0x1709D44")]
			public bool GetValue()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007FB")]
		public delegate void OnButtonDown(MenuSelectButton.Action button, Controller controller);

		[Token(Token = "0x20007FC")]
		public delegate void OnBooleanChanged(MenuToggleArea.Selection selection, bool newValue);

		[Token(Token = "0x20007FD")]
		public delegate void OnBeatStepChanged(SongEditor.BeatCountMode newMode);

		[Token(Token = "0x20007FE")]
		public delegate void OnBPMOrOffsetChanged(float bpm, float newOffset);

		[Token(Token = "0x20007FF")]
		public delegate void OnPlayPauseChanged(bool isPressed);

		[Token(Token = "0x2000800")]
		public delegate void OnSliderValueChanged(int beat);

		[Token(Token = "0x2000801")]
		public delegate void OnPalettePositionChanged(Vector3 palettePosition, Vector3 paletteEulerAngles);

		[Token(Token = "0x2000802")]
		public delegate void OnLiveRecorderToggled(bool isActive);

		[Token(Token = "0x2000803")]
		public delegate void OnLiveRecorderSubbeatsChanged(SongEditor.LiveRecorderSubbeatMode newSubbeatMode);

		[Token(Token = "0x4002456")]
		private const float OFFSET_ADDITION = 0.01f;

		[Token(Token = "0x4002457")]
		private const float BPM_ADDITION = 1f;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 MENU_POS_LEFT;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 MENU_ROT_LEFT;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 MENU_POS_CENTER;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE105")]
		private readonly Vector3 MENU_ROT_CENTER;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly Vector3 MENU_POS_RIGHT;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC6C")]
		private readonly Vector3 MENU_ROT_RIGHT;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 SIDEDOCK_POS_LEFT;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 SIDEDOCK_POS_RIGHT;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool sideDockIsLeft;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE10C")]
		private static readonly string SETTINGS_MENU_POSITION;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_LIVERECORDER_MINHITSPEED;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC74")]
		private static readonly string SETTINGS_LIVERECORDER_POWERHITSPEED;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_LIVERECORDER_BALLSELECTION;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_LIVERECORDER_SQUATSENSITIVITY;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string SETTINGS_LIVERECORDER_OBSTACLETYPE;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE113")]
		private static readonly string SETTINGS_LIVERECORDER_SIDESTEPSENSITIVITY;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string SETTINGS_LIVERECORDER_SWINGSENSITIVITY;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC7C")]
		[SerializeField]
		private bool enableFreePositioning;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC115C8", Offset = "0xC115C8")]
		[SerializeField]
		private GameObject positioner;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject positionHandle;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton infoButton;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE11A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC116C0", Offset = "0xC116C0")]
		[SerializeField]
		private GameObject panelMain;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject panelItems;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC84")]
		[SerializeField]
		private GameObject panelEdit;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject panelRecord;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC117B8", Offset = "0xC117B8")]
		[SerializeField]
		private PrefixBasedLocalizedString menuPositionText;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI menuBeatStepText;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE121")]
		[SerializeField]
		private TextMeshProUGUI menuOffsetText;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI menuBPMText;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC8C")]
		[SerializeField]
		private TextMeshProUGUI menuCopyBeatsStartBeat;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI menuCopyBeatsEndBeat;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI menuMinHitSpeedText;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI menuPowerHitSpeedText;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE128")]
		[SerializeField]
		private TextMeshProUGUI menuLRSubbeatModeText;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI menuLRSquatSensitivityText;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC94")]
		[SerializeField]
		private TextMeshProUGUI menuLRSidestepSensitivityText;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI menuLRSwingSensitivityText;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11ACC", Offset = "0xC11ACC")]
		[SerializeField]
		private GameObject confirmDialogArea;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI confirmDialogTitle;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE12F")]
		[SerializeField]
		private TextBasedLocalizedString confirmDialogMessageText;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI confirmDialogYesText;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DC9C")]
		[SerializeField]
		private TextMeshProUGUI confirmDialogNoText;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton confirmDialogYesSelectButton;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton confirmDialogNoSelectButton;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11CB4", Offset = "0xC11CB4")]
		public PatternDialog patternDialog;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE136")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11D18", Offset = "0xC11D18")]
		public Camera patternCamera;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11D7C", Offset = "0xC11D7C")]
		public GameObject liveRecordingSymbol;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C744")]
		[SerializeField]
		private LiveRecorder liveRecorder;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider obstacleTypeSlider;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject powerBallSpeedOptions;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MenuSelectButton subBeatModeHelpButton;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE13C")]
		[SerializeField]
		private MenuSelectButton obstacleTypeHelpButton;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11F0C", Offset = "0xC11F0C")]
		[SerializeField]
		private EditorController leftController;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCA4")]
		[SerializeField]
		private EditorController rightController;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC11FC8", Offset = "0xC11FC8")]
		[SerializeField]
		private GameObject sideDock;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Slider beatSlider;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI beatSliderMaxValueText;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE143")]
		[SerializeField]
		private TextMeshProUGUI beatSliderCurrentValueText;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject markPrefab;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCAC")]
		private List<GameObject> marks;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MenuPos currentMenuPosition;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<MenuSelectButton.Action, MenuSelectButton> allButtons;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<MenuToggleArea.Selection, MenuToggleArea> allToggles;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE14A")]
		private Dictionary<MenuToggleArea.Selection, BooleanToggle> booleanToggles;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private EditorController controllerInUse;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCB4")]
		private SongEditor.BeatCountMode currentBeatCountMode;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offset;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float bpm;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BeatPattern patternEntrySelectedForDeletion;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE151")]
		private float currentBeat;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int beatsTotal;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCBC")]
		private float timeSinceLastMark;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool mark;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool paletteIsGrabbed;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool paletteleftGrabbed;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE158")]
		private bool paletteRightGrabbed;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 currentPalettePosition;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCC4")]
		private Camera mainCamera;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 pos;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool liveRecorderIsActive;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongEditor.LiveRecorderSubbeatMode liveRecorderSubbeatMode;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE15F")]
		private MenuSoundManager menuSoundManager;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CanvasGroup[] canvasGroups;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCCC")]
		private bool canvasesAreEnabled;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float defaultSwingSensitivity;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float defaultSidestepSensitivity;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float defaultSquatSensitivity;

		[Token(Token = "0x14000085")]
		public event OnButtonDown onButtonDown
		{
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x16FB2A0", Offset = "0x16FB2A0", VA = "0x16FB2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2A9D0", Offset = "0xC2A9D0")]
			add
			{
			}
			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x16FB3EC", Offset = "0x16FB3EC", VA = "0x16FB3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AA0C", Offset = "0xC2AA0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event OnBooleanChanged onBooleanChanged
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x16FB538", Offset = "0x16FB538", VA = "0x16FB538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AA48", Offset = "0xC2AA48")]
			add
			{
			}
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x16FB684", Offset = "0x16FB684", VA = "0x16FB684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AA84", Offset = "0xC2AA84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event OnBeatStepChanged onBeatStepChanged
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x16FB7D0", Offset = "0x16FB7D0", VA = "0x16FB7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AAC0", Offset = "0xC2AAC0")]
			add
			{
			}
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x16FB91C", Offset = "0x16FB91C", VA = "0x16FB91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AAFC", Offset = "0xC2AAFC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event OnBPMOrOffsetChanged onBPMOrOffsetChanged
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x16FBA68", Offset = "0x16FBA68", VA = "0x16FBA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AB38", Offset = "0xC2AB38")]
			add
			{
			}
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x16FBBB4", Offset = "0x16FBBB4", VA = "0x16FBBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AB74", Offset = "0xC2AB74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event OnPlayPauseChanged onPlayPauseChanged
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x16FBD00", Offset = "0x16FBD00", VA = "0x16FBD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2ABB0", Offset = "0xC2ABB0")]
			add
			{
			}
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x16FBE4C", Offset = "0x16FBE4C", VA = "0x16FBE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2ABEC", Offset = "0xC2ABEC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event OnSliderValueChanged onSliderValueChanged
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x16FBF98", Offset = "0x16FBF98", VA = "0x16FBF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AC28", Offset = "0xC2AC28")]
			add
			{
			}
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x16FC0E4", Offset = "0x16FC0E4", VA = "0x16FC0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AC64", Offset = "0xC2AC64")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event OnPalettePositionChanged onPalettePositionChanged
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x16FC230", Offset = "0x16FC230", VA = "0x16FC230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2ACA0", Offset = "0xC2ACA0")]
			add
			{
			}
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x16FC37C", Offset = "0x16FC37C", VA = "0x16FC37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2ACDC", Offset = "0xC2ACDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event OnLiveRecorderToggled onLiveRecorderToggled
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x16FC4C8", Offset = "0x16FC4C8", VA = "0x16FC4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AD18", Offset = "0xC2AD18")]
			add
			{
			}
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x16FC614", Offset = "0x16FC614", VA = "0x16FC614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AD54", Offset = "0xC2AD54")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event OnLiveRecorderSubbeatsChanged onLiveRecorderSubbeatsChanged
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x16FC760", Offset = "0x16FC760", VA = "0x16FC760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AD90", Offset = "0xC2AD90")]
			add
			{
			}
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x16FC8AC", Offset = "0x16FC8AC", VA = "0x16FC8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2ADCC", Offset = "0xC2ADCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x16FC9F8", Offset = "0x16FC9F8", VA = "0x16FC9F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x16FCC6C", Offset = "0x16FCC6C", VA = "0x16FCC6C")]
		public void Setup(float bpm, float offset, Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x1701FDC", Offset = "0x1701FDC", VA = "0x1701FDC")]
		public void Update()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x170341C", Offset = "0x170341C", VA = "0x170341C")]
		private void ButtonClicked(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x170605C", Offset = "0x170605C", VA = "0x170605C")]
		private void SelectButtonHovered(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x17060D8", Offset = "0x17060D8", VA = "0x17060D8")]
		private void ToggleButtonHovered(MenuToggleButton button)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x170610C", Offset = "0x170610C", VA = "0x170610C")]
		internal void HidePatternDialog()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x170619C", Offset = "0x170619C", VA = "0x170619C")]
		internal void DeletePatternButtonClicked(BeatPattern pattern)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x1706614", Offset = "0x1706614", VA = "0x1706614")]
		internal string GetSelectedPatternName()
		{
			return null;
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x1706664", Offset = "0x1706664", VA = "0x1706664")]
		internal void OpenPatternDialog(MenuSelectButton.Action returningAction, PatternDialog.Type type)
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x1706744", Offset = "0x1706744", VA = "0x1706744")]
		private void ToggleAreaSelection(MenuToggleArea.Selection selection, int value)
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x1707820", Offset = "0x1707820", VA = "0x1707820")]
		public void SetButtonInteractable(MenuSelectButton.Action button, bool interactable)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x170627C", Offset = "0x170627C", VA = "0x170627C")]
		internal void AskQuestion(string entryName, string value, MenuSelectButton.Action actionToUse)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x1707904", Offset = "0x1707904", VA = "0x1707904")]
		private void ShowMessage(string header, string entryName, string value)
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x1707BC0", Offset = "0x1707BC0", VA = "0x1707BC0")]
		internal void ShowErrorMessage(string entryName, string value)
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x1707C78", Offset = "0x1707C78", VA = "0x1707C78")]
		internal void ShowInfoMessage(string entryName, string value)
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x1707D30", Offset = "0x1707D30", VA = "0x1707D30")]
		public void UpdateBeatSlider(float value)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x1707DE8", Offset = "0x1707DE8", VA = "0x1707DE8")]
		public void SetBeatsTotal(int beatsTotal)
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x1703100", Offset = "0x1703100", VA = "0x1703100")]
		public void SliderValueManuallyChanged(float beat)
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x170819C", Offset = "0x170819C", VA = "0x170819C")]
		private void InfoButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x1708258", Offset = "0x1708258", VA = "0x1708258")]
		private void SubBeatModeHelpButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x17082F8", Offset = "0x17082F8", VA = "0x17082F8")]
		private void ObstacleTypeHelpButton_onClick(MenuSelectButton button)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x1704C78", Offset = "0x1704C78", VA = "0x1704C78")]
		private void SetMark()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x1704FE4", Offset = "0x1704FE4", VA = "0x1704FE4")]
		private void ClearMarks()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x16FFB94", Offset = "0x16FFB94", VA = "0x16FFB94")]
		public void ChangeMenuTabTo(int value)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x1705398", Offset = "0x1705398", VA = "0x1705398")]
		private void GrabPalette(EditorController controllerInUse)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x1708398", Offset = "0x1708398", VA = "0x1708398")]
		public void TryReleasingPalette(EditorController controllerInUse)
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x1708B90", Offset = "0x1708B90", VA = "0x1708B90")]
		public void SetInitialPalettePosition(Vector3 palettePosition, Vector3 paletteEulerAngles)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x1701DE0", Offset = "0x1701DE0", VA = "0x1701DE0")]
		private void SetSideDockPosition()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x16FF014", Offset = "0x16FF014", VA = "0x16FF014")]
		private void ChangeMenuPositionTo(MenuPos menuPos)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x1708C94", Offset = "0x1708C94", VA = "0x1708C94")]
		private void SetSideDockPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x17046A4", Offset = "0x17046A4", VA = "0x17046A4")]
		private void ChangeBeatStepTo(SongEditor.BeatCountMode beatCountMode)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x16FFF04", Offset = "0x16FFF04", VA = "0x16FFF04")]
		private void ChangeBeatUnits(int value)
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x170005C", Offset = "0x170005C", VA = "0x170005C")]
		internal void ChangeOffsetNoTo(float newOffset, bool triggerEvent)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x170036C", Offset = "0x170036C", VA = "0x170036C")]
		internal void ChangeBPMTo(float newBPM, bool triggerEvent)
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x170938C", Offset = "0x170938C", VA = "0x170938C")]
		internal void SetCopyBeatFromBeatText(string beatNo)
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x17093E4", Offset = "0x17093E4", VA = "0x17093E4")]
		internal void SetCopyBeatToBeatText(string beatNo)
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x170465C", Offset = "0x170465C", VA = "0x170465C")]
		internal void PlayClickSound()
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x1706090", Offset = "0x1706090", VA = "0x1706090")]
		internal void PlayHoverSound()
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x16FEB18", Offset = "0x16FEB18", VA = "0x16FEB18")]
		private void SetObjectSelection(Song.Difficulty difficulty)
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x1700F24", Offset = "0x1700F24", VA = "0x1700F24")]
		public void ChangeLRObstacleTypeTo(float newObstacleType)
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x1700B48", Offset = "0x1700B48", VA = "0x1700B48")]
		internal void ChangeLRSquatSensitivityTo(float newSquatSensitivity)
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x17012B4", Offset = "0x17012B4", VA = "0x17012B4")]
		internal void ChangeLRSidestepSensitivityTo(float newSidestepSensitivity)
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x1701694", Offset = "0x1701694", VA = "0x1701694")]
		internal void ChangeLRSwingSensitivityTo(float newSwingSensitivity)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x1705CC0", Offset = "0x1705CC0", VA = "0x1705CC0")]
		private void ResetSensitivies()
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x1705900", Offset = "0x1705900", VA = "0x1705900")]
		internal void ChangeLRMinHitSpeedTo(float newHitSpeed)
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x170067C", Offset = "0x170067C", VA = "0x170067C")]
		internal void ChangeLRPowerHitSpeedTo(float newHitSpeed)
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x1707140", Offset = "0x1707140", VA = "0x1707140")]
		private void ChangeLRBallSelection(int value)
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x1701A74", Offset = "0x1701A74", VA = "0x1701A74")]
		private void ChangeLRSubbeatModeTo(SongEditor.LiveRecorderSubbeatMode subbeatMode)
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x1709734", Offset = "0x1709734", VA = "0x1709734")]
		public void DisableCanvases()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x1709754", Offset = "0x1709754", VA = "0x1709754")]
		public void EnableCanvases()
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x1709774", Offset = "0x1709774", VA = "0x1709774")]
		public EditorPalette()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class EditorSlider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Menu menu;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCEC")]
		private FrameworkManager fm;

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x170AA80", Offset = "0x170AA80", VA = "0x170AA80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x170AA94", Offset = "0x170AA94", VA = "0x170AA94", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x170AAAC", Offset = "0x170AAAC", VA = "0x170AAAC", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x170AAC4", Offset = "0x170AAC4", VA = "0x170AAC4")]
		public EditorSlider()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class LiveRecorder : MonoBehaviour
	{
		[Token(Token = "0x2000804")]
		public enum TunnelType
		{
			[Token(Token = "0x400322E")]
			NONE,
			[Token(Token = "0x400322F")]
			CENTERED_TUNNEL,
			[Token(Token = "0x4003230")]
			LEFT_TUNNEL,
			[Token(Token = "0x4003231")]
			RIGHT_TUNNEL,
			[Token(Token = "0x4003232")]
			LEFT_UPSIDEDOWN_L,
			[Token(Token = "0x4003233")]
			RIGHT_UPSIDEDOWN_L
		}

		[Token(Token = "0x2000805")]
		public enum VerticalWallType
		{
			[Token(Token = "0x4003235")]
			NARROW,
			[Token(Token = "0x4003236")]
			WIDE,
			[Token(Token = "0x4003237")]
			SINGLE_BALL_OBSTACLE
		}

		[Token(Token = "0x2000806")]
		public enum SidestepState
		{
			[Token(Token = "0x4003239")]
			IDLE,
			[Token(Token = "0x400323A")]
			LEFT_INITIATED,
			[Token(Token = "0x400323B")]
			RIGHT_INITIATED
		}

		[Token(Token = "0x2000807")]
		public delegate void OnFirstPlaneHit(Vector3 contactPoint, bool isLeftHit, int nextValidBeat, float nextValidSubbeat, bool isPowerHit);

		[Token(Token = "0x2000808")]
		public delegate void OnHorizontalWallSpawn(Vector3 position, int nextValidBeat, float nextValidSubbeat, TunnelType tunnelType);

		[Token(Token = "0x2000809")]
		public delegate void OnBallObstacleSpawn(Vector3 position, int nextValidBeat, float nextValidSubbeat);

		[Token(Token = "0x200080A")]
		public delegate void OnVerticalWallSpawn(Vector3 position, int nextValidBeat, float nextValidSubbeat, VerticalWallType verticalWallType);

		[Token(Token = "0x200080B")]
		public delegate void OnStreamSpawn(Vector3 position, bool isLeftHand, int nextValidBeat, float nextValidSubbeat, bool isEndElement);

		[Token(Token = "0x200080C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2B20", Offset = "0xBE2B20")]
		private sealed class <KillParticleEffect>d__186 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400323C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400323D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400323E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE23C")]
			public float timeToKill;

			[Token(Token = "0x400323F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public ParticleSystem particleSystem;

			[Token(Token = "0x170005D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003261")]
				[Address(RVA = "0x18E32CC", Offset = "0x18E32CC", VA = "0x18E32CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003263")]
				[Address(RVA = "0x18E339C", Offset = "0x18E339C", VA = "0x18E339C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600325E")]
			[Address(RVA = "0x18DAD98", Offset = "0x18DAD98", VA = "0x18DAD98")]
			[DebuggerHidden]
			public <KillParticleEffect>d__186(int <>1__state)
			{
			}

			[Token(Token = "0x600325F")]
			[Address(RVA = "0x18E30A4", Offset = "0x18E30A4", VA = "0x18E30A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003260")]
			[Address(RVA = "0x18E30B8", Offset = "0x18E30B8", VA = "0x18E30B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003262")]
			[Address(RVA = "0x18E32FC", Offset = "0x18E32FC", VA = "0x18E32FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC12390", Offset = "0xC12390")]
		[SerializeField]
		private float refractoryPeriod;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool squattingIsEnabled;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool sidesteppingIsEnabled;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE182")]
		[SerializeField]
		private float swingDistanceTreshhold;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC124C4", Offset = "0xC124C4")]
		[SerializeField]
		private LiveRecorderHand leftHand;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C74C")]
		[SerializeField]
		private LiveRecorderHand rightHand;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC12580", Offset = "0xC12580")]
		[SerializeField]
		private AudioSource sfxAudioSource;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC12600", Offset = "0xC12600")]
		[SerializeField]
		private ParticleSystem hitEffect;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC12680", Offset = "0xC12680")]
		[SerializeField]
		private Transform hitCollider;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE188")]
		[SerializeField]
		private PaletteVisibilityChecker paletteVisibilityChecker;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public float minHitVelocity;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCF4")]
		[HideInInspector]
		public float hitVelocityForPowerBall;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool ballSelectionIsRandom;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject previouslyPlacedLeftHittable;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject previouslyPlacedRightHittable;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE18F")]
		private float timeSincePreviousLeftHit;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float timeSincePreviousRightHit;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DCFC")]
		private float beatCounterProgressPreviousLeftHit;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float beatCounterProgressPreviousRightHit;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<float> leftHits;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<float> rightHits;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE196")]
		private Vector3 leftHandLastPos;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 rightHandLastPos;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD04")]
		private Vector3 leftHitEntryPoint;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 leftHitExitPoint;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 leftHitInversionPoint;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 leftSwingEndPoint;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE19D")]
		private Vector3 leftHitEntryDirection;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool leftHitInProgress;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD0C")]
		private Vector3 rightHitEntryPoint;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 rightHitExitPoint;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 rightHitInversionPoint;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 rightSwingEndPoint;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1A4")]
		private Vector3 rightHitEntryDirection;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool rightHitInProgress;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD14")]
		private Vector3 headPositionWhileLeftHitEntry;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 headPositionWhileLeftHitExit;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 headPositionWhileLeftHitInversionPoint;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 headPositionWhileLeftSwingEndPoint;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1AB")]
		private Vector3 headPositionWhileRightHitEntry;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 headPositionWhileRightHitExit;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD1C")]
		private Vector3 headPositionWhileRightHitInversionPoint;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 headPositionWhileRightSwingEndPoint;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeSincePreviousLeftHitExit;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeSincePreviousRightHitExit;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1B2")]
		private bool previousLeftHitHasBeenSwing;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool previousRighttHitHasBeenSwing;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD24")]
		[HideInInspector]
		public float swingSensitivity;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector3> leftSwingPoints;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector3> rightSwingPoints;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float swingCurvinessTreshhold;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1B9")]
		private float MAX_SWING_LENGTH;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool leftStreamInProgress;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD2C")]
		private bool rightStreamInProgress;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastStartBeatOfCurrentLeftStream;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastStartBeatOfCurrentRightStream;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastVerifiedBeatOfCurrentLeftStream;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1C0")]
		private float lastVerifiedBeatOfCurrentRightStream;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public MovableObject previouslyPlacedLeftStreamElement;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD34")]
		[HideInInspector]
		public MovableObject previouslyPlacedLeftStreamStartElement;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject previouslyPlacedLeftStreamEndElement;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject previouslyPlacedRightStreamElement;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject previouslyPlacedRightStreamStartElement;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1C7")]
		[HideInInspector]
		public MovableObject previouslyPlacedRightStreamEndElement;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float leftHapticPulseTimer;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD3C")]
		private float rightHapticPulseTimer;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeSinceLastTick;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool tick;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FakeHead fakeHead;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1CE")]
		private Vector3 headsetLastPos;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Controller leftController;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C754")]
		private Controller rightController;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool enablePlayerHeightScaling;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playerHeightScaling;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 calculatedScaling;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1D4")]
		private float LEFT_TUNNEL_X_SHIFT;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float RIGHT_TUNNEL_X_SHIFT;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD44")]
		private bool enablePlayspaceScaling;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playspaceScaling;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float HITTABLE_RADIUS;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float HITTABLE_MESH_SCALING;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1DB")]
		private float BALLOBSTACLE_RADIUS;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float HAND_RADIUS;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD4C")]
		private float BODY_HALFWIDTH;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float HEAD_RADIUS;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float EDITOR_HALFWIDTH;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float NARROW_WALL_HALFWIDTH;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1E2")]
		private float WIDE_WALL_HALFWIDTH;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float playerMovementSamplingInterval;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD54")]
		private int playerMovementMeasurements;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MovableObject currentWallInProgress;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool convertToBallObstacles;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public List<MovableObject> lastBallObstacles;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1E9")]
		private List<float> ballObstacles;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public float sidestepSensitivity;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD5C")]
		private float slidingAveragePlayerXPosition;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playerXPositionSum;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float centerSidestepValue;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float leftSidestepTreshhold;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1F0")]
		private float rightSidestepTreshhold;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float sidestepTreshholdFactor;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD64")]
		private bool leftSidestepInitiated;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool rightSidestepInitiated;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SidestepState sidestepState;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isOnlyLeaningLeft;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1F7")]
		private bool isOnlyLeaningRight;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool verticalObstacleInProgress;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD6C")]
		private float lastStartBeatOfCurrentVerticalObstacle;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastVerifiedBeatOfCurrentVerticalObstacle;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float outerEdgeOfCurrentVerticalObstacle;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float xPositionOfCurrentVerticalObstacle;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1FE")]
		private VerticalWallType verticalWallType;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public float squatSensitivity;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD74")]
		[HideInInspector]
		public float wallToBallConversionRate;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float slidingAveragePlayerHeight;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float playerHeightSum;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float highSquatTreshhold;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE205")]
		private float lowSquatTreshhold;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float squatTreshholdFactor;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD7C")]
		private bool belowLowSquatTreshhold;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool aboveHighSquatTreshhold;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool squatInitiated;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lowestPointOfCurrentSquat;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE20C")]
		private bool horizontalObstacleInProgress;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float lastStartBeatOfCurrentHorizontalObstacle;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD84")]
		private float lastVerifiedBeatOfCurrentHorizontalObstacle;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float heightOfCurrentHorizontalObstacle;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TunnelType tunnelType;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool normalBall;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE213")]
		[HideInInspector]
		public bool powerBall;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public bool swing;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DD8C")]
		[HideInInspector]
		public bool ballObstacle;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool horizontalWall;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool leftTunnel;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool centeredTunnel;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE21A")]
		[HideInInspector]
		public bool rightTunnel;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public bool leftUpsidedownL;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C75C")]
		[HideInInspector]
		public bool rightUpsidedownL;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool narrowVerticalWall;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool wideVerticalWall;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool initiateReset;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE220")]
		private FrameworkManager fm;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SongEditor songEditor;

		[Token(Token = "0x1400008E")]
		public event OnFirstPlaneHit onFirstPlaneHit
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x18CCC60", Offset = "0x18CCC60", VA = "0x18CCC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AE08", Offset = "0xC2AE08")]
			add
			{
			}
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x18CCDAC", Offset = "0x18CCDAC", VA = "0x18CCDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AE44", Offset = "0xC2AE44")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event OnHorizontalWallSpawn onHorizontalWallSpawn
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x18CCEF8", Offset = "0x18CCEF8", VA = "0x18CCEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AE80", Offset = "0xC2AE80")]
			add
			{
			}
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x18CD044", Offset = "0x18CD044", VA = "0x18CD044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AEBC", Offset = "0xC2AEBC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event OnBallObstacleSpawn onBallObstacleSpawn
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x18CD190", Offset = "0x18CD190", VA = "0x18CD190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AEF8", Offset = "0xC2AEF8")]
			add
			{
			}
			[Token(Token = "0x6002903")]
			[Address(RVA = "0x18CD2DC", Offset = "0x18CD2DC", VA = "0x18CD2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AF34", Offset = "0xC2AF34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event OnVerticalWallSpawn onVerticalWallSpawn
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x18CD428", Offset = "0x18CD428", VA = "0x18CD428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AF70", Offset = "0xC2AF70")]
			add
			{
			}
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x18CD574", Offset = "0x18CD574", VA = "0x18CD574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AFAC", Offset = "0xC2AFAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event OnStreamSpawn onStreamSpawn
		{
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x18CD6C0", Offset = "0x18CD6C0", VA = "0x18CD6C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2AFE8", Offset = "0xC2AFE8")]
			add
			{
			}
			[Token(Token = "0x6002907")]
			[Address(RVA = "0x18CD80C", Offset = "0x18CD80C", VA = "0x18CD80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B024", Offset = "0xC2B024")]
			remove
			{
			}
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x18CD958", Offset = "0x18CD958", VA = "0x18CD958")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x18CDF88", Offset = "0x18CDF88", VA = "0x18CDF88")]
		private void Start()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x18CE094", Offset = "0x18CE094", VA = "0x18CE094")]
		private void Update()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x18D2008", Offset = "0x18D2008", VA = "0x18D2008")]
		public void SetScaling(Vector2 calculatedScaling, bool enablePlayerHeightScaling, bool enablePlayspaceScaling)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x18D23D4", Offset = "0x18D23D4", VA = "0x18D23D4")]
		private void LeftHand_OnHitEnter(Vector3 contactPoint, Vector3 hitVelocity)
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x18D6778", Offset = "0x18D6778", VA = "0x18D6778")]
		private void LeftHand_OnHitExit(Vector3 contactPoint)
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x18D8898", Offset = "0x18D8898", VA = "0x18D8898")]
		private void RightHand_OnHitEnter(Vector3 contactPoint, Vector3 hitVelocity)
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x18D92A4", Offset = "0x18D92A4", VA = "0x18D92A4")]
		private void RightHand_OnHitExit(Vector3 contactPoint)
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x18D510C", Offset = "0x18D510C", VA = "0x18D510C")]
		private Vector3 CheckForOverlapAndShiftThisHit(Vector3 contactPoint, MovableObject previouslyPlacedOtherHandHittable)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x18CE920", Offset = "0x18CE920", VA = "0x18CE920")]
		private void CheckForHitInversion(bool isLeftHit)
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x18D9420", Offset = "0x18D9420", VA = "0x18D9420")]
		public void SetSwingSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x18D68E4", Offset = "0x18D68E4", VA = "0x18D68E4")]
		private bool CheckForSwing(bool isleftHit, bool isFromHitInversion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x18D9E08", Offset = "0x18D9E08", VA = "0x18D9E08")]
		private bool CheckIfSwingCrossesBody(Vector2 hitEntryPoint, Vector2 swingEndPoint, Vector2 headPositionWhileHitEntry)
		{
			return default(bool);
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0x18D9580", Offset = "0x18D9580", VA = "0x18D9580")]
		private bool CheckIfSwingAlignsWithHitDirection(Vector3 hitEntryDirection, Vector3 hitEntryPoint, Vector3 swingEndPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x18D98C0", Offset = "0x18D98C0", VA = "0x18D98C0")]
		private bool CheckIfSwingIsCurvy(List<Vector3> swingPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x18DA07C", Offset = "0x18DA07C", VA = "0x18DA07C")]
		private float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
		{
			return default(float);
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x18DA290", Offset = "0x18DA290", VA = "0x18DA290")]
		private Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x18D7AC4", Offset = "0x18D7AC4", VA = "0x18D7AC4")]
		private void SpawnSwing(bool isleftHit)
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x18DA5AC", Offset = "0x18DA5AC", VA = "0x18DA5AC")]
		private Vector3 CorrectSwingEndPoint(Vector3 startPoint, Vector3 endPoint, out Vector3 unscaledStartPoint, out Vector3 unscaledEndPoint, out float unscaled2DDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x18D6024", Offset = "0x18D6024", VA = "0x18D6024")]
		private void PlayHitEffect(Vector3 position)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x18DACA8", Offset = "0x18DACA8", VA = "0x18DACA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B060", Offset = "0xC2B060")]
		internal IEnumerator KillParticleEffect(float timeToKill, ParticleSystem particleSystem)
		{
			return null;
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x18D2DDC", Offset = "0x18D2DDC", VA = "0x18D2DDC")]
		private float GetNextValidFullBeatHit(List<float> thisHitRegister, float timeSinceLastSameHandHit, float beatCounterProgressPreviousSameHandHit, MovableObject previouslyPlacedSameHandHittable, Vector3 contactPoint, bool previousSameHandHitHasBeenSwing)
		{
			return default(float);
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x18D3378", Offset = "0x18D3378", VA = "0x18D3378")]
		private float GetNextValidHalfBeatHit(List<float> thisHitRegister, List<float> otherHitRegister, float timeSinceLastOtherHandHit, float beatCounterProgressPreviousSameHandHit, MovableObject previouslyPlacedSameHandHittable, Vector3 contactPoint, bool previousSameHandHitHasBeenSwing)
		{
			return default(float);
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x18D40F8", Offset = "0x18D40F8", VA = "0x18D40F8")]
		private float GetNextValidThirdBeatHit(List<float> thisHitRegister, List<float> otherHitRegister, float timeSinceLastOtherHandHit, float beatCounterProgressPreviousSameHandHit, MovableObject previouslyPlacedSameHandHittable, Vector3 contactPoint, bool previousSameHandHitHasBeenSwing)
		{
			return default(float);
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x18DADE0", Offset = "0x18DADE0", VA = "0x18DADE0")]
		private bool CheckIfHitIsValid(float beat, List<float> hitRegister, Vector3 contactPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x18DAEE0", Offset = "0x18DAEE0", VA = "0x18DAEE0")]
		private bool CheckForWallStartingOrEndingOnBeat(float beat)
		{
			return default(bool);
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x18DB284", Offset = "0x18DB284", VA = "0x18DB284")]
		private bool CheckForWallInProgress()
		{
			return default(bool);
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x18DB158", Offset = "0x18DB158", VA = "0x18DB158")]
		private bool CheckForBallObstacleOnBeat(float beat)
		{
			return default(bool);
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x18DB054", Offset = "0x18DB054", VA = "0x18DB054")]
		private bool CheckForStreamEndingOnBeat(float beat)
		{
			return default(bool);
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x18CEFDC", Offset = "0x18CEFDC", VA = "0x18CEFDC")]
		private void CalculateSlidingAveragePlayerHeightAndXPosition()
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x18DB31C", Offset = "0x18DB31C", VA = "0x18DB31C")]
		private bool GetWallToBallConversionValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x18DB3F0", Offset = "0x18DB3F0", VA = "0x18DB3F0")]
		public void SetSquatSensitivity(float sensitivitiy)
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x18CF2C8", Offset = "0x18CF2C8", VA = "0x18CF2C8")]
		private void CalculateNewSquatTreshholds()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x18CF3B0", Offset = "0x18CF3B0", VA = "0x18CF3B0")]
		private void DetectCurrentSquattingState()
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x18CF5A4", Offset = "0x18CF5A4", VA = "0x18CF5A4")]
		private void TryToSpawnHorizontalObstacleAtLowestPoint()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x18CFA14", Offset = "0x18CFA14", VA = "0x18CFA14")]
		private void CheckForHorizontalBallObstacleRepetition()
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x18CFC6C", Offset = "0x18CFC6C", VA = "0x18CFC6C")]
		private void CheckForHorizontalWallExtension()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x18CFEE8", Offset = "0x18CFEE8", VA = "0x18CFEE8")]
		private void DetectFurtherDownSquatting()
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x18DC488", Offset = "0x18DC488", VA = "0x18DC488")]
		private float GetNextValidHorizontalObstacleBeat()
		{
			return default(float);
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x18DC90C", Offset = "0x18DC90C", VA = "0x18DC90C")]
		private void SpawnHorizontalObstacle(float nextValidBeat, float height, TunnelType tunnelType, bool convertToBallObstacles)
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x18DB4E0", Offset = "0x18DB4E0", VA = "0x18DB4E0")]
		private TunnelType CheckIfTunnelIsPossible()
		{
			return default(TunnelType);
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x18D5488", Offset = "0x18D5488", VA = "0x18D5488")]
		private void CorrectHorizontalObstacleOnCollision(Vector3 contactPoint, float nextValidBeat)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x18DD828", Offset = "0x18DD828", VA = "0x18DD828")]
		private bool CheckIfHitIsWithinHorizontalObstacle(Vector3 contactPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x18D0070", Offset = "0x18D0070", VA = "0x18D0070")]
		private void CalculateNewSidestepTreshholds()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x18DE9AC", Offset = "0x18DE9AC", VA = "0x18DE9AC")]
		public void SetSidestepSensitivity(float sensitivitiy)
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x18D015C", Offset = "0x18D015C", VA = "0x18D015C")]
		private void DetectCurrentSidestepState()
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x18DEAA0", Offset = "0x18DEAA0", VA = "0x18DEAA0")]
		private bool DetectWhetherItsJustLeaningSideways()
		{
			return default(bool);
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x18D046C", Offset = "0x18D046C", VA = "0x18D046C")]
		private void TryToSpawnVerticalObstacle(bool isLeftSidestep)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x18D0A3C", Offset = "0x18D0A3C", VA = "0x18D0A3C")]
		private void TryToSpawnSingleBallObstacle(bool isLeftSidestep)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x18DEB98", Offset = "0x18DEB98", VA = "0x18DEB98")]
		private bool CheckVerticalWallType(bool isLeftSidestep)
		{
			return default(bool);
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x18DF3EC", Offset = "0x18DF3EC", VA = "0x18DF3EC")]
		private float GetNextValidVerticalObstacleBeat(bool isLeftSidestep)
		{
			return default(float);
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x18E1120", Offset = "0x18E1120", VA = "0x18E1120")]
		private bool CheckIfHitIsOnTheWrongSideOfVerticalObstacle(Vector3 contactPoint, bool isLeftSidestep)
		{
			return default(bool);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x18D1580", Offset = "0x18D1580", VA = "0x18D1580")]
		private void DetectFurtherSidestepping()
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x18DF80C", Offset = "0x18DF80C", VA = "0x18DF80C")]
		private void SpawnVerticalObstacle(float nextValidBeat, bool convertToBallObstacles)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x18D1040", Offset = "0x18D1040", VA = "0x18D1040")]
		private void CheckForVerticalWallExtension()
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x18D5A48", Offset = "0x18D5A48", VA = "0x18D5A48")]
		private void CorrectVerticalObstacleOnCollision(Vector3 contactPoint, float nextValidBeat)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x18D0DB4", Offset = "0x18D0DB4", VA = "0x18D0DB4")]
		private void CheckForVerticalBallObstacleRepetition()
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x18E16E4", Offset = "0x18E16E4", VA = "0x18E16E4")]
		public void StartStreamPlacement(bool isLeftHand)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x18E1B54", Offset = "0x18E1B54", VA = "0x18E1B54")]
		private float GetNextValidStreamElementBeat()
		{
			return default(float);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x18E1CA8", Offset = "0x18E1CA8", VA = "0x18E1CA8")]
		private void SpawnStreamElement(float nextValidBeat, bool isLeftHand, bool isEndElement)
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x18D1824", Offset = "0x18D1824", VA = "0x18D1824")]
		private void CheckForStreamExtension(bool isLeftHand)
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x18D1AE8", Offset = "0x18D1AE8", VA = "0x18D1AE8")]
		private void DoHapticStreamPulse(bool isLeft)
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x18E2564", Offset = "0x18E2564", VA = "0x18E2564")]
		public void EndStreamPlacement(bool isLeftHand)
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x18E2AD0", Offset = "0x18E2AD0", VA = "0x18E2AD0")]
		private void ResetStreamReference(bool isLeftHand)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x18E2B6C", Offset = "0x18E2B6C", VA = "0x18E2B6C")]
		public void EndAllStreams()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x18E2BFC", Offset = "0x18E2BFC", VA = "0x18E2BFC")]
		public void InitiateReset()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x18D1C94", Offset = "0x18D1C94", VA = "0x18D1C94")]
		public void Reset()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x18E2C2C", Offset = "0x18E2C2C", VA = "0x18E2C2C")]
		public LiveRecorder()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class LiveRecorderHand : MonoBehaviour
	{
		[Token(Token = "0x200080D")]
		public delegate void OnHitPlaneEnter(Vector3 entryPoint, Vector3 hitVelocity);

		[Token(Token = "0x200080E")]
		public delegate void OnHitPlaneExit(Vector3 exitPoint);

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDB4")]
		private EditorController editorController;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Animator controllerAnimator;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool isTouchingMenu;

		[Token(Token = "0x14000093")]
		public event OnHitPlaneEnter onHitPlaneEnter
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x18CDC88", Offset = "0x18CDC88", VA = "0x18CDC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B110", Offset = "0xC2B110")]
			add
			{
			}
			[Token(Token = "0x600294D")]
			[Address(RVA = "0x18E3BF4", Offset = "0x18E3BF4", VA = "0x18E3BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B14C", Offset = "0xC2B14C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event OnHitPlaneExit onHitPlaneExit
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0x18CDE3C", Offset = "0x18CDE3C", VA = "0x18CDE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B188", Offset = "0xC2B188")]
			add
			{
			}
			[Token(Token = "0x600294F")]
			[Address(RVA = "0x18E3D40", Offset = "0x18E3D40", VA = "0x18E3D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B1C4", Offset = "0xC2B1C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x18E3E8C", Offset = "0x18E3E8C", VA = "0x18E3E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x18E3F64", Offset = "0x18E3F64", VA = "0x18E3F64")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x18E46F8", Offset = "0x18E46F8", VA = "0x18E46F8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x18E4D18", Offset = "0x18E4D18", VA = "0x18E4D18")]
		public LiveRecorderHand()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class MovableObject : MonoBehaviour
	{
		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private BeatAction beatAction;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDBC")]
		private ObjectProxy proxy;

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x1807FE8", Offset = "0x1807FE8", VA = "0x1807FE8")]
		public void SetBeatAction(BeatAction beatAction)
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x1808020", Offset = "0x1808020", VA = "0x1808020")]
		public BeatAction GetBeatAction()
		{
			return null;
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x1808050", Offset = "0x1808050", VA = "0x1808050")]
		public void SetProxy(ObjectProxy proxy)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x1808088", Offset = "0x1808088", VA = "0x1808088")]
		public ObjectProxy GetProxy()
		{
			return null;
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x18080B8", Offset = "0x18080B8", VA = "0x18080B8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1808250", Offset = "0x1808250", VA = "0x1808250")]
		public MovableObject()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class ObjectProxy : MonoBehaviour
	{
		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject otherObject;

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x18086CC", Offset = "0x18086CC", VA = "0x18086CC")]
		public void SetOther(GameObject other)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1808704", Offset = "0x1808704", VA = "0x1808704")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x18088EC", Offset = "0x18088EC", VA = "0x18088EC")]
		public ObjectProxy()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class PaletteVisibilityChecker : MonoBehaviour
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isVisible;

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1810000", Offset = "0x1810000", VA = "0x1810000")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1810030", Offset = "0x1810030", VA = "0x1810030")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1810060", Offset = "0x1810060", VA = "0x1810060")]
		public PaletteVisibilityChecker()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class PatternDialog : MonoBehaviour
	{
		[Token(Token = "0x200080F")]
		public enum Type
		{
			[Token(Token = "0x4003241")]
			SAVE,
			[Token(Token = "0x4003242")]
			LOAD
		}

		[Token(Token = "0x2000810")]
		public enum Selection
		{
			[Token(Token = "0x4003244")]
			NONE,
			[Token(Token = "0x4003245")]
			EXISTING,
			[Token(Token = "0x4003246")]
			NEW
		}

		[Token(Token = "0x2000811")]
		public delegate void OnPatternSelected();

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC12FE8", Offset = "0xC12FE8")]
		[SerializeField]
		private bool enablePatternVisualizer;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE24A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13068", Offset = "0xC13068")]
		[SerializeField]
		private GameObject patternContent;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TextMeshProUGUI noPatternsYetText;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDC4")]
		[SerializeField]
		private GameObject patternLinePrefab;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject patternListOuterEnclosure;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject patternListInnerEnclosure;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC131D8", Offset = "0xC131D8")]
		[SerializeField]
		private GameObject patternNewArea;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE251")]
		[SerializeField]
		private TextMeshProUGUI newNameEntryText;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject newNameEntryHighlight;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC132D0", Offset = "0xC132D0")]
		public GameObject patternImage;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13334", Offset = "0xC13334")]
		[SerializeField]
		private MenuSelectButton saveLoadButton;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI saveLoadButtonText;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PatternManager patternManager;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE258")]
		private List<BeatPattern> patternsOnScreen;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Type currentType;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDD4")]
		private Selection currentSelection;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BeatPattern selectedPattern;

		[Token(Token = "0x14000095")]
		public event OnPatternSelected onPatternSelected
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0x1815840", Offset = "0x1815840", VA = "0x1815840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B200", Offset = "0xC2B200")]
			add
			{
			}
			[Token(Token = "0x6002961")]
			[Address(RVA = "0x181598C", Offset = "0x181598C", VA = "0x181598C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B23C", Offset = "0xC2B23C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x1815AD8", Offset = "0x1815AD8", VA = "0x1815AD8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x1815C0C", Offset = "0x1815C0C", VA = "0x1815C0C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1815C68", Offset = "0x1815C68", VA = "0x1815C68")]
		public void Show(Type type, MenuSelectButton.Action returningAction)
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1816B0C", Offset = "0x1816B0C", VA = "0x1816B0C")]
		internal void PatternButtonClicked(int idInList)
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x18173C4", Offset = "0x18173C4", VA = "0x18173C4")]
		internal void DeleteButtonClicked(int idInList)
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x18174A8", Offset = "0x18174A8", VA = "0x18174A8")]
		internal void KeyboardButtonSelected(MenuSelectButton button)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x1817870", Offset = "0x1817870", VA = "0x1817870")]
		internal void DeletePatternSelected(BeatPattern pattern)
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1816150", Offset = "0x1816150", VA = "0x1816150")]
		private void ResetInputLine()
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1816D38", Offset = "0x1816D38", VA = "0x1816D38")]
		private void HandleUIPatternSelection(int idToHighlight)
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x1816228", Offset = "0x1816228", VA = "0x1816228")]
		private void UpdateSaveLoadButton()
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x18163CC", Offset = "0x18163CC", VA = "0x18163CC")]
		private void TransferPatternsFromManagerToUI()
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x1815EF0", Offset = "0x1815EF0", VA = "0x1815EF0")]
		private void AdaptEnclosures(int w, int h)
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x1817A4C", Offset = "0x1817A4C", VA = "0x1817A4C")]
		internal string GetSelectedPatternName()
		{
			return null;
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x1817BC0", Offset = "0x1817BC0", VA = "0x1817BC0")]
		public PatternDialog()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class PatternEntry : MonoBehaviour
	{
		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE266")]
		public TextMeshProUGUI patternName;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameObject highlighting;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C524")]
		public int idInList;

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x1817D00", Offset = "0x1817D00", VA = "0x1817D00")]
		public void DeleteButtonClicked()
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x1817DD4", Offset = "0x1817DD4", VA = "0x1817DD4")]
		public void PatternButtonClicked()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x1817E80", Offset = "0x1817E80", VA = "0x1817E80")]
		public PatternEntry()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class SongEditor : MonoBehaviour
	{
		[Token(Token = "0x2000812")]
		private enum TrackpadButton
		{
			[Token(Token = "0x4003248")]
			NONE,
			[Token(Token = "0x4003249")]
			UP,
			[Token(Token = "0x400324A")]
			RIGHT,
			[Token(Token = "0x400324B")]
			DOWN,
			[Token(Token = "0x400324C")]
			LEFT
		}

		[Token(Token = "0x2000813")]
		public enum BeatCountMode
		{
			[Token(Token = "0x400324E")]
			FULL = 1,
			[Token(Token = "0x400324F")]
			THIRDS = 3,
			[Token(Token = "0x4003250")]
			QUARTER = 4,
			[Token(Token = "0x4003251")]
			SIXTEENTHS = 16
		}

		[Token(Token = "0x2000814")]
		public enum SongState
		{
			[Token(Token = "0x4003253")]
			PAUSED_ON_START,
			[Token(Token = "0x4003254")]
			PLAYING,
			[Token(Token = "0x4003255")]
			PAUSED_INBETWEEN,
			[Token(Token = "0x4003256")]
			PAUSED_ON_END
		}

		[Token(Token = "0x2000815")]
		public enum LiveRecorderSubbeatMode
		{
			[Token(Token = "0x4003258")]
			FULL = 1,
			[Token(Token = "0x4003259")]
			HALF,
			[Token(Token = "0x400325A")]
			THIRDS
		}

		[Token(Token = "0x2000816")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2B5C", Offset = "0xBE2B5C")]
		private sealed class <StartEditor>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400325B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE2F5")]
			private int <>1__state;

			[Token(Token = "0x400325C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x400325D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE74")]
			public SongEditor <>4__this;

			[Token(Token = "0x400325E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameConfiguration gameConfig;

			[Token(Token = "0x400325F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <wasBPMDetected>5__2;

			[Token(Token = "0x4003260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <isBeatDetectionError>5__3;

			[Token(Token = "0x4003261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE2FC")]
			private SongBPMAndOffsetDetector <bpmDetector>5__4;

			[Token(Token = "0x170005D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003273")]
				[Address(RVA = "0x174DE64", Offset = "0x174DE64", VA = "0x174DE64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003275")]
				[Address(RVA = "0x174DF34", Offset = "0x174DF34", VA = "0x174DF34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003270")]
			[Address(RVA = "0x172885C", Offset = "0x172885C", VA = "0x172885C")]
			[DebuggerHidden]
			public <StartEditor>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x6003271")]
			[Address(RVA = "0x174B5EC", Offset = "0x174B5EC", VA = "0x174B5EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003272")]
			[Address(RVA = "0x174B600", Offset = "0x174B600", VA = "0x174B600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003274")]
			[Address(RVA = "0x174DE94", Offset = "0x174DE94", VA = "0x174DE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000817")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2B98", Offset = "0xBE2B98")]
		private sealed class <DetectBPMAndOffset>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4003263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE7C")]
			private object <>2__current;

			[Token(Token = "0x4003264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SongEditor <>4__this;

			[Token(Token = "0x4003265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SongBPMAndOffsetDetector <bpmDetector>5__2;

			[Token(Token = "0x170005DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600327A")]
				[Address(RVA = "0x174997C", Offset = "0x174997C", VA = "0x174997C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600327C")]
				[Address(RVA = "0x1749A4C", Offset = "0x1749A4C", VA = "0x1749A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003276")]
			[Address(RVA = "0x1729268", Offset = "0x1729268", VA = "0x1729268")]
			[DebuggerHidden]
			public <DetectBPMAndOffset>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6003277")]
			[Address(RVA = "0x1748F3C", Offset = "0x1748F3C", VA = "0x1748F3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003278")]
			[Address(RVA = "0x1749130", Offset = "0x1749130", VA = "0x1749130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003279")]
			[Address(RVA = "0x17490D4", Offset = "0x17490D4", VA = "0x17490D4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600327B")]
			[Address(RVA = "0x17499AC", Offset = "0x17499AC", VA = "0x17499AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2BD4", Offset = "0xBE2BD4")]
		private sealed class <>c__DisplayClass117_0
		{
			[Token(Token = "0x4003266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StreamAction startAction;

			[Token(Token = "0x4003267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE303")]
			public StreamAction next;

			[Token(Token = "0x600327D")]
			[Address(RVA = "0x173291C", Offset = "0x173291C", VA = "0x173291C")]
			public <>c__DisplayClass117_0()
			{
			}

			[Token(Token = "0x600327E")]
			[Address(RVA = "0x1748A3C", Offset = "0x1748A3C", VA = "0x1748A3C")]
			internal bool <GetAllStreamElements>b__0(MovableObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x600327F")]
			[Address(RVA = "0x1748AD0", Offset = "0x1748AD0", VA = "0x1748AD0")]
			internal bool <GetAllStreamElements>b__1(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000819")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C10", Offset = "0xBE2C10")]
		private sealed class <>c__DisplayClass118_0
		{
			[Token(Token = "0x4003268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public StreamAction startAction;

			[Token(Token = "0x6003280")]
			[Address(RVA = "0x173294C", Offset = "0x173294C", VA = "0x173294C")]
			public <>c__DisplayClass118_0()
			{
			}

			[Token(Token = "0x6003281")]
			[Address(RVA = "0x1748B64", Offset = "0x1748B64", VA = "0x1748B64")]
			internal bool <ClearStreamsAtCurrentPosition>b__0(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200081A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C4C", Offset = "0xBE2C4C")]
		private sealed class <>c__DisplayClass118_1
		{
			[Token(Token = "0x4003269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C774")]
			public StreamAction next;

			[Token(Token = "0x6003282")]
			[Address(RVA = "0x173297C", Offset = "0x173297C", VA = "0x173297C")]
			public <>c__DisplayClass118_1()
			{
			}

			[Token(Token = "0x6003283")]
			[Address(RVA = "0x1748BF8", Offset = "0x1748BF8", VA = "0x1748BF8")]
			internal bool <ClearStreamsAtCurrentPosition>b__1(MovableObject t)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200081B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C88", Offset = "0xBE2C88")]
		private sealed class <>c
		{
			[Token(Token = "0x400326A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400326B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<GameObject> <>9__129_0;

			[Token(Token = "0x6003285")]
			[Address(RVA = "0x174897C", Offset = "0x174897C", VA = "0x174897C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0x17489AC", Offset = "0x17489AC", VA = "0x17489AC")]
			internal int <Initialize>b__129_0(GameObject a, GameObject b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200081C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2CC4", Offset = "0xBE2CC4")]
		private sealed class <>c__DisplayClass139_0
		{
			[Token(Token = "0x400326C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StreamAction prevStreamAction;

			[Token(Token = "0x6003287")]
			[Address(RVA = "0x173DA48", Offset = "0x173DA48", VA = "0x173DA48")]
			public <>c__DisplayClass139_0()
			{
			}

			[Token(Token = "0x6003288")]
			[Address(RVA = "0x1748C8C", Offset = "0x1748C8C", VA = "0x1748C8C")]
			internal bool <Controller_takeInteractButtonChanged>b__0(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200081D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2D00", Offset = "0xBE2D00")]
		private sealed class <ReplaceLayoutWithCoroutine>d__173 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400326D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE309")]
			private int <>1__state;

			[Token(Token = "0x400326E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x400326F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE84")]
			public SongEditor <>4__this;

			[Token(Token = "0x4003270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SongLayout replacee;

			[Token(Token = "0x170005DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600328C")]
				[Address(RVA = "0x174A420", Offset = "0x174A420", VA = "0x174A420", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600328E")]
				[Address(RVA = "0x174A4F0", Offset = "0x174A4F0", VA = "0x174A4F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003289")]
			[Address(RVA = "0x1745CE8", Offset = "0x1745CE8", VA = "0x1745CE8")]
			[DebuggerHidden]
			public <ReplaceLayoutWithCoroutine>d__173(int <>1__state)
			{
			}

			[Token(Token = "0x600328A")]
			[Address(RVA = "0x1749A7C", Offset = "0x1749A7C", VA = "0x1749A7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600328B")]
			[Address(RVA = "0x1749A90", Offset = "0x1749A90", VA = "0x1749A90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600328D")]
			[Address(RVA = "0x174A450", Offset = "0x174A450", VA = "0x174A450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200081E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2D3C", Offset = "0xBE2D3C")]
		private sealed class <>c__DisplayClass189_0
		{
			[Token(Token = "0x4003271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StreamAction previousStreamAction;

			[Token(Token = "0x600328F")]
			[Address(RVA = "0x1746DB8", Offset = "0x1746DB8", VA = "0x1746DB8")]
			public <>c__DisplayClass189_0()
			{
			}

			[Token(Token = "0x6003290")]
			[Address(RVA = "0x1748D20", Offset = "0x1748D20", VA = "0x1748D20")]
			internal bool <PlaceRecordedObject>b__0(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200081F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2D78", Offset = "0xBE2D78")]
		private sealed class <>c__DisplayClass195_0
		{
			[Token(Token = "0x4003272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StreamAction startAction;

			[Token(Token = "0x6003291")]
			[Address(RVA = "0x1748DB4", Offset = "0x1748DB4", VA = "0x1748DB4")]
			public <>c__DisplayClass195_0()
			{
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0x1748DE4", Offset = "0x1748DE4", VA = "0x1748DE4")]
			internal bool <SmoothStream>b__0(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2DB4", Offset = "0xBE2DB4")]
		private sealed class <>c__DisplayClass195_1
		{
			[Token(Token = "0x4003273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE310")]
			public StreamAction next;

			[Token(Token = "0x6003293")]
			[Address(RVA = "0x1748E78", Offset = "0x1748E78", VA = "0x1748E78")]
			public <>c__DisplayClass195_1()
			{
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0x1748EA8", Offset = "0x1748EA8", VA = "0x1748EA8")]
			internal bool <SmoothStream>b__1(MovableObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000821")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2DF0", Offset = "0xBE2DF0")]
		private sealed class <SmoothStream>d__195 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4003275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE8C")]
			private object <>2__current;

			[Token(Token = "0x4003276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass195_0 <>8__1;

			[Token(Token = "0x4003277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MovableObject startElement;

			[Token(Token = "0x4003278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MovableObject endElement;

			[Token(Token = "0x4003279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE317")]
			public SongEditor <>4__this;

			[Token(Token = "0x170005DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003298")]
				[Address(RVA = "0x174B4EC", Offset = "0x174B4EC", VA = "0x174B4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600329A")]
				[Address(RVA = "0x174B5BC", Offset = "0x174B5BC", VA = "0x174B5BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003295")]
			[Address(RVA = "0x1747A88", Offset = "0x1747A88", VA = "0x1747A88")]
			[DebuggerHidden]
			public <SmoothStream>d__195(int <>1__state)
			{
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0x174A520", Offset = "0x174A520", VA = "0x174A520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003297")]
			[Address(RVA = "0x174A534", Offset = "0x174A534", VA = "0x174A534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0x174B51C", Offset = "0x174B51C", VA = "0x174B51C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float TIME_SCALE_FACTOR;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float SCROLLING_DELAY;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int FAST_SCROLLING_MULTIPLIER;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE26B")]
		[SerializeField]
		private bool enableGridColoringForValidPlacement;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool enableBallSwitchingWithJoystick;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C764")]
		[SerializeField]
		private bool enableSelectionVisualization;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC134E0", Offset = "0xC134E0")]
		[SerializeField]
		private bool enablePlayerHeightScaling;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool enablePlayspaceScaling;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool enableNewEnvironment;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE271")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC135D8", Offset = "0xC135D8")]
		[SerializeField]
		private EditorController leftController;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private EditorController rightController;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13694", Offset = "0xC13694")]
		[SerializeField]
		private AudioSource musicSource;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource metronomeAudioSource;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource sfxSource;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip pasteSound;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE278")]
		[SerializeField]
		private AudioClip deleteSound;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioClip quickDeleteSound;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13840", Offset = "0xC13840")]
		[SerializeField]
		private TextMeshProUGUI upperInfoText;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextMeshProUGUI difficultyText;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private EditorPositionLocalizationString middleCountDownAndBeatsText;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TextBasedLocalizedString lowerText;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE27F")]
		[SerializeField]
		private Image positionIndicator;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject waveformDisplayOverhead;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDF4")]
		[SerializeField]
		private GameObject waveformDisplaySlider;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13A28", Offset = "0xC13A28")]
		[SerializeField]
		private EditorPalette palette;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BoxCollider paletteCollider;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13AE4", Offset = "0xC13AE4")]
		[SerializeField]
		private GameObject layoutObject;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE286")]
		[SerializeField]
		private MeshRenderer floorStatic;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13BA0", Offset = "0xC13BA0")]
		[SerializeField]
		private GameObject patternLayoutObject;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DDFC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13C20", Offset = "0xC13C20")]
		[SerializeField]
		private LiveRecorder liveRecorder;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject liveImage;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Camera liveImageCamera;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject liveRecorderOverheadHint;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE28D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13D54", Offset = "0xC13D54")]
		[SerializeField]
		private GameObject beatLabelPrefab;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13DD4", Offset = "0xC13DD4")]
		[SerializeField]
		private GameObject playPauseHint;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE04")]
		[SerializeField]
		private GameObject playspaceWidthHint;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MeshRenderer gridRenderer;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform selectionLeftAndRightBars;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RectTransform tutorial;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE294")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC13F44", Offset = "0xC13F44")]
		[SerializeField]
		private Material oldSkybox;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Material newSkybox;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE0C")]
		[SerializeField]
		private GameObject newEnvironment;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongManager songManager;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PatternManager patternManager;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlaylistManager playlistManager;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE29B")]
		private int beatsTotal;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public int beatCounter;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE14")]
		[HideInInspector]
		public float beatCounterProgress;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float beatCounterProgressBasedOnLayoutObject;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float subBeat;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BeatCountMode beatCountMode;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2A2")]
		private bool enableMetronome;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject flyingHittablePrefab;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE1C")]
		private GameObject flyingHittableSteelPrefab;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject ballObstaclePrefab;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameObject> layoutWalls;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameObject> createWalls;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2A9")]
		private GameObject streamStartMiddlePrefabA;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject streamEndPrefabA;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE24")]
		private GameObject streamStartMiddlePrefabB;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject streamEndPrefabB;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stream stream;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<SpawnableObject.BeatActionEnum, SpawnableObject> spawnableObjectMap;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2B0")]
		[HideInInspector]
		public Song song;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SongLayout layout;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE2C")]
		[HideInInspector]
		public SongState songState;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Song.Difficulty difficulty;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform movableObjectPreviousParent;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int movableObjectPrevPos;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2B7")]
		private Vector2 trackpadPos;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float scrollTime;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C76C")]
		private float lastStep;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool initDone;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string timeLeftText;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Controller, EditorController> controllerMap;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2BD")]
		private bool isSongDirty;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isLayoutDirty;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE34")]
		private SongLayout layoutAtEditorStart;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float offsetAtEditorStart;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float bpmAtEditorStart;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int copyStartBeat;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2C4")]
		private int copyEndBeat;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool copyAdditive;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE3C")]
		private bool copyMirrorVertical;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool copyMirrorHorizontal;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BeatPattern extractedPattern;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BeatPattern clipboardPattern;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2CB")]
		private bool playspaceWidthHintIsActive;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly string TIME_FORMAT;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE44")]
		private readonly float DISTANCE_EDIT_PLANE_TO_USER;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float layoutObjectZPosition;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool gridColorIsRed;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool liveRecorderIsActive;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2D2")]
		[HideInInspector]
		public LiveRecorderSubbeatMode liveRecorderSubbeatMode;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool layoutChangedDuringLiveRecording;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE4C")]
		private Controller lc;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Controller rc;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameConfiguration gameConfig;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool currentlyDetecting;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2D9")]
		private float playerHeightScaling;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float playspaceScaling;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE54")]
		private Vector2 calculatedScaling;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float ASYMETRIC_ARCHWAY_X_SHIFT;

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x1728778", Offset = "0x1728778", VA = "0x1728778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B278", Offset = "0xC2B278")]
		public IEnumerator StartEditor(GameConfiguration gameConfig)
		{
			return null;
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x17288A4", Offset = "0x17288A4", VA = "0x17288A4")]
		private void Palette_onBooleanChanged(MenuToggleArea.Selection selection, bool newValue)
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x1728A1C", Offset = "0x1728A1C", VA = "0x1728A1C")]
		private void Palette_onBPMOrOffsetChanged(float newBPM, float newOffset)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x17291AC", Offset = "0x17291AC", VA = "0x17291AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B328", Offset = "0xC2B328")]
		private IEnumerator DetectBPMAndOffset()
		{
			return null;
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x17292B0", Offset = "0x17292B0", VA = "0x17292B0")]
		private void InvertSongOffset()
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x17293B4", Offset = "0x17293B4", VA = "0x17293B4")]
		private void Palette_onButtonDown(MenuSelectButton.Action button, Controller controller)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x172FB64", Offset = "0x172FB64", VA = "0x172FB64")]
		private StreamAction GetStreamStartAction(StreamAction.Id id)
		{
			return null;
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1731C24", Offset = "0x1731C24", VA = "0x1731C24")]
		private static StreamAction SearchForStreamStartOnOffbeats(StreamAction.Id id, OnBeat b)
		{
			return null;
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x17302C0", Offset = "0x17302C0", VA = "0x17302C0")]
		private StreamAction GetStreamEndAction(StreamAction.Id id)
		{
			return null;
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x173229C", Offset = "0x173229C", VA = "0x173229C")]
		private static StreamAction SearchForStreamEndOnOffbeats(StreamAction.Id id, OnBeat b)
		{
			return null;
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1730AFC", Offset = "0x1730AFC", VA = "0x1730AFC")]
		private Dictionary<StreamAction, MovableObject> GetAllStreamElements(StreamAction.Id id, StreamAction startAction)
		{
			return null;
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x172F000", Offset = "0x172F000", VA = "0x172F000")]
		private void ClearStreamsAtCurrentPosition(float beat, StreamAction.Id id)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1731024", Offset = "0x1731024", VA = "0x1731024")]
		private void StreamRotationAndHandlesToModel(StreamAction sa, MovableObject mo)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1732C4C", Offset = "0x1732C4C", VA = "0x1732C4C")]
		private void PatternDialog_onPatternSelected()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x172E12C", Offset = "0x172E12C", VA = "0x172E12C")]
		private void ClearPatternLayoutObject()
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x172E58C", Offset = "0x172E58C", VA = "0x172E58C")]
		private void PastePattern(BeatPattern paste)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x1734924", Offset = "0x1734924", VA = "0x1734924")]
		private void AdjustLayoutContainerForDifference(BeatSequence.MergeDifference d)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x1734F40", Offset = "0x1734F40", VA = "0x1734F40")]
		private static void RemoveUIForActions(List<BeatAction> removedActions)
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x172E9B8", Offset = "0x172E9B8", VA = "0x172E9B8")]
		private void AdjustLayoutContainerWithZShifting(List<BeatAction> removed, int beatCounter, int offsetInBeats)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x172DF6C", Offset = "0x172DF6C", VA = "0x172DF6C")]
		private void UpdateSelectionBars()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x172DC30", Offset = "0x172DC30", VA = "0x172DC30")]
		private void UpdateUIBasedOnCopyStartEndBeat()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x1735674", Offset = "0x1735674", VA = "0x1735674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x1735BC4", Offset = "0x1735BC4", VA = "0x1735BC4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x17378BC", Offset = "0x17378BC", VA = "0x17378BC")]
		private void BeatCountModeSelector_onHit(BeatCountMode beatCountMode)
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x1737D70", Offset = "0x1737D70", VA = "0x1737D70")]
		private void AdjustFloorTilingToBeatCount()
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x1737E90", Offset = "0x1737E90", VA = "0x1737E90")]
		private void Controller_joystickRightPressed(Controller controller)
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x1738E2C", Offset = "0x1738E2C", VA = "0x1738E2C")]
		private void Controller_joystickLeftPressed(Controller controller)
		{
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x1737FA0", Offset = "0x1737FA0", VA = "0x1737FA0")]
		private void JoystickActionHorizontal(bool isLeft, GameObject touchedObject, Controller controller)
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x1739600", Offset = "0x1739600", VA = "0x1739600")]
		private void SpawnObstacle(Vector3 position, SpawnableObject so, int nearestFullBeat, float nearestSubbeat)
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x173B350", Offset = "0x173B350", VA = "0x173B350")]
		private void SpawnStreamElement(Vector3 position, SpawnableObject so, int nearestFullBeat, float nearestSubbeat, bool isLeftHand)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x1738F3C", Offset = "0x1738F3C", VA = "0x1738F3C")]
		private void SpawnHittable(Controller controller, Vector3 hittablePosition, SpawnableObject so, bool moIsGrabbed, bool isFromLiveRecording, int nearestFullBeat, float nearestSubbeat)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x17315EC", Offset = "0x17315EC", VA = "0x17315EC")]
		private void HandleObjectPickup(MovableObject mo, Controller controller)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x173B7BC", Offset = "0x173B7BC", VA = "0x173B7BC")]
		private void Controller_takeInteractButtonChanged(Controller controller, bool isPressed)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x173DA78", Offset = "0x173DA78", VA = "0x173DA78")]
		private Vector3 GetCleanOnBeatLocalPos(MovableObject mo, BeatAction ba, int fullBeatToPlace, float subBeatToPlace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x173FB9C", Offset = "0x173FB9C", VA = "0x173FB9C")]
		private void ScrollBackwards(bool isFastScrolling)
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1740298", Offset = "0x1740298", VA = "0x1740298")]
		private void ScrollForward(bool isFastScrolling)
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x17407C8", Offset = "0x17407C8", VA = "0x17407C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x17410B8", Offset = "0x17410B8", VA = "0x17410B8")]
		private void UpdateWaveformIndicator()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x174170C", Offset = "0x174170C", VA = "0x174170C")]
		private void TogglePause(bool shouldPause)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x1741CA0", Offset = "0x1741CA0", VA = "0x1741CA0")]
		private void Palette_onSliderValueChanged(int beat)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x17379EC", Offset = "0x17379EC", VA = "0x17379EC")]
		private void AdjustLayoutAndMusic()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1728C70", Offset = "0x1728C70", VA = "0x1728C70")]
		private void ResyncAtNextConvientBeat()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x1741FCC", Offset = "0x1741FCC", VA = "0x1741FCC")]
		private void Controller_playPause(bool isPressed)
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1742250", Offset = "0x1742250", VA = "0x1742250")]
		private void Controller_appButtonChanged(bool isPressed)
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1742270", Offset = "0x1742270", VA = "0x1742270")]
		private void Palette_onPlayPauseChanged(bool isPressed)
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1742028", Offset = "0x1742028", VA = "0x1742028")]
		private void TogglePlayPause()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1742338", Offset = "0x1742338", VA = "0x1742338")]
		private void Beat()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x17414D0", Offset = "0x17414D0", VA = "0x17414D0")]
		private void SetGridColor(Color color)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1741DDC", Offset = "0x1741DDC", VA = "0x1741DDC")]
		private void UpdateLabel()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x1742684", Offset = "0x1742684", VA = "0x1742684")]
		private void UpdateTimeLeftDisplay(float timeLeft)
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x1728B30", Offset = "0x1728B30", VA = "0x1728B30")]
		private void SetBeatsTotal()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x17427F0", Offset = "0x17427F0", VA = "0x17427F0")]
		private void BuildUpSong(SongLayout layout)
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x17333A4", Offset = "0x17333A4", VA = "0x17333A4")]
		private void ImportBeatAction(BeatAction action, float beat, GameObject layoutObject)
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x17432A4", Offset = "0x17432A4", VA = "0x17432A4")]
		public static float[] GetWaveform(AudioClip audio, int width, float sat)
		{
			return null;
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x17437D8", Offset = "0x17437D8", VA = "0x17437D8")]
		public static Texture2D PaintWaveformSpectrum(float[] waveform, int height, Color c, float alpha)
		{
			return null;
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x173EDB0", Offset = "0x173EDB0", VA = "0x173EDB0")]
		private void UpdatePaletteStreamAvailability()
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x1743E74", Offset = "0x1743E74", VA = "0x1743E74")]
		public void SetStreamButtonInteractable(StreamAction.Id id, bool isStreamEnd, bool isInteractable)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x1744024", Offset = "0x1744024", VA = "0x1744024")]
		private void SanitizeStreams()
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x1744620", Offset = "0x1744620", VA = "0x1744620")]
		private bool SanitizeStreams(Beat beat)
		{
			return default(bool);
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x174581C", Offset = "0x174581C", VA = "0x174581C")]
		private bool SanitizeStreams(StreamAction sa)
		{
			return default(bool);
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x1728EAC", Offset = "0x1728EAC", VA = "0x1728EAC")]
		private void MarkSongDirtyAndAutoSave()
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x172D930", Offset = "0x172D930", VA = "0x172D930")]
		private void MarkLayoutDirtyAndAutoSave()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x172D4F8", Offset = "0x172D4F8", VA = "0x172D4F8")]
		private void SaveAll()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x172CFF8", Offset = "0x172CFF8", VA = "0x172CFF8")]
		private void Exit()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x172D2FC", Offset = "0x172D2FC", VA = "0x172D2FC")]
		private void Revert()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x172D4A0", Offset = "0x172D4A0", VA = "0x172D4A0")]
		private void ReplaceLayoutWith(SongLayout replaceLayout)
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x1745C04", Offset = "0x1745C04", VA = "0x1745C04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B3D8", Offset = "0xC2B3D8")]
		private IEnumerator ReplaceLayoutWithCoroutine(SongLayout replacee)
		{
			return null;
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x17422CC", Offset = "0x17422CC", VA = "0x17422CC")]
		private void ShowPlayPauseHint(bool isActive)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x1745D30", Offset = "0x1745D30", VA = "0x1745D30")]
		private void ShowPlayspaceWidthHint(bool isActive)
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x172E960", Offset = "0x172E960", VA = "0x172E960")]
		private void PlayPasteSound()
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x172EFA8", Offset = "0x172EFA8", VA = "0x172EFA8")]
		private void PlayDeleteSound()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x173D9F0", Offset = "0x173D9F0", VA = "0x173D9F0")]
		private void PlayQuickDeleteSound()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x1745D7C", Offset = "0x1745D7C", VA = "0x1745D7C")]
		private void TryGettingCustomPalettePosition()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x1746028", Offset = "0x1746028", VA = "0x1746028")]
		private void Palette_onPalettePositionChanged(Vector3 palettePosition, Vector3 paletteEulerAngles)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x1746154", Offset = "0x1746154", VA = "0x1746154")]
		private void LiveRecorder_onFirstPlaneHit(Vector3 position, bool isLeftHit, int nearestFullBeat, float nearestSubbeat, bool isPowerHit)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x17463AC", Offset = "0x17463AC", VA = "0x17463AC")]
		private void LiveRecorder_onHorizontalWallSpawn(Vector3 position, int nearestFullBeat, float nearestSubbeat, LiveRecorder.TunnelType tunnelType)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x174663C", Offset = "0x174663C", VA = "0x174663C")]
		private void LiveRecorder_onVerticalWallSpawn(Vector3 position, int nearestFullBeat, float nearestSubbeat, LiveRecorder.VerticalWallType verticalWallType)
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x17467C0", Offset = "0x17467C0", VA = "0x17467C0")]
		private void LiveRecorder_onBallObstacleSpawn(Vector3 position, int nearestFullBeat, float nearestSubbeat)
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x17468C4", Offset = "0x17468C4", VA = "0x17468C4")]
		private void LiveRecorder_onStreamSpawn(Vector3 position, bool isLeftHand, int nearestFullBeat, float nearestSubbeat, bool isEndElement)
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x1741B50", Offset = "0x1741B50", VA = "0x1741B50")]
		private void SetLiveRecorderPreview(bool isActive)
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x1746AF8", Offset = "0x1746AF8", VA = "0x1746AF8")]
		private void Palette_onLiveRecorderToggled(bool isActive)
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x1746D80", Offset = "0x1746D80", VA = "0x1746D80")]
		private void Palette_onLiveRecorderSubbeatsChanged(LiveRecorderSubbeatMode subbeatMode)
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x1739B04", Offset = "0x1739B04", VA = "0x1739B04")]
		private void PlaceRecordedObject(MovableObject mo, int nearestFullBeat, float nearestSubbeat)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x1746DE8", Offset = "0x1746DE8", VA = "0x1746DE8")]
		public void ShiftPreviousHittable(MovableObject mo, float beat)
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x174723C", Offset = "0x174723C", VA = "0x174723C")]
		public void ScaleCurrentWallToThisBeat(MovableObject mo, float beat, float startBeat)
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x17329AC", Offset = "0x17329AC", VA = "0x17329AC")]
		public void DeleteCurrentObject(MovableObject mo)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x1747520", Offset = "0x1747520", VA = "0x1747520")]
		public void ConvertStreamElement(MovableObject mo, float beat, bool shouldBeEnding)
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x1747914", Offset = "0x1747914", VA = "0x1747914")]
		public void SmoothStreamDelayed(MovableObject startElement, MovableObject endElement)
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x174797C", Offset = "0x174797C", VA = "0x174797C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B488", Offset = "0xC2B488")]
		private IEnumerator SmoothStream(MovableObject startElement, MovableObject endElement)
		{
			return null;
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x1747AD0", Offset = "0x1747AD0", VA = "0x1747AD0")]
		public bool CheckIfStreamExists(float beat, bool isLeftHand)
		{
			return default(bool);
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x17312CC", Offset = "0x17312CC", VA = "0x17312CC")]
		private void ApplyScaling(MovableObject mo)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x17484E8", Offset = "0x17484E8", VA = "0x17484E8")]
		public SongEditor()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x1748874", Offset = "0x1748874", VA = "0x1748874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B538", Offset = "0xC2B538")]
		private float <Beat>b__153_0()
		{
			return default(float);
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x17488A4", Offset = "0x17488A4", VA = "0x17488A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2B574", Offset = "0xC2B574")]
		private void <Beat>b__153_1(float x)
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class SpawnableObject : MonoBehaviour
	{
		[Token(Token = "0x2000822")]
		public enum BeatActionEnum
		{
			[Token(Token = "0x400327B")]
			FLYING_HITTABLE_NORMAL,
			[Token(Token = "0x400327C")]
			FLYING_HITTABLE_STEEL,
			[Token(Token = "0x400327D")]
			BALL_OBSTACLE,
			[Token(Token = "0x400327E")]
			STREAM_POINT_A,
			[Token(Token = "0x400327F")]
			STREAM_POINT_END_A,
			[Token(Token = "0x4003280")]
			STREAM_POINT_B,
			[Token(Token = "0x4003281")]
			STREAM_POINT_END_B,
			[Token(Token = "0x4003282")]
			WALL_OBSTACLE_0,
			[Token(Token = "0x4003283")]
			WALL_OBSTACLE_1,
			[Token(Token = "0x4003284")]
			WALL_OBSTACLE_2,
			[Token(Token = "0x4003285")]
			WALL_OBSTACLE_3,
			[Token(Token = "0x4003286")]
			WALL_OBSTACLE_4,
			[Token(Token = "0x4003287")]
			WALL_OBSTACLE_5,
			[Token(Token = "0x4003288")]
			WALL_OBSTACLE_6,
			[Token(Token = "0x4003289")]
			WALL_OBSTACLE_7
		}

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Vector3 STREAM_HANDLE_IN_DEFAULT;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DE94")]
		private static readonly Vector3 STREAM_HANDLE_OUT_DEFAULT;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BeatActionEnum beatActionEnum;

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x18F1834", Offset = "0x18F1834", VA = "0x18F1834")]
		public BeatAction GetBeatAction()
		{
			return null;
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x18F273C", Offset = "0x18F273C", VA = "0x18F273C")]
		public BeatActionEnum GetBeatActionEnum()
		{
			return default(BeatActionEnum);
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x18F276C", Offset = "0x18F276C", VA = "0x18F276C")]
		public SpawnableObject()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class TutorialImageChanger : MonoBehaviour
	{
		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEAC")]
		[SerializeField]
		private Image tutorialImage;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite questControls;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite wmrControls;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite viveControls;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE333")]
		[SerializeField]
		private Sprite picoNeo3Controls;

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x18FFB1C", Offset = "0x18FFB1C", VA = "0x18FFB1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x18FFDF8", Offset = "0x18FFDF8", VA = "0x18FFDF8")]
		public TutorialImageChanger()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class StaticCameraAdjuster : MonoBehaviour
	{
		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float positionStepSize;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEB4")]
		[SerializeField]
		private float rotationStepSize;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float adjustSpeed;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x18F52A8", Offset = "0x18F52A8", VA = "0x18F52A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x18F5374", Offset = "0x18F5374", VA = "0x18F5374")]
		private void Update()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x18F570C", Offset = "0x18F570C", VA = "0x18F570C")]
		private void DecreaseDistance()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x18F5AB0", Offset = "0x18F5AB0", VA = "0x18F5AB0")]
		private void IncreaseDistance()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x18F5E54", Offset = "0x18F5E54", VA = "0x18F5E54")]
		private void IncreaseHeight()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x18F61F8", Offset = "0x18F61F8", VA = "0x18F61F8")]
		private void DecreaseHeight()
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x18F659C", Offset = "0x18F659C", VA = "0x18F659C")]
		private void MoveLeft()
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x18F6940", Offset = "0x18F6940", VA = "0x18F6940")]
		private void MoveRight()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x18F6CE4", Offset = "0x18F6CE4", VA = "0x18F6CE4")]
		private void TurnLeft()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x18F71F0", Offset = "0x18F71F0", VA = "0x18F71F0")]
		private void TurnRight()
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x18F7BE0", Offset = "0x18F7BE0", VA = "0x18F7BE0")]
		private void RotateUp()
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x18F76FC", Offset = "0x18F76FC", VA = "0x18F76FC")]
		private void RotateDown()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x18F55B0", Offset = "0x18F55B0", VA = "0x18F55B0")]
		private void Reset()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x18F80C4", Offset = "0x18F80C4", VA = "0x18F80C4")]
		public StaticCameraAdjuster()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE33A")]
		public bool isMirrored;

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x17B19A0", Offset = "0x17B19A0", VA = "0x17B19A0")]
		public HandSkeleton()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class RagdollHeadCollider : MonoBehaviour
	{
		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RagdollForVideos motherScript;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEBC")]
		private bool ragdolled;

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x1773894", Offset = "0x1773894", VA = "0x1773894")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x1773A88", Offset = "0x1773A88", VA = "0x1773A88")]
		public RagdollHeadCollider()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class ScreenshotIntervallMaker : MonoBehaviour
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int resWidth;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int resHeight;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int screenshotInterval;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE341")]
		private bool takeScreenshots;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float timeSinceScreenshot;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEC4")]
		private int screenNumber;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screenPrefix;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool takeHiResShot;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera currentCamera;

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x177AB20", Offset = "0x177AB20", VA = "0x177AB20")]
		private void Start()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x177ABAC", Offset = "0x177ABAC", VA = "0x177ABAC")]
		public void TakeHiResShot()
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x177ABDC", Offset = "0x177ABDC", VA = "0x177ABDC")]
		public static string ScreenShotName(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x177AD54", Offset = "0x177AD54", VA = "0x177AD54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x177B848", Offset = "0x177B848", VA = "0x177B848")]
		public ScreenshotIntervallMaker()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class StrengthMeter : MonoBehaviour
	{
		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE348")]
		[SerializeField]
		private TMP_Text speedLabel;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private TMP_Text averageSpeedLabel;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DECC")]
		[SerializeField]
		private PlaylistEndscreenManager playlistEndScreenManager;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC144B0", Offset = "0xC144B0")]
		[SerializeField]
		private TMP_Text currentSpeedLeft;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image averageSpeedBarLeft;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMP_Text averageSpeedLeft;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE34F")]
		[SerializeField]
		private TMP_Text topSpeedLeft;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Image currentSpeedBarLeft;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C77C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xC14620", Offset = "0xC14620")]
		[SerializeField]
		private TMP_Text currentSpeedRight;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image averageSpeedBarRight;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMP_Text averageSpeedRight;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMP_Text topSpeedRight;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE355")]
		[SerializeField]
		private Image currentSpeedBarRight;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool isMetric;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DED4")]
		private bool isVisible;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isEnabled;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SongStatistic stat;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SongStatistic> songStatList;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE35C")]
		private float averageBarTweeningTime;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 currentSpeedValueScale;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEDC")]
		private float currentSpeedValueTweeningFactor;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentSpeedValueTweeningTime;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentSpeedBarResetTweeningTime;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentSpeedBarIncreaseTweeningTime;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE363")]
		private float currentSpeedBarDecreseTweeningTime;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float averageSpeedRightZeroPos;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEE4")]
		private float averageSpeedRightMaxPos;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float averageSpeedLeftZeroPos;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float averageSpeedLeftMaxPos;

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x18FAF3C", Offset = "0x18FAF3C", VA = "0x18FAF3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x18FB058", Offset = "0x18FB058", VA = "0x18FB058")]
		public void PrepareForNextSong(SongStatistic stat)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x18FB090", Offset = "0x18FB090", VA = "0x18FB090")]
		public void ResetStrengthMeter()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x18FB31C", Offset = "0x18FB31C", VA = "0x18FB31C")]
		public void SetVisibility(bool isVisible, bool isEnabled)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x18FB3D8", Offset = "0x18FB3D8", VA = "0x18FB3D8")]
		public void SetFormat(bool isMetric)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x18FB52C", Offset = "0x18FB52C", VA = "0x18FB52C")]
		public void SetSongStatList(List<SongStatistic> songStatList)
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x18FB564", Offset = "0x18FB564", VA = "0x18FB564")]
		private void Overview_songClicked(int index)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x18FB668", Offset = "0x18FB668", VA = "0x18FB668")]
		public void ShowFinalStats(SongStatistic stat)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x18FBE48", Offset = "0x18FBE48", VA = "0x18FBE48")]
		public void RegisterHit(float hitSpeed, bool isLeftController)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x18FC038", Offset = "0x18FC038", VA = "0x18FC038")]
		private void UpdateStrengthMeterLeft()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x18FC79C", Offset = "0x18FC79C", VA = "0x18FC79C")]
		private void UpdateStrengthMeterRight()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x18FBFF8", Offset = "0x18FBFF8", VA = "0x18FBFF8")]
		private float ConvertToImperial(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x18FCF00", Offset = "0x18FCF00", VA = "0x18FCF00")]
		public StrengthMeter()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class BeatSyncMovableReport
	{
		[Token(Token = "0x2000823")]
		public class Info
		{
			[Token(Token = "0x400328A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE36A")]
			public int no;

			[Token(Token = "0x400328B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float sendReportedTime;

			[Token(Token = "0x400328C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEEC")]
			public float sendReportedDSPTime;

			[Token(Token = "0x400328D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sendInterpolatedDSPTime;

			[Token(Token = "0x400328E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sendReportedDSPBeat;

			[Token(Token = "0x400328F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sendInterpolatedDSPBeat;

			[Token(Token = "0x4003290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE371")]
			public float sendActionBeat;

			[Token(Token = "0x4003291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float sendLateInBeatsSinceInterpolated;

			[Token(Token = "0x4003292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEF4")]
			public float sendLateInSecondsSinceInterpolated;

			[Token(Token = "0x4003293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float rcvReportedTime;

			[Token(Token = "0x4003294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float rcvReportedDSP;

			[Token(Token = "0x4003295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float rcvReportedDSPBeat;

			[Token(Token = "0x4003296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE378")]
			public float rcvReportedInterpolatedDSPBeat;

			[Token(Token = "0x4003297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float rcvActionBeat;

			[Token(Token = "0x4003298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DEFC")]
			public float actuallyRcvedBeatdWithOvershootSubtracted;

			[Token(Token = "0x4003299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float actuallyRcvedSecondWithOvershootSubtracted;

			[Token(Token = "0x400329A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float beatAccuracyAtReceive;

			[Token(Token = "0x600329B")]
			[Address(RVA = "0x1983454", Offset = "0x1983454", VA = "0x1983454")]
			public Info()
			{
			}
		}

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SortedDictionary<int, Info> report;

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x1983164", Offset = "0x1983164", VA = "0x1983164")]
		private static string F(float f)
		{
			return null;
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x19831F4", Offset = "0x19831F4", VA = "0x19831F4")]
		internal void AddSnd(int no, float time, float dsp, float musicBeat, float interpolatedTime, float sendInterpolatedBeat, float sendBeatDiffInBeatsSinceInterpolated, float sendBeatDiffInSecondsSinceInterpolated, float actionBeat)
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x1983484", Offset = "0x1983484", VA = "0x1983484")]
		internal void AddRcv(int no, float time, float dsp, float musicBeat, float reportedRcvBeat, float actuallyRcvedBeatdWithOvershootSubtracted, float actuallyRcvedSecondWithOvershootSubtracted, float actionBeat)
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x19837A4", Offset = "0x19837A4", VA = "0x19837A4")]
		public void WriteBeatReportToCSVFile(string fileName)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1983C48", Offset = "0x1983C48", VA = "0x1983C48")]
		private string CreateCsvHeaderLine(Type type)
		{
			return null;
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1983EAC", Offset = "0x1983EAC", VA = "0x1983EAC")]
		private string CreateCsvLine(Info i)
		{
			return null;
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x19845D4", Offset = "0x19845D4", VA = "0x19845D4")]
		public BeatSyncMovableReport()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBDE2BC", Offset = "0xBDE2BC")]
	public class CameraFader : MonoBehaviour
	{
		[Token(Token = "0x2000824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2E2C", Offset = "0xBE2E2C")]
		private sealed class <Flash>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400329B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE386")]
			private int <>1__state;

			[Token(Token = "0x400329C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x400329D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF0C")]
			public CameraFader <>4__this;

			[Token(Token = "0x170005E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600329F")]
				[Address(RVA = "0x1986DD0", Offset = "0x1986DD0", VA = "0x1986DD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A1")]
				[Address(RVA = "0x1986EA0", Offset = "0x1986EA0", VA = "0x1986EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600329C")]
			[Address(RVA = "0x1985EE8", Offset = "0x1985EE8", VA = "0x1985EE8")]
			[DebuggerHidden]
			public <Flash>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600329D")]
			[Address(RVA = "0x1986AC4", Offset = "0x1986AC4", VA = "0x1986AC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600329E")]
			[Address(RVA = "0x1986AD8", Offset = "0x1986AD8", VA = "0x1986AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A0")]
			[Address(RVA = "0x1986E00", Offset = "0x1986E00", VA = "0x1986E00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color currentColor;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE37F")]
		private Color targetColor;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color deltaColor;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF04")]
		private static CameraFader INSTANCE;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fadeMaterial;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isFlashing;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color transparentRed;

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x19856CC", Offset = "0x19856CC", VA = "0x19856CC")]
		public static void DoFade(Color toColor, float overTimeInSeconds)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x1985A30", Offset = "0x1985A30", VA = "0x1985A30")]
		private void DoStartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x1985BB8", Offset = "0x1985BB8", VA = "0x1985BB8")]
		public static void DoFlash()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x1985E2C", Offset = "0x1985E2C", VA = "0x1985E2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B5B0", Offset = "0xC2B5B0")]
		private IEnumerator Flash()
		{
			return null;
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x1985F30", Offset = "0x1985F30", VA = "0x1985F30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x19861A0", Offset = "0x19861A0", VA = "0x19861A0")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x1986738", Offset = "0x1986738", VA = "0x1986738")]
		public CameraFader()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class GameObjectUtil : ScriptableObject
	{
		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2E68", Offset = "0xBE2E68")]
		private sealed class <StopLine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400329E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400329F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject g;

			[Token(Token = "0x170005E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A5")]
				[Address(RVA = "0x178C710", Offset = "0x178C710", VA = "0x178C710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A7")]
				[Address(RVA = "0x178C7E0", Offset = "0x178C7E0", VA = "0x178C7E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A2")]
			[Address(RVA = "0x178C470", Offset = "0x178C470", VA = "0x178C470")]
			[DebuggerHidden]
			public <StopLine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60032A3")]
			[Address(RVA = "0x178C4E8", Offset = "0x178C4E8", VA = "0x178C4E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0x178C4FC", Offset = "0x178C4FC", VA = "0x178C4FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0x178C740", Offset = "0x178C740", VA = "0x178C740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x178B7E8", Offset = "0x178B7E8", VA = "0x178B7E8")]
		public static GameObject CreateCubeWithoutPhysics()
		{
			return null;
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x178B9E8", Offset = "0x178B9E8", VA = "0x178B9E8")]
		public static GameObject CreateCylinderWithoutPhysics()
		{
			return null;
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x178BBE8", Offset = "0x178BBE8", VA = "0x178BBE8")]
		public static GameObject CreateSphereWithoutPhysics()
		{
			return null;
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x178BDE8", Offset = "0x178BDE8", VA = "0x178BDE8")]
		internal static void VisualizeLineFullColor(MonoBehaviour starter, Vector3 fromPoint, Vector3 toPoint, Color theColor)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x178C250", Offset = "0x178C250", VA = "0x178C250")]
		internal static void VisualizeLine(MonoBehaviour starter, Vector3 fromPoint, Vector3 toPoint, Color toColor)
		{
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x178BF30", Offset = "0x178BF30", VA = "0x178BF30")]
		internal static void VisualizeLine(MonoBehaviour starter, Vector3 fromPoint, Vector3 toPoint, Color fromColor, Color toColor, float fromSize, float toSize)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x178C3AC", Offset = "0x178C3AC", VA = "0x178C3AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B660", Offset = "0xC2B660")]
		private static IEnumerator StopLine(GameObject g)
		{
			return null;
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x178C4B8", Offset = "0x178C4B8", VA = "0x178C4B8")]
		public GameObjectUtil()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class MainThreadDispatcherPBVR : MonoBehaviour
	{
		[Token(Token = "0x2000826")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2EA4", Offset = "0xBE2EA4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40032A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF14")]
			public MainThreadDispatcherPBVR <>4__this;

			[Token(Token = "0x40032A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator action;

			[Token(Token = "0x60032A8")]
			[Address(RVA = "0x1887040", Offset = "0x1887040", VA = "0x1887040")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60032A9")]
			[Address(RVA = "0x18872D8", Offset = "0x18872D8", VA = "0x18872D8")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000827")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2EE0", Offset = "0xBE2EE0")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40032A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE394")]
			public Action action;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032AD")]
				[Address(RVA = "0x1887478", Offset = "0x1887478", VA = "0x1887478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032AF")]
				[Address(RVA = "0x1887548", Offset = "0x1887548", VA = "0x1887548", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0x1887190", Offset = "0x1887190", VA = "0x1887190")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0x1887330", Offset = "0x1887330", VA = "0x1887330", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0x1887344", Offset = "0x1887344", VA = "0x1887344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032AE")]
			[Address(RVA = "0x18874A8", Offset = "0x18874A8", VA = "0x18874A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F1C", Offset = "0xBE2F1C")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40032A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x40032A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170005E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032B3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032B5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032B0")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60032B1")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032B2")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032B4")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000829")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F58", Offset = "0xBE2F58")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40032AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x40032AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40032AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170005E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032B9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032BB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032B6")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60032B7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032B8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032BA")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F94", Offset = "0xBE2F94")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40032B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x40032B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40032B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40032B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170005EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032BF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032BC")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60032BD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032BE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032C0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FD0", Offset = "0xBE2FD0")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40032B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x40032B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40032B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40032BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x40032BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170005ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032C5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C2")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60032C3")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C4")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032C6")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE38D")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static MainThreadDispatcherPBVR instance;

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x18860F0", Offset = "0x18860F0", VA = "0x18860F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x1886384", Offset = "0x1886384", VA = "0x1886384")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x1886834", Offset = "0x1886834", VA = "0x1886834")]
		public static MainThreadDispatcherPBVR Instance()
		{
			return null;
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x1886A9C", Offset = "0x1886A9C", VA = "0x1886A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x1886B8C", Offset = "0x1886B8C", VA = "0x1886B8C")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x1887070", Offset = "0x1887070", VA = "0x1887070")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6002A18")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6002A19")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6002A1A")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6002A1B")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x18870C8", Offset = "0x18870C8", VA = "0x18870C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B710", Offset = "0xC2B710")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6002A1D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B7C0", Offset = "0xC2B7C0")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6002A1E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B870", Offset = "0xC2B870")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6002A1F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B920", Offset = "0xC2B920")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6002A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2B9D0", Offset = "0xC2B9D0")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x18871D8", Offset = "0x18871D8", VA = "0x18871D8")]
		public MainThreadDispatcherPBVR()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public enum Axis
	{
		[Token(Token = "0x4002614")]
		X,
		[Token(Token = "0x4002615")]
		Y,
		[Token(Token = "0x4002616")]
		Z
	}
	[Token(Token = "0x2000528")]
	public struct FlatRect
	{
		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xwidth;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE38B")]
		public float zwidth;

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x171AB04", Offset = "0x171AB04", VA = "0x171AB04")]
		public FlatRect(float xsize, float zsize)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x171AB64", Offset = "0x171AB64", VA = "0x171AB64")]
		internal bool IsZero()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000529")]
	public class GrabClipboard
	{
		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public SerializableVector3 takePointRight;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4C784")]
		public SerializableVector3 takeRotationRight;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializableVector3 takePointLeft;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializableVector3 takeRotationLeft;

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x17AA004", Offset = "0x17AA004", VA = "0x17AA004")]
		public GrabClipboard(Vector3 takePointLeft, Vector3 takeRotationLeft, Vector3 takePointRight, Vector3 takeRotationRight)
		{
		}
	}
	[Token(Token = "0x200052A")]
	public struct LocationAndRotation
	{
		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 location;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE391")]
		private Vector3 rotation;

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x1885FD0", Offset = "0x1885FD0", VA = "0x1885FD0")]
		public LocationAndRotation(Vector3 location, Vector3 rotation)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x1886070", Offset = "0x1886070", VA = "0x1886070")]
		public Vector3 getLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x18860B0", Offset = "0x18860B0", VA = "0x18860B0")]
		public Vector3 getRotation()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200052B")]
	public class PointyArea
	{
		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Bounds bounds;

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x176C8DC", Offset = "0x176C8DC", VA = "0x176C8DC")]
		public PointyArea(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x176C9B4", Offset = "0x176C9B4", VA = "0x176C9B4")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200052C")]
	public class Position
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF24")]
		private Vector3 pos;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion rot;

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x176CA34", Offset = "0x176CA34", VA = "0x176CA34")]
		public Position()
		{
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x176CB98", Offset = "0x176CB98", VA = "0x176CB98")]
		public Position(Transform transform)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x176CC64", Offset = "0x176CC64", VA = "0x176CC64")]
		public Position(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x176CD08", Offset = "0x176CD08", VA = "0x176CD08")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x176CD48", Offset = "0x176CD48", VA = "0x176CD48")]
		public Quaternion GetRotation()
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200052D")]
	public class RayCastResult
	{
		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit hit;

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x1774EEC", Offset = "0x1774EEC", VA = "0x1774EEC")]
		public RayCastResult(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x1774F70", Offset = "0x1774F70", VA = "0x1774F70")]
		public Vector3 GetHitPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x1774FC0", Offset = "0x1774FC0", VA = "0x1774FC0")]
		public object GetTargetTag()
		{
			return null;
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x1775038", Offset = "0x1775038", VA = "0x1775038")]
		public string GetTargetName()
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x17750B0", Offset = "0x17750B0", VA = "0x17750B0")]
		public float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x17750F8", Offset = "0x17750F8", VA = "0x17750F8")]
		public GameObject GetGameObject()
		{
			return null;
		}
	}
	[Token(Token = "0x200052E")]
	public class OutOfAreaFader : MonoBehaviour
	{
		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE300C", Offset = "0xBE300C")]
		private sealed class <RemoveTheDisplay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF34")]
			private int <>1__state;

			[Token(Token = "0x40032BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OutOfAreaFader <>4__this;

			[Token(Token = "0x40032BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float speed;

			[Token(Token = "0x40032C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE3B6")]
			private float <elapsed>5__2;

			[Token(Token = "0x170005EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032CB")]
				[Address(RVA = "0x180F418", Offset = "0x180F418", VA = "0x180F418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032CD")]
				[Address(RVA = "0x180F4E8", Offset = "0x180F4E8", VA = "0x180F4E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C8")]
			[Address(RVA = "0x180E7FC", Offset = "0x180E7FC", VA = "0x180E7FC")]
			[DebuggerHidden]
			public <RemoveTheDisplay>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60032C9")]
			[Address(RVA = "0x180EC20", Offset = "0x180EC20", VA = "0x180EC20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032CA")]
			[Address(RVA = "0x180EC34", Offset = "0x180EC34", VA = "0x180EC34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032CC")]
			[Address(RVA = "0x180F448", Offset = "0x180F448", VA = "0x180F448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3048", Offset = "0xBE3048")]
		private sealed class <ShowTheDisplay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x40032C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF3C")]
			private object <>2__current;

			[Token(Token = "0x40032C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OutOfAreaFader <>4__this;

			[Token(Token = "0x40032C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float speed;

			[Token(Token = "0x40032C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <elapsed>5__2;

			[Token(Token = "0x170005F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D1")]
				[Address(RVA = "0x180FD24", Offset = "0x180FD24", VA = "0x180FD24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D3")]
				[Address(RVA = "0x180FDF4", Offset = "0x180FDF4", VA = "0x180FDF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CE")]
			[Address(RVA = "0x180E844", Offset = "0x180E844", VA = "0x180E844")]
			[DebuggerHidden]
			public <ShowTheDisplay>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60032CF")]
			[Address(RVA = "0x180F518", Offset = "0x180F518", VA = "0x180F518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D0")]
			[Address(RVA = "0x180F52C", Offset = "0x180F52C", VA = "0x180F52C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D2")]
			[Address(RVA = "0x180FD54", Offset = "0x180FD54", VA = "0x180FD54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002623")]
		private const float SHOW_TRANSPARENT = 0f;

		[Token(Token = "0x4002624")]
		private const float SHOW_BLACKNESS = 1f;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Canvas canvas;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF2C")]
		[SerializeField]
		private Image blackness;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject infoField;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Light[] lightWithFlares;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3AF")]
		private Coroutine routine;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Flare[] storedFlares;

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x180DF3C", Offset = "0x180DF3C", VA = "0x180DF3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x180E0F0", Offset = "0x180E0F0", VA = "0x180E0F0")]
		internal void SetShowMessage(bool show)
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x180E47C", Offset = "0x180E47C", VA = "0x180E47C")]
		internal void SetText(string lockedText)
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x180E4D4", Offset = "0x180E4D4", VA = "0x180E4D4")]
		internal void HideTextAndFadeIn(float outsideAreaFadeSpeed)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x180E668", Offset = "0x180E668", VA = "0x180E668")]
		internal void FadeOutAndShowText(float outsideAreaFadeSpeed)
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x180E584", Offset = "0x180E584", VA = "0x180E584")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BA80", Offset = "0xC2BA80")]
		private IEnumerator RemoveTheDisplay(float speed)
		{
			return null;
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x180E718", Offset = "0x180E718", VA = "0x180E718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BB30", Offset = "0xC2BB30")]
		private IEnumerator ShowTheDisplay(float speed)
		{
			return null;
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x180E88C", Offset = "0x180E88C", VA = "0x180E88C")]
		public void ImmediateBlackout(bool isOut)
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0x180EBF0", Offset = "0x180EBF0", VA = "0x180EBF0")]
		public OutOfAreaFader()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class SceneLoading
	{
		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3084", Offset = "0xBE3084")]
		private sealed class <SwitchToLoadScreen>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE3BD")]
			private int <>1__state;

			[Token(Token = "0x40032C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x40032C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF44")]
			public bool towardsGame;

			[Token(Token = "0x40032C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour starter;

			[Token(Token = "0x40032CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LLHeadset <headset>5__2;

			[Token(Token = "0x40032CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LoadingScreen <loadingScreen>5__3;

			[Token(Token = "0x40032CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE3C4")]
			private float <cameraY>5__4;

			[Token(Token = "0x40032CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Vector3 <offset>5__5;

			[Token(Token = "0x170005F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D7")]
				[Address(RVA = "0x177A8C0", Offset = "0x177A8C0", VA = "0x177A8C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D9")]
				[Address(RVA = "0x177A990", Offset = "0x177A990", VA = "0x177A990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0x17799C8", Offset = "0x17799C8", VA = "0x17799C8")]
			[DebuggerHidden]
			public <SwitchToLoadScreen>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60032D5")]
			[Address(RVA = "0x177A224", Offset = "0x177A224", VA = "0x177A224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D6")]
			[Address(RVA = "0x177A238", Offset = "0x177A238", VA = "0x177A238", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D8")]
			[Address(RVA = "0x177A8F0", Offset = "0x177A8F0", VA = "0x177A8F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30C0", Offset = "0xBE30C0")]
		private sealed class <SwitchBackFromLoadScreen>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF4C")]
			private int <>1__state;

			[Token(Token = "0x40032CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40032D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour starter;

			[Token(Token = "0x40032D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LLHeadset <headset>5__2;

			[Token(Token = "0x170005F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032DD")]
				[Address(RVA = "0x177A124", Offset = "0x177A124", VA = "0x177A124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032DF")]
				[Address(RVA = "0x177A1F4", Offset = "0x177A1F4", VA = "0x177A1F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032DA")]
			[Address(RVA = "0x1779AD4", Offset = "0x1779AD4", VA = "0x1779AD4")]
			[DebuggerHidden]
			public <SwitchBackFromLoadScreen>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60032DB")]
			[Address(RVA = "0x1779B4C", Offset = "0x1779B4C", VA = "0x1779B4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DC")]
			[Address(RVA = "0x1779B60", Offset = "0x1779B60", VA = "0x1779B60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0x177A154", Offset = "0x177A154", VA = "0x177A154", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400262C")]
		private const float FADE_TIME_IN_SECONDS = 0.2f;

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x17798C8", Offset = "0x17798C8", VA = "0x17798C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BBE0", Offset = "0xC2BBE0")]
		public static IEnumerator SwitchToLoadScreen(bool towardsGame, MonoBehaviour starter)
		{
			return null;
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x1779A10", Offset = "0x1779A10", VA = "0x1779A10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BC90", Offset = "0xC2BC90")]
		public static IEnumerator SwitchBackFromLoadScreen(MonoBehaviour starter)
		{
			return null;
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x1779B1C", Offset = "0x1779B1C", VA = "0x1779B1C")]
		public SceneLoading()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000530")]
	public struct SerializableVector3
	{
		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3BB")]
		public float x;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float y;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF44")]
		public float z;

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x177B924", Offset = "0x177B924", VA = "0x177B924")]
		public SerializableVector3(float rX, float rY, float rZ)
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x177B98C", Offset = "0x177B98C", VA = "0x177B98C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x177BAC0", Offset = "0x177BAC0", VA = "0x177BAC0")]
		public static implicit operator Vector3(SerializableVector3 rValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x177BB78", Offset = "0x177BB78", VA = "0x177BB78")]
		public static implicit operator SerializableVector3(Vector3 rValue)
		{
			return default(SerializableVector3);
		}
	}
	[Token(Token = "0x2000531")]
	internal class SimpleProfiler
	{
		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Stopwatch> watches;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, TimeSpan> totalTime;

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x175B1F4", Offset = "0x175B1F4", VA = "0x175B1F4")]
		public static void StartProfiling(string profileId)
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x175B64C", Offset = "0x175B64C", VA = "0x175B64C")]
		public static void StopProfiling(string profileId)
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x177C994", Offset = "0x177C994", VA = "0x177C994")]
		public static void OutputTotals()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x177C9A4", Offset = "0x177C9A4", VA = "0x177C9A4")]
		private static string TimeSpanToString(TimeSpan ts)
		{
			return null;
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x177CC28", Offset = "0x177CC28", VA = "0x177CC28")]
		public SimpleProfiler()
		{
		}
	}
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBDE36C", Offset = "0xBDE36C")]
	public class SongImporter : DecoderImporter
	{
		[Token(Token = "0x2000830")]
		public enum SongImporterStatus
		{
			[Token(Token = "0x40032D3")]
			Initializing,
			[Token(Token = "0x40032D4")]
			Initialized_And_Loading,
			[Token(Token = "0x40032D5")]
			Done_OK,
			[Token(Token = "0x40032D6")]
			Done_Canceled,
			[Token(Token = "0x40032D7")]
			Done_Error
		}

		[Token(Token = "0x2000831")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30FC", Offset = "0xBE30FC")]
		private sealed class <LoadSong>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x40032D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF6C")]
			private object <>2__current;

			[Token(Token = "0x40032DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SongImporter <>4__this;

			[Token(Token = "0x40032DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Song song;

			[Token(Token = "0x40032DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<SongImporter> callbackOnSongFinishedLoading;

			[Token(Token = "0x170005F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E3")]
				[Address(RVA = "0x17512B4", Offset = "0x17512B4", VA = "0x17512B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E5")]
				[Address(RVA = "0x1751384", Offset = "0x1751384", VA = "0x1751384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0x175019C", Offset = "0x175019C", VA = "0x175019C")]
			[DebuggerHidden]
			public <LoadSong>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60032E1")]
			[Address(RVA = "0x1750350", Offset = "0x1750350", VA = "0x1750350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E2")]
			[Address(RVA = "0x1750364", Offset = "0x1750364", VA = "0x1750364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0x17512E4", Offset = "0x17512E4", VA = "0x17512E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000832")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3138", Offset = "0xBE3138")]
		private sealed class <MonitorExternalSongLoadProcess>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE3E7")]
			private int <>1__state;

			[Token(Token = "0x40032DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x40032DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4C78C")]
			public SongImporter <>4__this;

			[Token(Token = "0x40032E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<SongImporter> callbackOnSongFinishedLoading;

			[Token(Token = "0x170005F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E9")]
				[Address(RVA = "0x1751F24", Offset = "0x1751F24", VA = "0x1751F24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032EB")]
				[Address(RVA = "0x1751FF4", Offset = "0x1751FF4", VA = "0x1751FF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E6")]
			[Address(RVA = "0x17502C8", Offset = "0x17502C8", VA = "0x17502C8")]
			[DebuggerHidden]
			public <MonitorExternalSongLoadProcess>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60032E7")]
			[Address(RVA = "0x17513B4", Offset = "0x17513B4", VA = "0x17513B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E8")]
			[Address(RVA = "0x17513C8", Offset = "0x17513C8", VA = "0x17513C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0x1751F54", Offset = "0x1751F54", VA = "0x1751F54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int globalId;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3D2")]
		private WaveStream reader;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ISampleProvider sampleProvider;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF5C")]
		private bool importShouldStop;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC148BC", Offset = "0xC148BC")]
		private Song <Song>k__BackingField;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string songURL;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3D9")]
		public SongImporterStatus Status;

		[Token(Token = "0x17000469")]
		public Song Song
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x174F4DC", Offset = "0x174F4DC", VA = "0x174F4DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2BD40", Offset = "0xC2BD40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x174F50C", Offset = "0x174F50C", VA = "0x174F50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xC2BD7C", Offset = "0xC2BD7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x174F544", Offset = "0x174F544", VA = "0x174F544")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x174F664", Offset = "0x174F664", VA = "0x174F664", Slot = "18")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x174FD64", Offset = "0x174FD64", VA = "0x174FD64", Slot = "19")]
		protected override void Cleanup()
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x174FDF8", Offset = "0x174FDF8", VA = "0x174FDF8", Slot = "21")]
		protected override AudioInfo GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x174FF88", Offset = "0x174FF88", VA = "0x174FF88", Slot = "20")]
		protected override int GetSamples(float[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x1750060", Offset = "0x1750060", VA = "0x1750060")]
		internal void StopImport()
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x1750090", Offset = "0x1750090", VA = "0x1750090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BDB8", Offset = "0xC2BDB8")]
		internal IEnumerator LoadSong(Song song, Action<SongImporter> callbackOnSongFinishedLoading)
		{
			return null;
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x17501E4", Offset = "0x17501E4", VA = "0x17501E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xC2BE68", Offset = "0xC2BE68")]
		private IEnumerator MonitorExternalSongLoadProcess(Action<SongImporter> callbackOnSongFinishedLoading)
		{
			return null;
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1750310", Offset = "0x1750310", VA = "0x1750310")]
		public SongImporter()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class Util
	{
		[Token(Token = "0x2000833")]
		public delegate void SimpleInfoEvent(object sender);

		[Token(Token = "0x400263A")]
		private const int layersForRayCast = -4097;

		[Token(Token = "0x400263B")]
		private const float ALLOWED_ERROR_ON_FLOAT_COMPARISON = 0.01f;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3ED")]
		private static readonly float VERTICAL_OFFSET;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int DECIMAL_PLACES;

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x18FFE28", Offset = "0x18FFE28", VA = "0x18FFE28")]
		internal static bool IsEmpty(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x18FFEF4", Offset = "0x18FFEF4", VA = "0x18FFEF4")]
		public static void LogErrorAndQuit(string errorMessage)
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x1900020", Offset = "0x1900020", VA = "0x1900020")]
		internal static string GetTimeAsString(double time)
		{
			return null;
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x18FFFF8", Offset = "0x18FFFF8", VA = "0x18FFFF8")]
		public static void Quit()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x19003C0", Offset = "0x19003C0", VA = "0x19003C0")]
		public static AudioSource CreateAudioSource(GameObject go, AudioClip audioClip)
		{
			return null;
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x19004E0", Offset = "0x19004E0", VA = "0x19004E0")]
		public static void VisualizeGlobalAxes(Transform transform)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x1900C48", Offset = "0x1900C48", VA = "0x1900C48")]
		public static void VisualizeLocalAxes(Transform transform)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x19009D0", Offset = "0x19009D0", VA = "0x19009D0")]
		public static void VisualizeLine(Vector3 fromPoint, Vector3 toPoint, Color tpColor)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x19010E8", Offset = "0x19010E8", VA = "0x19010E8")]
		internal static void VisualizeLineWithEndDots(Vector3 fromPoint, Vector3 toPoint, Color tpColor)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x19017A0", Offset = "0x19017A0", VA = "0x19017A0")]
		internal static Vector3 createVectorWithValueOnAxis(object inPlaceInteractionAxis, float angleBetweenL)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x1901844", Offset = "0x1901844", VA = "0x1901844")]
		public static void VisualizeLocalLine(Transform transform, Vector3 fromPointLocalSpace, Vector3 toPointLocalSpace, Color tpColor)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x1901C00", Offset = "0x1901C00", VA = "0x1901C00")]
		public static Vector3 ProjectPointOnLine(Vector3 lineStartPoint, Vector3 lineVector, Vector3 fromPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x1901E5C", Offset = "0x1901E5C", VA = "0x1901E5C")]
		public static float GetAxisValue(Axis axis, Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x1901F64", Offset = "0x1901F64", VA = "0x1901F64")]
		public static float GetSingleAxisValue(Vector3 axisVector, Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x1902074", Offset = "0x1902074", VA = "0x1902074")]
		public static Vector3 createVectorWithValueOnAxis(Axis axis, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1902234", Offset = "0x1902234", VA = "0x1902234")]
		public static bool FloatEquals(float firstFloat, float secondFloat)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x190236C", Offset = "0x190236C", VA = "0x190236C")]
		public static bool FloatEquals(float firstFloat, float secondFloat, float allowedError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x190248C", Offset = "0x190248C", VA = "0x190248C")]
		public static Vector3 ReplaceValueOnSelectedAxis(Axis axis, Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x1902778", Offset = "0x1902778", VA = "0x1902778")]
		public static Vector3 ReplaceValueOnSelectedAxis(Axis axis, Vector3 a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x19029E0", Offset = "0x19029E0", VA = "0x19029E0")]
		public static float Clamp(float toClamp, int from, float to)
		{
			return default(float);
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x1902A90", Offset = "0x1902A90", VA = "0x1902A90")]
		internal static void ChangeAlpha(Image image, int v)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x1902B48", Offset = "0x1902B48", VA = "0x1902B48")]
		public static RayCastResult RayCast(Vector3 position, Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x1902D0C", Offset = "0x1902D0C", VA = "0x1902D0C")]
		public static Vector3 GetBezierPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x1903030", Offset = "0x1903030", VA = "0x1903030")]
		public static Vector3 GetBezierPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x1903460", Offset = "0x1903460", VA = "0x1903460")]
		internal static Vector3 AdjustRotationTo360(Vector3 newEulers)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x19035DC", Offset = "0x19035DC", VA = "0x19035DC")]
		public Vector3 NearestVertexTo(GameObject meshBasedComponent, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x1903A3C", Offset = "0x1903A3C", VA = "0x1903A3C")]
		internal static Collider CreateTriggerCopy(GameObject gameObject, Collider c)
		{
			return null;
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x19040F8", Offset = "0x19040F8", VA = "0x19040F8")]
		public static string ConvertToBinary(ulong value)
		{
			return null;
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x19042F4", Offset = "0x19042F4", VA = "0x19042F4")]
		public static Vector3 GetClosestPointOnLineSegment(Vector3 lineA, Vector3 lineB, Vector3 somePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x19046C0", Offset = "0x19046C0", VA = "0x19046C0")]
		public static Vector3 AdjustActionPositionGet(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x190482C", Offset = "0x190482C", VA = "0x190482C")]
		public static Vector3 AdjustActionPositionSet(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x1904998", Offset = "0x1904998", VA = "0x1904998")]
		public static int Modulo(int input, int modulo)
		{
			return default(int);
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x1904A08", Offset = "0x1904A08", VA = "0x1904A08")]
		internal static void ResolvePlayspaceWidth(out float autoxwidth, out float autozdepth, out bool truncated, bool switchValues, float xOffset)
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x19055F4", Offset = "0x19055F4", VA = "0x19055F4")]
		internal static string FloatToString(float someFloat)
		{
			return null;
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x190579C", Offset = "0x190579C", VA = "0x190579C")]
		internal static string MetersToFeetAndInch(double meters)
		{
			return null;
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1905930", Offset = "0x1905930", VA = "0x1905930")]
		public static Vector3 RotatePointAroundOrigin(Vector3 point, float angleInDegrees)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x1905B78", Offset = "0x1905B78", VA = "0x1905B78")]
		public static Vector3 RotatePointAroundOriginXY(Vector3 point, float angleInDegrees)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1905DC0", Offset = "0x1905DC0", VA = "0x1905DC0")]
		public static Vector3 RotatePointAroundOtherPoint(Vector3 point, Vector3 rotateAround, float angleInDegrees)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x190628C", Offset = "0x190628C", VA = "0x190628C")]
		public Util()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class VolumetricBezierLineRenderer : MonoBehaviour
	{
		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF74")]
		private GameObject[] cylinders;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 pFrom;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 pTo;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool doRender;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3F4")]
		private float width;

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x190ADA4", Offset = "0x190ADA4", VA = "0x190ADA4")]
		internal void Initialize(float width, Material material)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x190B144", Offset = "0x190B144", VA = "0x190B144")]
		internal void SetPositions(Vector3 from, Vector3 to)
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x190BBE0", Offset = "0x190BBE0", VA = "0x190BBE0")]
		internal void SetPositions(Vector3 from, Vector3 intermediate, Vector3 to)
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x190C46C", Offset = "0x190C46C", VA = "0x190C46C")]
		internal void SetLocalPositions(Vector3 from, Vector3 intermediate, Vector3 to)
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x190CCF8", Offset = "0x190CCF8", VA = "0x190CCF8")]
		internal void SetRenderLine(bool v)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x190CE04", Offset = "0x190CE04", VA = "0x190CE04")]
		public VolumetricBezierLineRenderer()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class VolumetricLineRenderer : MonoBehaviour
	{
		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject cylinder;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF7C")]
		private Vector3 pFrom;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 pTo;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool doRender;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float width;

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x190CE34", Offset = "0x190CE34", VA = "0x190CE34")]
		internal void Initialize(float width, Material material)
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x190D1A0", Offset = "0x190D1A0", VA = "0x190D1A0")]
		internal void SetPositions(Vector3 from, Vector3 to)
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x190D728", Offset = "0x190D728", VA = "0x190D728")]
		internal void SetRenderLine(bool v)
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x190D804", Offset = "0x190D804", VA = "0x190D804")]
		public VolumetricLineRenderer()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class VRInputCanvas : MonoBehaviour
	{
		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3FB")]
		private Canvas canvas;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<GameObject> underHover;

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1906F50", Offset = "0x1906F50", VA = "0x1906F50")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x190749C", Offset = "0x190749C", VA = "0x190749C")]
		internal Vector2 Get2DScreenCoordinatesForWorldPosition(Vector3 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x19079F8", Offset = "0x19079F8", VA = "0x19079F8")]
		internal Vector2 Get2DCanvasCoordinatesForWorldPosition(Vector3 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1907BA0", Offset = "0x1907BA0", VA = "0x1907BA0")]
		internal void SetHoveringObjects(List<GameObject> hovered)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1907BD8", Offset = "0x1907BD8", VA = "0x1907BD8")]
		internal bool HasHoveringObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1907CBC", Offset = "0x1907CBC", VA = "0x1907CBC")]
		public VRInputCanvas()
		{
		}
	}
	[Token(Token = "0x2000537")]
	internal class VRInputEventSystem : EventSystem
	{
		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1907D74", Offset = "0x1907D74", VA = "0x1907D74", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1907FBC", Offset = "0x1907FBC", VA = "0x1907FBC", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x1908000", Offset = "0x1908000", VA = "0x1908000")]
		public VRInputEventSystem()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class VRInputModule : StandaloneInputModule
	{
		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF84")]
		private static VRInputModule vrInputModule;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Ray ControllerRay;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool controllerButtonDown;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool wasDownLastFrame;

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x19080E8", Offset = "0x19080E8", VA = "0x19080E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x19082D4", Offset = "0x19082D4", VA = "0x19082D4")]
		public static VRInputModule GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x1908354", Offset = "0x1908354", VA = "0x1908354", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x1909A88", Offset = "0x1909A88", VA = "0x1909A88")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class VRInputRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE402")]
		private VRInputCanvas canvas;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private BoxCollider[] boxColliders;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF8C")]
		private int layerMask;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Graphic graphic;

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x1909AB8", Offset = "0x1909AB8", VA = "0x1909AB8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x1909B58", Offset = "0x1909B58", VA = "0x1909B58", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x1909C10", Offset = "0x1909C10", VA = "0x1909C10", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x190A8E4", Offset = "0x190A8E4", VA = "0x190A8E4")]
		public VRInputRaycaster()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class WaveformPainter : MonoBehaviour
	{
		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int height;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE409")]
		public Color waveformColor;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color bgColor;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4DF94")]
		private int resolution;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image waveformImage;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject retrievingWaveformText;

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x190F450", Offset = "0x190F450", VA = "0x190F450")]
		public void PaintSpectrum(AudioClip audio)
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x190FE00", Offset = "0x190FE00", VA = "0x190FE00")]
		public void PaintSpectrum2(AudioClip audio)
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x19109F0", Offset = "0x19109F0", VA = "0x19109F0")]
		private AudioClip CloneAudioClip(AudioClip audioClip, string name)
		{
			return null;
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x1910D58", Offset = "0x1910D58", VA = "0x1910D58")]
		public WaveformPainter()
		{
		}
	}
}
