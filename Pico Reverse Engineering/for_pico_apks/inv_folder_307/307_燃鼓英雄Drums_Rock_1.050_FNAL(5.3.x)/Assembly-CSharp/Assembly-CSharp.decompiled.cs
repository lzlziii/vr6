using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using DG.Tweening;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Pico.Platform;
using Pico.Platform.Models;
using Pixelplacement;
using Pixelplacement.TweenSystem;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CustomScrollBar : Scrollbar
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private float fixedSize;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xD581D8", Offset = "0xD581D8", VA = "0xD581D8")]
	public void SetFixedSize()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xD58334", Offset = "0xD58334", VA = "0xD58334")]
	public CustomScrollBar()
	{
	}
}
[Token(Token = "0x2000003")]
public class Boss_1 : Enemy
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject Horns;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject heartPos;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject meteorite;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject insMeteo;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject PitPOS;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Material HornsSteamMat;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private BOSSSTATE state;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float StartTime;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool summon;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int meteo;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int meteoKilled;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x2025344", Offset = "0x2025344", VA = "0x2025344", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x202557C", Offset = "0x202557C", VA = "0x202557C")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x20255F8", Offset = "0x20255F8", VA = "0x20255F8")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x2025680", Offset = "0x2025680", VA = "0x2025680")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2025700", Offset = "0x2025700", VA = "0x2025700")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2025780", Offset = "0x2025780", VA = "0x2025780")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2025AA8", Offset = "0x2025AA8", VA = "0x2025AA8", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x2025B0C", Offset = "0x2025B0C", VA = "0x2025B0C")]
	private void Summon()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x2025B9C", Offset = "0x2025B9C", VA = "0x2025B9C")]
	private void Appear()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2025C18", Offset = "0x2025C18", VA = "0x2025C18")]
	public void Taunt()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2025C94", Offset = "0x2025C94", VA = "0x2025C94")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x2025794", Offset = "0x2025794", VA = "0x2025794")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x2025E98", Offset = "0x2025E98", VA = "0x2025E98")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x2025EB8", Offset = "0x2025EB8", VA = "0x2025EB8", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x2025F8C", Offset = "0x2025F8C", VA = "0x2025F8C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x202602C", Offset = "0x202602C", VA = "0x202602C")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x20262C4", Offset = "0x20262C4", VA = "0x20262C4", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x20262C8", Offset = "0x20262C8", VA = "0x20262C8")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x2026374", Offset = "0x2026374", VA = "0x2026374")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x2026414", Offset = "0x2026414", VA = "0x2026414")]
	public void BigScale()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x2025D34", Offset = "0x2025D34", VA = "0x2025D34")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x20264BC", Offset = "0x20264BC", VA = "0x20264BC")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x20279A8", Offset = "0x20279A8", VA = "0x20279A8")]
	public Boss_1()
	{
	}
}
[Token(Token = "0x2000004")]
public enum BOSSSTATE
{
	[Token(Token = "0x400000F")]
	PAUSE,
	[Token(Token = "0x4000010")]
	APPEAR,
	[Token(Token = "0x4000011")]
	IDLE,
	[Token(Token = "0x4000012")]
	SUMMON,
	[Token(Token = "0x4000013")]
	IDLESUMMON,
	[Token(Token = "0x4000014")]
	TAUNT,
	[Token(Token = "0x4000015")]
	RECEIVE
}
[Token(Token = "0x2000005")]
public class Boss_2 : Enemy
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject ceiling;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject floorImpact;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject roar;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject Horns;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject heartPos;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject meteorite;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject insMeteo;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject PitPOS;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private BOSSSTATE state;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float StartTime;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int summon;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int meteo;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int meteoKilled;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x20279B0", Offset = "0x20279B0", VA = "0x20279B0", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x2027BC4", Offset = "0x2027BC4", VA = "0x2027BC4")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x2027C40", Offset = "0x2027C40", VA = "0x2027C40")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x2027CC8", Offset = "0x2027CC8", VA = "0x2027CC8")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x2027D44", Offset = "0x2027D44", VA = "0x2027D44")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x2027DC0", Offset = "0x2027DC0", VA = "0x2027DC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x20280C8", Offset = "0x20280C8", VA = "0x20280C8", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x202812C", Offset = "0x202812C", VA = "0x202812C")]
	private void Summon()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x202820C", Offset = "0x202820C", VA = "0x202820C")]
	private void Disappear()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x202827C", Offset = "0x202827C", VA = "0x202827C")]
	private void Appear()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x20282F8", Offset = "0x20282F8", VA = "0x20282F8")]
	public void Taunt()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x2028374", Offset = "0x2028374", VA = "0x2028374")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x2027DD4", Offset = "0x2027DD4", VA = "0x2027DD4")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x20285C8", Offset = "0x20285C8", VA = "0x20285C8")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x20285F0", Offset = "0x20285F0", VA = "0x20285F0", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x20286BC", Offset = "0x20286BC", VA = "0x20286BC")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x202875C", Offset = "0x202875C", VA = "0x202875C")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x20289FC", Offset = "0x20289FC", VA = "0x20289FC", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x2028A00", Offset = "0x2028A00", VA = "0x2028A00")]
	public void BossRoar()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x2027BA4", Offset = "0x2027BA4", VA = "0x2027BA4")]
	public void BossCeilParticle()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x2028A20", Offset = "0x2028A20", VA = "0x2028A20")]
	public void BossFloorParticle()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x2028A40", Offset = "0x2028A40", VA = "0x2028A40")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x2028AEC", Offset = "0x2028AEC", VA = "0x2028AEC")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x2028B8C", Offset = "0x2028B8C", VA = "0x2028B8C")]
	public void BigScale()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x2028464", Offset = "0x2028464", VA = "0x2028464")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x2028C34", Offset = "0x2028C34", VA = "0x2028C34")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x202A120", Offset = "0x202A120", VA = "0x202A120")]
	public Boss_2()
	{
	}
}
[Token(Token = "0x2000006")]
public class Boss_3 : Enemy
{
	[Serializable]
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C644", Offset = "0xA5C644")]
	private sealed class <>c
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__32_0;

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x202CB70", Offset = "0x202CB70", VA = "0x202CB70")]
		public <>c()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x202CB78", Offset = "0x202CB78", VA = "0x202CB78")]
		internal bool <DeadLightAnimationIE>b__32_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C654", Offset = "0xA5C654")]
	private sealed class <DeadLightAnimationIE>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boss_3 <>4__this;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <waitTimeStamps>5__2;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x202CEB8", Offset = "0x202CEB8", VA = "0x202CEB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x202CF20", Offset = "0x202CF20", VA = "0x202CF20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x202B3F0", Offset = "0x202B3F0", VA = "0x202B3F0")]
		[DebuggerHidden]
		public <DeadLightAnimationIE>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x202CBDC", Offset = "0x202CBDC", VA = "0x202CBDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x202CBE0", Offset = "0x202CBE0", VA = "0x202CBE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x202CEC0", Offset = "0x202CEC0", VA = "0x202CEC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject heartPos;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject meteorite;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject insMeteo;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject PitPOS;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private BOSSSTATE state;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float StartTime;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool summon;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int meteo;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int meteoKilled;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject PS_Glow;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject[] PS_Light;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject[] PS_Turbo;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool endDeadAnimation;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x202A128", Offset = "0x202A128", VA = "0x202A128", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x202A330", Offset = "0x202A330", VA = "0x202A330")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x202A3AC", Offset = "0x202A3AC", VA = "0x202A3AC")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x202A434", Offset = "0x202A434", VA = "0x202A434")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x202A4B4", Offset = "0x202A4B4", VA = "0x202A4B4")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x202A534", Offset = "0x202A534", VA = "0x202A534")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x202A85C", Offset = "0x202A85C", VA = "0x202A85C", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x202A8C0", Offset = "0x202A8C0", VA = "0x202A8C0")]
	private void Summon()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x202A950", Offset = "0x202A950", VA = "0x202A950")]
	private void Appear()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x202A9CC", Offset = "0x202A9CC", VA = "0x202A9CC")]
	public void Taunt()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x202AA48", Offset = "0x202AA48", VA = "0x202AA48")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x202A548", Offset = "0x202A548", VA = "0x202A548")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x202AC4C", Offset = "0x202AC4C", VA = "0x202AC4C")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x202AC6C", Offset = "0x202AC6C", VA = "0x202AC6C", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x202AE8C", Offset = "0x202AE8C", VA = "0x202AE8C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x202AF2C", Offset = "0x202AF2C", VA = "0x202AF2C")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x202B1C4", Offset = "0x202B1C4", VA = "0x202B1C4")]
	public void SetEndDeadAnimation()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x202B2B8", Offset = "0x202B2B8", VA = "0x202B2B8")]
	public void DeadLightAnimation()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x202B374", Offset = "0x202B374", VA = "0x202B374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA62F88", Offset = "0xA62F88")]
	private IEnumerator DeadLightAnimationIE()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x202B41C", Offset = "0x202B41C", VA = "0x202B41C", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x202B420", Offset = "0x202B420", VA = "0x202B420")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x202B4CC", Offset = "0x202B4CC", VA = "0x202B4CC")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x202B56C", Offset = "0x202B56C", VA = "0x202B56C")]
	public void BigScale()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x202AAE8", Offset = "0x202AAE8", VA = "0x202AAE8")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x202B614", Offset = "0x202B614", VA = "0x202B614")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x202CB00", Offset = "0x202CB00", VA = "0x202CB00")]
	public Boss_3()
	{
	}
}
[Token(Token = "0x2000007")]
public class GordiEnemy : Enemy
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro textHP;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private DG.Tweening.Tween textTween;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float divTempo;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool llampKilled;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xDB5F34", Offset = "0xDB5F34", VA = "0xDB5F34", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xDB6CEC", Offset = "0xDB6CEC", VA = "0xDB6CEC", Slot = "5")]
	protected override void InitVariation()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xDB6F78", Offset = "0xDB6F78", VA = "0xDB6F78", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xDB76D4", Offset = "0xDB76D4", VA = "0xDB76D4", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xDB7388", Offset = "0xDB7388", VA = "0xDB7388")]
	private void Recoil()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xDB7B5C", Offset = "0xDB7B5C", VA = "0xDB7B5C", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xDB7CA4", Offset = "0xDB7CA4", VA = "0xDB7CA4", Slot = "34")]
	public override void Miss()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xDB7F20", Offset = "0xDB7F20", VA = "0xDB7F20", Slot = "31")]
	public override void ChangeTextState(bool _state)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xDB7F5C", Offset = "0xDB7F5C", VA = "0xDB7F5C")]
	public GordiEnemy()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xDB7F6C", Offset = "0xDB7F6C", VA = "0xDB7F6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA62FEC", Offset = "0xA62FEC")]
	private void <Recoil>b__9_0()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5B930", Offset = "0xA5B930")]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C664", Offset = "0xA5C664")]
	private sealed class <ReturnToOrigin>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xD6C828", Offset = "0xD6C828", VA = "0xD6C828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xD6C890", Offset = "0xD6C890", VA = "0xD6C890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xD6C670", Offset = "0xD6C670", VA = "0xD6C670")]
		[DebuggerHidden]
		public <ReturnToOrigin>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD6C6B4", Offset = "0xD6C6B4", VA = "0xD6C6B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xD6C6B8", Offset = "0xD6C6B8", VA = "0xD6C6B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD6C830", Offset = "0xD6C830", VA = "0xD6C830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject deathPS;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject goodDeathPS;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject perfectDeathPS;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject killPS;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject timingPS;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject timingFailPS;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject llampPS;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject failPS;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject x3PS;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] variations;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3 goal;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] baseMtList;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material[] baseLitMtList;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material[] activatedMtList;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SkinnedMeshRenderer Mesh;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IconEnemy[] buttonToDie;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<IconsType> iconsTypesList;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 direction;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 spawnPos;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected EnemyState enemyState;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Coroutine _coroutine;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected float speed;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected float velocity;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected float timeStamp;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected float secPerBeat;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float gravity;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected float AngleSpawn;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected float OGAnimSpeed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected int spawnerID;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected uint id;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected uint hp;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected uint enemyType;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected uint score;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected short damage;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	protected bool hasToActivate;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	protected bool canReceiveHit;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected bool hasReachedMissZoneOnce;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	protected bool hasReachedUIZoneOnce;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
	protected bool hasActivatedPSs;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
	protected bool hasBeenCharged;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected byte iconMaxLength;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	protected byte iconsDoneCount;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	protected bool can_only_recieve_damage_with_spin;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	protected bool killed;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	protected Sprite[] VariationHelpImage;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected GameObject VariationHelp;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	protected GameObject ChargePSs;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected Vector3 perfectPos;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected float diferenciaInicial;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected float lastTimeStamp;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected float initialTimeStamp;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD699E8", Offset = "0xD699E8", VA = "0xD699E8", Slot = "4")]
	public virtual void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD6A5E8", Offset = "0xD6A5E8", VA = "0xD6A5E8", Slot = "5")]
	protected virtual void InitVariation()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD6A714", Offset = "0xD6A714", VA = "0xD6A714")]
	public bool GetHasBeenCharged()
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xD6A71C", Offset = "0xD6A71C", VA = "0xD6A71C", Slot = "6")]
	public virtual void SetCanOnlyRecieveDamageWithSpin(bool _can_only_recieve_damage_with_spin)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xD6A908", Offset = "0xD6A908", VA = "0xD6A908")]
	public uint GetHP()
	{
		return default(uint);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xD6A910", Offset = "0xD6A910", VA = "0xD6A910")]
	public uint GetID()
	{
		return default(uint);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xD6A918", Offset = "0xD6A918", VA = "0xD6A918")]
	public int GetSpawnerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xD6A920", Offset = "0xD6A920", VA = "0xD6A920")]
	public void SetSpawnerID(int _id)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xD6A928", Offset = "0xD6A928", VA = "0xD6A928", Slot = "7")]
	public virtual uint GetEnenemyType()
	{
		return default(uint);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xD6A930", Offset = "0xD6A930", VA = "0xD6A930", Slot = "8")]
	public virtual void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xD6A938", Offset = "0xD6A938", VA = "0xD6A938", Slot = "9")]
	public virtual void PauseAnimation()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD6A9D8", Offset = "0xD6A9D8", VA = "0xD6A9D8", Slot = "10")]
	public virtual void PlayAnimation()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD6AA3C", Offset = "0xD6AA3C", VA = "0xD6AA3C", Slot = "11")]
	public virtual void PauseParticles()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD6AAC4", Offset = "0xD6AAC4", VA = "0xD6AAC4", Slot = "12")]
	public virtual void PlayParticles()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD6AB4C", Offset = "0xD6AB4C", VA = "0xD6AB4C")]
	public IconsType GetCurrentIcon()
	{
		return default(IconsType);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD6AC38", Offset = "0xD6AC38", VA = "0xD6AC38", Slot = "13")]
	public virtual List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD6AC40", Offset = "0xD6AC40", VA = "0xD6AC40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD6AC64", Offset = "0xD6AC64", VA = "0xD6AC64", Slot = "14")]
	public virtual bool CheckReceiveHit(Hit iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD6AD18", Offset = "0xD6AD18", VA = "0xD6AD18", Slot = "15")]
	public virtual void ResetButtons()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD6AD78", Offset = "0xD6AD78", VA = "0xD6AD78", Slot = "16")]
	public virtual bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD6B0E4", Offset = "0xD6B0E4", VA = "0xD6B0E4", Slot = "17")]
	public virtual bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD6B4CC", Offset = "0xD6B4CC", VA = "0xD6B4CC", Slot = "18")]
	public virtual bool ReceiveHit(List<Hit> iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD6B4D4", Offset = "0xD6B4D4", VA = "0xD6B4D4", Slot = "19")]
	public virtual bool IsInMissZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD6B4DC", Offset = "0xD6B4DC", VA = "0xD6B4DC", Slot = "20")]
	public virtual bool IsInIUZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD6B4E4", Offset = "0xD6B4E4", VA = "0xD6B4E4", Slot = "21")]
	public virtual void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xD6B5DC", Offset = "0xD6B5DC", VA = "0xD6B5DC", Slot = "22")]
	public virtual void ActivateTarget()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xD6B5E8", Offset = "0xD6B5E8", VA = "0xD6B5E8", Slot = "23")]
	public virtual void DesactivateTarget()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xD6A5DC", Offset = "0xD6A5DC", VA = "0xD6A5DC")]
	public void StartMove()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xD6B5F0", Offset = "0xD6B5F0", VA = "0xD6B5F0", Slot = "24")]
	public virtual void Hit()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xD6B658", Offset = "0xD6B658", VA = "0xD6B658", Slot = "25")]
	protected virtual void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xD6BD40", Offset = "0xD6BD40", VA = "0xD6BD40", Slot = "26")]
	public virtual void Die()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xD6BF2C", Offset = "0xD6BF2C", VA = "0xD6BF2C", Slot = "27")]
	public virtual void ActiveExplosion()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xD6BFFC", Offset = "0xD6BFFC", VA = "0xD6BFFC", Slot = "28")]
	public virtual void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xD6C0CC", Offset = "0xD6C0CC", VA = "0xD6C0CC", Slot = "29")]
	public virtual void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xD6C19C", Offset = "0xD6C19C", VA = "0xD6C19C", Slot = "30")]
	public virtual void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xD6C2AC", Offset = "0xD6C2AC", VA = "0xD6C2AC", Slot = "31")]
	public virtual void ChangeTextState(bool _state)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xD6C2B0", Offset = "0xD6C2B0", VA = "0xD6C2B0", Slot = "32")]
	public virtual bool CheckTrajectoriaNormal()
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xD6C314", Offset = "0xD6C314", VA = "0xD6C314", Slot = "33")]
	public virtual bool CheckTrajectoriaEasy()
	{
		return default(bool);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xD6C378", Offset = "0xD6C378", VA = "0xD6C378", Slot = "34")]
	public virtual void Miss()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xD6C5F4", Offset = "0xD6C5F4", VA = "0xD6C5F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA62FFC", Offset = "0xA62FFC")]
	protected IEnumerator ReturnToOrigin()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xD6C69C", Offset = "0xD6C69C", VA = "0xD6C69C")]
	public Enemy()
	{
	}
}
[Token(Token = "0x2000009")]
public enum EnemyState
{
	[Token(Token = "0x400006B")]
	NONE,
	[Token(Token = "0x400006C")]
	MOVE,
	[Token(Token = "0x400006D")]
	ATTACK,
	[Token(Token = "0x400006E")]
	RECOIL
}
[Token(Token = "0x200000A")]
public class MinionLobbyAnimation : MonoBehaviour
{
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C674", Offset = "0xA5C674")]
	private sealed class <Animation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinionLobbyAnimation <>4__this;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x11F2D84", Offset = "0x11F2D84", VA = "0x11F2D84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x11F2DEC", Offset = "0x11F2DEC", VA = "0x11F2DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x11F2B34", Offset = "0x11F2B34", VA = "0x11F2B34")]
		[DebuggerHidden]
		public <Animation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x11F2CA8", Offset = "0x11F2CA8", VA = "0x11F2CA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x11F2CAC", Offset = "0x11F2CAC", VA = "0x11F2CAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x11F2D8C", Offset = "0x11F2D8C", VA = "0x11F2D8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float initialVolume;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x11F29E8", Offset = "0x11F29E8", VA = "0x11F29E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x11F2A1C", Offset = "0x11F2A1C", VA = "0x11F2A1C")]
	public void RestartAnimation()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x11F2AC4", Offset = "0x11F2AC4", VA = "0x11F2AC4")]
	public void falseAnimator()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x11F2A48", Offset = "0x11F2A48", VA = "0x11F2A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63060", Offset = "0xA63060")]
	private IEnumerator Animation()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x11F2B60", Offset = "0x11F2B60", VA = "0x11F2B60")]
	public void PlaySFX()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x11F2CA0", Offset = "0x11F2CA0", VA = "0x11F2CA0")]
	public MinionLobbyAnimation()
	{
	}
}
[Token(Token = "0x200000B")]
public class SiameseEnemy : Enemy
{
	[Token(Token = "0x200023A")]
	public delegate void MultiDelegate();

	[Token(Token = "0x200023B")]
	public class SiameseOrder
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IconsType type;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int order;

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xCC8C5C", Offset = "0xCC8C5C", VA = "0xCC8C5C")]
		public SiameseOrder(IconsType _type)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCC8CAC", Offset = "0xCC8CAC", VA = "0xCC8CAC")]
		public static List<IconsType> OrderIconType(List<IconsType> _iconTypeList)
		{
			return null;
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float left_icon_hit_timestamp;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private ushort left_spin_count;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float right_icon_hit_timestamp;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private ushort right_spin_count;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public MultiDelegate myMultiDelegate;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool split;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float goalOffset;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject[] splitSiameses;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject splitLine;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject PS_SiamesGlow;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float[] lineVtxLocal_z;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float[] lineVtxLocal_y;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float fadeInicialLinea;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 deltaPos;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xD96588", Offset = "0xD96588", VA = "0xD96588")]
	private float GetSiamesGoalOffset(List<IconsType> iconList)
	{
		return default(float);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xD967D0", Offset = "0xD967D0", VA = "0xD967D0", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xD97018", Offset = "0xD97018", VA = "0xD97018", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xD9819C", Offset = "0xD9819C", VA = "0xD9819C")]
	private void CheckSplitSiamese()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xD96824", Offset = "0xD96824", VA = "0xD96824")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xD981C4", Offset = "0xD981C4", VA = "0xD981C4", Slot = "5")]
	protected override void InitVariation()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xD98484", Offset = "0xD98484", VA = "0xD98484", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xD98C08", Offset = "0xD98C08", VA = "0xD98C08", Slot = "17")]
	public override bool ReceiveHit(Hit iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xD99398", Offset = "0xD99398", VA = "0xD99398", Slot = "18")]
	public override bool ReceiveHit(List<Hit> _iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xD9A084", Offset = "0xD9A084", VA = "0xD9A084", Slot = "6")]
	public override void SetCanOnlyRecieveDamageWithSpin(bool _can_only_recieve_damage_with_spin)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xD9A370", Offset = "0xD9A370", VA = "0xD9A370", Slot = "22")]
	public override void ActivateTarget()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xD9A388", Offset = "0xD9A388", VA = "0xD9A388", Slot = "23")]
	public override void DesactivateTarget()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xD9A398", Offset = "0xD9A398", VA = "0xD9A398", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xD9A3D4", Offset = "0xD9A3D4", VA = "0xD9A3D4")]
	public SiameseEnemy()
	{
	}
}
[Token(Token = "0x200000C")]
public class SiameseSplit : Enemy
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int splitIdx;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject PS_SiamesGlow;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCC8EF8", Offset = "0xCC8EF8", VA = "0xCC8EF8")]
	public void InitType(int _iconType, float _timeStamp, int _splitIdx)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCC9268", Offset = "0xCC9268", VA = "0xCC9268", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCC94B4", Offset = "0xCC94B4", VA = "0xCC94B4")]
	public void EnableChargePS()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCC94D4", Offset = "0xCC94D4", VA = "0xCC94D4")]
	public SiameseSplit()
	{
	}
}
[Token(Token = "0x200000D")]
public class StartAnimation : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offset;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasAnimationName;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator a;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCD90D8", Offset = "0xCD90D8", VA = "0xCD90D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCD919C", Offset = "0xCD919C", VA = "0xCD919C")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCD91A0", Offset = "0xCD91A0", VA = "0xCD91A0")]
	public StartAnimation()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA5B994", Offset = "0xA5B994")]
public class FastList<T>
{
	[Token(Token = "0x200023C")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C684", Offset = "0xA5C684")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000137")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60010E7")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010E9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E4")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60010E5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010E6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x600009F")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x60000A1")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000A2")]
		set
		{
		}
	}

	[Token(Token = "0x600009D")]
	public FastList()
	{
	}

	[Token(Token = "0x600009E")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000A3")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000A4")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000A5")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000A6")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000A7")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A8")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000A9")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AA")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000AB")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AC")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000AD")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000AE")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000B0")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000B1")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA630C4", Offset = "0xA630C4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000B3")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000B4")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000B5")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000B6")]
	public void Release()
	{
	}
}
[Token(Token = "0x200000F")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xDC4BF0", Offset = "0xDC4BF0", VA = "0xDC4BF0")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000010")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xDC4BBC", Offset = "0xDC4BBC", VA = "0xDC4BBC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000011")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x113E080", Offset = "0x113E080", VA = "0x113E080")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x113E1EC", Offset = "0x113E1EC", VA = "0x113E1EC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x113E590", Offset = "0x113E590", VA = "0x113E590")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x113E738", Offset = "0x113E738", VA = "0x113E738", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x113E764", Offset = "0x113E764", VA = "0x113E764")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000012")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xF4DAD8", Offset = "0xF4DAD8", VA = "0xF4DAD8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF4DB64", Offset = "0xF4DB64", VA = "0xF4DB64")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF4DCD0", Offset = "0xF4DCD0", VA = "0xF4DCD0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000013")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xDB5BCC", Offset = "0xDB5BCC", VA = "0xDB5BCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xDB5BD4", Offset = "0xDB5BD4", VA = "0xDB5BD4")]
		set
		{
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xDB5CFC", Offset = "0xDB5CFC", VA = "0xDB5CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xDB5F18", Offset = "0xDB5F18", VA = "0xDB5F18")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xDB5F20", Offset = "0xDB5F20", VA = "0xDB5F20")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000014")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200023E")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xD86F44", Offset = "0xD86F44", VA = "0xD86F44")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200023F")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62EF8", Offset = "0xA62EF8")]
		public float FakeLatencyMax;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62F10", Offset = "0xA62F10")]
		public float FakeLatencyMin;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62F28", Offset = "0xA62F28")]
		public float LatencyWeight;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62F40", Offset = "0xA62F40")]
		public int MaxSamples;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xD86F4C", Offset = "0xD86F4C", VA = "0xD86F4C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xD870FC", Offset = "0xD870FC", VA = "0xD870FC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xD865C4", Offset = "0xD865C4", VA = "0xD865C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xD866FC", Offset = "0xD866FC", VA = "0xD866FC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xD86A6C", Offset = "0xD86A6C", VA = "0xD86A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xD869C4", Offset = "0xD869C4", VA = "0xD869C4")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xD86CC8", Offset = "0xD86CC8", VA = "0xD86CC8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xD87058", Offset = "0xD87058", VA = "0xD87058")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000015")]
public class P2PManager
{
	[Token(Token = "0x2000240")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40010A9")]
		Update = 1
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x113F890", Offset = "0x113F890", VA = "0x113F890")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x113F950", Offset = "0x113F950", VA = "0x113F950")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x113FA34", Offset = "0x113FA34", VA = "0x113FA34")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x113FAB8", Offset = "0x113FAB8", VA = "0x113FAB8")]
	private void PeerConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x113FC14", Offset = "0x113FC14", VA = "0x113FC14")]
	private void ConnectionStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x113FEFC", Offset = "0x113FEFC", VA = "0x113FEFC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x11402F0", Offset = "0x11402F0", VA = "0x11402F0")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1140594", Offset = "0x1140594", VA = "0x1140594")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x11400C0", Offset = "0x11400C0", VA = "0x11400C0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x11404C4", Offset = "0x11404C4", VA = "0x11404C4")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x11401A8", Offset = "0x11401A8", VA = "0x11401A8")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x11407AC", Offset = "0x11407AC", VA = "0x11407AC")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1140108", Offset = "0x1140108", VA = "0x1140108")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1140508", Offset = "0x1140508", VA = "0x1140508")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1140250", Offset = "0x1140250", VA = "0x1140250")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1140838", Offset = "0x1140838", VA = "0x1140838")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000016")]
public class RemotePlayer
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xD87190", Offset = "0xD87190", VA = "0xD87190")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000017")]
public class RoomManager
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xD87314", Offset = "0xD87314", VA = "0xD87314")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xD873E0", Offset = "0xD873E0", VA = "0xD873E0")]
	private void AcceptingInviteCallback(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xD87540", Offset = "0xD87540", VA = "0xD87540")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xD87650", Offset = "0xD87650", VA = "0xD87650")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xD87704", Offset = "0xD87704", VA = "0xD87704")]
	private void CreateAndJoinPrivateRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xD87838", Offset = "0xD87838", VA = "0xD87838")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xD87570", Offset = "0xD87570", VA = "0xD87570")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xD878C4", Offset = "0xD878C4", VA = "0xD878C4")]
	private void JoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xD87FB4", Offset = "0xD87FB4", VA = "0xD87FB4")]
	private void RoomUpdateCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xD882D8", Offset = "0xD882D8", VA = "0xD882D8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xD87BB8", Offset = "0xD87BB8", VA = "0xD87BB8")]
	private void ProcessRoomData(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000018")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	public enum State
	{
		[Token(Token = "0x40010AB")]
		INITIALIZING,
		[Token(Token = "0x40010AC")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40010AD")]
		CREATING_A_ROOM,
		[Token(Token = "0x40010AE")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40010AF")]
		JOINING_A_ROOM,
		[Token(Token = "0x40010B0")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40010B1")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40010B2")]
		SHUTDOWN
	}

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xCCBE54", Offset = "0xCCBE54", VA = "0xCCBE54")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xCCBEC8", Offset = "0xCCBEC8", VA = "0xCCBEC8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xCCBFA0", Offset = "0xCCBFA0", VA = "0xCCBFA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xCC9FA8", Offset = "0xCC9FA8", VA = "0xCC9FA8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xCCA350", Offset = "0xCCA350", VA = "0xCCA350", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xCCAAC8", Offset = "0xCCAAC8", VA = "0xCCAAC8")]
	private void InitCallback(Oculus.Platform.Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xCCAD90", Offset = "0xCCAD90", VA = "0xCCAD90", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xCCAD94", Offset = "0xCCAD94", VA = "0xCCAD94")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xCCAE88", Offset = "0xCCAE88", VA = "0xCCAE88")]
	private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xCCB5D0", Offset = "0xCCB5D0", VA = "0xCCB5D0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Oculus.Platform.Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xCCBAC8", Offset = "0xCCBAC8", VA = "0xCCBAC8")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xCCBC94", Offset = "0xCCBC94", VA = "0xCCBC94")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xCCBDE4", Offset = "0xCCBDE4", VA = "0xCCBDE4")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xCCA6B4", Offset = "0xCCA6B4", VA = "0xCCA6B4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xCCAC24", Offset = "0xCCAC24", VA = "0xCCAC24")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xCCA768", Offset = "0xCCA768", VA = "0xCCA768")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xCCC0B4", Offset = "0xCCC0B4", VA = "0xCCC0B4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xCCC234", Offset = "0xCCC234", VA = "0xCCC234")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xCCC31C", Offset = "0xCCC31C", VA = "0xCCC31C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xCCC440", Offset = "0xCCC440", VA = "0xCCC440")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xCCC510", Offset = "0xCCC510", VA = "0xCCC510")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xCCACD4", Offset = "0xCCACD4", VA = "0xCCACD4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xCCC93C", Offset = "0xCCC93C", VA = "0xCCC93C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xCCC9C8", Offset = "0xCCC9C8", VA = "0xCCC9C8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xCCC760", Offset = "0xCCC760", VA = "0xCCC760")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xCCCBB8", Offset = "0xCCCBB8", VA = "0xCCCBB8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xCC9F20", Offset = "0xCC9F20", VA = "0xCC9F20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA63128", Offset = "0xA63128")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xCCCCF4", Offset = "0xCCCCF4", VA = "0xCCCCF4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCCCDBC", Offset = "0xCCCDBC", VA = "0xCCCDBC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000019")]
public class VoipManager
{
	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD7AE28", Offset = "0xD7AE28", VA = "0xD7AE28")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD7AEE8", Offset = "0xD7AEE8", VA = "0xD7AEE8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xD7AFCC", Offset = "0xD7AFCC", VA = "0xD7AFCC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xD7B050", Offset = "0xD7B050", VA = "0xD7B050")]
	private void VoipConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xD7B1AC", Offset = "0xD7B1AC", VA = "0xD7B1AC")]
	private void VoipStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200001A")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xDB5848", Offset = "0xDB5848", VA = "0xDB5848")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xDB58C8", Offset = "0xDB58C8", VA = "0xDB58C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xDB5A44", Offset = "0xDB5A44", VA = "0xDB5A44")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xDB5AA8", Offset = "0xDB5AA8", VA = "0xDB5AA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xDB5904", Offset = "0xDB5904", VA = "0xDB5904")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xDB5B64", Offset = "0xDB5B64", VA = "0xDB5B64")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xDB5BC4", Offset = "0xDB5BC4", VA = "0xDB5BC4")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class AvatarLayer
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x2023FFC", Offset = "0x2023FFC", VA = "0x2023FFC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x11408C4", Offset = "0x11408C4", VA = "0x11408C4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xFEFBD4", Offset = "0xFEFBD4", VA = "0xFEFBD4")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000243")]
	public enum HandType
	{
		[Token(Token = "0x40010B5")]
		Right,
		[Token(Token = "0x40010B6")]
		Left,
		[Token(Token = "0x40010B7")]
		Max
	}

	[Token(Token = "0x2000244")]
	public enum HandJoint
	{
		[Token(Token = "0x40010B9")]
		HandBase,
		[Token(Token = "0x40010BA")]
		IndexBase,
		[Token(Token = "0x40010BB")]
		IndexTip,
		[Token(Token = "0x40010BC")]
		ThumbBase,
		[Token(Token = "0x40010BD")]
		ThumbTip,
		[Token(Token = "0x40010BE")]
		Max
	}

	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C694", Offset = "0xA5C694")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xFF1F9C", Offset = "0xFF1F9C", VA = "0xFF1F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xFF2004", Offset = "0xFF2004", VA = "0xFF2004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xFF1988", Offset = "0xFF1988", VA = "0xFF1988")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xFF1E00", Offset = "0xFF1E00", VA = "0xFF1E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xFF1E04", Offset = "0xFF1E04", VA = "0xFF1E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xFF1FA4", Offset = "0xFF1FA4", VA = "0xFF1FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D14C", Offset = "0xA5D14C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D184", Offset = "0xA5D184")]
	public bool EnableBody;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D1BC", Offset = "0xA5D1BC")]
	public bool RecordPackets;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D1F4", Offset = "0xA5D1F4")]
	public bool StartWithControllers;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D22C", Offset = "0xA5D22C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D22C", Offset = "0xA5D22C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D29C", Offset = "0xA5D29C")]
	private bool CombineMeshes;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D2D4", Offset = "0xA5D2D4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D30C", Offset = "0xA5D30C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5D344", Offset = "0xA5D344")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D37C", Offset = "0xA5D37C")]
	public bool EnableLaughter;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400010C")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400010E")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400010F")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000110")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000111")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000112")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xFECA00", Offset = "0xFECA00", VA = "0xFECA00")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xFECE18", Offset = "0xFECE18", VA = "0xFECE18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xFECEA4", Offset = "0xFECEA4", VA = "0xFECEA4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xFECF10", Offset = "0xFECF10", VA = "0xFECF10")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xFED038", Offset = "0xFED038", VA = "0xFED038")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xFED11C", Offset = "0xFED11C", VA = "0xFED11C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xFED1FC", Offset = "0xFED1FC", VA = "0xFED1FC")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xFED3E4", Offset = "0xFED3E4", VA = "0xFED3E4")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xFED4AC", Offset = "0xFED4AC", VA = "0xFED4AC")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xFED530", Offset = "0xFED530", VA = "0xFED530")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xFED618", Offset = "0xFED618", VA = "0xFED618")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xFED6A4", Offset = "0xFED6A4", VA = "0xFED6A4")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xFED7C0", Offset = "0xFED7C0", VA = "0xFED7C0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xFED820", Offset = "0xFED820", VA = "0xFED820")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000122")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xFEDCA4", Offset = "0xFEDCA4", VA = "0xFEDCA4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xFEE004", Offset = "0xFEE004", VA = "0xFEE004")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xFEE1AC", Offset = "0xFEE1AC", VA = "0xFEE1AC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xFEE474", Offset = "0xFEE474", VA = "0xFEE474")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xFEE560", Offset = "0xFEE560", VA = "0xFEE560")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xFEE914", Offset = "0xFEE914", VA = "0xFEE914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xFEEC20", Offset = "0xFEEC20", VA = "0xFEEC20")]
	private void Update()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xFEF64C", Offset = "0xFEF64C", VA = "0xFEF64C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xFEF6A0", Offset = "0xFEF6A0", VA = "0xFEF6A0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xFEE7DC", Offset = "0xFEE7DC", VA = "0xFEE7DC")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xFEE878", Offset = "0xFEE878", VA = "0xFEE878")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xFEF6D0", Offset = "0xFEF6D0", VA = "0xFEF6D0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xFEEF94", Offset = "0xFEEF94", VA = "0xFEEF94")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xFEF918", Offset = "0xFEF918", VA = "0xFEF918")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xFEF738", Offset = "0xFEF738", VA = "0xFEF738")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xFEFC58", Offset = "0xFEFC58", VA = "0xFEFC58")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xFF005C", Offset = "0xFF005C", VA = "0xFF005C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xFF03E4", Offset = "0xFF03E4", VA = "0xFF03E4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xFF0524", Offset = "0xFF0524", VA = "0xFF0524")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xFF06DC", Offset = "0xFF06DC", VA = "0xFF06DC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xFEF148", Offset = "0xFEF148", VA = "0xFEF148")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xFF07B4", Offset = "0xFF07B4", VA = "0xFF07B4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xFEEFA4", Offset = "0xFEEFA4", VA = "0xFEEFA4")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xFF08A8", Offset = "0xFF08A8", VA = "0xFF08A8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xFF0EB0", Offset = "0xFF0EB0", VA = "0xFF0EB0")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xFF1370", Offset = "0xFF1370", VA = "0xFF1370")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xFF13E8", Offset = "0xFF13E8", VA = "0xFF13E8")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xFF1464", Offset = "0xFF1464", VA = "0xFF1464")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xFEF4E0", Offset = "0xFEF4E0", VA = "0xFEF4E0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xFF0970", Offset = "0xFF0970", VA = "0xFF0970")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xFF190C", Offset = "0xFF190C", VA = "0xFF190C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6318C", Offset = "0xA6318C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xFF19B4", Offset = "0xFF19B4", VA = "0xFF19B4")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xFF17B0", Offset = "0xFF17B0", VA = "0xFF17B0")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xFF1A7C", Offset = "0xFF1A7C", VA = "0xFF1A7C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xFF1B68", Offset = "0xFF1B68", VA = "0xFF1B68")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xFF1534", Offset = "0xFF1534", VA = "0xFF1534")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xFF1C54", Offset = "0xFF1C54", VA = "0xFF1C54")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xFF200C", Offset = "0xFF200C", VA = "0xFF200C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xFF20C8", Offset = "0xFF20C8", VA = "0xFF20C8")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xFF33D0", Offset = "0xFF33D0", VA = "0xFF33D0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xFF2F74", Offset = "0xFF2F74", VA = "0xFF2F74")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xFF2D0C", Offset = "0xFF2D0C", VA = "0xFF2D0C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xFF2DE8", Offset = "0xFF2DE8", VA = "0xFF2DE8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xFF3634", Offset = "0xFF3634", VA = "0xFF3634")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400012F")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xFF3BF4", Offset = "0xFF3BF4", VA = "0xFF3BF4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xFF3E6C", Offset = "0xFF3E6C", VA = "0xFF3E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xFF4280", Offset = "0xFF4280", VA = "0xFF4280")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFF0288", Offset = "0xFF0288", VA = "0xFF0288")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xFF4394", Offset = "0xFF4394", VA = "0xFF4394")]
	private void Update()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFF44BC", Offset = "0xFF44BC", VA = "0xFF44BC")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFF4520", Offset = "0xFF4520", VA = "0xFF4520")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xFF3F94", Offset = "0xFF3F94", VA = "0xFF3F94")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xFF4528", Offset = "0xFF4528", VA = "0xFF4528")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFF4588", Offset = "0xFF4588", VA = "0xFF4588")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFF4D6C", Offset = "0xFF4D6C", VA = "0xFF4D6C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFF42E4", Offset = "0xFF42E4", VA = "0xFF42E4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000024")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000246")]
	public enum PacketMode
	{
		[Token(Token = "0x40010C3")]
		SDK,
		[Token(Token = "0x40010C4")]
		Unity
	}

	[Token(Token = "0x2000247")]
	public struct ControllerPose
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1135458", Offset = "0x1135458", VA = "0x1135458")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000248")]
	public struct PoseFrame
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x11355B4", Offset = "0x11355B4", VA = "0x11355B4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x113512C", Offset = "0x113512C", VA = "0x113512C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600015D")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x113513C", Offset = "0x113513C", VA = "0x113513C")]
	private void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11351C8", Offset = "0x11351C8", VA = "0x11351C8")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1135440", Offset = "0x1135440", VA = "0x1135440")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1135448", Offset = "0x1135448", VA = "0x1135448")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x113596C", Offset = "0x113596C", VA = "0x113596C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1135AD8", Offset = "0x1135AD8", VA = "0x1135AD8")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1135B48", Offset = "0x1135B48", VA = "0x1135B48")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1135CB4", Offset = "0x1135CB4", VA = "0x1135CB4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1136058", Offset = "0x1136058", VA = "0x1136058")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1136274", Offset = "0x1136274", VA = "0x1136274", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x11362A0", Offset = "0x11362A0", VA = "0x11362A0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000249")]
	public enum TextureType
	{
		[Token(Token = "0x40010D5")]
		DiffuseTextures,
		[Token(Token = "0x40010D6")]
		NormalMaps,
		[Token(Token = "0x40010D7")]
		RoughnessMaps,
		[Token(Token = "0x40010D8")]
		Count
	}

	[Token(Token = "0x200024A")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200024B")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200024C")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200024D")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x11388CC", Offset = "0x11388CC", VA = "0x11388CC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6A4", Offset = "0xA5C6A4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x11392C8", Offset = "0x11392C8", VA = "0x11392C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x1139330", Offset = "0x1139330", VA = "0x1139330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x11386E0", Offset = "0x11386E0", VA = "0x11386E0")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1138C08", Offset = "0x1138C08", VA = "0x1138C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1138C0C", Offset = "0x1138C0C", VA = "0x1138C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x11392D0", Offset = "0x11392D0", VA = "0x11392D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000163")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000164")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000165")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000166")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1136350", Offset = "0x1136350", VA = "0x1136350")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1136504", Offset = "0x1136504", VA = "0x1136504")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1136544", Offset = "0x1136544", VA = "0x1136544")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1136C94", Offset = "0x1136C94", VA = "0x1136C94")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x11370E4", Offset = "0x11370E4", VA = "0x11370E4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x11365D8", Offset = "0x11365D8", VA = "0x11365D8")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x11371D4", Offset = "0x11371D4", VA = "0x11371D4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x11369F4", Offset = "0x11369F4", VA = "0x11369F4")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1137468", Offset = "0x1137468", VA = "0x1137468")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x11376E0", Offset = "0x11376E0", VA = "0x11376E0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x11377DC", Offset = "0x11377DC", VA = "0x11377DC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1137814", Offset = "0x1137814", VA = "0x1137814")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1136BFC", Offset = "0x1136BFC", VA = "0x1136BFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA631F0", Offset = "0xA631F0")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x113870C", Offset = "0x113870C", VA = "0x113870C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1139338", Offset = "0x1139338", VA = "0x1139338")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x11393A4", Offset = "0x11393A4", VA = "0x11393A4")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1139428", Offset = "0x1139428", VA = "0x1139428")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1139510", Offset = "0x1139510", VA = "0x1139510")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1139680", Offset = "0x1139680", VA = "0x1139680")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x11397A8", Offset = "0x11397A8", VA = "0x11397A8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1139878", Offset = "0x1139878", VA = "0x1139878")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1139A80", Offset = "0x1139A80", VA = "0x1139A80")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1139CD8", Offset = "0x1139CD8", VA = "0x1139CD8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000029")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000181")]
	[Address(RVA = "0x20246A4", Offset = "0x20246A4", VA = "0x20246A4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x20247B8", Offset = "0x20247B8", VA = "0x20247B8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x2024964", Offset = "0x2024964", VA = "0x2024964")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x2024828", Offset = "0x2024828", VA = "0x2024828")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x20248BC", Offset = "0x20248BC", VA = "0x20248BC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002A")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000186")]
	[Address(RVA = "0x20242A4", Offset = "0x20242A4", VA = "0x20242A4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x2024648", Offset = "0x2024648", VA = "0x2024648")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x2024444", Offset = "0x2024444", VA = "0x2024444")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x20244BC", Offset = "0x20244BC", VA = "0x20244BC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x2024558", Offset = "0x2024558", VA = "0x2024558")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400016E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400016F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1139EC8", Offset = "0x1139EC8", VA = "0x1139EC8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1139F54", Offset = "0x1139F54", VA = "0x1139F54", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1139F70", Offset = "0x1139F70", VA = "0x1139F70")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x113A11C", Offset = "0x113A11C", VA = "0x113A11C")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x113A300", Offset = "0x113A300", VA = "0x113A300")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x113A390", Offset = "0x113A390", VA = "0x113A390")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x113A474", Offset = "0x113A474", VA = "0x113A474")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x113A6EC", Offset = "0x113A6EC", VA = "0x113A6EC")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x113AA80", Offset = "0x113AA80", VA = "0x113AA80")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x113AB78", Offset = "0x113AB78", VA = "0x113AB78")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200002D")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000178")]
	Body = 1,
	[Token(Token = "0x4000179")]
	Hands = 2,
	[Token(Token = "0x400017A")]
	Base = 4,
	[Token(Token = "0x400017B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400017C")]
	Expressive = 0x20,
	[Token(Token = "0x400017D")]
	All = -1
}
[Token(Token = "0x200002E")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400017F")]
	AvatarSpecification,
	[Token(Token = "0x4000180")]
	AssetLoaded,
	[Token(Token = "0x4000181")]
	Count
}
[Token(Token = "0x200002F")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000030")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000031")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000187")]
	Mesh,
	[Token(Token = "0x4000188")]
	Texture,
	[Token(Token = "0x4000189")]
	Pose,
	[Token(Token = "0x400018A")]
	Material,
	[Token(Token = "0x400018B")]
	CombinedMesh,
	[Token(Token = "0x400018C")]
	PBSMaterial,
	[Token(Token = "0x400018D")]
	FailedLoad,
	[Token(Token = "0x400018E")]
	Count
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000035")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000037")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001C3")]
	RGB24,
	[Token(Token = "0x40001C4")]
	DXT1,
	[Token(Token = "0x40001C5")]
	DXT5,
	[Token(Token = "0x40001C6")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001C7")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001C8")]
	Count
}
[Token(Token = "0x2000038")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000039")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001D0")]
	SkinnedMeshRender,
	[Token(Token = "0x40001D1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001D2")]
	ProjectorRender,
	[Token(Token = "0x40001D3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001D4")]
	Count
}
[Token(Token = "0x200003A")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001D6")]
	Unknown,
	[Token(Token = "0x40001D7")]
	Default,
	[Token(Token = "0x40001D8")]
	Verbose,
	[Token(Token = "0x40001D9")]
	Debug,
	[Token(Token = "0x40001DA")]
	Info,
	[Token(Token = "0x40001DB")]
	Warn,
	[Token(Token = "0x40001DC")]
	Error,
	[Token(Token = "0x40001DD")]
	Fatal,
	[Token(Token = "0x40001DE")]
	Silent
}
[Token(Token = "0x200003B")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200003C")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001E3")]
	One = 1,
	[Token(Token = "0x40001E4")]
	Two = 2,
	[Token(Token = "0x40001E5")]
	Three = 4,
	[Token(Token = "0x40001E6")]
	Joystick = 8
}
[Token(Token = "0x200003D")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001E8")]
	One = 1,
	[Token(Token = "0x40001E9")]
	Two = 2,
	[Token(Token = "0x40001EA")]
	Joystick = 4,
	[Token(Token = "0x40001EB")]
	ThumbRest = 8,
	[Token(Token = "0x40001EC")]
	Index = 0x10,
	[Token(Token = "0x40001ED")]
	Pointing = 0x40,
	[Token(Token = "0x40001EE")]
	ThumbUp = 0x80
}
[Token(Token = "0x200003E")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000040")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000046")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400020E")]
	Add,
	[Token(Token = "0x400020F")]
	Multiply,
	[Token(Token = "0x4000210")]
	Count
}
[Token(Token = "0x2000047")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000212")]
	Color,
	[Token(Token = "0x4000213")]
	Texture,
	[Token(Token = "0x4000214")]
	TextureSingleChannel,
	[Token(Token = "0x4000215")]
	Parallax,
	[Token(Token = "0x4000216")]
	Count
}
[Token(Token = "0x2000048")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000218")]
	None,
	[Token(Token = "0x4000219")]
	Positional,
	[Token(Token = "0x400021A")]
	ViewReflection,
	[Token(Token = "0x400021B")]
	Fresnel,
	[Token(Token = "0x400021C")]
	Pulse,
	[Token(Token = "0x400021D")]
	Count
}
[Token(Token = "0x2000049")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400021F")]
	Touch,
	[Token(Token = "0x4000220")]
	Malibu,
	[Token(Token = "0x4000221")]
	Go,
	[Token(Token = "0x4000222")]
	Quest,
	[Token(Token = "0x4000223")]
	Count
}
[Token(Token = "0x200004A")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000225")]
	Lowest = 1,
	[Token(Token = "0x4000226")]
	Medium = 3,
	[Token(Token = "0x4000227")]
	Highest = 5
}
[Token(Token = "0x200004B")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000229")]
	Unknown = -1,
	[Token(Token = "0x400022A")]
	One,
	[Token(Token = "0x400022B")]
	Two
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xD857C8", Offset = "0xD857C8", VA = "0xD857C8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB1D7D8", Offset = "0xB1D7D8", VA = "0xB1D7D8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB1D7E0", Offset = "0xB1D7E0", VA = "0xB1D7E0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004D")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD85AFC", Offset = "0xD85AFC", VA = "0xD85AFC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB1DA1C", Offset = "0xB1DA1C", VA = "0xB1DA1C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB1DA24", Offset = "0xB1DA24", VA = "0xB1DA24", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004E")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD84E70", Offset = "0xD84E70", VA = "0xD84E70")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB1D538", Offset = "0xB1D538", VA = "0xB1D538", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB1D540", Offset = "0xB1D540", VA = "0xB1D540", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004F")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD86028", Offset = "0xD86028", VA = "0xD86028")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB1E08C", Offset = "0xB1E08C", VA = "0xB1E08C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB1E094", Offset = "0xB1E094", VA = "0xB1E094", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xFF2014", Offset = "0xFF2014", VA = "0xFF2014")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000052")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000260")]
	FirstPerson = 1,
	[Token(Token = "0x4000261")]
	ThirdPerson = 2,
	[Token(Token = "0x4000262")]
	SelfOccluding = 4
}
[Token(Token = "0x2000053")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000057")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000278")]
	Default,
	[Token(Token = "0x4000279")]
	GripSphere,
	[Token(Token = "0x400027A")]
	GripCube,
	[Token(Token = "0x400027B")]
	Count
}
[Token(Token = "0x2000058")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400027D")]
	Body,
	[Token(Token = "0x400027E")]
	Clothing,
	[Token(Token = "0x400027F")]
	Eyewear,
	[Token(Token = "0x4000280")]
	Hair,
	[Token(Token = "0x4000281")]
	Beard,
	[Token(Token = "0x4000282")]
	Count
}
[Token(Token = "0x2000059")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005A")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200005C")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200005D")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400028C")]
	AvatarHead,
	[Token(Token = "0x400028D")]
	AvatarHand,
	[Token(Token = "0x400028E")]
	Object,
	[Token(Token = "0x400028F")]
	ObjectStatic,
	[Token(Token = "0x4000290")]
	Count
}
[Token(Token = "0x200005E")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000062")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400029C")]
	Point,
	[Token(Token = "0x400029D")]
	Direction,
	[Token(Token = "0x400029E")]
	Spot,
	[Token(Token = "0x400029F")]
	Count
}
[Token(Token = "0x2000063")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000066")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000067")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002B5")]
	None = 0u,
	[Token(Token = "0x40002B6")]
	GazeTarget = 1u,
	[Token(Token = "0x40002B7")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000068")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200006A")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200006B")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200006C")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006D")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xB2CF38", Offset = "0xB2CF38", VA = "0xB2CF38")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002CC")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1136CF4", Offset = "0x1136CF4", VA = "0x1136CF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x113AB88", Offset = "0x113AB88", VA = "0x113AB88")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x113AE1C", Offset = "0x113AE1C", VA = "0x113AE1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x113AE90", Offset = "0x113AE90", VA = "0x113AE90")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x113B6E4", Offset = "0x113B6E4", VA = "0x113B6E4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x113B73C", Offset = "0x113B73C", VA = "0x113B73C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x113B794", Offset = "0x113B794", VA = "0x113B794")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x113B7FC", Offset = "0x113B7FC", VA = "0x113B7FC")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x113B864", Offset = "0x113B864", VA = "0x113B864")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x113B51C", Offset = "0x113B51C", VA = "0x113B51C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x113B944", Offset = "0x113B944", VA = "0x113B944")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x113BA60", Offset = "0x113BA60", VA = "0x113BA60")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x113A66C", Offset = "0x113A66C", VA = "0x113A66C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x113BB40", Offset = "0x113BB40", VA = "0x113BB40")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x113ADD0", Offset = "0x113ADD0", VA = "0x113ADD0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1136EA8", Offset = "0x1136EA8", VA = "0x1136EA8")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x113BC18", Offset = "0x113BC18", VA = "0x113BC18")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200006E")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x113BBD8", Offset = "0x113BBD8", VA = "0x113BBD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x113BDD8", Offset = "0x113BDD8", VA = "0x113BDD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x113BBF8", Offset = "0x113BBF8", VA = "0x113BBF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x113BE08", Offset = "0x113BE08", VA = "0x113BE08")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x113BCAC", Offset = "0x113BCAC", VA = "0x113BCAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x113BE38", Offset = "0x113BE38", VA = "0x113BE38")]
		set
		{
		}
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x113BE90", Offset = "0x113BE90", VA = "0x113BE90")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x113D874", Offset = "0x113D874", VA = "0x113D874")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x113DB4C", Offset = "0x113DB4C", VA = "0x113DB4C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x113D9EC", Offset = "0x113D9EC", VA = "0x113D9EC")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x113DD78", Offset = "0x113DD78", VA = "0x113DD78")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x113DD88", Offset = "0x113DD88", VA = "0x113DD88")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x113DED0", Offset = "0x113DED0", VA = "0x113DED0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x113E070", Offset = "0x113E070", VA = "0x113E070")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002DB")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002DC")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002DD")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x113BF00", Offset = "0x113BF00", VA = "0x113BF00")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x113CE08", Offset = "0x113CE08", VA = "0x113CE08")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x113D024", Offset = "0x113D024", VA = "0x113D024")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x113C53C", Offset = "0x113C53C", VA = "0x113C53C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x113C30C", Offset = "0x113C30C", VA = "0x113C30C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x113C420", Offset = "0x113C420", VA = "0x113C420")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x113D864", Offset = "0x113D864", VA = "0x113D864")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000250")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000251")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xB2CFF4", Offset = "0xB2CFF4", VA = "0xB2CFF4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000252")]
	public struct TextureSet
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xB2D0C8", Offset = "0xB2D0C8", VA = "0xB2D0C8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6B4", Offset = "0xA5C6B4")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x113F644", Offset = "0x113F644", VA = "0x113F644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x113F6AC", Offset = "0x113F6AC", VA = "0x113F6AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x113EFAC", Offset = "0x113EFAC", VA = "0x113EFAC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x113F154", Offset = "0x113F154", VA = "0x113F154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x113F158", Offset = "0x113F158", VA = "0x113F158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x113F64C", Offset = "0x113F64C", VA = "0x113F64C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002E1")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002E2")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002E5")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002E6")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002E7")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002E8")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002E9")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002EA")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002EB")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x113E824", Offset = "0x113E824", VA = "0x113E824")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x113EC78", Offset = "0x113EC78", VA = "0x113EC78")]
	public void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1139278", Offset = "0x1139278", VA = "0x1139278")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x11372B8", Offset = "0x11372B8", VA = "0x11372B8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x113EDE0", Offset = "0x113EDE0", VA = "0x113EDE0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1136F2C", Offset = "0x1136F2C", VA = "0x1136F2C")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x113712C", Offset = "0x113712C", VA = "0x113712C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x113EEFC", Offset = "0x113EEFC", VA = "0x113EEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA632F4", Offset = "0xA632F4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x113B8F8", Offset = "0x113B8F8", VA = "0x113B8F8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x113EFD8", Offset = "0x113EFD8", VA = "0x113EFD8")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x113F6B4", Offset = "0x113F6B4", VA = "0x113F6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x113F820", Offset = "0x113F820", VA = "0x113F820")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000074")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001E8")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD699E0", Offset = "0xD699E0", VA = "0xD699E0")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000075")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D3D4", Offset = "0xA5D3D4")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D40C", Offset = "0xA5D40C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D444", Offset = "0xA5D444")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xDA3C50", Offset = "0xDA3C50", VA = "0xDA3C50")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xDA3C54", Offset = "0xDA3C54", VA = "0xDA3C54")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xDA3CD4", Offset = "0xDA3CD4", VA = "0xDA3CD4")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xDA3EC0", Offset = "0xDA3EC0", VA = "0xDA3EC0")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000076")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xDA3EF0", Offset = "0xDA3EF0", VA = "0xDA3EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xDA3FF4", Offset = "0xDA3FF4", VA = "0xDA3FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xDA4308", Offset = "0xDA4308", VA = "0xDA4308")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xDA4594", Offset = "0xDA4594", VA = "0xDA4594")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xDA45E4", Offset = "0xDA45E4", VA = "0xDA45E4")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000077")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x108C078", Offset = "0x108C078", VA = "0x108C078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x108C338", Offset = "0x108C338", VA = "0x108C338")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x108C47C", Offset = "0x108C47C", VA = "0x108C47C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x108C3B0", Offset = "0x108C3B0", VA = "0x108C3B0")]
	public void Init()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x108A2B0", Offset = "0x108A2B0", VA = "0x108A2B0")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x108C604", Offset = "0x108C604", VA = "0x108C604")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x108A248", Offset = "0x108A248", VA = "0x108A248")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x108A330", Offset = "0x108A330", VA = "0x108A330")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x108C514", Offset = "0x108C514", VA = "0x108C514")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x108C6A4", Offset = "0x108C6A4", VA = "0x108C6A4")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x108C6E0", Offset = "0x108C6E0", VA = "0x108C6E0")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x108C8D4", Offset = "0x108C8D4", VA = "0x108C8D4")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x108C6F0", Offset = "0x108C6F0", VA = "0x108C6F0")]
	private void Display()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x108C984", Offset = "0x108C984", VA = "0x108C984")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000078")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x108D48C", Offset = "0x108D48C", VA = "0x108D48C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000079")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000254")]
	public enum TouchEvent
	{
		[Token(Token = "0x400110B")]
		SingleTap,
		[Token(Token = "0x400110C")]
		DoubleTap,
		[Token(Token = "0x400110D")]
		Left,
		[Token(Token = "0x400110E")]
		Right,
		[Token(Token = "0x400110F")]
		Up,
		[Token(Token = "0x4001110")]
		Down
	}

	[Token(Token = "0x2000255")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1088EA0", Offset = "0x1088EA0", VA = "0x1088EA0")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x108FF60", Offset = "0x108FF60", VA = "0x108FF60")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1090280", Offset = "0x1090280", VA = "0x1090280")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x10900D0", Offset = "0x10900D0", VA = "0x10900D0")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1089D90", Offset = "0x1089D90", VA = "0x1089D90")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200007A")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1090340", Offset = "0x1090340", VA = "0x1090340")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x10903BC", Offset = "0x10903BC", VA = "0x10903BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1090454", Offset = "0x1090454", VA = "0x1090454")]
	private void Update()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x10904B0", Offset = "0x10904B0", VA = "0x10904B0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1090514", Offset = "0x1090514", VA = "0x1090514")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1090518", Offset = "0x1090518", VA = "0x1090518")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200007B")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	public enum Result
	{
		[Token(Token = "0x4001112")]
		Success = 0,
		[Token(Token = "0x4001113")]
		Unknown = -2200,
		[Token(Token = "0x4001114")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001115")]
		InvalidParam = -2202,
		[Token(Token = "0x4001116")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001117")]
		MissingDLL = -2204,
		[Token(Token = "0x4001118")]
		BadVersion = -2205,
		[Token(Token = "0x4001119")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000257")]
	public enum AudioDataType
	{
		[Token(Token = "0x400111B")]
		S16_Mono,
		[Token(Token = "0x400111C")]
		S16_Stereo,
		[Token(Token = "0x400111D")]
		F32_Mono,
		[Token(Token = "0x400111E")]
		F32_Stereo
	}

	[Token(Token = "0x2000258")]
	public enum Viseme
	{
		[Token(Token = "0x4001120")]
		sil,
		[Token(Token = "0x4001121")]
		PP,
		[Token(Token = "0x4001122")]
		FF,
		[Token(Token = "0x4001123")]
		TH,
		[Token(Token = "0x4001124")]
		DD,
		[Token(Token = "0x4001125")]
		kk,
		[Token(Token = "0x4001126")]
		CH,
		[Token(Token = "0x4001127")]
		SS,
		[Token(Token = "0x4001128")]
		nn,
		[Token(Token = "0x4001129")]
		RR,
		[Token(Token = "0x400112A")]
		aa,
		[Token(Token = "0x400112B")]
		E,
		[Token(Token = "0x400112C")]
		ih,
		[Token(Token = "0x400112D")]
		oh,
		[Token(Token = "0x400112E")]
		ou
	}

	[Token(Token = "0x2000259")]
	public enum Signals
	{
		[Token(Token = "0x4001130")]
		VisemeOn,
		[Token(Token = "0x4001131")]
		VisemeOff,
		[Token(Token = "0x4001132")]
		VisemeAmount,
		[Token(Token = "0x4001133")]
		VisemeSmoothing,
		[Token(Token = "0x4001134")]
		LaughterAmount
	}

	[Token(Token = "0x200025A")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001136")]
		Original,
		[Token(Token = "0x4001137")]
		Enhanced,
		[Token(Token = "0x4001138")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200025B")]
	public class Frame
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1089AEC", Offset = "0x1089AEC", VA = "0x1089AEC")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1089B44", Offset = "0x1089B44", VA = "0x1089B44")]
		public void Reset()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1089BD4", Offset = "0x1089BD4", VA = "0x1089BD4")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000306")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1088464", Offset = "0x1088464", VA = "0x1088464")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000210")]
	[Address(RVA = "0x10884F4", Offset = "0x10884F4", VA = "0x10884F4")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1088564", Offset = "0x1088564", VA = "0x1088564")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000212")]
	[Address(RVA = "0x10885F8", Offset = "0x10885F8", VA = "0x10885F8")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000213")]
	[Address(RVA = "0x10886A0", Offset = "0x10886A0", VA = "0x10886A0")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000214")]
	[Address(RVA = "0x108876C", Offset = "0x108876C", VA = "0x108876C")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10887EC", Offset = "0x10887EC", VA = "0x10887EC")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000216")]
	[Address(RVA = "0x108886C", Offset = "0x108886C", VA = "0x108886C")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1088914", Offset = "0x1088914", VA = "0x1088914")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1088A1C", Offset = "0x1088A1C", VA = "0x1088A1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1088EA4", Offset = "0x1088EA4", VA = "0x1088EA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1088D68", Offset = "0x1088D68", VA = "0x1088D68")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1088F84", Offset = "0x1088F84", VA = "0x1088F84")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1089098", Offset = "0x1089098", VA = "0x1089098")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1089108", Offset = "0x1089108", VA = "0x1089108")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1089170", Offset = "0x1089170", VA = "0x1089170")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1089294", Offset = "0x1089294", VA = "0x1089294")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10893CC", Offset = "0x10893CC", VA = "0x10893CC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x10894AC", Offset = "0x10894AC", VA = "0x10894AC")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x108958C", Offset = "0x108958C", VA = "0x108958C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1089690", Offset = "0x1089690", VA = "0x1089690")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1089834", Offset = "0x1089834", VA = "0x1089834")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x10899D0", Offset = "0x10899D0", VA = "0x10899D0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BA3C", Offset = "0xA5BA3C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D47C", Offset = "0xA5D47C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D4B4", Offset = "0xA5D4B4")]
	public bool enableTouchInput;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D4EC", Offset = "0xA5D4EC")]
	public bool audioLoopback;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D524", Offset = "0xA5D524")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D55C", Offset = "0xA5D55C")]
	public bool showVisemes;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D594", Offset = "0xA5D594")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D5CC", Offset = "0xA5D5CC")]
	public bool skipAudioSource;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D604", Offset = "0xA5D604")]
	public float gain;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1089C68", Offset = "0x1089C68", VA = "0x1089C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1089E64", Offset = "0x1089E64", VA = "0x1089E64")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x108A3B0", Offset = "0x108A3B0", VA = "0x108A3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x108A65C", Offset = "0x108A65C", VA = "0x108A65C")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x108A6C0", Offset = "0x108A6C0", VA = "0x108A6C0")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x108A72C", Offset = "0x108A72C", VA = "0x108A72C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x108A890", Offset = "0x108A890", VA = "0x108A890")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x108A9F4", Offset = "0x108A9F4", VA = "0x108A9F4")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x108AB28", Offset = "0x108AB28", VA = "0x108AB28")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x108A3F4", Offset = "0x108A3F4", VA = "0x108A3F4")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x108A174", Offset = "0x108A174", VA = "0x108A174")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x108AB38", Offset = "0x108AB38", VA = "0x108AB38")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x108AC64", Offset = "0x108AC64", VA = "0x108AC64")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BAA0", Offset = "0xA5BAA0")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D63C", Offset = "0xA5D63C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D674", Offset = "0xA5D674")]
	public bool enableAcceleration;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000E")]
	public int Smoothing
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x108ADF0", Offset = "0x108ADF0", VA = "0x108ADF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x108AD04", Offset = "0x108AD04", VA = "0x108AD04")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public uint Context
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x108ADF8", Offset = "0x108ADF8", VA = "0x108ADF8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000010")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x108AE00", Offset = "0x108AE00", VA = "0x108AE00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x108AE08", Offset = "0x108AE08", VA = "0x108AE08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x108AFA8", Offset = "0x108AFA8", VA = "0x108AFA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x108B0C4", Offset = "0x108B0C4", VA = "0x108B0C4")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x108B0CC", Offset = "0x108B0CC", VA = "0x108B0CC")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x108B1C0", Offset = "0x108B1C0", VA = "0x108B1C0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x108B288", Offset = "0x108B288", VA = "0x108B288")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x108AC88", Offset = "0x108AC88", VA = "0x108AC88")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BB04", Offset = "0xA5BB04")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D6AC", Offset = "0xA5D6AC")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x108B300", Offset = "0x108B300", VA = "0x108B300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x108B470", Offset = "0x108B470", VA = "0x108B470")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D6E4", Offset = "0xA5D6E4")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D71C", Offset = "0xA5D71C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D754", Offset = "0xA5D754")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D78C", Offset = "0xA5D78C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D7C4", Offset = "0xA5D7C4")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D7FC", Offset = "0xA5D7FC")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5D834", Offset = "0xA5D834")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D834", Offset = "0xA5D834")]
	public float laughterThreshold;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5D888", Offset = "0xA5D888")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D888", Offset = "0xA5D888")]
	public float laughterMultiplier;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5D8DC", Offset = "0xA5D8DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D8DC", Offset = "0xA5D8DC")]
	public int smoothAmount;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x108B474", Offset = "0x108B474", VA = "0x108B474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x108B5C8", Offset = "0x108B5C8", VA = "0x108B5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x108B878", Offset = "0x108B878", VA = "0x108B878")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x108B6D4", Offset = "0x108B6D4", VA = "0x108B6D4")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x108B788", Offset = "0x108B788", VA = "0x108B788")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x108B948", Offset = "0x108B948", VA = "0x108B948")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x108BA0C", Offset = "0x108BA0C", VA = "0x108BA0C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x108BA74", Offset = "0x108BA74", VA = "0x108BA74")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000080")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5D934", Offset = "0xA5D934")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xA5D934", Offset = "0xA5D934")]
	public Texture[] Textures;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5DB64", Offset = "0xA5DB64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DB64", Offset = "0xA5DB64")]
	public int smoothAmount;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x108BB84", Offset = "0x108BB84", VA = "0x108BB84")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x108BCE8", Offset = "0x108BCE8", VA = "0x108BCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x108BE90", Offset = "0x108BE90", VA = "0x108BE90")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x108BFB4", Offset = "0x108BFB4", VA = "0x108BFB4")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BB68", Offset = "0xA5BB68")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	public enum micActivation
	{
		[Token(Token = "0x400113E")]
		HoldToSpeak,
		[Token(Token = "0x400113F")]
		PushToSpeak,
		[Token(Token = "0x4001140")]
		ConstantSpeak
	}

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DBBC", Offset = "0xA5DBBC")]
	public AudioSource audioSource;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DBF4", Offset = "0xA5DBF4")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DC2C", Offset = "0xA5DC2C")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5DC64", Offset = "0xA5DC64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DC64", Offset = "0xA5DC64")]
	private float micInputVolume;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DCCC", Offset = "0xA5DCCC")]
	private int micFrequency;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DD18", Offset = "0xA5DD18")]
	public micActivation micControl;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DD50", Offset = "0xA5DD50")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DD88", Offset = "0xA5DD88")]
	public string selectedDevice;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000011")]
	public float MicFrequency
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x108CA04", Offset = "0x108CA04", VA = "0x108CA04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x108CA10", Offset = "0x108CA10", VA = "0x108CA10")]
		set
		{
		}
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x108CA9C", Offset = "0x108CA9C", VA = "0x108CA9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x108CB64", Offset = "0x108CB64", VA = "0x108CB64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x108CBB0", Offset = "0x108CBB0", VA = "0x108CBB0")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x108CD00", Offset = "0x108CD00", VA = "0x108CD00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x108D138", Offset = "0x108D138", VA = "0x108D138")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x108D14C", Offset = "0x108D14C", VA = "0x108D14C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x108D164", Offset = "0x108D164", VA = "0x108D164")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x108D168", Offset = "0x108D168", VA = "0x108D168")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x108D1E0", Offset = "0x108D1E0", VA = "0x108D1E0")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x108CC44", Offset = "0x108CC44", VA = "0x108CC44")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x108CFA4", Offset = "0x108CFA4", VA = "0x108CFA4")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x108CE5C", Offset = "0x108CE5C", VA = "0x108CE5C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x108D3D8", Offset = "0x108D3D8", VA = "0x108D3D8")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x108D3E0", Offset = "0x108D3E0", VA = "0x108D3E0")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000082")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x108B3CC", Offset = "0x108B3CC", VA = "0x108B3CC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x108D410", Offset = "0x108D410", VA = "0x108D410")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000083")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public delegate void OnClick();

	[Token(Token = "0x200025E")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200025F")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000260")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6C4", Offset = "0xA5C6C4")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xD597E8", Offset = "0xD597E8", VA = "0xD597E8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xD5A1FC", Offset = "0xD5A1FC", VA = "0xD5A1FC")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6D4", Offset = "0xA5C6D4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xD59A68", Offset = "0xD59A68", VA = "0xD59A68")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xD5A420", Offset = "0xD5A420", VA = "0xD5A420")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6E4", Offset = "0xA5C6E4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xD59CA0", Offset = "0xD59CA0", VA = "0xD59CA0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xD5A698", Offset = "0xD5A698", VA = "0xD5A698")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C6F4", Offset = "0xA5C6F4")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xD59E54", Offset = "0xD59E54", VA = "0xD59E54")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xD5AA4C", Offset = "0xD5AA4C", VA = "0xD5AA4C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C704", Offset = "0xA5C704")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xD5A0C8", Offset = "0xD5A0C8", VA = "0xD5A0C8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xD5AA6C", Offset = "0xD5AA6C", VA = "0xD5AA6C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400033A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400033B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400033C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000349")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400034A")]
	private const float marginH = 16f;

	[Token(Token = "0x400034B")]
	private const float marginV = 16f;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD586B4", Offset = "0xD586B4", VA = "0xD586B4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD58B34", Offset = "0xD58B34", VA = "0xD58B34")]
	public void Show()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD59114", Offset = "0xD59114", VA = "0xD59114")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xD58EC0", Offset = "0xD58EC0", VA = "0xD58EC0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD592BC", Offset = "0xD592BC", VA = "0xD592BC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xD595B4", Offset = "0xD595B4", VA = "0xD595B4")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD597F0", Offset = "0xD597F0", VA = "0xD597F0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD598D4", Offset = "0xD598D4", VA = "0xD598D4")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD59A70", Offset = "0xD59A70", VA = "0xD59A70")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD59B0C", Offset = "0xD59B0C", VA = "0xD59B0C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD59CA8", Offset = "0xD59CA8", VA = "0xD59CA8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD59E5C", Offset = "0xD59E5C", VA = "0xD59E5C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD5A0D0", Offset = "0xD5A0D0", VA = "0xD5A0D0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xD5A180", Offset = "0xD5A180", VA = "0xD5A180")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000084")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDC2028", Offset = "0xDC2028", VA = "0xDC2028")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDC20C4", Offset = "0xDC20C4", VA = "0xDC20C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDC218C", Offset = "0xDC218C", VA = "0xDC218C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDC21C8", Offset = "0xDC21C8", VA = "0xDC21C8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000085")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000266")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400114A")]
		On,
		[Token(Token = "0x400114B")]
		Off,
		[Token(Token = "0x400114C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xDA2D44", Offset = "0xDA2D44", VA = "0xDA2D44")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xDA2D00", Offset = "0xDA2D00", VA = "0xDA2D00")]
		set
		{
		}
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDA2D4C", Offset = "0xDA2D4C", VA = "0xDA2D4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDA2DAC", Offset = "0xDA2DAC", VA = "0xDA2DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDA2EC4", Offset = "0xDA2EC4", VA = "0xDA2EC4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDA2EE0", Offset = "0xDA2EE0", VA = "0xDA2EE0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xDA2F34", Offset = "0xDA2F34", VA = "0xDA2F34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDA3190", Offset = "0xDA3190", VA = "0xDA3190")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xDA32A4", Offset = "0xDA32A4", VA = "0xDA32A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xDA3338", Offset = "0xDA3338", VA = "0xDA3338")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDA3408", Offset = "0xDA3408", VA = "0xDA3408")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xDA34C0", Offset = "0xDA34C0", VA = "0xDA34C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xDA358C", Offset = "0xDA358C", VA = "0xDA358C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000086")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000360")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000361")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DE60", Offset = "0xA5DE60")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DE98", Offset = "0xA5DE98")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DED0", Offset = "0xA5DED0")]
	public float HeightOffset;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DF08", Offset = "0xA5DF08")]
	public float MinimumHeight;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DF40", Offset = "0xA5DF40")]
	public float MaximumHeight;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x2032144", Offset = "0x2032144", VA = "0x2032144")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x203214C", Offset = "0x203214C", VA = "0x203214C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x20321D0", Offset = "0x20321D0", VA = "0x20321D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x203225C", Offset = "0x203225C", VA = "0x203225C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x20322E8", Offset = "0x20322E8", VA = "0x20322E8")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x20326F0", Offset = "0x20326F0", VA = "0x20326F0")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2032998", Offset = "0x2032998", VA = "0x2032998")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000087")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xDABCC8", Offset = "0xDABCC8", VA = "0xDABCC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xDABD8C", Offset = "0xDABD8C", VA = "0xDABD8C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000088")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	public enum States
	{
		[Token(Token = "0x400114E")]
		Ready,
		[Token(Token = "0x400114F")]
		Aim,
		[Token(Token = "0x4001150")]
		CancelAim,
		[Token(Token = "0x4001151")]
		PreTeleport,
		[Token(Token = "0x4001152")]
		CancelTeleport,
		[Token(Token = "0x4001153")]
		Teleporting,
		[Token(Token = "0x4001154")]
		PostTeleport
	}

	[Token(Token = "0x2000268")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001156")]
		None,
		[Token(Token = "0x4001157")]
		Aim,
		[Token(Token = "0x4001158")]
		PreTeleport,
		[Token(Token = "0x4001159")]
		Teleport
	}

	[Token(Token = "0x2000269")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400115B")]
		Point,
		[Token(Token = "0x400115C")]
		Sphere,
		[Token(Token = "0x400115D")]
		Capsule
	}

	[Token(Token = "0x200026A")]
	public class AimData
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA62F58", Offset = "0xA62F58")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700013F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0xDAF074", Offset = "0xDAF074", VA = "0xDAF074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA668EC", Offset = "0xA668EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001129")]
			[Address(RVA = "0xDAF07C", Offset = "0xDAF07C", VA = "0xDAF07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA668FC", Offset = "0xA668FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xDAEFF8", Offset = "0xDAEFF8", VA = "0xDAEFF8")]
		public AimData()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xDAF084", Offset = "0xDAF084", VA = "0xDAF084")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C714", Offset = "0xA5C714")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0xDAEE38", Offset = "0xDAEE38", VA = "0xDAEE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xDAEEA0", Offset = "0xDAEEA0", VA = "0xDAEEA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xDAD280", Offset = "0xDAD280", VA = "0xDAD280")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xDAED30", Offset = "0xDAED30", VA = "0xDAED30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xDAED34", Offset = "0xDAED34", VA = "0xDAED34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xDAEE40", Offset = "0xDAEE40", VA = "0xDAEE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C724", Offset = "0xA5C724")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xDAE7BC", Offset = "0xDAE7BC", VA = "0xDAE7BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xDAE824", Offset = "0xDAE824", VA = "0xDAE824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xDAD774", Offset = "0xDAD774", VA = "0xDAD774")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xDAE66C", Offset = "0xDAE66C", VA = "0xDAE66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xDAE670", Offset = "0xDAE670", VA = "0xDAE670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xDAE7C4", Offset = "0xDAE7C4", VA = "0xDAE7C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C734", Offset = "0xA5C734")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0xDAE8DC", Offset = "0xDAE8DC", VA = "0xDAE8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0xDAE944", Offset = "0xDAE944", VA = "0xDAE944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xDAD964", Offset = "0xDAD964", VA = "0xDAD964")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xDAE82C", Offset = "0xDAE82C", VA = "0xDAE82C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xDAE830", Offset = "0xDAE830", VA = "0xDAE830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xDAE8E4", Offset = "0xDAE8E4", VA = "0xDAE8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C744", Offset = "0xA5C744")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xDAECC0", Offset = "0xDAECC0", VA = "0xDAECC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xDAED28", Offset = "0xDAED28", VA = "0xDAED28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xDADB54", Offset = "0xDADB54", VA = "0xDADB54")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xDAEBDC", Offset = "0xDAEBDC", VA = "0xDAEBDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xDAEBE0", Offset = "0xDAEBE0", VA = "0xDAEBE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xDAECC8", Offset = "0xDAECC8", VA = "0xDAECC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C754", Offset = "0xA5C754")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xDAE9FC", Offset = "0xDAE9FC", VA = "0xDAE9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xDAEA64", Offset = "0xDAEA64", VA = "0xDAEA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xDADD44", Offset = "0xDADD44", VA = "0xDADD44")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xDAE94C", Offset = "0xDAE94C", VA = "0xDAE94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xDAE950", Offset = "0xDAE950", VA = "0xDAE950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xDAEA04", Offset = "0xDAEA04", VA = "0xDAEA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C764", Offset = "0xA5C764")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xDAEF88", Offset = "0xDAEF88", VA = "0xDAEF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0xDAEFF0", Offset = "0xDAEFF0", VA = "0xDAEFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xDADF34", Offset = "0xDADF34", VA = "0xDADF34")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xDAEEA8", Offset = "0xDAEEA8", VA = "0xDAEEA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xDAEEAC", Offset = "0xDAEEAC", VA = "0xDAEEAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xDAEF90", Offset = "0xDAEF90", VA = "0xDAEF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C774", Offset = "0xA5C774")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0xDAEB6C", Offset = "0xDAEB6C", VA = "0xDAEB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0xDAEBD4", Offset = "0xDAEBD4", VA = "0xDAEBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xDAE124", Offset = "0xDAE124", VA = "0xDAE124")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xDAEA6C", Offset = "0xDAEA6C", VA = "0xDAEA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xDAEA70", Offset = "0xDAEA70", VA = "0xDAEA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xDAEB74", Offset = "0xDAEB74", VA = "0xDAEB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DF78", Offset = "0xA5DF78")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DFB0", Offset = "0xA5DFB0")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5DFE8", Offset = "0xA5DFE8")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E020", Offset = "0xA5E020")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E058", Offset = "0xA5E058")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E090", Offset = "0xA5E090")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E0C8", Offset = "0xA5E0C8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E100", Offset = "0xA5E100")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5E138", Offset = "0xA5E138")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E148", Offset = "0xA5E148")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E180", Offset = "0xA5E180")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5E1C8", Offset = "0xA5E1C8")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E1D8", Offset = "0xA5E1D8")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E210", Offset = "0xA5E210")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E248", Offset = "0xA5E248")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E280", Offset = "0xA5E280")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000013")]
	public States CurrentState
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xDAC77C", Offset = "0xDAC77C", VA = "0xDAC77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63358", Offset = "0xA63358")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xDAC784", Offset = "0xDAC784", VA = "0xDAC784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63368", Offset = "0xA63368")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xDAC9B4", Offset = "0xDAC9B4", VA = "0xDAC9B4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000015")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xDAC9DC", Offset = "0xDAC9DC", VA = "0xDAC9DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63398", Offset = "0xA63398")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xDAC9E4", Offset = "0xDAC9E4", VA = "0xDAC9E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA633A8", Offset = "0xA633A8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xDAC78C", Offset = "0xDAC78C", VA = "0xDAC78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63378", Offset = "0xA63378")]
		add
		{
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xDAC830", Offset = "0xDAC830", VA = "0xDAC830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63388", Offset = "0xA63388")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xDAD138", Offset = "0xDAD138", VA = "0xDAD138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA633F0", Offset = "0xA633F0")]
		add
		{
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xDAD1DC", Offset = "0xDAD1DC", VA = "0xDAD1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63400", Offset = "0xA63400")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xDAD2AC", Offset = "0xDAD2AC", VA = "0xDAD2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63474", Offset = "0xA63474")]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xDAD350", Offset = "0xDAD350", VA = "0xDAD350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63484", Offset = "0xA63484")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xDAD3F4", Offset = "0xDAD3F4", VA = "0xDAD3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63494", Offset = "0xA63494")]
		add
		{
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xDAD498", Offset = "0xDAD498", VA = "0xDAD498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA634A4", Offset = "0xA634A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xDAD5B0", Offset = "0xDAD5B0", VA = "0xDAD5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA634B4", Offset = "0xA634B4")]
		add
		{
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xDAD654", Offset = "0xDAD654", VA = "0xDAD654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA634C4", Offset = "0xA634C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xDAD7A0", Offset = "0xDAD7A0", VA = "0xDAD7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63538", Offset = "0xA63538")]
		add
		{
		}
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xDAD844", Offset = "0xDAD844", VA = "0xDAD844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63548", Offset = "0xA63548")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xDAD990", Offset = "0xDAD990", VA = "0xDAD990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA635BC", Offset = "0xA635BC")]
		add
		{
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xDADA34", Offset = "0xDADA34", VA = "0xDADA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA635CC", Offset = "0xA635CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xDADB80", Offset = "0xDADB80", VA = "0xDADB80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63640", Offset = "0xA63640")]
		add
		{
		}
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xDADC24", Offset = "0xDADC24", VA = "0xDADC24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63650", Offset = "0xA63650")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xDADD70", Offset = "0xDADD70", VA = "0xDADD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA636C4", Offset = "0xA636C4")]
		add
		{
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xDADE14", Offset = "0xDADE14", VA = "0xDADE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA636D4", Offset = "0xA636D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xDADF60", Offset = "0xDADF60", VA = "0xDADF60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63748", Offset = "0xA63748")]
		add
		{
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xDAE004", Offset = "0xDAE004", VA = "0xDAE004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63758", Offset = "0xA63758")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xDAE150", Offset = "0xDAE150", VA = "0xDAE150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA637CC", Offset = "0xA637CC")]
		add
		{
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xDAE1F4", Offset = "0xDAE1F4", VA = "0xDAE1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA637DC", Offset = "0xA637DC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDAC44C", Offset = "0xDAC44C", VA = "0xDAC44C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDAC470", Offset = "0xDAC470", VA = "0xDAC470")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xDAC8D4", Offset = "0xDAC8D4", VA = "0xDAC8D4")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xDAC9EC", Offset = "0xDAC9EC", VA = "0xDAC9EC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xDACD44", Offset = "0xDACD44", VA = "0xDACD44")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA633B8", Offset = "0xA633B8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xDACDFC", Offset = "0xDACDFC", VA = "0xDACDFC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDACEF4", Offset = "0xDACEF4", VA = "0xDACEF4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDACF10", Offset = "0xDACF10", VA = "0xDACF10")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDACFD8", Offset = "0xDACFD8", VA = "0xDACFD8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDAD01C", Offset = "0xDAD01C", VA = "0xDAD01C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xDAD084", Offset = "0xDAD084", VA = "0xDAD084", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xDAD130", Offset = "0xDAD130", VA = "0xDAD130", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xDAD0B4", Offset = "0xDAD0B4", VA = "0xDAD0B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63410", Offset = "0xA63410")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xDAD53C", Offset = "0xDAD53C", VA = "0xDAD53C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xDAD6F8", Offset = "0xDAD6F8", VA = "0xDAD6F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA634D4", Offset = "0xA634D4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xDAD8E8", Offset = "0xDAD8E8", VA = "0xDAD8E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63558", Offset = "0xA63558")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xDADAD8", Offset = "0xDADAD8", VA = "0xDADAD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA635DC", Offset = "0xA635DC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xDADCC8", Offset = "0xDADCC8", VA = "0xDADCC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63660", Offset = "0xA63660")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDADEB8", Offset = "0xDADEB8", VA = "0xDADEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA636E4", Offset = "0xA636E4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDAE0A8", Offset = "0xDAE0A8", VA = "0xDAE0A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63768", Offset = "0xA63768")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDAE298", Offset = "0xDAE298", VA = "0xDAE298")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xDAE3DC", Offset = "0xDAE3DC", VA = "0xDAE3DC")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xDAE410", Offset = "0xDAE410", VA = "0xDAE410")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xDAE530", Offset = "0xDAE530", VA = "0xDAE530")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDAE65C", Offset = "0xDAE65C", VA = "0xDAE65C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000089")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xCC94DC", Offset = "0xCC94DC", VA = "0xCC94DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA637EC", Offset = "0xA637EC")]
		add
		{
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xCC9580", Offset = "0xCC9580", VA = "0xCC9580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA637FC", Offset = "0xA637FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xCC9624", Offset = "0xCC9624", VA = "0xCC9624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6380C", Offset = "0xA6380C")]
		add
		{
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xCC96C8", Offset = "0xCC96C8", VA = "0xCC96C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6381C", Offset = "0xA6381C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCC976C", Offset = "0xCC976C", VA = "0xCC976C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCC9844", Offset = "0xCC9844", VA = "0xCC9844")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCC9848", Offset = "0xCC9848", VA = "0xCC9848")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xCC98BC", Offset = "0xCC98BC", VA = "0xCC98BC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xCC9A2C", Offset = "0xCC9A2C", VA = "0xCC9A2C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xCC9D10", Offset = "0xCC9D10", VA = "0xCC9D10")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xCC9F00", Offset = "0xCC9F00", VA = "0xCC9F00")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x203E58C", Offset = "0x203E58C", VA = "0x203E58C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x203E630", Offset = "0x203E630", VA = "0x203E630", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002C8")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x203E724", Offset = "0x203E724", VA = "0x203E724")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200008B")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E378", Offset = "0xA5E378")]
	public float Range;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x203E734", Offset = "0x203E734", VA = "0x203E734", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x203E890", Offset = "0x203E890", VA = "0x203E890")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200008C")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E3B0", Offset = "0xA5E3B0")]
	public float Range;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E3E8", Offset = "0xA5E3E8")]
	public float MinimumElevation;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E420", Offset = "0xA5E420")]
	public float Gravity;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E458", Offset = "0xA5E458")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5E458", Offset = "0xA5E458")]
	public float AimVelocity;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E4B4", Offset = "0xA5E4B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5E4B4", Offset = "0xA5E4B4")]
	public float AimStep;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x203E8A0", Offset = "0x203E8A0", VA = "0x203E8A0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x203EAEC", Offset = "0x203EAEC", VA = "0x203EAEC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E50C", Offset = "0xA5E50C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x203EB00", Offset = "0x203EB00", VA = "0x203EB00")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x203EC04", Offset = "0x203EC04", VA = "0x203EC04")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x203EC34", Offset = "0x203EC34", VA = "0x203EC34")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x203EC64", Offset = "0x203EC64", VA = "0x203EC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x203ED0C", Offset = "0x203ED0C", VA = "0x203ED0C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x203ED78", Offset = "0x203ED78", VA = "0x203ED78", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x203EDE0", Offset = "0x203EDE0", VA = "0x203EDE0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5E544", Offset = "0xA5E544")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E554", Offset = "0xA5E554")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E58C", Offset = "0xA5E58C")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E5C4", Offset = "0xA5E5C4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000016")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x203EEFC", Offset = "0x203EEFC", VA = "0x203EEFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6382C", Offset = "0xA6382C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x203EF04", Offset = "0x203EF04", VA = "0x203EF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6383C", Offset = "0xA6383C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x203F0BC", Offset = "0x203F0BC", VA = "0x203F0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6384C", Offset = "0xA6384C")]
		add
		{
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x203F160", Offset = "0x203F160", VA = "0x203F160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6385C", Offset = "0xA6385C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x203EF10", Offset = "0x203EF10", VA = "0x203EF10")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x203EFA0", Offset = "0x203EFA0", VA = "0x203EFA0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x203F078", Offset = "0x203F078", VA = "0x203F078")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x203F0B8", Offset = "0x203F0B8", VA = "0x203F0B8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x203F204", Offset = "0x203F204", VA = "0x203F204")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x203F26C", Offset = "0x203F26C", VA = "0x203F26C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x203F28C", Offset = "0x203F28C", VA = "0x203F28C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200008F")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C784", Offset = "0xA5C784")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x203F9A4", Offset = "0x203F9A4", VA = "0x203F9A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x203FA0C", Offset = "0x203FA0C", VA = "0x203FA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x203F6CC", Offset = "0x203F6CC", VA = "0x203F6CC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x203F908", Offset = "0x203F908", VA = "0x203F908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x203F90C", Offset = "0x203F90C", VA = "0x203F90C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x203F9AC", Offset = "0x203F9AC", VA = "0x203F9AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C794", Offset = "0xA5C794")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x203F898", Offset = "0x203F898", VA = "0x203F898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x203F900", Offset = "0x203F900", VA = "0x203F900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x203F774", Offset = "0x203F774", VA = "0x203F774")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x203F7F8", Offset = "0x203F7F8", VA = "0x203F7F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x203F7FC", Offset = "0x203F7FC", VA = "0x203F7FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x203F8A0", Offset = "0x203F8A0", VA = "0x203F8A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x203F46C", Offset = "0x203F46C", VA = "0x203F46C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x203F52C", Offset = "0x203F52C", VA = "0x203F52C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x203F58C", Offset = "0x203F58C", VA = "0x203F58C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x203F650", Offset = "0x203F650", VA = "0x203F650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6386C", Offset = "0xA6386C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x203F6F8", Offset = "0x203F6F8", VA = "0x203F6F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA638D0", Offset = "0xA638D0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002E6")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x203F7A0", Offset = "0x203F7A0", VA = "0x203F7A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63934", Offset = "0xA63934")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x203F7CC", Offset = "0x203F7CC", VA = "0x203F7CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63944", Offset = "0xA63944")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5E60C", Offset = "0xA5E60C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E61C", Offset = "0xA5E61C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E654", Offset = "0xA5E654")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E68C", Offset = "0xA5E68C")]
	public bool FastTeleport;

	[Token(Token = "0x17000017")]
	public Transform Pointer
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x203FA14", Offset = "0x203FA14", VA = "0x203FA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63954", Offset = "0xA63954")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x203FA1C", Offset = "0x203FA1C", VA = "0x203FA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63964", Offset = "0xA63964")]
		private set
		{
		}
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x203FA24", Offset = "0x203FA24", VA = "0x203FA24", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x203FB80", Offset = "0x203FB80", VA = "0x203FB80", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x203FC38", Offset = "0x203FC38", VA = "0x203FC38")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000274")]
	public enum InputModes
	{
		[Token(Token = "0x400117F")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001180")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001181")]
		ThumbstickTeleport,
		[Token(Token = "0x4001182")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000275")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001184")]
		A,
		[Token(Token = "0x4001185")]
		B,
		[Token(Token = "0x4001186")]
		LeftTrigger,
		[Token(Token = "0x4001187")]
		LeftThumbstick,
		[Token(Token = "0x4001188")]
		RightTrigger,
		[Token(Token = "0x4001189")]
		RightThumbstick,
		[Token(Token = "0x400118A")]
		X,
		[Token(Token = "0x400118B")]
		Y
	}

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E6C4", Offset = "0xA5E6C4")]
	public InputModes InputMode;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E6FC", Offset = "0xA5E6FC")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E734", Offset = "0xA5E734")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E76C", Offset = "0xA5E76C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x203FC3C", Offset = "0x203FC3C", VA = "0x203FC3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x203FC40", Offset = "0x203FC40", VA = "0x203FC40", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x2040088", Offset = "0x2040088", VA = "0x2040088", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x2040148", Offset = "0x2040148", VA = "0x2040148")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000092")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000276")]
	public enum OrientationModes
	{
		[Token(Token = "0x400118D")]
		HeadRelative,
		[Token(Token = "0x400118E")]
		ForwardFacing
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7A4", Offset = "0xA5C7A4")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x204061C", Offset = "0x204061C", VA = "0x204061C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x2040684", Offset = "0x2040684", VA = "0x2040684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x20403EC", Offset = "0x20403EC", VA = "0x20403EC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x2040568", Offset = "0x2040568", VA = "0x2040568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x204056C", Offset = "0x204056C", VA = "0x204056C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x2040624", Offset = "0x2040624", VA = "0x2040624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x204020C", Offset = "0x204020C", VA = "0x204020C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x20402D4", Offset = "0x20402D4", VA = "0x20402D4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x20402DC", Offset = "0x20402DC", VA = "0x20402DC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x2040328", Offset = "0x2040328", VA = "0x2040328", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x2040370", Offset = "0x2040370", VA = "0x2040370")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63974", Offset = "0xA63974")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002F8")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2040418", Offset = "0x2040418", VA = "0x2040418")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x204053C", Offset = "0x204053C", VA = "0x204053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA639D8", Offset = "0xA639D8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x204068C", Offset = "0x204068C", VA = "0x204068C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x2040690", Offset = "0x2040690", VA = "0x2040690", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x204070C", Offset = "0x204070C", VA = "0x204070C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E7A4", Offset = "0xA5E7A4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E7DC", Offset = "0xA5E7DC")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E814", Offset = "0xA5E814")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E84C", Offset = "0xA5E84C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x2040710", Offset = "0x2040710", VA = "0x2040710", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x2040780", Offset = "0x2040780", VA = "0x2040780", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2040BF8", Offset = "0x2040BF8", VA = "0x2040BF8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E884", Offset = "0xA5E884")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E8BC", Offset = "0xA5E8BC")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E8F4", Offset = "0xA5E8F4")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2040BFC", Offset = "0x2040BFC", VA = "0x2040BFC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2040C40", Offset = "0x2040C40", VA = "0x2040C40", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x20410B0", Offset = "0x20410B0", VA = "0x20410B0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x20410C0", Offset = "0x20410C0", VA = "0x20410C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x20410C4", Offset = "0x20410C4", VA = "0x20410C4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x20410CC", Offset = "0x20410CC", VA = "0x20410CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x20411B4", Offset = "0x20411B4", VA = "0x20411B4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x20411DC", Offset = "0x20411DC", VA = "0x20411DC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000097")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5E92C", Offset = "0xA5E92C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x20411F4", Offset = "0x20411F4", VA = "0x20411F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA639E8", Offset = "0xA639E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x20411FC", Offset = "0x20411FC", VA = "0x20411FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA639F8", Offset = "0xA639F8")]
		private set
		{
		}
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x203E5C0", Offset = "0x203E5C0", VA = "0x203E5C0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x203E6F0", Offset = "0x203E6F0", VA = "0x203E6F0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2041204", Offset = "0x2041204", VA = "0x2041204")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA63A08", Offset = "0xA63A08")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x203ED6C", Offset = "0x203ED6C", VA = "0x203ED6C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x203EDD8", Offset = "0x203EDD8", VA = "0x203EDD8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x203E72C", Offset = "0x203E72C", VA = "0x203E72C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000098")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7B4", Offset = "0xA5C7B4")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x2041890", Offset = "0x2041890", VA = "0x2041890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x20418F8", Offset = "0x20418F8", VA = "0x20418F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x2041480", Offset = "0x2041480", VA = "0x2041480")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x2041618", Offset = "0x2041618", VA = "0x2041618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x204161C", Offset = "0x204161C", VA = "0x204161C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x2041898", Offset = "0x2041898", VA = "0x2041898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E93C", Offset = "0xA5E93C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003D6")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x20412CC", Offset = "0x20412CC", VA = "0x20412CC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x20413B0", Offset = "0x20413B0", VA = "0x20413B0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x20413DC", Offset = "0x20413DC", VA = "0x20413DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x2041404", Offset = "0x2041404", VA = "0x2041404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63A40", Offset = "0xA63A40")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x20414AC", Offset = "0x20414AC", VA = "0x20414AC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000316")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x20414C8", Offset = "0x20414C8", VA = "0x20414C8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x20415EC", Offset = "0x20415EC", VA = "0x20415EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63AA4", Offset = "0xA63AA4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x2041900", Offset = "0x2041900", VA = "0x2041900")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x2041968", Offset = "0x2041968", VA = "0x2041968", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x2041AEC", Offset = "0x2041AEC", VA = "0x2041AEC", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x2041BDC", Offset = "0x2041BDC", VA = "0x2041BDC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA63AB4", Offset = "0xA63AB4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x2041BE0", Offset = "0x2041BE0", VA = "0x2041BE0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E974", Offset = "0xA5E974")]
	public float LOSOffset;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E9AC", Offset = "0xA5E9AC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x2041BEC", Offset = "0x2041BEC", VA = "0x2041BEC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2041E1C", Offset = "0x2041E1C", VA = "0x2041E1C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2041E28", Offset = "0x2041E28", VA = "0x2041E28", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x2041FAC", Offset = "0x2041FAC", VA = "0x2041FAC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200009C")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000322")]
	[Address(RVA = "0x2041FB0", Offset = "0x2041FB0", VA = "0x2041FB0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x2042048", Offset = "0x2042048", VA = "0x2042048", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000324")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x20420DC", Offset = "0x20420DC", VA = "0x20420DC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7C4", Offset = "0xA5C7C4")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x2042468", Offset = "0x2042468", VA = "0x2042468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x20424D0", Offset = "0x20424D0", VA = "0x20424D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x204218C", Offset = "0x204218C", VA = "0x204218C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x204235C", Offset = "0x204235C", VA = "0x204235C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x2042360", Offset = "0x2042360", VA = "0x2042360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x2042470", Offset = "0x2042470", VA = "0x2042470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5E9E4", Offset = "0xA5E9E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5E9E4", Offset = "0xA5E9E4")]
	public float TransitionDuration;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5EA3C", Offset = "0xA5EA3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5EA3C", Offset = "0xA5EA3C")]
	public float TeleportDelay;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5EA90", Offset = "0xA5EA90")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x20420E4", Offset = "0x20420E4", VA = "0x20420E4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x2042110", Offset = "0x2042110", VA = "0x2042110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63AEC", Offset = "0xA63AEC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x20421B8", Offset = "0x20421B8", VA = "0x20421B8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0x20424D8", Offset = "0x20424D8", VA = "0x20424D8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x20424F4", Offset = "0x20424F4", VA = "0x20424F4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7D4", Offset = "0xA5C7D4")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x2042764", Offset = "0x2042764", VA = "0x2042764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x20427CC", Offset = "0x20427CC", VA = "0x20427CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x20425A4", Offset = "0x20425A4", VA = "0x20425A4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x2042624", Offset = "0x2042624", VA = "0x2042624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x2042628", Offset = "0x2042628", VA = "0x2042628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x204276C", Offset = "0x204276C", VA = "0x204276C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5EAC8", Offset = "0xA5EAC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5EAC8", Offset = "0xA5EAC8")]
	public float TransitionDuration;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x20424FC", Offset = "0x20424FC", VA = "0x20424FC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x2042528", Offset = "0x2042528", VA = "0x2042528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63B50", Offset = "0xA63B50")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x20425D0", Offset = "0x20425D0", VA = "0x20425D0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000A0")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200027B")]
	public enum PlabackState
	{
		[Token(Token = "0x40011A1")]
		Idle = 1,
		[Token(Token = "0x40011A2")]
		Preparing,
		[Token(Token = "0x40011A3")]
		Buffering,
		[Token(Token = "0x40011A4")]
		Ready,
		[Token(Token = "0x40011A5")]
		Ended
	}

	[Token(Token = "0x200027C")]
	public enum StereoMode
	{
		[Token(Token = "0x40011A7")]
		Unknown = -1,
		[Token(Token = "0x40011A8")]
		Mono,
		[Token(Token = "0x40011A9")]
		TopBottom,
		[Token(Token = "0x40011AA")]
		LeftRight,
		[Token(Token = "0x40011AB")]
		Mesh
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000019")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x11F6448", Offset = "0x11F6448", VA = "0x11F6448")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x11F6704", Offset = "0x11F6704", VA = "0x11F6704")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x11F33B4", Offset = "0x11F33B4", VA = "0x11F33B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x11F4A1C", Offset = "0x11F4A1C", VA = "0x11F4A1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x11F6948", Offset = "0x11F6948", VA = "0x11F6948")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700001E")]
	public static long Duration
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x11F4C00", Offset = "0x11F4C00", VA = "0x11F4C00")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700001F")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x11F399C", Offset = "0x11F399C", VA = "0x11F399C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000020")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x11F37B4", Offset = "0x11F37B4", VA = "0x11F37B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000021")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x11F38A8", Offset = "0x11F38A8", VA = "0x11F38A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000022")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x11F4B0C", Offset = "0x11F4B0C", VA = "0x11F4B0C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x11F41C4", Offset = "0x11F41C4", VA = "0x11F41C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x11F5268", Offset = "0x11F5268", VA = "0x11F5268")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x11F4FAC", Offset = "0x11F4FAC", VA = "0x11F4FAC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x11F3E54", Offset = "0x11F3E54", VA = "0x11F3E54")]
	public static void Play()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x11F3FD8", Offset = "0x11F3FD8", VA = "0x11F3FD8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x11F4DCC", Offset = "0x11F4DCC", VA = "0x11F4DCC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x11F5468", Offset = "0x11F5468", VA = "0x11F5468")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x11F4858", Offset = "0x11F4858", VA = "0x11F4858")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000A1")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x202D9E0", Offset = "0x202D9E0", VA = "0x202D9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63BB4", Offset = "0xA63BB4")]
		add
		{
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x202DA84", Offset = "0x202DA84", VA = "0x202DA84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63BC4", Offset = "0xA63BC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x202DB28", Offset = "0x202DB28", VA = "0x202DB28", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x202DB3C", Offset = "0x202DB3C", VA = "0x202DB3C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000A2")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200027D")]
	public enum ButtonType
	{
		[Token(Token = "0x40011AD")]
		Play,
		[Token(Token = "0x40011AE")]
		Pause,
		[Token(Token = "0x40011AF")]
		FastForward,
		[Token(Token = "0x40011B0")]
		Rewind,
		[Token(Token = "0x40011B1")]
		SkipForward,
		[Token(Token = "0x40011B2")]
		SkipBack,
		[Token(Token = "0x40011B3")]
		Stop
	}

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000023")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1289C18", Offset = "0x1289C18", VA = "0x1289C18")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1289C20", Offset = "0x1289C20", VA = "0x1289C20")]
		set
		{
		}
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1289C44", Offset = "0x1289C44", VA = "0x1289C44", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x128B110", Offset = "0x128B110", VA = "0x128B110")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200027E")]
	public enum VideoShape
	{
		[Token(Token = "0x40011B5")]
		_360,
		[Token(Token = "0x40011B6")]
		_180,
		[Token(Token = "0x40011B7")]
		Quad
	}

	[Token(Token = "0x200027F")]
	public enum VideoStereo
	{
		[Token(Token = "0x40011B9")]
		Mono,
		[Token(Token = "0x40011BA")]
		TopBottom,
		[Token(Token = "0x40011BB")]
		LeftRight,
		[Token(Token = "0x40011BC")]
		BottomTop
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7E4", Offset = "0xA5C7E4")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x11F5744", Offset = "0x11F5744", VA = "0x11F5744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x11F57AC", Offset = "0x11F57AC", VA = "0x11F57AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x11F3B0C", Offset = "0x11F3B0C", VA = "0x11F3B0C")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x11F55B4", Offset = "0x11F55B4", VA = "0x11F55B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x11F55B8", Offset = "0x11F55B8", VA = "0x11F55B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x11F574C", Offset = "0x11F574C", VA = "0x11F574C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C7F4", Offset = "0xA5C7F4")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x11F3DB8", Offset = "0x11F3DB8", VA = "0x11F3DB8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x11F5194", Offset = "0x11F5194", VA = "0x11F5194")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5EB50", Offset = "0xA5EB50")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5EB60", Offset = "0xA5EB60")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5EB70", Offset = "0xA5EB70")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000024")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x11F3134", Offset = "0x11F3134", VA = "0x11F3134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63BD4", Offset = "0xA63BD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x11F313C", Offset = "0x11F313C", VA = "0x11F313C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63BE4", Offset = "0xA63BE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public long Duration
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x11F3148", Offset = "0x11F3148", VA = "0x11F3148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63BF4", Offset = "0xA63BF4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x11F3150", Offset = "0x11F3150", VA = "0x11F3150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63C04", Offset = "0xA63C04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x11F3158", Offset = "0x11F3158", VA = "0x11F3158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63C14", Offset = "0xA63C14")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x11F3160", Offset = "0x11F3160", VA = "0x11F3160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63C24", Offset = "0xA63C24")]
		private set
		{
		}
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x11F3168", Offset = "0x11F3168", VA = "0x11F3168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x11F341C", Offset = "0x11F341C", VA = "0x11F341C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11F3484", Offset = "0x11F3484", VA = "0x11F3484")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x11F3A90", Offset = "0x11F3A90", VA = "0x11F3A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63C34", Offset = "0xA63C34")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x11F3B38", Offset = "0x11F3B38", VA = "0x11F3B38")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x11F3DC0", Offset = "0x11F3DC0", VA = "0x11F3DC0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x11F3F48", Offset = "0x11F3F48", VA = "0x11F3F48")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x11F40CC", Offset = "0x11F40CC", VA = "0x11F40CC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x11F430C", Offset = "0x11F430C", VA = "0x11F430C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x11F4CF4", Offset = "0x11F4CF4", VA = "0x11F4CF4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x11F4F1C", Offset = "0x11F4F1C", VA = "0x11F4F1C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x11F50A0", Offset = "0x11F50A0", VA = "0x11F50A0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x11F5184", Offset = "0x11F5184", VA = "0x11F5184")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000A4")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	private enum PlaybackState
	{
		[Token(Token = "0x40011C4")]
		Playing,
		[Token(Token = "0x40011C5")]
		Paused,
		[Token(Token = "0x40011C6")]
		Rewinding,
		[Token(Token = "0x40011C7")]
		FastForwarding
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x11F57B4", Offset = "0x11F57B4", VA = "0x11F57B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x11F5A68", Offset = "0x11F5A68", VA = "0x11F5A68")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x11F5B94", Offset = "0x11F5B94", VA = "0x11F5B94")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x11F5CA0", Offset = "0x11F5CA0", VA = "0x11F5CA0")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x11F5D80", Offset = "0x11F5D80", VA = "0x11F5D80")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x11F5C74", Offset = "0x11F5C74", VA = "0x11F5C74")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x11F5E48", Offset = "0x11F5E48", VA = "0x11F5E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x11F595C", Offset = "0x11F595C", VA = "0x11F595C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x11F6200", Offset = "0x11F6200", VA = "0x11F6200")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000A5")]
public static class VectorUtil
{
	[Token(Token = "0x6000365")]
	[Address(RVA = "0xD752EC", Offset = "0xD752EC", VA = "0xD752EC")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000A6")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xD5AE4C", Offset = "0xD5AE4C", VA = "0xD5AE4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xD5B2A4", Offset = "0xD5B2A4", VA = "0xD5B2A4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xD5B35C", Offset = "0xD5B35C", VA = "0xD5B35C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xD5B5B0", Offset = "0xD5B5B0", VA = "0xD5B5B0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xD5B698", Offset = "0xD5B698", VA = "0xD5B698")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xD5B774", Offset = "0xD5B774", VA = "0xD5B774")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xD5B7E0", Offset = "0xD5B7E0", VA = "0xD5B7E0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xD5B7E8", Offset = "0xD5B7E8", VA = "0xD5B7E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63CA8", Offset = "0xA63CA8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xD5B844", Offset = "0xD5B844", VA = "0xD5B844")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63CB8", Offset = "0xA63CB8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xD5B8A0", Offset = "0xD5B8A0", VA = "0xD5B8A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63CC8", Offset = "0xA63CC8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xD5B8FC", Offset = "0xD5B8FC", VA = "0xD5B8FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63CD8", Offset = "0xA63CD8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000A7")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C804", Offset = "0xA5C804")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xDC2660", Offset = "0xDC2660", VA = "0xDC2660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xDC26C8", Offset = "0xDC26C8", VA = "0xDC26C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xDC24E4", Offset = "0xDC24E4", VA = "0xDC24E4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xDC2518", Offset = "0xDC2518", VA = "0xDC2518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xDC251C", Offset = "0xDC251C", VA = "0xDC251C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xDC2668", Offset = "0xDC2668", VA = "0xDC2668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDC21D0", Offset = "0xDC21D0", VA = "0xDC21D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDC22E8", Offset = "0xDC22E8", VA = "0xDC22E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xDC226C", Offset = "0xDC226C", VA = "0xDC226C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63CE8", Offset = "0xA63CE8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xDC2510", Offset = "0xDC2510", VA = "0xDC2510")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000A8")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5EB90", Offset = "0xA5EB90")]
	public int SubdivisionsU;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA5EBAC", Offset = "0xA5EBAC")]
	public int SubdivisionsV;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x2032F48", Offset = "0x2032F48", VA = "0x2032F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x2033A3C", Offset = "0x2033A3C", VA = "0x2033A3C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000A9")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000027")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xDABD94", Offset = "0xDABD94", VA = "0xDABD94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xDABDEC", Offset = "0xDABDEC", VA = "0xDABDEC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xDAC13C", Offset = "0xDAC13C", VA = "0xDAC13C")]
	public void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xDAC220", Offset = "0xDAC220", VA = "0xDAC220")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA63D4C", Offset = "0xA63D4C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600037B")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600037D")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600037E")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600037F")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000380")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000381")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000382")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDAC288", Offset = "0xDAC288", VA = "0xDAC288")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDAC2C4", Offset = "0xDAC2C4", VA = "0xDAC2C4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDAC338", Offset = "0xDAC338", VA = "0xDAC338")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDAC494", Offset = "0xDAC494", VA = "0xDAC494")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDAC568", Offset = "0xDAC568", VA = "0xDAC568")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDAC048", Offset = "0xDAC048", VA = "0xDAC048")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDAC628", Offset = "0xDAC628", VA = "0xDAC628")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDAC690", Offset = "0xDAC690", VA = "0xDAC690")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDAC774", Offset = "0xDAC774", VA = "0xDAC774")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BBEC", Offset = "0xA5BBEC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	public enum DrawMode
	{
		[Token(Token = "0x40011CC")]
		Opaque,
		[Token(Token = "0x40011CD")]
		OpaqueWithClip,
		[Token(Token = "0x40011CE")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40011CF")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000028")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x108EBE4", Offset = "0x108EBE4", VA = "0x108EBE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x108EC78", Offset = "0x108EC78", VA = "0x108EC78")]
		set
		{
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x108D4C0", Offset = "0x108D4C0", VA = "0x108D4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x108E1E4", Offset = "0x108E1E4", VA = "0x108E1E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x108E268", Offset = "0x108E268", VA = "0x108E268")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x108E35C", Offset = "0x108E35C", VA = "0x108E35C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x108E450", Offset = "0x108E450", VA = "0x108E450", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x108E654", Offset = "0x108E654", VA = "0x108E654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x108ED48", Offset = "0x108ED48", VA = "0x108ED48")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000AB")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C814", Offset = "0xA5C814")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xCD9378", Offset = "0xCD9378", VA = "0xCD9378")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xCD9488", Offset = "0xCD9488", VA = "0xCD9488")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xCD91A8", Offset = "0xCD91A8", VA = "0xCD91A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xCD9380", Offset = "0xCD9380", VA = "0xCD9380")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xCD9480", Offset = "0xCD9480", VA = "0xCD9480")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA5BC50", Offset = "0xA5BC50")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000286")]
	public enum RotationAxes
	{
		[Token(Token = "0x40011D3")]
		MouseXAndY,
		[Token(Token = "0x40011D4")]
		MouseX,
		[Token(Token = "0x40011D5")]
		MouseY
	}

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x11F2DF4", Offset = "0x11F2DF4", VA = "0x11F2DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x11F3054", Offset = "0x11F3054", VA = "0x11F3054")]
	private void Start()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x11F3114", Offset = "0x11F3114", VA = "0x11F3114")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40011D7")]
		Uninitialized = -1,
		[Token(Token = "0x40011D8")]
		NotEnabled,
		[Token(Token = "0x40011D9")]
		Success,
		[Token(Token = "0x40011DA")]
		StreamError,
		[Token(Token = "0x40011DB")]
		ProcessError,
		[Token(Token = "0x40011DC")]
		MaxStatValue
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x11F6AA8", Offset = "0x11F6AA8", VA = "0x11F6AA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x11F6CEC", Offset = "0x11F6CEC", VA = "0x11F6CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x11F6ED8", Offset = "0x11F6ED8", VA = "0x11F6ED8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	private enum Parameters
	{
		[Token(Token = "0x40011DE")]
		P_GAIN,
		[Token(Token = "0x40011DF")]
		P_USEINVSQR,
		[Token(Token = "0x40011E0")]
		P_NEAR,
		[Token(Token = "0x40011E1")]
		P_FAR,
		[Token(Token = "0x40011E2")]
		P_RADIUS,
		[Token(Token = "0x40011E3")]
		P_DISABLE_RFL,
		[Token(Token = "0x40011E4")]
		P_AMBISTAT,
		[Token(Token = "0x40011E5")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40011E6")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40011E7")]
		P_SENDLEVEL,
		[Token(Token = "0x40011E8")]
		P_NUM
	}

	[Token(Token = "0x4000456")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000029")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x11F724C", Offset = "0x11F724C", VA = "0x11F724C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x11F7254", Offset = "0x11F7254", VA = "0x11F7254")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float Gain
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x11F7260", Offset = "0x11F7260", VA = "0x11F7260")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x11F7268", Offset = "0x11F7268", VA = "0x11F7268")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x11F72EC", Offset = "0x11F72EC", VA = "0x11F72EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x11F72F4", Offset = "0x11F72F4", VA = "0x11F72F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float Near
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x11F7300", Offset = "0x11F7300", VA = "0x11F7300")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x11F7308", Offset = "0x11F7308", VA = "0x11F7308")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float Far
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x11F7390", Offset = "0x11F7390", VA = "0x11F7390")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x11F7398", Offset = "0x11F7398", VA = "0x11F7398")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x11F7420", Offset = "0x11F7420", VA = "0x11F7420")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x11F7428", Offset = "0x11F7428", VA = "0x11F7428")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float ReverbSend
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x11F74B0", Offset = "0x11F74B0", VA = "0x11F74B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x11F74B8", Offset = "0x11F74B8", VA = "0x11F74B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x11F7540", Offset = "0x11F7540", VA = "0x11F7540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x11F7548", Offset = "0x11F7548", VA = "0x11F7548")]
		set
		{
		}
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x11F6F4C", Offset = "0x11F6F4C", VA = "0x11F6F4C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA63D84", Offset = "0xA63D84")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x11F716C", Offset = "0x11F716C", VA = "0x11F716C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x11F7554", Offset = "0x11F7554", VA = "0x11F7554")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x11F76C8", Offset = "0x11F76C8", VA = "0x11F76C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x11F76CC", Offset = "0x11F76CC", VA = "0x11F76CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11F75C0", Offset = "0x11F75C0", VA = "0x11F75C0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x11F7794", Offset = "0x11F7794", VA = "0x11F7794")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11F7BFC", Offset = "0x11F7BFC", VA = "0x11F7BFC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11F70EC", Offset = "0x11F70EC", VA = "0x11F70EC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11F7CE0", Offset = "0x11F7CE0", VA = "0x11F7CE0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000461")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000463")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x11F7D00", Offset = "0x11F7D00", VA = "0x11F7D00")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11F7D0C", Offset = "0x11F7D0C", VA = "0x11F7D0C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11F7DC4", Offset = "0x11F7DC4", VA = "0x11F7DC4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x11F7D44", Offset = "0x11F7D44", VA = "0x11F7D44")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x11F7E44", Offset = "0x11F7E44", VA = "0x11F7E44")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200028A")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400046A")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000031")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x11FA8E4", Offset = "0x11FA8E4", VA = "0x11FA8E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public string filePath
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x11FA970", Offset = "0x11FA970", VA = "0x11FA970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x11FA9E8", Offset = "0x11FA9E8", VA = "0x11FA9E8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11FAB30", Offset = "0x11FAB30", VA = "0x11FAB30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x11FAB34", Offset = "0x11FAB34", VA = "0x11FAB34")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x11FB094", Offset = "0x11FB094", VA = "0x11FB094")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x11FB42C", Offset = "0x11FB42C", VA = "0x11FB42C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x11FB588", Offset = "0x11FB588", VA = "0x11FB588")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x11FBCCC", Offset = "0x11FBCCC", VA = "0x11FBCCC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x11FBD08", Offset = "0x11FBD08", VA = "0x11FBD08")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x11FD4F4", Offset = "0x11FD4F4", VA = "0x11FD4F4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x11FD3CC", Offset = "0x11FD3CC", VA = "0x11FD3CC")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x11FAECC", Offset = "0x11FAECC", VA = "0x11FAECC")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x11FAD00", Offset = "0x11FAD00", VA = "0x11FAD00")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x11FDB08", Offset = "0x11FDB08", VA = "0x11FDB08")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x11FDF44", Offset = "0x11FDF44", VA = "0x11FDF44")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B1")]
internal class ONSPPropagation
{
	[Token(Token = "0x200028B")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40011EF")]
		Int8,
		[Token(Token = "0x40011F0")]
		UInt8,
		[Token(Token = "0x40011F1")]
		Int16,
		[Token(Token = "0x40011F2")]
		UInt16,
		[Token(Token = "0x40011F3")]
		Int32,
		[Token(Token = "0x40011F4")]
		UInt32,
		[Token(Token = "0x40011F5")]
		Int64,
		[Token(Token = "0x40011F6")]
		UInt64,
		[Token(Token = "0x40011F7")]
		Float16,
		[Token(Token = "0x40011F8")]
		Float32,
		[Token(Token = "0x40011F9")]
		Float64
	}

	[Token(Token = "0x200028C")]
	public class ClientType
	{
		[Token(Token = "0x40011FA")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40011FB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40011FC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40011FD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40011FE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40011FF")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001200")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001201")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001202")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001203")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001204")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001205")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001206")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001207")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001208")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x11F8304", Offset = "0x11F8304", VA = "0x11F8304")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200028D")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600118A")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600118B")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600118C")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600118D")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600118E")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600118F")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001190")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001191")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001192")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001193")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001194")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001195")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001196")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001197")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001198")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200028E")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001209")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700015E")]
		private IntPtr context
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x11F8F7C", Offset = "0x11F8F7C", VA = "0x11F8F7C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x11F8FE0", Offset = "0x11F8FE0", VA = "0x11F8FE0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x11F9070", Offset = "0x11F9070", VA = "0x11F9070")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x11F9100", Offset = "0x11F9100", VA = "0x11F9100", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x11F9124", Offset = "0x11F9124", VA = "0x11F9124")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x11F91B4", Offset = "0x11F91B4", VA = "0x11F91B4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x11F91D8", Offset = "0x11F91D8", VA = "0x11F91D8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x11F9264", Offset = "0x11F9264", VA = "0x11F9264", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x11F9288", Offset = "0x11F9288", VA = "0x11F9288")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x11F9308", Offset = "0x11F9308", VA = "0x11F9308", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x11F9310", Offset = "0x11F9310", VA = "0x11F9310")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x11F9430", Offset = "0x11F9430", VA = "0x11F9430", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x11F9528", Offset = "0x11F9528", VA = "0x11F9528")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x11F95C0", Offset = "0x11F95C0", VA = "0x11F95C0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x11F95CC", Offset = "0x11F95CC", VA = "0x11F95CC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x11F9700", Offset = "0x11F9700", VA = "0x11F9700", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x11F970C", Offset = "0x11F970C", VA = "0x11F970C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x11F97B8", Offset = "0x11F97B8", VA = "0x11F97B8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x11F97C4", Offset = "0x11F97C4", VA = "0x11F97C4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x11F9870", Offset = "0x11F9870", VA = "0x11F9870", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x11F987C", Offset = "0x11F987C", VA = "0x11F987C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x11F9928", Offset = "0x11F9928", VA = "0x11F9928", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x11F9934", Offset = "0x11F9934", VA = "0x11F9934")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x11F99C0", Offset = "0x11F99C0", VA = "0x11F99C0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x11F99E4", Offset = "0x11F99E4", VA = "0x11F99E4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x11F9A64", Offset = "0x11F9A64", VA = "0x11F9A64", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x11F9A6C", Offset = "0x11F9A6C", VA = "0x11F9A6C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x11F9B14", Offset = "0x11F9B14", VA = "0x11F9B14", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x11F9B20", Offset = "0x11F9B20", VA = "0x11F9B20")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x11F9BC8", Offset = "0x11F9BC8", VA = "0x11F9BC8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x11F9BD8", Offset = "0x11F9BD8", VA = "0x11F9BD8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x11F9C68", Offset = "0x11F9C68", VA = "0x11F9C68", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x11F82B0", Offset = "0x11F82B0", VA = "0x11F82B0")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200028F")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400120B")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700015F")]
		private IntPtr context
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x11F9C74", Offset = "0x11F9C74", VA = "0x11F9C74")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x11F80F8", Offset = "0x11F80F8", VA = "0x11F80F8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x11F9CD8", Offset = "0x11F9CD8", VA = "0x11F9CD8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x11F9D68", Offset = "0x11F9D68", VA = "0x11F9D68", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x11F9D8C", Offset = "0x11F9D8C", VA = "0x11F9D8C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x11F9E1C", Offset = "0x11F9E1C", VA = "0x11F9E1C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x11F9E40", Offset = "0x11F9E40", VA = "0x11F9E40")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x11F9ED0", Offset = "0x11F9ED0", VA = "0x11F9ED0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x11F9EF4", Offset = "0x11F9EF4", VA = "0x11F9EF4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x11F9F74", Offset = "0x11F9F74", VA = "0x11F9F74", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x11F9F7C", Offset = "0x11F9F7C", VA = "0x11F9F7C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x11FA09C", Offset = "0x11FA09C", VA = "0x11FA09C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x11FA194", Offset = "0x11FA194", VA = "0x11FA194")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x11FA22C", Offset = "0x11FA22C", VA = "0x11FA22C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x11FA238", Offset = "0x11FA238", VA = "0x11FA238")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x11FA36C", Offset = "0x11FA36C", VA = "0x11FA36C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x11FA378", Offset = "0x11FA378", VA = "0x11FA378")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x11FA424", Offset = "0x11FA424", VA = "0x11FA424", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x11FA430", Offset = "0x11FA430", VA = "0x11FA430")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x11FA4DC", Offset = "0x11FA4DC", VA = "0x11FA4DC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x11FA4E8", Offset = "0x11FA4E8", VA = "0x11FA4E8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x11FA594", Offset = "0x11FA594", VA = "0x11FA594", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x11FA5A0", Offset = "0x11FA5A0", VA = "0x11FA5A0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x11FA630", Offset = "0x11FA630", VA = "0x11FA630", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x11FA654", Offset = "0x11FA654", VA = "0x11FA654")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x11FA6D4", Offset = "0x11FA6D4", VA = "0x11FA6D4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x11FA6DC", Offset = "0x11FA6DC", VA = "0x11FA6DC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x11FA784", Offset = "0x11FA784", VA = "0x11FA784", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x11FA790", Offset = "0x11FA790", VA = "0x11FA790")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x11FA838", Offset = "0x11FA838", VA = "0x11FA838", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x11FA848", Offset = "0x11FA848", VA = "0x11FA848")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x11FA8D8", Offset = "0x11FA8D8", VA = "0x11FA8D8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x11F8188", Offset = "0x11F8188", VA = "0x11F8188")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000290")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400120D")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000160")]
		private IntPtr context
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x11F830C", Offset = "0x11F830C", VA = "0x11F830C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x11F81D4", Offset = "0x11F81D4", VA = "0x11F81D4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x11F8370", Offset = "0x11F8370", VA = "0x11F8370")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x11F8400", Offset = "0x11F8400", VA = "0x11F8400", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x11F8424", Offset = "0x11F8424", VA = "0x11F8424")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x11F84B4", Offset = "0x11F84B4", VA = "0x11F84B4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x11F84D8", Offset = "0x11F84D8", VA = "0x11F84D8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x11F8568", Offset = "0x11F8568", VA = "0x11F8568", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x11F858C", Offset = "0x11F858C", VA = "0x11F858C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x11F860C", Offset = "0x11F860C", VA = "0x11F860C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x11F8614", Offset = "0x11F8614", VA = "0x11F8614")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x11F8734", Offset = "0x11F8734", VA = "0x11F8734", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x11F882C", Offset = "0x11F882C", VA = "0x11F882C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x11F88C4", Offset = "0x11F88C4", VA = "0x11F88C4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x11F88D0", Offset = "0x11F88D0", VA = "0x11F88D0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x11F8A04", Offset = "0x11F8A04", VA = "0x11F8A04", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x11F8A10", Offset = "0x11F8A10", VA = "0x11F8A10")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x11F8ABC", Offset = "0x11F8ABC", VA = "0x11F8ABC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x11F8AC8", Offset = "0x11F8AC8", VA = "0x11F8AC8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x11F8B74", Offset = "0x11F8B74", VA = "0x11F8B74", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x11F8B80", Offset = "0x11F8B80", VA = "0x11F8B80")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x11F8C2C", Offset = "0x11F8C2C", VA = "0x11F8C2C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x11F8C38", Offset = "0x11F8C38", VA = "0x11F8C38")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x11F8CC8", Offset = "0x11F8CC8", VA = "0x11F8CC8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x11F8CEC", Offset = "0x11F8CEC", VA = "0x11F8CEC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x11F8D6C", Offset = "0x11F8D6C", VA = "0x11F8D6C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x11F8D74", Offset = "0x11F8D74", VA = "0x11F8D74")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x11F8E1C", Offset = "0x11F8E1C", VA = "0x11F8E1C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x11F8E28", Offset = "0x11F8E28", VA = "0x11F8E28")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x11F8ED0", Offset = "0x11F8ED0", VA = "0x11F8ED0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x11F8EE0", Offset = "0x11F8EE0", VA = "0x11F8EE0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x11F8F70", Offset = "0x11F8F70", VA = "0x11F8F70", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x11F8264", Offset = "0x11F8264", VA = "0x11F8264")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000033")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x11F7E54", Offset = "0x11F7E54", VA = "0x11F7E54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x11F7ED0", Offset = "0x11F7ED0", VA = "0x11F7ED0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x11F82FC", Offset = "0x11F82FC", VA = "0x11F82FC")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B2")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000291")]
	public enum Preset
	{
		[Token(Token = "0x4001210")]
		Custom,
		[Token(Token = "0x4001211")]
		AcousticTile,
		[Token(Token = "0x4001212")]
		Brick,
		[Token(Token = "0x4001213")]
		BrickPainted,
		[Token(Token = "0x4001214")]
		Carpet,
		[Token(Token = "0x4001215")]
		CarpetHeavy,
		[Token(Token = "0x4001216")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001217")]
		CeramicTile,
		[Token(Token = "0x4001218")]
		Concrete,
		[Token(Token = "0x4001219")]
		ConcreteRough,
		[Token(Token = "0x400121A")]
		ConcreteBlock,
		[Token(Token = "0x400121B")]
		ConcreteBlockPainted,
		[Token(Token = "0x400121C")]
		Curtain,
		[Token(Token = "0x400121D")]
		Foliage,
		[Token(Token = "0x400121E")]
		Glass,
		[Token(Token = "0x400121F")]
		GlassHeavy,
		[Token(Token = "0x4001220")]
		Grass,
		[Token(Token = "0x4001221")]
		Gravel,
		[Token(Token = "0x4001222")]
		GypsumBoard,
		[Token(Token = "0x4001223")]
		PlasterOnBrick,
		[Token(Token = "0x4001224")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001225")]
		Soil,
		[Token(Token = "0x4001226")]
		SoundProof,
		[Token(Token = "0x4001227")]
		Snow,
		[Token(Token = "0x4001228")]
		Steel,
		[Token(Token = "0x4001229")]
		Water,
		[Token(Token = "0x400122A")]
		WoodThin,
		[Token(Token = "0x400122B")]
		WoodThick,
		[Token(Token = "0x400122C")]
		WoodFloor,
		[Token(Token = "0x400122D")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000292")]
	public sealed class Point
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x12061C4", Offset = "0x12061C4", VA = "0x12061C4")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x120633C", Offset = "0x120633C", VA = "0x120633C")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x12063AC", Offset = "0x12063AC", VA = "0x12063AC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA5C824", Offset = "0xA5C824")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5D03C", Offset = "0xA5D03C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x1206818", Offset = "0x1206818", VA = "0x1206818")]
			public <>c()
			{
			}

			[Token(Token = "0x6001446")]
			[Address(RVA = "0x1206820", Offset = "0x1206820", VA = "0x1206820")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001447")]
			[Address(RVA = "0x1206838", Offset = "0x1206838", VA = "0x1206838")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000161")]
		public float Item
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x12063E4", Offset = "0x12063E4", VA = "0x12063E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x12062B8", Offset = "0x12062B8", VA = "0x12062B8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5ECB8", Offset = "0xA5ECB8")]
	public Spectrum absorption;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5ECF0", Offset = "0xA5ECF0")]
	public Spectrum transmission;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA5ED28", Offset = "0xA5ED28")]
	public Spectrum scattering;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000034")]
	public Preset preset
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x11FE028", Offset = "0x11FE028", VA = "0x11FE028")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x11FE030", Offset = "0x11FE030", VA = "0x11FE030")]
		set
		{
		}
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x11FE058", Offset = "0x11FE058", VA = "0x11FE058")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x11FD99C", Offset = "0x11FD99C", VA = "0x11FD99C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x11FE608", Offset = "0x11FE608", VA = "0x11FE608")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x11FE60C", Offset = "0x11FE60C", VA = "0x11FE60C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x11FE05C", Offset = "0x11FE05C", VA = "0x11FE05C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x11FD238", Offset = "0x11FD238", VA = "0x11FD238")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x11FE6F0", Offset = "0x11FE6F0", VA = "0x11FE6F0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x11FEB70", Offset = "0x11FEB70", VA = "0x11FEB70")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x11FEFF0", Offset = "0x11FEFF0", VA = "0x11FEFF0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x11FF470", Offset = "0x11FF470", VA = "0x11FF470")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x11FF8F0", Offset = "0x11FF8F0", VA = "0x11FF8F0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x11FFD70", Offset = "0x11FFD70", VA = "0x11FFD70")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x12001F0", Offset = "0x12001F0", VA = "0x12001F0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1200670", Offset = "0x1200670", VA = "0x1200670")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1200AF0", Offset = "0x1200AF0", VA = "0x1200AF0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1200F70", Offset = "0x1200F70", VA = "0x1200F70")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x12013F0", Offset = "0x12013F0", VA = "0x12013F0")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1201870", Offset = "0x1201870", VA = "0x1201870")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1201CF0", Offset = "0x1201CF0", VA = "0x1201CF0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1202170", Offset = "0x1202170", VA = "0x1202170")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x12025E8", Offset = "0x12025E8", VA = "0x12025E8")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1202A68", Offset = "0x1202A68", VA = "0x1202A68")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1202DC4", Offset = "0x1202DC4", VA = "0x1202DC4")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1203120", Offset = "0x1203120", VA = "0x1203120")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x12035A0", Offset = "0x12035A0", VA = "0x12035A0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1203A20", Offset = "0x1203A20", VA = "0x1203A20")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1203EA0", Offset = "0x1203EA0", VA = "0x1203EA0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x12041FC", Offset = "0x12041FC", VA = "0x12041FC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1204378", Offset = "0x1204378", VA = "0x1204378")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x12046D4", Offset = "0x12046D4", VA = "0x12046D4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1204B4C", Offset = "0x1204B4C", VA = "0x1204B4C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1204FCC", Offset = "0x1204FCC", VA = "0x1204FCC")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1205444", Offset = "0x1205444", VA = "0x1205444")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x12058C4", Offset = "0x12058C4", VA = "0x12058C4")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1205D44", Offset = "0x1205D44", VA = "0x1205D44")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x12061FC", Offset = "0x12061FC", VA = "0x12061FC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1206850", Offset = "0x1206850", VA = "0x1206850")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1206920", Offset = "0x1206920", VA = "0x1206920")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B4")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000035")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x11F6FC0", Offset = "0x11F6FC0", VA = "0x11F6FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1206EF4", Offset = "0x1206EF4", VA = "0x1206EF4")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000475")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1206F04", Offset = "0x1206F04", VA = "0x1206F04")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1206F9C", Offset = "0x1206F9C", VA = "0x1206F9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x12070A8", Offset = "0x12070A8", VA = "0x12070A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x12070AC", Offset = "0x12070AC", VA = "0x12070AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x12070B0", Offset = "0x12070B0", VA = "0x12070B0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B6")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000484")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400048A")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xFEA7BC", Offset = "0xFEA7BC", VA = "0xFEA7BC")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xFEA5EC", Offset = "0xFEA5EC", VA = "0xFEA5EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA63D98", Offset = "0xA63D98")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xFEA7F4", Offset = "0xFEA7F4", VA = "0xFEA7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xFEA938", Offset = "0xFEA938", VA = "0xFEA938")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xFEAA2C", Offset = "0xFEAA2C", VA = "0xFEAA2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xFEB3F0", Offset = "0xFEB3F0", VA = "0xFEB3F0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFEA8A4", Offset = "0xFEA8A4", VA = "0xFEA8A4")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFEA99C", Offset = "0xFEA99C", VA = "0xFEA99C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFEB158", Offset = "0xFEB158", VA = "0xFEB158")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFEB1D8", Offset = "0xFEB1D8", VA = "0xFEB1D8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600040D")]
	[Address(RVA = "0xFEB260", Offset = "0xFEB260", VA = "0xFEB260")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600040E")]
	[Address(RVA = "0xFEB2E8", Offset = "0xFEB2E8", VA = "0xFEB2E8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600040F")]
	[Address(RVA = "0xFEB368", Offset = "0xFEB368", VA = "0xFEB368")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000410")]
	[Address(RVA = "0xFEC264", Offset = "0xFEC264", VA = "0xFEC264")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000411")]
	[Address(RVA = "0xFEC30C", Offset = "0xFEC30C", VA = "0xFEC30C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xFEC3B4", Offset = "0xFEC3B4", VA = "0xFEC3B4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000B7")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000B8")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1206930", Offset = "0x1206930", VA = "0x1206930")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1206934", Offset = "0x1206934", VA = "0x1206934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1206938", Offset = "0x1206938", VA = "0x1206938")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1206AA0", Offset = "0x1206AA0", VA = "0x1206AA0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1206984", Offset = "0x1206984", VA = "0x1206984")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1206A14", Offset = "0x1206A14", VA = "0x1206A14")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1206AEC", Offset = "0x1206AEC", VA = "0x1206AEC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1206B84", Offset = "0x1206B84", VA = "0x1206B84")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1206CF4", Offset = "0x1206CF4", VA = "0x1206CF4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1206E64", Offset = "0x1206E64", VA = "0x1206E64")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BC88", Offset = "0xA5BC88")]
public class ColliderButtonInteraction : MonoBehaviour
{
	[Token(Token = "0x600041F")]
	[Address(RVA = "0x2033A44", Offset = "0x2033A44", VA = "0x2033A44")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x2033AA8", Offset = "0x2033AA8", VA = "0x2033AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x2033B0C", Offset = "0x2033B0C", VA = "0x2033B0C")]
	public ColliderButtonInteraction()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ColliderButtonSelector : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chooser chooser;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool loopAround;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode previousKey;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode nextKey;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ColliderButton[] colliderButtons;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _index;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x2033B14", Offset = "0x2033B14", VA = "0x2033B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x2033BD0", Offset = "0x2033BD0", VA = "0x2033BD0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x2033C30", Offset = "0x2033C30", VA = "0x2033C30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x2033B20", Offset = "0x2033B20", VA = "0x2033B20")]
	public void Next()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x2033C84", Offset = "0x2033C84", VA = "0x2033C84")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x2033D2C", Offset = "0x2033D2C", VA = "0x2033D2C")]
	public ColliderButtonSelector()
	{
	}
}
[Token(Token = "0x20000BB")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BCEC", Offset = "0xA5BCEC")]
public class SplineControlledParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startRadius;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endRadius;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Spline _spline;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x400049C")]
	private const float _previousDiff = 0.01f;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xCD8860", Offset = "0xCD8860", VA = "0xCD8860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xCD88C0", Offset = "0xCD88C0", VA = "0xCD88C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xCD9084", Offset = "0xCD9084", VA = "0xCD9084")]
	public SplineControlledParticleSystem()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ActivateInputLineCollider : MonoBehaviour
{
	[Token(Token = "0x600042B")]
	[Address(RVA = "0x2023E10", Offset = "0x2023E10", VA = "0x2023E10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x2023E3C", Offset = "0x2023E3C", VA = "0x2023E3C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x2023E68", Offset = "0x2023E68", VA = "0x2023E68")]
	public ActivateInputLineCollider()
	{
	}
}
[Token(Token = "0x20000BD")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeSpan;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timestamp;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x2023F24", Offset = "0x2023F24", VA = "0x2023F24")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x2023F4C", Offset = "0x2023F4C", VA = "0x2023F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x2023FEC", Offset = "0x2023FEC", VA = "0x2023FEC")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ButtonTween : MonoBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 OGScale;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 OGPosition;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 TargetScale;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 TargetScale2;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DG.Tweening.Tween scaling;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DG.Tweening.Tween shaking;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float shakeStrength;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float shakeRandomness;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int cursorsHovering;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool BlockReturnToScaleOne;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x202DB44", Offset = "0x202DB44", VA = "0x202DB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x202DBAC", Offset = "0x202DBAC", VA = "0x202DBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x202DD0C", Offset = "0x202DD0C", VA = "0x202DD0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x202DDE8", Offset = "0x202DDE8", VA = "0x202DDE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x202DEBC", Offset = "0x202DEBC", VA = "0x202DEBC")]
	public void OnHover()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x202DFE4", Offset = "0x202DFE4", VA = "0x202DFE4")]
	public void Return()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x202E160", Offset = "0x202E160", VA = "0x202E160")]
	public void ResetCursors()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x202E168", Offset = "0x202E168", VA = "0x202E168")]
	public void CursorOut()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x202E178", Offset = "0x202E178", VA = "0x202E178")]
	public void SetScale1(Vector3 _newScale)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x202E184", Offset = "0x202E184", VA = "0x202E184")]
	public void SetScale2(Vector3 _newScale)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x202E190", Offset = "0x202E190", VA = "0x202E190")]
	public void SetShake(float strength, float randomness)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x202DD7C", Offset = "0x202DD7C", VA = "0x202DD7C")]
	public void KillTweens()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x202E198", Offset = "0x202E198", VA = "0x202E198")]
	public ButtonTween()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x202E248", Offset = "0x202E248", VA = "0x202E248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63DFC", Offset = "0xA63DFC")]
	private void <OnHover>b__15_0()
	{
	}
}
[Token(Token = "0x20000BF")]
public class CSVReader
{
	[Serializable]
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C85C", Offset = "0xA5C85C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Match, string> <>9__6_0;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x202F0A8", Offset = "0x202F0A8", VA = "0x202F0A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x202F0B0", Offset = "0x202F0B0", VA = "0x202F0B0")]
		internal string <SplitCsvLine>b__6_0(Match m)
		{
			return null;
		}
	}

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SPLIT_RE;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string LINE_SPLIT_RE;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static char[] TRIM_CHARS;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x202E29C", Offset = "0x202E29C", VA = "0x202E29C")]
	public static List<Dictionary<string, object>> Read(string file)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x202E6F4", Offset = "0x202E6F4", VA = "0x202E6F4")]
	public static List<Dictionary<string, object>> ReadFromFile(UnityEngine.Object file)
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x202EB40", Offset = "0x202EB40", VA = "0x202EB40")]
	public static string[,] SplitCsvGrid(string csvText)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x202EE18", Offset = "0x202EE18", VA = "0x202EE18")]
	public static string[] SplitCsvLine(string line)
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x202EF74", Offset = "0x202EF74", VA = "0x202EF74")]
	public CSVReader()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ChangeFresnel : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] esceneFresnelColor;

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x2031530", Offset = "0x2031530", VA = "0x2031530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x2031AF8", Offset = "0x2031AF8", VA = "0x2031AF8")]
	public void ActivateFresnelCharged()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x2031FB4", Offset = "0x2031FB4", VA = "0x2031FB4")]
	public ChangeFresnel()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ComboLedProp : MonoBehaviour
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material base_material;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material activated_material;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool is_feedback_activated;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x2033D40", Offset = "0x2033D40", VA = "0x2033D40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x2033D44", Offset = "0x2033D44", VA = "0x2033D44")]
	private void Update()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x2033D48", Offset = "0x2033D48", VA = "0x2033D48")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x2033DB8", Offset = "0x2033DB8", VA = "0x2033DB8")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x2033E24", Offset = "0x2033E24", VA = "0x2033E24")]
	public ComboLedProp()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ComboMachineProp : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool is_feedback_activated;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ComboSpotlightProp> spotlightPropList;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ComboLedProp> ledPropsList;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x2033E2C", Offset = "0x2033E2C", VA = "0x2033E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x2033E30", Offset = "0x2033E30", VA = "0x2033E30")]
	private void Update()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x2033E84", Offset = "0x2033E84", VA = "0x2033E84")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x2033F6C", Offset = "0x2033F6C", VA = "0x2033F6C")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x20340C4", Offset = "0x20340C4", VA = "0x20340C4")]
	public ComboMachineProp()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ComboSpotlightProp : MonoBehaviour
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject godLight;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool is_feedback_activated;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x20340CC", Offset = "0x20340CC", VA = "0x20340CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x20340D0", Offset = "0x20340D0", VA = "0x20340D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x2034050", Offset = "0x2034050", VA = "0x2034050")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x203408C", Offset = "0x203408C", VA = "0x203408C")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x20340D4", Offset = "0x20340D4", VA = "0x20340D4")]
	public ComboSpotlightProp()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ContentBlock : MonoBehaviour
{
	[Token(Token = "0x2000296")]
	public enum ContentBlockTypeEnum
	{
		[Token(Token = "0x4001235")]
		NONE,
		[Token(Token = "0x4001236")]
		SONG_CHALLENGE,
		[Token(Token = "0x4001237")]
		SONG_CAMPAIGN,
		[Token(Token = "0x4001238")]
		CHAPTER_CAMPAING,
		[Token(Token = "0x4001239")]
		CHAPTER_TO_UNLOCK,
		[Token(Token = "0x400123A")]
		UNLOCK_MORE_SONGS
	}

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ContentBlockTypeEnum type;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int TrackID;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Song _Info;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int Id_SongsInfoCampaign;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ChapterBase _ChapterInfo;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isActive;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Escenario sceneToLoad;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool is_initialized;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite[] BGFrames;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Sprite[] Frames;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Sprite[] Stars;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] LockSprites;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5EDE0", Offset = "0xA5EDE0")]
	[SerializeField]
	private GameObject Chapter;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI ChapterText;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI StarsChapterText;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5EE4C", Offset = "0xA5EE4C")]
	[SerializeField]
	private GameObject ChapterToUnlock;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI ChapterToUnlockText;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5EEA8", Offset = "0xA5EEA8")]
	[SerializeField]
	private GameObject Song;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI SongName;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI AutorName;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI Duration;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI Difficulty;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject StarsParent;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject Variation;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image Note;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image Background;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Image Frame;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject Lock;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x20340DC", Offset = "0x20340DC", VA = "0x20340DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x2034220", Offset = "0x2034220", VA = "0x2034220")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x2034364", Offset = "0x2034364", VA = "0x2034364")]
	public void InitChallenge(Song _info, bool _ChapterHeader, bool isVisible)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x2034668", Offset = "0x2034668", VA = "0x2034668")]
	public void SetChallengeInfo()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x20350D4", Offset = "0x20350D4", VA = "0x20350D4")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x2035838", Offset = "0x2035838", VA = "0x2035838")]
	public void InitCampaignSong(int _Id_SongsInfoCampaign, Song _info, bool isVisible)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x2035224", Offset = "0x2035224", VA = "0x2035224")]
	public void SetCampaingInfo()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x203593C", Offset = "0x203593C", VA = "0x203593C")]
	public void InitCampaignChapter(ChapterBase _info)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x2035A68", Offset = "0x2035A68", VA = "0x2035A68")]
	public void SetChapterStarsCount(byte _starsCount, byte _songsCount)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x2035B68", Offset = "0x2035B68", VA = "0x2035B68")]
	public void InitCampaignHasToUnlock(ChapterBase _info)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x2035E30", Offset = "0x2035E30", VA = "0x2035E30")]
	private void ActualizeDifficulty()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x203605C", Offset = "0x203605C", VA = "0x203605C")]
	private void ChangeTrack()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x2034D08", Offset = "0x2034D08", VA = "0x2034D08")]
	private Sprite GetRankSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x2034E10", Offset = "0x2034E10", VA = "0x2034E10")]
	private Sprite GetDifficultyBGFrame()
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x2034F40", Offset = "0x2034F40", VA = "0x2034F40")]
	private Sprite GetDifficultyFrame()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x2035070", Offset = "0x2035070", VA = "0x2035070")]
	private void GreyBGsImage()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x2036070", Offset = "0x2036070", VA = "0x2036070")]
	private void WhiteBGsImage()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x20360D4", Offset = "0x20360D4", VA = "0x20360D4")]
	public void PickSong()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x20358AC", Offset = "0x20358AC", VA = "0x20358AC")]
	private SongInfoCampaign GetSongInfoCampaign(int _Id_SongsInfoCampaign)
	{
		return null;
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x20362C8", Offset = "0x20362C8", VA = "0x20362C8")]
	public ContentBlock()
	{
	}
}
[Token(Token = "0x20000C5")]
public class AchievementsController : MonoBehaviour
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementsController instance;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x2023CAC", Offset = "0x2023CAC", VA = "0x2023CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x2023D7C", Offset = "0x2023D7C", VA = "0x2023D7C")]
	public void UnlockAchievement(string _achievementReference)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x2023E00", Offset = "0x2023E00", VA = "0x2023E00")]
	public AchievementsController()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CustomChallengeController : MonoBehaviour
{
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C86C", Offset = "0xA5C86C")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform animParent;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomChallengeController <>4__this;

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xD58034", Offset = "0xD58034", VA = "0xD58034")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD5803C", Offset = "0xD5803C", VA = "0xD5803C")]
		internal void <ActivateButtons>b__0()
		{
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C87C", Offset = "0xA5C87C")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform animParent;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xD5808C", Offset = "0xD5808C", VA = "0xD5808C")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xD58094", Offset = "0xD58094", VA = "0xD58094")]
		internal void <DesactivateButtons>b__0()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xD581A8", Offset = "0xD581A8", VA = "0xD581A8")]
		internal void <DesactivateButtons>b__1()
		{
		}
	}

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject StageButtons;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] StageMat;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI StageText;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject StageName;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject BossWarning;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject VariationObjects;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject RankingObjects;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject RankingFrame;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject VariationsBtn;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] VariationsList;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] VariationsSpriteList;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string[] VariationsKeysList;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite[] EntryFrames;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject VariationsMessage;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject CancelBtn;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hasPickedStage;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool pickedBoss;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int lastStageID;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lastVariationID;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 animButtonPosition;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool variationsScreen;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x203668C", Offset = "0x203668C", VA = "0x203668C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x2036808", Offset = "0x2036808", VA = "0x2036808")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x203694C", Offset = "0x203694C", VA = "0x203694C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x20372B0", Offset = "0x20372B0", VA = "0x20372B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x20372FC", Offset = "0x20372FC", VA = "0x20372FC")]
	private void ActivateButtons()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x20374E0", Offset = "0x20374E0", VA = "0x20374E0")]
	private void DesactivateButtons()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x2036A30", Offset = "0x2036A30", VA = "0x2036A30")]
	private void EnableButtons()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x20376C4", Offset = "0x20376C4", VA = "0x20376C4")]
	private void DisableButtons()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x2037974", Offset = "0x2037974", VA = "0x2037974")]
	private void SetStage(int id_stage)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x2038834", Offset = "0x2038834", VA = "0x2038834")]
	public bool BossSongSelected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x2038970", Offset = "0x2038970", VA = "0x2038970")]
	public void StagePicked(int id_stage)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x2036E60", Offset = "0x2036E60", VA = "0x2036E60")]
	public void ChangeStage(int id_stage)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x2038DD4", Offset = "0x2038DD4", VA = "0x2038DD4")]
	private void PickDefaultStage()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x2038EE8", Offset = "0x2038EE8", VA = "0x2038EE8")]
	public void ShowVariations()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x2039634", Offset = "0x2039634", VA = "0x2039634")]
	public void HideVariations()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x20394CC", Offset = "0x20394CC", VA = "0x20394CC")]
	private void SwapRankingFrame()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x20396C0", Offset = "0x20396C0", VA = "0x20396C0")]
	private void ChangeDifficultyEffect()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x203987C", Offset = "0x203987C", VA = "0x203987C")]
	public bool IsVariationsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x2038F8C", Offset = "0x2038F8C", VA = "0x2038F8C")]
	private void InitVariations()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x20389F0", Offset = "0x20389F0", VA = "0x20389F0")]
	public void SelectVariation(int _variation)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x20388B4", Offset = "0x20388B4", VA = "0x20388B4")]
	private void SetVariationsScreenMessage(bool showMessage)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x2039884", Offset = "0x2039884", VA = "0x2039884")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x2039A54", Offset = "0x2039A54", VA = "0x2039A54")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x20391A8", Offset = "0x20391A8", VA = "0x20391A8")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x2039404", Offset = "0x2039404", VA = "0x2039404")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x2039C14", Offset = "0x2039C14", VA = "0x2039C14")]
	private void CheckEntryPosition()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x2039D58", Offset = "0x2039D58", VA = "0x2039D58")]
	public void ResetVariationsLayout()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x2039E30", Offset = "0x2039E30", VA = "0x2039E30")]
	public CustomChallengeController()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x2039E38", Offset = "0x2039E38", VA = "0x2039E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E0C", Offset = "0xA63E0C")]
	private void <SwapRankingFrame>b__41_0()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x2039F34", Offset = "0x2039F34", VA = "0x2039F34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E1C", Offset = "0xA63E1C")]
	private void <SwapRankingFrame>b__41_1()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x203A0D4", Offset = "0x203A0D4", VA = "0x203A0D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E2C", Offset = "0xA63E2C")]
	private void <SwapRankingFrame>b__41_2()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x203A108", Offset = "0x203A108", VA = "0x203A108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E3C", Offset = "0xA63E3C")]
	private void <ChangeDifficultyEffect>b__42_0()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x203A204", Offset = "0x203A204", VA = "0x203A204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E4C", Offset = "0xA63E4C")]
	private void <ChangeDifficultyEffect>b__42_1()
	{
	}
}
[Token(Token = "0x20000C7")]
public class EnemyController : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnemyController instance;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> spawnedEnemiesList;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> nearEnemiesList;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> specialSpawnedEnemiesList;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> targets;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<TemplateEnemy> TemplateEnemysList;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Hit> iconsHit;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] boss;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] spawnPointsList;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] bossSpawnPoint;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Object currentCSV;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float startPlaytimeStamp;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float ogStartPlaytimeStamp;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeInPause;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float timeLastMiss;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToReMiss;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeToActivateThoughWarning;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int nEnemies;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int nEnemiesKilled;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint id_count;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private uint missesDoneInFrame;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint maxMissesInFrame;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool canMiss;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool canSpawn;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int bossNum;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public int nEnemiesSpawned;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public int lastEnemiesCanOnlyRecieveDamageWithSpinCount;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public int lastEnemiesSwapDrumsCount;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject liniaPerfect;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MeshRenderer liniaPerfectMesh;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xD6C898", Offset = "0xD6C898", VA = "0xD6C898")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xD6CA68", Offset = "0xD6CA68", VA = "0xD6CA68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xD6CF20", Offset = "0xD6CF20", VA = "0xD6CF20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xD6CE5C", Offset = "0xD6CE5C", VA = "0xD6CE5C")]
	private void InitPerfectLine()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xD6E330", Offset = "0xD6E330", VA = "0xD6E330")]
	private void CheckThoughWarning()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD6E3EC", Offset = "0xD6E3EC", VA = "0xD6E3EC")]
	public void IncreaseTimeInPause(float _time)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD6E3FC", Offset = "0xD6E3FC", VA = "0xD6E3FC")]
	public float GetTimeInPause()
	{
		return default(float);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD6E404", Offset = "0xD6E404", VA = "0xD6E404")]
	public void ResetTimeInPause()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xD6E40C", Offset = "0xD6E40C", VA = "0xD6E40C")]
	public void StartSpawn()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xD6E50C", Offset = "0xD6E50C", VA = "0xD6E50C")]
	public void ResetSpawn()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xD6E4A8", Offset = "0xD6E4A8", VA = "0xD6E4A8")]
	public void UpdateSongTime()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xD6E578", Offset = "0xD6E578", VA = "0xD6E578")]
	public bool GetCanSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xD6E580", Offset = "0xD6E580", VA = "0xD6E580")]
	public int GetNEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xD6E588", Offset = "0xD6E588", VA = "0xD6E588")]
	public int GetNEnemiesKilled()
	{
		return default(int);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xD6BF1C", Offset = "0xD6BF1C", VA = "0xD6BF1C")]
	public void IncreaseNEnemiesKilled()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xD6E590", Offset = "0xD6E590", VA = "0xD6E590")]
	public void SetNEnemiesKilled(int _number)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xD6E598", Offset = "0xD6E598", VA = "0xD6E598")]
	public void setCanSpawn(bool _state)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD6E5A4", Offset = "0xD6E5A4", VA = "0xD6E5A4")]
	public uint GetIdCount()
	{
		return default(uint);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD6E5AC", Offset = "0xD6E5AC", VA = "0xD6E5AC")]
	public uint GetIdCountAndIncrease()
	{
		return default(uint);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD6E5C0", Offset = "0xD6E5C0", VA = "0xD6E5C0")]
	public List<GameObject> GetSpecialSpawnedEnemiesList()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xD6E5C8", Offset = "0xD6E5C8", VA = "0xD6E5C8")]
	public GameObject GetSpecialSpawnedEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xD6E6B8", Offset = "0xD6E6B8", VA = "0xD6E6B8")]
	public void AddToSpecialSpawnedEnemiesList(GameObject _GoToAdd)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xD6E720", Offset = "0xD6E720", VA = "0xD6E720")]
	public GameObject GetSpawnedEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xD6E810", Offset = "0xD6E810", VA = "0xD6E810")]
	public void SpawnBoss(TemplateEnemy _boss)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xD6D018", Offset = "0xD6D018", VA = "0xD6D018")]
	public void Spawn()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xD6E998", Offset = "0xD6E998", VA = "0xD6E998")]
	public void SnapTimeToActivate()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xD6EA10", Offset = "0xD6EA10", VA = "0xD6EA10")]
	private float CheckNextThoughTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xD6EB50", Offset = "0xD6EB50", VA = "0xD6EB50")]
	public GameObject ForceSpawn(TemplateEnemy _templateEnemy)
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xD6EC10", Offset = "0xD6EC10", VA = "0xD6EC10")]
	public int FixEnemySpawnById(IconsType _type)
	{
		return default(int);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xD6EC34", Offset = "0xD6EC34", VA = "0xD6EC34")]
	private void LoadEnemiesFromCSV()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD6F570", Offset = "0xD6F570", VA = "0xD6F570")]
	public void LoadEnemiesTutorial()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xD6F750", Offset = "0xD6F750", VA = "0xD6F750")]
	public void LoadEnemiesTutorialPerfect()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xD6F984", Offset = "0xD6F984", VA = "0xD6F984")]
	private void LoadEnemiesTutorialSpecialDemons()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xD6FB7C", Offset = "0xD6FB7C", VA = "0xD6FB7C")]
	private void LoadEnemiesTutorialWithMusic()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xD6F560", Offset = "0xD6F560", VA = "0xD6F560")]
	private IconsType IdToIconType(int _id)
	{
		return default(IconsType);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xD6BC8C", Offset = "0xD6BC8C", VA = "0xD6BC8C")]
	public float GetSpawnTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xD6CD64", Offset = "0xD6CD64", VA = "0xD6CD64")]
	public void LoadEnemiesCSV()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xD6E448", Offset = "0xD6E448", VA = "0xD6E448")]
	public void InitSpanwers()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xD705C8", Offset = "0xD705C8", VA = "0xD705C8")]
	private void ChangeFileToLoad()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xD70690", Offset = "0xD70690", VA = "0xD70690")]
	public void PauseEnemies()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xD70CEC", Offset = "0xD70CEC", VA = "0xD70CEC")]
	public void PlayEnemies()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xD710B4", Offset = "0xD710B4", VA = "0xD710B4")]
	public void DestroyCloseEnemies(float _radious)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xD71530", Offset = "0xD71530", VA = "0xD71530")]
	public bool AreEnemiesInMissZone()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xD71600", Offset = "0xD71600", VA = "0xD71600")]
	public List<GameObject> GetEnemiesInMissZone()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xD71738", Offset = "0xD71738", VA = "0xD71738")]
	public int AreGordiEnemiesInMissZone()
	{
		return default(int);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xD71854", Offset = "0xD71854", VA = "0xD71854")]
	public void EnemiesInUIZone(bool _state)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xD63AC8", Offset = "0xD63AC8", VA = "0xD63AC8")]
	public void OnDrumHit(IconsType iconsType, ushort spins_count)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xD71AEC", Offset = "0xD71AEC", VA = "0xD71AEC")]
	private void Miss()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xD6D6EC", Offset = "0xD6D6EC", VA = "0xD6D6EC")]
	private void CheckInputBuffer()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xD71D28", Offset = "0xD71D28", VA = "0xD71D28")]
	private void ResetSpawnEnemiesBool()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xD71DBC", Offset = "0xD71DBC", VA = "0xD71DBC")]
	public TemplateEnemy GetTemplateEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xD71E6C", Offset = "0xD71E6C", VA = "0xD71E6C")]
	public int GetTemplateEnemyCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xD71EBC", Offset = "0xD71EBC", VA = "0xD71EBC")]
	public void DestroyAllEnemies()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xD72000", Offset = "0xD72000", VA = "0xD72000")]
	public void DestroyEnemiesScreen()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xD720D8", Offset = "0xD720D8", VA = "0xD720D8")]
	private bool AreSameInput(List<IconsType> _enemy1, List<IconsType> _enemy2)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xD6DBAC", Offset = "0xD6DBAC", VA = "0xD6DBAC")]
	public void CheckTargets()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xD721D8", Offset = "0xD721D8", VA = "0xD721D8")]
	private int SortByDistanceToGoalReverse(GameObject a, GameObject b)
	{
		return default(int);
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xD723B0", Offset = "0xD723B0", VA = "0xD723B0")]
	public EnemyController()
	{
	}
}
[Token(Token = "0x20000C8")]
public enum EnemyType
{
	[Token(Token = "0x400050D")]
	NONE,
	[Token(Token = "0x400050E")]
	ENEMY,
	[Token(Token = "0x400050F")]
	SIAMESE,
	[Token(Token = "0x4000510")]
	BOSS
}
[Serializable]
[Token(Token = "0x20000C9")]
public class Hit
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeStamp;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeStampHold;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IconsType iconType;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lifeTime;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lifeHold;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort spins_count;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint IDEnemy;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hasToRemove;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool RHit;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xDC445C", Offset = "0xDC445C", VA = "0xDC445C")]
	public Hit()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xDC4494", Offset = "0xDC4494", VA = "0xDC4494")]
	public void hold(uint _IDEnemy)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xDC44D4", Offset = "0xDC44D4", VA = "0xDC44D4")]
	public bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xDC4530", Offset = "0xDC4530", VA = "0xDC4530")]
	public bool isHold()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CA")]
public class EventController : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action ChangeDifficulty;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnChangeAct;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action ChangeTrack;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action OnSave;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action OnLoad;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action OnChangeLobbyScreen;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action OnPauseStart;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action OnPauseEnd;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x204F87C", Offset = "0x204F87C", VA = "0x204F87C")]
	public static void OnChangeDifficulty()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x204F8E0", Offset = "0x204F8E0", VA = "0x204F8E0")]
	public static void ChangeAct()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x204F944", Offset = "0x204F944", VA = "0x204F944")]
	public static void OnChangeTrack()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x204F9A8", Offset = "0x204F9A8", VA = "0x204F9A8")]
	public static void Save()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x204FA0C", Offset = "0x204FA0C", VA = "0x204FA0C")]
	public static void Load()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x204FA70", Offset = "0x204FA70", VA = "0x204FA70")]
	public static void ChangeLobbyScreen()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x204FAD4", Offset = "0x204FAD4", VA = "0x204FAD4")]
	public static void PauseStart()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x204FB38", Offset = "0x204FB38", VA = "0x204FB38")]
	public static void PauseEnd()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x204FB9C", Offset = "0x204FB9C", VA = "0x204FB9C")]
	public EventController()
	{
	}
}
[Token(Token = "0x20000CB")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C88C", Offset = "0xA5C88C")]
	private sealed class <InitFirstAudioLatencyCheck>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitOffset;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameController <>4__this;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double <lastDspTime>5__2;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xDB3E7C", Offset = "0xDB3E7C", VA = "0xDB3E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xDB3EE4", Offset = "0xDB3EE4", VA = "0xDB3EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xDB3BD8", Offset = "0xDB3BD8", VA = "0xDB3BD8")]
		[DebuggerHidden]
		public <InitFirstAudioLatencyCheck>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xDB3C04", Offset = "0xDB3C04", VA = "0xDB3C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xDB3C08", Offset = "0xDB3C08", VA = "0xDB3C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xDB3E84", Offset = "0xDB3E84", VA = "0xDB3E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C89C", Offset = "0xA5C89C")]
	private sealed class <>c__DisplayClass134_0
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xDB3758", Offset = "0xDB3758", VA = "0xDB3758")]
		public <>c__DisplayClass134_0()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xDB3760", Offset = "0xDB3760", VA = "0xDB3760")]
		internal bool <GetSceneKey>b__0(KeyValuePair<string, string> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8AC", Offset = "0xA5C8AC")]
	private sealed class <>c__DisplayClass138_0
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameController <>4__this;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xDB37B8", Offset = "0xDB37B8", VA = "0xDB37B8")]
		public <>c__DisplayClass138_0()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xDB37C0", Offset = "0xDB37C0", VA = "0xDB37C0")]
		internal bool <CheckSongSaves>b__0(SongInfoCampaign x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8BC", Offset = "0xA5C8BC")]
	private sealed class <>c__DisplayClass138_1
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SongInfoCampaign _tempSong;

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xDB385C", Offset = "0xDB385C", VA = "0xDB385C")]
		public <>c__DisplayClass138_1()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xDB3864", Offset = "0xDB3864", VA = "0xDB3864")]
		internal bool <CheckSongSaves>b__1(Song x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8CC", Offset = "0xA5C8CC")]
	private sealed class <CheckSteamOverlay>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xDB3B68", Offset = "0xDB3B68", VA = "0xDB3B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xDB3BD0", Offset = "0xDB3BD0", VA = "0xDB3BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xDB3914", Offset = "0xDB3914", VA = "0xDB3914")]
		[DebuggerHidden]
		public <CheckSteamOverlay>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xDB3940", Offset = "0xDB3940", VA = "0xDB3940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xDB3944", Offset = "0xDB3944", VA = "0xDB3944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xDB3B70", Offset = "0xDB3B70", VA = "0xDB3B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8DC", Offset = "0xA5C8DC")]
	private sealed class <>c__DisplayClass190_0
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint id;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StoreItemType type;

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xDB3894", Offset = "0xDB3894", VA = "0xDB3894")]
		public <>c__DisplayClass190_0()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xDB389C", Offset = "0xDB389C", VA = "0xDB389C")]
		internal bool <RemoveStoreItemToVisit>b__0(StoreItemSaveData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xDB38D8", Offset = "0xDB38D8", VA = "0xDB38D8")]
		internal bool <RemoveStoreItemToVisit>b__1(StoreItemSaveData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BuildOS buildOS;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string version;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int version_code;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController instance;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsProductionVersion;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool demoVersion;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ActBase> Acts;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ChapterBase> Chapters;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Song> Songs;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Song> ChallengeSongs;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<ChallengeSongSaveData> ChallengeSongSaveData;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SongInfoCampaign> SongInfoCampaignBase;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<SongInfoCampaign> SongInfoCampaign;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<SongInfoCampaignSaveData> SongInfoCampaignSaveData;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<StoreItemSaveData> StoreItems;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<StoreItemSaveData> StoreItemsToVisit;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<UnlockStoreItemsCond> UnlockStoreItemsCondList;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool is_tutorial_done_first_time;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private uint player_money_earned;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SongDifficulty difficulty;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private SongTrack track;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameMode gameMode;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private VariationMode variationMode;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Escenario currentEscenario;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private uint id_equipped_hands;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint id_equipped_drums;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private uint id_equipped_drumsstick;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int Current_Id_SongsInfoCampaign;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float SongVelocity;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float SongOffset;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float SongBPM;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastGarbageCollectorTimestamp;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string lang;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5F124", Offset = "0xA5F124")]
	private bool <isPractice>k__BackingField;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private byte hitBetweenSticksCount;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool IsSongStarted;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float lastHitBetweenSticksCountTimestamp;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float lastHitBetweenSticksCounterTimestamp;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5F134", Offset = "0xA5F134")]
	private bool <InputLostWhileCD>k__BackingField;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool TestAudio;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
	public bool IsOnsettings;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float drumsOffset;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public Vector2 drumsLowtomOffset;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public Vector2 drumsHighTomOffset;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SettingsController.OptionsSettings optionsSettings;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<int> TvCinematicsSeenSaveData;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Song lastRankingSong;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private LastCampaignPlayedInfo lastCampaignPlayedInfo;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<BindModeFade> blindModeFadeList;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public PopupNewUnlockScreenEnum currentPopupNewUnlockScreenType;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public CanvasLoading canvasLoading;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<string, string> sceneNames;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool isSteamOverlayEnabled;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool wasExternalAudioConnected;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public ExternalAudioState externalAudioState;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool ignoreSpawnCSV;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	public bool newsClicked;

	[Token(Token = "0x17000036")]
	public bool IsDemoVersion
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x2050100", Offset = "0x2050100", VA = "0x2050100")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public bool isPractice
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x2050108", Offset = "0x2050108", VA = "0x2050108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E5C", Offset = "0xA63E5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x2050110", Offset = "0x2050110", VA = "0x2050110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E6C", Offset = "0xA63E6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool InputLostWhileCD
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x205011C", Offset = "0x205011C", VA = "0x205011C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E7C", Offset = "0xA63E7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x2050124", Offset = "0x2050124", VA = "0x2050124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63E8C", Offset = "0xA63E8C")]
		set
		{
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x2050130", Offset = "0x2050130", VA = "0x2050130")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x2056DD8", Offset = "0x2056DD8", VA = "0x2056DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x2056FAC", Offset = "0x2056FAC", VA = "0x2056FAC")]
	public void SetEscenario(Escenario _scene)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x20507AC", Offset = "0x20507AC", VA = "0x20507AC")]
	private void InitSceneNames()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x2056FB4", Offset = "0x2056FB4", VA = "0x2056FB4")]
	public bool ScenesReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x205681C", Offset = "0x205681C", VA = "0x205681C")]
	public void InitModes()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x20506BC", Offset = "0x20506BC", VA = "0x20506BC")]
	private void InitXRRig()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x2050654", Offset = "0x2050654", VA = "0x2050654")]
	private void InitSOList()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x20509BC", Offset = "0x20509BC", VA = "0x20509BC")]
	private void InitActs()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x2050BD8", Offset = "0x2050BD8", VA = "0x2050BD8")]
	private void InitChapters()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x20517F4", Offset = "0x20517F4", VA = "0x20517F4")]
	private void InitSongInfoCampaign()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x2055890", Offset = "0x2055890", VA = "0x2055890")]
	private void InitUnlockStoreItemsCond()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2056FC4", Offset = "0x2056FC4", VA = "0x2056FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x2057580", Offset = "0x2057580", VA = "0x2057580")]
	private void OnAudioConfigurationChanged(bool deviceWasChanged)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x20574CC", Offset = "0x20574CC", VA = "0x20574CC")]
	private ExternalAudioState GetExternalAudioState()
	{
		return default(ExternalAudioState);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x2057644", Offset = "0x2057644", VA = "0x2057644")]
	private bool DetectExternalAudio()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x2056D4C", Offset = "0x2056D4C", VA = "0x2056D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63E9C", Offset = "0xA63E9C")]
	private IEnumerator InitFirstAudioLatencyCheck(float waitOffset = 0f)
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x205764C", Offset = "0x205764C", VA = "0x205764C")]
	private void checkAudioSystemLatency()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x2057728", Offset = "0x2057728", VA = "0x2057728")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x205786C", Offset = "0x205786C", VA = "0x205786C")]
	public int GetNumberSongs()
	{
		return default(int);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x20578CC", Offset = "0x20578CC", VA = "0x20578CC")]
	public Song GetSongInfo(int _track)
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x20579A8", Offset = "0x20579A8", VA = "0x20579A8")]
	public void SetSongInfo(Song _newInfo, int _track)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x2057A94", Offset = "0x2057A94", VA = "0x2057A94")]
	public void UnlockChallengeSong(int id)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x2057B6C", Offset = "0x2057B6C", VA = "0x2057B6C")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x20578D0", Offset = "0x20578D0", VA = "0x20578D0")]
	public Song GetChallengeSong(int id)
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x20579C8", Offset = "0x20579C8", VA = "0x20579C8")]
	public void SetChallengeSong(int id, Song _newInfo)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x2057B70", Offset = "0x2057B70", VA = "0x2057B70")]
	public Song GetSongInfo()
	{
		return null;
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x2057B84", Offset = "0x2057B84", VA = "0x2057B84")]
	public SongDifficulty GetSongDifficulty()
	{
		return default(SongDifficulty);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x2057B8C", Offset = "0x2057B8C", VA = "0x2057B8C")]
	public float GetSongVelocity()
	{
		return default(float);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x2057C08", Offset = "0x2057C08", VA = "0x2057C08")]
	public void SetSongVelocity(float _songVelocity)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x2057C10", Offset = "0x2057C10", VA = "0x2057C10")]
	public float GetSongOffset()
	{
		return default(float);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x2057C8C", Offset = "0x2057C8C", VA = "0x2057C8C")]
	public void SetSongOffset(float _songOffset)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x2057C94", Offset = "0x2057C94", VA = "0x2057C94")]
	public float GetSongBPM()
	{
		return default(float);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x2057CCC", Offset = "0x2057CCC", VA = "0x2057CCC")]
	public SongTrack GetSongTrack()
	{
		return default(SongTrack);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2057CD4", Offset = "0x2057CD4", VA = "0x2057CD4")]
	public string GetSongDifficultyText()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x2057E38", Offset = "0x2057E38", VA = "0x2057E38")]
	public string GetSongDifficultyText(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x2057F9C", Offset = "0x2057F9C", VA = "0x2057F9C")]
	public string GetSongDifficultyRanking(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x2058000", Offset = "0x2058000", VA = "0x2058000")]
	public void SetLastOnlineRankingSong(Song _tempSong)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x2058010", Offset = "0x2058010", VA = "0x2058010")]
	public void CheckSendScore(Pico.Platform.Message message)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x20581AC", Offset = "0x20581AC", VA = "0x20581AC")]
	public void SetSongDifficulty(int _difficulty)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x20581B4", Offset = "0x20581B4", VA = "0x20581B4")]
	public void SetTrack(int _track)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x20581DC", Offset = "0x20581DC", VA = "0x20581DC")]
	public void SetTrackCampaign(int _track, int id_songs_info_campaign)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x2058208", Offset = "0x2058208", VA = "0x2058208")]
	public bool IsInTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x2058238", Offset = "0x2058238", VA = "0x2058238")]
	public bool IsInTutorialWithoutMusic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x205825C", Offset = "0x205825C", VA = "0x205825C")]
	public bool IsInTutorialPerfectLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x2058270", Offset = "0x2058270", VA = "0x2058270")]
	public string GetTrackName(int _track)
	{
		return null;
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x20582D4", Offset = "0x20582D4", VA = "0x20582D4")]
	public GameMode GetGameMode()
	{
		return default(GameMode);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x20582DC", Offset = "0x20582DC", VA = "0x20582DC")]
	public string GetGameModeText()
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x2058458", Offset = "0x2058458", VA = "0x2058458")]
	public void SetGameMode(GameMode _gameMode)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x2058460", Offset = "0x2058460", VA = "0x2058460")]
	public void StartSong()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x20585D4", Offset = "0x20585D4", VA = "0x20585D4")]
	private void Save()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x2058754", Offset = "0x2058754", VA = "0x2058754")]
	private void PrepareSaveSongs()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x20589D4", Offset = "0x20589D4", VA = "0x20589D4")]
	private void CheckSave()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x2058BC4", Offset = "0x2058BC4", VA = "0x2058BC4")]
	private bool HasChallengeSongSaveData(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x2058C70", Offset = "0x2058C70", VA = "0x2058C70")]
	private bool HasSongInfoCampaignSaveData(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x2058D1C", Offset = "0x2058D1C", VA = "0x2058D1C")]
	public Color GetDifficultyColor(int _difficulty)
	{
		return default(Color);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x2058DF8", Offset = "0x2058DF8", VA = "0x2058DF8")]
	public Color GetDifficultyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x2058ED4", Offset = "0x2058ED4", VA = "0x2058ED4")]
	public string GetSongDiffcultyColorTextHTML(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x2058F38", Offset = "0x2058F38", VA = "0x2058F38")]
	public List<ActBase> GetActs()
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x2058F40", Offset = "0x2058F40", VA = "0x2058F40")]
	public ActBase GetAct(int id)
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x2059018", Offset = "0x2059018", VA = "0x2059018")]
	public ActBase GetActWithIdSongInfoCampaign(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x20592E8", Offset = "0x20592E8", VA = "0x20592E8")]
	public List<ChapterBase> GetChapters()
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x20592F0", Offset = "0x20592F0", VA = "0x20592F0")]
	public ChapterBase GetChapter(int id)
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x2059190", Offset = "0x2059190", VA = "0x2059190")]
	public ChapterBase GetChapterWithIdSongInfoCampaign(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x20593C8", Offset = "0x20593C8", VA = "0x20593C8")]
	public Song GetCampaignSongInfo(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x205953C", Offset = "0x205953C", VA = "0x205953C")]
	public Song GetCampaignSongInfo()
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x205955C", Offset = "0x205955C", VA = "0x205955C")]
	public SongInfoCampaign GetSongInfoCampaign()
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x2059654", Offset = "0x2059654", VA = "0x2059654")]
	public void SetSongInfoCampaign(SongInfoCampaign _newInfo)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x205856C", Offset = "0x205856C", VA = "0x205856C")]
	public string GetSceneName(string _key)
	{
		return null;
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x2059738", Offset = "0x2059738", VA = "0x2059738")]
	public string GetSceneKey(string _name)
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x2059804", Offset = "0x2059804", VA = "0x2059804")]
	private void Load()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x2059C74", Offset = "0x2059C74", VA = "0x2059C74")]
	private void OldVersionCheck(SaveData _tempSave)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x205A5F8", Offset = "0x205A5F8", VA = "0x205A5F8")]
	private void CheckInitialLatency()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x205A200", Offset = "0x205A200", VA = "0x205A200")]
	private void CheckSongSaves()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x2059F80", Offset = "0x2059F80", VA = "0x2059F80")]
	public void LoadSongs()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x2059D88", Offset = "0x2059D88", VA = "0x2059D88")]
	private void CheckHasDefaultStoreItems()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x205A90C", Offset = "0x205A90C", VA = "0x205A90C")]
	public void KillAllTweens()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x2056F30", Offset = "0x2056F30", VA = "0x2056F30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63F00", Offset = "0xA63F00")]
	private IEnumerator CheckSteamOverlay()
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x205A970", Offset = "0x205A970", VA = "0x205A970")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x205A9C0", Offset = "0x205A9C0", VA = "0x205A9C0")]
	private void OverlayMenuPause(bool _pauseStatus)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x205AB20", Offset = "0x205AB20", VA = "0x205AB20")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x205ACC0", Offset = "0x205ACC0", VA = "0x205ACC0")]
	private void OnPicoLostFocus()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x205ACEC", Offset = "0x205ACEC", VA = "0x205ACEC")]
	private void OnPicoAcquiredFocus()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x205AAAC", Offset = "0x205AAAC", VA = "0x205AAAC")]
	private void GarbageCollect()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x2057484", Offset = "0x2057484", VA = "0x2057484")]
	private void CheckGarbageCollect()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x205AD18", Offset = "0x205AD18", VA = "0x205AD18")]
	public int GetToughEnemiesRate()
	{
		return default(int);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x205AD20", Offset = "0x205AD20", VA = "0x205AD20")]
	public int GetSwapDrumsRate()
	{
		return default(int);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x205AD28", Offset = "0x205AD28", VA = "0x205AD28")]
	public void InitLoadBlindMode()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x205BF08", Offset = "0x205BF08", VA = "0x205BF08")]
	public void InitBlindMode(int _track)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x20570D8", Offset = "0x20570D8", VA = "0x20570D8")]
	public void BlindModeUpdate()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x205BF0C", Offset = "0x205BF0C", VA = "0x205BF0C")]
	public void ResetBlindModeFadeList()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x205BFCC", Offset = "0x205BFCC", VA = "0x205BFCC")]
	public void AddHitBetweenSticksCountToStartSong()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x205702C", Offset = "0x205702C", VA = "0x205702C")]
	private void UpdateHitBetweenSticks()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x205C0BC", Offset = "0x205C0BC", VA = "0x205C0BC")]
	public Color GetColorFresnel()
	{
		return default(Color);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x205C158", Offset = "0x205C158", VA = "0x205C158")]
	public Escenario GetEscenario()
	{
		return default(Escenario);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x205C160", Offset = "0x205C160", VA = "0x205C160")]
	public BuildOS GetBuildVersion()
	{
		return default(BuildOS);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x205C168", Offset = "0x205C168", VA = "0x205C168")]
	public string GetStringEscenarioToLoad()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x205C1FC", Offset = "0x205C1FC", VA = "0x205C1FC")]
	public void ResetHitBetweenSticksCountToStartSong()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x205C208", Offset = "0x205C208", VA = "0x205C208")]
	public bool IsTutorialDoneFirstTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x205C210", Offset = "0x205C210", VA = "0x205C210")]
	public void CompleteTutorialDoneFirstTime()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x205C278", Offset = "0x205C278", VA = "0x205C278")]
	public int GetCurrentIdSongsInfoCampaign()
	{
		return default(int);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x205957C", Offset = "0x205957C", VA = "0x205957C")]
	public SongInfoCampaign GetSongInfoCampaign(int _Id_SongsInfoCampaign)
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x205C280", Offset = "0x205C280", VA = "0x205C280")]
	public int GetStarsUnlockedCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x205C324", Offset = "0x205C324", VA = "0x205C324")]
	public int GetTotalStarsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x205C3C8", Offset = "0x205C3C8", VA = "0x205C3C8")]
	public string GetPaperStarsText(StarCondition starCondition)
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x205D154", Offset = "0x205D154", VA = "0x205D154")]
	public string GetVariationText(VariationMode variationMode)
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x205D3F0", Offset = "0x205D3F0", VA = "0x205D3F0")]
	public void SetVariationMode(VariationMode variationMode)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x205D3F8", Offset = "0x205D3F8", VA = "0x205D3F8")]
	public VariationMode GetCurrentVariation()
	{
		return default(VariationMode);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x205D400", Offset = "0x205D400", VA = "0x205D400")]
	public void AddMoney(int money_to_add)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x205D428", Offset = "0x205D428", VA = "0x205D428")]
	public uint GetMoney()
	{
		return default(uint);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x205D430", Offset = "0x205D430", VA = "0x205D430")]
	public ChapterBase GetCurrentChapter()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x205D580", Offset = "0x205D580", VA = "0x205D580")]
	public ChapterBase GetCurrentChapter(int current_total_stars_count)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x205D6C8", Offset = "0x205D6C8", VA = "0x205D6C8")]
	public ActBase GetCurrentAct()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x205D934", Offset = "0x205D934", VA = "0x205D934")]
	public ActBase GetCurrentAct(int current_total_stars_count)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x205DB98", Offset = "0x205DB98", VA = "0x205DB98")]
	public bool HasStoreItemUnlocked(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x205A5FC", Offset = "0x205A5FC", VA = "0x205A5FC")]
	public bool HasStoreItemPurchased(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x205DCC4", Offset = "0x205DCC4", VA = "0x205DCC4")]
	public void UnlockStoreItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x205A728", Offset = "0x205A728", VA = "0x205A728")]
	public void PurchaseStoreItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x205DE7C", Offset = "0x205DE7C", VA = "0x205DE7C")]
	public uint GetIdEquippedItem(StoreItemType type)
	{
		return default(uint);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x205DEB0", Offset = "0x205DEB0", VA = "0x205DEB0")]
	public void EquipItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x205DEDC", Offset = "0x205DEDC", VA = "0x205DEDC")]
	public List<UnlockStoreItemsCond> GetUnlockStoreItemsCondList()
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x205DEE4", Offset = "0x205DEE4", VA = "0x205DEE4")]
	public string GetRankingLetterText(Ranking ranking)
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x205DF4C", Offset = "0x205DF4C", VA = "0x205DF4C")]
	public string GetRankingLetterColorText(Ranking ranking)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x205DFB4", Offset = "0x205DFB4", VA = "0x205DFB4")]
	public bool GetIfPendentStoreItemsToVisit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x205E108", Offset = "0x205E108", VA = "0x205E108")]
	public bool GetIfStoreItemIsPendentToVisit(uint id, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x205E224", Offset = "0x205E224", VA = "0x205E224")]
	public void RemoveStoreItemToVisit(uint id, StoreItemType type)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x205688C", Offset = "0x205688C", VA = "0x205688C")]
	private void CheckAllUnlockStoreItems()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x205E348", Offset = "0x205E348", VA = "0x205E348")]
	public void CheckUnlockStoreItem(Song _tempSong, int starsUnlockedCount, int id_track, int currentIdSongsInfoCampaing, SongDifficulty difficulty, GameMode gameMode, bool afterSong)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x205E880", Offset = "0x205E880", VA = "0x205E880")]
	public string GetUnlockIdCampaingCompletedText(uint id_campaign_song_completed)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x205EA40", Offset = "0x205EA40", VA = "0x205EA40")]
	public bool HasTVCinematicSeen(TVCinematicType tvCinematicType)
	{
		return default(bool);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x205EAE4", Offset = "0x205EAE4", VA = "0x205EAE4")]
	public void AddTVCinematicSeen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x205EB70", Offset = "0x205EB70", VA = "0x205EB70")]
	public void SetLastCampaignPlayedInfo(int last_id_act, float last_scroll_value)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x205EB9C", Offset = "0x205EB9C", VA = "0x205EB9C")]
	public void SetLastCampaignPlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x205EBBC", Offset = "0x205EBBC", VA = "0x205EBBC")]
	public void SetLastCampaignPlayedInfoReturnFromFinal(bool is_from_final_campaign)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x205EBDC", Offset = "0x205EBDC", VA = "0x205EBDC")]
	public LastCampaignPlayedInfo GetLastCampaingPlayedInfo()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x205EBE4", Offset = "0x205EBE4", VA = "0x205EBE4")]
	public GameController()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x205ECB0", Offset = "0x205ECB0", VA = "0x205ECB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA63F64", Offset = "0xA63F64")]
	private bool <CheckSteamOverlay>b__142_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CC")]
public enum SongDifficulty
{
	[Token(Token = "0x400055C")]
	Easy,
	[Token(Token = "0x400055D")]
	Normal,
	[Token(Token = "0x400055E")]
	Hard,
	[Token(Token = "0x400055F")]
	Extreme,
	[Token(Token = "0x4000560")]
	LENGTH
}
[Token(Token = "0x20000CD")]
public enum SongTrack
{
	[Token(Token = "0x4000562")]
	None = 0,
	[Token(Token = "0x4000563")]
	Track1 = 1,
	[Token(Token = "0x4000564")]
	Track2 = 2,
	[Token(Token = "0x4000565")]
	Track3 = 3,
	[Token(Token = "0x4000566")]
	Track4 = 4,
	[Token(Token = "0x4000567")]
	Track5 = 5,
	[Token(Token = "0x4000568")]
	Track6 = 6,
	[Token(Token = "0x4000569")]
	Track7 = 7,
	[Token(Token = "0x400056A")]
	Track8 = 8,
	[Token(Token = "0x400056B")]
	Track9 = 9,
	[Token(Token = "0x400056C")]
	Track10 = 10,
	[Token(Token = "0x400056D")]
	Track11 = 11,
	[Token(Token = "0x400056E")]
	Track12 = 12,
	[Token(Token = "0x400056F")]
	Track13 = 13,
	[Token(Token = "0x4000570")]
	Track14 = 14,
	[Token(Token = "0x4000571")]
	Track15 = 15,
	[Token(Token = "0x4000572")]
	Track16 = 16,
	[Token(Token = "0x4000573")]
	Track17 = 17,
	[Token(Token = "0x4000574")]
	Track18 = 18,
	[Token(Token = "0x4000575")]
	Track19 = 19,
	[Token(Token = "0x4000576")]
	Track20 = 20,
	[Token(Token = "0x4000577")]
	Track21 = 21,
	[Token(Token = "0x4000578")]
	Track22 = 22,
	[Token(Token = "0x4000579")]
	Track23 = 23,
	[Token(Token = "0x400057A")]
	Track24 = 24,
	[Token(Token = "0x400057B")]
	Track25 = 25,
	[Token(Token = "0x400057C")]
	Track26 = 26,
	[Token(Token = "0x400057D")]
	Track27 = 27,
	[Token(Token = "0x400057E")]
	Track28 = 28,
	[Token(Token = "0x400057F")]
	Track29 = 29,
	[Token(Token = "0x4000580")]
	Track30 = 30,
	[Token(Token = "0x4000581")]
	Track31 = 31,
	[Token(Token = "0x4000582")]
	Track32 = 32,
	[Token(Token = "0x4000583")]
	Tutorial = 10000,
	[Token(Token = "0x4000584")]
	TutorialWithSong = 10001,
	[Token(Token = "0x4000585")]
	TutorialLoopPerfect = 10002,
	[Token(Token = "0x4000586")]
	TutorialSpecialDemons = 10003
}
[Token(Token = "0x20000CE")]
public enum GameMode
{
	[Token(Token = "0x4000588")]
	Lobby,
	[Token(Token = "0x4000589")]
	Shop,
	[Token(Token = "0x400058A")]
	Campaign,
	[Token(Token = "0x400058B")]
	Challenge,
	[Token(Token = "0x400058C")]
	Settings
}
[Token(Token = "0x20000CF")]
public enum VariationMode
{
	[Token(Token = "0x400058E")]
	NONE,
	[Token(Token = "0x400058F")]
	PUNCHING_GLOVES,
	[Token(Token = "0x4000590")]
	ONE_DRUMSSTICK_HERO,
	[Token(Token = "0x4000591")]
	BE_A_HERO,
	[Token(Token = "0x4000592")]
	UNSTABLE_DRUMSSTICK,
	[Token(Token = "0x4000593")]
	WITHOUT_HELP,
	[Token(Token = "0x4000594")]
	SMASHING_DRUMS,
	[Token(Token = "0x4000595")]
	BLIND,
	[Token(Token = "0x4000596")]
	THOUGH_ENEMIES,
	[Token(Token = "0x4000597")]
	SWAPPING_DRUMS
}
[Token(Token = "0x20000D0")]
public enum Escenario
{
	[Token(Token = "0x4000599")]
	VULCAN,
	[Token(Token = "0x400059A")]
	DESERT,
	[Token(Token = "0x400059B")]
	HIGHWAY,
	[Token(Token = "0x400059C")]
	MENU
}
[Token(Token = "0x20000D1")]
public enum SongOrigin
{
	[Token(Token = "0x400059E")]
	ORIGINAL,
	[Token(Token = "0x400059F")]
	GROUP,
	[Token(Token = "0x40005A0")]
	VIDEOGAME
}
[Token(Token = "0x20000D2")]
public enum BuildOS
{
	[Token(Token = "0x40005A2")]
	ANDROID,
	[Token(Token = "0x40005A3")]
	STEAM
}
[Token(Token = "0x20000D3")]
public enum VRPlugin
{
	[Token(Token = "0x40005A5")]
	XR_INTERACTIONS,
	[Token(Token = "0x40005A6")]
	STEAM_VR,
	[Token(Token = "0x40005A7")]
	YVR,
	[Token(Token = "0x40005A8")]
	PICO,
	[Token(Token = "0x40005A9")]
	QIYU
}
[Token(Token = "0x20000D4")]
public enum ExternalAudioState
{
	[Token(Token = "0x40005AB")]
	CONNECTING,
	[Token(Token = "0x40005AC")]
	CONNECTED,
	[Token(Token = "0x40005AD")]
	DISCONNECTING,
	[Token(Token = "0x40005AE")]
	DISCONNECTED,
	[Token(Token = "0x40005AF")]
	CHANGED
}
[Token(Token = "0x20000D5")]
public enum AndroidRenderMode
{
	[Token(Token = "0x40005B1")]
	QUALITY,
	[Token(Token = "0x40005B2")]
	PERFORMANCE
}
[Token(Token = "0x20000D6")]
public enum GrabMode
{
	[Token(Token = "0x40005B4")]
	HOLD,
	[Token(Token = "0x40005B5")]
	TOGGLE,
	[Token(Token = "0x40005B6")]
	STICKY
}
[Serializable]
[Token(Token = "0x20000D7")]
public class Song
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int Order;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int DemoOrder;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string AutorName;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public float Duration;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public bool is_unlocked_challenge;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	public bool is_enabled;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Escenario AsignedEscenario;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public SongOrigin songOrigin;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SongInfo> DifficultiesInfo;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xCCD16C", Offset = "0xCCD16C", VA = "0xCCD16C")]
	public void Load(ChallengeSongSaveData cssd)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xCCD5C8", Offset = "0xCCD5C8", VA = "0xCCD5C8")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xCCD68C", Offset = "0xCCD68C", VA = "0xCCD68C")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xCCD694", Offset = "0xCCD694", VA = "0xCCD694")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xCCD69C", Offset = "0xCCD69C", VA = "0xCCD69C")]
	public Escenario GetScene()
	{
		return default(Escenario);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xCCD6A4", Offset = "0xCCD6A4", VA = "0xCCD6A4")]
	public Song()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D8")]
public class ChapterBase
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int[] Id_SongsInfoCampaign;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public int min_stars;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x203213C", Offset = "0x203213C", VA = "0x203213C")]
	public ChapterBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D9")]
public class ActBase
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int[] Id_Chapter;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x2023E08", Offset = "0x2023E08", VA = "0x2023E08")]
	public ActBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DA")]
public class BindModeFade
{
	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool is_fade_in;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool has_done;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool has_warning_show_up;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x20249B8", Offset = "0x20249B8", VA = "0x20249B8")]
	public BindModeFade(float time, bool is_fade_in)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DB")]
public class UnlockStoreItemsCond
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id_item;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public StoreItemType item_type;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnlockStoreItemsCondType unlock_type;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int id_campaign_song_completed;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int min_stars;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int min_letter_rank_id_song_challenge;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SongDifficulty min_letter_rank_difficulty_challenge;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Ranking min_letter_rank_challenge;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD74A1C", Offset = "0xD74A1C", VA = "0xD74A1C")]
	public UnlockStoreItemsCond()
	{
	}
}
[Token(Token = "0x20000DC")]
public enum UnlockStoreItemsCondType
{
	[Token(Token = "0x40005D6")]
	NONE,
	[Token(Token = "0x40005D7")]
	SONG_CAMPAIGN_COMPLETED,
	[Token(Token = "0x40005D8")]
	MIN_STARS,
	[Token(Token = "0x40005D9")]
	MIN_LETTER_RANK_CHALLENGE
}
[Token(Token = "0x20000DD")]
public class LastCampaignPlayedInfo
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int last_id_act;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float last_scroll_value;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool is_return_from_continue;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool is_from_final_campaign;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xDA359C", Offset = "0xDA359C", VA = "0xDA359C")]
	public LastCampaignPlayedInfo()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LastChallengePlayedInfo
{
	[Token(Token = "0x600056F")]
	[Address(RVA = "0xDA35D0", Offset = "0xDA35D0", VA = "0xDA35D0")]
	public LastChallengePlayedInfo()
	{
	}
}
[Token(Token = "0x20000DF")]
public class GamePurchaseController : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8EC", Offset = "0xA5C8EC")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamePurchaseController <>4__this;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialScale;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xDB4078", Offset = "0xDB4078", VA = "0xDB4078")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xDB40AC", Offset = "0xDB40AC", VA = "0xDB40AC")]
		internal void <NotificationAnimation>b__0()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Notification;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xDB3EEC", Offset = "0xDB3EEC", VA = "0xDB3EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xDB3EF0", Offset = "0xDB3EF0", VA = "0xDB3EF0")]
	private void NotificationAnimation()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xDB4080", Offset = "0xDB4080", VA = "0xDB4080")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xDB40A0", Offset = "0xDB40A0", VA = "0xDB40A0")]
	public void ShowGamePurchaseOnWebBrowser()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xDB40A4", Offset = "0xDB40A4", VA = "0xDB40A4")]
	public GamePurchaseController()
	{
	}
}
[Token(Token = "0x20000E0")]
public class HapticController : MonoBehaviour
{
	[Token(Token = "0x20002A0")]
	private struct HapticImpulse
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float frequency;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float amplitude;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float duration;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeStamp;

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB1E424", Offset = "0xB1E424", VA = "0xB1E424")]
		public HapticImpulse(float _frequency, float _amplitude, float _duration)
		{
		}
	}

	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C8FC", Offset = "0xA5C8FC")]
	private sealed class <OculusVibration>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _duration;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _frequency;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _amplitude;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRInput.Controller _controller;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xDC32D8", Offset = "0xDC32D8", VA = "0xDC32D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xDC3340", Offset = "0xDC3340", VA = "0xDC3340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xDC2C44", Offset = "0xDC2C44", VA = "0xDC2C44")]
		[DebuggerHidden]
		public <OculusVibration>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xDC31A0", Offset = "0xDC31A0", VA = "0xDC31A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xDC31A4", Offset = "0xDC31A4", VA = "0xDC31A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xDC32E0", Offset = "0xDC32E0", VA = "0xDC32E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C90C", Offset = "0xA5C90C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<HapticImpulse, float> <>9__15_0;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<HapticImpulse, float> <>9__15_1;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<HapticImpulse, float> <>9__15_2;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<HapticImpulse, float> <>9__15_3;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<HapticImpulse, float> <>9__15_4;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<HapticImpulse, float> <>9__15_5;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xDC3174", Offset = "0xDC3174", VA = "0xDC3174")]
		public <>c()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xDC317C", Offset = "0xDC317C", VA = "0xDC317C")]
		internal float <PICOVibration>b__15_0(HapticImpulse x)
		{
			return default(float);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xDC3180", Offset = "0xDC3180", VA = "0xDC3180")]
		internal float <PICOVibration>b__15_1(HapticImpulse x)
		{
			return default(float);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xDC3188", Offset = "0xDC3188", VA = "0xDC3188")]
		internal float <PICOVibration>b__15_2(HapticImpulse x)
		{
			return default(float);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xDC318C", Offset = "0xDC318C", VA = "0xDC318C")]
		internal float <PICOVibration>b__15_3(HapticImpulse x)
		{
			return default(float);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xDC3194", Offset = "0xDC3194", VA = "0xDC3194")]
		internal float <PICOVibration>b__15_4(HapticImpulse x)
		{
			return default(float);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xDC3198", Offset = "0xDC3198", VA = "0xDC3198")]
		internal float <PICOVibration>b__15_5(HapticImpulse x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C91C", Offset = "0xA5C91C")]
	private sealed class <PICOVibration>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PXR_Input.Controller _hand;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<HapticImpulse> hapticImpulse;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticController <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xDC3A6C", Offset = "0xDC3A6C", VA = "0xDC3A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xDC3AD4", Offset = "0xDC3AD4", VA = "0xDC3AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xDC2C70", Offset = "0xDC2C70", VA = "0xDC2C70")]
		[DebuggerHidden]
		public <PICOVibration>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xDC3348", Offset = "0xDC3348", VA = "0xDC3348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xDC334C", Offset = "0xDC334C", VA = "0xDC334C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xDC3A74", Offset = "0xDC3A74", VA = "0xDC3A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticController instance;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDevice rightHand;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice leftHand;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float last_left_haptic_timestamp;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float last_left_haptic_duration;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float last_right_haptic_timestamp;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float last_right_haptic_duration;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool yvr_vibration_left;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool yvr_vibration_right;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<HapticImpulse> leftHapticImpulses;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<HapticImpulse> rightHapticImpulses;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xDC26D8", Offset = "0xDC26D8", VA = "0xDC26D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xDC27A8", Offset = "0xDC27A8", VA = "0xDC27A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xDC2864", Offset = "0xDC2864", VA = "0xDC2864")]
	public void PlayHapticRightHand(uint channel, float amplitude, float duration, float frequency = 0.8f, bool overrideHaptics = true)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xDC2BB0", Offset = "0xDC2BB0", VA = "0xDC2BB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63F74", Offset = "0xA63F74")]
	private IEnumerator OculusVibration(float _duration, float _amplitude, float _frequency, OVRInput.Controller _controller)
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xDC2B10", Offset = "0xDC2B10", VA = "0xDC2B10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA63FD8", Offset = "0xA63FD8")]
	private IEnumerator PICOVibration(List<HapticImpulse> hapticImpulse, PXR_Input.Controller _hand)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xDC2C9C", Offset = "0xDC2C9C", VA = "0xDC2C9C")]
	public void PlayHapticLeftHand(uint channel, float amplitude, float duration, float frequency = 0.8f, bool overrideHaptics = true)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xDC2F0C", Offset = "0xDC2F0C", VA = "0xDC2F0C")]
	public void PlayHapticRightHandOverride(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xDC3008", Offset = "0xDC3008", VA = "0xDC3008")]
	public void PlayHapticLeftHandOverride(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xDC3104", Offset = "0xDC3104", VA = "0xDC3104")]
	public HapticController()
	{
	}
}
[Token(Token = "0x20000E1")]
public class LobbyController : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C92C", Offset = "0xA5C92C")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject notificationObj;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialScale;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbyController <>4__this;

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xDA4D80", Offset = "0xDA4D80", VA = "0xDA4D80")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xDA7520", Offset = "0xDA7520", VA = "0xDA7520")]
		internal void <NotificationAnimation>b__0()
		{
		}
	}

	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C93C", Offset = "0xA5C93C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xDA6A30", Offset = "0xDA6A30", VA = "0xDA6A30")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xDA7590", Offset = "0xDA7590", VA = "0xDA7590")]
		internal void <ShowRoadmap>b__1()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xDA766C", Offset = "0xDA766C", VA = "0xDA766C")]
		internal void <ShowRoadmap>b__2()
		{
		}
	}

	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C94C", Offset = "0xA5C94C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xDA7018", Offset = "0xDA7018", VA = "0xDA7018")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xDA7724", Offset = "0xDA7724", VA = "0xDA7724")]
		internal void <ShowNews>b__1()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xDA7800", Offset = "0xDA7800", VA = "0xDA7800")]
		internal void <ShowNews>b__2()
		{
		}
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C95C", Offset = "0xA5C95C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyController <>4__this;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xDA5C20", Offset = "0xDA5C20", VA = "0xDA5C20")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xDA78B8", Offset = "0xDA78B8", VA = "0xDA78B8")]
		internal void <HideNews>b__0()
		{
		}
	}

	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C96C", Offset = "0xA5C96C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xDA7298", Offset = "0xDA7298", VA = "0xDA7298")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xDA7A04", Offset = "0xDA7A04", VA = "0xDA7A04")]
		internal void <ShowGamePurchase>b__1()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xDA7AE0", Offset = "0xDA7AE0", VA = "0xDA7AE0")]
		internal void <ShowGamePurchase>b__2()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C97C", Offset = "0xA5C97C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyController <>4__this;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xDA5FBC", Offset = "0xDA5FBC", VA = "0xDA5FBC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xDA7B98", Offset = "0xDA7B98", VA = "0xDA7B98")]
		internal void <HideGamePurchase>b__0()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C98C", Offset = "0xA5C98C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xDA7518", Offset = "0xDA7518", VA = "0xDA7518")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xDA7CE4", Offset = "0xDA7CE4", VA = "0xDA7CE4")]
		internal void <ShowGameQuit>b__1()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xDA7DC0", Offset = "0xDA7DC0", VA = "0xDA7DC0")]
		internal void <ShowGameQuit>b__2()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C99C", Offset = "0xA5C99C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyController <>4__this;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xDA63D8", Offset = "0xDA63D8", VA = "0xDA63D8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xDA7EBC", Offset = "0xDA7EBC", VA = "0xDA7EBC")]
		internal void <HideGameQuit>b__0()
		{
		}
	}

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Chapter;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject NewSong;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject NewItem;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject Settings;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject Tutorial;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject QuitBtn;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject RoadmapBtn;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject Roadmap;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject CloseRoadmapBtn;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject GamePurchasePopUpBtn;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject GamePurchaseBtn;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject GamePurchase;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject CloseGamePurchaseBtn;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject HideUIBtn;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ShopNotification;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject NewsNotification;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject ApplicationQuitPopUp;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject ApplicationQuitCancelBtn;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject ApplicationQuitExitBtn;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject NewsBtn;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject News;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject CloseNewsBtn;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject Scrollbar;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject[] Frames;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject[] DemoStickers;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xDA45F4", Offset = "0xDA45F4", VA = "0xDA45F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xDA4B60", Offset = "0xDA4B60", VA = "0xDA4B60")]
	private void NotificationAnimation(GameObject notificationObj)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xDA4D88", Offset = "0xDA4D88", VA = "0xDA4D88")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xDA4DA8", Offset = "0xDA4DA8", VA = "0xDA4DA8")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xDA4F30", Offset = "0xDA4F30", VA = "0xDA4F30")]
	public void ShowSettings()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xDA5414", Offset = "0xDA5414", VA = "0xDA5414")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDA5550", Offset = "0xDA5550", VA = "0xDA5550")]
	public void ShowRoadmap()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDA5708", Offset = "0xDA5708", VA = "0xDA5708")]
	public void HideRoadmap()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDA588C", Offset = "0xDA588C", VA = "0xDA588C")]
	public void ShowNews()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDA5A30", Offset = "0xDA5A30", VA = "0xDA5A30")]
	public void HideNews()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDA5C28", Offset = "0xDA5C28", VA = "0xDA5C28")]
	public void ShowGamePurchase()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xDA5DCC", Offset = "0xDA5DCC", VA = "0xDA5DCC")]
	public void HideGamePurchase()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xDA5FC4", Offset = "0xDA5FC4", VA = "0xDA5FC4")]
	public void ShowGameQuit()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xDA61E8", Offset = "0xDA61E8", VA = "0xDA61E8")]
	public void HideGameQuit()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDA4CF4", Offset = "0xDA4CF4", VA = "0xDA4CF4")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDA63E0", Offset = "0xDA63E0", VA = "0xDA63E0")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDA65E8", Offset = "0xDA65E8", VA = "0xDA65E8")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xDA67E0", Offset = "0xDA67E0", VA = "0xDA67E0")]
	public LobbyController()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xDA67E8", Offset = "0xDA67E8", VA = "0xDA67E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6403C", Offset = "0xA6403C")]
	private void <ShowRoadmap>b__34_0()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xDA6A38", Offset = "0xDA6A38", VA = "0xDA6A38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6404C", Offset = "0xA6404C")]
	private void <HideRoadmap>b__35_0()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xDA6D6C", Offset = "0xDA6D6C", VA = "0xDA6D6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6405C", Offset = "0xA6405C")]
	private void <ShowNews>b__36_0()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xDA7020", Offset = "0xDA7020", VA = "0xDA7020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6406C", Offset = "0xA6406C")]
	private void <ShowGamePurchase>b__38_0()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xDA72A0", Offset = "0xDA72A0", VA = "0xDA72A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6407C", Offset = "0xA6407C")]
	private void <ShowGameQuit>b__40_0()
	{
	}
}
[Token(Token = "0x20000E2")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerController instance;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UserLevelInfoCSVRow> userInfoCSVRowList;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte current_user_level;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public ushort current_user_total_hp;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort current_user_hp;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public ushort current_user_damage;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ushort current_user_base_points_per_hit;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DrumStickSpawner leftDrumStickSpawner;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DrumStickSpawner rightDrumStrickSpawner;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint last_id_drum_stick_grabbed;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float explosionRadious;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float damageMulModifier;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float missesToPunish;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float consecutiveMisses;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float missMulModifier;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ushort healCounter;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private ushort hitsToHeal;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private ushort oldHealCounter;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public ushort hits_received_count;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float inmune_timestamp;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject UIpointToFollowRight;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject UIpointToFollowRightEasy;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject UIpointToFollowWarning;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject UIpointToFollowLeft;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject PSPosDamage;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject PSDamage;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject Ink;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xF4BE2C", Offset = "0xF4BE2C", VA = "0xF4BE2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xF4BFA4", Offset = "0xF4BFA4", VA = "0xF4BFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xF4C0E8", Offset = "0xF4C0E8", VA = "0xF4C0E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xF4C22C", Offset = "0xF4C22C", VA = "0xF4C22C")]
	public void StartPlayer()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xF4C2E4", Offset = "0xF4C2E4", VA = "0xF4C2E4")]
	private void LoadPlayerLevelInfoCSV()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xF4C6D4", Offset = "0xF4C6D4", VA = "0xF4C6D4")]
	public bool InitCurrentPlayerValues()
	{
		return default(bool);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xF4C820", Offset = "0xF4C820", VA = "0xF4C820")]
	public void InitGameStats()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xF4C8E0", Offset = "0xF4C8E0", VA = "0xF4C8E0")]
	public float GetHPPercentage()
	{
		return default(float);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xF4C8F8", Offset = "0xF4C8F8", VA = "0xF4C8F8")]
	public void ReceiveDamage(float damage)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xF4CBCC", Offset = "0xF4CBCC", VA = "0xF4CBCC")]
	public void ReceiveDamageNoExplosion(float damage)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xF4CD64", Offset = "0xF4CD64", VA = "0xF4CD64")]
	public void AddHealCounter()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xF4CB78", Offset = "0xF4CB78", VA = "0xF4CB78")]
	public void ResetHealCounter()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xF4CF58", Offset = "0xF4CF58", VA = "0xF4CF58")]
	public void AddConsecutiveMisses(IconsType _iconsType)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xF4D054", Offset = "0xF4D054", VA = "0xF4D054")]
	public void AddConsecutiveMisses(IconsType _iconsType, int _nEnemies)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xF4CB68", Offset = "0xF4CB68", VA = "0xF4CB68")]
	public void ResetConsecutiveMisses()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xF4CEB4", Offset = "0xF4CEB4", VA = "0xF4CEB4")]
	public void Heal(int heal)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xF4D174", Offset = "0xF4D174", VA = "0xF4D174")]
	public void CheckHP()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xF4D310", Offset = "0xF4D310", VA = "0xF4D310")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xF4D4D0", Offset = "0xF4D4D0", VA = "0xF4D4D0")]
	public Transform GetUIPointToFollowTransform()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xF4D54C", Offset = "0xF4D54C", VA = "0xF4D54C")]
	public Transform GetUIWarningPointToFollowTransform()
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xF4D568", Offset = "0xF4D568", VA = "0xF4D568", Slot = "4")]
	public virtual void ActiveExplosionDamage()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xF4D758", Offset = "0xF4D758", VA = "0xF4D758")]
	public void InkState(bool _state)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xF4D7E4", Offset = "0xF4D7E4", VA = "0xF4D7E4")]
	private void PauseInk()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xF4D890", Offset = "0xF4D890", VA = "0xF4D890")]
	private void PlayInk()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xF4CB80", Offset = "0xF4CB80", VA = "0xF4CB80")]
	private void ActivateInmune(float duration)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xF4CB38", Offset = "0xF4CB38", VA = "0xF4CB38")]
	private bool IsInmune()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xF4D93C", Offset = "0xF4D93C", VA = "0xF4D93C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000E3")]
public class UserLevelInfoCSVRow
{
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte level;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public ushort hp;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ushort damage;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public ushort points_per_hit;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ushort exp;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public ushort sum_exp;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xD74A24", Offset = "0xD74A24", VA = "0xD74A24")]
	public UserLevelInfoCSVRow()
	{
	}
}
[Token(Token = "0x20000E4")]
public class RankingController : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	private enum RankingState
	{
		[Token(Token = "0x400127B")]
		GLOBAL,
		[Token(Token = "0x400127C")]
		PERSONAL,
		[Token(Token = "0x400127D")]
		FRIENDS
	}

	[Token(Token = "0x20002AD")]
	private enum RankingMessages
	{
		[Token(Token = "0x400127F")]
		NO_INTERNET,
		[Token(Token = "0x4001280")]
		NO_RANKING,
		[Token(Token = "0x4001281")]
		UNKNOWN_ERROR,
		[Token(Token = "0x4001282")]
		TIMED_OUT
	}

	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9AC", Offset = "0xA5C9AC")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RankingController <>4__this;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float callRef;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xF51E98", Offset = "0xF51E98", VA = "0xF51E98")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xF51EA0", Offset = "0xF51EA0", VA = "0xF51EA0")]
		internal bool <WaitForRankingResponse>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9BC", Offset = "0xA5C9BC")]
	private sealed class <WaitForRankingResponse>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RankingController <>4__this;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass23_0 <>8__1;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xF52304", Offset = "0xF52304", VA = "0xF52304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xF5236C", Offset = "0xF5236C", VA = "0xF5236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xF5150C", Offset = "0xF5150C", VA = "0xF5150C")]
		[DebuggerHidden]
		public <WaitForRankingResponse>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xF520FC", Offset = "0xF520FC", VA = "0xF520FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xF52100", Offset = "0xF52100", VA = "0xF52100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xF5230C", Offset = "0xF5230C", VA = "0xF5230C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9CC", Offset = "0xA5C9CC")]
	private sealed class <UpdateThreeEllipsis>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RankingController <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xF5208C", Offset = "0xF5208C", VA = "0xF5208C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xF520F4", Offset = "0xF520F4", VA = "0xF520F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xF515B4", Offset = "0xF515B4", VA = "0xF515B4")]
		[DebuggerHidden]
		public <UpdateThreeEllipsis>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xF51EF0", Offset = "0xF51EF0", VA = "0xF51EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xF51EF4", Offset = "0xF51EF4", VA = "0xF51EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xF52094", Offset = "0xF52094", VA = "0xF52094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RankingState rankingState;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] rankingEntries;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite myPlayerImage;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite regularPlayerImage;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string rankingName;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cooldownRef;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float btnCooldown;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] rankingButtons;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject rankingMessages;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI loadingTextMeshPro;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI messageTextMeshPro;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject DemoStickers;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentThreeEllipsisCount;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTimestampThreeEllipsis;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string loadingText;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string messageText;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool rankingRecived;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xF508C0", Offset = "0xF508C0", VA = "0xF508C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xF509B0", Offset = "0xF509B0", VA = "0xF509B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xF50B00", Offset = "0xF50B00", VA = "0xF50B00")]
	public void InitValues()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xF50F14", Offset = "0xF50F14", VA = "0xF50F14")]
	public void GetEntries()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xF51490", Offset = "0xF51490", VA = "0xF51490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6408C", Offset = "0xA6408C")]
	private IEnumerator WaitForRankingResponse()
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xF512CC", Offset = "0xF512CC", VA = "0xF512CC")]
	private void SetNoRankingMessage(RankingMessages rankingMessage)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xF50D08", Offset = "0xF50D08", VA = "0xF50D08")]
	public void SetRankingMode(int _mode)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xF51538", Offset = "0xF51538", VA = "0xF51538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA640F0", Offset = "0xA640F0")]
	private IEnumerator UpdateThreeEllipsis()
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xF515E0", Offset = "0xF515E0", VA = "0xF515E0")]
	private void PicoEntriesCallback(Pico.Platform.Message<Pico.Platform.Models.LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xF51A3C", Offset = "0xF51A3C", VA = "0xF51A3C")]
	private void OculusEntriesCallback(Oculus.Platform.Message<Oculus.Platform.Models.LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xF5148C", Offset = "0xF5148C", VA = "0xF5148C")]
	private void FindSteamLeaderboard(string _rankingname)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xF51E90", Offset = "0xF51E90", VA = "0xF51E90")]
	public RankingController()
	{
	}
}
[Token(Token = "0x20000E5")]
public class SelectorController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9DC", Offset = "0xA5C9DC")]
	private sealed class <>c
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Song, int> <>9__35_0;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Song, bool> <>9__35_1;

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD8DB20", Offset = "0xD8DB20", VA = "0xD8DB20")]
		public <>c()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xD8DB28", Offset = "0xD8DB28", VA = "0xD8DB28")]
		internal int <InitChallengeIE>b__35_0(Song songToOrder)
		{
			return default(int);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD8DB40", Offset = "0xD8DB40", VA = "0xD8DB40")]
		internal bool <InitChallengeIE>b__35_1(Song songToOrder)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9EC", Offset = "0xA5C9EC")]
	private sealed class <InitChallengeIE>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <pos>5__2;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Song> <songToOrderList>5__3;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xD8F414", Offset = "0xD8F414", VA = "0xD8F414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xD8F47C", Offset = "0xD8F47C", VA = "0xD8F47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xD8C274", Offset = "0xD8C274", VA = "0xD8C274")]
		[DebuggerHidden]
		public <InitChallengeIE>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD8E9A0", Offset = "0xD8E9A0", VA = "0xD8E9A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xD8E9A4", Offset = "0xD8E9A4", VA = "0xD8E9A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xD8F41C", Offset = "0xD8F41C", VA = "0xD8F41C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5C9FC", Offset = "0xA5C9FC")]
	private sealed class <InitCampaignIE>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id_act;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float last_scroll_value;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ActBase <act>5__2;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <pos>5__3;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <ButtonTemp>5__4;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChapterBase <chapter>5__6;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte <songsCount>5__7;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ContentBlock <tempChapter>5__8;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <j>5__9;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xD8E930", Offset = "0xD8E930", VA = "0xD8E930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xD8E998", Offset = "0xD8E998", VA = "0xD8E998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD8C368", Offset = "0xD8C368", VA = "0xD8C368")]
		[DebuggerHidden]
		public <InitCampaignIE>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD8DB60", Offset = "0xD8DB60", VA = "0xD8DB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD8DB64", Offset = "0xD8DB64", VA = "0xD8DB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD8E938", Offset = "0xD8E938", VA = "0xD8E938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA0C", Offset = "0xA5CA0C")]
	private sealed class <ShowStageSelector>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xD8F648", Offset = "0xD8F648", VA = "0xD8F648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xD8F6B0", Offset = "0xD8F6B0", VA = "0xD8F6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xD8CC30", Offset = "0xD8CC30", VA = "0xD8CC30")]
		[DebuggerHidden]
		public <ShowStageSelector>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xD8F484", Offset = "0xD8F484", VA = "0xD8F484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xD8F488", Offset = "0xD8F488", VA = "0xD8F488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xD8F650", Offset = "0xD8F650", VA = "0xD8F650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Title;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5F534", Offset = "0xA5F534")]
	private List<GameObject> ListSongs;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject SongBlock;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject Info;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject DifficultyButtons;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject ActButtons;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject FrameSupportStars;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject Ranking;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject StageSelector;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ActHeader;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Material[] ActHeaderMat;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject FlechaBack;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine initSongs;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DG.Tweening.Tween SnapSong;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 OgPosition;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 RankingPosition;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool canCheckPosition;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public byte lastChapterStarCount;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int current_act;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float challengeScrollValue;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private GameMode gameModeLocal;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xD8A6EC", Offset = "0xD8A6EC", VA = "0xD8A6EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xD8A954", Offset = "0xD8A954", VA = "0xD8A954")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xD8AB70", Offset = "0xD8AB70", VA = "0xD8AB70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xD8B0E4", Offset = "0xD8B0E4", VA = "0xD8B0E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xD8B564", Offset = "0xD8B564", VA = "0xD8B564")]
	public void Clear()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xD8B024", Offset = "0xD8B024", VA = "0xD8B024")]
	public void InitScreen()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xD8B7C8", Offset = "0xD8B7C8", VA = "0xD8B7C8")]
	private void InitSongs()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xD8BAB0", Offset = "0xD8BAB0", VA = "0xD8BAB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64154", Offset = "0xA64154")]
	private IEnumerator InitChallengeIE()
	{
		return null;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xD8C2A0", Offset = "0xD8C2A0", VA = "0xD8C2A0")]
	public void CheckVisible()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xD8BB2C", Offset = "0xD8BB2C", VA = "0xD8BB2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA641B8", Offset = "0xA641B8")]
	private IEnumerator InitCampaignIE(int id_act, float last_scroll_value)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xD8B6A0", Offset = "0xD8B6A0", VA = "0xD8B6A0")]
	public void Deleteicons()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xD8C5F8", Offset = "0xD8C5F8", VA = "0xD8C5F8")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xD8C798", Offset = "0xD8C798", VA = "0xD8C798")]
	public void ShowRanking()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xD8CBB4", Offset = "0xD8CBB4", VA = "0xD8CBB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6421C", Offset = "0xA6421C")]
	public IEnumerator ShowStageSelector()
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xD8CC5C", Offset = "0xD8CC5C", VA = "0xD8CC5C")]
	public void HideStageSelector()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xD8CDD4", Offset = "0xD8CDD4", VA = "0xD8CDD4")]
	private void DeactivateInfo()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xD8CA18", Offset = "0xD8CA18", VA = "0xD8CA18")]
	private void DesactivateRanking()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xD8CF78", Offset = "0xD8CF78", VA = "0xD8CF78")]
	private void CheckLockDifficulty()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD8D040", Offset = "0xD8D040", VA = "0xD8D040")]
	public void ChangeAct(int id_act)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD8D178", Offset = "0xD8D178", VA = "0xD8D178")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD8C394", Offset = "0xD8C394", VA = "0xD8C394")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD8D260", Offset = "0xD8D260", VA = "0xD8D260")]
	public void BackFromTV()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xD8C110", Offset = "0xD8C110", VA = "0xD8C110")]
	private void SetActFrame(int id_act)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xD8BBC8", Offset = "0xD8BBC8", VA = "0xD8BBC8")]
	public void SetActButtonSelected(int id_act)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD8D280", Offset = "0xD8D280", VA = "0xD8D280")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xD8D450", Offset = "0xD8D450", VA = "0xD8D450")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD8B63C", Offset = "0xD8B63C", VA = "0xD8B63C")]
	public float GetScrollBarCurrentValue()
	{
		return default(float);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD8D610", Offset = "0xD8D610", VA = "0xD8D610")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xD8D688", Offset = "0xD8D688", VA = "0xD8D688")]
	public int GetCurrentAct()
	{
		return default(int);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD8D690", Offset = "0xD8D690", VA = "0xD8D690")]
	public SelectorController()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD8D718", Offset = "0xD8D718", VA = "0xD8D718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64280", Offset = "0xA64280")]
	private void <ActivateInfo>b__39_0()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD8D81C", Offset = "0xD8D81C", VA = "0xD8D81C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64290", Offset = "0xA64290")]
	private void <ShowRanking>b__40_0()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD8D978", Offset = "0xD8D978", VA = "0xD8D978")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA642A0", Offset = "0xA642A0")]
	private void <ShowStageSelector>b__41_0()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD8DA58", Offset = "0xD8DA58", VA = "0xD8DA58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA642B0", Offset = "0xA642B0")]
	private void <HideStageSelector>b__42_0()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD8DA78", Offset = "0xD8DA78", VA = "0xD8DA78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA642C0", Offset = "0xA642C0")]
	private void <DeactivateInfo>b__43_0()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD8DA98", Offset = "0xD8DA98", VA = "0xD8DA98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA642D0", Offset = "0xA642D0")]
	private void <DesactivateRanking>b__44_0()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SettingsController : MonoBehaviour
{
	[Token(Token = "0x20002B5")]
	public enum SettingsScreen
	{
		[Token(Token = "0x40012A6")]
		GAMEPLAY = 0,
		[Token(Token = "0x40012A7")]
		AUDIO = 1,
		[Token(Token = "0x40012A8")]
		GRAPHICS = 2,
		[Token(Token = "0x40012A9")]
		LANGUAGE = 3,
		[Token(Token = "0x40012AA")]
		USABILITY = 4,
		[Token(Token = "0x40012AB")]
		LIV = 7,
		[Token(Token = "0x40012AC")]
		CREDITS = 8,
		[Token(Token = "0x40012AD")]
		SIAMES = 9
	}

	[Token(Token = "0x20002B6")]
	public enum DrumsScreen
	{
		[Token(Token = "0x40012AF")]
		HEIGHT,
		[Token(Token = "0x40012B0")]
		POSITION
	}

	[Token(Token = "0x20002B7")]
	public enum SettingsValue
	{
		[Token(Token = "0x40012B2")]
		VISUAL_EFFECTS,
		[Token(Token = "0x40012B3")]
		LANGUAGE,
		[Token(Token = "0x40012B4")]
		MASTER_VOLUME,
		[Token(Token = "0x40012B5")]
		TRACK_VOLUME,
		[Token(Token = "0x40012B6")]
		VFX_VOLUME,
		[Token(Token = "0x40012B7")]
		VIBRATION,
		[Token(Token = "0x40012B8")]
		LIV_ACTIVATION,
		[Token(Token = "0x40012B9")]
		GRAB_MODE,
		[Token(Token = "0x40012BA")]
		QUALITY_SETTINGS,
		[Token(Token = "0x40012BB")]
		RENDER_SCALE,
		[Token(Token = "0x40012BC")]
		DEFAULT_GRAPHICS,
		[Token(Token = "0x40012BD")]
		SHOW_HANDS,
		[Token(Token = "0x40012BE")]
		SPLIT_SIAMES,
		[Token(Token = "0x40012BF")]
		LATENCY,
		[Token(Token = "0x40012C0")]
		DRUMS_VOLUME,
		[Token(Token = "0x40012C1")]
		PERFECT_LINE,
		[Token(Token = "0x40012C2")]
		DRUMS_LAYER_VOLUME,
		[Token(Token = "0x40012C3")]
		RENDER_MODE,
		[Token(Token = "0x40012C4")]
		DRUMSTICK_AUTOSPAWN
	}

	[Serializable]
	[Token(Token = "0x20002B8")]
	public class OptionsSettings
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA62F68", Offset = "0xA62F68")]
		public bool vibration;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA62F78", Offset = "0xA62F78")]
		public bool toggle;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string language;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int master;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int track;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int vfx;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int drums;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int drumsLayer;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool visualEffects;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool mrc;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GrabMode grabMode;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool separateSiames;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool perfectLineGrid;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool drumstick_autospawn;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AndroidRenderMode renderMode;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int vibrationPerc;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showHands;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int latency_ms;

		[Token(Token = "0x17000174")]
		public float master_f
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xD964E8", Offset = "0xD964E8", VA = "0xD964E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000175")]
		public float track_f
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xD96500", Offset = "0xD96500", VA = "0xD96500")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000176")]
		public float vfx_f
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xD96518", Offset = "0xD96518", VA = "0xD96518")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000177")]
		public float drums_f
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xD96530", Offset = "0xD96530", VA = "0xD96530")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000178")]
		public float drumsLayer_f
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xD96548", Offset = "0xD96548", VA = "0xD96548")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000179")]
		public float latency_f
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xD96560", Offset = "0xD96560", VA = "0xD96560")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xD93D2C", Offset = "0xD93D2C", VA = "0xD93D2C")]
		public OptionsSettings()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xD90748", Offset = "0xD90748", VA = "0xD90748")]
		public OptionsSettings(OptionsSettings settings)
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA1C", Offset = "0xA5CA1C")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsController <>4__this;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__3;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__2;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xD91B6C", Offset = "0xD91B6C", VA = "0xD91B6C")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xD95A88", Offset = "0xD95A88", VA = "0xD95A88")]
		internal void <SwapDrumsScreen>b__0()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xD95B70", Offset = "0xD95B70", VA = "0xD95B70")]
		internal void <SwapDrumsScreen>b__1()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xD95E64", Offset = "0xD95E64", VA = "0xD95E64")]
		internal void <SwapDrumsScreen>b__2()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xD95F4C", Offset = "0xD95F4C", VA = "0xD95F4C")]
		internal void <SwapDrumsScreen>b__3()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA2C", Offset = "0xA5CA2C")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsController <>4__this;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xD92FDC", Offset = "0xD92FDC", VA = "0xD92FDC")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD95FA4", Offset = "0xD95FA4", VA = "0xD95FA4")]
		internal void <ActivateAnimationInfo>b__0()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD96080", Offset = "0xD96080", VA = "0xD96080")]
		internal void <ActivateAnimationInfo>b__1()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA3C", Offset = "0xA5CA3C")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsController <>4__this;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD92FE4", Offset = "0xD92FE4", VA = "0xD92FE4")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD960C8", Offset = "0xD960C8", VA = "0xD960C8")]
		internal void <DesctivateAnimationInfo>b__0()
		{
		}
	}

	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA4C", Offset = "0xA5CA4C")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject animObject;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject enterAnimObject;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool titleAnimation;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingsController <>4__this;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD93C44", Offset = "0xD93C44", VA = "0xD93C44")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD9612C", Offset = "0xD9612C", VA = "0xD9612C")]
		internal void <ExitAnimation>b__0()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD961FC", Offset = "0xD961FC", VA = "0xD961FC")]
		internal void <ExitAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA5C", Offset = "0xA5CA5C")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject animObject;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool titleAnimation;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingsController <>4__this;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD93C4C", Offset = "0xD93C4C", VA = "0xD93C4C")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD9637C", Offset = "0xD9637C", VA = "0xD9637C")]
		internal void <EnterAnimation>b__0()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD9644C", Offset = "0xD9644C", VA = "0xD9644C")]
		internal void <EnterAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SettingsScreen settingsScreen;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DrumsScreen drumsScreen;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameplaySettings;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject audioSettings;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject graphicsSettings;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject languageSettings;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject usabilitySettings;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject popUpDrumHeightAdjustment;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject popUpLivSettings;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject popUpSiamesSettings;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject popUpDrumHeightAdjustmentExit;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject popUpExit;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject popUpInfo;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject backArrow;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject settingsAnimationParent;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject backArrowDrumsSettings;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] optionsButtons;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] drumsButtons;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject frameTitle;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject offsetParticleEffectParent;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text heightValueText;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TMP_Text[] settingsValueTexts;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<string> availableLocalizationList;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject background;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject backgroundMRC;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject backgroundSiames;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject[] ScrollBar;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private LocalizationTextLoader LIV_Warning;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] qualityNameKeys;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] grabModeNameKeys;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private OptionsSettings oldSettings;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float drumsOffsetBeforeSettings;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector2 drumsLowTomOffsetBeforeSettings;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector2 drumsHighTomOffsetBeforeSettings;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool livEnabledBeforeSettings;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	private bool siamesSeparatedEnabledBeforeSettings;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	private bool transition;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD8F6B8", Offset = "0xD8F6B8", VA = "0xD8F6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD8FCEC", Offset = "0xD8FCEC", VA = "0xD8FCEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD908D4", Offset = "0xD908D4", VA = "0xD908D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD90E50", Offset = "0xD90E50", VA = "0xD90E50")]
	public void SwapSettingsContent(int _newScreen)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD91664", Offset = "0xD91664", VA = "0xD91664")]
	public void SwapDrumsScreen(int _newScreen)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD91B74", Offset = "0xD91B74", VA = "0xD91B74")]
	public void ActivateLivSettingsScreen()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD91EC8", Offset = "0xD91EC8", VA = "0xD91EC8")]
	public void ActivateSiamesSettingsScreen()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD91FA0", Offset = "0xD91FA0", VA = "0xD91FA0")]
	public void ActivateExitPopUpScreen()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD920D0", Offset = "0xD920D0", VA = "0xD920D0")]
	public void SetLivSettings(bool _save)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD922F4", Offset = "0xD922F4", VA = "0xD922F4")]
	public void SetSiamesSettings(bool _save)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD92378", Offset = "0xD92378", VA = "0xD92378")]
	public void AdjustDrumsHeight()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD92594", Offset = "0xD92594", VA = "0xD92594")]
	private void UpdatePopUpInfo(SettingsValue _settingsValue)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD92E00", Offset = "0xD92E00", VA = "0xD92E00")]
	public void ActivateAnimationInfo(int _settingsOption)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD9148C", Offset = "0xD9148C", VA = "0xD9148C")]
	public void DesctivateAnimationInfo()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD92FEC", Offset = "0xD92FEC", VA = "0xD92FEC")]
	public void SetDrumsHeight()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD930AC", Offset = "0xD930AC", VA = "0xD930AC")]
	public void SetDefaultDrumsHeight()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD93250", Offset = "0xD93250", VA = "0xD93250")]
	public void SetDefaultGraphicsSettings()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD90C50", Offset = "0xD90C50", VA = "0xD90C50")]
	private void SetGraphicsSettings()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD93254", Offset = "0xD93254", VA = "0xD93254")]
	public void BackToSettings()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD93854", Offset = "0xD93854", VA = "0xD93854")]
	public void ExitWithNoHeightSet()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xD91C4C", Offset = "0xD91C4C", VA = "0xD91C4C")]
	private void swapArrows()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xD91CB8", Offset = "0xD91CB8", VA = "0xD91CB8")]
	private void ExitAnimation(GameObject animObject, [Optional] GameObject enterAnimObject)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xD93384", Offset = "0xD93384", VA = "0xD93384")]
	private void EnterAnimation(GameObject animObject)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xD93C54", Offset = "0xD93C54", VA = "0xD93C54")]
	public void SetDefaultSettings()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xD93E7C", Offset = "0xD93E7C", VA = "0xD93E7C")]
	public void ConfirmNewSettings()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xD93F18", Offset = "0xD93F18", VA = "0xD93F18")]
	public void SettingsAddValue(int settingsValue)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xD8FDD8", Offset = "0xD8FDD8", VA = "0xD8FDD8")]
	private void UpdateTextValues()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xD90C54", Offset = "0xD90C54", VA = "0xD90C54")]
	private void UpdateLocalization()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xD92154", Offset = "0xD92154", VA = "0xD92154")]
	public void InitFirstScreenOption()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xD909B0", Offset = "0xD909B0", VA = "0xD909B0")]
	private void SetVibrationSettings()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD90800", Offset = "0xD90800", VA = "0xD90800")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xD951C8", Offset = "0xD951C8", VA = "0xD951C8")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xD954D8", Offset = "0xD954D8", VA = "0xD954D8")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xD957D8", Offset = "0xD957D8", VA = "0xD957D8")]
	public SettingsController()
	{
	}
}
[Token(Token = "0x20000E7")]
public class SongController : MonoBehaviour
{
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA6C", Offset = "0xA5CA6C")]
	private sealed class <WaitForEnfOfSongWithOffset>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_time>5__2;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xCD52CC", Offset = "0xCD52CC", VA = "0xCD52CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xCD5334", Offset = "0xCD5334", VA = "0xCD5334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xCD16AC", Offset = "0xCD16AC", VA = "0xCD16AC")]
		[DebuggerHidden]
		public <WaitForEnfOfSongWithOffset>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xCD5054", Offset = "0xCD5054", VA = "0xCD5054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xCD5058", Offset = "0xCD5058", VA = "0xCD5058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xCD52D4", Offset = "0xCD52D4", VA = "0xCD52D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA7C", Offset = "0xA5CA7C")]
	private sealed class <StartSong>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _time;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongController <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xCD4FE4", Offset = "0xCD4FE4", VA = "0xCD4FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xCD504C", Offset = "0xCD504C", VA = "0xCD504C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCD1E38", Offset = "0xCD1E38", VA = "0xCD1E38")]
		[DebuggerHidden]
		public <StartSong>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xCD4C6C", Offset = "0xCD4C6C", VA = "0xCD4C6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCD4C70", Offset = "0xCD4C70", VA = "0xCD4C70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xCD4FEC", Offset = "0xCD4FEC", VA = "0xCD4FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA8C", Offset = "0xA5CA8C")]
	private sealed class <IncreaseVolumen>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xCD487C", Offset = "0xCD487C", VA = "0xCD487C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xCD48E4", Offset = "0xCD48E4", VA = "0xCD48E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xCD26E0", Offset = "0xCD26E0", VA = "0xCD26E0")]
		[DebuggerHidden]
		public <IncreaseVolumen>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xCD4720", Offset = "0xCD4720", VA = "0xCD4720", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCD4724", Offset = "0xCD4724", VA = "0xCD4724", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xCD4884", Offset = "0xCD4884", VA = "0xCD4884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CA9C", Offset = "0xA5CA9C")]
	private sealed class <IncreaseVolumenExtra>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0xCD4A48", Offset = "0xCD4A48", VA = "0xCD4A48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xCD4AB0", Offset = "0xCD4AB0", VA = "0xCD4AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xCD270C", Offset = "0xCD270C", VA = "0xCD270C")]
		[DebuggerHidden]
		public <IncreaseVolumenExtra>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xCD48EC", Offset = "0xCD48EC", VA = "0xCD48EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xCD48F0", Offset = "0xCD48F0", VA = "0xCD48F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xCD4A50", Offset = "0xCD4A50", VA = "0xCD4A50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CAAC", Offset = "0xA5CAAC")]
	private sealed class <ReturnVolumen>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xCD4BFC", Offset = "0xCD4BFC", VA = "0xCD4BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xCD4C64", Offset = "0xCD4C64", VA = "0xCD4C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xCD2E80", Offset = "0xCD2E80", VA = "0xCD2E80")]
		[DebuggerHidden]
		public <ReturnVolumen>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xCD4AB8", Offset = "0xCD4AB8", VA = "0xCD4AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xCD4ABC", Offset = "0xCD4ABC", VA = "0xCD4ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xCD4C04", Offset = "0xCD4C04", VA = "0xCD4C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SongController instance;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject enemyGoal;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ViewPoint;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3D ScoreText;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine SongStart;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine VolumeSong;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine VolumeSongExtra;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip bassDrumClip;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioTrack[] SongTracks;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float startDateTime;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpanCorutine;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float offsetMusic;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float velocity;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float oldComboValue;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float beatTimeStep;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float beatLineLifeSpan;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float startPlaytimestamp;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float songDuration;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float songBpm;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float secPerBeat;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float songPosition;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float songPositionInBeats;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float dspSongTime;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float moveTempo;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timeInPause;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint beatTempo;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private uint score;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private uint numberNotes;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private uint numberNotesToSubstractVariation;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint numberNotesHitPerfect;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private uint numberNotesHitGood;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private uint numberNotesHitNormal;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private ushort combo_score_count;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private ushort high_combo;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private uint charged_hits_count;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isDebug;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool songHasStarted;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool canStartDrumTrack;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	private bool songIsPaused;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool songIsPlaying;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool coroutineWasStopped;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool canShowVictory;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float volumenDrums;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float oldVolumen;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject OneStickMode;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioMixer Mixer;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioMixerSnapshot[] TrackSnapshot;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine returnVolumenCo;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private DG.Tweening.Tween volumn0;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private DG.Tweening.Tween volumn1;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private DG.Tweening.Tween volumn2;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private DG.Tweening.Tween volumn3;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float songTimeBeforePause;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float min_seconds_duration_song;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float auxTimePreview;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<AudioClip> _TutorialAClist;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<AudioClip> _TutorialPerfectLoopAClist;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xCCD720", Offset = "0xCCD720", VA = "0xCCD720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xCD0FC8", Offset = "0xCD0FC8", VA = "0xCD0FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xCD0FE8", Offset = "0xCD0FE8", VA = "0xCD0FE8")]
	public float GetSongDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xCD1138", Offset = "0xCD1138", VA = "0xCD1138")]
	public void ResetSongDuration()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xCD0F30", Offset = "0xCD0F30", VA = "0xCD0F30")]
	public bool IsAudioThreadWorking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xCD1144", Offset = "0xCD1144", VA = "0xCD1144")]
	public uint GetScore()
	{
		return default(uint);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xCD114C", Offset = "0xCD114C", VA = "0xCD114C")]
	public uint GetHighestCombo()
	{
		return default(uint);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xCD1154", Offset = "0xCD1154", VA = "0xCD1154")]
	public uint GetNumberNotes()
	{
		return default(uint);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xCD1160", Offset = "0xCD1160", VA = "0xCD1160")]
	public void IncreaseNumberNotes()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xCD1170", Offset = "0xCD1170", VA = "0xCD1170")]
	public void IncreaseNumberNotesToSubstractVariation(uint value_to_add)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xCD1180", Offset = "0xCD1180", VA = "0xCD1180")]
	public uint NumberNotesToSubstractVariation()
	{
		return default(uint);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xCD1188", Offset = "0xCD1188", VA = "0xCD1188")]
	public uint GetNormalHits()
	{
		return default(uint);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xCD1190", Offset = "0xCD1190", VA = "0xCD1190")]
	public uint GetPerfectHits()
	{
		return default(uint);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xCD1198", Offset = "0xCD1198", VA = "0xCD1198")]
	public uint GetGoodHits()
	{
		return default(uint);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xCD11A0", Offset = "0xCD11A0", VA = "0xCD11A0")]
	public uint GetTotalHits()
	{
		return default(uint);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xCD11B4", Offset = "0xCD11B4", VA = "0xCD11B4")]
	public uint GetChargedHitsCount()
	{
		return default(uint);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xCD11BC", Offset = "0xCD11BC", VA = "0xCD11BC")]
	public void ResetHits()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xCD11CC", Offset = "0xCD11CC", VA = "0xCD11CC")]
	public bool GetCanShowVictory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xCD11D4", Offset = "0xCD11D4", VA = "0xCD11D4")]
	public bool GetIsSongPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xCD11DC", Offset = "0xCD11DC", VA = "0xCD11DC")]
	public void SetRankLetterBonus(Ranking _rankLetter)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xCD12CC", Offset = "0xCD12CC", VA = "0xCD12CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xCD1440", Offset = "0xCD1440", VA = "0xCD1440")]
	private void Update()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xCD1630", Offset = "0xCD1630", VA = "0xCD1630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA642E0", Offset = "0xA642E0")]
	private IEnumerator WaitForEnfOfSongWithOffset()
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xCD16D8", Offset = "0xCD16D8", VA = "0xCD16D8")]
	public void ActualizeTimeInPause()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCD174C", Offset = "0xCD174C", VA = "0xCD174C")]
	public void ExplodeAssistStick()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCD1834", Offset = "0xCD1834", VA = "0xCD1834")]
	public void StartPlay()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xCD1DAC", Offset = "0xCD1DAC", VA = "0xCD1DAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64344", Offset = "0xA64344")]
	private IEnumerator StartSong(float _time)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xCD1334", Offset = "0xCD1334", VA = "0xCD1334")]
	public float GetSongTime()
	{
		return default(float);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xCD1E64", Offset = "0xCD1E64", VA = "0xCD1E64")]
	public float GetOffsetMusic()
	{
		return default(float);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xCD1E6C", Offset = "0xCD1E6C", VA = "0xCD1E6C")]
	public float GetMoveTempo()
	{
		return default(float);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xCD1E7C", Offset = "0xCD1E7C", VA = "0xCD1E7C")]
	public bool GetSongHasStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xCD1E84", Offset = "0xCD1E84", VA = "0xCD1E84")]
	public float GetSecPerBeat()
	{
		return default(float);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCD1E8C", Offset = "0xCD1E8C", VA = "0xCD1E8C")]
	public bool GetSongIsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xCD1E94", Offset = "0xCD1E94", VA = "0xCD1E94")]
	public bool GetSongIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCD1ED8", Offset = "0xCD1ED8", VA = "0xCD1ED8")]
	public void ActivateExtraTrack(int _pos)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCD1FAC", Offset = "0xCD1FAC", VA = "0xCD1FAC")]
	public void ActivateExtraTrack()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCD2094", Offset = "0xCD2094", VA = "0xCD2094")]
	public void NewActivateExtraTrack()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xCD21D4", Offset = "0xCD21D4", VA = "0xCD21D4")]
	public void DeactivateExtraTrack(int _pos)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xCD22B8", Offset = "0xCD22B8", VA = "0xCD22B8")]
	public void DeactivateExtraTrack()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xCD23E4", Offset = "0xCD23E4", VA = "0xCD23E4")]
	public void NewDeactivateExtraTrack()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xCD25E8", Offset = "0xCD25E8", VA = "0xCD25E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA643A8", Offset = "0xA643A8")]
	private IEnumerator IncreaseVolumen()
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xCD2664", Offset = "0xCD2664", VA = "0xCD2664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6440C", Offset = "0xA6440C")]
	private IEnumerator IncreaseVolumenExtra()
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xCD2738", Offset = "0xCD2738", VA = "0xCD2738")]
	public void ActivateDrumTrack()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCD28D0", Offset = "0xCD28D0", VA = "0xCD28D0")]
	public void DeactivateDrumTrack()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xCD1D0C", Offset = "0xCD1D0C", VA = "0xCD1D0C")]
	private void PlayTracks()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xCD2A48", Offset = "0xCD2A48", VA = "0xCD2A48")]
	private void PlayTrack(int _pos)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xCD2AD0", Offset = "0xCD2AD0", VA = "0xCD2AD0")]
	private void StopTracks()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xCD2BAC", Offset = "0xCD2BAC", VA = "0xCD2BAC")]
	public void LowerVolumen()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xCD2E04", Offset = "0xCD2E04", VA = "0xCD2E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64470", Offset = "0xA64470")]
	private IEnumerator ReturnVolumen()
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xCD2EAC", Offset = "0xCD2EAC", VA = "0xCD2EAC")]
	private void StopTrack(int _pos)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xCD2F5C", Offset = "0xCD2F5C", VA = "0xCD2F5C")]
	private void PauseTracks()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xCD2FD0", Offset = "0xCD2FD0", VA = "0xCD2FD0")]
	private void PauseTrack(int _pos)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xCD1C88", Offset = "0xCD1C88", VA = "0xCD1C88")]
	private void SeekSongTracks(float _toSeek)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xCD3014", Offset = "0xCD3014", VA = "0xCD3014")]
	public void AdvanceSong(float _seconds)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xCD3154", Offset = "0xCD3154", VA = "0xCD3154")]
	public void RewindSong(float _seconds)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xCD1B74", Offset = "0xCD1B74", VA = "0xCD1B74")]
	public void StopSong()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xCD3218", Offset = "0xCD3218", VA = "0xCD3218")]
	public void PauseSong()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xCD33A0", Offset = "0xCD33A0", VA = "0xCD33A0")]
	public float GetStartPlaytimeStamp()
	{
		return default(float);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xCCD950", Offset = "0xCCD950", VA = "0xCCD950")]
	public void LoadSongTracks()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xCD1C1C", Offset = "0xCD1C1C", VA = "0xCD1C1C")]
	private void ResetScore()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xCD39DC", Offset = "0xCD39DC", VA = "0xCD39DC")]
	public int AddScore(uint scoreToAdd, float _timeStamp, ushort spins_count)
	{
		return default(int);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xCD3D40", Offset = "0xCD3D40", VA = "0xCD3D40")]
	public int AddScoreNoHitRate(uint scoreToAdd, float _timeStamp, ushort spins_count)
	{
		return default(int);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xCD3C7C", Offset = "0xCD3C7C", VA = "0xCD3C7C")]
	private bool HardcodedPerfectTutorialCondition(float _timeDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xCD3FA0", Offset = "0xCD3FA0", VA = "0xCD3FA0")]
	public float GetVolumenDrums()
	{
		return default(float);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xCD40B0", Offset = "0xCD40B0", VA = "0xCD40B0")]
	public void AddScoreKill(uint scoreToAdd, ushort spins_count)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xCD41C8", Offset = "0xCD41C8", VA = "0xCD41C8")]
	public bool AddComboScoreCount()
	{
		return default(bool);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xCD396C", Offset = "0xCD396C", VA = "0xCD396C")]
	public void resetComboScoreCount()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xCD431C", Offset = "0xCD431C", VA = "0xCD431C")]
	public void CheckSongTracks()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xCD3D08", Offset = "0xCD3D08", VA = "0xCD3D08")]
	public float getComboScoreMulty()
	{
		return default(float);
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xCD43BC", Offset = "0xCD43BC", VA = "0xCD43BC")]
	private void SetTextComboScoreMulty()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xCD4528", Offset = "0xCD4528", VA = "0xCD4528")]
	public bool HasSongStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xCD4530", Offset = "0xCD4530", VA = "0xCD4530")]
	public bool GetIsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xCD4538", Offset = "0xCD4538", VA = "0xCD4538")]
	public void SetIsDebug(bool _state)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xCD4544", Offset = "0xCD4544", VA = "0xCD4544")]
	public SongController()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xCD4584", Offset = "0xCD4584", VA = "0xCD4584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA644D4", Offset = "0xA644D4")]
	private bool <WaitForEnfOfSongWithOffset>b__79_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xCD4594", Offset = "0xCD4594", VA = "0xCD4594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA644E4", Offset = "0xA644E4")]
	private bool <StartSong>b__83_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xCD45A4", Offset = "0xCD45A4", VA = "0xCD45A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA644F4", Offset = "0xA644F4")]
	private bool <StartSong>b__83_1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xCD45B4", Offset = "0xCD45B4", VA = "0xCD45B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64504", Offset = "0xA64504")]
	private bool <StartSong>b__83_2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xCD45F4", Offset = "0xCD45F4", VA = "0xCD45F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64514", Offset = "0xA64514")]
	private void <LowerVolumen>b__104_0()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xCD463C", Offset = "0xCD463C", VA = "0xCD463C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64524", Offset = "0xA64524")]
	private void <LowerVolumen>b__104_1()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xCD4688", Offset = "0xCD4688", VA = "0xCD4688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64534", Offset = "0xA64534")]
	private void <LowerVolumen>b__104_2()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xCD46D4", Offset = "0xCD46D4", VA = "0xCD46D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64544", Offset = "0xA64544")]
	private void <LowerVolumen>b__104_3()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public class TemplateEnemy
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<IconsType> iconTypeList;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int enemyType;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spawnerId;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint id;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasSpawned;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool can_only_recieve_damage_with_spin;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x2042834", Offset = "0x2042834", VA = "0x2042834")]
	public TemplateEnemy()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E9")]
public class AudioTrack
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource audioSource;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool state;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pos;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x2023E90", Offset = "0x2023E90", VA = "0x2023E90")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x2023E98", Offset = "0x2023E98", VA = "0x2023E98")]
	public void Play()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x2023EB4", Offset = "0x2023EB4", VA = "0x2023EB4")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x2023EC0", Offset = "0x2023EC0", VA = "0x2023EC0")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x2023EC8", Offset = "0x2023EC8", VA = "0x2023EC8")]
	public void Seek(float _toSeek)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x2023EE4", Offset = "0x2023EE4", VA = "0x2023EE4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x2023F00", Offset = "0x2023F00", VA = "0x2023F00")]
	public void Pause()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x2023F1C", Offset = "0x2023F1C", VA = "0x2023F1C")]
	public AudioTrack()
	{
	}
}
[Token(Token = "0x20000EA")]
public enum ScoreType
{
	[Token(Token = "0x40006BF")]
	Normal,
	[Token(Token = "0x40006C0")]
	Perfect,
	[Token(Token = "0x40006C1")]
	Good
}
[Token(Token = "0x20000EB")]
public class StoreController : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CABC", Offset = "0xA5CABC")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint _itemID;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x203A318", Offset = "0x203A318", VA = "0x203A318")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x203A320", Offset = "0x203A320", VA = "0x203A320")]
		internal bool <PickSong>b__0(SpecialItemScriptableObject x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CACC", Offset = "0xA5CACC")]
	private sealed class <>c
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<StoreItemInfo, uint> <>9__58_0;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<StoreItemInfo, uint> <>9__58_1;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<StoreItemInfo, uint> <>9__58_2;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<StoreItemInfo, uint> <>9__58_3;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x203A2B0", Offset = "0x203A2B0", VA = "0x203A2B0")]
		public <>c()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x203A2B8", Offset = "0x203A2B8", VA = "0x203A2B8")]
		internal uint <InitStoreItemInfoList>b__58_0(StoreItemInfo obj)
		{
			return default(uint);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x203A2D0", Offset = "0x203A2D0", VA = "0x203A2D0")]
		internal uint <InitStoreItemInfoList>b__58_1(StoreItemInfo obj)
		{
			return default(uint);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x203A2E8", Offset = "0x203A2E8", VA = "0x203A2E8")]
		internal uint <InitStoreItemInfoList>b__58_2(StoreItemInfo obj)
		{
			return default(uint);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x203A300", Offset = "0x203A300", VA = "0x203A300")]
		internal uint <InitStoreItemInfoList>b__58_3(StoreItemInfo obj)
		{
			return default(uint);
		}
	}

	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CADC", Offset = "0xA5CADC")]
	private sealed class <InitStoreItem>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreController <>4__this;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte type;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StoreItemInfo> <storeItemInfoList>5__2;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x203B0BC", Offset = "0x203B0BC", VA = "0x203B0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x203B124", Offset = "0x203B124", VA = "0x203B124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x203A9E4", Offset = "0x203A9E4", VA = "0x203A9E4")]
		[DebuggerHidden]
		public <InitStoreItem>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x203AA10", Offset = "0x203AA10", VA = "0x203AA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x203AA14", Offset = "0x203AA14", VA = "0x203AA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x203B0C4", Offset = "0x203B0C4", VA = "0x203B0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CAEC", Offset = "0xA5CAEC")]
	private sealed class <>c__DisplayClass78_0
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoreController <>4__this;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x203A344", Offset = "0x203A344", VA = "0x203A344")]
		public <>c__DisplayClass78_0()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x203A34C", Offset = "0x203A34C", VA = "0x203A34C")]
		internal void <ActivateUnlockStoreItemPopup>b__0()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x203A47C", Offset = "0x203A47C", VA = "0x203A47C")]
		internal void <ActivateUnlockStoreItemPopup>b__1()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CAFC", Offset = "0xA5CAFC")]
	private sealed class <>c__DisplayClass79_0
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoreController <>4__this;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x203A4F0", Offset = "0x203A4F0", VA = "0x203A4F0")]
		public <>c__DisplayClass79_0()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x203A4F8", Offset = "0x203A4F8", VA = "0x203A4F8")]
		internal void <PlayShowUnlockStoreItemPopupAnimation>b__0()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x203A5D4", Offset = "0x203A5D4", VA = "0x203A5D4")]
		internal void <PlayShowUnlockStoreItemPopupAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB0C", Offset = "0xA5CB0C")]
	private sealed class <>c__DisplayClass80_0
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoreController <>4__this;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x203A70C", Offset = "0x203A70C", VA = "0x203A70C")]
		public <>c__DisplayClass80_0()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x203A714", Offset = "0x203A714", VA = "0x203A714")]
		internal void <AcceptUnlockStoreItemPopup>b__0()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x203A844", Offset = "0x203A844", VA = "0x203A844")]
		internal void <AcceptUnlockStoreItemPopup>b__1()
		{
		}
	}

	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB1C", Offset = "0xA5CB1C")]
	private sealed class <>c__DisplayClass81_0
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StoreController <>4__this;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x203A8B8", Offset = "0x203A8B8", VA = "0x203A8B8")]
		public <>c__DisplayClass81_0()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x203A8C0", Offset = "0x203A8C0", VA = "0x203A8C0")]
		internal void <PlayShowStoreParent>b__0()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x203A99C", Offset = "0x203A99C", VA = "0x203A99C")]
		internal void <PlayShowStoreParent>b__1()
		{
		}
	}

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte currentType;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public StoreContentBlockItem itemSelected;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<StoreItemInfo> handsStoreItemInfoList;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<StoreItemInfo> drumsStoreItemInfoList;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<StoreItemInfo> sticksStoreItemInfoList;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<StoreItemInfo> specialStoreItemInfoList;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject storeParent;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject Title;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI user_money_text;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5F82C", Offset = "0xA5F82C")]
	private List<GameObject> ListItemBlocks;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject itemBlock;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject Info;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private DG.Tweening.Tween SnapStore;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 OgPosition;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isLoading;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5F8C4", Offset = "0xA5F8C4")]
	[SerializeField]
	private GameObject info_button;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Material info_button_default_MT;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Material info_button_equip_MT;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshProUGUI info_button_text;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI info_title_text;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshProUGUI info_rarity_text;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshProUGUI info_unlock_tip_text;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshProUGUI info_question_text;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform info_leftstick_parent;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Transform info_rightstick_parent;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Transform info_lefthand_parent;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Transform info_righthand_parent;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform info_drums_parent;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform info_special_parent;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform info_stick_rotation_parent;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Transform info_hand_rotation_parent;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform info_drums_rotation_parent;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Transform info_special_rotation_parent;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject buy_PS;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject equip_PS;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject unlock_Store_Item_Popup;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool canCheckPosition;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FA50", Offset = "0xA5FA50")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Quaternion init_models_preview_parent_group_rotation;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xCDB6C4", Offset = "0xCDB6C4", VA = "0xCDB6C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xCDB708", Offset = "0xCDB708", VA = "0xCDB708")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xCDB8EC", Offset = "0xCDB8EC", VA = "0xCDB8EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xCDC700", Offset = "0xCDC700", VA = "0xCDC700")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xCDC7DC", Offset = "0xCDC7DC", VA = "0xCDC7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xCDC7E0", Offset = "0xCDC7E0", VA = "0xCDC7E0")]
	private void RotatePreviewModel()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xCDC8BC", Offset = "0xCDC8BC", VA = "0xCDC8BC")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xCDC960", Offset = "0xCDC960", VA = "0xCDC960")]
	public void PickSong(uint _itemID)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xCDCA98", Offset = "0xCDCA98", VA = "0xCDCA98")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xCDCB10", Offset = "0xCDCB10", VA = "0xCDCB10")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xCDCD74", Offset = "0xCDCD74", VA = "0xCDCD74")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xCDCF44", Offset = "0xCDCF44", VA = "0xCDCF44")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xCDB844", Offset = "0xCDB844", VA = "0xCDB844")]
	private void ClearStoreItemInfoList()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xCDBA64", Offset = "0xCDBA64", VA = "0xCDBA64")]
	private void InitStoreItemInfoList()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xCDC6F8", Offset = "0xCDC6F8", VA = "0xCDC6F8")]
	private void InitScreen()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xCDD184", Offset = "0xCDD184", VA = "0xCDD184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64554", Offset = "0xA64554")]
	private IEnumerator InitStoreItem(byte type)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xCDB734", Offset = "0xCDB734", VA = "0xCDB734")]
	public void Deleteicons()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xCDD210", Offset = "0xCDD210", VA = "0xCDD210")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xCDD388", Offset = "0xCDD388", VA = "0xCDD388")]
	private void DeactivateInfo()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xCDA7C0", Offset = "0xCDA7C0", VA = "0xCDA7C0")]
	public StoreItemInfo GetStoreItemInfo(uint id, StoreItemType type)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xCDD104", Offset = "0xCDD104", VA = "0xCDD104")]
	public void SetStoreItemTab(int type)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xCDB29C", Offset = "0xCDB29C", VA = "0xCDB29C")]
	public void ShowInfo(StoreContentBlockItem itemSelected, uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xCDD4EC", Offset = "0xCDD4EC", VA = "0xCDD4EC")]
	private void SetInfo(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xCDED9C", Offset = "0xCDED9C", VA = "0xCDED9C")]
	private void SetInfoUnlockTipText(uint id_item, StoreItemType item_type)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xCDB128", Offset = "0xCDB128", VA = "0xCDB128")]
	public bool HasEquippedItem(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xCE00F8", Offset = "0xCE00F8", VA = "0xCE00F8")]
	private void InstanciateDrumsStickStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xCDFA24", Offset = "0xCDFA24", VA = "0xCDFA24")]
	private void InstanciateHandsStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xCDFE68", Offset = "0xCDFE68", VA = "0xCDFE68")]
	private void InstanciateDrumsStoreModel(uint id)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xCE04DC", Offset = "0xCE04DC", VA = "0xCE04DC")]
	private void InstanciateSpecialStoreModel(uint id)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xCDDEA4", Offset = "0xCDDEA4", VA = "0xCDDEA4")]
	private void DestroyPreviewInstanciateStoreModels()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xCE06F8", Offset = "0xCE06F8", VA = "0xCE06F8")]
	public void ButtonInfoOnClick()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xCE0DE0", Offset = "0xCE0DE0", VA = "0xCE0DE0")]
	private void BuyItemStore(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xCE0928", Offset = "0xCE0928", VA = "0xCE0928")]
	private void EquipItemStore(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xCE106C", Offset = "0xCE106C", VA = "0xCE106C")]
	private void ActivateUnlockStoreItemPopup()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xCE11E4", Offset = "0xCE11E4", VA = "0xCE11E4")]
	private void PlayShowUnlockStoreItemPopupAnimation()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xCE13B8", Offset = "0xCE13B8", VA = "0xCE13B8")]
	public void AcceptUnlockStoreItemPopup()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xCE151C", Offset = "0xCE151C", VA = "0xCE151C")]
	private void PlayShowStoreParent()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xCE1704", Offset = "0xCE1704", VA = "0xCE1704")]
	public void CheckVisible()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xCE17B4", Offset = "0xCE17B4", VA = "0xCE17B4")]
	public StoreController()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xCE1830", Offset = "0xCE1830", VA = "0xCE1830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA645B8", Offset = "0xA645B8")]
	private void <ActivateInfo>b__62_0()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xCE1864", Offset = "0xCE1864", VA = "0xCE1864")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA645C8", Offset = "0xA645C8")]
	private void <DeactivateInfo>b__63_0()
	{
	}
}
[Token(Token = "0x20000EC")]
public class StoreItemInfo
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint price;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte id_rarity;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StoreItemType id_type;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint order;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialItemScriptableType id_type_special;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int id_song;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x203B12C", Offset = "0x203B12C", VA = "0x203B12C")]
	public StoreItemInfo()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum StoreItemType
{
	[Token(Token = "0x40006F8")]
	HANDS,
	[Token(Token = "0x40006F9")]
	DRUMS,
	[Token(Token = "0x40006FA")]
	DRUMS_STICK,
	[Token(Token = "0x40006FB")]
	SPECIAL
}
[Token(Token = "0x20000EE")]
public class XRController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB2C", Offset = "0xA5CB2C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__64_0;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__64_1;

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD80624", Offset = "0xD80624", VA = "0xD80624")]
		public <>c()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD8062C", Offset = "0xD8062C", VA = "0xD8062C")]
		internal bool <LogInPlatform>b__64_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD8064C", Offset = "0xD8064C", VA = "0xD8064C")]
		internal bool <LogInPlatform>b__64_1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB3C", Offset = "0xA5CB3C")]
	private sealed class <LogInPlatform>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRController <>4__this;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xD80D14", Offset = "0xD80D14", VA = "0xD80D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xD80D7C", Offset = "0xD80D7C", VA = "0xD80D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD7E00C", Offset = "0xD7E00C", VA = "0xD7E00C")]
		[DebuggerHidden]
		public <LogInPlatform>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD8066C", Offset = "0xD8066C", VA = "0xD8066C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD80670", Offset = "0xD80670", VA = "0xD80670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD80D1C", Offset = "0xD80D1C", VA = "0xD80D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomXRInteractionManager xRInteractionManager;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRController instance;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Drumstick leftDrumStick;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Drumstick rightDrumStick;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DrumStickSpawner leftDrumStickSpawner;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DrumStickSpawner rightDrumStickSpawner;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> xrGrabList;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cameraOffset;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftHandControllerPrefab;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightHandControllerPrefab;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentLeftHandController;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentRightHandController;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public DrumController currentDrums;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject mainCamera;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject persistentCamera;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform loadingPosToFollow;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private XRInteractorLineVisual[] LineHands;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip perfectSound;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip goodSound;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip failSound;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject leftRayInteractor;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightRayInteractor;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HandEnum currentRayHand;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float last_change_ray_interactor_timestamp;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isPointer;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float trigger_pressed_timestamp;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject equipDrumsPSPrefab;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject livPrefab;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject livManager;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject InteractionManager;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject Reticle;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject ReticleObj;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Oculus.Platform.Models.User myUser;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Pico.Platform.Models.User myPicoUser;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float cooldownRequest;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool entitled;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VRPlugin devicePlugin;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 offsetSteam;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FB1C", Offset = "0xA5FB1C")]
	[SerializeField]
	private GameObject steam_LeftHand;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject steam_RightHand;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject steam_ActionsManager;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FB88", Offset = "0xA5FB88")]
	public RenderPipelineAsset quality;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public RenderPipelineAsset performance;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FBC0", Offset = "0xA5FBC0")]
	public RenderPipelineAsset high;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD7B494", Offset = "0xD7B494", VA = "0xD7B494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD7B6B0", Offset = "0xD7B6B0", VA = "0xD7B6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD7C694", Offset = "0xD7C694", VA = "0xD7C694")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xD7CF70", Offset = "0xD7CF70", VA = "0xD7CF70")]
	private void Update()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xD7D000", Offset = "0xD7D000", VA = "0xD7D000")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD7D004", Offset = "0xD7D004", VA = "0xD7D004")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD7B598", Offset = "0xD7B598", VA = "0xD7B598")]
	private void LoadXRPrefabs()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD7B7C4", Offset = "0xD7B7C4", VA = "0xD7B7C4")]
	private void InitDeviceType()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD7B87C", Offset = "0xD7B87C", VA = "0xD7B87C")]
	private void InitDeviceValues()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD7D008", Offset = "0xD7D008", VA = "0xD7D008")]
	public bool IsDisplayFrequencyAvaileable(float _desiredFrequency)
	{
		return default(bool);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD7D024", Offset = "0xD7D024", VA = "0xD7D024")]
	public void CheckSteamTrackingChangeState()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD7D028", Offset = "0xD7D028", VA = "0xD7D028")]
	private void StopXRTracking()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD7D370", Offset = "0xD7D370", VA = "0xD7D370")]
	private void EnableXRTracking()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD7C698", Offset = "0xD7C698", VA = "0xD7C698")]
	private void checkXROffset()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD7DB78", Offset = "0xD7DB78", VA = "0xD7DB78")]
	public void AfterEntitled(Oculus.Platform.Message message)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD7DC84", Offset = "0xD7DC84", VA = "0xD7DC84")]
	public void AfterPicoInitialized(Pico.Platform.Message<Pico.Platform.PlatformInitializeResult> message)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD7DDBC", Offset = "0xD7DDBC", VA = "0xD7DDBC")]
	private void GetUserID(Oculus.Platform.Message<Oculus.Platform.Models.User> message)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD7DF10", Offset = "0xD7DF10", VA = "0xD7DF10")]
	private void GetUserID(Pico.Platform.Message<Pico.Platform.Models.User> message)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD7C424", Offset = "0xD7C424", VA = "0xD7C424")]
	public void ActivateLiv()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD7C55C", Offset = "0xD7C55C", VA = "0xD7C55C")]
	public void DesactivateLiv()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD7BB04", Offset = "0xD7BB04", VA = "0xD7BB04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA645D8", Offset = "0xA645D8")]
	private IEnumerator LogInPlatform()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD7E038", Offset = "0xD7E038", VA = "0xD7E038")]
	public void OnLoadBeginScene()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xD7E7E0", Offset = "0xD7E7E0", VA = "0xD7E7E0")]
	public void UnregisterInteractable(GameObject go)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xD7E880", Offset = "0xD7E880", VA = "0xD7E880")]
	public void OnLoadEndScene()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xD7BFB8", Offset = "0xD7BFB8", VA = "0xD7BFB8")]
	private void SetVibrationSettings()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xD7EBFC", Offset = "0xD7EBFC", VA = "0xD7EBFC")]
	private void CheckHandPointer()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xD7BB80", Offset = "0xD7BB80", VA = "0xD7BB80")]
	private void CreateHands()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xD7ECD4", Offset = "0xD7ECD4", VA = "0xD7ECD4")]
	public GameObject GetCurrentHand(HandEnum hand)
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xD7E6A0", Offset = "0xD7E6A0", VA = "0xD7E6A0")]
	public void ForceDestroyOffScreenIndicators()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xD7EDB4", Offset = "0xD7EDB4", VA = "0xD7EDB4")]
	public void ForceDestroyOffScreenIndicatorsChilds()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xD7E41C", Offset = "0xD7E41C", VA = "0xD7E41C")]
	private void DestroyHands()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xD7E318", Offset = "0xD7E318", VA = "0xD7E318")]
	public void DropAllCurrentDrumSticks()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xD7F0F4", Offset = "0xD7F0F4", VA = "0xD7F0F4")]
	public void DropDrumStickFail(IconsType iconsType)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xD7F230", Offset = "0xD7F230", VA = "0xD7F230")]
	public byte GetCurrentDrumStickGrabbedCount()
	{
		return default(byte);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xD7C218", Offset = "0xD7C218", VA = "0xD7C218")]
	public void InstantiateDrums(uint id)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xD7E5C4", Offset = "0xD7E5C4", VA = "0xD7E5C4")]
	public void DestroyDrums()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xD7EB68", Offset = "0xD7EB68", VA = "0xD7EB68")]
	private void CheckBeAHeroMode()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xD7EA84", Offset = "0xD7EA84", VA = "0xD7EA84")]
	public void ChangeRayRendering()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xD7F2F4", Offset = "0xD7F2F4", VA = "0xD7F2F4")]
	public void CheckSticksEquipped()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xD7F3BC", Offset = "0xD7F3BC", VA = "0xD7F3BC")]
	public void PlayPerfectSound()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xD7F47C", Offset = "0xD7F47C", VA = "0xD7F47C")]
	public void PlayGoodSound()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xD7F548", Offset = "0xD7F548", VA = "0xD7F548")]
	public void PlayFailSound()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xD7D43C", Offset = "0xD7D43C", VA = "0xD7D43C")]
	public void ActivateAlwaysLineRender()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xD735EC", Offset = "0xD735EC", VA = "0xD735EC")]
	public void DeactivateAlwaysLineRender()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xD7F62C", Offset = "0xD7F62C", VA = "0xD7F62C")]
	public void SetHandIsPointer(bool isPointer)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xD7BEC0", Offset = "0xD7BEC0", VA = "0xD7BEC0")]
	public void ActivateRayInteractor(HandEnum handEnum)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xD7D0E0", Offset = "0xD7D0E0", VA = "0xD7D0E0")]
	public void ActiveRenderHandsAndSticks(bool is_active)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xD7F638", Offset = "0xD7F638", VA = "0xD7F638")]
	private void RecursiveHandRendererEnabler(Transform _transform, bool is_active)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xD7F944", Offset = "0xD7F944", VA = "0xD7F944")]
	public void InputPrimary2DAxisCallback(Vector2 axis, HandEnum handEnum, float triggerValueInput)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xD7FF4C", Offset = "0xD7FF4C", VA = "0xD7FF4C")]
	public void ActivateTriggerPressed()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xD7FF74", Offset = "0xD7FF74", VA = "0xD7FF74")]
	public bool IsTriggerPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xD7CFB8", Offset = "0xD7CFB8", VA = "0xD7CFB8")]
	private void CheckDesactivateButtonsPressed()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD7FF84", Offset = "0xD7FF84", VA = "0xD7FF84")]
	public void ReInstantiateHands()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xD80150", Offset = "0xD80150", VA = "0xD80150")]
	public void ReInstantiateDrumsSticks()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xD802D8", Offset = "0xD802D8", VA = "0xD802D8")]
	private void InstantiateDrumsticksDelay()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xD803B8", Offset = "0xD803B8", VA = "0xD803B8")]
	public void ReInstantiateDrums()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xD80540", Offset = "0xD80540", VA = "0xD80540")]
	public XRController()
	{
	}
}
[Token(Token = "0x20000EF")]
public class CreditsScreenController : MonoBehaviour
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject creditsText;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speedY;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float endYPos;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initPos;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initPosSettled;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CreditsScreenStatus status;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayPlay;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TVCinematicFocus tVCinematicFocus;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool bInBack;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float frameFactor;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x20362D0", Offset = "0x20362D0", VA = "0x20362D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x20362E0", Offset = "0x20362E0", VA = "0x20362E0")]
	public void Init()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x20363D0", Offset = "0x20363D0", VA = "0x20363D0")]
	public void Play()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x2036428", Offset = "0x2036428", VA = "0x2036428")]
	private void PlayInvoke()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x2036434", Offset = "0x2036434", VA = "0x2036434")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x2036438", Offset = "0x2036438", VA = "0x2036438")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x203643C", Offset = "0x203643C", VA = "0x203643C")]
	private void UpdatePlay()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x20365B8", Offset = "0x20365B8", VA = "0x20365B8")]
	public void ButtonBack()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x2036668", Offset = "0x2036668", VA = "0x2036668")]
	public CreditsScreenController()
	{
	}
}
[Token(Token = "0x20000F0")]
public enum CreditsScreenStatus
{
	[Token(Token = "0x4000733")]
	NONE,
	[Token(Token = "0x4000734")]
	PLAY,
	[Token(Token = "0x4000735")]
	STOP,
	[Token(Token = "0x4000736")]
	END
}
[Token(Token = "0x20000F1")]
public class CustomXRInteractionManager : XRInteractionManager
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isEnabled;

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xD58348", Offset = "0xD58348", VA = "0xD58348")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xD5834C", Offset = "0xD5834C", VA = "0xD5834C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xD58360", Offset = "0xD58360", VA = "0xD58360", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xD58374", Offset = "0xD58374", VA = "0xD58374")]
	public CustomXRInteractionManager()
	{
	}
}
[Token(Token = "0x20000F2")]
public class DeactivateButtonOnGameplay : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button butt;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image img;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xD583E4", Offset = "0xD583E4", VA = "0xD583E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xD584A8", Offset = "0xD584A8", VA = "0xD584A8")]
	public DeactivateButtonOnGameplay()
	{
	}
}
[Token(Token = "0x20000F3")]
public class DeactivateCallback : MonoBehaviour
{
	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xD584B0", Offset = "0xD584B0", VA = "0xD584B0")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xD585A8", Offset = "0xD585A8", VA = "0xD585A8")]
	public DeactivateCallback()
	{
	}
}
[Token(Token = "0x20000F4")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Stick;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmp;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugText instance;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD585B0", Offset = "0xD585B0", VA = "0xD585B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD58680", Offset = "0xD58680", VA = "0xD58680")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD58684", Offset = "0xD58684", VA = "0xD58684")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xD58688", Offset = "0xD58688", VA = "0xD58688")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xD586AC", Offset = "0xD586AC", VA = "0xD586AC")]
	public DebugText()
	{
	}
}
[Token(Token = "0x20000F5")]
public class BetweenPunchTrigger : MonoBehaviour
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunchingGlove drumStick;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x2024004", Offset = "0x2024004", VA = "0x2024004")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x2024170", Offset = "0x2024170", VA = "0x2024170")]
	public BetweenPunchTrigger()
	{
	}
}
[Token(Token = "0x20000F6")]
public class BetweenStickTrigger : MonoBehaviour
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Drumstick drumStick;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x2024178", Offset = "0x2024178", VA = "0x2024178")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x202417C", Offset = "0x202417C", VA = "0x202417C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x202429C", Offset = "0x202429C", VA = "0x202429C")]
	public BetweenStickTrigger()
	{
	}
}
[Token(Token = "0x20000F7")]
public class DrumController : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DrumPart[] drumPartList;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tutorial_helper_ps_prefab;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tutorial_helper_pos;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject tutorial_helper_ps_spawned;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startSwapRandomDrumsIconTypeTimestamp;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] hitCollPSPrefabList;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] drumsParts;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] crush_rideJoints;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] crush_rideInitialRotation;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] jointValuesCopy;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] drumsInitialPos;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] crush_rideInitialPos;

	[Token(Token = "0x400074B")]
	private const float drumsTopPosMaxOffset = 0.39f;

	[Token(Token = "0x400074C")]
	private const float drumsBottomPosMaxOffset = -0.13f;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float deltaYOffset;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FC28", Offset = "0xA5FC28")]
	public Vector3 storePos;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 storeRot;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 storeScale;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material storeLockedMT;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject base_crush;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject base_ride;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject base_crush_store;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject base_ride_store;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject high_tom;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject low_tom;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector2 max_tom_offset;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector2 min_tom_offset;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xD5CFCC", Offset = "0xD5CFCC", VA = "0xD5CFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xD5DFE4", Offset = "0xD5DFE4", VA = "0xD5DFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xD5E0D8", Offset = "0xD5E0D8", VA = "0xD5E0D8")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xD5E2E8", Offset = "0xD5E2E8", VA = "0xD5E2E8")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xD5E684", Offset = "0xD5E684", VA = "0xD5E684")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xD5E7D8", Offset = "0xD5E7D8", VA = "0xD5E7D8")]
	public void CheckStartSwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xD5E928", Offset = "0xD5E928", VA = "0xD5E928")]
	public void UpdateSwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD5EA04", Offset = "0xD5EA04", VA = "0xD5EA04")]
	private void SwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xD5E97C", Offset = "0xD5E97C", VA = "0xD5E97C")]
	private bool StartSwapRandomDrumsIconType()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xD5F4EC", Offset = "0xD5F4EC", VA = "0xD5F4EC")]
	public void ActivateTutorialHelper(bool active)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD5F7B8", Offset = "0xD5F7B8", VA = "0xD5F7B8")]
	public void FailParticles(IconsType _fail)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD5DBB4", Offset = "0xD5DBB4", VA = "0xD5DBB4")]
	public void DestroyParticles()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD60184", Offset = "0xD60184", VA = "0xD60184")]
	public GameObject GetHitCollPSPrefabList(IconsType iconsType)
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD60270", Offset = "0xD60270", VA = "0xD60270")]
	public void IncreaseDrumsHeight(float axisValue)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD6030C", Offset = "0xD6030C", VA = "0xD6030C")]
	public void DecreaseDrumsHeight(float axisValue)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD5D310", Offset = "0xD5D310", VA = "0xD5D310")]
	public void SetDrumsPosition(float drumsPosOffset)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xD5D924", Offset = "0xD5D924", VA = "0xD5D924")]
	private void CopyInitialJointsValue()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xD603A8", Offset = "0xD603A8", VA = "0xD603A8")]
	public void FreezeJoints()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xD5DC1C", Offset = "0xD5DC1C", VA = "0xD5DC1C")]
	public void ResetJoints()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xD60638", Offset = "0xD60638", VA = "0xD60638")]
	public string GetSettingsDrumsHeightValue()
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xD606F0", Offset = "0xD606F0", VA = "0xD606F0")]
	public void Move_Tom_Position(Vector2 axisValue)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xD5D6B4", Offset = "0xD5D6B4", VA = "0xD5D6B4")]
	public void Set_Low_Tom_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD5D7EC", Offset = "0xD5D7EC", VA = "0xD5D7EC")]
	public void Set_High_Tom_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xD608D8", Offset = "0xD608D8", VA = "0xD608D8")]
	public DrumController()
	{
	}
}
[Token(Token = "0x20000F8")]
public class DrumPart : MonoBehaviour
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Plane mPlane;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip soundClip;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip chargedHitClip;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material baseMaterial;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material hitMaterial;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Material> allBaseMaterialList;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Material> allHitMaterialList;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitParticlePrefab;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject auxHitParticlePrefab;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject hitChargedPrefab;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject hitChargedOnCollisionPrefab;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject hitOnCollPosPSPrefab;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject hitFailPrefab;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform hitParticleSpawnTrans;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer drumsMesh;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool isOnTriggerStay;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool isOnTriggerStayLeft;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool isOnTriggerStayRight;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public IconsType iconsType;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float left_hit_last_timestamp;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float right_hit_last_timestamp;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float no_hands_hit_last_timestamp;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float left_big_collision_enter_last_timestamp;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float right_big_collision_enter_last_timestamp;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float left_big_collision_stay_last_timestamp;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float right_big_collision_stay_last_timestamp;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject goDotweening;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject goWithJoint;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 forceDotween;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MeshCollider PSCollider;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float toBaseMaterialTimestamp;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool hasDestroyedStick;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject SwapWarning;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject SwapWarningGo;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool swapped;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float initialVolume;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float hapticAmplitude;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private byte maxHitParticleAmmount;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<ParticleSystem> hitParticleList;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private byte maxHitChargedAmmount;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<ParticleSystem> hitChargedList;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private byte maxhitChargedOnCollisionAmmount;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<ParticleSystem> hitChargedOnCollisionList;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private byte maxHitOnCollPosPSAmmount;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<ParticleSystem> hitOnCollPosPSList;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private byte maxFailAmmount;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<ParticleSystem> failList;

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD60964", Offset = "0xD60964", VA = "0xD60964")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD60BD0", Offset = "0xD60BD0", VA = "0xD60BD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xD5F228", Offset = "0xD5F228", VA = "0xD5F228")]
	public void ActivateWarning()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xD60D70", Offset = "0xD60D70", VA = "0xD60D70")]
	public void StopWarning()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xD60BD4", Offset = "0xD60BD4", VA = "0xD60BD4")]
	private void InitParticleLists()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xD5FC3C", Offset = "0xD5FC3C", VA = "0xD5FC3C")]
	public void destroyParticlePool()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xD60E4C", Offset = "0xD60E4C", VA = "0xD60E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xD5ED04", Offset = "0xD5ED04", VA = "0xD5ED04")]
	public void SetMaterial(IconsType iconsType)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xD60EA8", Offset = "0xD60EA8", VA = "0xD60EA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xD60F0C", Offset = "0xD60F0C", VA = "0xD60F0C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xD60F10", Offset = "0xD60F10", VA = "0xD60F10")]
	private void SetHitMaterial()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xD5F134", Offset = "0xD5F134", VA = "0xD5F134")]
	public void SetBaseMaterial()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xD60FAC", Offset = "0xD60FAC", VA = "0xD60FAC")]
	private void ActivateHitParticleWithDrumStick(ushort spint_count, Drumstick drumstick)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xD62174", Offset = "0xD62174", VA = "0xD62174")]
	private void ActivateHitParticleWithPunching()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xD60FC4", Offset = "0xD60FC4", VA = "0xD60FC4")]
	public void ActivateHitParticle(Drumstick drumstick)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xD5F870", Offset = "0xD5F870", VA = "0xD5F870")]
	public void ActivateFailParticle()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xD61970", Offset = "0xD61970", VA = "0xD61970")]
	public void ActivateChargedParticle(Drumstick drumstick)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xD60E50", Offset = "0xD60E50", VA = "0xD60E50")]
	public void CheckToBaseMaterial()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xD62350", Offset = "0xD62350", VA = "0xD62350")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xD62354", Offset = "0xD62354", VA = "0xD62354")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xD639F8", Offset = "0xD639F8", VA = "0xD639F8")]
	private void DoHitFeedback()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xD638D8", Offset = "0xD638D8", VA = "0xD638D8")]
	private void AddForceToJoin(Vector3 position)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xD641CC", Offset = "0xD641CC", VA = "0xD641CC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xD5F218", Offset = "0xD5F218", VA = "0xD5F218")]
	public void Swap()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD64330", Offset = "0xD64330", VA = "0xD64330")]
	public DrumPart()
	{
	}
}
[Token(Token = "0x20000F9")]
public class DrumStickSpawner : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static uint id_autoincrement_count;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject drumStickPrefab;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject currentSpawnedStick;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StickSpawnEnum spawn_type;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastSpawnTimeStamp;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasToSpawn;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip grab_audio;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialVolume;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD64404", Offset = "0xD64404", VA = "0xD64404")]
	private void Start()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xD64574", Offset = "0xD64574", VA = "0xD64574")]
	private void Update()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD64578", Offset = "0xD64578", VA = "0xD64578")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD64474", Offset = "0xD64474", VA = "0xD64474")]
	private void LoadDrumsStickPrefab()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD648AC", Offset = "0xD648AC", VA = "0xD648AC")]
	public void ReLoadDrumsStickPrefab()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD6457C", Offset = "0xD6457C", VA = "0xD6457C")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD648E0", Offset = "0xD648E0", VA = "0xD648E0")]
	public void SetHasToSpawn(bool _state)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD648EC", Offset = "0xD648EC", VA = "0xD648EC")]
	public void StickGrabbed(uint id)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD64AD8", Offset = "0xD64AD8", VA = "0xD64AD8")]
	public void Despawn()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD64CEC", Offset = "0xD64CEC", VA = "0xD64CEC")]
	public void DespawnDelay()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD64EE4", Offset = "0xD64EE4", VA = "0xD64EE4")]
	private void DestroyDelay()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD64F60", Offset = "0xD64F60", VA = "0xD64F60")]
	public DrumStickSpawner()
	{
	}
}
[Token(Token = "0x20000FA")]
public enum HandEnum
{
	[Token(Token = "0x4000792")]
	NONE,
	[Token(Token = "0x4000793")]
	LEFT,
	[Token(Token = "0x4000794")]
	RIGHT
}
[Token(Token = "0x20000FB")]
public enum StickSpawnEnum
{
	[Token(Token = "0x4000796")]
	NONE,
	[Token(Token = "0x4000797")]
	LEFT,
	[Token(Token = "0x4000798")]
	RIGHT
}
[Token(Token = "0x20000FC")]
public class Drumstick : XRGrabInteractable
{
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB4C", Offset = "0xA5CB4C")]
	private sealed class <>c__DisplayClass81_0
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IXRSelectInteractor interactor;

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD69460", Offset = "0xD69460", VA = "0xD69460")]
		public <>c__DisplayClass81_0()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD699D0", Offset = "0xD699D0", VA = "0xD699D0")]
		internal bool <IsSelectableBy>b__0(IXRSelectInteractor x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public uint id;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[HideInInspector]
	public HandEnum current_hand;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[HideInInspector]
	public HandEnum last_hand;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public DrumStickSpawner spawner;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public bool is_following_spawner;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[HideInInspector]
	public StickSpawnEnum spawn_type;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public bool is_destroy_activated;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float autoDestroyTimestamp;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float lifeSpan;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public AudioClip sticks_sound;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public AudioClip fail_sound;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[HideInInspector]
	public float last_sticks_sound_timestamp;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject hitDrumsCollider;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool is_jumped;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	[HideInInspector]
	public float lastjumpTimeStamp;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Transform pivotForLeft;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Transform pivotForRight;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Transform startLinePoint;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Transform endLinePoint;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Vector3 initialAttachLocalPosForRight;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Quaternion initialAttachLocalRotForRight;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private Vector3 initialAttachLocalPosForLeft;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Quaternion initialAttachLocalRotForLeft;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private float torqueTimestamp;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[HideInInspector]
	public List<DrumPartCollision> drumPartCollisionsList;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public List<GameObject> spinPSList;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Quaternion spin_old_rotation;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[HideInInspector]
	public ushort spin_count;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private float spin_angle;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool is_on_floor;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public GameObject sticksCollisionPsPrefab;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public GameObject sticksExplosionPsPrefab;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public List<Transform> pointList;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public bool canUpdate;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x379")]
	public bool isSelectableEnabled;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	[HideInInspector]
	public IconsType lastHitIconsType;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[HideInInspector]
	public float lastHitIconsTimestamp;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[SerializeField]
	private GameObject PosToSpawn;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private float dropFailTimestamp;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private bool dropFailForceAdded;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x395")]
	private bool is_final_destroying;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private Vector3 torqueForce;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private bool torqueForceOnce;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A5")]
	private bool jumpForceOnce;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public HitBetweenStickCollider hitBetweenStickCollider;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public AudioClip[] throw_sounds_list;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private bool throwUpLockXZ;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private IXRHoverInteractor hoveredInteractor;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private bool forceSpawned;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FD60", Offset = "0xA5FD60")]
	public Vector3 leftStorePos;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public Vector3 leftStoreRot;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	public Vector3 leftStoreScale;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Vector3 rightStorePos;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	public Vector3 rightStoreRot;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Vector3 rightStoreScale;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Material storeLockedMT;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	private float initialVolume;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xD64F84", Offset = "0xD64F84", VA = "0xD64F84")]
	private void Start()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xD64F94", Offset = "0xD64F94", VA = "0xD64F94")]
	public void SetInitialValues()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xD65194", Offset = "0xD65194", VA = "0xD65194")]
	public void InitForStore(Transform parent, bool is_left, bool is_unlocked)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xD65630", Offset = "0xD65630", VA = "0xD65630")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xD65958", Offset = "0xD65958", VA = "0xD65958")]
	private void Update()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xD65B20", Offset = "0xD65B20", VA = "0xD65B20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xD66D60", Offset = "0xD66D60", VA = "0xD66D60", Slot = "61")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD66F1C", Offset = "0xD66F1C", VA = "0xD66F1C", Slot = "64")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD6701C", Offset = "0xD6701C", VA = "0xD6701C", Slot = "65")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD6729C", Offset = "0xD6729C", VA = "0xD6729C", Slot = "66")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xD678F4", Offset = "0xD678F4", VA = "0xD678F4")]
	private void StickGrabbed()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xD65C6C", Offset = "0xD65C6C", VA = "0xD65C6C")]
	public void FollowSpawn()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xD67A1C", Offset = "0xD67A1C", VA = "0xD67A1C", Slot = "68")]
	protected override void OnSelectExited(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xD68238", Offset = "0xD68238", VA = "0xD68238")]
	public void DoThrowSound()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xD67E94", Offset = "0xD67E94", VA = "0xD67E94")]
	public void DoTorque()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xD65F54", Offset = "0xD65F54", VA = "0xD65F54")]
	private void TorqueStep()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xD64024", Offset = "0xD64024", VA = "0xD64024")]
	public void DoJump()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xD660B8", Offset = "0xD660B8", VA = "0xD660B8")]
	private void JumpStep()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xD65D8C", Offset = "0xD65D8C", VA = "0xD65D8C")]
	public void CheckJumpOnExited()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xD6823C", Offset = "0xD6823C", VA = "0xD6823C")]
	public void OnCollisionEnterHitBetweenStickCollider(GameObject other, Vector3 hitPos)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xD68EE4", Offset = "0xD68EE4", VA = "0xD68EE4")]
	public void OnTriggerStayHitBetweenStickTrigger(Collider other)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xD69168", Offset = "0xD69168", VA = "0xD69168")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xD66780", Offset = "0xD66780", VA = "0xD66780")]
	private void AutoDestroy()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xD68E90", Offset = "0xD68E90", VA = "0xD68E90")]
	public bool IsAutoDestroyNear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD69244", Offset = "0xD69244", VA = "0xD69244", Slot = "55")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD63E8C", Offset = "0xD63E8C", VA = "0xD63E8C")]
	public void AddDrumPartCollision(IconsType iconsType)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xD63804", Offset = "0xD63804", VA = "0xD63804")]
	public bool HasActiveDrumPartCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xD69468", Offset = "0xD69468", VA = "0xD69468")]
	private int GetDrumPartCollisionPos(IconsType iconsType)
	{
		return default(int);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xD66450", Offset = "0xD66450", VA = "0xD66450")]
	private void CountSpins()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xD65968", Offset = "0xD65968", VA = "0xD65968")]
	public void CheckSpinPS()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xD63BE8", Offset = "0xD63BE8", VA = "0xD63BE8")]
	public void ResetSpin()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xD6217C", Offset = "0xD6217C", VA = "0xD6217C")]
	public Vector3 GetNearestPoint(Plane plane, MeshCollider col)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD69510", Offset = "0xD69510", VA = "0xD69510")]
	public void DropGrab()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xD697A8", Offset = "0xD697A8", VA = "0xD697A8")]
	public void DestroySelf()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xD63BF4", Offset = "0xD63BF4", VA = "0xD63BF4")]
	public void DropGrabOnFail()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xD698D0", Offset = "0xD698D0", VA = "0xD698D0")]
	public void ActivateStickExplosion()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xD63BBC", Offset = "0xD63BBC", VA = "0xD63BBC")]
	public void OnDrumHit(IconsType lastHitIconsType)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xD637F4", Offset = "0xD637F4", VA = "0xD637F4")]
	public bool IsInDropFail()
	{
		return default(bool);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xD661F0", Offset = "0xD661F0", VA = "0xD661F0")]
	public void DropGrabOnFailStep()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xD69958", Offset = "0xD69958", VA = "0xD69958")]
	public Drumstick()
	{
	}
}
[Token(Token = "0x20000FD")]
public class DrumPartCollision
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IconsType iconsType;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float last_timestamp;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xD643B0", Offset = "0xD643B0", VA = "0xD643B0")]
	public DrumPartCollision(IconsType iconsType, float last_timestamp, Vector3 pos)
	{
	}
}
[Token(Token = "0x20000FE")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA5FD98", Offset = "0xA5FD98")]
	public Vector3 storePos;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 storeRot;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 storeScale;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HandStoreAnimationType handStoreAnimationType;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material storeLockedMT;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool is_store_activated;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float last_init_for_store_timestamp;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xDC02B0", Offset = "0xDC02B0", VA = "0xDC02B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xDC02B4", Offset = "0xDC02B4", VA = "0xDC02B4")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xDC0430", Offset = "0xDC0430", VA = "0xDC0430")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xDC07CC", Offset = "0xDC07CC", VA = "0xDC07CC")]
	public void SetStoreAnimation()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xDC0AE4", Offset = "0xDC0AE4", VA = "0xDC0AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xDC0AE8", Offset = "0xDC0AE8", VA = "0xDC0AE8")]
	public Hand()
	{
	}
}
[Token(Token = "0x20000FF")]
public enum HandStoreAnimationType
{
	[Token(Token = "0x40007DE")]
	NONE,
	[Token(Token = "0x40007DF")]
	GRAB,
	[Token(Token = "0x40007E0")]
	ROCK,
	[Token(Token = "0x40007E1")]
	OPEN,
	[Token(Token = "0x40007E2")]
	POINTER,
	[Token(Token = "0x40007E3")]
	PUNCH
}
[Token(Token = "0x2000100")]
public class PunchingGlove : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandEnum current_hand;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public HandEnum last_hand;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<DrumPartCollision> drumPartCollisionsList;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public IconsType lastHitIconsType;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float lastHitIconsTimestamp;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startLinePoint;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endLinePoint;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float last_sticks_sound_timestamp;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip sticks_sound;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sticksCollisionPsPrefab;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitDrumsCollider;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xF4F168", Offset = "0xF4F168", VA = "0xF4F168")]
	private void Start()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xF4F2E8", Offset = "0xF4F2E8", VA = "0xF4F2E8")]
	public void OnCollisionEnterHitBetweenPunchingCollider(GameObject other, Vector3 hitPos)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xF4F7D4", Offset = "0xF4F7D4", VA = "0xF4F7D4")]
	public void OnTriggerStayHitBetweenPunchingTrigger(Collider other)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xF4F96C", Offset = "0xF4F96C", VA = "0xF4F96C")]
	public void AddDrumPartCollision(IconsType iconsType)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xF4F1E4", Offset = "0xF4F1E4", VA = "0xF4F1E4")]
	public void SetPunchingGloveModeActivated(bool is_punching_glove_mode_activated)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xF4FBA4", Offset = "0xF4FBA4", VA = "0xF4FBA4")]
	public bool HasActiveDrumPartCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xF4FAFC", Offset = "0xF4FAFC", VA = "0xF4FAFC")]
	private int GetDrumPartCollisionPos(IconsType iconsType)
	{
		return default(int);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xF4FC78", Offset = "0xF4FC78", VA = "0xF4FC78")]
	public void OnDrumHit(IconsType lastHitIconsType)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xF4FCA4", Offset = "0xF4FCA4", VA = "0xF4FCA4")]
	public PunchingGlove()
	{
	}
}
[Token(Token = "0x2000101")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000752")]
	public static T Clone<T>(this T source)
	{
		return (T)null;
	}
}
[Token(Token = "0x2000102")]
public static class RendererExtensions
{
	[Token(Token = "0x6000753")]
	[Address(RVA = "0xD87198", Offset = "0xD87198", VA = "0xD87198")]
	private static int CountCornersVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(int);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD872D4", Offset = "0xD872D4", VA = "0xD872D4")]
	public static bool IsFullyVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD872F0", Offset = "0xD872F0", VA = "0xD872F0")]
	public static bool IsVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000103")]
public static class RectTransformExtensions
{
	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD863A0", Offset = "0xD863A0", VA = "0xD863A0")]
	public static bool WorldSpaceOverlaps(this RectTransform overlaping, RectTransform overlaped)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000104")]
public class ScreenFadeFeature : ScriptableRendererFeature
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeSettings settings;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ScreenFadePass renderPass;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD89E0C", Offset = "0xD89E0C", VA = "0xD89E0C", Slot = "4")]
	public override void Create()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xD89EC8", Offset = "0xD89EC8", VA = "0xD89EC8", Slot = "5")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xD89F1C", Offset = "0xD89F1C", VA = "0xD89F1C")]
	public ScreenFadeFeature()
	{
	}
}
[Serializable]
[Token(Token = "0x2000105")]
public class FadeSettings
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isEnabled;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string profilerTag;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderPassEvent renderPassEvent;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[NonSerialized]
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material runTimeMaterial;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x2050004", Offset = "0x2050004", VA = "0x2050004")]
	public bool AreValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x2050090", Offset = "0x2050090", VA = "0x2050090")]
	public FadeSettings()
	{
	}
}
[Token(Token = "0x2000106")]
public class ScreenFadePass : ScriptableRenderPass
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FadeSettings settings;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xD89E80", Offset = "0xD89E80", VA = "0xD89E80")]
	public ScreenFadePass(FadeSettings newSettings)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xD89F24", Offset = "0xD89F24", VA = "0xD89F24", Slot = "7")]
	public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
	{
	}
}
[Token(Token = "0x2000107")]
public class HandPressence : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDeviceCharacteristics controllerCharacteristics;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject handModelPrefab;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandEnum handEnum;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image autograbProgressbar;

	[Token(Token = "0x40007FB")]
	private const float grabThreshold = 0.1f;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice targetDevice;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject spawnedController;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spawnedHandModel;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator handAnimator;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hasStickGrabbed;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool old_is_menu_button_pressed;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject equip_hand_ps;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool firstGrab;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float triggerValue;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float grabValue;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool lastStickyState;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool firstStickyState;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float firstStickyStateTimeStamp;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int stickyClickCount;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float autograbPressBtnTimeStamp;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool autograbSpawnedByPressingBtn;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float autograbLastGrabTimeStamp;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xDC0AF0", Offset = "0xDC0AF0", VA = "0xDC0AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xDC0AF4", Offset = "0xDC0AF4", VA = "0xDC0AF4")]
	public void InitDeviceModels()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xDC0CFC", Offset = "0xDC0CFC", VA = "0xDC0CFC")]
	private void InstantiateHand(InputDevice targetDevice)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xDC0FFC", Offset = "0xDC0FFC", VA = "0xDC0FFC")]
	public void ReInstantiateHand()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xDC1174", Offset = "0xDC1174", VA = "0xDC1174")]
	private void UpdateHandAnimation()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xDC135C", Offset = "0xDC135C", VA = "0xDC135C")]
	private void CheckInputs()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xDC1E94", Offset = "0xDC1E94", VA = "0xDC1E94")]
	private void HandleInteractionAction(bool pressed, ref InteractionState interactionState)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xDC1C84", Offset = "0xDC1C84", VA = "0xDC1C84")]
	private void CheckStickySystem()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xDC1DA4", Offset = "0xDC1DA4", VA = "0xDC1DA4")]
	private void CheckInvertedSystem()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xDC17C4", Offset = "0xDC17C4", VA = "0xDC17C4")]
	private void UpdateAutograb()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xDC1EC0", Offset = "0xDC1EC0", VA = "0xDC1EC0")]
	public void ResetAutograbTimeStamp()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xDC1F68", Offset = "0xDC1F68", VA = "0xDC1F68")]
	private void Update()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xDC2020", Offset = "0xDC2020", VA = "0xDC2020")]
	public HandPressence()
	{
	}
}
[Token(Token = "0x2000108")]
public class ShowDistance : MonoBehaviour
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Goal;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EasyGoal;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xD96578", Offset = "0xD96578", VA = "0xD96578")]
	public ShowDistance()
	{
	}
}
[Token(Token = "0x2000109")]
public class ShowLineToNextObject : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xD96580", Offset = "0xD96580", VA = "0xD96580")]
	public ShowLineToNextObject()
	{
	}
}
[Token(Token = "0x200010A")]
public class HitBetweenPunchCollider : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunchingGlove drumStick;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xDC4568", Offset = "0xDC4568", VA = "0xDC4568")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xDC4760", Offset = "0xDC4760", VA = "0xDC4760")]
	public HitBetweenPunchCollider()
	{
	}
}
[Token(Token = "0x200010B")]
public class HitBetweenStickCollider : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Drumstick drumStick;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initBoxColliderSixe;

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xDC4768", Offset = "0xDC4768", VA = "0xDC4768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xDC4854", Offset = "0xDC4854", VA = "0xDC4854")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xDC4A04", Offset = "0xDC4A04", VA = "0xDC4A04")]
	public HitBetweenStickCollider()
	{
	}
}
[Token(Token = "0x200010C")]
public class IconEnemy : MonoBehaviour
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iconPlane;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] icons_MT_list;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] icons_activated_MT;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IconsType iconsType;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool done;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xDB6C04", Offset = "0xDB6C04", VA = "0xDB6C04")]
	public void SetIcon(IconsType icon)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xDC4A0C", Offset = "0xDC4A0C", VA = "0xDC4A0C")]
	public void ActivateIcon()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xDC4AE0", Offset = "0xDC4AE0", VA = "0xDC4AE0")]
	public void DesactivateIcon()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xDC4BB4", Offset = "0xDC4BB4", VA = "0xDC4BB4")]
	public IconEnemy()
	{
	}
}
[Token(Token = "0x200010D")]
public enum IconsType
{
	[Token(Token = "0x4000819")]
	NONE,
	[Token(Token = "0x400081A")]
	SNARE,
	[Token(Token = "0x400081B")]
	KICK,
	[Token(Token = "0x400081C")]
	HIGH_TOM,
	[Token(Token = "0x400081D")]
	LOW_TOM,
	[Token(Token = "0x400081E")]
	CRUSH,
	[Token(Token = "0x400081F")]
	RIDE
}
[Token(Token = "0x200010E")]
public class LocalizationService : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationService Instance;

	[Token(Token = "0x4000821")]
	private const string DefaultLocalizationName = "English";

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string LocalizationPath;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnChangeLocalization;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string _localization;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> localizationLibrary;

	[Token(Token = "0x17000039")]
	public static string LocalizationFilePath
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0xDAA380", Offset = "0xDAA380", VA = "0xDAA380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public string Localization
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xDAA3EC", Offset = "0xDAA3EC", VA = "0xDAA3EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xDAA454", Offset = "0xDAA454", VA = "0xDAA454")]
		set
		{
		}
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDAA754", Offset = "0xDAA754", VA = "0xDAA754")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDAA8D4", Offset = "0xDAA8D4", VA = "0xDAA8D4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDAA97C", Offset = "0xDAA97C", VA = "0xDAA97C")]
	public string GetLocale()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDAADD8", Offset = "0xDAADD8", VA = "0xDAADD8")]
	public string GetLanguage(string locale)
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDAB380", Offset = "0xDAB380", VA = "0xDAB380")]
	private static Dictionary<string, string> ParseLocalizeFile(string[,] grid)
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDAB5DC", Offset = "0xDAB5DC", VA = "0xDAB5DC")]
	public string GetTextByKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDAB65C", Offset = "0xDAB65C", VA = "0xDAB65C")]
	public string GetTextByKeyWithLocalize(string key, string localize)
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDAA964", Offset = "0xDAA964", VA = "0xDAA964")]
	public string GetLocalization()
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDAB730", Offset = "0xDAB730", VA = "0xDAB730")]
	public string[] GetLocalizations()
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDAA4F4", Offset = "0xDAA4F4", VA = "0xDAA4F4")]
	public Dictionary<string, string> LoadLocalizeFileHelper()
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDAB8C0", Offset = "0xDAB8C0", VA = "0xDAB8C0")]
	private void LoadDefault()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDAB910", Offset = "0xDAB910", VA = "0xDAB910")]
	public static string[] GetLocalizationKeys()
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDABAE4", Offset = "0xDABAE4", VA = "0xDABAE4")]
	public LocalizationService()
	{
	}
}
[Token(Token = "0x200010F")]
public class LocalizationTextLoader : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextTypeEnum textType;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xDABB64", Offset = "0xDABB64", VA = "0xDABB64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDABB68", Offset = "0xDABB68", VA = "0xDABB68")]
	public void LoadText()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDABCC0", Offset = "0xDABCC0", VA = "0xDABCC0")]
	public LocalizationTextLoader()
	{
	}
}
[Token(Token = "0x2000110")]
public enum TextTypeEnum
{
	[Token(Token = "0x4000829")]
	NONE,
	[Token(Token = "0x400082A")]
	CAPITALIZE,
	[Token(Token = "0x400082B")]
	UPPERCASE,
	[Token(Token = "0x400082C")]
	LOWERCASE
}
[Token(Token = "0x2000111")]
public static class SafetyAction
{
	[Token(Token = "0x600078A")]
	[Address(RVA = "0xD88480", Offset = "0xD88480", VA = "0xD88480")]
	public static void SafeInvoke(this Action action)
	{
	}

	[Token(Token = "0x600078B")]
	public static void SafeInvoke<T>(this Action<T> action, T arg1)
	{
	}

	[Token(Token = "0x600078C")]
	public static void SafeInvoke<T1, T2>(this Action<T1, T2> action, T1 arg1, T2 arg2)
	{
	}
}
[Token(Token = "0x2000112")]
public class Meteorite : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float stopSpeed;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float accel;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 posOrigen;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 targetScale;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int id;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool canMove;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool shrink;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool isSFXPlayed;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float initialVolume;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x128B178", Offset = "0x128B178", VA = "0x128B178")]
	public void Init(Vector3 dir, int _id, Vector3 _targetScale)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x128B358", Offset = "0x128B358", VA = "0x128B358")]
	private void Update()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x128B88C", Offset = "0x128B88C", VA = "0x128B88C")]
	private void CheckPlayMeteoritesSFX()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x128BA68", Offset = "0x128BA68", VA = "0x128BA68")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x128BA70", Offset = "0x128BA70", VA = "0x128BA70")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x128BA7C", Offset = "0x128BA7C", VA = "0x128BA7C")]
	public Meteorite()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x128BA84", Offset = "0x128BA84", VA = "0x128BA84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA646BC", Offset = "0xA646BC")]
	private void <Init>b__12_0()
	{
	}
}
[Token(Token = "0x2000113")]
public class MeteoriteBoss : Enemy
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float stopSpeed;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float accel;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 posOrigen;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 targetScale;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool canMove;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool canMovePosition;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	private bool canAct;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	private bool hasToStop;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Material[] colorMatsBaseList;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material[] colorMatsFocList;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float divTempoNormal;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float divTempo;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float timeStart;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float timeStartPause;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float timeToDecide;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float timeToChangeColor;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timeToMiddle;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float timeStopStart;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeStop;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject IntensityPSs;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private GameObject FocusPSs;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private IconsType _targetIcon;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x128BAF4", Offset = "0x128BAF4", VA = "0x128BAF4")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x128EFFC", Offset = "0x128EFFC", VA = "0x128EFFC")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x128BFB0", Offset = "0x128BFB0", VA = "0x128BFB0")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x12904E8", Offset = "0x12904E8", VA = "0x12904E8")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x12905F8", Offset = "0x12905F8", VA = "0x12905F8")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1290708", Offset = "0x1290708", VA = "0x1290708")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1291440", Offset = "0x1291440", VA = "0x1291440")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1291450", Offset = "0x1291450", VA = "0x1291450")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x129145C", Offset = "0x129145C", VA = "0x129145C")]
	public void BigScale()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x12914C0", Offset = "0x12914C0", VA = "0x12914C0")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x12914C8", Offset = "0x12914C8", VA = "0x12914C8", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1291504", Offset = "0x1291504", VA = "0x1291504", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x129154C", Offset = "0x129154C", VA = "0x129154C", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1291550", Offset = "0x1291550", VA = "0x1291550", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1291554", Offset = "0x1291554", VA = "0x1291554", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1291558", Offset = "0x1291558", VA = "0x1291558", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1291B98", Offset = "0x1291B98", VA = "0x1291B98", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1291EC0", Offset = "0x1291EC0", VA = "0x1291EC0", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1291EC4", Offset = "0x1291EC4", VA = "0x1291EC4", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1291EC8", Offset = "0x1291EC8", VA = "0x1291EC8", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1291ECC", Offset = "0x1291ECC", VA = "0x1291ECC", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1291878", Offset = "0x1291878", VA = "0x1291878")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1291ED0", Offset = "0x1291ED0", VA = "0x1291ED0", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1291FC8", Offset = "0x1291FC8", VA = "0x1291FC8")]
	public MeteoriteBoss()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1291FF8", Offset = "0x1291FF8", VA = "0x1291FF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA646CC", Offset = "0xA646CC")]
	private void <Recoil>b__64_0()
	{
	}
}
[Token(Token = "0x2000114")]
public enum MeteoriteBossState
{
	[Token(Token = "0x4000865")]
	NONE,
	[Token(Token = "0x4000866")]
	MOVE,
	[Token(Token = "0x4000867")]
	RECOIL,
	[Token(Token = "0x4000868")]
	PAUSE
}
[Token(Token = "0x2000115")]
public class MeteoriteBoss2 : Enemy
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float stopSpeed;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float accel;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 posOrigen;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 targetScale;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool canMove;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool canMovePosition;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	private bool canAct;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	private bool hasToStop;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject clashParticles;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GameObject poisonMeshCharge;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private GameObject poisonMeshClash;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Material[] colorMatsBaseList;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float divTempoNormal;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float divTempo;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timeStart;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float timeStartPause;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeToDecide;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timeToChangeColor;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float timeToMiddle;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float timeStopStart;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float timeStop;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private GameObject IntensityPSs;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private GameObject FocusPSs;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private IconsType _targetIcon;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1292088", Offset = "0x1292088", VA = "0x1292088")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x12945E0", Offset = "0x12945E0", VA = "0x12945E0")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x129254C", Offset = "0x129254C", VA = "0x129254C")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1295ACC", Offset = "0x1295ACC", VA = "0x1295ACC")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1295BDC", Offset = "0x1295BDC", VA = "0x1295BDC")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1295CEC", Offset = "0x1295CEC", VA = "0x1295CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1296B00", Offset = "0x1296B00", VA = "0x1296B00")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1296B50", Offset = "0x1296B50", VA = "0x1296B50")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x1296B5C", Offset = "0x1296B5C", VA = "0x1296B5C")]
	public void BigScale()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1296BC0", Offset = "0x1296BC0", VA = "0x1296BC0")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1296BC8", Offset = "0x1296BC8", VA = "0x1296BC8", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1296C04", Offset = "0x1296C04", VA = "0x1296C04", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1296C4C", Offset = "0x1296C4C", VA = "0x1296C4C", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1296C50", Offset = "0x1296C50", VA = "0x1296C50", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1296C54", Offset = "0x1296C54", VA = "0x1296C54", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1296C58", Offset = "0x1296C58", VA = "0x1296C58", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1297298", Offset = "0x1297298", VA = "0x1297298", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x12975C0", Offset = "0x12975C0", VA = "0x12975C0", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x12975C4", Offset = "0x12975C4", VA = "0x12975C4", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x12975C8", Offset = "0x12975C8", VA = "0x12975C8", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x12975CC", Offset = "0x12975CC", VA = "0x12975CC", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1296F78", Offset = "0x1296F78", VA = "0x1296F78")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x12975D0", Offset = "0x12975D0", VA = "0x12975D0", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x12976C8", Offset = "0x12976C8", VA = "0x12976C8")]
	public MeteoriteBoss2()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x12976FC", Offset = "0x12976FC", VA = "0x12976FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA646DC", Offset = "0xA646DC")]
	private void <Recoil>b__66_0()
	{
	}
}
[Token(Token = "0x2000116")]
public class MeteoriteBoss3 : Enemy
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float stopSpeed;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float accel;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 posOrigen;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 targetScale;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool canMove;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool canMovePosition;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	private bool canAct;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	private bool hasToStop;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Material[] colorMatsFocList;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float divTempoNormal;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float divTempo;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float timeStart;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float timeStartPause;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float timeToDecide;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float timeToChangeColor;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float timeToMiddle;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float timeStopStart;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timeStop;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject IntensityPSs;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject FocusPSs;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private IconsType _targetIcon;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x129778C", Offset = "0x129778C", VA = "0x129778C")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x129AABC", Offset = "0x129AABC", VA = "0x129AABC")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1297C48", Offset = "0x1297C48", VA = "0x1297C48")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x129BFA8", Offset = "0x129BFA8", VA = "0x129BFA8")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x129C0B8", Offset = "0x129C0B8", VA = "0x129C0B8")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x129C1C8", Offset = "0x129C1C8", VA = "0x129C1C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x129CF08", Offset = "0x129CF08", VA = "0x129CF08")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x129CF18", Offset = "0x129CF18", VA = "0x129CF18")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x129CF24", Offset = "0x129CF24", VA = "0x129CF24")]
	public void BigScale()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x129CF88", Offset = "0x129CF88", VA = "0x129CF88")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x129CF90", Offset = "0x129CF90", VA = "0x129CF90", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x129CFCC", Offset = "0x129CFCC", VA = "0x129CFCC", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x129D014", Offset = "0x129D014", VA = "0x129D014", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x129D018", Offset = "0x129D018", VA = "0x129D018", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x129D01C", Offset = "0x129D01C", VA = "0x129D01C", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x129D020", Offset = "0x129D020", VA = "0x129D020", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x129D660", Offset = "0x129D660", VA = "0x129D660", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x129D988", Offset = "0x129D988", VA = "0x129D988", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x129D98C", Offset = "0x129D98C", VA = "0x129D98C", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x129D990", Offset = "0x129D990", VA = "0x129D990", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x129D994", Offset = "0x129D994", VA = "0x129D994", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x129D340", Offset = "0x129D340", VA = "0x129D340")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x129D998", Offset = "0x129D998", VA = "0x129D998", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x129DA90", Offset = "0x129DA90", VA = "0x129DA90")]
	public MeteoriteBoss3()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x129DAC0", Offset = "0x129DAC0", VA = "0x129DAC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA646EC", Offset = "0xA646EC")]
	private void <Recoil>b__63_0()
	{
	}
}
[Token(Token = "0x2000117")]
public class Meteospawner : MonoBehaviour
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> meteorites;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject meteorite;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform endPosition;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform endPosition2;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int maxMeteorites;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float minTimeToMeteorite;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxTimeToMeteorite;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float radious;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minScale;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float maxScale;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timeLastSpawn;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int id;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeToMeteorite;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x11F2368", Offset = "0x11F2368", VA = "0x11F2368")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x11F2384", Offset = "0x11F2384", VA = "0x11F2384")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x11F2880", Offset = "0x11F2880", VA = "0x11F2880")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x11F2908", Offset = "0x11F2908", VA = "0x11F2908")]
	public void RemoveMeteorite(int _id)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x11F29E0", Offset = "0x11F29E0", VA = "0x11F29E0")]
	public Meteospawner()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BDA0", Offset = "0xA5BDA0")]
public class MultiImageButton : Button
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Graphic[] graphics;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MultiImageTargetGraphics targetGraphics;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x11F6210", Offset = "0x11F6210", VA = "0x11F6210", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x11F6218", Offset = "0x11F6218", VA = "0x11F6218", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x11F6350", Offset = "0x11F6350", VA = "0x11F6350")]
	private bool GetGraphics()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x11F6430", Offset = "0x11F6430", VA = "0x11F6430")]
	public MultiImageButton()
	{
	}
}
[Token(Token = "0x2000119")]
public class MultiImageTargetGraphics : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Graphic[] targetGraphics;

	[Token(Token = "0x1700003B")]
	public Graphic[] GetTargetGraphics
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x11F6438", Offset = "0x11F6438", VA = "0x11F6438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x11F6440", Offset = "0x11F6440", VA = "0x11F6440")]
	public MultiImageTargetGraphics()
	{
	}
}
[Token(Token = "0x200011A")]
public class ParticleSystemParentPool : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static ParticleSystemParentPool instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte maxSticksCollisionAmmount;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private byte maxEnemyHitFeedbackAmmount;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private byte maxLlampAmmount;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private byte maxX3Ammount;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private byte maxXFailAmmount;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private byte maxDeathAmmount;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ParticleSystem> sticksCollisionList;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleSystem> stickExplosionList;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleSystem> enemyHitFeedbackList;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleSystem> enemyGoodHitFeedbackList;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ParticleSystem> enemyPerfectHitFeedbackList;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> llampList;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ParticleSystem> x3List;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ParticleSystem> xFailList;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ParticleSystem> deathList;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x11408D8", Offset = "0x11408D8", VA = "0x11408D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1140988", Offset = "0x1140988", VA = "0x1140988")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1140B30", Offset = "0x1140B30", VA = "0x1140B30")]
	public void ActivateSticksCollision(GameObject sticksCollisionPsPrefab, Vector3 hitPos)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1140F80", Offset = "0x1140F80", VA = "0x1140F80")]
	public void ActivateSticksExplosion(GameObject sticksCollisionPsPrefab, Vector3 hitPos)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x11413C0", Offset = "0x11413C0", VA = "0x11413C0")]
	public void ActivateLlampPrefab(GameObject llampPsPrefab, Vector3 pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1141958", Offset = "0x1141958", VA = "0x1141958")]
	public void ActivateX3Prefab(GameObject x3PsPrefab, Vector3 pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1141D80", Offset = "0x1141D80", VA = "0x1141D80")]
	public void ActivateXFailPrefab(GameObject xFailPrefab, Vector3 spawn_pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x11421A8", Offset = "0x11421A8", VA = "0x11421A8")]
	public void ActivateDeathPrefab(GameObject deathPSPrefab, Vector3 spawn_pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x11425D0", Offset = "0x11425D0", VA = "0x11425D0")]
	public void ActivateExploPrefab(GameObject exploPrefab, Vector3 hitPos, EnemyTypeFeedback _feedback)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1143580", Offset = "0x1143580", VA = "0x1143580")]
	public void DestroyAllChildren()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1143800", Offset = "0x1143800", VA = "0x1143800")]
	public ParticleSystemParentPool()
	{
	}
}
[Token(Token = "0x200011B")]
public enum EnemyTypeFeedback
{
	[Token(Token = "0x40008E1")]
	Normal,
	[Token(Token = "0x40008E2")]
	Good,
	[Token(Token = "0x40008E3")]
	Perfect
}
[Token(Token = "0x200011C")]
public class PerfectHelp : MonoBehaviour
{
	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Barra;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1143818", Offset = "0x1143818", VA = "0x1143818")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x114381C", Offset = "0x114381C", VA = "0x114381C")]
	public PerfectHelp()
	{
	}
}
[Token(Token = "0x200011D")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xD88354", Offset = "0xD88354", VA = "0xD88354")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xD88358", Offset = "0xD88358", VA = "0xD88358")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xD8835C", Offset = "0xD8835C", VA = "0xD8835C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xD88478", Offset = "0xD88478", VA = "0xD88478")]
	public Rotator()
	{
	}
}
[Serializable]
[Token(Token = "0x200011E")]
public class SaveData
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ChallengeSongSaveData> challengeSongsSaveData;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SongInfoCampaignSaveData> songInfoCampaignSaveData;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StoreItemSaveData> storeItemSaveData;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> TvCinematicsSeenSaveData;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int XPearned;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int munnies;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool is_tutorial_done_first_time;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint money_earned;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint id_equipped_hands;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public uint id_equipped_drums;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint id_equipped_drumsstick;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float drumsOffset;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SettingsController.OptionsSettings optionsSettings;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string version;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int version_code;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float lowTom_x_offset;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lowTom_y_offset;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float highTom_x_offset;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float highTom_y_offset;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xD88490", Offset = "0xD88490", VA = "0xD88490")]
	public SaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class StoreItemSaveData
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public StoreItemType type;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool has_unlocked;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool has_purchased;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool has_clicked_first_time;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x203B134", Offset = "0x203B134", VA = "0x203B134")]
	public StoreItemSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class ChallengeSongSaveData
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public bool is_unlocked_challenge;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<ChallengeSongInfoSaveData> DifficultiesInfo;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x2030F48", Offset = "0x2030F48", VA = "0x2030F48")]
	public void CreateSave(int id)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x2031048", Offset = "0x2031048", VA = "0x2031048")]
	public void UpdateSave(Song song)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x20314B4", Offset = "0x20314B4", VA = "0x20314B4")]
	public ChallengeSongSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000121")]
public class ChallengeSongInfoSaveData
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public SongDifficulty Difficulty;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	public bool HasRanked;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x2030F40", Offset = "0x2030F40", VA = "0x2030F40")]
	public ChallengeSongInfoSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000122")]
public class SongInfoCampaignSaveData
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StarConditionSaveData[] StarConditions;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xCD5C44", Offset = "0xCD5C44", VA = "0xCD5C44")]
	public void CreateSave(int id)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xCD5DF4", Offset = "0xCD5DF4", VA = "0xCD5DF4")]
	public void UpdateSave(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCD5EC4", Offset = "0xCD5EC4", VA = "0xCD5EC4")]
	public SongInfoCampaignSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000123")]
public class StarConditionSaveData
{
	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xCD5DEC", Offset = "0xCD5DEC", VA = "0xCD5DEC")]
	public StarConditionSaveData()
	{
	}
}
[Token(Token = "0x2000124")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x6000805")]
	public static void Save<T>(T objectToSave, string key)
	{
	}

	[Token(Token = "0x6000806")]
	public static T Load<T>(string key, bool array)
	{
		return (T)null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xD88498", Offset = "0xD88498", VA = "0xD88498")]
	public static bool SaveExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xD88508", Offset = "0xD88508", VA = "0xD88508")]
	public static void DeleteAllSaveFiles()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xD885A8", Offset = "0xD885A8", VA = "0xD885A8")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x2000125")]
public class BuildLoader : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB5C", Offset = "0xA5CB5C")]
	private sealed class <LoadPersistentIE>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildLoader <>4__this;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <op>5__2;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x202D970", Offset = "0x202D970", VA = "0x202D970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x202D9D8", Offset = "0x202D9D8", VA = "0x202D9D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x202D04C", Offset = "0x202D04C", VA = "0x202D04C")]
		[DebuggerHidden]
		public <LoadPersistentIE>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x202D080", Offset = "0x202D080", VA = "0x202D080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x202D084", Offset = "0x202D084", VA = "0x202D084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x202D978", Offset = "0x202D978", VA = "0x202D978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainCamera;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject persistentCamera;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasLoading;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScreenFader screenFader;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x202CF28", Offset = "0x202CF28", VA = "0x202CF28")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x202CFD0", Offset = "0x202CFD0", VA = "0x202CFD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA646FC", Offset = "0xA646FC")]
	private IEnumerator LoadPersistentIE()
	{
		return null;
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x202D078", Offset = "0x202D078", VA = "0x202D078")]
	public BuildLoader()
	{
	}
}
[Token(Token = "0x2000126")]
public class CanvasLoading : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bIsActivated;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadingLogoGroup;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject initLoadingGroup;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadingGroup;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject stickerSitImage;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI initLoadingTipText;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI loadingTipText;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI initLoadingThreeEllipsisText;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI loadingLoadingThreeEllipsisText;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI pressText;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] pressTextImageList;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite[] stickerSitImageList;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite[] spriteLogoWithGarageList;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite[] spriteLogoList;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image initLoadingImage;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image loadingImage;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject LoadingDemoSticker;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject LogoLoadingDemoSticker;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject InitLoadingDemoSticker;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject TextSteamVR;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentThreeEllipsisCount;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastTimestampThreeEllipsis;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<int, string> tipsList;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string loadingText;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float lerpTimeToCenter;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isLerping;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool isLerpingOptionActivated;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x202F0F0", Offset = "0x202F0F0", VA = "0x202F0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x202F160", Offset = "0x202F160", VA = "0x202F160")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x202F4EC", Offset = "0x202F4EC", VA = "0x202F4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x202F9F0", Offset = "0x202F9F0", VA = "0x202F9F0")]
	public void ActivateLerping()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x202FCB8", Offset = "0x202FCB8", VA = "0x202FCB8")]
	public void DisableLerping()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x202F630", Offset = "0x202F630", VA = "0x202F630")]
	private void UpdatePosToCenter()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x202F52C", Offset = "0x202F52C", VA = "0x202F52C")]
	private void UpdateThreeEllipsis()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x202D4DC", Offset = "0x202D4DC", VA = "0x202D4DC")]
	public void ActivateInitLoading()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x202FCC0", Offset = "0x202FCC0", VA = "0x202FCC0")]
	private void ActivateNextStepInitLoading()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x202FE10", Offset = "0x202FE10", VA = "0x202FE10")]
	public void ActivateLoadingImage()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x202D734", Offset = "0x202D734", VA = "0x202D734")]
	public void ActivatePressText()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x202D924", Offset = "0x202D924", VA = "0x202D924")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x202F458", Offset = "0x202F458", VA = "0x202F458")]
	public void InitTexts()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x202F224", Offset = "0x202F224", VA = "0x202F224")]
	public void InitTipList()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x202FFFC", Offset = "0x202FFFC", VA = "0x202FFFC")]
	private string GetRandomTip()
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x20300AC", Offset = "0x20300AC", VA = "0x20300AC")]
	private string GetDrumsSettingsTip()
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x203013C", Offset = "0x203013C", VA = "0x203013C")]
	public CanvasLoading()
	{
	}
}
[Token(Token = "0x2000127")]
public class PropRotation : MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSizeLimit;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSizeLimit;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool makeSmall;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 size;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float frameFactor;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xF4EF00", Offset = "0xF4EF00", VA = "0xF4EF00")]
	private void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xF4EF04", Offset = "0xF4EF04", VA = "0xF4EF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xF4F104", Offset = "0xF4F104", VA = "0xF4F104")]
	public PropRotation()
	{
	}
}
[Token(Token = "0x2000128")]
public class SceneLoader : Singleton<SceneLoader>
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB6C", Offset = "0xA5CB6C")]
	private sealed class <LoadScene>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _sceneName;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <is_same_scene>5__2;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xD89B40", Offset = "0xD89B40", VA = "0xD89B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xD89BA8", Offset = "0xD89BA8", VA = "0xD89BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD887B8", Offset = "0xD887B8", VA = "0xD887B8")]
		[DebuggerHidden]
		public <LoadScene>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD88E88", Offset = "0xD88E88", VA = "0xD88E88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD88E8C", Offset = "0xD88E8C", VA = "0xD88E8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD89B48", Offset = "0xD89B48", VA = "0xD89B48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB7C", Offset = "0xA5CB7C")]
	private sealed class <UnloadCurrent>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool is_same_scene;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unloadOperation>5__2;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xD89D9C", Offset = "0xD89D9C", VA = "0xD89D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xD89E04", Offset = "0xD89E04", VA = "0xD89E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD88858", Offset = "0xD88858", VA = "0xD88858")]
		[DebuggerHidden]
		public <UnloadCurrent>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD89BB0", Offset = "0xD89BB0", VA = "0xD89BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD89BB4", Offset = "0xD89BB4", VA = "0xD89BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD89DA4", Offset = "0xD89DA4", VA = "0xD89DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB8C", Offset = "0xA5CB8C")]
	private sealed class <LoadNew>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _sceneName;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadOperation>5__2;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xD88E18", Offset = "0xD88E18", VA = "0xD88E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xD88E80", Offset = "0xD88E80", VA = "0xD88E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD88900", Offset = "0xD88900", VA = "0xD88900")]
		[DebuggerHidden]
		public <LoadNew>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD88B48", Offset = "0xD88B48", VA = "0xD88B48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD88B4C", Offset = "0xD88B4C", VA = "0xD88B4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD88E20", Offset = "0xD88E20", VA = "0xD88E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLoadBegin;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnLoadEnd;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScreenFader screenFader;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasLoading;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isLoading;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xD885B0", Offset = "0xD885B0", VA = "0xD885B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xD8864C", Offset = "0xD8864C", VA = "0xD8864C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xD886E8", Offset = "0xD886E8", VA = "0xD886E8")]
	public void LoadNewScene(string _sceneName)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xD88720", Offset = "0xD88720", VA = "0xD88720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64760", Offset = "0xA64760")]
	private IEnumerator LoadScene(string _sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xD887E4", Offset = "0xD887E4", VA = "0xD887E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA647C4", Offset = "0xA647C4")]
	private IEnumerator UnloadCurrent(bool is_same_scene)
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xD88884", Offset = "0xD88884", VA = "0xD88884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64828", Offset = "0xA64828")]
	private IEnumerator LoadNew(string _sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xD8892C", Offset = "0xD8892C", VA = "0xD8892C")]
	private void SetActiveScene(Scene _scene, LoadSceneMode _mode)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xD88994", Offset = "0xD88994", VA = "0xD88994")]
	public void OnLoadBeginCallback()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xD889F0", Offset = "0xD889F0", VA = "0xD889F0")]
	public void OnLoadEndCallback()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xD88A7C", Offset = "0xD88A7C", VA = "0xD88A7C")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000129")]
public class ScriptableController : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScriptableController instance;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrefabControllerScriptableObject m_prefabs_controller_SO;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SongControllerScriptableObject m_songs_controller_SO;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVCinematicsShotControllerScriptableObject m_shots_controller_SO;

	[Token(Token = "0x1700003C")]
	public PrefabControllerScriptableObject _prefabs_controller_SO
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xD898B8", Offset = "0xD898B8", VA = "0xD898B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public SongControllerScriptableObject _songs_controller_SO
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0xD8A52C", Offset = "0xD8A52C", VA = "0xD8A52C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public TVCinematicsShotControllerScriptableObject _shots_controller_SO
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0xD8A608", Offset = "0xD8A608", VA = "0xD8A608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xD8A428", Offset = "0xD8A428", VA = "0xD8A428")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xD8A4F8", Offset = "0xD8A4F8", VA = "0xD8A4F8")]
	public void UnloadPrefabs()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xD8A5D4", Offset = "0xD8A5D4", VA = "0xD8A5D4")]
	public void UnloadSongs()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xD8A6B0", Offset = "0xD8A6B0", VA = "0xD8A6B0")]
	public void UnloadShots()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xD89D28", Offset = "0xD89D28", VA = "0xD89D28")]
	public void UnloadAll()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xD8A6E4", Offset = "0xD8A6E4", VA = "0xD8A6E4")]
	public ScriptableController()
	{
	}
}
[Token(Token = "0x200012A")]
public enum PrefabType
{
	[Token(Token = "0x4000947")]
	NONE,
	[Token(Token = "0x4000948")]
	DRUMS,
	[Token(Token = "0x4000949")]
	DRUMSTICKS,
	[Token(Token = "0x400094A")]
	LEFT_HAND,
	[Token(Token = "0x400094B")]
	RIGHT_HAND,
	[Token(Token = "0x400094C")]
	HANDS,
	[Token(Token = "0x400094D")]
	SPECIAL_ITEM,
	[Token(Token = "0x400094E")]
	RIG
}
[Token(Token = "0x200012B")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_ShuttingDown;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object m_Lock;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T m_Instance;

	[Token(Token = "0x1700003F")]
	public static T Instance
	{
		[Token(Token = "0x6000834")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000835")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000836")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000837")]
	public Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class SongInfo
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SongDifficulty Difficulty;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	public bool HasRanked;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xCD5648", Offset = "0xCD5648", VA = "0xCD5648")]
	public SongInfo()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xCD5650", Offset = "0xCD5650", VA = "0xCD5650")]
	public SongInfo(SongDifficulty _Difficulty, uint _HighScore, uint _Chain, uint _HitRate, uint _PerfectRate, uint _GoodRate, uint _NormalRate, bool _Completed, bool _Failed, bool _HasRanked)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xCD56F0", Offset = "0xCD56F0", VA = "0xCD56F0")]
	public Ranking GetRank()
	{
		return default(Ranking);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xCD5874", Offset = "0xCD5874", VA = "0xCD5874")]
	public SongDifficulty GetDifficulty()
	{
		return default(SongDifficulty);
	}
}
[Serializable]
[Token(Token = "0x200012D")]
public struct UnlockConditionInfo
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnlockCondition ConditionType;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int Value;
}
[Token(Token = "0x200012E")]
public enum UnlockCondition
{
	[Token(Token = "0x400095F")]
	CompleteSong,
	[Token(Token = "0x4000960")]
	NumberStars
}
[Token(Token = "0x200012F")]
public enum Ranking
{
	[Token(Token = "0x4000962")]
	none,
	[Token(Token = "0x4000963")]
	D,
	[Token(Token = "0x4000964")]
	C,
	[Token(Token = "0x4000965")]
	B,
	[Token(Token = "0x4000966")]
	A,
	[Token(Token = "0x4000967")]
	S,
	[Token(Token = "0x4000968")]
	F,
	[Token(Token = "0x4000969")]
	SS
}
[Serializable]
[Token(Token = "0x2000130")]
public class SongInfoCampaign
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int Id_Song;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StarCondition[] StarConditions;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public SongDifficulty Difficulty;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public VariationMode Variation;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint money_reward;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public Escenario scene;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xCD587C", Offset = "0xCD587C", VA = "0xCD587C")]
	public SongInfoCampaign()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xCD5884", Offset = "0xCD5884", VA = "0xCD5884")]
	public SongInfoCampaign(int _Id, int _Id_Song, SongDifficulty _Difficulty, uint _HighScore, uint _Chain, uint _HitRate, uint _PerfectRate, uint _GoodRate, uint _NormalRate, bool _Completed, bool _Failed, StarCondition[] _StarConditions, VariationMode _Variation, uint _money_reward, Escenario _scene)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xCD5970", Offset = "0xCD5970", VA = "0xCD5970")]
	public SongInfoCampaign(int _Id, int _Id_Song, SongDifficulty _Difficulty, StarCondition[] _StarConditions, VariationMode _Variation, uint _money_reward, Escenario _scene)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCD59E8", Offset = "0xCD59E8", VA = "0xCD59E8")]
	public void Load(SongInfoCampaignSaveData sicsd)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCD5AB0", Offset = "0xCD5AB0", VA = "0xCD5AB0")]
	public Ranking GetRank()
	{
		return default(Ranking);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xCD5BB4", Offset = "0xCD5BB4", VA = "0xCD5BB4")]
	public int GetStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xCD5BD0", Offset = "0xCD5BD0", VA = "0xCD5BD0")]
	public int GetUnlockStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xCD5C3C", Offset = "0xCD5C3C", VA = "0xCD5C3C")]
	public SongDifficulty GetDifficulty()
	{
		return default(SongDifficulty);
	}
}
[Token(Token = "0x2000131")]
public class SongStats : MonoBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject BaseNota;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] StarsSpriteList;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60650", Offset = "0xA60650")]
	[SerializeField]
	private GameObject Campaign;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI Name;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI Difficulty;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI Score;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI Chain;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI HitRate;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI Variation;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject PaperParent;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject FrameSupportInfo;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ButtonsCampaingParent;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA6073C", Offset = "0xA6073C")]
	[SerializeField]
	private GameObject Challenge;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI NameC;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI DifficultyC;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI ScoreC;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI ChainC;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI HitRateC;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Image Note;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject ButtonsChallengeParent;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject UnlockMoreFrame;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xCD5ED4", Offset = "0xCD5ED4", VA = "0xCD5ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xCD6010", Offset = "0xCD6010", VA = "0xCD6010")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xCD614C", Offset = "0xCD614C", VA = "0xCD614C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xCD6BD4", Offset = "0xCD6BD4", VA = "0xCD6BD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xCD636C", Offset = "0xCD636C", VA = "0xCD636C")]
	private void ActualizeInformation()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xCD6F54", Offset = "0xCD6F54", VA = "0xCD6F54")]
	private void InitPaperStars(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xCD6DEC", Offset = "0xCD6DEC", VA = "0xCD6DEC")]
	private void InitStars(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xCD7330", Offset = "0xCD7330", VA = "0xCD7330")]
	private void InitVariation(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xCD73C4", Offset = "0xCD73C4", VA = "0xCD73C4")]
	private Sprite GetSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xCD74CC", Offset = "0xCD74CC", VA = "0xCD74CC")]
	public SongStats()
	{
	}
}
[Token(Token = "0x2000132")]
public class AmbientSoundController : MonoBehaviour
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isAmbientPlaying;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x2023E70", Offset = "0x2023E70", VA = "0x2023E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x2023E74", Offset = "0x2023E74", VA = "0x2023E74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x2023E78", Offset = "0x2023E78", VA = "0x2023E78", Slot = "4")]
	public virtual void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x2023E7C", Offset = "0x2023E7C", VA = "0x2023E7C", Slot = "5")]
	public virtual void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x2023E80", Offset = "0x2023E80", VA = "0x2023E80", Slot = "6")]
	public virtual void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x2023E84", Offset = "0x2023E84", VA = "0x2023E84", Slot = "7")]
	public virtual void StopAll()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x2023E88", Offset = "0x2023E88", VA = "0x2023E88")]
	public AmbientSoundController()
	{
	}
}
[Token(Token = "0x2000133")]
public class DesertSoundController : AmbientSoundController
{
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CB9C", Offset = "0xA5CB9C")]
	private sealed class <PlayAcidRandomSFXIE>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DesertSoundController <>4__this;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xD5CD34", Offset = "0xD5CD34", VA = "0xD5CD34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xD5CD9C", Offset = "0xD5CD9C", VA = "0xD5CD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD5C5F8", Offset = "0xD5C5F8", VA = "0xD5C5F8")]
		[DebuggerHidden]
		public <PlayAcidRandomSFXIE>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD5CB7C", Offset = "0xD5CB7C", VA = "0xD5CB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD5CB80", Offset = "0xD5CB80", VA = "0xD5CB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD5CD3C", Offset = "0xD5CD3C", VA = "0xD5CD3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBAC", Offset = "0xA5CBAC")]
	private sealed class <PlayDebrisRandomSFXIE>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DesertSoundController <>4__this;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xD5CF5C", Offset = "0xD5CF5C", VA = "0xD5CF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xD5CFC4", Offset = "0xD5CFC4", VA = "0xD5CFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD5C6C0", Offset = "0xD5C6C0", VA = "0xD5C6C0")]
		[DebuggerHidden]
		public <PlayDebrisRandomSFXIE>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD5CDA4", Offset = "0xD5CDA4", VA = "0xD5CDA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD5CDA8", Offset = "0xD5CDA8", VA = "0xD5CDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD5CF64", Offset = "0xD5CF64", VA = "0xD5CF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DesertSoundController instance;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopCaveAmbientASMaxVolume;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopCaveAmbientAS;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float loopAcidAmbientASMaxVolume;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource loopAcidAmbientAS;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] loopWindAmbientASMaxVolume;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource[] loopWindAmbientAS;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float loopSandAmbientASMaxVolume;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource loopSandAmbientAS;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] acidASMaxVolume;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource[] acidAS;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] acidClipList;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastAcidRandomTimestamp;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] debrisASMaxVolume;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource[] debrisAS;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] debrisClipList;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastDebrisRandomTimestamp;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xD5C0BC", Offset = "0xD5C0BC", VA = "0xD5C0BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xD5C114", Offset = "0xD5C114", VA = "0xD5C114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xD5C118", Offset = "0xD5C118", VA = "0xD5C118")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xD5C354", Offset = "0xD5C354", VA = "0xD5C354")]
	private void Update()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xD5C378", Offset = "0xD5C378", VA = "0xD5C378")]
	private void UpdateAcidRandom()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xD5C55C", Offset = "0xD5C55C", VA = "0xD5C55C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6488C", Offset = "0xA6488C")]
	private IEnumerator PlayAcidRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xD5C46C", Offset = "0xD5C46C", VA = "0xD5C46C")]
	private void UpdateDebrisRandom()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xD5C624", Offset = "0xD5C624", VA = "0xD5C624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA648F0", Offset = "0xA648F0")]
	private IEnumerator PlayDebrisRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xD5C6EC", Offset = "0xD5C6EC", VA = "0xD5C6EC", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xD5C994", Offset = "0xD5C994", VA = "0xD5C994", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xD5CA34", Offset = "0xD5CA34", VA = "0xD5CA34", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xD5CAD4", Offset = "0xD5CAD4", VA = "0xD5CAD4", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xD5CB74", Offset = "0xD5CB74", VA = "0xD5CB74")]
	public DesertSoundController()
	{
	}
}
[Token(Token = "0x2000134")]
public class HighwaySoundController : AmbientSoundController
{
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBBC", Offset = "0xA5CBBC")]
	private sealed class <PlayThunderRandomSFXIE>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HighwaySoundController <>4__this;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xDC43EC", Offset = "0xDC43EC", VA = "0xDC43EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xDC4454", Offset = "0xDC4454", VA = "0xDC4454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xDC3E10", Offset = "0xDC3E10", VA = "0xDC3E10")]
		[DebuggerHidden]
		public <PlayThunderRandomSFXIE>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xDC4234", Offset = "0xDC4234", VA = "0xDC4234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xDC4238", Offset = "0xDC4238", VA = "0xDC4238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xDC43F4", Offset = "0xDC43F4", VA = "0xDC43F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighwaySoundController instance;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopHighwayAmbientASMaxVolume;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopHighwayAmbientAS;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float loopFanAmbientASMaxVolume;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource loopFanAmbientAS;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float loopFanFlyingASMaxVolume;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource loopFanFlyingAS;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] thunderASMaxVolume;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource[] thunderAS;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] thunderClipList;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastThunderTimestamp;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float loopNeonASMaxVolume;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource loopNeonAS;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float loopNeonFlickASMaxVolume;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource loopNeonFlickAS;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xDC3ADC", Offset = "0xDC3ADC", VA = "0xDC3ADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xDC3B34", Offset = "0xDC3B34", VA = "0xDC3B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xDC3B38", Offset = "0xDC3B38", VA = "0xDC3B38")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xDC3C80", Offset = "0xDC3C80", VA = "0xDC3C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xDC3C84", Offset = "0xDC3C84", VA = "0xDC3C84")]
	private void UpdateThunderRandom()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xDC3D74", Offset = "0xDC3D74", VA = "0xDC3D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64954", Offset = "0xA64954")]
	private IEnumerator PlayThunderRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xDC3E3C", Offset = "0xDC3E3C", VA = "0xDC3E3C", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xDC40DC", Offset = "0xDC40DC", VA = "0xDC40DC", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xDC414C", Offset = "0xDC414C", VA = "0xDC414C", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xDC41BC", Offset = "0xDC41BC", VA = "0xDC41BC", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xDC422C", Offset = "0xDC422C", VA = "0xDC422C")]
	public HighwaySoundController()
	{
	}
}
[Token(Token = "0x2000135")]
public class LavaSoundController : AmbientSoundController
{
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBCC", Offset = "0xA5CBCC")]
	private sealed class <PlayRandomSFXIE>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LavaSoundController <>4__this;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xDA3BD0", Offset = "0xDA3BD0", VA = "0xDA3BD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xDA3C38", Offset = "0xDA3C38", VA = "0xDA3C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xDA38B4", Offset = "0xDA38B4", VA = "0xDA38B4")]
		[DebuggerHidden]
		public <PlayRandomSFXIE>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xDA3A44", Offset = "0xDA3A44", VA = "0xDA3A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xDA3A48", Offset = "0xDA3A48", VA = "0xDA3A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xDA3BD8", Offset = "0xDA3BD8", VA = "0xDA3BD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LavaSoundController instance;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopLavaAmbientASMaxVolume;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopLavaAmbientAS;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] randomSFXAudioSourceMaxVolume;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource[] randomSFXAudioSource;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip randomLavaSFX;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastLavaRandomTimestamp;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xDA35D8", Offset = "0xDA35D8", VA = "0xDA35D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xDA3630", Offset = "0xDA3630", VA = "0xDA3630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xDA3730", Offset = "0xDA3730", VA = "0xDA3730")]
	private void Update()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xDA3734", Offset = "0xDA3734", VA = "0xDA3734")]
	private void UpdateLavaRandom()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xDA3818", Offset = "0xDA3818", VA = "0xDA3818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA649B8", Offset = "0xA649B8")]
	private IEnumerator PlayRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xDA3634", Offset = "0xDA3634", VA = "0xDA3634")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xDA38E0", Offset = "0xDA38E0", VA = "0xDA38E0", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xDA39D0", Offset = "0xDA39D0", VA = "0xDA39D0", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xDA39F4", Offset = "0xDA39F4", VA = "0xDA39F4", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xDA3A18", Offset = "0xDA3A18", VA = "0xDA3A18", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xDA3A3C", Offset = "0xDA3A3C", VA = "0xDA3A3C")]
	public LavaSoundController()
	{
	}
}
[Token(Token = "0x2000136")]
public class LobbySoundController : AmbientSoundController
{
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBDC", Offset = "0xA5CBDC")]
	private sealed class <PlayPreviewIE>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xDA9DC0", Offset = "0xDA9DC0", VA = "0xDA9DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xDA9E28", Offset = "0xDA9E28", VA = "0xDA9E28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xDA8ED0", Offset = "0xDA8ED0", VA = "0xDA8ED0")]
		[DebuggerHidden]
		public <PlayPreviewIE>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xDA9C8C", Offset = "0xDA9C8C", VA = "0xDA9C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xDA9C90", Offset = "0xDA9C90", VA = "0xDA9C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xDA9DC8", Offset = "0xDA9DC8", VA = "0xDA9DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBEC", Offset = "0xA5CBEC")]
	private sealed class <PlayCarSFXIE>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xDA9A7C", Offset = "0xDA9A7C", VA = "0xDA9A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xDA9AE4", Offset = "0xDA9AE4", VA = "0xDA9AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xDA9268", Offset = "0xDA9268", VA = "0xDA9268")]
		[DebuggerHidden]
		public <PlayCarSFXIE>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xDA994C", Offset = "0xDA994C", VA = "0xDA994C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xDA9950", Offset = "0xDA9950", VA = "0xDA9950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xDA9A84", Offset = "0xDA9A84", VA = "0xDA9A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CBFC", Offset = "0xA5CBFC")]
	private sealed class <PlayPipeSFXIE>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xDA9C1C", Offset = "0xDA9C1C", VA = "0xDA9C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xDA9C84", Offset = "0xDA9C84", VA = "0xDA9C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xDA9320", Offset = "0xDA9320", VA = "0xDA9320")]
		[DebuggerHidden]
		public <PlayPipeSFXIE>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xDA9AEC", Offset = "0xDA9AEC", VA = "0xDA9AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xDA9AF0", Offset = "0xDA9AF0", VA = "0xDA9AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xDA9C24", Offset = "0xDA9C24", VA = "0xDA9C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC0C", Offset = "0xA5CC0C")]
	private sealed class <PlayRandomSFXIE>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xDA9FE8", Offset = "0xDA9FE8", VA = "0xDA9FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xDAA050", Offset = "0xDAA050", VA = "0xDAA050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xDA93E8", Offset = "0xDA93E8", VA = "0xDA93E8")]
		[DebuggerHidden]
		public <PlayRandomSFXIE>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xDA9E30", Offset = "0xDA9E30", VA = "0xDA9E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xDA9E34", Offset = "0xDA9E34", VA = "0xDA9E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xDA9FF0", Offset = "0xDA9FF0", VA = "0xDA9FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC1C", Offset = "0xA5CC1C")]
	private sealed class <StopCreditsSongIE>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeoutSpeed>5__2;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xDAA310", Offset = "0xDAA310", VA = "0xDAA310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xDAA378", Offset = "0xDAA378", VA = "0xDAA378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xDA95D8", Offset = "0xDA95D8", VA = "0xDA95D8")]
		[DebuggerHidden]
		public <StopCreditsSongIE>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xDAA058", Offset = "0xDAA058", VA = "0xDAA058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xDAA05C", Offset = "0xDAA05C", VA = "0xDAA05C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xDAA318", Offset = "0xDAA318", VA = "0xDAA318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbySoundController instance;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isPreviewPlaying;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip startClip;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator currentPlayPreviewCoroutine;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] scratchList;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float previewTrackASMaxVolume;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource previewTrackAS;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] previewTrackClipList;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ampliTrackAmbientASMaxVolume;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource ampliTrackAmbientAS;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] ampliTrackAmbientClipList;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] ampliDemoTrackAmbientClipList;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float loopFluorescentAmbientASMaxVolume;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource loopFluorescentAmbientAS;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float doorSFXAudioSourceMaxVolume;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource doorSFXAudioSource;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] doorSFXList;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lastDoorTimestamp;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float carSFXAudioSourceMaxVolume;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource carSFXAudioSource;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip carSFX;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastCarTimestamp;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float pipeSFXAudioSourceMaxVolume;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource pipeSFXAudioSource;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip pipeSFX;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastPipeTimestamp;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float[] ampliSFXAudioSourceListMaxVolume;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource[] ampliSFXAudioSourceList;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip[] ampliSFXList;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lastAmpliTimestamp;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float creditsASMaxVolume;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip creditsClip;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource creditsAS;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool bCreditsIsStopped;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool bCreditsCorutineStarted;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	private bool isStopPreviewTrackBack;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float last_time_no_playing_drums;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float min_time_for_no_playing;

	[NonSerialized]
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float last_global_hit_time_stamp;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float next_playing_time;

	[NonSerialized]
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool playing_drums;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xDA8008", Offset = "0xDA8008", VA = "0xDA8008")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xDA81DC", Offset = "0xDA81DC", VA = "0xDA81DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xDA8218", Offset = "0xDA8218", VA = "0xDA8218")]
	private void Update()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xDA86FC", Offset = "0xDA86FC", VA = "0xDA86FC")]
	public void PlayStartClip()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xDA8804", Offset = "0xDA8804", VA = "0xDA8804")]
	public void PlayPreviewTrack(SongTrack songTrack)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xDA8E44", Offset = "0xDA8E44", VA = "0xDA8E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64A1C", Offset = "0xA64A1C")]
	private IEnumerator PlayPreviewIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xDA8EFC", Offset = "0xDA8EFC", VA = "0xDA8EFC")]
	public void StopPreviewTrack()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xDA8F44", Offset = "0xDA8F44", VA = "0xDA8F44")]
	public void StopPreviewTrackBack()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xDA8254", Offset = "0xDA8254", VA = "0xDA8254")]
	private void UpdateAmpliTrackAmbient()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xDA840C", Offset = "0xDA840C", VA = "0xDA840C")]
	private void UpdateDoorRandom()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xDA90A4", Offset = "0xDA90A4", VA = "0xDA90A4")]
	private void PlayDoorSFXIE()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xDA84B4", Offset = "0xDA84B4", VA = "0xDA84B4")]
	private void UpdateCarRandom()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xDA91DC", Offset = "0xDA91DC", VA = "0xDA91DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64A80", Offset = "0xA64A80")]
	private IEnumerator PlayCarSFXIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xDA8568", Offset = "0xDA8568", VA = "0xDA8568")]
	private void UpdatePipeRandom()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xDA9294", Offset = "0xDA9294", VA = "0xDA9294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64AE4", Offset = "0xA64AE4")]
	private IEnumerator PlayPipeSFXIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xDA861C", Offset = "0xDA861C", VA = "0xDA861C")]
	private void UpdateAmpliRandom()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xDA934C", Offset = "0xDA934C", VA = "0xDA934C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64B48", Offset = "0xA64B48")]
	private IEnumerator PlayRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xDA9414", Offset = "0xDA9414", VA = "0xDA9414")]
	public void PlayCreditsSong()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xDA951C", Offset = "0xDA951C", VA = "0xDA951C")]
	public void StopCreditsSong()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xDA955C", Offset = "0xDA955C", VA = "0xDA955C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64BAC", Offset = "0xA64BAC")]
	private IEnumerator StopCreditsSongIE()
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xDA8068", Offset = "0xDA8068", VA = "0xDA8068")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xDA9604", Offset = "0xDA9604", VA = "0xDA9604")]
	public void UpdateAmbienVolume()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xDA970C", Offset = "0xDA970C", VA = "0xDA970C", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xDA9860", Offset = "0xDA9860", VA = "0xDA9860", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xDA98A4", Offset = "0xDA98A4", VA = "0xDA98A4", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xDA98E8", Offset = "0xDA98E8", VA = "0xDA98E8", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xDA993C", Offset = "0xDA993C", VA = "0xDA993C")]
	public LobbySoundController()
	{
	}
}
[Token(Token = "0x2000137")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> enemies;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> spawned;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject enemyGoal;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enemyGoalEasy;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform enemyGoalOffset;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float alphaEasy;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float radious;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint spawnerID;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xCD74D4", Offset = "0xCD74D4", VA = "0xCD74D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xCD763C", Offset = "0xCD763C", VA = "0xCD763C")]
	public GameObject Spawn(TemplateEnemy _enemy)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xCD7DB0", Offset = "0xCD7DB0", VA = "0xCD7DB0")]
	private bool CheckSplitSiamese(TemplateEnemy _enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xCD7EF0", Offset = "0xCD7EF0", VA = "0xCD7EF0")]
	private Vector3 GetSiamesSpawnOffset(TemplateEnemy _enemy)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xCD8150", Offset = "0xCD8150", VA = "0xCD8150")]
	public void AddToSpawned(GameObject _enemy)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xCD81F4", Offset = "0xCD81F4", VA = "0xCD81F4")]
	public List<GameObject> GetEnemiesSpawned()
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xCD81FC", Offset = "0xCD81FC", VA = "0xCD81FC")]
	public void DeleteEnemies()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xCD832C", Offset = "0xCD832C", VA = "0xCD832C")]
	public void Remove(int _id)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xCD8490", Offset = "0xCD8490", VA = "0xCD8490")]
	public Spawner()
	{
	}
}
[Token(Token = "0x2000138")]
public class SpecialItem : MonoBehaviour
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60808", Offset = "0xA60808")]
	public Vector3 storePos;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 storeRot;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 storeScale;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material storeLockedMT;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xCD8498", Offset = "0xCD8498", VA = "0xCD8498")]
	private void Start()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xCD849C", Offset = "0xCD849C", VA = "0xCD849C")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xCD85F8", Offset = "0xCD85F8", VA = "0xCD85F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xCD85FC", Offset = "0xCD85FC", VA = "0xCD85FC")]
	public SpecialItem()
	{
	}
}
[Token(Token = "0x2000139")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 size;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xRotation;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yRotation;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zRotation;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxSizeLimit;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minSizeLimit;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool makeSmall;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xCD860C", Offset = "0xCD860C", VA = "0xCD860C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xCD87E4", Offset = "0xCD87E4", VA = "0xCD87E4")]
	public Spin()
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
public class StarCondition
{
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StarConditionEnum type;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint money_reward;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xCD908C", Offset = "0xCD908C", VA = "0xCD908C")]
	public StarCondition(StarConditionEnum _type, float _value, uint _money_reward)
	{
	}
}
[Serializable]
[Token(Token = "0x200013B")]
public enum StarConditionEnum
{
	[Token(Token = "0x40009F9")]
	COMPLETED_SONG,
	[Token(Token = "0x40009FA")]
	MIN_SCORE,
	[Token(Token = "0x40009FB")]
	MIN_CHARGED_HITS,
	[Token(Token = "0x40009FC")]
	MIN_CHAIN,
	[Token(Token = "0x40009FD")]
	MIN_HIT_RATE,
	[Token(Token = "0x40009FE")]
	MIN_PERFECT_HIT,
	[Token(Token = "0x40009FF")]
	MIN_GOOD_HIT,
	[Token(Token = "0x4000A00")]
	MIN_LIFE,
	[Token(Token = "0x4000A01")]
	MAX_HIT_RECEIVED
}
[Token(Token = "0x200013C")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000040")]
	public static bool Initialized
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xCD9F24", Offset = "0xCD9F24", VA = "0xCD9F24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xCD9F2C", Offset = "0xCD9F2C", VA = "0xCD9F2C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x200013D")]
public class StickInventoryInteractable : XRBaseInteractable
{
	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xCD9F34", Offset = "0xCD9F34", VA = "0xCD9F34")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xCD9F38", Offset = "0xCD9F38", VA = "0xCD9F38", Slot = "66")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xCD9F40", Offset = "0xCD9F40", VA = "0xCD9F40")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xCD9F44", Offset = "0xCD9F44", VA = "0xCD9F44")]
	public StickInventoryInteractable()
	{
	}
}
[Token(Token = "0x200013E")]
public class StickStartPlay : MonoBehaviour
{
	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xCD9F4C", Offset = "0xCD9F4C", VA = "0xCD9F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xCD9FFC", Offset = "0xCD9FFC", VA = "0xCD9FFC")]
	public StickStartPlay()
	{
	}
}
[Token(Token = "0x200013F")]
public class StoreContentBlock : MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StoreContentBlockItem[] storeItemList;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<uint> id_item_list;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<StoreItemType> item_type_list;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xCDA004", Offset = "0xCDA004", VA = "0xCDA004")]
	public void Start()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xCDA008", Offset = "0xCDA008", VA = "0xCDA008")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xCDA00C", Offset = "0xCDA00C", VA = "0xCDA00C")]
	public bool AddItem(uint id, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xCDA0B0", Offset = "0xCDA0B0", VA = "0xCDA0B0")]
	public bool HasMaxItemIds()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xCDA108", Offset = "0xCDA108", VA = "0xCDA108")]
	public void Init()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xCDA360", Offset = "0xCDA360", VA = "0xCDA360")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xCDA64C", Offset = "0xCDA64C", VA = "0xCDA64C")]
	public StoreContentBlock()
	{
	}
}
[Token(Token = "0x2000140")]
public class StoreContentBlockItem : MonoBehaviour
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint id_item;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private StoreItemType item_type;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI name_text;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI price_text;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject check_img;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lock_img;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dollar_img;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject icon_img;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject base_img;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject shadow_img;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Sprite> icon_type_img;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] LockSprites;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject Lock;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject Notification;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xCDA6FC", Offset = "0xCDA6FC", VA = "0xCDA6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xCDA248", Offset = "0xCDA248", VA = "0xCDA248")]
	public void Init(uint id, StoreItemType type)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xCDAD8C", Offset = "0xCDAD8C", VA = "0xCDAD8C")]
	private void InitRarity(uint id_rarity)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xCDA9D8", Offset = "0xCDA9D8", VA = "0xCDA9D8")]
	private void InitIcon(StoreItemType type)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xCDAA7C", Offset = "0xCDAA7C", VA = "0xCDAA7C")]
	private void InitStatus(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xCDB09C", Offset = "0xCDB09C", VA = "0xCDB09C")]
	private bool HasEquippedItem(uint id_item)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xCDB1A4", Offset = "0xCDB1A4", VA = "0xCDB1A4")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xCDB3AC", Offset = "0xCDB3AC", VA = "0xCDB3AC")]
	public void SetSelected(bool is_selected)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xCDB584", Offset = "0xCDB584", VA = "0xCDB584")]
	public uint GetIdItem()
	{
		return default(uint);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xCDB58C", Offset = "0xCDB58C", VA = "0xCDB58C")]
	public StoreItemType GetItemType()
	{
		return default(StoreItemType);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xCDA3C8", Offset = "0xCDA3C8", VA = "0xCDA3C8")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xCDAF2C", Offset = "0xCDAF2C", VA = "0xCDAF2C")]
	private void NotificationAnimation()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xCDB594", Offset = "0xCDB594", VA = "0xCDB594")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xCDB62C", Offset = "0xCDB62C", VA = "0xCDB62C")]
	public StoreContentBlockItem()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xCDB634", Offset = "0xCDB634", VA = "0xCDB634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64C10", Offset = "0xA64C10")]
	private void <NotificationAnimation>b__25_0()
	{
	}
}
[Token(Token = "0x2000141")]
public class TexturePanner : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeedX;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeedY;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool X;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Y;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offsetX;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetY;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initX;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float initY;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x20444D0", Offset = "0x20444D0", VA = "0x20444D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x2044530", Offset = "0x2044530", VA = "0x2044530")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x204460C", Offset = "0x204460C", VA = "0x204460C")]
	public TexturePanner()
	{
	}
}
[Token(Token = "0x2000142")]
public class ChangeSpritesStart : MonoBehaviour
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UIImageAnimation UIImageAnimation;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] spriteListNormal;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] spriteListPunch;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite[] spriteListOne;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x2031FBC", Offset = "0x2031FBC", VA = "0x2031FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x2032134", Offset = "0x2032134", VA = "0x2032134")]
	public ChangeSpritesStart()
	{
	}
}
[Token(Token = "0x2000143")]
public class TutorialController : MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC2C", Offset = "0xA5CC2C")]
	private sealed class <>c__DisplayClass89_0
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x2049130", Offset = "0x2049130", VA = "0x2049130")]
		public <>c__DisplayClass89_0()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x20496EC", Offset = "0x20496EC", VA = "0x20496EC")]
		internal void <SetTryWithMusicCompleted>b__0()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x20497C8", Offset = "0x20497C8", VA = "0x20497C8")]
		internal void <SetTryWithMusicCompleted>b__1()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC3C", Offset = "0xA5CC3C")]
	private sealed class <>c__DisplayClass90_0
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialController <>4__this;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x204929C", Offset = "0x204929C", VA = "0x204929C")]
		public <>c__DisplayClass90_0()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x2049810", Offset = "0x2049810", VA = "0x2049810")]
		internal void <ContinueButtonPopupNewUnlock>b__0()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x2049940", Offset = "0x2049940", VA = "0x2049940")]
		internal void <ContinueButtonPopupNewUnlock>b__1()
		{
		}
	}

	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC4C", Offset = "0xA5CC4C")]
	private sealed class <PlayBackgroundMusicIE>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxVolume>5__2;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeinSpeed>5__3;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <isOnMaxVolume>5__4;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x2049E88", Offset = "0x2049E88", VA = "0x2049E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x2049EF0", Offset = "0x2049EF0", VA = "0x2049EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x2049608", Offset = "0x2049608", VA = "0x2049608")]
		[DebuggerHidden]
		public <PlayBackgroundMusicIE>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x2049C4C", Offset = "0x2049C4C", VA = "0x2049C4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x2049C50", Offset = "0x2049C50", VA = "0x2049C50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x2049E90", Offset = "0x2049E90", VA = "0x2049E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC5C", Offset = "0xA5CC5C")]
	private sealed class <PauseBackgroundMusicIE>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeoutSpeed>5__2;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x2049BDC", Offset = "0x2049BDC", VA = "0x2049BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x2049C44", Offset = "0x2049C44", VA = "0x2049C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x20496B0", Offset = "0x20496B0", VA = "0x20496B0")]
		[DebuggerHidden]
		public <PauseBackgroundMusicIE>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x204996C", Offset = "0x204996C", VA = "0x204996C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x2049970", Offset = "0x2049970", VA = "0x2049970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x2049BE4", Offset = "0x2049BE4", VA = "0x2049BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialController instance;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialStepEnum current_step;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> text_list;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] frame_image_list;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject frame_image_parent;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject frame_press_A;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI text_body;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI snare_text;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI kick_text;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI crush_text;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI ride_text;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image snare_check_image;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image kick_check_image;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image crush_check_image;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image ride_check_image;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas canvas;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip menuNextSFX;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip winSFX;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image grab_right_progress_bar;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image grab_left_progress_bar;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject grab_right_back_image;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject grab_left_back_image;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject grab_right_front_image;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject grab_left_front_image;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject grab_left_gamepad_back_image;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject grab_left_gamepad_front_image;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject grab_right_gamepad_front_image_static;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject grab_right_gamepad_back_image;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject grab_right_gamepad_front_image;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject grab_left_gamepad_front_image_static;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip background_music_ac;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource background_music_as;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float background_music_initial_volume;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool background_music_is_paused;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool stop_background_corutine_started;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject DemoPopUp;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform Panel;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private ControllerAnim[] controllerAnims;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private byte snare_hits_count;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private byte kick_hits_count;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	private byte crush_count;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	private byte ride_count;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private byte max_hits_count;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float grabTimestamp;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float autoNextTimestamp;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float hitDrumsTimestamp;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float perfectLoopTimestamp;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float tutorialCompletedTimestamp;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool bEnemySpawned;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool bEnemyPaused;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
	private byte fat_hits_count;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14F")]
	private bool isPlayingSongWithMusic;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isAlredyCanvasSetToShow;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	private bool isPlayingLoopPerfect;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	private byte perfect_hits_count;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	private bool hasFailedWithMusic;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool is_paused;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float initialVolume;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x2044F64", Offset = "0x2044F64", VA = "0x2044F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x2045034", Offset = "0x2045034", VA = "0x2045034")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x2045EA8", Offset = "0x2045EA8", VA = "0x2045EA8")]
	public TutorialStepEnum GetCurrentStep()
	{
		return default(TutorialStepEnum);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x204515C", Offset = "0x204515C", VA = "0x204515C")]
	private void InitControllerSprites()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x2045424", Offset = "0x2045424", VA = "0x2045424")]
	private void InitText()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x2045EB0", Offset = "0x2045EB0", VA = "0x2045EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x2046348", Offset = "0x2046348", VA = "0x2046348")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x20463DC", Offset = "0x20463DC", VA = "0x20463DC")]
	private void ResetTimeStamps()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x20463F4", Offset = "0x20463F4", VA = "0x20463F4")]
	private void NextStep()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x2046424", Offset = "0x2046424", VA = "0x2046424")]
	private void SetActiveCanvas(bool bActive)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x2046538", Offset = "0x2046538", VA = "0x2046538")]
	private void SetActiveFramePressA(bool bActive)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x204661C", Offset = "0x204661C", VA = "0x204661C")]
	private void SetText()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x2046978", Offset = "0x2046978", VA = "0x2046978")]
	private void SetTextImageFrame()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x2045914", Offset = "0x2045914", VA = "0x2045914")]
	private void SetStep()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x204636C", Offset = "0x204636C", VA = "0x204636C")]
	public void CheckConditionsToNextStep()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x20463A4", Offset = "0x20463A4", VA = "0x20463A4")]
	public void UpdateStep()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x20483D0", Offset = "0x20483D0", VA = "0x20483D0")]
	public void GrabStick(HandEnum hand, bool bGrab)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x2047928", Offset = "0x2047928", VA = "0x2047928")]
	public void CheckIsAlreadyGrabbedStick()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x2047AB4", Offset = "0x2047AB4", VA = "0x2047AB4")]
	private void CheckGrabCondition(HandEnum handToCheck)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x2047B48", Offset = "0x2047B48", VA = "0x2047B48")]
	private void CheckHitDrumsCondition()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x204846C", Offset = "0x204846C", VA = "0x204846C")]
	public void HitDrums(IconsType iconsType)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x2047FB4", Offset = "0x2047FB4", VA = "0x2047FB4")]
	public void UpdateHitDemon()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x2047C28", Offset = "0x2047C28", VA = "0x2047C28")]
	private void CheckHitDemonCondition()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x2047E98", Offset = "0x2047E98", VA = "0x2047E98")]
	private void CheckLoopPerfectCondition()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x204824C", Offset = "0x204824C", VA = "0x204824C")]
	private void UpdatePlayLoopPefect()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x2048704", Offset = "0x2048704", VA = "0x2048704")]
	private void UpdatePerfectLoopText()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x2048978", Offset = "0x2048978", VA = "0x2048978")]
	public void AddPerfectCount()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x20466F0", Offset = "0x20466F0", VA = "0x20466F0")]
	private bool CheckUpdateTryWithMusicFailed()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x20489E0", Offset = "0x20489E0", VA = "0x20489E0")]
	private void UpdatePlayWithSongText()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x2048314", Offset = "0x2048314", VA = "0x2048314")]
	private void UpdatePlayWithSong()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x2048C54", Offset = "0x2048C54", VA = "0x2048C54")]
	public void CheckTryWithMusicCompletedCond()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x2048D10", Offset = "0x2048D10", VA = "0x2048D10")]
	private void SetTryWithMusicCompleted()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x2049138", Offset = "0x2049138", VA = "0x2049138")]
	public void ContinueButtonPopupNewUnlock()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x2045EB4", Offset = "0x2045EB4", VA = "0x2045EB4")]
	public void UpdateProgressBar()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x20492A4", Offset = "0x20492A4", VA = "0x20492A4")]
	public void ActivatedTutorialPause()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x20492FC", Offset = "0x20492FC", VA = "0x20492FC")]
	public void DesactivatedTutorialPause()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x20493E4", Offset = "0x20493E4", VA = "0x20493E4")]
	public void PauseSongOnPausedUI()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x2049440", Offset = "0x2049440", VA = "0x2049440")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x204852C", Offset = "0x204852C", VA = "0x204852C")]
	public void NextStepButton()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x2049448", Offset = "0x2049448", VA = "0x2049448")]
	public void NextSongDemo()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x2045E18", Offset = "0x2045E18", VA = "0x2045E18")]
	private void PlayBackgroundMusic()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x204958C", Offset = "0x204958C", VA = "0x204958C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64C20", Offset = "0xA64C20")]
	private IEnumerator PlayBackgroundMusicIE()
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x2047A50", Offset = "0x2047A50", VA = "0x2047A50")]
	private void PauseBackgroundMusic()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x2049634", Offset = "0x2049634", VA = "0x2049634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64C84", Offset = "0xA64C84")]
	private IEnumerator PauseBackgroundMusicIE()
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x20496DC", Offset = "0x20496DC", VA = "0x20496DC")]
	public TutorialController()
	{
	}
}
[Token(Token = "0x2000144")]
public enum TutorialStepEnum
{
	[Token(Token = "0x4000A5B")]
	GRAB_RIGHT,
	[Token(Token = "0x4000A5C")]
	GRAB_LEFT,
	[Token(Token = "0x4000A5D")]
	CAN_GRAB_AGAIN,
	[Token(Token = "0x4000A5E")]
	HIT_DRUMS,
	[Token(Token = "0x4000A5F")]
	LETS_KILL_DEMONS,
	[Token(Token = "0x4000A60")]
	HIT_RED_DEMON,
	[Token(Token = "0x4000A61")]
	HIT_YELLOW_DEMON,
	[Token(Token = "0x4000A62")]
	HIT_BLUE_DEMON,
	[Token(Token = "0x4000A63")]
	HIT_GREEN_DEMON,
	[Token(Token = "0x4000A64")]
	LOOP_PERFECT_START,
	[Token(Token = "0x4000A65")]
	LOOP_PERFECT,
	[Token(Token = "0x4000A66")]
	TRY_ANOTHER_DEMONS,
	[Token(Token = "0x4000A67")]
	HIT_SIAMES_1,
	[Token(Token = "0x4000A68")]
	HIT_SIAMES_2,
	[Token(Token = "0x4000A69")]
	HIT_FAT_1,
	[Token(Token = "0x4000A6A")]
	TRY_WITH_MUSIC,
	[Token(Token = "0x4000A6B")]
	TUTORIAL_COMPLETED,
	[Token(Token = "0x4000A6C")]
	LENGTH
}
[Serializable]
[Token(Token = "0x2000145")]
public struct ControllerAnim
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite[] leftControllerSprites;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite[] rightControllerSprites;
}
[Token(Token = "0x2000146")]
public class UIImageAnimation : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte current_id;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] spriteList;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBetweenSprite;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float last_timestamp;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xD73D04", Offset = "0xD73D04", VA = "0xD73D04")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xD73E04", Offset = "0xD73E04", VA = "0xD73E04")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xD73ED8", Offset = "0xD73ED8", VA = "0xD73ED8")]
	public UIImageAnimation()
	{
	}
}
[Token(Token = "0x2000147")]
public class BlindWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float warningTime;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initWarningTime;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool is_activated;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x20249FC", Offset = "0x20249FC", VA = "0x20249FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x2024B40", Offset = "0x2024B40", VA = "0x2024B40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x2024C84", Offset = "0x2024C84", VA = "0x2024C84")]
	private void Show()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x2024D28", Offset = "0x2024D28", VA = "0x2024D28")]
	private void Hide()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x2024DCC", Offset = "0x2024DCC", VA = "0x2024DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x2024FC8", Offset = "0x2024FC8", VA = "0x2024FC8")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x20250F4", Offset = "0x20250F4", VA = "0x20250F4")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x20251F0", Offset = "0x20251F0", VA = "0x20251F0")]
	public void ActivateBlindWarning(float warningTime)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x202533C", Offset = "0x202533C", VA = "0x202533C")]
	public BlindWarningUI()
	{
	}
}
[Token(Token = "0x2000148")]
public class ChainManager : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC6C", Offset = "0xA5CC6C")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChainManager <>4__this;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _i;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x2030E2C", Offset = "0x2030E2C", VA = "0x2030E2C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x2030E98", Offset = "0x2030E98", VA = "0x2030E98")]
		internal void <ChangeStateToMiddle>b__0()
		{
		}
	}

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public MovingText[] Texts;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speed;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x203014C", Offset = "0x203014C", VA = "0x203014C")]
	public void ActualizeNumber(int _number)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x2030AF8", Offset = "0x2030AF8", VA = "0x2030AF8")]
	private void MoveUp(int _i)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x2030C64", Offset = "0x2030C64", VA = "0x2030C64")]
	private void MoveUpFirst()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x2030C6C", Offset = "0x2030C6C", VA = "0x2030C6C")]
	private void MoveUpSecond()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x2030C74", Offset = "0x2030C74", VA = "0x2030C74")]
	private void ChangeStateToMiddle(int _i)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x2030E34", Offset = "0x2030E34", VA = "0x2030E34")]
	public void ChangeStateToMiddlePrimer()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x2030E3C", Offset = "0x2030E3C", VA = "0x2030E3C")]
	public void ChangeStateToMiddleSecond()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x2030E44", Offset = "0x2030E44", VA = "0x2030E44")]
	public ChainManager()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x2030E58", Offset = "0x2030E58", VA = "0x2030E58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64CE8", Offset = "0xA64CE8")]
	private void <ActualizeNumber>b__2_0()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x2030E60", Offset = "0x2030E60", VA = "0x2030E60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64CF8", Offset = "0xA64CF8")]
	private void <ActualizeNumber>b__2_1()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x2030E68", Offset = "0x2030E68", VA = "0x2030E68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D08", Offset = "0xA64D08")]
	private void <ActualizeNumber>b__2_2()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x2030E70", Offset = "0x2030E70", VA = "0x2030E70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D18", Offset = "0xA64D18")]
	private void <ActualizeNumber>b__2_3()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x2030E78", Offset = "0x2030E78", VA = "0x2030E78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D28", Offset = "0xA64D28")]
	private void <ActualizeNumber>b__2_4()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x2030E80", Offset = "0x2030E80", VA = "0x2030E80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D38", Offset = "0xA64D38")]
	private void <ActualizeNumber>b__2_5()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x2030E88", Offset = "0x2030E88", VA = "0x2030E88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D48", Offset = "0xA64D48")]
	private void <ActualizeNumber>b__2_6()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x2030E90", Offset = "0x2030E90", VA = "0x2030E90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D58", Offset = "0xA64D58")]
	private void <ActualizeNumber>b__2_7()
	{
	}
}
[Serializable]
[Token(Token = "0x2000149")]
public struct MovingText
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject Text;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MoveState moveState;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool moving;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DG.Tweening.Tween textTween;
}
[Serializable]
[Token(Token = "0x200014A")]
public enum MoveState
{
	[Token(Token = "0x4000A80")]
	low,
	[Token(Token = "0x4000A81")]
	middle,
	[Token(Token = "0x4000A82")]
	high,
	[Token(Token = "0x4000A83")]
	toCenter,
	[Token(Token = "0x4000A84")]
	toDisappear
}
[Token(Token = "0x200014B")]
public class DefeatedMenuUI : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI Progress;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI Title;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI difficulty;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject DefeatedMenu;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image FillBar;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeDeath;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xD5B958", Offset = "0xD5B958", VA = "0xD5B958")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xD5BC24", Offset = "0xD5BC24", VA = "0xD5BC24")]
	public void ActivateDefeatedMenu()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xD5BD78", Offset = "0xD5BD78", VA = "0xD5BD78")]
	public void DeactivateDefeatedMenu()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xD5BEB0", Offset = "0xD5BEB0", VA = "0xD5BEB0")]
	public void SetTimeDeath(float _time)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xD5BEB8", Offset = "0xD5BEB8", VA = "0xD5BEB8")]
	public DefeatedMenuUI()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xD5BEC0", Offset = "0xD5BEC0", VA = "0xD5BEC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D68", Offset = "0xA64D68")]
	private void <ActivateDefeatedMenu>b__8_0()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xD5BFC8", Offset = "0xD5BFC8", VA = "0xD5BFC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64D78", Offset = "0xA64D78")]
	private void <DeactivateDefeatedMenu>b__9_0()
	{
	}
}
[Token(Token = "0x200014C")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC7C", Offset = "0xA5CC7C")]
	private sealed class <CheckCPU_GPU>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x204FF94", Offset = "0x204FF94", VA = "0x204FF94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x204FFFC", Offset = "0x204FFFC", VA = "0x204FFFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x204FE40", Offset = "0x204FE40", VA = "0x204FE40")]
		[DebuggerHidden]
		public <CheckCPU_GPU>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x204FEF0", Offset = "0x204FEF0", VA = "0x204FEF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x204FEF4", Offset = "0x204FEF4", VA = "0x204FEF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x204FF9C", Offset = "0x204FF9C", VA = "0x204FF9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<float> fpsCache;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastFPSAvg;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject cpu_gpu_level;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject fps_counter;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cpu_gpu_usage;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x204FBA4", Offset = "0x204FBA4", VA = "0x204FBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x204FBA8", Offset = "0x204FBA8", VA = "0x204FBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x204FBF4", Offset = "0x204FBF4", VA = "0x204FBF4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x204FDE0", Offset = "0x204FDE0", VA = "0x204FDE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64D88", Offset = "0xA64D88")]
	private IEnumerator CheckCPU_GPU()
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x204FE6C", Offset = "0x204FE6C", VA = "0x204FE6C")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x200014D")]
public class GameplayPauseUI : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC8C", Offset = "0xA5CC8C")]
	private sealed class <RestartSong>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayPauseUI <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xDB57D8", Offset = "0xDB57D8", VA = "0xDB57D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xDB5840", Offset = "0xDB5840", VA = "0xDB5840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xDB47A8", Offset = "0xDB47A8", VA = "0xDB47A8")]
		[DebuggerHidden]
		public <RestartSong>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xDB4F34", Offset = "0xDB4F34", VA = "0xDB4F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xDB4F38", Offset = "0xDB4F38", VA = "0xDB4F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xDB57E0", Offset = "0xDB57E0", VA = "0xDB57E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button rewindButton;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button advanceButton;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button retryButton;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button resumeButton;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI SongName;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject cD;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject PauseMenu;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject demoLabel;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60A20", Offset = "0xA60A20")]
	[SerializeField]
	private GameObject ChooseDifficulty;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canPause;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine startSong;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xDB4128", Offset = "0xDB4128", VA = "0xDB4128")]
	private void Start()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xDB4300", Offset = "0xDB4300", VA = "0xDB4300")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xDB4234", Offset = "0xDB4234", VA = "0xDB4234")]
	private void ActualizeInfo()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xDB43D4", Offset = "0xDB43D4", VA = "0xDB43D4")]
	public void StartSong()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xDB44D8", Offset = "0xDB44D8", VA = "0xDB44D8")]
	public void Retry()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xDB4580", Offset = "0xDB4580", VA = "0xDB4580")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xDB4794", Offset = "0xDB4794", VA = "0xDB4794")]
	public bool GetCanPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xDB479C", Offset = "0xDB479C", VA = "0xDB479C")]
	public void SetCanPause(bool _state)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xDB445C", Offset = "0xDB445C", VA = "0xDB445C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64DEC", Offset = "0xA64DEC")]
	private IEnumerator RestartSong()
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xDB47D4", Offset = "0xDB47D4", VA = "0xDB47D4")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xDB4650", Offset = "0xDB4650", VA = "0xDB4650")]
	public void DeactivatePauseMenu()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xDB49E0", Offset = "0xDB49E0", VA = "0xDB49E0")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xDB48A0", Offset = "0xDB48A0", VA = "0xDB48A0")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xDB4C38", Offset = "0xDB4C38", VA = "0xDB4C38")]
	public GameplayPauseUI()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xDB4C48", Offset = "0xDB4C48", VA = "0xDB4C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64E50", Offset = "0xA64E50")]
	private void <DeactivatePauseMenu>b__22_0()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xDB4D64", Offset = "0xDB4D64", VA = "0xDB4D64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64E60", Offset = "0xA64E60")]
	private void <ShowUI>b__24_0()
	{
	}
}
[Token(Token = "0x200014E")]
public class HPHUD : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> heartsList;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh3D comboMultiTM3D;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3D comboScoreTM3D;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float current_percentage;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material lightOn;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material lightOff;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float lerpTime;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float minLimitX;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float maxLimitX;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float minLimitY;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float maxLimitY;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float maxLimitZ;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float minRad;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI comboCount;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ChainManager[] chainCount;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] lights;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ComboPS1;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject arrow;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject PSFeedbackLife;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject LifeMeter;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject OneHeart;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material redLifeBackground;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Material yellowLifeBackground;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Material greenLifeBackground;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject paperStarsParent;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SongInfoCampaign songInfoCampaign;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private DG.Tweening.Tween tween;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int oldValue;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int oldHearts;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float oldLifePer;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xDBC694", Offset = "0xDBC694", VA = "0xDBC694")]
	private void Start()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xDBC9F8", Offset = "0xDBC9F8", VA = "0xDBC9F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xDBCB3C", Offset = "0xDBCB3C", VA = "0xDBCB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xDBD004", Offset = "0xDBD004", VA = "0xDBD004")]
	public void UpdateHP(float percentage, bool damage)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xDBD2CC", Offset = "0xDBD2CC", VA = "0xDBD2CC")]
	private void UpdateLifeGauge(float percentage)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xDBD4A8", Offset = "0xDBD4A8", VA = "0xDBD4A8")]
	private void ActivateParticleControler(ColorsLife _color)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xDBD67C", Offset = "0xDBD67C", VA = "0xDBD67C")]
	private void UpdateHearts()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xDBD888", Offset = "0xDBD888", VA = "0xDBD888")]
	public GameObject GetCurrentHeartCharge()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xDBD940", Offset = "0xDBD940", VA = "0xDBD940")]
	public int GetCurrentHeartNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xDBD948", Offset = "0xDBD948", VA = "0xDBD948")]
	public GameObject GetHeartCharge(int _i)
	{
		return null;
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xDBD9F0", Offset = "0xDBD9F0", VA = "0xDBD9F0")]
	public void ActualizeComboCount(int _comboCount)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xDBDD9C", Offset = "0xDBDD9C", VA = "0xDBDD9C")]
	private void ChangeTextAndColor(int _value)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xDBC878", Offset = "0xDBC878", VA = "0xDBC878")]
	public void InitPaperStars()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xDBCEE4", Offset = "0xDBCEE4", VA = "0xDBCEE4")]
	private void UpdatePaperStars()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xDBE0A4", Offset = "0xDBE0A4", VA = "0xDBE0A4")]
	private float GetPaperStarsValue(StarCondition starCondition)
	{
		return default(float);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xDBE268", Offset = "0xDBE268", VA = "0xDBE268")]
	public void SetPaperStarsPlaying(int pos, StarCondition starCondition, float current_value)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xDC009C", Offset = "0xDC009C", VA = "0xDC009C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xDB56D8", Offset = "0xDB56D8", VA = "0xDB56D8")]
	public void Show()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xDC01D4", Offset = "0xDC01D4", VA = "0xDC01D4")]
	public HPHUD()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xDC01E4", Offset = "0xDC01E4", VA = "0xDC01E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64E70", Offset = "0xA64E70")]
	private void <UpdateHP>b__34_0()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xDC024C", Offset = "0xDC024C", VA = "0xDC024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64E80", Offset = "0xA64E80")]
	private void <UpdateHP>b__34_1()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xDC0288", Offset = "0xDC0288", VA = "0xDC0288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64E90", Offset = "0xA64E90")]
	private void <Hide>b__47_0()
	{
	}
}
[Token(Token = "0x200014F")]
public enum ColorsLife
{
	[Token(Token = "0x4000ABE")]
	Green,
	[Token(Token = "0x4000ABF")]
	Yellow,
	[Token(Token = "0x4000AC0")]
	Red
}
[Token(Token = "0x2000150")]
public class LanguageTextStyle : MonoBehaviour
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageTextSyle type;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset[] customFontLanguage;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xDA21A0", Offset = "0xDA21A0", VA = "0xDA21A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xDA21A4", Offset = "0xDA21A4", VA = "0xDA21A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xDA21A8", Offset = "0xDA21A8", VA = "0xDA21A8")]
	public void LoadTextStyle()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xDA2994", Offset = "0xDA2994", VA = "0xDA2994")]
	public void LoadRenderModeStyle()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xDA2338", Offset = "0xDA2338", VA = "0xDA2338")]
	public void LoadStarsPaperSyle()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xDA2808", Offset = "0xDA2808", VA = "0xDA2808")]
	public void LoadStarsPaperSyleGameplay()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xDA23E8", Offset = "0xDA23E8", VA = "0xDA23E8")]
	public void LoadLoadingTipStyle()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xDA2528", Offset = "0xDA2528", VA = "0xDA2528")]
	public void LoadDemoBodyText()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xDA2608", Offset = "0xDA2608", VA = "0xDA2608")]
	public void LoadTutorialPopupTip()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xDA2728", Offset = "0xDA2728", VA = "0xDA2728")]
	public void LoadUnlockMoreSongPlayingText()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xDA2250", Offset = "0xDA2250", VA = "0xDA2250")]
	public void LoadCustomFontByLanguage()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xDA2A48", Offset = "0xDA2A48", VA = "0xDA2A48")]
	private LanguageEnum GetLanguageEnum()
	{
		return default(LanguageEnum);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xDA2CF4", Offset = "0xDA2CF4", VA = "0xDA2CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xDA2CF8", Offset = "0xDA2CF8", VA = "0xDA2CF8")]
	public LanguageTextStyle()
	{
	}
}
[Token(Token = "0x2000151")]
public enum LanguageTextSyle
{
	[Token(Token = "0x4000AC4")]
	DEFAULT,
	[Token(Token = "0x4000AC5")]
	STARS_PAPER_TEXT,
	[Token(Token = "0x4000AC6")]
	LOADING_TIP,
	[Token(Token = "0x4000AC7")]
	DEMO_BODY_TEXT,
	[Token(Token = "0x4000AC8")]
	TUTORIAL_POPUP_TIP,
	[Token(Token = "0x4000AC9")]
	UNLOCK_MORE_SONG_PLAYING_TEXT,
	[Token(Token = "0x4000ACA")]
	STARS_PAPER_TEXT_GAMEPLAY,
	[Token(Token = "0x4000ACB")]
	TEXT_OPTIONS,
	[Token(Token = "0x4000ACC")]
	RENDER_MODE
}
[Token(Token = "0x2000152")]
public enum LanguageEnum
{
	[Token(Token = "0x4000ACE")]
	ENGLISH,
	[Token(Token = "0x4000ACF")]
	SPANISH,
	[Token(Token = "0x4000AD0")]
	RUSSIAN,
	[Token(Token = "0x4000AD1")]
	FRENCH,
	[Token(Token = "0x4000AD2")]
	CHINESE,
	[Token(Token = "0x4000AD3")]
	KOREAN,
	[Token(Token = "0x4000AD4")]
	JAPANESE,
	[Token(Token = "0x4000AD5")]
	ITALIAN,
	[Token(Token = "0x4000AD6")]
	GERMAN
}
[Token(Token = "0x2000153")]
public class LetterMesh3D : MonoBehaviour
{
	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public char letter;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float marginLeft;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float marginTop;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float marginRight;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float marginBottom;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xDA3C40", Offset = "0xDA3C40", VA = "0xDA3C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xDA3C44", Offset = "0xDA3C44", VA = "0xDA3C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xDA3C48", Offset = "0xDA3C48", VA = "0xDA3C48")]
	public LetterMesh3D()
	{
	}
}
[Token(Token = "0x2000154")]
public class MainMenuUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CC9C", Offset = "0xA5CC9C")]
	private sealed class <>c
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__14_0;

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1287E28", Offset = "0x1287E28", VA = "0x1287E28")]
		public <>c()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1287E30", Offset = "0x1287E30", VA = "0x1287E30")]
		internal bool <InitMainCamera>b__14_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCAC", Offset = "0xA5CCAC")]
	private sealed class <InitMainCamera>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x1289768", Offset = "0x1289768", VA = "0x1289768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x12897D0", Offset = "0x12897D0", VA = "0x12897D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1289594", Offset = "0x1289594", VA = "0x1289594")]
		[DebuggerHidden]
		public <InitMainCamera>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x12895C0", Offset = "0x12895C0", VA = "0x12895C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x12895C4", Offset = "0x12895C4", VA = "0x12895C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1289770", Offset = "0x1289770", VA = "0x1289770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCBC", Offset = "0xA5CCBC")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool is_tutorial_done_first_time;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1287EAC", Offset = "0x1287EAC", VA = "0x1287EAC")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1287EB4", Offset = "0x1287EB4", VA = "0x1287EB4")]
		internal void <ActivateLobby>b__0()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1287F8C", Offset = "0x1287F8C", VA = "0x1287F8C")]
		internal void <ActivateLobby>b__1()
		{
		}
	}

	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCCC", Offset = "0xA5CCCC")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1288018", Offset = "0x1288018", VA = "0x1288018")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1288020", Offset = "0x1288020", VA = "0x1288020")]
		internal void <ActivateAnimationLobby>b__0()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x12880FC", Offset = "0x12880FC", VA = "0x12880FC")]
		internal void <ActivateAnimationLobby>b__1()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCDC", Offset = "0xA5CCDC")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x12881E4", Offset = "0x12881E4", VA = "0x12881E4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x12881EC", Offset = "0x12881EC", VA = "0x12881EC")]
		internal void <ActivateAnimationTutorialFirstTimeScreen>b__0()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x12882C8", Offset = "0x12882C8", VA = "0x12882C8")]
		internal void <ActivateAnimationTutorialFirstTimeScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCEC", Offset = "0xA5CCEC")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1288310", Offset = "0x1288310", VA = "0x1288310")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1288318", Offset = "0x1288318", VA = "0x1288318")]
		internal void <ActivateAnimationPopupNewUnlock>b__0()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x12883F4", Offset = "0x12883F4", VA = "0x12883F4")]
		internal void <ActivateAnimationPopupNewUnlock>b__1()
		{
		}
	}

	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CCFC", Offset = "0xA5CCFC")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxCollider[] _tempBox;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x128843C", Offset = "0x128843C", VA = "0x128843C")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1288444", Offset = "0x1288444", VA = "0x1288444")]
		internal void <SetupLobby>b__0()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD0C", Offset = "0xA5CD0C")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x12884C4", Offset = "0x12884C4", VA = "0x12884C4")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x12884CC", Offset = "0x12884CC", VA = "0x12884CC")]
		internal void <SetupSettings>b__0()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x12885A4", Offset = "0x12885A4", VA = "0x12885A4")]
		internal void <SetupSettings>b__1()
		{
		}
	}

	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD1C", Offset = "0xA5CD1C")]
	private sealed class <SetupSettings>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass27_0 <>8__1;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x1289BA8", Offset = "0x1289BA8", VA = "0x1289BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x1289C10", Offset = "0x1289C10", VA = "0x1289C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x12897D8", Offset = "0x12897D8", VA = "0x12897D8")]
		[DebuggerHidden]
		public <SetupSettings>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1289804", Offset = "0x1289804", VA = "0x1289804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1289808", Offset = "0x1289808", VA = "0x1289808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1289BB0", Offset = "0x1289BB0", VA = "0x1289BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD2C", Offset = "0xA5CD2C")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x12886A0", Offset = "0x12886A0", VA = "0x12886A0")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x12886A8", Offset = "0x12886A8", VA = "0x12886A8")]
		internal void <AcceptButtonPopupNewUnlock>b__0()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x12887D8", Offset = "0x12887D8", VA = "0x12887D8")]
		internal void <AcceptButtonPopupNewUnlock>b__1()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD3C", Offset = "0xA5CD3C")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TVCinematicType tvCinematicType;

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x12888C0", Offset = "0x12888C0", VA = "0x12888C0")]
		public <>c__DisplayClass31_0()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD4C", Offset = "0xA5CD4C")]
	private sealed class <>c__DisplayClass31_1
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass31_0 CS$<>8__locals1;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x12888C8", Offset = "0x12888C8", VA = "0x12888C8")]
		public <>c__DisplayClass31_1()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x12888D0", Offset = "0x12888D0", VA = "0x12888D0")]
		internal void <ActivateTVCinematicScreen>b__0()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1288A08", Offset = "0x1288A08", VA = "0x1288A08")]
		internal void <ActivateTVCinematicScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD5C", Offset = "0xA5CD5C")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1288A98", Offset = "0x1288A98", VA = "0x1288A98")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1288AA0", Offset = "0x1288AA0", VA = "0x1288AA0")]
		internal void <PlayShowTVCinematicScreen>b__0()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1288B7C", Offset = "0x1288B7C", VA = "0x1288B7C")]
		internal void <PlayShowTVCinematicScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD6C", Offset = "0xA5CD6C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1288C1C", Offset = "0x1288C1C", VA = "0x1288C1C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1288C24", Offset = "0x1288C24", VA = "0x1288C24")]
		internal void <DisableTVCinematicScreen>b__0()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1288D54", Offset = "0x1288D54", VA = "0x1288D54")]
		internal void <DisableTVCinematicScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD7C", Offset = "0xA5CD7C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1288DC8", Offset = "0x1288DC8", VA = "0x1288DC8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1288DD0", Offset = "0x1288DD0", VA = "0x1288DD0")]
		internal void <PlayDisableTVCinematicScreen>b__0()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1288EAC", Offset = "0x1288EAC", VA = "0x1288EAC")]
		internal void <PlayDisableTVCinematicScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD8C", Offset = "0xA5CD8C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1288F44", Offset = "0x1288F44", VA = "0x1288F44")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1288F4C", Offset = "0x1288F4C", VA = "0x1288F4C")]
		internal void <ActivateCreditsScreen>b__0()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x128907C", Offset = "0x128907C", VA = "0x128907C")]
		internal void <ActivateCreditsScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CD9C", Offset = "0xA5CD9C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x12890F0", Offset = "0x12890F0", VA = "0x12890F0")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x12890F8", Offset = "0x12890F8", VA = "0x12890F8")]
		internal void <PlayShowCreditsScreen>b__0()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x12891D4", Offset = "0x12891D4", VA = "0x12891D4")]
		internal void <PlayShowCreditsScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDAC", Offset = "0xA5CDAC")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x128926C", Offset = "0x128926C", VA = "0x128926C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1289274", Offset = "0x1289274", VA = "0x1289274")]
		internal void <DisableCreditsScreen>b__0()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x12893A4", Offset = "0x12893A4", VA = "0x12893A4")]
		internal void <DisableCreditsScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDBC", Offset = "0xA5CDBC")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1289418", Offset = "0x1289418", VA = "0x1289418")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1289420", Offset = "0x1289420", VA = "0x1289420")]
		internal void <PlayDisableCreditsScreen>b__0()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x12894FC", Offset = "0x12894FC", VA = "0x12894FC")]
		internal void <PlayDisableCreditsScreen>b__1()
		{
		}
	}

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuUI instance;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60B9C", Offset = "0xA60B9C")]
	[SerializeField]
	public GameObject Lobby;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60BE8", Offset = "0xA60BE8")]
	[SerializeField]
	public GameObject Shop;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60C34", Offset = "0xA60C34")]
	[SerializeField]
	public GameObject Selector;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60C80", Offset = "0xA60C80")]
	[SerializeField]
	public GameObject Settings;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool TransitionDone;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60CCC", Offset = "0xA60CCC")]
	public GameObject StartScreen;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60D04", Offset = "0xA60D04")]
	public GameObject TutorialFirstTimeScreen;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60D3C", Offset = "0xA60D3C")]
	public GameObject PopupNewUnlockScreen;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60D74", Offset = "0xA60D74")]
	public GameObject TVCinematicScreen;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60DAC", Offset = "0xA60DAC")]
	public GameObject CreditsScreen;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60DE4", Offset = "0xA60DE4")]
	public GameObject CustomChallenge;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float loadSceneSongTimestamp;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xDAFEE8", Offset = "0xDAFEE8", VA = "0xDAFEE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xDAFFC8", Offset = "0xDAFFC8", VA = "0xDAFFC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64EA0", Offset = "0xA64EA0")]
	private IEnumerator InitMainCamera()
	{
		return null;
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xDB0044", Offset = "0xDB0044", VA = "0xDB0044")]
	public void SetDifficulty(int _i)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xDB00A8", Offset = "0xDB00A8", VA = "0xDB00A8")]
	public void SetTrack(int _i)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xDB0114", Offset = "0xDB0114", VA = "0xDB0114")]
	public void SetTrackCampaign(int _i, int id_songs_info_campaign)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xDB0190", Offset = "0xDB0190", VA = "0xDB0190")]
	public void LoadSceneSong()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xDB0520", Offset = "0xDB0520", VA = "0xDB0520")]
	public void SetPractice(bool _state)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xDB0584", Offset = "0xDB0584", VA = "0xDB0584")]
	public void ActivateLobby()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xDA6B98", Offset = "0xDA6B98", VA = "0xDA6B98")]
	public void ActivateAnimationLobby()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xDB0708", Offset = "0xDB0708", VA = "0xDB0708")]
	public void ActivateAnimationTutorialFirstTimeScreen()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xDB09A8", Offset = "0xDB09A8", VA = "0xDB09A8")]
	public void ActivateAnimationPopupNewUnlock()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xDA4F8C", Offset = "0xDA4F8C", VA = "0xDA4F8C")]
	public void SetGameMode(int _gameMode)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xDB0E34", Offset = "0xDB0E34", VA = "0xDB0E34")]
	private void SetupLobby()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xDB0FD4", Offset = "0xDB0FD4", VA = "0xDB0FD4")]
	private void SetupShop()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xDB1250", Offset = "0xDB1250", VA = "0xDB1250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64F04", Offset = "0xA64F04")]
	private IEnumerator SetupSettings()
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xDB1084", Offset = "0xDB1084", VA = "0xDB1084")]
	private void SetupCampaign()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xDB1150", Offset = "0xDB1150", VA = "0xDB1150")]
	private void SetupChallenge()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xDB155C", Offset = "0xDB155C", VA = "0xDB155C")]
	public void AcceptButtonPopupNewUnlock()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xDB0344", Offset = "0xDB0344", VA = "0xDB0344")]
	public void ActivateTVCinematicScreen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xDB16DC", Offset = "0xDB16DC", VA = "0xDB16DC")]
	private void PlayShowTVCinematicScreen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xDB18DC", Offset = "0xDB18DC", VA = "0xDB18DC")]
	public void DisableTVCinematicScreen()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xDB1A40", Offset = "0xDB1A40", VA = "0xDB1A40")]
	private void PlayDisableTVCinematicScreen()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xDB1C14", Offset = "0xDB1C14", VA = "0xDB1C14")]
	public void ActivateCreditsScreen()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xDB1D78", Offset = "0xDB1D78", VA = "0xDB1D78")]
	public void PlayShowCreditsScreen()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xDB1F70", Offset = "0xDB1F70", VA = "0xDB1F70")]
	public void DisableCreditsScreen()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xDB20D4", Offset = "0xDB20D4", VA = "0xDB20D4")]
	private void PlayDisableCreditsScreen()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xDB2328", Offset = "0xDB2328", VA = "0xDB2328")]
	public void InitTutorial()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xDB1414", Offset = "0xDB1414", VA = "0xDB1414")]
	private DG.Tweening.Tween AdvanceTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xDB0BBC", Offset = "0xDB0BBC", VA = "0xDB0BBC")]
	private DG.Tweening.Tween WalkBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xDB0CF8", Offset = "0xDB0CF8", VA = "0xDB0CF8")]
	private DG.Tweening.Tween GoBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xDB12CC", Offset = "0xDB12CC", VA = "0xDB12CC")]
	private DG.Tweening.Tween ReturnTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xDB23DC", Offset = "0xDB23DC", VA = "0xDB23DC")]
	public MainMenuUI()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xDB23EC", Offset = "0xDB23EC", VA = "0xDB23EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64F68", Offset = "0xA64F68")]
	private void <SetGameMode>b__24_0()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xDB240C", Offset = "0xDB240C", VA = "0xDB240C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64F78", Offset = "0xA64F78")]
	private void <SetGameMode>b__24_1()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xDB242C", Offset = "0xDB242C", VA = "0xDB242C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64F88", Offset = "0xA64F88")]
	private void <SetGameMode>b__24_2()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xDB244C", Offset = "0xDB244C", VA = "0xDB244C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64F98", Offset = "0xA64F98")]
	private void <SetGameMode>b__24_3()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xDB246C", Offset = "0xDB246C", VA = "0xDB246C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64FA8", Offset = "0xA64FA8")]
	private void <SetupShop>b__26_0()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xDB2550", Offset = "0xDB2550", VA = "0xDB2550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64FB8", Offset = "0xA64FB8")]
	private void <SetupCampaign>b__28_0()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xDB2654", Offset = "0xDB2654", VA = "0xDB2654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA64FC8", Offset = "0xA64FC8")]
	private void <SetupChallenge>b__29_0()
	{
	}
}
[Token(Token = "0x2000155")]
public class PopupNewUnlockScreen : MonoBehaviour
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI popupText;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF4D950", Offset = "0xF4D950", VA = "0xF4D950")]
	private void Start()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xF4D954", Offset = "0xF4D954", VA = "0xF4D954")]
	public void Init(PopupNewUnlockScreenEnum type)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF4DAD0", Offset = "0xF4DAD0", VA = "0xF4DAD0")]
	public PopupNewUnlockScreen()
	{
	}
}
[Token(Token = "0x2000156")]
public enum PopupNewUnlockScreenEnum
{
	[Token(Token = "0x4000AEB")]
	NONE,
	[Token(Token = "0x4000AEC")]
	NEW_CHAPTER,
	[Token(Token = "0x4000AED")]
	NEW_ACT,
	[Token(Token = "0x4000AEE")]
	NEW_ITEM
}
[Token(Token = "0x2000157")]
public class Rail : MonoBehaviour
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] nodes;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nodeCount;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xF4FCAC", Offset = "0xF4FCAC", VA = "0xF4FCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF4FDB4", Offset = "0xF4FDB4", VA = "0xF4FDB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF4FF04", Offset = "0xF4FF04", VA = "0xF4FF04")]
	public Vector3 ProjectPositionOnRail(Vector3 _pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF50228", Offset = "0xF50228", VA = "0xF50228")]
	private int GetClosestNode(Vector3 _pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF50394", Offset = "0xF50394", VA = "0xF50394")]
	private Vector3 ProjectOnSegment(Vector3 _v1, Vector3 _v2, Vector3 _pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xF505A8", Offset = "0xF505A8", VA = "0xF505A8")]
	public Rail()
	{
	}
}
[Token(Token = "0x2000158")]
public class RailMover : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rail rail;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform lookAt;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool smoothMove;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xF505B0", Offset = "0xF505B0", VA = "0xF505B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xF50674", Offset = "0xF50674", VA = "0xF50674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xF508A8", Offset = "0xF508A8", VA = "0xF508A8")]
	public RailMover()
	{
	}
}
[Token(Token = "0x2000159")]
public class ScreenFader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDCC", Offset = "0xA5CDCC")]
	private sealed class <>c
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ScriptableRendererFeature> <>9__5_0;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xD8A3A0", Offset = "0xD8A3A0", VA = "0xD8A3A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xD8A3A8", Offset = "0xD8A3A8", VA = "0xD8A3A8")]
		internal bool <SetupFadeFeature>b__5_0(ScriptableRendererFeature item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ForwardRendererData renderData;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA60E1C", Offset = "0xA60E1C")]
	public float alpha;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA60E34", Offset = "0xA60E34")]
	public float duration;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fadeMaterial;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xD8A078", Offset = "0xD8A078", VA = "0xD8A078")]
	private void Start()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xD8A07C", Offset = "0xD8A07C", VA = "0xD8A07C")]
	private void SetupFadeFeature()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xD89960", Offset = "0xD89960", VA = "0xD89960")]
	public float FadeIn()
	{
		return default(float);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xD8A244", Offset = "0xD8A244", VA = "0xD8A244")]
	public float SetCurrentFade(float endValue)
	{
		return default(float);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xD89A64", Offset = "0xD89A64", VA = "0xD89A64")]
	public float FadeOut()
	{
		return default(float);
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xD8A328", Offset = "0xD8A328", VA = "0xD8A328")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x200015A")]
public class StartScreen : MonoBehaviour
{
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDDC", Offset = "0xA5CDDC")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StartScreen <>4__this;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xCD9840", Offset = "0xCD9840", VA = "0xCD9840")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xCD9A30", Offset = "0xCD9A30", VA = "0xCD9A30")]
		internal void <PlayStartAnimation>b__0()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xCD9B0C", Offset = "0xCD9B0C", VA = "0xCD9B0C")]
		internal void <PlayStartAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDEC", Offset = "0xA5CDEC")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StartScreen <>4__this;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xCD9A1C", Offset = "0xCD9A1C", VA = "0xCD9A1C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xCD9B9C", Offset = "0xCD9B9C", VA = "0xCD9B9C")]
		internal void <PlayStartAnimationButtonPlay>b__0()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xCD9C78", Offset = "0xCD9C78", VA = "0xCD9C78")]
		internal void <PlayStartAnimationButtonPlay>b__1()
		{
		}
	}

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject logo;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject logo_english;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logo_chinese;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonPlay;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject demoSticker;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xCD94A4", Offset = "0xCD94A4", VA = "0xCD94A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xCD94A8", Offset = "0xCD94A8", VA = "0xCD94A8")]
	public void CheckLanguageLogo()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xCD955C", Offset = "0xCD955C", VA = "0xCD955C")]
	public void PlayStartAnimation()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xCD9848", Offset = "0xCD9848", VA = "0xCD9848")]
	private void PlayStartAnimationButtonPlay()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xCD9A24", Offset = "0xCD9A24", VA = "0xCD9A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xCD9A28", Offset = "0xCD9A28", VA = "0xCD9A28")]
	public StartScreen()
	{
	}
}
[Token(Token = "0x200015B")]
public class StartUI : MonoBehaviour
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] start_frame_countdown_list;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material start_frame_coutdown_base_MT;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material start_frame_coutdown_on_MT;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xCD9CC0", Offset = "0xCD9CC0", VA = "0xCD9CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xCD9CC4", Offset = "0xCD9CC4", VA = "0xCD9CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xCD9CC8", Offset = "0xCD9CC8", VA = "0xCD9CC8")]
	public void SetCountFrames(byte count)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xCD9F1C", Offset = "0xCD9F1C", VA = "0xCD9F1C")]
	public StartUI()
	{
	}
}
[Token(Token = "0x200015C")]
public class SwapWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float warningTime;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float initWarningTime;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool is_activated;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x203B13C", Offset = "0x203B13C", VA = "0x203B13C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x203B280", Offset = "0x203B280", VA = "0x203B280")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x203B3C4", Offset = "0x203B3C4", VA = "0x203B3C4")]
	private void Show()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x203B468", Offset = "0x203B468", VA = "0x203B468")]
	private void Hide()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x203B50C", Offset = "0x203B50C", VA = "0x203B50C")]
	private void Update()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x203B728", Offset = "0x203B728", VA = "0x203B728")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x203B850", Offset = "0x203B850", VA = "0x203B850")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x203B94C", Offset = "0x203B94C", VA = "0x203B94C")]
	public void ActivateSwapWarning(float warningTime)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x203BA98", Offset = "0x203BA98", VA = "0x203BA98")]
	public SwapWarningUI()
	{
	}
}
[Token(Token = "0x200015D")]
public class TVCinematicFocus : MonoBehaviour
{
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CDFC", Offset = "0xA5CDFC")]
	private sealed class <PlayIntroIE>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float start_alpha;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicFocus <>4__this;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedAlpha;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentAlpha>5__2;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <diffAlpha>5__3;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x203BFB0", Offset = "0x203BFB0", VA = "0x203BFB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x203C018", Offset = "0x203C018", VA = "0x203C018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x203BC40", Offset = "0x203BC40", VA = "0x203BC40")]
		[DebuggerHidden]
		public <PlayIntroIE>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x203BD6C", Offset = "0x203BD6C", VA = "0x203BD6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x203BD70", Offset = "0x203BD70", VA = "0x203BD70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x203BFB8", Offset = "0x203BFB8", VA = "0x203BFB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE0C", Offset = "0xA5CE0C")]
	private sealed class <PlayOutroIE>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float start_alpha;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicFocus <>4__this;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedAlpha;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentAlpha>5__2;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <diffAlpha>5__3;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x203C290", Offset = "0x203C290", VA = "0x203C290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x203C2F8", Offset = "0x203C2F8", VA = "0x203C2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x203BD00", Offset = "0x203BD00", VA = "0x203BD00")]
		[DebuggerHidden]
		public <PlayOutroIE>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x203C020", Offset = "0x203C020", VA = "0x203C020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x203C024", Offset = "0x203C024", VA = "0x203C024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x203C298", Offset = "0x203C298", VA = "0x203C298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mesh;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color initColor;

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x203BAA0", Offset = "0x203BAA0", VA = "0x203BAA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x203BB28", Offset = "0x203BB28", VA = "0x203BB28")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x203BB2C", Offset = "0x203BB2C", VA = "0x203BB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x203BB30", Offset = "0x203BB30", VA = "0x203BB30")]
	public void IntroTVCinematicFocus()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x203BBAC", Offset = "0x203BBAC", VA = "0x203BBAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA64FD8", Offset = "0xA64FD8")]
	private IEnumerator PlayIntroIE(float start_alpha, float speedAlpha)
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x203BC6C", Offset = "0x203BC6C", VA = "0x203BC6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6503C", Offset = "0xA6503C")]
	private IEnumerator PlayOutroIE(float start_alpha, float speedAlpha)
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x203BD2C", Offset = "0x203BD2C", VA = "0x203BD2C")]
	public void OutroTVCinematicFocus()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x203BD64", Offset = "0x203BD64", VA = "0x203BD64")]
	public TVCinematicFocus()
	{
	}
}
[Token(Token = "0x200015E")]
public class TVCinematicsController : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE1C", Offset = "0xA5CE1C")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldTVMeshPos;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x203CF80", Offset = "0x203CF80", VA = "0x203CF80")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x203D548", Offset = "0x203D548", VA = "0x203D548")]
		internal void <NextButton>b__0()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x203D590", Offset = "0x203D590", VA = "0x203D590")]
		internal void <NextButton>b__1()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE2C", Offset = "0xA5CE2C")]
	private sealed class <PlayIntrDistorsionIE>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x203DF38", Offset = "0x203DF38", VA = "0x203DF38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x203DFA0", Offset = "0x203DFA0", VA = "0x203DFA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x203D2CC", Offset = "0x203D2CC", VA = "0x203D2CC")]
		[DebuggerHidden]
		public <PlayIntrDistorsionIE>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x203DBDC", Offset = "0x203DBDC", VA = "0x203DBDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x203DBE0", Offset = "0x203DBE0", VA = "0x203DBE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x203DF40", Offset = "0x203DF40", VA = "0x203DF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE3C", Offset = "0xA5CE3C")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x203D5D8", Offset = "0x203D5D8", VA = "0x203D5D8")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x203D5E0", Offset = "0x203D5E0", VA = "0x203D5E0")]
		internal void <AutoNextShot>b__0()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x203D6C8", Offset = "0x203D6C8", VA = "0x203D6C8")]
		internal void <AutoNextShot>b__1()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE4C", Offset = "0xA5CE4C")]
	private sealed class <AutoNextShot>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x203DB6C", Offset = "0x203DB6C", VA = "0x203DB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x203DBD4", Offset = "0x203DBD4", VA = "0x203DBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x203D50C", Offset = "0x203D50C", VA = "0x203D50C")]
		[DebuggerHidden]
		public <AutoNextShot>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x203D7F0", Offset = "0x203D7F0", VA = "0x203D7F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x203D7F4", Offset = "0x203D7F4", VA = "0x203D7F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x203DB74", Offset = "0x203DB74", VA = "0x203DB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TVCinematicType currentTVCinematicType;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tvMesh;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVCinematicFocus tVCinematicFocus;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float tvASMaxVolume;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] distorsionSpriteList;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip distorsionClip;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image imageShot;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image blackShotImage;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject nextButton;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] nextButtonMTList;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject titleShotTipParent;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<TVCinematicsShotScriptableObject> current_shots;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ushort current_shot_index;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool is_shots_started;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool can_go_next_shot;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool is_finished;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float default_delay_go_next_shot;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] audioActList;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x203C300", Offset = "0x203C300", VA = "0x203C300")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x203C304", Offset = "0x203C304", VA = "0x203C304")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x203C36C", Offset = "0x203C36C", VA = "0x203C36C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x203C370", Offset = "0x203C370", VA = "0x203C370")]
	private void ClearCurrentShots()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x203C4E0", Offset = "0x203C4E0", VA = "0x203C4E0")]
	public void Init(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x203C6DC", Offset = "0x203C6DC", VA = "0x203C6DC")]
	public void SkipButton()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x203C810", Offset = "0x203C810", VA = "0x203C810")]
	public void NextButton()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x203D0B8", Offset = "0x203D0B8", VA = "0x203D0B8")]
	public void BackButton()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x203D1CC", Offset = "0x203D1CC", VA = "0x203D1CC")]
	public void PlayIntroDistorsion(float delay)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x203D240", Offset = "0x203D240", VA = "0x203D240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA650A0", Offset = "0xA650A0")]
	private IEnumerator PlayIntrDistorsionIE(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x203D2F8", Offset = "0x203D2F8", VA = "0x203D2F8")]
	private void SetTitle()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x203D02C", Offset = "0x203D02C", VA = "0x203D02C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65104", Offset = "0xA65104")]
	private IEnumerator AutoNextShot(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x203D538", Offset = "0x203D538", VA = "0x203D538")]
	public TVCinematicsController()
	{
	}
}
[Token(Token = "0x200015F")]
public class TextMesh3D : MonoBehaviour
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE5C", Offset = "0xA5CE5C")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMesh3D <>4__this;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x2042EC4", Offset = "0x2042EC4", VA = "0x2042EC4")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x2044234", Offset = "0x2044234", VA = "0x2044234")]
		internal void <DoDotween>b__0()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2044308", Offset = "0x2044308", VA = "0x2044308")]
		internal void <DoDotween>b__1()
		{
		}
	}

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string lastText;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3DAlignEnum align;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private TextMesh3DAlignEnum last_align;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initRotation;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initScale;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<LetterMesh3D> letterMesh3DPrefabList;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LetterMesh3D> letterMesh3DList;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool is_in_dotween;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x20428B0", Offset = "0x20428B0", VA = "0x20428B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x2042C1C", Offset = "0x2042C1C", VA = "0x2042C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x2042980", Offset = "0x2042980", VA = "0x2042980")]
	private void SetInitialTransform()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x2042C20", Offset = "0x2042C20", VA = "0x2042C20")]
	private LetterMesh3D GetLetter3D(char letter)
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x2042D10", Offset = "0x2042D10", VA = "0x2042D10")]
	private void DoDotween()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x2042ECC", Offset = "0x2042ECC", VA = "0x2042ECC")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x2043148", Offset = "0x2043148", VA = "0x2043148")]
	private void InstanciateAlignToLeftText()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x2043D38", Offset = "0x2043D38", VA = "0x2043D38")]
	private void InstanciateAlignToRightText()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x2043500", Offset = "0x2043500", VA = "0x2043500")]
	private void InstanciateAlignToCenterText()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x2043018", Offset = "0x2043018", VA = "0x2043018")]
	public void ClearText()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x2044108", Offset = "0x2044108", VA = "0x2044108")]
	private int[] GetMiddleLettersPos(string input)
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x20441BC", Offset = "0x20441BC", VA = "0x20441BC")]
	public string GetText()
	{
		return null;
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x20441C4", Offset = "0x20441C4", VA = "0x20441C4")]
	public TextMesh3D()
	{
	}
}
[Token(Token = "0x2000160")]
public enum TextMesh3DAlignEnum
{
	[Token(Token = "0x4000B26")]
	LEFT,
	[Token(Token = "0x4000B27")]
	CENTER,
	[Token(Token = "0x4000B28")]
	RIGHT
}
[Token(Token = "0x2000161")]
public class TextMeshProFade : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeSpeedFade;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x2044358", Offset = "0x2044358", VA = "0x2044358")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x204435C", Offset = "0x204435C", VA = "0x204435C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x2044360", Offset = "0x2044360", VA = "0x2044360")]
	private void FadeLoop()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x20444C0", Offset = "0x20444C0", VA = "0x20444C0")]
	public TextMeshProFade()
	{
	}
}
[Token(Token = "0x2000162")]
public class ThoughWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float warningTime;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initWarningTime;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool is_activated;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x204461C", Offset = "0x204461C", VA = "0x204461C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x2044760", Offset = "0x2044760", VA = "0x2044760")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x20448A4", Offset = "0x20448A4", VA = "0x20448A4")]
	private void Show()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x2044948", Offset = "0x2044948", VA = "0x2044948")]
	private void Hide()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x20449EC", Offset = "0x20449EC", VA = "0x20449EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x2044BE8", Offset = "0x2044BE8", VA = "0x2044BE8")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x2044D14", Offset = "0x2044D14", VA = "0x2044D14")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x2044E10", Offset = "0x2044E10", VA = "0x2044E10")]
	public void ActivateThoughWarning(float warningTime)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x2044F5C", Offset = "0x2044F5C", VA = "0x2044F5C")]
	public ThoughWarningUI()
	{
	}
}
[Token(Token = "0x2000163")]
public class TutorialPauseUI : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject PauseMenu;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject demoLabel;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool canPause;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x2049EF8", Offset = "0x2049EF8", VA = "0x2049EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x2049F6C", Offset = "0x2049F6C", VA = "0x2049F6C")]
	private void ActualizeInfo()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x204A010", Offset = "0x204A010", VA = "0x204A010")]
	public void Resume()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x204A158", Offset = "0x204A158", VA = "0x204A158")]
	public bool GetCanPause()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x204A160", Offset = "0x204A160", VA = "0x204A160")]
	public void SetCanPause(bool _state)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x204A16C", Offset = "0x204A16C", VA = "0x204A16C")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x204A014", Offset = "0x204A014", VA = "0x204A014")]
	public void DeactivatePauseMenu()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x204A33C", Offset = "0x204A33C", VA = "0x204A33C")]
	public void HideUI()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x204A1FC", Offset = "0x204A1FC", VA = "0x204A1FC")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x204A5E8", Offset = "0x204A5E8", VA = "0x204A5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x204A5EC", Offset = "0x204A5EC", VA = "0x204A5EC")]
	public TutorialPauseUI()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x204A5FC", Offset = "0x204A5FC", VA = "0x204A5FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65168", Offset = "0xA65168")]
	private void <DeactivatePauseMenu>b__10_0()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x204A7A8", Offset = "0x204A7A8", VA = "0x204A7A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65178", Offset = "0xA65178")]
	private void <HideUI>b__11_0()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x204A7C8", Offset = "0x204A7C8", VA = "0x204A7C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65188", Offset = "0xA65188")]
	private void <ShowUI>b__12_0()
	{
	}
}
[Token(Token = "0x2000164")]
public class UIAudioController : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE6C", Offset = "0xA5CE6C")]
	private sealed class <ReturnVolumen>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAudioController <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x204C024", Offset = "0x204C024", VA = "0x204C024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x204C08C", Offset = "0x204C08C", VA = "0x204C08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x204B33C", Offset = "0x204B33C", VA = "0x204B33C")]
		[DebuggerHidden]
		public <ReturnVolumen>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x204BF10", Offset = "0x204BF10", VA = "0x204BF10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x204BF14", Offset = "0x204BF14", VA = "0x204BF14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x204C02C", Offset = "0x204C02C", VA = "0x204C02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIAudioController instance;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float audioSourceMaxVolume;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float audioSource2MaxVolume;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource2;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip press_audio;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip select_audio;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip block_audio;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip back_audio;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip easy_audio;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip medium_audio;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip hard_audio;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip extreme_audio;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip buy_audio;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] combo_audio;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip consecutive_fail_audio;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip receive_hit;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip locked_audio;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip equip_audio;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip win_fanfare;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip defeat_fanfare;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine returnVolumenCo;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private DG.Tweening.Tween volumn;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float volumnFinal;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x204A998", Offset = "0x204A998", VA = "0x204A998")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x204AA68", Offset = "0x204AA68", VA = "0x204AA68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x204AAB0", Offset = "0x204AAB0", VA = "0x204AAB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x204AAB4", Offset = "0x204AAB4", VA = "0x204AAB4")]
	private void PlayPressAudio()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x204AB4C", Offset = "0x204AB4C", VA = "0x204AB4C")]
	private void PlaySelectAudio()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x204ABE4", Offset = "0x204ABE4", VA = "0x204ABE4")]
	private void PlayBlockAudio()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x204AC7C", Offset = "0x204AC7C", VA = "0x204AC7C")]
	private void PlayBackAudio()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x204AD14", Offset = "0x204AD14", VA = "0x204AD14")]
	private void PlayEasyAudio()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x204ADAC", Offset = "0x204ADAC", VA = "0x204ADAC")]
	private void PlayMediumAudio()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x204AE44", Offset = "0x204AE44", VA = "0x204AE44")]
	private void PlayHardAudio()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x204AEDC", Offset = "0x204AEDC", VA = "0x204AEDC")]
	private void PlayExtremeAudio()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x204AF74", Offset = "0x204AF74", VA = "0x204AF74")]
	private void PlayBuyAudio()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x204B00C", Offset = "0x204B00C", VA = "0x204B00C")]
	private void PlayWinFanfare()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x204B0A4", Offset = "0x204B0A4", VA = "0x204B0A4")]
	private void PlayDefeatFanfare()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x204B13C", Offset = "0x204B13C", VA = "0x204B13C")]
	private void PlayCombo()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x204B2C0", Offset = "0x204B2C0", VA = "0x204B2C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65198", Offset = "0xA65198")]
	private IEnumerator ReturnVolumen()
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x204B368", Offset = "0x204B368", VA = "0x204B368")]
	private void PlayConsecutiveFail()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x204B400", Offset = "0x204B400", VA = "0x204B400")]
	private void PlayReceiveHit()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x204B498", Offset = "0x204B498", VA = "0x204B498")]
	private void PlayLocked()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x204B530", Offset = "0x204B530", VA = "0x204B530")]
	private void PlayEquip()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x203CF88", Offset = "0x203CF88", VA = "0x203CF88")]
	public void PlayAudioClip(AudioClip audioClip)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x204B5C8", Offset = "0x204B5C8", VA = "0x204B5C8")]
	public void PlaySound(AudioUIEnum audioUIEnum)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x204B878", Offset = "0x204B878", VA = "0x204B878")]
	public void PlayAmbientSound()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x204BA1C", Offset = "0x204BA1C", VA = "0x204BA1C")]
	public void PauseAmbientSound()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x204BBC0", Offset = "0x204BBC0", VA = "0x204BBC0")]
	public void StopAmbientSound()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x204BD64", Offset = "0x204BD64", VA = "0x204BD64")]
	public void StopAll()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x204BF08", Offset = "0x204BF08", VA = "0x204BF08")]
	public UIAudioController()
	{
	}
}
[Token(Token = "0x2000165")]
public enum AudioUIEnum
{
	[Token(Token = "0x4000B4D")]
	NONE,
	[Token(Token = "0x4000B4E")]
	PRESS,
	[Token(Token = "0x4000B4F")]
	SELECT,
	[Token(Token = "0x4000B50")]
	BLOCK,
	[Token(Token = "0x4000B51")]
	BACK,
	[Token(Token = "0x4000B52")]
	EASY,
	[Token(Token = "0x4000B53")]
	MEDIUM,
	[Token(Token = "0x4000B54")]
	HARD,
	[Token(Token = "0x4000B55")]
	EXTREME,
	[Token(Token = "0x4000B56")]
	BUY,
	[Token(Token = "0x4000B57")]
	WINFANFARE,
	[Token(Token = "0x4000B58")]
	DEFEATFANFARE,
	[Token(Token = "0x4000B59")]
	COMBO,
	[Token(Token = "0x4000B5A")]
	CONSECUTIVEFAIL,
	[Token(Token = "0x4000B5B")]
	RECEIVE_HIT,
	[Token(Token = "0x4000B5C")]
	LOCKED,
	[Token(Token = "0x4000B5D")]
	EQUIP
}
[Token(Token = "0x2000166")]
public class UIController : MonoBehaviour
{
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE7C", Offset = "0xA5CE7C")]
	private sealed class <RestartSong>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIController <>4__this;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xD73C94", Offset = "0xD73C94", VA = "0xD73C94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xD73CFC", Offset = "0xD73CFC", VA = "0xD73CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xD733E8", Offset = "0xD733E8", VA = "0xD733E8")]
		[DebuggerHidden]
		public <RestartSong>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xD73414", Offset = "0xD73414", VA = "0xD73414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xD73418", Offset = "0xD73418", VA = "0xD73418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xD73C9C", Offset = "0xD73C9C", VA = "0xD73C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIController instance;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HPHUD hpHUD;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameplayPauseUI PauseUI;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TutorialPauseUI TutorialPauseUI;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DefeatedMenuUI DefeatedUI;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VictoryMenuUI VictoryUI;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject VictoryUIChallenge;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlindWarningUI blindWarningUI;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwapWarningUI swapWarningUI;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ThoughWarningUI thoughWarningUI;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MainCanvas;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject cD;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public StartUI startUI;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject psSharedParent;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject winPS;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject chooseDifficulty;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject confirmDifficulty;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject buttonsDifficulty;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI confirmText;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int difficultyID;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro songTime;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hasToPause;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x204C094", Offset = "0x204C094", VA = "0x204C094")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x204C1E8", Offset = "0x204C1E8", VA = "0x204C1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x204C278", Offset = "0x204C278", VA = "0x204C278")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x204C30C", Offset = "0x204C30C", VA = "0x204C30C")]
	public void LoadMainMenuScene()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x204C3FC", Offset = "0x204C3FC", VA = "0x204C3FC")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x204C4DC", Offset = "0x204C4DC", VA = "0x204C4DC")]
	public bool CheckActivatePauseMenuTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x204C65C", Offset = "0x204C65C", VA = "0x204C65C")]
	public void ActivateDefeatedMenu()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x204C6A0", Offset = "0x204C6A0", VA = "0x204C6A0")]
	public void ActivateVictoryMenu()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x204C5E8", Offset = "0x204C5E8", VA = "0x204C5E8")]
	public void ActivateMainCanvas()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x204A734", Offset = "0x204A734", VA = "0x204A734")]
	public void DeactivateMainCanvas()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x204C70C", Offset = "0x204C70C", VA = "0x204C70C")]
	public void ActivateBlindWarningUI()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x204C7E4", Offset = "0x204C7E4", VA = "0x204C7E4")]
	public void ActivateSwapWarningUI()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x204C8B8", Offset = "0x204C8B8", VA = "0x204C8B8")]
	public void ActivateThoughWarningUI()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x204C98C", Offset = "0x204C98C", VA = "0x204C98C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x204C9E4", Offset = "0x204C9E4", VA = "0x204C9E4")]
	public bool GetHasToPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x204C9EC", Offset = "0x204C9EC", VA = "0x204C9EC")]
	public void SetHasToPause(bool _state)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x204C9F8", Offset = "0x204C9F8", VA = "0x204C9F8")]
	public void StartSong()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x204CB28", Offset = "0x204CB28", VA = "0x204CB28")]
	public void LoadGameplay()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x204CAAC", Offset = "0x204CAAC", VA = "0x204CAAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA651FC", Offset = "0xA651FC")]
	private IEnumerator RestartSong()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x204CBD0", Offset = "0x204CBD0", VA = "0x204CBD0")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x204CCC4", Offset = "0x204CCC4", VA = "0x204CCC4")]
	public void SimulateOninputLost()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x204CDB8", Offset = "0x204CDB8", VA = "0x204CDB8")]
	public void ActivateChooseDifficulty()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x204D120", Offset = "0x204D120", VA = "0x204D120")]
	private void ChangeStateDifficultyButtonPause(int i, bool _state)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x204D294", Offset = "0x204D294", VA = "0x204D294")]
	private void DeactivateDifficultyButton()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x204D3E8", Offset = "0x204D3E8", VA = "0x204D3E8")]
	private void ChangeStateButtonsPause(bool _state)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x204D48C", Offset = "0x204D48C", VA = "0x204D48C")]
	public void DeactivateChooseDifficulty()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x204D7C4", Offset = "0x204D7C4", VA = "0x204D7C4")]
	public void ActivateConfirm(int _difficultyID)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x204DA40", Offset = "0x204DA40", VA = "0x204DA40")]
	public void DeactivateConfirm()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x204DC00", Offset = "0x204DC00", VA = "0x204DC00")]
	public void ConfirmChangeDifficulty()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x204DCA0", Offset = "0x204DCA0", VA = "0x204DCA0")]
	public void SetStartUICountFrames(byte count)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x204CFDC", Offset = "0x204CFDC", VA = "0x204CFDC")]
	private DG.Tweening.Tween AdvanceTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x204D68C", Offset = "0x204D68C", VA = "0x204D68C")]
	private DG.Tweening.Tween WalkBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x204DD54", Offset = "0x204DD54", VA = "0x204DD54")]
	private DG.Tweening.Tween GoBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x204DE8C", Offset = "0x204DE8C", VA = "0x204DE8C")]
	private DG.Tweening.Tween ReturnTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x204DFD0", Offset = "0x204DFD0", VA = "0x204DFD0")]
	public void DesactivateAllPSSharedParent()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x204E244", Offset = "0x204E244", VA = "0x204E244")]
	public void SetLastCampaignPlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x204E2A8", Offset = "0x204E2A8", VA = "0x204E2A8")]
	public UIController()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x204E2B0", Offset = "0x204E2B0", VA = "0x204E2B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65260", Offset = "0xA65260")]
	private void <ActivateChooseDifficulty>b__43_0()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x204E3DC", Offset = "0x204E3DC", VA = "0x204E3DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65270", Offset = "0xA65270")]
	private void <ActivateChooseDifficulty>b__43_1()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x204E55C", Offset = "0x204E55C", VA = "0x204E55C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65280", Offset = "0xA65280")]
	private void <DeactivateChooseDifficulty>b__47_0()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x204E57C", Offset = "0x204E57C", VA = "0x204E57C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65290", Offset = "0xA65290")]
	private void <DeactivateChooseDifficulty>b__47_1()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x204E6A8", Offset = "0x204E6A8", VA = "0x204E6A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA652A0", Offset = "0xA652A0")]
	private void <ActivateConfirm>b__48_0()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x204E788", Offset = "0x204E788", VA = "0x204E788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA652B0", Offset = "0xA652B0")]
	private void <DeactivateConfirm>b__49_0()
	{
	}
}
[Token(Token = "0x2000167")]
public class VictoryMenuUI : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE8C", Offset = "0xA5CE8C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color _temp;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xD79020", Offset = "0xD79020", VA = "0xD79020")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xD7936C", Offset = "0xD7936C", VA = "0xD7936C")]
		internal void <ActivatePractice>b__0()
		{
		}
	}

	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CE9C", Offset = "0xA5CE9C")]
	private sealed class <>c__DisplayClass36_1
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color _temp;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xD79028", Offset = "0xD79028", VA = "0xD79028")]
		public <>c__DisplayClass36_1()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xD79430", Offset = "0xD79430", VA = "0xD79430")]
		internal void <ActivatePractice>b__1()
		{
		}
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CEAC", Offset = "0xA5CEAC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject star;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__3;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__4;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__5;

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xD794F4", Offset = "0xD794F4", VA = "0xD794F4")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xD794FC", Offset = "0xD794FC", VA = "0xD794FC")]
		internal void <CampaignAnimationIE>b__0()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xD795D0", Offset = "0xD795D0", VA = "0xD795D0")]
		internal void <CampaignAnimationIE>b__3()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xD79610", Offset = "0xD79610", VA = "0xD79610")]
		internal void <CampaignAnimationIE>b__1()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xD796E4", Offset = "0xD796E4", VA = "0xD796E4")]
		internal void <CampaignAnimationIE>b__4()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xD79724", Offset = "0xD79724", VA = "0xD79724")]
		internal void <CampaignAnimationIE>b__2()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xD797F8", Offset = "0xD797F8", VA = "0xD797F8")]
		internal void <CampaignAnimationIE>b__5()
		{
		}
	}

	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CEBC", Offset = "0xA5CEBC")]
	private sealed class <CampaignAnimationIE>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongInfoCampaign songInfoCampaign;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass41_0 <>8__1;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<bool> _old_stars_completed;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <completed_count>5__2;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint <money_step>5__3;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <steps>5__4;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private uint <total_money>5__5;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private uint <check_total_money>5__6;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <i>5__7;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xD7A98C", Offset = "0xD7A98C", VA = "0xD7A98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xD7A9F4", Offset = "0xD7A9F4", VA = "0xD7A9F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xD79030", Offset = "0xD79030", VA = "0xD79030")]
		[DebuggerHidden]
		public <CampaignAnimationIE>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xD79954", Offset = "0xD79954", VA = "0xD79954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xD79958", Offset = "0xD79958", VA = "0xD79958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xD7A994", Offset = "0xD7A994", VA = "0xD7A994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CECC", Offset = "0xA5CECC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject parent;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xD79838", Offset = "0xD79838", VA = "0xD79838")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xD79840", Offset = "0xD79840", VA = "0xD79840")]
		internal void <PaperStarsAnimationIE>b__0()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xD79914", Offset = "0xD79914", VA = "0xD79914")]
		internal void <PaperStarsAnimationIE>b__1()
		{
		}
	}

	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CEDC", Offset = "0xA5CEDC")]
	private sealed class <PaperStarsAnimationIE>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongInfoCampaign songInfoCampaign;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int starPos;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<bool> _old_stars_completed;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xD7ADB8", Offset = "0xD7ADB8", VA = "0xD7ADB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xD7AE20", Offset = "0xD7AE20", VA = "0xD7AE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xD79118", Offset = "0xD79118", VA = "0xD79118")]
		[DebuggerHidden]
		public <PaperStarsAnimationIE>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xD7A9FC", Offset = "0xD7A9FC", VA = "0xD7A9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xD7AA00", Offset = "0xD7AA00", VA = "0xD7AA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xD7ADC0", Offset = "0xD7ADC0", VA = "0xD7ADC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject victoryMenu;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject victoryMenuChallenge;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] StarsSpriteList;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA60F3C", Offset = "0xA60F3C")]
	[SerializeField]
	private TextMeshProUGUI trackName;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI trackDifficulty;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI score;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI chain;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI hitRate;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject record;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject practiceImg;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject PaperParent;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI totalMoneyText;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI variationText;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA61028", Offset = "0xA61028")]
	[SerializeField]
	private TextMeshProUGUI ChallengeTrackName;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI ChallengeTrackDifficulty;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI ChallengeScore;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI ChallengeChain;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeHitRate;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI ChallengePerfect;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeGood;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshProUGUI ChallengeNormal;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject ChallengeRecord;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject ChallengeNota;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject ChallengePracticeImg;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeMoneyText;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject RetryBtn;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject ContinueBtn;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xD75F40", Offset = "0xD75F40", VA = "0xD75F40")]
	private void FindSteamLeaderboard(string _rankingname)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xD75F44", Offset = "0xD75F44", VA = "0xD75F44")]
	public void ActivateVictoryMenu()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xD76FA8", Offset = "0xD76FA8", VA = "0xD76FA8")]
	public void DeactivateVictoryMenu()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xD7704C", Offset = "0xD7704C", VA = "0xD7704C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xD787BC", Offset = "0xD787BC", VA = "0xD787BC")]
	private void SendRankingScore(Song _tempSong)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xD761EC", Offset = "0xD761EC", VA = "0xD761EC")]
	private void SetupChallenge()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xD78CDC", Offset = "0xD78CDC", VA = "0xD78CDC")]
	private void ActivatePractice()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xD78AB0", Offset = "0xD78AB0", VA = "0xD78AB0")]
	public Ranking GetRank(int HitRate, int PerfectRate, int GoodRate)
	{
		return default(Ranking);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xD78BD4", Offset = "0xD78BD4", VA = "0xD78BD4")]
	private Sprite GetRankSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xD77AC8", Offset = "0xD77AC8", VA = "0xD77AC8")]
	public bool CheckStarsCondition(StarCondition startCondition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xD77CCC", Offset = "0xD77CCC", VA = "0xD77CCC")]
	public void InitPaperStars(SongInfoCampaign songInfoCampaign, GameObject _PaperParent)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xD785C8", Offset = "0xD785C8", VA = "0xD785C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA652C0", Offset = "0xA652C0")]
	private IEnumerator CampaignAnimationIE(SongInfoCampaign songInfoCampaign, List<bool> _old_stars_completed)
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xD7905C", Offset = "0xD7905C", VA = "0xD7905C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65324", Offset = "0xA65324")]
	private IEnumerator PaperStarsAnimationIE(SongInfoCampaign songInfoCampaign, List<bool> _old_stars_completed, int starPos)
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xD78674", Offset = "0xD78674", VA = "0xD78674")]
	private void SetNewUnlock(int old_stars_count, int new_stars_count)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xD79144", Offset = "0xD79144", VA = "0xD79144")]
	public VictoryMenuUI()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xD7914C", Offset = "0xD7914C", VA = "0xD7914C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65388", Offset = "0xA65388")]
	private void <ActivateVictoryMenu>b__31_0()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xD7925C", Offset = "0xD7925C", VA = "0xD7925C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65398", Offset = "0xA65398")]
	private void <ActivateVictoryMenu>b__31_1()
	{
	}
}
[Token(Token = "0x2000168")]
public static class Utils
{
	[Token(Token = "0x6000A33")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x2000169")]
public class VelocityEstimator : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CEEC", Offset = "0xA5CEEC")]
	private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VelocityEstimator <>4__this;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <previousPosition>5__2;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <previousRotation>5__3;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xD75ED0", Offset = "0xD75ED0", VA = "0xD75ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xD75F38", Offset = "0xD75F38", VA = "0xD75F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xD75A94", Offset = "0xD75A94", VA = "0xD75A94")]
		[DebuggerHidden]
		public <EstimateVelocityCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xD75AD4", Offset = "0xD75AD4", VA = "0xD75AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xD75AD8", Offset = "0xD75AD8", VA = "0xD75AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xD75ED8", Offset = "0xD75ED8", VA = "0xD75ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA61164", Offset = "0xA61164")]
	public int velocityAverageFrames;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6119C", Offset = "0xA6119C")]
	public int angularVelocityAverageFrames;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateOnAwake;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine routine;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sampleCount;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] velocitySamples;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] angularVelocitySamples;

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xD75380", Offset = "0xD75380", VA = "0xD75380")]
	public void BeginEstimatingVelocity()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xD753C4", Offset = "0xD753C4", VA = "0xD753C4")]
	public void FinishEstimatingVelocity()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xD75488", Offset = "0xD75488", VA = "0xD75488")]
	public Vector3 GetVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xD75650", Offset = "0xD75650", VA = "0xD75650")]
	public Vector3 GetAngularVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xD75818", Offset = "0xD75818", VA = "0xD75818")]
	public Vector3 GetAccelerationEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD759FC", Offset = "0xD759FC", VA = "0xD759FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xD7540C", Offset = "0xD7540C", VA = "0xD7540C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA653B8", Offset = "0xA653B8")]
	private IEnumerator EstimateVelocityCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD75AC0", Offset = "0xD75AC0", VA = "0xD75AC0")]
	public VelocityEstimator()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5BE24", Offset = "0xA5BE24")]
public class XRCustomButtonInteractable : XRSimpleInteractable
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	protected GameObject Target;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	protected Vector3 TargetScale;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	protected Vector3 TargetScale2;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected ButtonTween buttonTween;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected bool isActive;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	protected bool hasToDeactivate;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	[SerializeField]
	protected bool KeepSelection;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	[SerializeField]
	protected bool locked;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected IXRSelectInteractor selectInteractor;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected IXRHoverInteractor hoverInteractor;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Color[] OGcolors;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected TextMeshProUGUI[] _texts;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Image[] _Image;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	protected float shakeStrength;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SerializeField]
	protected float shakeRandomness;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool CustomScale;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	public bool CustomShake;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	public bool BlockImageEffect;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	public bool BlockReturnToScaleOne;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public AudioUIEnum feedbackAudioUIEnum;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioUIEnum hoverAudioUIEnum;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool BlockTextEffect;

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD80D84", Offset = "0xD80D84", VA = "0xD80D84", Slot = "55")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD80D8C", Offset = "0xD80D8C", VA = "0xD80D8C", Slot = "66")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xD80E14", Offset = "0xD80E14", VA = "0xD80E14", Slot = "65")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xD80E1C", Offset = "0xD80E1C", VA = "0xD80E1C", Slot = "69")]
	protected override void OnActivated(ActivateEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xD80E24", Offset = "0xD80E24", VA = "0xD80E24", Slot = "62")]
	protected override void OnHoverEntered(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xD810E4", Offset = "0xD810E4", VA = "0xD810E4", Slot = "61")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xD81134", Offset = "0xD81134", VA = "0xD81134", Slot = "64")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xD811F0", Offset = "0xD811F0", VA = "0xD811F0")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xD81548", Offset = "0xD81548", VA = "0xD81548", Slot = "88")]
	protected internal virtual void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xD8168C", Offset = "0xD8168C", VA = "0xD8168C", Slot = "89")]
	protected internal virtual void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xD817D0", Offset = "0xD817D0", VA = "0xD817D0")]
	public void ChangeHasToDeactivate(bool _state)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xD817DC", Offset = "0xD817DC", VA = "0xD817DC", Slot = "90")]
	protected internal virtual void AddListeners()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xD819DC", Offset = "0xD819DC", VA = "0xD819DC", Slot = "91")]
	public virtual void HoverSize()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xD819F8", Offset = "0xD819F8", VA = "0xD819F8")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xD81A44", Offset = "0xD81A44", VA = "0xD81A44")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xD81A78", Offset = "0xD81A78", VA = "0xD81A78", Slot = "92")]
	protected internal virtual void ActivateFunction()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xD81A84", Offset = "0xD81A84", VA = "0xD81A84", Slot = "93")]
	protected internal virtual void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD81C58", Offset = "0xD81C58", VA = "0xD81C58", Slot = "94")]
	protected internal virtual void OnHoverExitEffects()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD81DDC", Offset = "0xD81DDC", VA = "0xD81DDC", Slot = "95")]
	protected internal virtual void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD8205C", Offset = "0xD8205C", VA = "0xD8205C", Slot = "96")]
	public virtual void Deselect()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD821D0", Offset = "0xD821D0", VA = "0xD821D0")]
	public XRCustomButtonInteractable()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xD82284", Offset = "0xD82284", VA = "0xD82284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6541C", Offset = "0xA6541C")]
	private void <AddListeners>b__33_0(HoverEnterEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xD822A0", Offset = "0xD822A0", VA = "0xD822A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6542C", Offset = "0xA6542C")]
	private void <AddListeners>b__33_1(HoverEnterEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD822B0", Offset = "0xD822B0", VA = "0xD822B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6543C", Offset = "0xA6543C")]
	private void <AddListeners>b__33_2(HoverExitEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD822E0", Offset = "0xD822E0", VA = "0xD822E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6544C", Offset = "0xA6544C")]
	private void <AddListeners>b__33_3(HoverExitEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xD822F0", Offset = "0xD822F0", VA = "0xD822F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6545C", Offset = "0xA6545C")]
	private void <AddListeners>b__33_4(ActivateEventArgs XRCustomButtonInteractable)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xD82300", Offset = "0xD82300", VA = "0xD82300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6546C", Offset = "0xA6546C")]
	private void <AddListeners>b__33_5(ActivateEventArgs XRCustomButtonInteractable)
	{
	}
}
[Token(Token = "0x200016B")]
public class XRCustomChangeModeButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private int GameMode;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xD82310", Offset = "0xD82310", VA = "0xD82310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xD8239C", Offset = "0xD8239C", VA = "0xD8239C", Slot = "92")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xD824A8", Offset = "0xD824A8", VA = "0xD824A8", Slot = "93")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xD82514", Offset = "0xD82514", VA = "0xD82514", Slot = "95")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xD825A8", Offset = "0xD825A8", VA = "0xD825A8")]
	public XRCustomChangeModeButtonInteractable()
	{
	}
}
[Token(Token = "0x200016C")]
public class XRCustomChangeSceneButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	[SerializeField]
	private bool keepAlwaysLocked;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Material LockMaterial;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject demoLock;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xD825AC", Offset = "0xD825AC", VA = "0xD825AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xD826B4", Offset = "0xD826B4", VA = "0xD826B4", Slot = "92")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xD8272C", Offset = "0xD8272C", VA = "0xD8272C", Slot = "93")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xD827E4", Offset = "0xD827E4", VA = "0xD827E4", Slot = "95")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD828DC", Offset = "0xD828DC", VA = "0xD828DC")]
	public XRCustomChangeSceneButtonInteractable()
	{
	}
}
[Token(Token = "0x200016D")]
public class XRCustomDifficultyButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private int difficulty;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool skipDeselect;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xD828E0", Offset = "0xD828E0", VA = "0xD828E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xD82920", Offset = "0xD82920", VA = "0xD82920")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xD829E8", Offset = "0xD829E8", VA = "0xD829E8", Slot = "92")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xD82B24", Offset = "0xD82B24", VA = "0xD82B24")]
	public XRCustomDifficultyButtonInteractable()
	{
	}
}
[Token(Token = "0x200016E")]
public class XRCustomGrabInteractable : XRGrabInteractable
{
	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Vector3 initialAttachLocalPos;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private Quaternion initialAttachLocalRot;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xD82B28", Offset = "0xD82B28", VA = "0xD82B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xD82C64", Offset = "0xD82C64", VA = "0xD82C64", Slot = "66")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xD82CD0", Offset = "0xD82CD0", VA = "0xD82CD0")]
	public XRCustomGrabInteractable()
	{
	}
}
[Token(Token = "0x200016F")]
public class XRCustomInteractableContentBlock : XRCustomButtonInteractable
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	protected bool IgnoreOnHoverExit;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	protected bool HasBeenActivated;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Color authorColor;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xD82D38", Offset = "0xD82D38", VA = "0xD82D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD82E74", Offset = "0xD82E74", VA = "0xD82E74", Slot = "88")]
	protected internal override void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD82F50", Offset = "0xD82F50", VA = "0xD82F50", Slot = "89")]
	protected internal override void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xD8302C", Offset = "0xD8302C", VA = "0xD8302C", Slot = "93")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xD8333C", Offset = "0xD8333C", VA = "0xD8333C", Slot = "94")]
	protected internal override void OnHoverExitEffects()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xD837D0", Offset = "0xD837D0", VA = "0xD837D0", Slot = "90")]
	protected internal override void AddListeners()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xD839D0", Offset = "0xD839D0", VA = "0xD839D0", Slot = "95")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xD83BA0", Offset = "0xD83BA0", VA = "0xD83BA0")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xD83BA8", Offset = "0xD83BA8", VA = "0xD83BA8")]
	public void ForceDeselect()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xD84074", Offset = "0xD84074", VA = "0xD84074")]
	public XRCustomInteractableContentBlock()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xD84078", Offset = "0xD84078", VA = "0xD84078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6547C", Offset = "0xA6547C")]
	private void <AddListeners>b__8_0(HoverEnterEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xD84094", Offset = "0xD84094", VA = "0xD84094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6548C", Offset = "0xA6548C")]
	private void <AddListeners>b__8_1(HoverEnterEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xD840A4", Offset = "0xD840A4", VA = "0xD840A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6549C", Offset = "0xA6549C")]
	private void <AddListeners>b__8_2(HoverExitEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xD840CC", Offset = "0xD840CC", VA = "0xD840CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654AC", Offset = "0xA654AC")]
	private void <AddListeners>b__8_3(HoverExitEventArgs ButtonTween)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xD840DC", Offset = "0xD840DC", VA = "0xD840DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654BC", Offset = "0xA654BC")]
	private void <AddListeners>b__8_4(ActivateEventArgs XRCustomButtonInteractable)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xD840EC", Offset = "0xD840EC", VA = "0xD840EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654CC", Offset = "0xA654CC")]
	private void <AddListeners>b__8_5(ActivateEventArgs XRCustomButtonInteractable)
	{
	}
}
[Token(Token = "0x2000170")]
public class XRCustomRayInteractor : XRRayInteractor
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public float initialHapticIntensity;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float initialHapticDuration;

	[Token(Token = "0x17000041")]
	public override bool isSelectActive
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xD841F8", Offset = "0xD841F8", VA = "0xD841F8", Slot = "51")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD840FC", Offset = "0xD840FC", VA = "0xD840FC")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD7DAF0", Offset = "0xD7DAF0", VA = "0xD7DAF0")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD84200", Offset = "0xD84200", VA = "0xD84200")]
	public XRCustomRayInteractor()
	{
	}
}
[Token(Token = "0x2000171")]
public class XRCustomSimpleInteractable : XRSimpleInteractable
{
	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD84268", Offset = "0xD84268", VA = "0xD84268", Slot = "55")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xD84270", Offset = "0xD84270", VA = "0xD84270", Slot = "66")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xD842DC", Offset = "0xD842DC", VA = "0xD842DC", Slot = "65")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xD842E4", Offset = "0xD842E4", VA = "0xD842E4", Slot = "68")]
	protected override void OnSelectExited(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xD84334", Offset = "0xD84334", VA = "0xD84334", Slot = "67")]
	protected override void OnSelectExiting(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xD84338", Offset = "0xD84338", VA = "0xD84338", Slot = "62")]
	protected override void OnHoverEntered(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD84340", Offset = "0xD84340", VA = "0xD84340", Slot = "61")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD84348", Offset = "0xD84348", VA = "0xD84348", Slot = "64")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xD84350", Offset = "0xD84350", VA = "0xD84350")]
	public XRCustomSimpleInteractable()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5BE88", Offset = "0xA5BE88")]
public class DrumsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xD64F74", Offset = "0xD64F74", VA = "0xD64F74")]
	public DrumsScriptableObject()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5BEE8", Offset = "0xA5BEE8")]
public class DrumsStickScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xD64F7C", Offset = "0xD64F7C", VA = "0xD64F7C")]
	public DrumsStickScriptableObject()
	{
	}
}
[Token(Token = "0x2000174")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5BF48", Offset = "0xA5BF48")]
public class HandsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftPrefab;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightPrefab;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint order;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xDC26D0", Offset = "0xDC26D0", VA = "0xDC26D0")]
	public HandsScriptableObject()
	{
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5BFA8", Offset = "0xA5BFA8")]
public class PrefabControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint maxDrumsId;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DrumsScriptableObject currentDrumsSO;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint maxDrumsStickId;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DrumsStickScriptableObject currentDrumsStickSO;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint maxHandsId;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HandsScriptableObject currentHandsSO;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint maxSpecialItemId;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpecialItemScriptableObject currentSpecialItemSO;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RigScripteable currentRig;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<DrumsScriptableObject> drumsSOList;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<DrumsStickScriptableObject> drumsStickSOList;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<HandsScriptableObject> handsStickSOList;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SpecialItemScriptableObject> specialItemSOList;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RigScripteable RigSO;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xF4DCD8", Offset = "0xF4DCD8", VA = "0xF4DCD8")]
	public void LoadAllList()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xF4E584", Offset = "0xF4E584", VA = "0xF4E584")]
	public void UnloadAllList()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xF4E678", Offset = "0xF4E678", VA = "0xF4E678")]
	public List<DrumsScriptableObject> GetDrumsSOList()
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xF4E680", Offset = "0xF4E680", VA = "0xF4E680")]
	public List<DrumsStickScriptableObject> GetDrumsStickSOList()
	{
		return null;
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xF4E688", Offset = "0xF4E688", VA = "0xF4E688")]
	public List<HandsScriptableObject> GetHandsStickSOList()
	{
		return null;
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xF4E690", Offset = "0xF4E690", VA = "0xF4E690")]
	public List<SpecialItemScriptableObject> GetSpecialItemSOList()
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xF4E698", Offset = "0xF4E698", VA = "0xF4E698")]
	private void LoadDrumsSO(uint id)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xF4E01C", Offset = "0xF4E01C", VA = "0xF4E01C")]
	private DrumsScriptableObject GetDrumsSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xF4E758", Offset = "0xF4E758", VA = "0xF4E758")]
	private void LoadDrumStickSO(uint id)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xF4E818", Offset = "0xF4E818", VA = "0xF4E818")]
	public void UnLoadDrumsStickSO()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xF4E198", Offset = "0xF4E198", VA = "0xF4E198")]
	private DrumsStickScriptableObject GetDrumsStickSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xF4E824", Offset = "0xF4E824", VA = "0xF4E824")]
	private void LoadHandsSO(uint id)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xF4E8E4", Offset = "0xF4E8E4", VA = "0xF4E8E4")]
	public void UnLoadHandsSO()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xF4E350", Offset = "0xF4E350", VA = "0xF4E350")]
	private HandsScriptableObject GetHandsSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xF4E8F0", Offset = "0xF4E8F0", VA = "0xF4E8F0")]
	private void LoadSpecialItemSO(uint id)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xF4E9B0", Offset = "0xF4E9B0", VA = "0xF4E9B0")]
	public void UnLoadSpecialItemSO()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xF4E4E0", Offset = "0xF4E4E0", VA = "0xF4E4E0")]
	private SpecialItemScriptableObject GetSpecialItemSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xF4E9BC", Offset = "0xF4E9BC", VA = "0xF4E9BC")]
	private void LoadRigSO()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xF4EA78", Offset = "0xF4EA78", VA = "0xF4EA78")]
	public void UnLoadRigSO()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xF4E9E8", Offset = "0xF4E9E8", VA = "0xF4E9E8")]
	private RigScripteable GetRigSO()
	{
		return null;
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xF4EA84", Offset = "0xF4EA84", VA = "0xF4EA84")]
	public GameObject GetPrefab(uint id, PrefabType type)
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xF4EC64", Offset = "0xF4EC64", VA = "0xF4EC64")]
	public string GetName(uint id, PrefabType type)
	{
		return null;
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xF4EE00", Offset = "0xF4EE00", VA = "0xF4EE00")]
	public uint GetPrice(uint id, PrefabType type)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xF4EB34", Offset = "0xF4EB34", VA = "0xF4EB34")]
	private GameObject GetDrums(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xF4ED40", Offset = "0xF4ED40", VA = "0xF4ED40")]
	private string GetDrumsName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xF4EE38", Offset = "0xF4EE38", VA = "0xF4EE38")]
	private uint GetDrumsPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xF4EB64", Offset = "0xF4EB64", VA = "0xF4EB64")]
	private GameObject GetDrumsStick(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xF4ED70", Offset = "0xF4ED70", VA = "0xF4ED70")]
	private string GetDrumsStickName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xF4EE68", Offset = "0xF4EE68", VA = "0xF4EE68")]
	private uint GetDrumsStickPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xF4EB94", Offset = "0xF4EB94", VA = "0xF4EB94")]
	private GameObject GetHand(uint id, HandEnum handEnum)
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF4EDA0", Offset = "0xF4EDA0", VA = "0xF4EDA0")]
	private string GetHandsName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF4EE98", Offset = "0xF4EE98", VA = "0xF4EE98")]
	private uint GetHandsPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xF4EC24", Offset = "0xF4EC24", VA = "0xF4EC24")]
	private GameObject GetRig()
	{
		return null;
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xF4EBF4", Offset = "0xF4EBF4", VA = "0xF4EBF4")]
	private GameObject GetSpecialItem(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xF4EDD0", Offset = "0xF4EDD0", VA = "0xF4EDD0")]
	private string GetSpecialItemName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xF4EEC8", Offset = "0xF4EEC8", VA = "0xF4EEC8")]
	private uint GetSpecialItemPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xF4EEF8", Offset = "0xF4EEF8", VA = "0xF4EEF8")]
	public PrefabControllerScriptableObject()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C008", Offset = "0xA5C008")]
public class RigScripteable : ScriptableObject
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xD8730C", Offset = "0xD8730C", VA = "0xD8730C")]
	public RigScripteable()
	{
	}
}
[Token(Token = "0x2000177")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C068", Offset = "0xA5C068")]
public class SongControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SongScriptableObject currentSO;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SongScriptableObject> songSOList;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xCD533C", Offset = "0xCD533C", VA = "0xCD533C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xCD5340", Offset = "0xCD5340", VA = "0xCD5340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xCD5344", Offset = "0xCD5344", VA = "0xCD5344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xCD33A8", Offset = "0xCD33A8", VA = "0xCD33A8")]
	public List<AudioClip> GetSoundTrack(int id)
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xCD5348", Offset = "0xCD5348", VA = "0xCD5348")]
	private void LoadSO(int id)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xCD5408", Offset = "0xCD5408", VA = "0xCD5408")]
	private SongScriptableObject GetSongSO(int id)
	{
		return null;
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCD3600", Offset = "0xCD3600", VA = "0xCD3600")]
	public void LoadAllTutorialSongSOList()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCD54E0", Offset = "0xCD54E0", VA = "0xCD54E0")]
	private SongScriptableObject GetSongOfSongSOList(int id)
	{
		return null;
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCD36BC", Offset = "0xCD36BC", VA = "0xCD36BC")]
	public List<AudioClip> GetSoundTrackOfSongSOList(int id)
	{
		return null;
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCD38FC", Offset = "0xCD38FC", VA = "0xCD38FC")]
	public void UnloadAllSongSOList()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCD55B8", Offset = "0xCD55B8", VA = "0xCD55B8")]
	public UnityEngine.Object GetCSV(int id, int difficulty)
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCD5640", Offset = "0xCD5640", VA = "0xCD5640")]
	public SongControllerScriptableObject()
	{
	}
}
[Token(Token = "0x2000178")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C0C8", Offset = "0xA5C0C8")]
public class SongScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip track_base;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip track_drums;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip track_steam_1;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip track_steam_2;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip track_steam_3;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.Object easy_CSV;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object medium_CSV;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Object hard_CSV;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Object extreme_CSV;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCD5ECC", Offset = "0xCD5ECC", VA = "0xCD5ECC")]
	public SongScriptableObject()
	{
	}
}
[Token(Token = "0x2000179")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C128", Offset = "0xA5C128")]
public class SpecialItemScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpecialItemScriptableType type;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int id_song;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCD8604", Offset = "0xCD8604", VA = "0xCD8604")]
	public SpecialItemScriptableObject()
	{
	}
}
[Token(Token = "0x200017A")]
public enum SpecialItemScriptableType
{
	[Token(Token = "0x4000BF4")]
	NONE,
	[Token(Token = "0x4000BF5")]
	SONG
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C188", Offset = "0xA5C188")]
public class TVCinematicsShotControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TVCinematicsShotScriptableObject> current_shot_list;

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x203DFA8", Offset = "0x203DFA8", VA = "0x203DFA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x203DFAC", Offset = "0x203DFAC", VA = "0x203DFAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x203C470", Offset = "0x203C470", VA = "0x203C470")]
	public void UnloadAllShotSOList()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x203C6B4", Offset = "0x203C6B4", VA = "0x203C6B4")]
	public void LoadAllShotSOList(TVCinematicType tVCinematicType)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x203DFB0", Offset = "0x203DFB0", VA = "0x203DFB0")]
	private void LoadAct1ShotSOList()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x203E14C", Offset = "0x203E14C", VA = "0x203E14C")]
	private void LoadAct2ShotSOList()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x203E2E8", Offset = "0x203E2E8", VA = "0x203E2E8")]
	private void LoadAct3ShotSOList()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x203E4A4", Offset = "0x203E4A4", VA = "0x203E4A4")]
	private TVCinematicsShotScriptableObject GetShotSO(int id)
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x203E574", Offset = "0x203E574", VA = "0x203E574")]
	public List<TVCinematicsShotScriptableObject> GetShotList(TVCinematicType tVCinematicType)
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x203E57C", Offset = "0x203E57C", VA = "0x203E57C")]
	public TVCinematicsShotControllerScriptableObject()
	{
	}
}
[Token(Token = "0x200017C")]
public enum TVCinematicType
{
	[Token(Token = "0x4000BF8")]
	NONE,
	[Token(Token = "0x4000BF9")]
	ACT_1,
	[Token(Token = "0x4000BFA")]
	ACT_2,
	[Token(Token = "0x4000BFB")]
	ACT_3,
	[Token(Token = "0x4000BFC")]
	LENGTH
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA5C1E8", Offset = "0xA5C1E8")]
public class TVCinematicsShotScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite sprite;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioClip;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float durationSeconds;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool has_haptic_vibration;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool has_tv_shake;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x203E584", Offset = "0x203E584", VA = "0x203E584")]
	public TVCinematicsShotScriptableObject()
	{
	}
}
[Token(Token = "0x200017E")]
public class TempPersistent : MonoBehaviour
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MainCamera;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PeristentCamera;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TempPersistent instance;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x20427D4", Offset = "0x20427D4", VA = "0x20427D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x204282C", Offset = "0x204282C", VA = "0x204282C")]
	public TempPersistent()
	{
	}
}
[Token(Token = "0x200017F")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000307")]
	public class Section
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xD86398", Offset = "0xD86398", VA = "0xD86398")]
		public Section()
		{
		}
	}

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD86390", Offset = "0xD86390", VA = "0xD86390")]
	public Readme()
	{
	}
}
[Token(Token = "0x2000180")]
public class VariationButtonInfo : MonoBehaviour
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject FrameSupport;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool transforming;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD74A2C", Offset = "0xD74A2C", VA = "0xD74A2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xD74ABC", Offset = "0xD74ABC", VA = "0xD74ABC")]
	private void LoadKey()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xD74C68", Offset = "0xD74C68", VA = "0xD74C68")]
	public void ChangeInfoState()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD74E4C", Offset = "0xD74E4C", VA = "0xD74E4C")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD74CCC", Offset = "0xD74CCC", VA = "0xD74CCC")]
	public void DeactivateInfo()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD74FA8", Offset = "0xD74FA8", VA = "0xD74FA8")]
	public VariationButtonInfo()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xD74FB0", Offset = "0xD74FB0", VA = "0xD74FB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654DC", Offset = "0xA654DC")]
	private void <ActivateInfo>b__5_0()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xD75068", Offset = "0xD75068", VA = "0xD75068")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654EC", Offset = "0xA654EC")]
	private void <ActivateInfo>b__5_1()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xD75070", Offset = "0xD75070", VA = "0xD75070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA654FC", Offset = "0xA654FC")]
	private void <DeactivateInfo>b__6_0()
	{
	}
}
[Token(Token = "0x2000181")]
public class VariationInfoIngame : MonoBehaviour
{
	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject FrameSupport;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xD75098", Offset = "0xD75098", VA = "0xD75098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xD75138", Offset = "0xD75138", VA = "0xD75138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xD752E4", Offset = "0xD752E4", VA = "0xD752E4")]
	public VariationInfoIngame()
	{
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000182")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000308")]
		private class CameraState
		{
			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xD73F40", Offset = "0xD73F40", VA = "0xD73F40")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xD745C8", Offset = "0xD745C8", VA = "0xD745C8")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xD74698", Offset = "0xD74698", VA = "0xD74698")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xD747BC", Offset = "0xD747BC", VA = "0xD747BC")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xD74A14", Offset = "0xD74A14", VA = "0xD74A14")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA612B4", Offset = "0xA612B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA612B4", Offset = "0xA612B4")]
		public float boost;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA61314", Offset = "0xA61314")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA61314", Offset = "0xA61314")]
		public float positionLerpTime;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA6136C", Offset = "0xA6136C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6136C", Offset = "0xA6136C")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA613CC", Offset = "0xA613CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA613CC", Offset = "0xA613CC")]
		public float rotationLerpTime;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA61424", Offset = "0xA61424")]
		public bool invertY;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xD73EE8", Offset = "0xD73EE8", VA = "0xD73EE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xD73FC8", Offset = "0xD73FC8", VA = "0xD73FC8")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD74284", Offset = "0xD74284", VA = "0xD74284")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xD7484C", Offset = "0xD7484C", VA = "0xD7484C")]
		public SimpleCameraController()
		{
		}
	}
}
namespace Pixelplacement
{
	[Token(Token = "0x2000183")]
	public class Chooser : MonoBehaviour
	{
		[Token(Token = "0x2000309")]
		public enum Method
		{
			[Token(Token = "0x4001400")]
			Raycast,
			[Token(Token = "0x4001401")]
			RaycastAll
		}

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjectEvent OnSelected;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectEvent OnDeselected;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObjectEvent OnPressed;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObjectEvent OnReleased;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _cursorPropertiesFolded;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool _unityEventsFolded;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform source;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastDistance;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask layermask;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode[] pressedInput;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform cursor;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float surfaceOffset;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float idleDistance;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float stabilityDelta;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float snapDelta;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float stableSpeed;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float unstableSpeed;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool flipForward;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool matchSurfaceNormal;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool autoHide;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool cursorHidden;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool flipCastDirection;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6145C", Offset = "0xA6145C")]
		private bool <IsHitting>k__BackingField;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Method _method;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _debugView;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _previousCursor;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Transform> _current;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Transform> _previous;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _currentRaycast;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _previousRaycast;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _hidden;

		[Token(Token = "0x17000042")]
		public Transform[] Current
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x114430C", Offset = "0x114430C", VA = "0x114430C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		public bool IsHitting
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x1144364", Offset = "0x1144364", VA = "0x1144364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6550C", Offset = "0xA6550C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x114436C", Offset = "0x114436C", VA = "0x114436C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6551C", Offset = "0xA6551C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1144378", Offset = "0x1144378", VA = "0x1144378")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1144418", Offset = "0x1144418", VA = "0x1144418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1144594", Offset = "0x1144594", VA = "0x1144594")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1144688", Offset = "0x1144688", VA = "0x1144688")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1144894", Offset = "0x1144894", VA = "0x1144894")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1144A88", Offset = "0x1144A88", VA = "0x1144A88")]
		public void Released()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1144C7C", Offset = "0x1144C7C", VA = "0x1144C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1145F70", Offset = "0x1145F70", VA = "0x1145F70")]
		public Chooser()
		{
		}
	}
	[Token(Token = "0x2000184")]
	internal interface IChooser
	{
		[Token(Token = "0x6000AE5")]
		void Selected();

		[Token(Token = "0x6000AE6")]
		void Deselected();

		[Token(Token = "0x6000AE7")]
		void Pressed();

		[Token(Token = "0x6000AE8")]
		void Released();
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C248", Offset = "0xA5C248")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C248", Offset = "0xA5C248")]
	[ExecuteInEditMode]
	public sealed class ColliderButton : MonoBehaviour
	{
		[Token(Token = "0x200030A")]
		public enum EaseType
		{
			[Token(Token = "0x4001403")]
			EaseOut,
			[Token(Token = "0x4001404")]
			EaseOutBack
		}

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColliderButtonEvent OnSelected;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColliderButtonEvent OnDeselected;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColliderButtonEvent OnClick;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColliderButtonEvent OnPressed;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColliderButtonEvent OnReleased;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA614DC", Offset = "0xA614DC")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode[] keyInput;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _unityEventsFolded;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool _scaleResponseFolded;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool _colorResponseFolded;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool applyColor;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool applyScale;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask collisionLayerMask;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Renderer colorRendererTarget;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image colorImageTarget;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color selectedColor;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color pressedColor;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color disabledColor;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float colorDuration;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform scaleTarget;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 normalScale;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 selectedScale;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 pressedScale;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float scaleDuration;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public EaseType scaleEaseType;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool resizeGUIBoxCollider;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool centerGUIBoxCollider;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Vector2 guiBoxColliderPadding;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool interactable;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool _clicking;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int _selectedCount;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _colliderSelected;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _pressed;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool _released;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool _vrRunning;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventTrigger _eventTrigger;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private EventTrigger.Entry _pressedEventTrigger;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private EventTrigger.Entry _releasedEventTrigger;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private EventTrigger.Entry _enterEventTrigger;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EventTrigger.Entry _exitEventTrigger;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int _colliderCount;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private BoxCollider _boxCollider;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TweenBase _colorTweenImage;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TweenBase _colorTweenMaterial;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private TweenBase _scaleTween;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Color _normalColorRenderer;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Color _normalColorImage;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool _interactableStatus;

		[Token(Token = "0x17000044")]
		public bool IsSelected
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x1146774", Offset = "0x1146774", VA = "0x1146774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655CC", Offset = "0xA655CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x114677C", Offset = "0x114677C", VA = "0x114677C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655DC", Offset = "0xA655DC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event Action<ColliderButton> OnSelectedGlobal
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x114604C", Offset = "0x114604C", VA = "0x114604C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6552C", Offset = "0xA6552C")]
			add
			{
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1146100", Offset = "0x1146100", VA = "0x1146100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6553C", Offset = "0xA6553C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event Action<ColliderButton> OnDeselectedGlobal
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x11461B4", Offset = "0x11461B4", VA = "0x11461B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6554C", Offset = "0xA6554C")]
			add
			{
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x114626C", Offset = "0x114626C", VA = "0x114626C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6555C", Offset = "0xA6555C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action<ColliderButton> OnClickGlobal
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x1146324", Offset = "0x1146324", VA = "0x1146324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6556C", Offset = "0xA6556C")]
			add
			{
			}
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x11463DC", Offset = "0x11463DC", VA = "0x11463DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6557C", Offset = "0xA6557C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action<ColliderButton> OnPressedGlobal
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x1146494", Offset = "0x1146494", VA = "0x1146494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6558C", Offset = "0xA6558C")]
			add
			{
			}
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x114654C", Offset = "0x114654C", VA = "0x114654C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6559C", Offset = "0xA6559C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Action<ColliderButton> OnReleasedGlobal
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x1146604", Offset = "0x1146604", VA = "0x1146604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655AC", Offset = "0xA655AC")]
			add
			{
			}
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x11466BC", Offset = "0x11466BC", VA = "0x11466BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655BC", Offset = "0xA655BC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1146788", Offset = "0x1146788", VA = "0x1146788")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1146910", Offset = "0x1146910", VA = "0x1146910")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1147190", Offset = "0x1147190", VA = "0x1147190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1147330", Offset = "0x1147330", VA = "0x1147330")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11473C8", Offset = "0x11473C8", VA = "0x11473C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1147DA4", Offset = "0x1147DA4", VA = "0x1147DA4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1147DBC", Offset = "0x1147DBC", VA = "0x1147DBC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1147DCC", Offset = "0x1147DCC", VA = "0x1147DCC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1147DDC", Offset = "0x1147DDC", VA = "0x1147DDC")]
		private void OnPointerDownDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1147E4C", Offset = "0x1147E4C", VA = "0x1147E4C")]
		private void OnPointerUpDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1147EBC", Offset = "0x1147EBC", VA = "0x1147EBC")]
		private void OnPointerEnterDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1147EC0", Offset = "0x1147EC0", VA = "0x1147EC0")]
		private void OnPointerExitDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1147EC4", Offset = "0x1147EC4", VA = "0x1147EC4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1147F3C", Offset = "0x1147F3C", VA = "0x1147F3C")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1147FC8", Offset = "0x1147FC8", VA = "0x1147FC8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1148008", Offset = "0x1148008", VA = "0x1148008")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1147AEC", Offset = "0x1147AEC", VA = "0x1147AEC")]
		public void Deselected()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1147A2C", Offset = "0x1147A2C", VA = "0x1147A2C")]
		public void Selected()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1147BB8", Offset = "0x1147BB8", VA = "0x1147BB8")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1147C90", Offset = "0x1147C90", VA = "0x1147C90")]
		public void Released()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1146FB8", Offset = "0x1146FB8", VA = "0x1146FB8")]
		private void ResizeGUIBoxCollider(BoxCollider boxCollider)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x11471C8", Offset = "0x11471C8", VA = "0x11471C8")]
		private void ColorReset()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x114762C", Offset = "0x114762C", VA = "0x114762C")]
		private void ColorNormal()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1148170", Offset = "0x1148170", VA = "0x1148170")]
		private void ColorSelected()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x11484C0", Offset = "0x11484C0", VA = "0x11484C0")]
		private void ColorPressed()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1147834", Offset = "0x1147834", VA = "0x1147834")]
		private void ColorDisabled()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1147384", Offset = "0x1147384", VA = "0x1147384")]
		private void ScaleReset()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1148018", Offset = "0x1148018", VA = "0x1148018")]
		private void ScaleNormal()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1148368", Offset = "0x1148368", VA = "0x1148368")]
		private void ScaleSelected()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x11486B8", Offset = "0x11486B8", VA = "0x11486B8")]
		private void ScalePressed()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x114880C", Offset = "0x114880C", VA = "0x114880C")]
		public ColliderButton()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x11488B8", Offset = "0x11488B8", VA = "0x11488B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655EC", Offset = "0xA655EC")]
		private void <Awake>b__69_0(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1148948", Offset = "0x1148948", VA = "0x1148948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA655FC", Offset = "0xA655FC")]
		private void <Awake>b__69_1(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x11489D8", Offset = "0x11489D8", VA = "0x11489D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6560C", Offset = "0xA6560C")]
		private void <Awake>b__69_2(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1148A68", Offset = "0x1148A68", VA = "0x1148A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6561C", Offset = "0xA6561C")]
		private void <Awake>b__69_3(BaseEventData data)
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C2E4", Offset = "0xA5C2E4")]
	public class DisplayObject : MonoBehaviour
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _activated;

		[Token(Token = "0x17000045")]
		public bool ActiveSelf
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x1148E5C", Offset = "0x1148E5C", VA = "0x1148E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x1148E80", Offset = "0x1148E80", VA = "0x1148E80")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1148EC4", Offset = "0x1148EC4", VA = "0x1148EC4")]
		public void Register()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1148E88", Offset = "0x1148E88", VA = "0x1148E88")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1148F04", Offset = "0x1148F04", VA = "0x1148F04")]
		public void Solo()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1149388", Offset = "0x1149388", VA = "0x1149388")]
		public void HideAll()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1149784", Offset = "0x1149784", VA = "0x1149784")]
		public DisplayObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x114978C", Offset = "0x114978C", VA = "0x114978C")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class ColliderButtonEvent : UnityEvent<ColliderButton>
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1148AF8", Offset = "0x1148AF8", VA = "0x1148AF8")]
		public ColliderButtonEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x11442BC", Offset = "0x11442BC", VA = "0x11442BC")]
		public BoolEvent()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C348", Offset = "0xA5C348")]
	public abstract class Singleton<T> : MonoBehaviour
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x17000046")]
		public static T Instance
		{
			[Token(Token = "0x6000B22")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000B23")]
		protected virtual void OnRegistration()
		{
		}

		[Token(Token = "0x6000B24")]
		public void RegisterSingleton(T instance)
		{
		}

		[Token(Token = "0x6000B25")]
		protected void Initialize(T instance)
		{
		}

		[Token(Token = "0x6000B26")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public static class BezierCurves
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1143824", Offset = "0x1143824", VA = "0x1143824")]
		public static Vector3 GetPoint(Vector3 startPosition, Vector3 controlPoint, Vector3 endPosition, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x11439B0", Offset = "0x11439B0", VA = "0x11439B0")]
		public static Vector3 GetFirstDerivative(Vector3 startPoint, Vector3 controlPoint, Vector3 endPosition, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1143B3C", Offset = "0x1143B3C", VA = "0x1143B3C")]
		public static Vector3 GetPoint(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage, bool evenDistribution, int distributionSteps)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x114408C", Offset = "0x114408C", VA = "0x114408C")]
		public static Vector3 GetFirstDerivative(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1143EA4", Offset = "0x1143EA4", VA = "0x1143EA4")]
		private static Vector3 Locate(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200018C")]
	public struct CurveDetail
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int currentCurve;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float currentCurvePercentage;

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xB2D0FC", Offset = "0xB2D0FC", VA = "0xB2D0FC")]
		public CurveDetail(int currentCurve, float currentCurvePercentage)
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum SplineDirection
	{
		[Token(Token = "0x4000C71")]
		Forward,
		[Token(Token = "0x4000C72")]
		Backwards
	}
	[Token(Token = "0x200018E")]
	[ExecuteInEditMode]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x200030B")]
		private class SplineReparam
		{
			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float length;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float percentage;

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xF3B790", Offset = "0xF3B790", VA = "0xF3B790")]
			public SplineReparam(float length, float percentage)
			{
			}
		}

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA6150C", Offset = "0xA6150C")]
		public float toolScale;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TangentMode defaultTangentMode;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SplineDirection direction;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool loop;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SplineFollower[] followers;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplineAnchor[] _anchors;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _curveCount;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _previousAnchorCount;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _previousChildCount;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _wasLooping;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool _previousLoopChoice;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool _anchorsChanged;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SplineDirection _previousDirection;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _curvePercentage;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _operatingCurve;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _currentCurve;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _previousLength;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _slicesPerCurve;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<SplineReparam> _splineReparams;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _lengthDirty;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61524", Offset = "0xA61524")]
		private float <Length>k__BackingField;

		[Token(Token = "0x17000047")]
		public float Length
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x1149F20", Offset = "0x1149F20", VA = "0x1149F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6564C", Offset = "0xA6564C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x1149F28", Offset = "0x1149F28", VA = "0x1149F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6565C", Offset = "0xA6565C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public SplineAnchor[] Anchors
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x1149F30", Offset = "0x1149F30", VA = "0x1149F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		public Color SecondaryColor
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x114A100", Offset = "0x114A100", VA = "0x114A100")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action OnSplineChanged
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x1149DD8", Offset = "0x1149DD8", VA = "0x1149DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6562C", Offset = "0xA6562C")]
			add
			{
			}
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x1149E7C", Offset = "0x1149E7C", VA = "0x1149E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6563C", Offset = "0xA6563C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x114A16C", Offset = "0x114A16C", VA = "0x114A16C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x114A80C", Offset = "0x114A80C", VA = "0x114A80C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x114AB18", Offset = "0x114AB18", VA = "0x114AB18")]
		private void HangleLengthChange()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x114AB38", Offset = "0x114AB38", VA = "0x114AB38")]
		private float Reparam(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x114AD4C", Offset = "0x114AD4C", VA = "0x114AD4C")]
		public void CalculateLength()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x114B140", Offset = "0x114B140", VA = "0x114B140")]
		public Vector3 Up(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x114B44C", Offset = "0x114B44C", VA = "0x114B44C")]
		public Vector3 Right(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x114B554", Offset = "0x114B554", VA = "0x114B554")]
		public Vector3 Forward(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x114B248", Offset = "0x114B248", VA = "0x114B248")]
		public Vector3 GetDirection(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x114AF34", Offset = "0x114AF34", VA = "0x114AF34")]
		public Vector3 GetPosition(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x114B6D0", Offset = "0x114B6D0", VA = "0x114B6D0")]
		public Vector3 GetPosition(float percentage, Vector3 relativeOffset, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x114B954", Offset = "0x114B954", VA = "0x114B954")]
		public float ClosestPoint(Vector3 point, int divisions = 100)
		{
			return default(float);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x114A1C8", Offset = "0x114A1C8", VA = "0x114A1C8")]
		public GameObject[] AddAnchors(int count)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x114B55C", Offset = "0x114B55C", VA = "0x114B55C")]
		public CurveDetail GetCurve(float percentage)
		{
			return default(CurveDetail);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x114BAD4", Offset = "0x114BAD4", VA = "0x114BAD4")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public enum TangentMode
	{
		[Token(Token = "0x4000C8B")]
		Mirrored,
		[Token(Token = "0x4000C8C")]
		Aligned,
		[Token(Token = "0x4000C8D")]
		Free
	}
	[Token(Token = "0x2000190")]
	[ExecuteInEditMode]
	public class SplineAnchor : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TangentMode tangentMode;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61534", Offset = "0xA61534")]
		private bool <RenderingChange>k__BackingField;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61544", Offset = "0xA61544")]
		private bool <Changed>k__BackingField;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool _initialized;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Transform _masterTangent;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Transform _slaveTangent;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TangentMode _previousTangentMode;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _previousInPosition;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _previousOutPosition;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _previousAnchorPosition;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds _skinnedBounds;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _anchor;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _inTangent;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _outTangent;

		[Token(Token = "0x1700004A")]
		public bool RenderingChange
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xF3B7C8", Offset = "0xF3B7C8", VA = "0xF3B7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6566C", Offset = "0xA6566C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xF3B7D0", Offset = "0xF3B7D0", VA = "0xF3B7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6567C", Offset = "0xA6567C")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public bool Changed
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xF3B7DC", Offset = "0xF3B7DC", VA = "0xF3B7DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6568C", Offset = "0xA6568C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xF3B7E4", Offset = "0xF3B7E4", VA = "0xF3B7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6569C", Offset = "0xA6569C")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Transform Anchor
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xF3B7F0", Offset = "0xF3B7F0", VA = "0xF3B7F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0xF3BC58", Offset = "0xF3BC58", VA = "0xF3BC58")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Transform InTangent
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xF3BC60", Offset = "0xF3BC60", VA = "0xF3BC60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0xF3BC90", Offset = "0xF3BC90", VA = "0xF3BC90")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Transform OutTangent
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0xF3BC98", Offset = "0xF3BC98", VA = "0xF3BC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xF3BCC8", Offset = "0xF3BCC8", VA = "0xF3BCC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xF3BCD0", Offset = "0xF3BCD0", VA = "0xF3BCD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xF3BCD4", Offset = "0xF3BCD4", VA = "0xF3BCD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xF3C044", Offset = "0xF3C044", VA = "0xF3C044")]
		private void TangentChanged()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xF3B820", Offset = "0xF3B820", VA = "0xF3B820")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xF3C338", Offset = "0xF3C338", VA = "0xF3C338")]
		public void SetTangentStatus(bool inStatus, bool outStatus)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xF3C3C4", Offset = "0xF3C3C4", VA = "0xF3C3C4")]
		public void Tilt(Vector3 angles)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xF3C4EC", Offset = "0xF3C4EC", VA = "0xF3C4EC")]
		public SplineAnchor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class SplineFollower
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float percentage;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool faceDirection;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _previousPercentage;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _previousFaceDirection;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool _detached;

		[Token(Token = "0x1700004F")]
		public bool WasMoved
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xF3C4F4", Offset = "0xF3C4F4", VA = "0xF3C4F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xF3C53C", Offset = "0xF3C53C", VA = "0xF3C53C")]
		public void UpdateOrientation(Spline spline)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xF3C72C", Offset = "0xF3C72C", VA = "0xF3C72C")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[SelectionBase]
	public class SplineTangent : MonoBehaviour
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xF3CC94", Offset = "0xF3CC94", VA = "0xF3CC94")]
		public SplineTangent()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C3DC", Offset = "0xA5C3DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C3DC", Offset = "0xA5C3DC")]
	public class SplineRenderer : MonoBehaviour
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentsPerCurve;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA615C4", Offset = "0xA615C4")]
		public float startPercentage;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA615DC", Offset = "0xA615DC")]
		public float endPercentage;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Spline _spline;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _initialized;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _previousAnchorsLength;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _previousSegmentsPerCurve;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _vertexCount;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _previousStart;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _previousEnd;

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xF3C73C", Offset = "0xF3C73C", VA = "0xF3C73C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xF3C880", Offset = "0xF3C880", VA = "0xF3C880")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xF3CB6C", Offset = "0xF3CB6C", VA = "0xF3CB6C")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xF3CA70", Offset = "0xF3CA70", VA = "0xF3CA70")]
		private void ConfigureLineRenderer()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xF3CC7C", Offset = "0xF3CC7C", VA = "0xF3CC7C")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class State : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x17000050")]
		public bool IsFirst
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xF3CC9C", Offset = "0xF3CC9C", VA = "0xF3CC9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public bool IsLast
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xF3CCCC", Offset = "0xF3CCCC", VA = "0xF3CCCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public StateMachine StateMachine
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xF3CD34", Offset = "0xF3CD34", VA = "0xF3CD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xF3CE68", Offset = "0xF3CE68", VA = "0xF3CE68")]
		public void ChangeState(int childIndex)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xF3CF94", Offset = "0xF3CF94", VA = "0xF3CF94")]
		public void ChangeState(GameObject state)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xF3D234", Offset = "0xF3D234", VA = "0xF3D234")]
		public void ChangeState(string state)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xF3D2E8", Offset = "0xF3D2E8", VA = "0xF3D2E8")]
		public GameObject Next()
		{
			return null;
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xF3D3E8", Offset = "0xF3D3E8", VA = "0xF3D3E8")]
		public GameObject Previous()
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF3D4C4", Offset = "0xF3D4C4", VA = "0xF3D4C4")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xF3D670", Offset = "0xF3D670", VA = "0xF3D670")]
		public State()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C478", Offset = "0xA5C478")]
	public class StateMachine : MonoBehaviour
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject defaultState;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject currentState;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _unityEventsFolded;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA615F4", Offset = "0xA615F4")]
		public bool verbose;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6162C", Offset = "0xA6162C")]
		public bool allowReentry;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA61664", Offset = "0xA61664")]
		public bool returnToDefaultOnDisable;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObjectEvent OnStateExited;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObjectEvent OnStateEntered;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnFirstStateEntered;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnFirstStateExited;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnLastStateEntered;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnLastStateExited;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6169C", Offset = "0xA6169C")]
		private bool <CleanSetup>k__BackingField;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _initialized;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _atFirst;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool _atLast;

		[Token(Token = "0x17000053")]
		public bool CleanSetup
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xF3D678", Offset = "0xF3D678", VA = "0xF3D678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656AC", Offset = "0xA656AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xF3D680", Offset = "0xF3D680", VA = "0xF3D680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656BC", Offset = "0xA656BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public bool AtFirst
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xF3D68C", Offset = "0xF3D68C", VA = "0xF3D68C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xF3D694", Offset = "0xF3D694", VA = "0xF3D694")]
			private set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public bool AtLast
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xF3D6C8", Offset = "0xF3D6C8", VA = "0xF3D6C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xF3D6D0", Offset = "0xF3D6D0", VA = "0xF3D6D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xF3D304", Offset = "0xF3D304", VA = "0xF3D304")]
		public GameObject Next()
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xF3D404", Offset = "0xF3D404", VA = "0xF3D404")]
		public GameObject Previous()
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xF3D4E0", Offset = "0xF3D4E0", VA = "0xF3D4E0")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xF3CE94", Offset = "0xF3CE94", VA = "0xF3CE94")]
		public GameObject ChangeState(int childIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xF3D7A8", Offset = "0xF3D7A8", VA = "0xF3D7A8")]
		public GameObject ChangeState(GameObject state)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xF3CFD8", Offset = "0xF3CFD8", VA = "0xF3CFD8")]
		public GameObject ChangeState(string state)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xF3DD04", Offset = "0xF3DD04", VA = "0xF3DD04")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xF3DD90", Offset = "0xF3DD90", VA = "0xF3DD90")]
		public void StartMachine()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xF3DBBC", Offset = "0xF3DBBC", VA = "0xF3DBBC")]
		private void Enter(GameObject state)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xF3D704", Offset = "0xF3D704", VA = "0xF3D704")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xF3DE3C", Offset = "0xF3DE3C", VA = "0xF3DE3C")]
		public StateMachine()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class Tween
	{
		[Token(Token = "0x200030C")]
		public enum TweenType
		{
			[Token(Token = "0x4001408")]
			Position,
			[Token(Token = "0x4001409")]
			Rotation,
			[Token(Token = "0x400140A")]
			LocalScale,
			[Token(Token = "0x400140B")]
			LightColor,
			[Token(Token = "0x400140C")]
			LightIntensity,
			[Token(Token = "0x400140D")]
			LightRange,
			[Token(Token = "0x400140E")]
			FieldOfView,
			[Token(Token = "0x400140F")]
			SpriteRendererColor,
			[Token(Token = "0x4001410")]
			RawImageColor,
			[Token(Token = "0x4001411")]
			ImageColor,
			[Token(Token = "0x4001412")]
			AnchoredPosition,
			[Token(Token = "0x4001413")]
			Size,
			[Token(Token = "0x4001414")]
			Volume,
			[Token(Token = "0x4001415")]
			Pitch,
			[Token(Token = "0x4001416")]
			PanStereo,
			[Token(Token = "0x4001417")]
			ShaderFloat,
			[Token(Token = "0x4001418")]
			ShaderColor,
			[Token(Token = "0x4001419")]
			ShaderInt,
			[Token(Token = "0x400141A")]
			ShaderVector,
			[Token(Token = "0x400141B")]
			Value,
			[Token(Token = "0x400141C")]
			TextMeshColor,
			[Token(Token = "0x400141D")]
			GUITextColor,
			[Token(Token = "0x400141E")]
			TextColor,
			[Token(Token = "0x400141F")]
			CanvasGroupAlpha,
			[Token(Token = "0x4001420")]
			Spline
		}

		[Token(Token = "0x200030D")]
		public enum LoopType
		{
			[Token(Token = "0x4001422")]
			None,
			[Token(Token = "0x4001423")]
			Loop,
			[Token(Token = "0x4001424")]
			PingPong
		}

		[Token(Token = "0x200030E")]
		public enum TweenStatus
		{
			[Token(Token = "0x4001426")]
			Delayed,
			[Token(Token = "0x4001427")]
			Running,
			[Token(Token = "0x4001428")]
			Canceled,
			[Token(Token = "0x4001429")]
			Stopped,
			[Token(Token = "0x400142A")]
			Finished
		}

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<TweenBase> activeTweens;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TweenEngine _instance;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AnimationCurve _easeIn;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AnimationCurve _easeInStrong;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AnimationCurve _easeOut;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AnimationCurve _easeOutStrong;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AnimationCurve _easeInOut;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AnimationCurve _easeInOutStrong;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static AnimationCurve _easeInBack;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static AnimationCurve _easeOutBack;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static AnimationCurve _easeInOutBack;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static AnimationCurve _easeSpring;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static AnimationCurve _easeBounce;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static AnimationCurve _easeWobble;

		[Token(Token = "0x17000056")]
		public static TweenEngine Instance
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xF3DE50", Offset = "0xF3DE50", VA = "0xF3DE50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		public static AnimationCurve EaseLinear
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xF3E1A0", Offset = "0xF3E1A0", VA = "0xF3E1A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		public static AnimationCurve EaseIn
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xF4588C", Offset = "0xF4588C", VA = "0xF4588C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public static AnimationCurve EaseInStrong
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xF45A48", Offset = "0xF45A48", VA = "0xF45A48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public static AnimationCurve EaseOut
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xF45D98", Offset = "0xF45D98", VA = "0xF45D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public static AnimationCurve EaseOutStrong
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xF45F54", Offset = "0xF45F54", VA = "0xF45F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public static AnimationCurve EaseInOut
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xF4629C", Offset = "0xF4629C", VA = "0xF4629C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		public static AnimationCurve EaseInOutStrong
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xF46378", Offset = "0xF46378", VA = "0xF46378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		public static AnimationCurve EaseInBack
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xF465A0", Offset = "0xF465A0", VA = "0xF465A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		public static AnimationCurve EaseOutBack
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xF46760", Offset = "0xF46760", VA = "0xF46760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public static AnimationCurve EaseInOutBack
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xF46920", Offset = "0xF46920", VA = "0xF46920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		public static AnimationCurve EaseSpring
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xF46AEC", Offset = "0xF46AEC", VA = "0xF46AEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public static AnimationCurve EaseBounce
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xF46DCC", Offset = "0xF46DCC", VA = "0xF46DCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public static AnimationCurve EaseWobble
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xF4722C", Offset = "0xF4722C", VA = "0xF4722C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xF3E080", Offset = "0xF3E080", VA = "0xF3E080")]
		public static TweenBase Shake(Transform target, Vector3 initialPosition, Vector3 intensity, float duration, float delay, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF3E37C", Offset = "0xF3E37C", VA = "0xF3E37C")]
		public static TweenBase Spline(Spline spline, Transform target, float startPercentage, float endPercentage, bool faceDirection, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF3E608", Offset = "0xF3E608", VA = "0xF3E608")]
		public static TweenBase CanvasGroupAlpha(CanvasGroup target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xF3E7C8", Offset = "0xF3E7C8", VA = "0xF3E7C8")]
		public static TweenBase CanvasGroupAlpha(CanvasGroup target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF3E8B0", Offset = "0xF3E8B0", VA = "0xF3E8B0")]
		public static TweenBase Value(Rect startValue, Rect endValue, Action<Rect> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xF3EAE4", Offset = "0xF3EAE4", VA = "0xF3EAE4")]
		public static TweenBase Value(Vector4 startValue, Vector4 endValue, Action<Vector4> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xF3ED18", Offset = "0xF3ED18", VA = "0xF3ED18")]
		public static TweenBase Value(Vector3 startValue, Vector3 endValue, Action<Vector3> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xF3EF2C", Offset = "0xF3EF2C", VA = "0xF3EF2C")]
		public static TweenBase Value(Vector2 startValue, Vector2 endValue, Action<Vector2> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xF3F110", Offset = "0xF3F110", VA = "0xF3F110")]
		public static TweenBase Value(Color startValue, Color endValue, Action<Color> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xF3F344", Offset = "0xF3F344", VA = "0xF3F344")]
		public static TweenBase Value(int startValue, int endValue, Action<int> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xF3F510", Offset = "0xF3F510", VA = "0xF3F510")]
		public static TweenBase Value(float startValue, float endValue, Action<float> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xF3F6CC", Offset = "0xF3F6CC", VA = "0xF3F6CC")]
		public static TweenBase ShaderVector(Material target, string propertyName, Vector4 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xF3F8E8", Offset = "0xF3F8E8", VA = "0xF3F8E8")]
		public static TweenBase ShaderVector(Material target, string propertyName, Vector4 startValue, Vector4 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xF3FA1C", Offset = "0xF3FA1C", VA = "0xF3FA1C")]
		public static TweenBase ShaderInt(Material target, string propertyName, int endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xF3FC00", Offset = "0xF3FC00", VA = "0xF3FC00")]
		public static TweenBase ShaderInt(Material target, string propertyName, int startValue, int endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xF3FCF4", Offset = "0xF3FCF4", VA = "0xF3FCF4")]
		public static TweenBase ShaderColor(Material target, string propertyName, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF3FF10", Offset = "0xF3FF10", VA = "0xF3FF10")]
		public static TweenBase ShaderColor(Material target, string propertyName, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xF40044", Offset = "0xF40044", VA = "0xF40044")]
		public static TweenBase ShaderFloat(Material target, string propertyName, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xF40228", Offset = "0xF40228", VA = "0xF40228")]
		public static TweenBase ShaderFloat(Material target, string propertyName, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xF4031C", Offset = "0xF4031C", VA = "0xF4031C")]
		public static TweenBase Pitch(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF404DC", Offset = "0xF404DC", VA = "0xF404DC")]
		public static TweenBase Pitch(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xF405C4", Offset = "0xF405C4", VA = "0xF405C4")]
		public static TweenBase PanStereo(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF40784", Offset = "0xF40784", VA = "0xF40784")]
		public static TweenBase PanStereo(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF4086C", Offset = "0xF4086C", VA = "0xF4086C")]
		public static TweenBase Volume(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF40A2C", Offset = "0xF40A2C", VA = "0xF40A2C")]
		public static TweenBase Volume(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF40B14", Offset = "0xF40B14", VA = "0xF40B14")]
		public static TweenBase Size(RectTransform target, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF40CE0", Offset = "0xF40CE0", VA = "0xF40CE0")]
		public static TweenBase Size(RectTransform target, Vector2 startValue, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF40DE0", Offset = "0xF40DE0", VA = "0xF40DE0")]
		public static TweenBase FieldOfView(Camera target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF40FA0", Offset = "0xF40FA0", VA = "0xF40FA0")]
		public static TweenBase FieldOfView(Camera target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF41088", Offset = "0xF41088", VA = "0xF41088")]
		public static TweenBase LightRange(Light target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF41248", Offset = "0xF41248", VA = "0xF41248")]
		public static TweenBase LightRange(Light target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF41330", Offset = "0xF41330", VA = "0xF41330")]
		public static TweenBase LightIntensity(Light target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF414F0", Offset = "0xF414F0", VA = "0xF414F0")]
		public static TweenBase LightIntensity(Light target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF415D8", Offset = "0xF415D8", VA = "0xF415D8")]
		public static TweenBase LocalScale(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF417C4", Offset = "0xF417C4", VA = "0xF417C4")]
		public static TweenBase LocalScale(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF418DC", Offset = "0xF418DC", VA = "0xF418DC")]
		public static TweenBase Color(RawImage target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF41AD4", Offset = "0xF41AD4", VA = "0xF41AD4")]
		public static TweenBase Color(RawImage target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF41BFC", Offset = "0xF41BFC", VA = "0xF41BFC")]
		public static TweenBase Color(Image target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF41DF4", Offset = "0xF41DF4", VA = "0xF41DF4")]
		public static TweenBase Color(Image target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF41F1C", Offset = "0xF41F1C", VA = "0xF41F1C")]
		public static TweenBase Color(Text target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF42114", Offset = "0xF42114", VA = "0xF42114")]
		public static TweenBase Color(Text target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF4223C", Offset = "0xF4223C", VA = "0xF4223C")]
		public static TweenBase Color(Light target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF42434", Offset = "0xF42434", VA = "0xF42434")]
		public static TweenBase Color(Light target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF42554", Offset = "0xF42554", VA = "0xF42554")]
		public static TweenBase Color(TextMesh target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF4274C", Offset = "0xF4274C", VA = "0xF4274C")]
		public static TweenBase Color(TextMesh target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xF4286C", Offset = "0xF4286C", VA = "0xF4286C")]
		public static TweenBase Color(Material target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF42994", Offset = "0xF42994", VA = "0xF42994")]
		public static TweenBase Color(Material target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF42AB4", Offset = "0xF42AB4", VA = "0xF42AB4")]
		public static TweenBase Color(Renderer target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF42BBC", Offset = "0xF42BBC", VA = "0xF42BBC")]
		public static TweenBase Color(Renderer target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF42CE4", Offset = "0xF42CE4", VA = "0xF42CE4")]
		public static TweenBase Color(SpriteRenderer target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF42EDC", Offset = "0xF42EDC", VA = "0xF42EDC")]
		public static TweenBase Color(SpriteRenderer target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF42FFC", Offset = "0xF42FFC", VA = "0xF42FFC")]
		public static TweenBase Color(Camera target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF431F4", Offset = "0xF431F4", VA = "0xF431F4")]
		public static TweenBase Color(Camera target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF43314", Offset = "0xF43314", VA = "0xF43314")]
		public static TweenBase Position(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xF43500", Offset = "0xF43500", VA = "0xF43500")]
		public static TweenBase Position(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xF43618", Offset = "0xF43618", VA = "0xF43618")]
		public static TweenBase AnchoredPosition(RectTransform target, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF437E4", Offset = "0xF437E4", VA = "0xF437E4")]
		public static TweenBase AnchoredPosition(RectTransform target, Vector2 startValue, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xF438E4", Offset = "0xF438E4", VA = "0xF438E4")]
		public static TweenBase LocalPosition(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF43AD0", Offset = "0xF43AD0", VA = "0xF43AD0")]
		public static TweenBase LocalPosition(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xF43BE8", Offset = "0xF43BE8", VA = "0xF43BE8")]
		public static TweenBase Rotate(Transform target, Vector3 amount, Space space, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xF43DEC", Offset = "0xF43DEC", VA = "0xF43DEC")]
		public static TweenBase Rotation(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xF44038", Offset = "0xF44038", VA = "0xF44038")]
		public static TweenBase Rotation(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xF441F0", Offset = "0xF441F0", VA = "0xF441F0")]
		public static TweenBase Rotation(Transform target, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xF44318", Offset = "0xF44318", VA = "0xF44318")]
		public static TweenBase Rotation(Transform target, Quaternion startValue, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xF44438", Offset = "0xF44438", VA = "0xF44438")]
		public static TweenBase LocalRotation(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xF44684", Offset = "0xF44684", VA = "0xF44684")]
		public static TweenBase LocalRotation(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xF4483C", Offset = "0xF4483C", VA = "0xF4483C")]
		public static TweenBase LocalRotation(Transform target, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xF44964", Offset = "0xF44964", VA = "0xF44964")]
		public static TweenBase LocalRotation(Transform target, Quaternion startValue, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xF44A84", Offset = "0xF44A84", VA = "0xF44A84")]
		public static TweenBase LookAt(Transform target, Transform targetToLookAt, Vector3 up, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF44C5C", Offset = "0xF44C5C", VA = "0xF44C5C")]
		public static TweenBase LookAt(Transform target, Vector3 positionToLookAt, Vector3 up, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xF44E14", Offset = "0xF44E14", VA = "0xF44E14")]
		public static void Stop(int targetInstanceID, TweenType tweenType)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF45028", Offset = "0xF45028", VA = "0xF45028")]
		public static void Stop(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF451D4", Offset = "0xF451D4", VA = "0xF451D4")]
		public static void StopAll()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF452EC", Offset = "0xF452EC", VA = "0xF452EC")]
		public static void FinishAll()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF45410", Offset = "0xF45410", VA = "0xF45410")]
		public static void Finish(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF455BC", Offset = "0xF455BC", VA = "0xF455BC")]
		public static void Cancel(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF45768", Offset = "0xF45768", VA = "0xF45768")]
		public static void CancelAll()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF4508C", Offset = "0xF4508C", VA = "0xF4508C")]
		private static void StopInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF475B8", Offset = "0xF475B8", VA = "0xF475B8")]
		private static void StopInstanceTargetType(int id, TweenType type)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF45474", Offset = "0xF45474", VA = "0xF45474")]
		private static void FinishInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF45620", Offset = "0xF45620", VA = "0xF45620")]
		private static void CancelInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF3E2A0", Offset = "0xF3E2A0", VA = "0xF3E2A0")]
		private static void SendTweenForProcessing(TweenBase tween, bool interrupt = false)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF477E8", Offset = "0xF477E8", VA = "0xF477E8")]
		public Tween()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class Initialization : MonoBehaviour
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DisplayObject _displayObject;

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x11497DC", Offset = "0x11497DC", VA = "0x11497DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1149AEC", Offset = "0x1149AEC", VA = "0x1149AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1149B80", Offset = "0x1149B80", VA = "0x1149B80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1149910", Offset = "0x1149910", VA = "0x1149910")]
		private void InitializeSingleton()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1149CE4", Offset = "0x1149CE4", VA = "0x1149CE4")]
		public Initialization()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class LayerMaskHelper
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1149CEC", Offset = "0x1149CEC", VA = "0x1149CEC")]
		public static int OnlyIncluding(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1149D64", Offset = "0x1149D64", VA = "0x1149D64")]
		public static int Everything()
		{
			return default(int);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1149D6C", Offset = "0x1149D6C", VA = "0x1149D6C")]
		public static int Default()
		{
			return default(int);
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1149D74", Offset = "0x1149D74", VA = "0x1149D74")]
		public static int Nothing()
		{
			return default(int);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1149D7C", Offset = "0x1149D7C", VA = "0x1149D7C")]
		public static int EverythingBut(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1149D94", Offset = "0x1149D94", VA = "0x1149D94")]
		public static bool ContainsLayer(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1149CF0", Offset = "0x1149CF0", VA = "0x1149CF0")]
		private static int MakeMask(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1149DD0", Offset = "0x1149DD0", VA = "0x1149DD0")]
		public LayerMaskHelper()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public static class CoreMath
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1148B48", Offset = "0x1148B48", VA = "0x1148B48")]
		public static float LinearInterpolate(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1148B58", Offset = "0x1148B58", VA = "0x1148B58")]
		public static Vector2 LinearInterpolate(Vector2 from, Vector2 to, float percentage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1148B9C", Offset = "0x1148B9C", VA = "0x1148B9C")]
		public static Vector3 LinearInterpolate(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1148BF4", Offset = "0x1148BF4", VA = "0x1148BF4")]
		public static Vector4 LinearInterpolate(Vector4 from, Vector4 to, float percentage)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1148C58", Offset = "0x1148C58", VA = "0x1148C58")]
		public static Rect LinearInterpolate(Rect from, Rect to, float percentage)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1148D60", Offset = "0x1148D60", VA = "0x1148D60")]
		public static Color LinearInterpolate(Color from, Color to, float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1148DC4", Offset = "0x1148DC4", VA = "0x1148DC4")]
		public static float EvaluateCurve(AnimationCurve curve, float percentage)
		{
			return default(float);
		}
	}
}
namespace Pixelplacement.TweenSystem
{
	[Token(Token = "0x200019A")]
	public abstract class TweenBase
	{
		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int targetInstanceID;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Tween.TweenType tweenType;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616AC", Offset = "0xA616AC")]
		private Tween.TweenStatus <Status>k__BackingField;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616BC", Offset = "0xA616BC")]
		private float <Duration>k__BackingField;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616CC", Offset = "0xA616CC")]
		private AnimationCurve <Curve>k__BackingField;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616DC", Offset = "0xA616DC")]
		private Keyframe[] <CurveKeys>k__BackingField;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616EC", Offset = "0xA616EC")]
		private bool <ObeyTimescale>k__BackingField;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA616FC", Offset = "0xA616FC")]
		private Action <StartCallback>k__BackingField;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6170C", Offset = "0xA6170C")]
		private Action <CompleteCallback>k__BackingField;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6171C", Offset = "0xA6171C")]
		private float <Delay>k__BackingField;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6172C", Offset = "0xA6172C")]
		private Tween.LoopType <LoopType>k__BackingField;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6173C", Offset = "0xA6173C")]
		private float <Percentage>k__BackingField;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float elapsedTime;

		[Token(Token = "0x17000064")]
		public Tween.TweenStatus Status
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xF4A9F4", Offset = "0xF4A9F4", VA = "0xF4A9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656CC", Offset = "0xA656CC")]
			get
			{
				return default(Tween.TweenStatus);
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xF4A9FC", Offset = "0xF4A9FC", VA = "0xF4A9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656DC", Offset = "0xA656DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public float Duration
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xF4AA04", Offset = "0xF4AA04", VA = "0xF4AA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656EC", Offset = "0xA656EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xF4AA0C", Offset = "0xF4AA0C", VA = "0xF4AA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA656FC", Offset = "0xA656FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public AnimationCurve Curve
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xF4AA14", Offset = "0xF4AA14", VA = "0xF4AA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6570C", Offset = "0xA6570C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xF4AA1C", Offset = "0xF4AA1C", VA = "0xF4AA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6571C", Offset = "0xA6571C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public Keyframe[] CurveKeys
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xF4AA24", Offset = "0xF4AA24", VA = "0xF4AA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6572C", Offset = "0xA6572C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xF4AA2C", Offset = "0xF4AA2C", VA = "0xF4AA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6573C", Offset = "0xA6573C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool ObeyTimescale
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xF4AA34", Offset = "0xF4AA34", VA = "0xF4AA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6574C", Offset = "0xA6574C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xF4AA3C", Offset = "0xF4AA3C", VA = "0xF4AA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6575C", Offset = "0xA6575C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public Action StartCallback
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xF4AA48", Offset = "0xF4AA48", VA = "0xF4AA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6576C", Offset = "0xA6576C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xF4AA50", Offset = "0xF4AA50", VA = "0xF4AA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6577C", Offset = "0xA6577C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public Action CompleteCallback
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xF4AA58", Offset = "0xF4AA58", VA = "0xF4AA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6578C", Offset = "0xA6578C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xF4AA60", Offset = "0xF4AA60", VA = "0xF4AA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6579C", Offset = "0xA6579C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public float Delay
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xF4AA68", Offset = "0xF4AA68", VA = "0xF4AA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657AC", Offset = "0xA657AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xF4AA70", Offset = "0xF4AA70", VA = "0xF4AA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657BC", Offset = "0xA657BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public Tween.LoopType LoopType
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xF4AA78", Offset = "0xF4AA78", VA = "0xF4AA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657CC", Offset = "0xA657CC")]
			get
			{
				return default(Tween.LoopType);
			}
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xF4AA80", Offset = "0xF4AA80", VA = "0xF4AA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657DC", Offset = "0xA657DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public float Percentage
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xF4AA88", Offset = "0xF4AA88", VA = "0xF4AA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657EC", Offset = "0xA657EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xF4AA90", Offset = "0xF4AA90", VA = "0xF4AA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA657FC", Offset = "0xA657FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF4501C", Offset = "0xF4501C", VA = "0xF4501C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF4AA98", Offset = "0xF4AA98", VA = "0xF4AA98")]
		public void Start()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF4AB44", Offset = "0xF4AB44", VA = "0xF4AB44")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF4ABD4", Offset = "0xF4ABD4", VA = "0xF4ABD4")]
		public void Rewind()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF45880", Offset = "0xF45880", VA = "0xF45880")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF45404", Offset = "0xF45404", VA = "0xF45404")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF4ABEC", Offset = "0xF4ABEC", VA = "0xF4ABEC")]
		public bool Tick()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF47B08", Offset = "0xF47B08", VA = "0xF47B08")]
		protected void ResetStartTime()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xF47880", Offset = "0xF47880", VA = "0xF47880")]
		protected void SetEssentials(Tween.TweenType tweenType, int targetInstanceID, float duration, float delay, bool obeyTimeScale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C0A")]
		protected abstract bool SetStartValue();

		[Token(Token = "0x6000C0B")]
		protected abstract void Operation(float percentage);

		[Token(Token = "0x6000C0C")]
		public abstract void Loop();

		[Token(Token = "0x6000C0D")]
		public abstract void PingPong();

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xF47878", Offset = "0xF47878", VA = "0xF47878")]
		protected TweenBase()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class TweenEngine : MonoBehaviour
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xF47764", Offset = "0xF47764", VA = "0xF47764")]
		public void ExecuteTween(TweenBase tween)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF4AF74", Offset = "0xF4AF74", VA = "0xF4AF74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF4B0A4", Offset = "0xF4B0A4", VA = "0xF4B0A4")]
		public TweenEngine()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class TweenUtilities : MonoBehaviour
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF4B0AC", Offset = "0xF4B0AC", VA = "0xF4B0AC")]
		public static void GenerateAnimationCurvePropertyCode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xF47E54", Offset = "0xF47E54", VA = "0xF47E54")]
		public static float LinearInterpolate(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF47A94", Offset = "0xF47A94", VA = "0xF47A94")]
		public static Vector2 LinearInterpolate(Vector2 from, Vector2 to, float percentage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xF487A0", Offset = "0xF487A0", VA = "0xF487A0")]
		public static Vector3 LinearInterpolate(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xF48A08", Offset = "0xF48A08", VA = "0xF48A08")]
		public static Vector3 LinearInterpolateRotational(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xF49DD0", Offset = "0xF49DD0", VA = "0xF49DD0")]
		public static Vector4 LinearInterpolate(Vector4 from, Vector4 to, float percentage)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF4B618", Offset = "0xF4B618", VA = "0xF4B618")]
		public static Rect LinearInterpolate(Rect from, Rect to, float percentage)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xF47C78", Offset = "0xF47C78", VA = "0xF47C78")]
		public static Color LinearInterpolate(Color from, Color to, float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF4AEE8", Offset = "0xF4AEE8", VA = "0xF4AEE8")]
		public static float EvaluateCurve(AnimationCurve curve, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xF4B544", Offset = "0xF4B544", VA = "0xF4B544")]
		private static float CylindricalLerp(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF4B720", Offset = "0xF4B720", VA = "0xF4B720")]
		public TweenUtilities()
		{
		}
	}
	[Token(Token = "0x200019D")]
	internal class AnchoredPosition : TweenBase
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6174C", Offset = "0xA6174C")]
		private Vector2 <EndValue>k__BackingField;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _target;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x1700006E")]
		public Vector2 EndValue
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xF47868", Offset = "0xF47868", VA = "0xF47868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6580C", Offset = "0xA6580C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xF47870", Offset = "0xF47870", VA = "0xF47870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6581C", Offset = "0xA6581C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF43714", Offset = "0xF43714", VA = "0xF43714")]
		public AnchoredPosition(RectTransform target, Vector2 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF47948", Offset = "0xF47948", VA = "0xF47948", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF479E4", Offset = "0xF479E4", VA = "0xF479E4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF47AD8", Offset = "0xF47AD8", VA = "0xF47AD8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF47B18", Offset = "0xF47B18", VA = "0xF47B18", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x200019E")]
	internal class CameraBackgroundColor : TweenBase
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6175C", Offset = "0xA6175C")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera _target;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x1700006F")]
		public Color EndValue
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xF47B70", Offset = "0xF47B70", VA = "0xF47B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6582C", Offset = "0xA6582C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xF47B7C", Offset = "0xF47B7C", VA = "0xF47B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6583C", Offset = "0xA6583C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xF43110", Offset = "0xF43110", VA = "0xF43110")]
		public CameraBackgroundColor(Camera target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xF47B88", Offset = "0xF47B88", VA = "0xF47B88", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xF47C28", Offset = "0xF47C28", VA = "0xF47C28", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xF47CDC", Offset = "0xF47CDC", VA = "0xF47CDC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF47D10", Offset = "0xF47D10", VA = "0xF47D10", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x200019F")]
	internal class CanvasGroupAlpha : TweenBase
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6176C", Offset = "0xA6176C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CanvasGroup _target;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000070")]
		public float EndValue
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xF47D74", Offset = "0xF47D74", VA = "0xF47D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6584C", Offset = "0xA6584C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xF47D7C", Offset = "0xF47D7C", VA = "0xF47D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6585C", Offset = "0xA6585C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xF3E6FC", Offset = "0xF3E6FC", VA = "0xF3E6FC")]
		public CanvasGroupAlpha(CanvasGroup target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xF47D84", Offset = "0xF47D84", VA = "0xF47D84", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xF47E20", Offset = "0xF47E20", VA = "0xF47E20", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xF47E64", Offset = "0xF47E64", VA = "0xF47E64", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xF47E94", Offset = "0xF47E94", VA = "0xF47E94", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	internal class FieldOfView : TweenBase
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6177C", Offset = "0xA6177C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera _target;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000071")]
		public float EndValue
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xF47EF0", Offset = "0xF47EF0", VA = "0xF47EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6586C", Offset = "0xA6586C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xF47EF8", Offset = "0xF47EF8", VA = "0xF47EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6587C", Offset = "0xA6587C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xF40ED4", Offset = "0xF40ED4", VA = "0xF40ED4")]
		public FieldOfView(Camera target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xF47F00", Offset = "0xF47F00", VA = "0xF47F00", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xF47F9C", Offset = "0xF47F9C", VA = "0xF47F9C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xF47FD0", Offset = "0xF47FD0", VA = "0xF47FD0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xF48000", Offset = "0xF48000", VA = "0xF48000", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	internal class ImageColor : TweenBase
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6178C", Offset = "0xA6178C")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image _target;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000072")]
		public Color EndValue
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xF4805C", Offset = "0xF4805C", VA = "0xF4805C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6588C", Offset = "0xA6588C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xF48068", Offset = "0xF48068", VA = "0xF48068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6589C", Offset = "0xA6589C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xF41D10", Offset = "0xF41D10", VA = "0xF41D10")]
		public ImageColor(Image target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xF48074", Offset = "0xF48074", VA = "0xF48074", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xF4811C", Offset = "0xF4811C", VA = "0xF4811C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xF48174", Offset = "0xF48174", VA = "0xF48174", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xF481B0", Offset = "0xF481B0", VA = "0xF481B0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	internal class LightColor : TweenBase
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6179C", Offset = "0xA6179C")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Light _target;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000073")]
		public Color EndValue
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xF48224", Offset = "0xF48224", VA = "0xF48224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658AC", Offset = "0xA658AC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xF48230", Offset = "0xF48230", VA = "0xF48230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658BC", Offset = "0xA658BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xF42350", Offset = "0xF42350", VA = "0xF42350")]
		public LightColor(Light target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xF4823C", Offset = "0xF4823C", VA = "0xF4823C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xF482DC", Offset = "0xF482DC", VA = "0xF482DC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xF4832C", Offset = "0xF4832C", VA = "0xF4832C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xF48360", Offset = "0xF48360", VA = "0xF48360", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	internal class LightIntensity : TweenBase
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617AC", Offset = "0xA617AC")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light _target;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000074")]
		public float EndValue
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xF483C4", Offset = "0xF483C4", VA = "0xF483C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658CC", Offset = "0xA658CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xF483CC", Offset = "0xF483CC", VA = "0xF483CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658DC", Offset = "0xA658DC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xF41424", Offset = "0xF41424", VA = "0xF41424")]
		public LightIntensity(Light target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xF483D4", Offset = "0xF483D4", VA = "0xF483D4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xF48470", Offset = "0xF48470", VA = "0xF48470", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xF484A4", Offset = "0xF484A4", VA = "0xF484A4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xF484D4", Offset = "0xF484D4", VA = "0xF484D4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	internal class LightRange : TweenBase
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617BC", Offset = "0xA617BC")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light _target;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000075")]
		public float EndValue
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0xF48530", Offset = "0xF48530", VA = "0xF48530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658EC", Offset = "0xA658EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xF48538", Offset = "0xF48538", VA = "0xF48538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA658FC", Offset = "0xA658FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xF4117C", Offset = "0xF4117C", VA = "0xF4117C")]
		public LightRange(Light target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xF48540", Offset = "0xF48540", VA = "0xF48540", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xF485DC", Offset = "0xF485DC", VA = "0xF485DC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xF48610", Offset = "0xF48610", VA = "0xF48610", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xF48640", Offset = "0xF48640", VA = "0xF48640", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	internal class LocalPosition : TweenBase
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617CC", Offset = "0xA617CC")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000076")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xF4869C", Offset = "0xF4869C", VA = "0xF4869C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6590C", Offset = "0xA6590C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xF486A8", Offset = "0xF486A8", VA = "0xF486A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6591C", Offset = "0xA6591C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xF439F0", Offset = "0xF439F0", VA = "0xF439F0")]
		public LocalPosition(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xF486B4", Offset = "0xF486B4", VA = "0xF486B4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xF48754", Offset = "0xF48754", VA = "0xF48754", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xF487F8", Offset = "0xF487F8", VA = "0xF487F8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xF4882C", Offset = "0xF4882C", VA = "0xF4882C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	internal class LocalRotation : TweenBase
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617DC", Offset = "0xA617DC")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000077")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xF48894", Offset = "0xF48894", VA = "0xF48894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6592C", Offset = "0xA6592C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xF488A0", Offset = "0xF488A0", VA = "0xF488A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6593C", Offset = "0xA6593C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xF445A4", Offset = "0xF445A4", VA = "0xF445A4")]
		public LocalRotation(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xF488AC", Offset = "0xF488AC", VA = "0xF488AC", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xF4894C", Offset = "0xF4894C", VA = "0xF4894C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xF48AA8", Offset = "0xF48AA8", VA = "0xF48AA8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xF48ADC", Offset = "0xF48ADC", VA = "0xF48ADC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	internal class LocalScale : TweenBase
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617EC", Offset = "0xA617EC")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000078")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xF48B44", Offset = "0xF48B44", VA = "0xF48B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6594C", Offset = "0xA6594C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xF48B50", Offset = "0xF48B50", VA = "0xF48B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6595C", Offset = "0xA6595C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xF416E4", Offset = "0xF416E4", VA = "0xF416E4")]
		public LocalScale(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xF48B5C", Offset = "0xF48B5C", VA = "0xF48B5C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xF48BFC", Offset = "0xF48BFC", VA = "0xF48BFC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xF48C48", Offset = "0xF48C48", VA = "0xF48C48", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xF48C7C", Offset = "0xF48C7C", VA = "0xF48C7C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	internal class PanStereo : TweenBase
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA617FC", Offset = "0xA617FC")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000079")]
		public float EndValue
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xF48CE4", Offset = "0xF48CE4", VA = "0xF48CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6596C", Offset = "0xA6596C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0xF48CEC", Offset = "0xF48CEC", VA = "0xF48CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6597C", Offset = "0xA6597C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xF406B8", Offset = "0xF406B8", VA = "0xF406B8")]
		public PanStereo(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xF48CF4", Offset = "0xF48CF4", VA = "0xF48CF4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF48D90", Offset = "0xF48D90", VA = "0xF48D90", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF48DC4", Offset = "0xF48DC4", VA = "0xF48DC4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xF48DF4", Offset = "0xF48DF4", VA = "0xF48DF4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	internal class Pitch : TweenBase
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6180C", Offset = "0xA6180C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700007A")]
		public float EndValue
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0xF48E50", Offset = "0xF48E50", VA = "0xF48E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6598C", Offset = "0xA6598C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xF48E58", Offset = "0xF48E58", VA = "0xF48E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6599C", Offset = "0xA6599C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xF40410", Offset = "0xF40410", VA = "0xF40410")]
		public Pitch(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xF48E60", Offset = "0xF48E60", VA = "0xF48E60", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xF48EFC", Offset = "0xF48EFC", VA = "0xF48EFC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xF48F30", Offset = "0xF48F30", VA = "0xF48F30", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xF48F60", Offset = "0xF48F60", VA = "0xF48F60", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	internal class Position : TweenBase
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6181C", Offset = "0xA6181C")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x1700007B")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xF48FBC", Offset = "0xF48FBC", VA = "0xF48FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659AC", Offset = "0xA659AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xF48FC8", Offset = "0xF48FC8", VA = "0xF48FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659BC", Offset = "0xA659BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xF43420", Offset = "0xF43420", VA = "0xF43420")]
		public Position(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xF48FD4", Offset = "0xF48FD4", VA = "0xF48FD4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xF49074", Offset = "0xF49074", VA = "0xF49074", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xF490C0", Offset = "0xF490C0", VA = "0xF490C0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xF490F4", Offset = "0xF490F4", VA = "0xF490F4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	internal class RawImageColor : TweenBase
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6182C", Offset = "0xA6182C")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RawImage _target;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x1700007C")]
		public Color EndValue
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xF4915C", Offset = "0xF4915C", VA = "0xF4915C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659CC", Offset = "0xA659CC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xF49168", Offset = "0xF49168", VA = "0xF49168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659DC", Offset = "0xA659DC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF419F0", Offset = "0xF419F0", VA = "0xF419F0")]
		public RawImageColor(RawImage target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF49174", Offset = "0xF49174", VA = "0xF49174", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF4921C", Offset = "0xF4921C", VA = "0xF4921C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF49274", Offset = "0xF49274", VA = "0xF49274", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF492B0", Offset = "0xF492B0", VA = "0xF492B0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	internal class Rotate : TweenBase
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6183C", Offset = "0xA6183C")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Space _space;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _previous;

		[Token(Token = "0x1700007D")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xF49324", Offset = "0xF49324", VA = "0xF49324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659EC", Offset = "0xA659EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xF49330", Offset = "0xF49330", VA = "0xF49330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA659FC", Offset = "0xA659FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xF43D04", Offset = "0xF43D04", VA = "0xF43D04")]
		public Rotate(Transform target, Vector3 endValue, Space space, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xF4933C", Offset = "0xF4933C", VA = "0xF4933C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF493DC", Offset = "0xF493DC", VA = "0xF493DC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xF494EC", Offset = "0xF494EC", VA = "0xF494EC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xF49568", Offset = "0xF49568", VA = "0xF49568", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	internal class Rotation : TweenBase
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6184C", Offset = "0xA6184C")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x1700007E")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xF49608", Offset = "0xF49608", VA = "0xF49608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A0C", Offset = "0xA65A0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xF49614", Offset = "0xF49614", VA = "0xF49614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A1C", Offset = "0xA65A1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF43F58", Offset = "0xF43F58", VA = "0xF43F58")]
		public Rotation(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF49620", Offset = "0xF49620", VA = "0xF49620", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xF496C0", Offset = "0xF496C0", VA = "0xF496C0", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF4977C", Offset = "0xF4977C", VA = "0xF4977C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xF497B0", Offset = "0xF497B0", VA = "0xF497B0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	internal class ShaderColor : TweenBase
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6185C", Offset = "0xA6185C")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _target;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _propertyName;

		[Token(Token = "0x1700007F")]
		public Color EndValue
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xF49818", Offset = "0xF49818", VA = "0xF49818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A2C", Offset = "0xA65A2C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xF49824", Offset = "0xF49824", VA = "0xF49824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A3C", Offset = "0xA65A3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xF3FE18", Offset = "0xF3FE18", VA = "0xF3FE18")]
		public ShaderColor(Material target, string propertyName, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xF49830", Offset = "0xF49830", VA = "0xF49830", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xF498CC", Offset = "0xF498CC", VA = "0xF498CC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xF49920", Offset = "0xF49920", VA = "0xF49920", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xF49958", Offset = "0xF49958", VA = "0xF49958", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	internal class ShaderFloat : TweenBase
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6186C", Offset = "0xA6186C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _target;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _propertyName;

		[Token(Token = "0x17000080")]
		public float EndValue
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xF499C4", Offset = "0xF499C4", VA = "0xF499C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A4C", Offset = "0xA65A4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xF499CC", Offset = "0xF499CC", VA = "0xF499CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A5C", Offset = "0xA65A5C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xF40148", Offset = "0xF40148", VA = "0xF40148")]
		public ShaderFloat(Material target, string propertyName, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xF499D4", Offset = "0xF499D4", VA = "0xF499D4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xF49A6C", Offset = "0xF49A6C", VA = "0xF49A6C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xF49AA4", Offset = "0xF49AA4", VA = "0xF49AA4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xF49AD8", Offset = "0xF49AD8", VA = "0xF49AD8", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	internal class ShaderInt : TweenBase
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6187C", Offset = "0xA6187C")]
		private int <EndValue>k__BackingField;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _target;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _start;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _propertyName;

		[Token(Token = "0x17000081")]
		public int EndValue
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xF49B3C", Offset = "0xF49B3C", VA = "0xF49B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A6C", Offset = "0xA65A6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xF49B44", Offset = "0xF49B44", VA = "0xF49B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A7C", Offset = "0xA65A7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xF3FB20", Offset = "0xF3FB20", VA = "0xF3FB20")]
		public ShaderInt(Material target, string propertyName, int endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xF49B4C", Offset = "0xF49B4C", VA = "0xF49B4C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xF49BE4", Offset = "0xF49BE4", VA = "0xF49BE4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xF49C28", Offset = "0xF49C28", VA = "0xF49C28", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xF49C5C", Offset = "0xF49C5C", VA = "0xF49C5C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	internal class ShaderVector : TweenBase
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6188C", Offset = "0xA6188C")]
		private Vector4 <EndValue>k__BackingField;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _target;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4 _start;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _propertyName;

		[Token(Token = "0x17000082")]
		public Vector4 EndValue
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xF49CC0", Offset = "0xF49CC0", VA = "0xF49CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A8C", Offset = "0xA65A8C")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xF49CCC", Offset = "0xF49CCC", VA = "0xF49CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65A9C", Offset = "0xA65A9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xF3F7F0", Offset = "0xF3F7F0", VA = "0xF3F7F0")]
		public ShaderVector(Material target, string propertyName, Vector4 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xF49CD8", Offset = "0xF49CD8", VA = "0xF49CD8", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xF49D7C", Offset = "0xF49D7C", VA = "0xF49D7C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xF49E34", Offset = "0xF49E34", VA = "0xF49E34", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xF49E6C", Offset = "0xF49E6C", VA = "0xF49E6C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	internal class ShakePosition : TweenBase
	{
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6189C", Offset = "0xA6189C")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _intensity;

		[Token(Token = "0x17000083")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xF49ED8", Offset = "0xF49ED8", VA = "0xF49ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65AAC", Offset = "0xA65AAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xF49EE4", Offset = "0xF49EE4", VA = "0xF49EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65ABC", Offset = "0xA65ABC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xF3E1A8", Offset = "0xF3E1A8", VA = "0xF3E1A8")]
		public ShakePosition(Transform target, Vector3 initialPosition, Vector3 intensity, float duration, float delay, AnimationCurve curve, Action startCallback, Action completeCallback, Tween.LoopType loop, bool obeyTimescale)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xF49EF0", Offset = "0xF49EF0", VA = "0xF49EF0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xF49F6C", Offset = "0xF49F6C", VA = "0xF49F6C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xF4A0A0", Offset = "0xF4A0A0", VA = "0xF4A0A0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xF4A0D4", Offset = "0xF4A0D4", VA = "0xF4A0D4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	internal class Size : TweenBase
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618AC", Offset = "0xA618AC")]
		private Vector2 <EndValue>k__BackingField;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _target;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x17000084")]
		public Vector2 EndValue
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0xF4A0D8", Offset = "0xF4A0D8", VA = "0xF4A0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65ACC", Offset = "0xA65ACC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xF4A0E0", Offset = "0xF4A0E0", VA = "0xF4A0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65ADC", Offset = "0xA65ADC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xF40C10", Offset = "0xF40C10", VA = "0xF40C10")]
		public Size(RectTransform target, Vector2 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xF4A0E8", Offset = "0xF4A0E8", VA = "0xF4A0E8", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xF4A184", Offset = "0xF4A184", VA = "0xF4A184", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xF4A1C8", Offset = "0xF4A1C8", VA = "0xF4A1C8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xF4A1F8", Offset = "0xF4A1F8", VA = "0xF4A1F8", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	internal class SplinePercentage : TweenBase
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618BC", Offset = "0xA618BC")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _target;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Spline _spline;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _startPercentage;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _faceDirection;

		[Token(Token = "0x17000085")]
		public float EndValue
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xF4A250", Offset = "0xF4A250", VA = "0xF4A250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65AEC", Offset = "0xA65AEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xF4A258", Offset = "0xF4A258", VA = "0xF4A258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65AFC", Offset = "0xA65AFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xF3E498", Offset = "0xF3E498", VA = "0xF3E498")]
		public SplinePercentage(Spline spline, Transform target, float startPercentage, float endPercentage, bool faceDirection, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xF4A260", Offset = "0xF4A260", VA = "0xF4A260", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xF4A2DC", Offset = "0xF4A2DC", VA = "0xF4A2DC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xF4A478", Offset = "0xF4A478", VA = "0xF4A478", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xF4A4CC", Offset = "0xF4A4CC", VA = "0xF4A4CC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	internal class SpriteRendererColor : TweenBase
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618CC", Offset = "0xA618CC")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpriteRenderer _target;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000086")]
		public Color EndValue
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xF4A4EC", Offset = "0xF4A4EC", VA = "0xF4A4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B0C", Offset = "0xA65B0C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xF4A4F8", Offset = "0xF4A4F8", VA = "0xF4A4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B1C", Offset = "0xA65B1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xF42DF8", Offset = "0xF42DF8", VA = "0xF42DF8")]
		public SpriteRendererColor(SpriteRenderer target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xF4A504", Offset = "0xF4A504", VA = "0xF4A504", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xF4A5A4", Offset = "0xF4A5A4", VA = "0xF4A5A4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xF4A5F4", Offset = "0xF4A5F4", VA = "0xF4A5F4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xF4A628", Offset = "0xF4A628", VA = "0xF4A628", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	internal class TextColor : TweenBase
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618DC", Offset = "0xA618DC")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text _target;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000087")]
		public Color EndValue
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xF4A68C", Offset = "0xF4A68C", VA = "0xF4A68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B2C", Offset = "0xA65B2C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xF4A698", Offset = "0xF4A698", VA = "0xF4A698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B3C", Offset = "0xA65B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xF42030", Offset = "0xF42030", VA = "0xF42030")]
		public TextColor(Text target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xF4A6A4", Offset = "0xF4A6A4", VA = "0xF4A6A4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xF4A74C", Offset = "0xF4A74C", VA = "0xF4A74C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xF4A7A4", Offset = "0xF4A7A4", VA = "0xF4A7A4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xF4A7E0", Offset = "0xF4A7E0", VA = "0xF4A7E0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	internal class TextMeshColor : TweenBase
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618EC", Offset = "0xA618EC")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TextMesh _target;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000088")]
		public Color EndValue
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xF4A854", Offset = "0xF4A854", VA = "0xF4A854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B4C", Offset = "0xA65B4C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xF4A860", Offset = "0xF4A860", VA = "0xF4A860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B5C", Offset = "0xA65B5C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xF42668", Offset = "0xF42668", VA = "0xF42668")]
		public TextMeshColor(TextMesh target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xF4A86C", Offset = "0xF4A86C", VA = "0xF4A86C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xF4A90C", Offset = "0xF4A90C", VA = "0xF4A90C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xF4A95C", Offset = "0xF4A95C", VA = "0xF4A95C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xF4A990", Offset = "0xF4A990", VA = "0xF4A990", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	internal class ValueColor : TweenBase
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA618FC", Offset = "0xA618FC")]
		private Color <EndValue>k__BackingField;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Color> _valueUpdatedCallback;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000089")]
		public Color EndValue
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xF4B728", Offset = "0xF4B728", VA = "0xF4B728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B6C", Offset = "0xA65B6C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xF4B734", Offset = "0xF4B734", VA = "0xF4B734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B7C", Offset = "0xA65B7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xF3F24C", Offset = "0xF3F24C", VA = "0xF3F24C")]
		public ValueColor(Color startValue, Color endValue, Action<Color> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xF4B740", Offset = "0xF4B740", VA = "0xF4B740", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xF4B748", Offset = "0xF4B748", VA = "0xF4B748", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xF4B7CC", Offset = "0xF4B7CC", VA = "0xF4B7CC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xF4B7DC", Offset = "0xF4B7DC", VA = "0xF4B7DC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	internal class ValueFloat : TweenBase
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6190C", Offset = "0xA6190C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<float> _valueUpdatedCallback;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700008A")]
		public float EndValue
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xF4B7FC", Offset = "0xF4B7FC", VA = "0xF4B7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B8C", Offset = "0xA65B8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xF4B804", Offset = "0xF4B804", VA = "0xF4B804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65B9C", Offset = "0xA65B9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xF3F60C", Offset = "0xF3F60C", VA = "0xF3F60C")]
		public ValueFloat(float startValue, float endValue, Action<float> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xF4B80C", Offset = "0xF4B80C", VA = "0xF4B80C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xF4B814", Offset = "0xF4B814", VA = "0xF4B814", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xF4B88C", Offset = "0xF4B88C", VA = "0xF4B88C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xF4B89C", Offset = "0xF4B89C", VA = "0xF4B89C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	internal class ValueInt : TweenBase
	{
		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6191C", Offset = "0xA6191C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<int> _valueUpdatedCallback;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700008B")]
		public float EndValue
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xF4B8BC", Offset = "0xF4B8BC", VA = "0xF4B8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BAC", Offset = "0xA65BAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xF4B8C4", Offset = "0xF4B8C4", VA = "0xF4B8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BBC", Offset = "0xA65BBC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xF3F448", Offset = "0xF3F448", VA = "0xF3F448")]
		public ValueInt(int startValue, int endValue, Action<int> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xF4B8CC", Offset = "0xF4B8CC", VA = "0xF4B8CC", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xF4B8D4", Offset = "0xF4B8D4", VA = "0xF4B8D4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xF4B950", Offset = "0xF4B950", VA = "0xF4B950", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xF4B960", Offset = "0xF4B960", VA = "0xF4B960", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	internal class ValueRect : TweenBase
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6192C", Offset = "0xA6192C")]
		private Rect <EndValue>k__BackingField;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Rect> _valueUpdatedCallback;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rect _start;

		[Token(Token = "0x1700008C")]
		public Rect EndValue
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xF4B980", Offset = "0xF4B980", VA = "0xF4B980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BCC", Offset = "0xA65BCC")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xF4B98C", Offset = "0xF4B98C", VA = "0xF4B98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BDC", Offset = "0xA65BDC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xF3E9EC", Offset = "0xF3E9EC", VA = "0xF3E9EC")]
		public ValueRect(Rect startValue, Rect endValue, Action<Rect> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xF4B998", Offset = "0xF4B998", VA = "0xF4B998", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xF4B9A0", Offset = "0xF4B9A0", VA = "0xF4B9A0", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xF4BA24", Offset = "0xF4BA24", VA = "0xF4BA24", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xF4BA34", Offset = "0xF4BA34", VA = "0xF4BA34", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	internal class ValueVector2 : TweenBase
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6193C", Offset = "0xA6193C")]
		private Vector2 <EndValue>k__BackingField;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<Vector2> _valueUpdatedCallback;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x1700008D")]
		public Vector2 EndValue
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xF4BA54", Offset = "0xF4BA54", VA = "0xF4BA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BEC", Offset = "0xA65BEC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xF4BA5C", Offset = "0xF4BA5C", VA = "0xF4BA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65BFC", Offset = "0xA65BFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xF3F040", Offset = "0xF3F040", VA = "0xF3F040")]
		public ValueVector2(Vector2 startValue, Vector2 endValue, Action<Vector2> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF4BA64", Offset = "0xF4BA64", VA = "0xF4BA64", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF4BA6C", Offset = "0xF4BA6C", VA = "0xF4BA6C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF4BAE0", Offset = "0xF4BAE0", VA = "0xF4BAE0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xF4BAF0", Offset = "0xF4BAF0", VA = "0xF4BAF0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	internal class ValueVector3 : TweenBase
	{
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6194C", Offset = "0xA6194C")]
		private Vector3 <EndValue>k__BackingField;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Vector3> _valueUpdatedCallback;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x1700008E")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xF4BB10", Offset = "0xF4BB10", VA = "0xF4BB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C0C", Offset = "0xA65C0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xF4BB1C", Offset = "0xF4BB1C", VA = "0xF4BB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C1C", Offset = "0xA65C1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xF3EE44", Offset = "0xF3EE44", VA = "0xF3EE44")]
		public ValueVector3(Vector3 startValue, Vector3 endValue, Action<Vector3> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xF4BB28", Offset = "0xF4BB28", VA = "0xF4BB28", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xF4BB30", Offset = "0xF4BB30", VA = "0xF4BB30", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF4BBAC", Offset = "0xF4BBAC", VA = "0xF4BBAC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xF4BBBC", Offset = "0xF4BBBC", VA = "0xF4BBBC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	internal class ValueVector4 : TweenBase
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6195C", Offset = "0xA6195C")]
		private Vector4 <EndValue>k__BackingField;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Vector4> _valueUpdatedCallback;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4 _start;

		[Token(Token = "0x1700008F")]
		public Vector4 EndValue
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xF4BBEC", Offset = "0xF4BBEC", VA = "0xF4BBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C2C", Offset = "0xA65C2C")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xF4BBF8", Offset = "0xF4BBF8", VA = "0xF4BBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C3C", Offset = "0xA65C3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xF3EC20", Offset = "0xF3EC20", VA = "0xF3EC20")]
		public ValueVector4(Vector4 startValue, Vector4 endValue, Action<Vector4> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xF4BC04", Offset = "0xF4BC04", VA = "0xF4BC04", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xF4BC0C", Offset = "0xF4BC0C", VA = "0xF4BC0C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xF4BC90", Offset = "0xF4BC90", VA = "0xF4BC90", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xF4BCA0", Offset = "0xF4BCA0", VA = "0xF4BCA0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	internal class Volume : TweenBase
	{
		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6196C", Offset = "0xA6196C")]
		private float <EndValue>k__BackingField;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000090")]
		public float EndValue
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xF4BCC0", Offset = "0xF4BCC0", VA = "0xF4BCC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C4C", Offset = "0xA65C4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xF4BCC8", Offset = "0xF4BCC8", VA = "0xF4BCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C5C", Offset = "0xA65C5C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xF40960", Offset = "0xF40960", VA = "0xF40960")]
		public Volume(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xF4BCD0", Offset = "0xF4BCD0", VA = "0xF4BCD0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xF4BD6C", Offset = "0xF4BD6C", VA = "0xF4BD6C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xF4BDA0", Offset = "0xF4BDA0", VA = "0xF4BDA0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xF4BDD0", Offset = "0xF4BDD0", VA = "0xF4BDD0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
}
namespace Greyman
{
	[Token(Token = "0x20001C0")]
	public abstract class ArrowIndicator : UnityEngine.Object
	{
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Indicator indicator;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int indicatorID;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrow;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 VR_scale;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool _onScreen;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		protected bool _onScreenNextValue;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Color transColor;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool fadingToOn;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool fadingToOff;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool fadingUp;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float timeStartLerp;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float elapsedTime;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float lerpAmount;

		[Token(Token = "0x17000091")]
		public abstract bool onScreen
		{
			[Token(Token = "0x6000D12")]
			get;
			[Token(Token = "0x6000D13")]
			set;
		}

		[Token(Token = "0x6000D14")]
		public abstract void UpdateEffects();

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xDB8074", Offset = "0xDB8074", VA = "0xDB8074")]
		protected ArrowIndicator()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class ArrowIndicatorCanvas : ArrowIndicator
	{
		[Token(Token = "0x17000092")]
		public override bool onScreen
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xDB80DC", Offset = "0xDB80DC", VA = "0xDB80DC", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xDB80E4", Offset = "0xDB80E4", VA = "0xDB80E4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xDB829C", Offset = "0xDB829C", VA = "0xDB829C", Slot = "6")]
		public override void UpdateEffects()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xDB85A4", Offset = "0xDB85A4", VA = "0xDB85A4")]
		private void fadingDownValues()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xDB8820", Offset = "0xDB8820", VA = "0xDB8820")]
		private void fadingUpValues()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xDB8A94", Offset = "0xDB8A94", VA = "0xDB8A94")]
		private void endFadingValues()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xDB8BE0", Offset = "0xDB8BE0", VA = "0xDB8BE0")]
		public ArrowIndicatorCanvas()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class ArrowIndicatorVR : ArrowIndicator
	{
		[Token(Token = "0x17000093")]
		public override bool onScreen
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xDB8BE4", Offset = "0xDB8BE4", VA = "0xDB8BE4", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xDB8BEC", Offset = "0xDB8BEC", VA = "0xDB8BEC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xDB8D98", Offset = "0xDB8D98", VA = "0xDB8D98", Slot = "6")]
		public override void UpdateEffects()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xDB9090", Offset = "0xDB9090", VA = "0xDB9090")]
		private void FadingDownValues()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xDB92F8", Offset = "0xDB92F8", VA = "0xDB92F8")]
		private void FadingUpValues()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xDB9540", Offset = "0xDB9540", VA = "0xDB9540")]
		private void EndFadingValues()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xDB9658", Offset = "0xDB9658", VA = "0xDB9658")]
		public ArrowIndicatorVR()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public static class Utils
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xDBC0F0", Offset = "0xDBC0F0", VA = "0xDBC0F0")]
		public static void DrawPlane(Vector3 normal, Vector3 position, float radius)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class OffScreenIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OffScreenIndicator instance;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableDebug;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool VirtualRealitySupported;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float VR_cameraDistance;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VR_radius;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float VR_indicatorScale;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject canvas;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Canvas_circleRadius;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Canvas_border;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Canvas_indicatorSize;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Indicator[] indicators;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FixedTarget[] targets;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OffScreenIndicatorManager manager;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xDB96B0", Offset = "0xDB96B0", VA = "0xDB96B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xDB9DD8", Offset = "0xDB9DD8", VA = "0xDB9DD8")]
		public void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xDB9DF8", Offset = "0xDB9DF8", VA = "0xDB9DF8")]
		public void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xDB9E18", Offset = "0xDB9E18", VA = "0xDB9E18")]
		public OffScreenIndicator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class Indicator
	{
		[Token(Token = "0x200030F")]
		public enum Transition
		{
			[Token(Token = "0x400142C")]
			None,
			[Token(Token = "0x400142D")]
			Fading,
			[Token(Token = "0x400142E")]
			Scaling
		}

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite onScreenSprite;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color onScreenColor;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool onScreenRotates;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite offScreenSprite;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color offScreenColor;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool offScreenRotates;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 targetOffset;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transition transition;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float transitionDuration;

		[NonSerialized]
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showOnScreen;

		[NonSerialized]
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool showOffScreen;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xDB9664", Offset = "0xDB9664", VA = "0xDB9664")]
		public Indicator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class FixedTarget
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int indicatorID;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xDB965C", Offset = "0xDB965C", VA = "0xDB965C")]
		public FixedTarget()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public abstract class OffScreenIndicatorManager : MonoBehaviour
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableDebug;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<ArrowIndicator> arrowIndicators;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Indicator[] indicators;

		[Token(Token = "0x6000D2B")]
		public abstract void AddIndicator(Transform target, int indicatorID);

		[Token(Token = "0x6000D2C")]
		public abstract void RemoveIndicator(Transform target);

		[Token(Token = "0x6000D2D")]
		protected abstract void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0);

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xDB9E54", Offset = "0xDB9E54", VA = "0xDB9E54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xDB9EC4", Offset = "0xDB9EC4", VA = "0xDB9EC4")]
		protected bool ExistsIndicator(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xDB9C74", Offset = "0xDB9C74", VA = "0xDB9C74")]
		public void CheckFields()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xDBA00C", Offset = "0xDBA00C", VA = "0xDBA00C")]
		protected OffScreenIndicatorManager()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class OffScreenIndicatorManagerCanvas : OffScreenIndicatorManager
	{
		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CEFC", Offset = "0xA5CEFC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform target;

			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xDBAA1C", Offset = "0xDBAA1C", VA = "0xDBAA1C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xDBB0D0", Offset = "0xDBB0D0", VA = "0xDBB0D0")]
			internal bool <RemoveIndicator>b__0(ArrowIndicator x)
			{
				return default(bool);
			}

			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xDBB158", Offset = "0xDBB158", VA = "0xDBB158")]
			internal bool <RemoveIndicator>b__1(ArrowIndicator x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject indicatorsParentObj;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cameraDistance;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int circleRadius;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int border;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int indicatorSize;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float realBorder;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 referenceResolution;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float screenScaleX;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float screenScaleY;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool screenScaled;

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xDBA014", Offset = "0xDBA014", VA = "0xDBA014")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xDBA334", Offset = "0xDBA334", VA = "0xDBA334")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xDBA458", Offset = "0xDBA458", VA = "0xDBA458", Slot = "4")]
		public override void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xDBA814", Offset = "0xDBA814", VA = "0xDBA814", Slot = "5")]
		public override void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xDBAA24", Offset = "0xDBAA24", VA = "0xDBAA24", Slot = "6")]
		protected override void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xDBB0AC", Offset = "0xDBB0AC", VA = "0xDBB0AC")]
		public OffScreenIndicatorManagerCanvas()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class OffScreenIndicatorManagerVR : OffScreenIndicatorManager
	{
		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF0C", Offset = "0xA5CF0C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform target;

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xDBB7B4", Offset = "0xDBB7B4", VA = "0xDBB7B4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xDBC584", Offset = "0xDBC584", VA = "0xDBC584")]
			internal bool <RemoveIndicator>b__0(ArrowIndicator x)
			{
				return default(bool);
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xDBC60C", Offset = "0xDBC60C", VA = "0xDBC60C")]
			internal bool <RemoveIndicator>b__1(ArrowIndicator x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject indicatorsParentObj;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cameraDistance;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float radius_to_start_show;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float indicatorScale;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xDBB1E0", Offset = "0xDBB1E0", VA = "0xDBB1E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xDB9AA0", Offset = "0xDB9AA0", VA = "0xDB9AA0")]
		public void CreateIndicatorsParent()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xDBB1E4", Offset = "0xDBB1E4", VA = "0xDBB1E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xDBB2B8", Offset = "0xDBB2B8", VA = "0xDBB2B8", Slot = "4")]
		public override void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xDBB608", Offset = "0xDBB608", VA = "0xDBB608", Slot = "5")]
		public override void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xDBB7BC", Offset = "0xDBB7BC", VA = "0xDBB7BC", Slot = "6")]
		protected override void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xDBC570", Offset = "0xDBC570", VA = "0xDBC570")]
		public OffScreenIndicatorManagerVR()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001CA")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000094")]
		public bool Highlight
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1099830", Offset = "0x1099830", VA = "0x1099830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x1099838", Offset = "0x1099838", VA = "0x1099838")]
			set
			{
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1099844", Offset = "0x1099844", VA = "0x1099844")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1099A10", Offset = "0x1099A10", VA = "0x1099A10", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1099A38", Offset = "0x1099A38", VA = "0x1099A38", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1099A60", Offset = "0x1099A60", VA = "0x1099A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1099910", Offset = "0x1099910", VA = "0x1099910")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1099CF0", Offset = "0x1099CF0", VA = "0x1099CF0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000095")]
		public bool InRange
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x109A150", Offset = "0x109A150", VA = "0x109A150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x109A158", Offset = "0x109A158", VA = "0x109A158")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public bool Targeted
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x109A2D4", Offset = "0x109A2D4", VA = "0x109A2D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x109A2DC", Offset = "0x109A2DC", VA = "0x109A2DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x109A2E8", Offset = "0x109A2E8", VA = "0x109A2E8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x109A164", Offset = "0x109A164", VA = "0x109A164")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x109A4C4", Offset = "0x109A4C4", VA = "0x109A4C4")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C4DC", Offset = "0xA5C4DC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000097")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x109A4CC", Offset = "0x109A4CC", VA = "0x109A4CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x109A4D4", Offset = "0x109A4D4", VA = "0x109A4D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x109A4F0", Offset = "0x109A4F0", VA = "0x109A4F0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x109A708", Offset = "0x109A708", VA = "0x109A708", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x109B07C", Offset = "0x109B07C", VA = "0x109B07C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x109B654", Offset = "0x109B654", VA = "0x109B654", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x109BA34", Offset = "0x109BA34", VA = "0x109BA34")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x109A974", Offset = "0x109A974", VA = "0x109A974")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x109BB10", Offset = "0x109BB10", VA = "0x109BB10")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x109BFAC", Offset = "0x109BFAC", VA = "0x109BFAC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x109BFC4", Offset = "0x109BFC4", VA = "0x109BFC4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x109BFCC", Offset = "0x109BFCC", VA = "0x109BFCC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x109D804", Offset = "0x109D804", VA = "0x109D804")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x109D8B4", Offset = "0x109D8B4", VA = "0x109D8B4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x109D960", Offset = "0x109D960", VA = "0x109D960")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000312")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001432")]
			Disabled,
			[Token(Token = "0x4001433")]
			Enabled,
			[Token(Token = "0x4001434")]
			Targeted
		}

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x109D968", Offset = "0x109D968", VA = "0x109D968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x109A428", Offset = "0x109A428", VA = "0x109A428")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x109D9D8", Offset = "0x109D9D8", VA = "0x109D9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x109DA20", Offset = "0x109DA20", VA = "0x109DA20")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xFE30D4", Offset = "0xFE30D4", VA = "0xFE30D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xFE31A0", Offset = "0xFE31A0", VA = "0xFE31A0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xFE31A4", Offset = "0xFE31A4", VA = "0xFE31A4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xFE31A8", Offset = "0xFE31A8", VA = "0xFE31A8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x109854C", Offset = "0x109854C", VA = "0x109854C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x10985A4", Offset = "0x10985A4", VA = "0x10985A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1098848", Offset = "0x1098848", VA = "0x1098848")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1098938", Offset = "0x1098938", VA = "0x1098938")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10985A8", Offset = "0x10985A8", VA = "0x10985A8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1098A28", Offset = "0x1098A28", VA = "0x1098A28")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000313")]
		public enum ContactTest
		{
			[Token(Token = "0x4001436")]
			PerpenTest,
			[Token(Token = "0x4001437")]
			BackwardsPress
		}

		[Token(Token = "0x4000DAB")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000DAC")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000098")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x1098AD8", Offset = "0x1098AD8", VA = "0x1098AD8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000099")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x1098AE0", Offset = "0x1098AE0", VA = "0x1098AE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1098AEC", Offset = "0x1098AEC", VA = "0x1098AEC", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1098C04", Offset = "0x1098C04", VA = "0x1098C04")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1098E24", Offset = "0x1098E24", VA = "0x1098E24", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x109936C", Offset = "0x109936C", VA = "0x109936C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1099284", Offset = "0x1099284", VA = "0x1099284")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1099418", Offset = "0x1099418", VA = "0x1099418")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x109950C", Offset = "0x109950C", VA = "0x109950C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1099630", Offset = "0x1099630", VA = "0x1099630")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61AAC", Offset = "0xA61AAC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61ABC", Offset = "0xA61ABC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700009A")]
		public Collider Collider
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x109972C", Offset = "0x109972C", VA = "0x109972C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C6C", Offset = "0xA65C6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x1099734", Offset = "0x1099734", VA = "0x1099734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C7C", Offset = "0xA65C7C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x109973C", Offset = "0x109973C", VA = "0x109973C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C8C", Offset = "0xA65C8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x1099744", Offset = "0x1099744", VA = "0x1099744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65C9C", Offset = "0xA65C9C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x109974C", Offset = "0x109974C", VA = "0x109974C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x109979C", Offset = "0x109979C", VA = "0x109979C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1099828", Offset = "0x1099828", VA = "0x1099828")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700009D")]
		Collider Collider
		{
			[Token(Token = "0x6000D7D")]
			get;
		}

		[Token(Token = "0x1700009E")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000D7E")]
			get;
		}

		[Token(Token = "0x1700009F")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D7F")]
			get;
		}
	}
	[Token(Token = "0x20001D4")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1098D68", Offset = "0x1098D68", VA = "0x1098D68")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public enum InteractionType
	{
		[Token(Token = "0x4000DC0")]
		Enter,
		[Token(Token = "0x4000DC1")]
		Stay,
		[Token(Token = "0x4000DC2")]
		Exit
	}
	[Token(Token = "0x20001D6")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001439")]
			Mesh,
			[Token(Token = "0x400143A")]
			Skeleton,
			[Token(Token = "0x400143B")]
			Both
		}

		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF1C", Offset = "0xA5CF1C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DD")]
				[Address(RVA = "0xFDEACC", Offset = "0xFDEACC", VA = "0xFDEACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DF")]
				[Address(RVA = "0xFDEB34", Offset = "0xFDEB34", VA = "0xFDEB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xFDE840", Offset = "0xFDE840", VA = "0xFDE840")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xFDE86C", Offset = "0xFDE86C", VA = "0xFDE86C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xFDE870", Offset = "0xFDE870", VA = "0xFDE870", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xFDEAD4", Offset = "0xFDEAD4", VA = "0xFDEAD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC3")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61AEC", Offset = "0xA61AEC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000A0")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x109CA38", Offset = "0x109CA38", VA = "0x109CA38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x109DA28", Offset = "0x109DA28", VA = "0x109DA28")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x109D488", Offset = "0x109D488", VA = "0x109D488")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x109DA98", Offset = "0x109DA98", VA = "0x109DA98")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x109DB08", Offset = "0x109DB08", VA = "0x109DB08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x109DB40", Offset = "0x109DB40", VA = "0x109DB40")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x109DBB0", Offset = "0x109DBB0", VA = "0x109DBB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x109DBE8", Offset = "0x109DBE8", VA = "0x109DBE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x109DC58", Offset = "0x109DC58", VA = "0x109DC58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x109DC90", Offset = "0x109DC90", VA = "0x109DC90")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x109CA04", Offset = "0x109CA04", VA = "0x109CA04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x109DD00", Offset = "0x109DD00", VA = "0x109DD00")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x109D454", Offset = "0x109D454", VA = "0x109D454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x109DD6C", Offset = "0x109DD6C", VA = "0x109DD6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x109DDD8", Offset = "0x109DDD8", VA = "0x109DDD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x109DE0C", Offset = "0x109DE0C", VA = "0x109DE0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x109DE78", Offset = "0x109DE78", VA = "0x109DE78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x109DEAC", Offset = "0x109DEAC", VA = "0x109DEAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x109DF18", Offset = "0x109DF18", VA = "0x109DF18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x109DF4C", Offset = "0x109DF4C", VA = "0x109DF4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x109DFB8", Offset = "0x109DFB8", VA = "0x109DFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65CAC", Offset = "0xA65CAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x109E008", Offset = "0x109E008", VA = "0x109E008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65CBC", Offset = "0xA65CBC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x109E060", Offset = "0x109E060", VA = "0x109E060")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x109E400", Offset = "0x109E400", VA = "0x109E400")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x109E384", Offset = "0x109E384", VA = "0x109E384")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65CCC", Offset = "0xA65CCC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1099FA4", Offset = "0x1099FA4", VA = "0x1099FA4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x109E488", Offset = "0x109E488", VA = "0x109E488")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x109D4C0", Offset = "0x109D4C0", VA = "0x109D4C0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x109C874", Offset = "0x109C874", VA = "0x109C874")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x109E668", Offset = "0x109E668", VA = "0x109E668")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000316")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xFDF2F0", Offset = "0xFDF2F0", VA = "0xFDF2F0")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000AB")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xFDEB3C", Offset = "0xFDEB3C", VA = "0xFDEB3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xFDEB44", Offset = "0xFDEB44", VA = "0xFDEB44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xFDEB4C", Offset = "0xFDEB4C", VA = "0xFDEB4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xFDEB54", Offset = "0xFDEB54", VA = "0xFDEB54", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0xFDEB5C", Offset = "0xFDEB5C", VA = "0xFDEB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D30", Offset = "0xA65D30")]
			add
			{
			}
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xFDEC00", Offset = "0xFDEC00", VA = "0xFDEC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D40", Offset = "0xA65D40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xFDED18", Offset = "0xFDED18", VA = "0xFDED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D50", Offset = "0xA65D50")]
			add
			{
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xFDEDBC", Offset = "0xFDEDBC", VA = "0xFDEDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D60", Offset = "0xA65D60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xFDEED4", Offset = "0xFDEED4", VA = "0xFDEED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D70", Offset = "0xA65D70")]
			add
			{
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xFDEF78", Offset = "0xFDEF78", VA = "0xFDEF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65D80", Offset = "0xA65D80")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xFDECA4", Offset = "0xFDECA4", VA = "0xFDECA4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xFDEE60", Offset = "0xFDEE60", VA = "0xFDEE60", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xFDF01C", Offset = "0xFDF01C", VA = "0xFDF01C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000DAC")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xFDF090", Offset = "0xFDF090", VA = "0xFDF090", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xFDF1BC", Offset = "0xFDF1BC", VA = "0xFDF1BC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xFDF2E8", Offset = "0xFDF2E8", VA = "0xFDF2E8")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000DDB")]
		None,
		[Token(Token = "0x4000DDC")]
		Proximity,
		[Token(Token = "0x4000DDD")]
		Contact,
		[Token(Token = "0x4000DDE")]
		Action
	}
	[Token(Token = "0x20001D9")]
	public enum InteractableState
	{
		[Token(Token = "0x4000DE0")]
		Default,
		[Token(Token = "0x4000DE1")]
		ProximityState,
		[Token(Token = "0x4000DE2")]
		ContactState,
		[Token(Token = "0x4000DE3")]
		ActionState
	}
	[Token(Token = "0x20001DA")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xFDF480", Offset = "0xFDF480", VA = "0xFDF480")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000AF")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xFDF398", Offset = "0xFDF398", VA = "0xFDF398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xFDF0F4", Offset = "0xFDF0F4", VA = "0xFDF0F4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xFDF220", Offset = "0xFDF220", VA = "0xFDF220")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xFDF400", Offset = "0xFDF400", VA = "0xFDF400")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF2C", Offset = "0xA5CF2C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E5")]
				[Address(RVA = "0xFE073C", Offset = "0xFE073C", VA = "0xFE073C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E7")]
				[Address(RVA = "0xFE07A4", Offset = "0xFE07A4", VA = "0xFE07A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xFE017C", Offset = "0xFE017C", VA = "0xFE017C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xFE02A8", Offset = "0xFE02A8", VA = "0xFE02A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xFE031C", Offset = "0xFE031C", VA = "0xFE031C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xFE02C4", Offset = "0xFE02C4", VA = "0xFE02C4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xFE0744", Offset = "0xFE0744", VA = "0xFE0744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xFE005C", Offset = "0xFE005C", VA = "0xFE005C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xFE00D8", Offset = "0xFE00D8", VA = "0xFE00D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65D90", Offset = "0xA65D90")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xFE01A8", Offset = "0xFE01A8", VA = "0xFE01A8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xFE02A0", Offset = "0xFE02A0", VA = "0xFE02A0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000B0")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xFE07AC", Offset = "0xFE07AC", VA = "0xFE07AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xFE0918", Offset = "0xFE0918", VA = "0xFE0918")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xFE09C4", Offset = "0xFE09C4", VA = "0xFE09C4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xFE0A70", Offset = "0xFE0A70", VA = "0xFE0A70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xFE0D54", Offset = "0xFE0D54", VA = "0xFE0D54")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xFE0D9C", Offset = "0xFE0D9C", VA = "0xFE0D9C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xFE1008", Offset = "0xFE1008", VA = "0xFE1008")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xFE1134", Offset = "0xFE1134", VA = "0xFE1134")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF3C", Offset = "0xA5CF3C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013EB")]
				[Address(RVA = "0x109D6D0", Offset = "0x109D6D0", VA = "0x109D6D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013ED")]
				[Address(RVA = "0x109D738", Offset = "0x109D738", VA = "0x109D738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x109C534", Offset = "0x109C534", VA = "0x109C534")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x109D0CC", Offset = "0x109D0CC", VA = "0x109D0CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x109D0D0", Offset = "0x109D0D0", VA = "0x109D0D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x109D6D8", Offset = "0x109D6D8", VA = "0x109D6D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF3")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000B1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x109C37C", Offset = "0x109C37C", VA = "0x109C37C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000B2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x109C384", Offset = "0x109C384", VA = "0x109C384", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000B3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x109C38C", Offset = "0x109C38C", VA = "0x109C38C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public override bool EnableState
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x109C394", Offset = "0x109C394", VA = "0x109C394", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x109C3C0", Offset = "0x109C3C0", VA = "0x109C3C0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x109C3FC", Offset = "0x109C3FC", VA = "0x109C3FC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x109C4B8", Offset = "0x109C4B8", VA = "0x109C4B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65DF4", Offset = "0xA65DF4")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x109C560", Offset = "0x109C560", VA = "0x109C560")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x109CA70", Offset = "0x109CA70", VA = "0x109CA70")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x109CCE8", Offset = "0x109CCE8", VA = "0x109CCE8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x109CE28", Offset = "0x109CE28", VA = "0x109CE28", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x109D0AC", Offset = "0x109D0AC", VA = "0x109D0AC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x109D0B0", Offset = "0x109D0B0", VA = "0x109D0B0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x109D0B4", Offset = "0x109D0B4", VA = "0x109D0B4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61B7C", Offset = "0xA61B7C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61B8C", Offset = "0xA61B8C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61B9C", Offset = "0xA61B9C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000B5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x109D740", Offset = "0x109D740", VA = "0x109D740", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65E58", Offset = "0xA65E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x109D748", Offset = "0x109D748", VA = "0x109D748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65E68", Offset = "0xA65E68")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public bool EnableState
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x109D750", Offset = "0x109D750", VA = "0x109D750", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x109D76C", Offset = "0x109D76C", VA = "0x109D76C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x109D78C", Offset = "0x109D78C", VA = "0x109D78C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65E78", Offset = "0xA65E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x109D794", Offset = "0x109D794", VA = "0x109D794", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65E88", Offset = "0xA65E88")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public float SphereRadius
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x109D7A0", Offset = "0x109D7A0", VA = "0x109D7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65E98", Offset = "0xA65E98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x109D7A8", Offset = "0x109D7A8", VA = "0x109D7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65EA8", Offset = "0xA65EA8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x109D7B0", Offset = "0x109D7B0", VA = "0x109D7B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x109D7F8", Offset = "0x109D7F8", VA = "0x109D7F8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x109D7FC", Offset = "0x109D7FC", VA = "0x109D7FC")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000E03")]
		None = 0,
		[Token(Token = "0x4000E04")]
		Ray = 1,
		[Token(Token = "0x4000E05")]
		Poke = 4,
		[Token(Token = "0x4000E06")]
		All = -1
	}
	[Token(Token = "0x20001E1")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000E08")]
		Inactive,
		[Token(Token = "0x4000E09")]
		PrimaryInputDown,
		[Token(Token = "0x4000E0A")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000E0B")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001E2")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xFDF340", Offset = "0xFDF340", VA = "0xFDF340")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61BAC", Offset = "0xA61BAC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61BBC", Offset = "0xA61BBC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61BCC", Offset = "0xA61BCC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000B9")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xFDF548", Offset = "0xFDF548", VA = "0xFDF548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xFDF550", Offset = "0xFDF550", VA = "0xFDF550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65EB8", Offset = "0xA65EB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xFDF558", Offset = "0xFDF558", VA = "0xFDF558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65EC8", Offset = "0xA65EC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000DDF")]
			get;
		}

		[Token(Token = "0x170000BC")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000DE0")]
			get;
		}

		[Token(Token = "0x170000BD")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000DE1")]
			get;
		}

		[Token(Token = "0x170000BE")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xFDF564", Offset = "0xFDF564", VA = "0xFDF564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65ED8", Offset = "0xA65ED8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xFDF570", Offset = "0xFDF570", VA = "0xFDF570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65EE8", Offset = "0xA65EE8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xFDF57C", Offset = "0xFDF57C", VA = "0xFDF57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65EF8", Offset = "0xA65EF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xFDF588", Offset = "0xFDF588", VA = "0xFDF588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65F08", Offset = "0xA65F08")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000DEA")]
			get;
			[Token(Token = "0x6000DEB")]
			set;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xFDF594", Offset = "0xFDF594", VA = "0xFDF594")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000DE7")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000DE8")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000DE9")]
		public abstract void DeFocus();

		[Token(Token = "0x6000DEC")]
		public abstract void Initialize();

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xFDF59C", Offset = "0xFDF59C", VA = "0xFDF59C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xFDF5EC", Offset = "0xFDF5EC", VA = "0xFDF5EC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xFDF644", Offset = "0xFDF644", VA = "0xFDF644", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xFDF8A4", Offset = "0xFDF8A4", VA = "0xFDF8A4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xFDFF04", Offset = "0xFDFF04", VA = "0xFDFF04")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000C1")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000DF2")]
			get;
		}

		[Token(Token = "0x170000C2")]
		bool EnableState
		{
			[Token(Token = "0x6000DF4")]
			get;
			[Token(Token = "0x6000DF5")]
			set;
		}

		[Token(Token = "0x170000C3")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000DF6")]
			get;
			[Token(Token = "0x6000DF7")]
			set;
		}

		[Token(Token = "0x6000DF3")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001E5")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000319")]
		private enum PinchState
		{
			[Token(Token = "0x400144C")]
			None,
			[Token(Token = "0x400144D")]
			PinchDown,
			[Token(Token = "0x400144E")]
			PinchStay,
			[Token(Token = "0x400144F")]
			PinchUp
		}

		[Token(Token = "0x4000E18")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000C4")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xFE31B0", Offset = "0xFE31B0", VA = "0xFE31B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C5")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xFE323C", Offset = "0xFE323C", VA = "0xFE323C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C6")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xFE32C8", Offset = "0xFE32C8", VA = "0xFE32C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xFE3354", Offset = "0xFE3354", VA = "0xFE3354")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xFE3388", Offset = "0xFE3388", VA = "0xFE3388")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000E1B")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000E1C")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000E1D")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000E1E")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000E1F")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA61BEC", Offset = "0xA61BEC")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000C7")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xFE3658", Offset = "0xFE3658", VA = "0xFE3658", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000C8")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xFE3660", Offset = "0xFE3660", VA = "0xFE3660", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000C9")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xFE36C8", Offset = "0xFE36C8", VA = "0xFE36C8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CA")]
		public override bool EnableState
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xFE36D0", Offset = "0xFE36D0", VA = "0xFE36D0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xFE3714", Offset = "0xFE3714", VA = "0xFE3714", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xFE3788", Offset = "0xFE3788", VA = "0xFE3788", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xFE37E8", Offset = "0xFE37E8", VA = "0xFE37E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xFE3884", Offset = "0xFE3884", VA = "0xFE3884")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xFE3B8C", Offset = "0xFE3B8C", VA = "0xFE3B8C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xFE3C88", Offset = "0xFE3C88", VA = "0xFE3C88", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xFE4010", Offset = "0xFE4010", VA = "0xFE4010")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xFE41B4", Offset = "0xFE41B4", VA = "0xFE41B4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xFE42DC", Offset = "0xFE42DC", VA = "0xFE42DC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xFE4614", Offset = "0xFE4614", VA = "0xFE4614")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xFE4A24", Offset = "0xFE4A24", VA = "0xFE4A24", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xFE4B10", Offset = "0xFE4B10", VA = "0xFE4B10", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xFE4B4C", Offset = "0xFE4B4C", VA = "0xFE4B4C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000E2B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000E2C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61C60", Offset = "0xA61C60")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000CB")]
		public bool EnableState
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xFE36F8", Offset = "0xFE36F8", VA = "0xFE36F8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xFE3730", Offset = "0xFE3730", VA = "0xFE3730", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xFE4C40", Offset = "0xFE4C40", VA = "0xFE4C40", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xFE3B50", Offset = "0xFE3B50", VA = "0xFE3B50", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xFE4E8C", Offset = "0xFE4E8C", VA = "0xFE4E8C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65F18", Offset = "0xA65F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xFE4E94", Offset = "0xFE4E94", VA = "0xFE4E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65F28", Offset = "0xA65F28")]
			set
			{
			}
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xFE4C48", Offset = "0xFE4C48", VA = "0xFE4C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xFE4A60", Offset = "0xFE4A60", VA = "0xFE4A60", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xFE4E9C", Offset = "0xFE4E9C", VA = "0xFE4E9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xFE51C8", Offset = "0xFE51C8", VA = "0xFE51C8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xFE53B8", Offset = "0xFE53B8", VA = "0xFE53B8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000CE")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x109BFEC", Offset = "0x109BFEC", VA = "0x109BFEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x109BFF4", Offset = "0x109BFF4", VA = "0x109BFF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x109C07C", Offset = "0x109C07C", VA = "0x109C07C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x109C084", Offset = "0x109C084", VA = "0x109C084")]
			set
			{
			}
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x109C0F0", Offset = "0x109C0F0", VA = "0x109C0F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x109C354", Offset = "0x109C354", VA = "0x109C354")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x109C364", Offset = "0x109C364", VA = "0x109C364")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x109C374", Offset = "0x109C374", VA = "0x109C374")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1099DDC", Offset = "0x1099DDC", VA = "0x1099DDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x1099DE0", Offset = "0x1099DE0", VA = "0x1099DE0")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x1099E18", Offset = "0x1099E18", VA = "0x1099E18")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x1099E50", Offset = "0x1099E50", VA = "0x1099E50")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x1099E88", Offset = "0x1099E88", VA = "0x1099E88")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1099EC0", Offset = "0x1099EC0", VA = "0x1099EC0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1099EF8", Offset = "0x1099EF8", VA = "0x1099EF8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1099F30", Offset = "0x1099F30", VA = "0x1099F30")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x109A08C", Offset = "0x109A08C", VA = "0x109A08C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x109A0FC", Offset = "0x109A0FC", VA = "0x109A0FC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x109A104", Offset = "0x109A104", VA = "0x109A104")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x109A108", Offset = "0x109A108", VA = "0x109A108")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x109A0C0", Offset = "0x109A0C0", VA = "0x109A0C0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x109A148", Offset = "0x109A148", VA = "0x109A148")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF4C", Offset = "0xA5CF4C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F1")]
				[Address(RVA = "0xFE3064", Offset = "0xFE3064", VA = "0xFE3064", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F3")]
				[Address(RVA = "0xFE30CC", Offset = "0xFE30CC", VA = "0xFE30CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xFE2D88", Offset = "0xFE2D88", VA = "0xFE2D88")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xFE2E64", Offset = "0xFE2E64", VA = "0xFE2E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xFE2E68", Offset = "0xFE2E68", VA = "0xFE2E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xFE306C", Offset = "0xFE306C", VA = "0xFE306C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000E3D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xFE2978", Offset = "0xFE2978", VA = "0xFE2978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xFE2A1C", Offset = "0xFE2A1C", VA = "0xFE2A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xFE2CC4", Offset = "0xFE2CC4", VA = "0xFE2CC4")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xFE2C48", Offset = "0xFE2C48", VA = "0xFE2C48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65F38", Offset = "0xA65F38")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xFE2DB4", Offset = "0xFE2DB4", VA = "0xFE2DB4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200031B")]
		public enum SelectionState
		{
			[Token(Token = "0x4001457")]
			Off,
			[Token(Token = "0x4001458")]
			Selected,
			[Token(Token = "0x4001459")]
			Highlighted
		}

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000D0")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xFE5424", Offset = "0xFE5424", VA = "0xFE5424")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xFE542C", Offset = "0xFE542C", VA = "0xFE542C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xFE55B4", Offset = "0xFE55B4", VA = "0xFE55B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xFE57B0", Offset = "0xFE57B0", VA = "0xFE57B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xFE54B4", Offset = "0xFE54B4", VA = "0xFE54B4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xFE58A0", Offset = "0xFE58A0", VA = "0xFE58A0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200031C")]
		public enum SegmentType
		{
			[Token(Token = "0x400145B")]
			Straight,
			[Token(Token = "0x400145C")]
			LeftTurn,
			[Token(Token = "0x400145D")]
			RightTurn,
			[Token(Token = "0x400145E")]
			Switch
		}

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000E52")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000E53")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61D40", Offset = "0xA61D40")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000D1")]
		public float StartDistance
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xFE590C", Offset = "0xFE590C", VA = "0xFE590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65F9C", Offset = "0xA65F9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xFE5914", Offset = "0xFE5914", VA = "0xFE5914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA65FAC", Offset = "0xA65FAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public float GridSize
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xFE591C", Offset = "0xFE591C", VA = "0xFE591C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xFE5924", Offset = "0xFE5924", VA = "0xFE5924")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public int SubDivCount
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xFE592C", Offset = "0xFE592C", VA = "0xFE592C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xFE5934", Offset = "0xFE5934", VA = "0xFE5934")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public SegmentType Type
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xFE593C", Offset = "0xFE593C", VA = "0xFE593C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000D5")]
		public Pose EndPose
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xFE5944", Offset = "0xFE5944", VA = "0xFE5944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public float Radius
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xFE5DD8", Offset = "0xFE5DD8", VA = "0xFE5DD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D7")]
		public float SegmentLength
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xFE59AC", Offset = "0xFE59AC", VA = "0xFE59AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xFE5DE8", Offset = "0xFE5DE8", VA = "0xFE5DE8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xFE5E00", Offset = "0xFE5E00", VA = "0xFE5E00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xFE59EC", Offset = "0xFE59EC", VA = "0xFE59EC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xFE5E04", Offset = "0xFE5E04", VA = "0xFE5E04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xFE5E08", Offset = "0xFE5E08", VA = "0xFE5E08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xFE5E74", Offset = "0xFE5E74", VA = "0xFE5E74")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xFE69FC", Offset = "0xFE69FC", VA = "0xFE69FC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xFE6D28", Offset = "0xFE6D28", VA = "0xFE6D28")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF5C", Offset = "0xA5CF5C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F7")]
				[Address(RVA = "0xFE7994", Offset = "0xFE7994", VA = "0xFE7994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F9")]
				[Address(RVA = "0xFE79FC", Offset = "0xFE79FC", VA = "0xFE79FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xFE76FC", Offset = "0xFE76FC", VA = "0xFE76FC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xFE77D8", Offset = "0xFE77D8", VA = "0xFE77D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xFE77DC", Offset = "0xFE77DC", VA = "0xFE77DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xFE799C", Offset = "0xFE799C", VA = "0xFE799C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E59")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000E5A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xFE6DF0", Offset = "0xFE6DF0", VA = "0xFE6DF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xFE6EB0", Offset = "0xFE6EB0", VA = "0xFE6EB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xFE6F64", Offset = "0xFE6F64", VA = "0xFE6F64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xFE7090", Offset = "0xFE7090", VA = "0xFE7090")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xFE7200", Offset = "0xFE7200", VA = "0xFE7200")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xFE739C", Offset = "0xFE739C", VA = "0xFE739C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xFE7628", Offset = "0xFE7628", VA = "0xFE7628")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xFE74B0", Offset = "0xFE74B0", VA = "0xFE74B0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xFE74C4", Offset = "0xFE74C4", VA = "0xFE74C4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xFE7680", Offset = "0xFE7680", VA = "0xFE7680")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA65FBC", Offset = "0xA65FBC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xFE7728", Offset = "0xFE7728", VA = "0xFE7728")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000D8")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xFE7A04", Offset = "0xFE7A04", VA = "0xFE7A04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xFE7A14", Offset = "0xFE7A14", VA = "0xFE7A14", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xFE7A1C", Offset = "0xFE7A1C", VA = "0xFE7A1C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xFE7E88", Offset = "0xFE7E88", VA = "0xFE7E88")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000E6D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000E6E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA61E40", Offset = "0xA61E40")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000D9")]
		public float Distance
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xFE7F98", Offset = "0xFE7F98", VA = "0xFE7F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66020", Offset = "0xA66020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xFE7FA0", Offset = "0xFE7FA0", VA = "0xFE7FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66030", Offset = "0xA66030")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public float Scale
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xFE7FA8", Offset = "0xFE7FA8", VA = "0xFE7FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xFE7FB0", Offset = "0xFE7FB0", VA = "0xFE7FB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xFE7A18", Offset = "0xFE7A18", VA = "0xFE7A18", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xFE7FB8", Offset = "0xFE7FB8", VA = "0xFE7FB8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xFE7A64", Offset = "0xFE7A64", VA = "0xFE7A64")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xFE7D3C", Offset = "0xFE7D3C", VA = "0xFE7D3C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000E64")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xFE7EF8", Offset = "0xFE7EF8", VA = "0xFE7EF8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF6C", Offset = "0xA5CF6C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013FD")]
				[Address(RVA = "0xFE89B0", Offset = "0xFE89B0", VA = "0xFE89B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FF")]
				[Address(RVA = "0xFE8A18", Offset = "0xFE8A18", VA = "0xFE8A18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xFE85B4", Offset = "0xFE85B4", VA = "0xFE85B4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xFE874C", Offset = "0xFE874C", VA = "0xFE874C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xFE8750", Offset = "0xFE8750", VA = "0xFE8750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xFE89B8", Offset = "0xFE89B8", VA = "0xFE89B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xFE8188", Offset = "0xFE8188", VA = "0xFE8188")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xFE81E8", Offset = "0xFE81E8", VA = "0xFE81E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xFE82F4", Offset = "0xFE82F4", VA = "0xFE82F4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xFE844C", Offset = "0xFE844C", VA = "0xFE844C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xFE8354", Offset = "0xFE8354", VA = "0xFE8354")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xFE8528", Offset = "0xFE8528", VA = "0xFE8528")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA66040", Offset = "0xA66040")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xFE85E0", Offset = "0xFE85E0", VA = "0xFE85E0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xFE868C", Offset = "0xFE868C", VA = "0xFE868C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xFE86EC", Offset = "0xFE86EC", VA = "0xFE86EC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200031F")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001471")]
			Start,
			[Token(Token = "0x4001472")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001473")]
			Stop
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF7C", Offset = "0xA5CF7C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001403")]
				[Address(RVA = "0xFE96A0", Offset = "0xFE96A0", VA = "0xFE96A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001405")]
				[Address(RVA = "0xFE9708", Offset = "0xFE9708", VA = "0xFE9708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0xFE8D50", Offset = "0xFE8D50", VA = "0xFE8D50")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001401")]
			[Address(RVA = "0xFE9464", Offset = "0xFE9464", VA = "0xFE9464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0xFE9468", Offset = "0xFE9468", VA = "0xFE9468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0xFE96A8", Offset = "0xFE96A8", VA = "0xFE96A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E81")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000E82")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000E83")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000E84")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA61EA0", Offset = "0xA61EA0")]
		protected float _initialSpeed;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xFE8A20", Offset = "0xFE8A20", VA = "0xFE8A20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xFE8B90", Offset = "0xFE8B90", VA = "0xFE8B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xFE8B9C", Offset = "0xFE8B9C", VA = "0xFE8B9C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xFE8CF0", Offset = "0xFE8CF0", VA = "0xFE8CF0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xFE8B00", Offset = "0xFE8B00", VA = "0xFE8B00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA660A4", Offset = "0xA660A4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xFE8D7C", Offset = "0xFE8D7C", VA = "0xFE8D7C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xFE8C8C", Offset = "0xFE8C8C", VA = "0xFE8C8C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xFE8FB0", Offset = "0xFE8FB0", VA = "0xFE8FB0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xFE915C", Offset = "0xFE915C", VA = "0xFE915C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xFE906C", Offset = "0xFE906C", VA = "0xFE906C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xFE9218", Offset = "0xFE9218", VA = "0xFE9218")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xFE92A0", Offset = "0xFE92A0", VA = "0xFE92A0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xFE932C", Offset = "0xFE932C", VA = "0xFE932C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xFE93E8", Offset = "0xFE93E8", VA = "0xFE93E8")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xFE93F8", Offset = "0xFE93F8", VA = "0xFE93F8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000DB")]
		public float TrackLength
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xFE9710", Offset = "0xFE9710", VA = "0xFE9710")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xFE9718", Offset = "0xFE9718", VA = "0xFE9718")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xFE9720", Offset = "0xFE9720", VA = "0xFE9720")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xFE8038", Offset = "0xFE8038", VA = "0xFE8038")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xFE9724", Offset = "0xFE9724", VA = "0xFE9724")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xFE9930", Offset = "0xFE9930", VA = "0xFE9930")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xFE9A4C", Offset = "0xFE9A4C", VA = "0xFE9A4C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class Pose
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xFE353C", Offset = "0xFE353C", VA = "0xFE353C")]
		public Pose()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xFE35E8", Offset = "0xFE35E8", VA = "0xFE35E8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF8C", Offset = "0xA5CF8C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001409")]
				[Address(RVA = "0xFEA098", Offset = "0xFEA098", VA = "0xFEA098", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140B")]
				[Address(RVA = "0xFEA100", Offset = "0xFEA100", VA = "0xFEA100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0xFE9D0C", Offset = "0xFE9D0C", VA = "0xFE9D0C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0xFE9E94", Offset = "0xFE9E94", VA = "0xFE9E94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0xFE9E98", Offset = "0xFE9E98", VA = "0xFE9E98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600140A")]
			[Address(RVA = "0xFEA0A0", Offset = "0xFEA0A0", VA = "0xFEA0A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CF9C", Offset = "0xA5CF9C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600140F")]
				[Address(RVA = "0xFEA1E0", Offset = "0xFEA1E0", VA = "0xFEA1E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001411")]
				[Address(RVA = "0xFEA248", Offset = "0xFEA248", VA = "0xFEA248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600140C")]
			[Address(RVA = "0xFE9DF4", Offset = "0xFE9DF4", VA = "0xFE9DF4")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0xFEA108", Offset = "0xFEA108", VA = "0xFEA108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600140E")]
			[Address(RVA = "0xFEA10C", Offset = "0xFEA10C", VA = "0xFEA10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001410")]
			[Address(RVA = "0xFEA1E8", Offset = "0xFEA1E8", VA = "0xFEA1E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EA7")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA62088", Offset = "0xA62088")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000DC")]
		public bool IsMoving
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xFE9A68", Offset = "0xFE9A68", VA = "0xFE9A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66108", Offset = "0xA66108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xFE9A70", Offset = "0xFE9A70", VA = "0xFE9A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66118", Offset = "0xA66118")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xFE9A7C", Offset = "0xFE9A7C", VA = "0xFE9A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xFE9AB8", Offset = "0xFE9AB8", VA = "0xFE9AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xFE9C0C", Offset = "0xFE9C0C", VA = "0xFE9C0C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xFE9C80", Offset = "0xFE9C80", VA = "0xFE9C80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA66128", Offset = "0xA66128")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xFE9D38", Offset = "0xFE9D38", VA = "0xFE9D38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6618C", Offset = "0xA6618C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xFE9E20", Offset = "0xFE9E20", VA = "0xFE9E20")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xFE9E8C", Offset = "0xFE9E8C", VA = "0xFE9E8C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xFEA250", Offset = "0xFEA250", VA = "0xFEA250")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xFEA2C8", Offset = "0xFEA2C8", VA = "0xFEA2C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xFEA380", Offset = "0xFEA380", VA = "0xFEA380")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xFEA480", Offset = "0xFEA480", VA = "0xFEA480")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xFEA500", Offset = "0xFEA500", VA = "0xFEA500")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xFEA5DC", Offset = "0xFEA5DC", VA = "0xFEA5DC")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000EB8")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000EB9")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000EBA")]
		EUDT_None,
		[Token(Token = "0x4000EBB")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001F8")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFAC", Offset = "0xA5CFAC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001415")]
				[Address(RVA = "0xFE2908", Offset = "0xFE2908", VA = "0xFE2908", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001417")]
				[Address(RVA = "0xFE2970", Offset = "0xFE2970", VA = "0xFE2970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0xFE1F5C", Offset = "0xFE1F5C", VA = "0xFE1F5C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0xFE26A0", Offset = "0xFE26A0", VA = "0xFE26A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001414")]
			[Address(RVA = "0xFE26A4", Offset = "0xFE26A4", VA = "0xFE26A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0xFE2910", Offset = "0xFE2910", VA = "0xFE2910", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000EBD")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000EBE")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000EBF")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA620C8", Offset = "0xA620C8")]
		public GameObject mainCamera;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA62100", Offset = "0xA62100")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xFE1224", Offset = "0xFE1224", VA = "0xFE1224")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xFE1A60", Offset = "0xFE1A60", VA = "0xFE1A60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xFE1BA0", Offset = "0xFE1BA0", VA = "0xFE1BA0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xFE1CD4", Offset = "0xFE1CD4", VA = "0xFE1CD4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xFE1E08", Offset = "0xFE1E08", VA = "0xFE1E08")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xFE1B74", Offset = "0xFE1B74", VA = "0xFE1B74")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xFE1EE0", Offset = "0xFE1EE0", VA = "0xFE1EE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA661F0", Offset = "0xA661F0")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xFE1F88", Offset = "0xFE1F88", VA = "0xFE1F88")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xFE15A8", Offset = "0xFE15A8", VA = "0xFE15A8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xFE20B0", Offset = "0xFE20B0", VA = "0xFE20B0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xFE1FBC", Offset = "0xFE1FBC", VA = "0xFE1FBC")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xFE244C", Offset = "0xFE244C", VA = "0xFE244C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xFE2528", Offset = "0xFE2528", VA = "0xFE2528")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xFE25B0", Offset = "0xFE25B0", VA = "0xFE25B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66254", Offset = "0xA66254")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xFE2600", Offset = "0xFE2600", VA = "0xFE2600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66264", Offset = "0xA66264")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xFE2650", Offset = "0xFE2650", VA = "0xFE2650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA66274", Offset = "0xA66274")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA5C550", Offset = "0xA5C550")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFBC", Offset = "0xA5CFBC")]
		private sealed class <>c
		{
			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001419")]
			[Address(RVA = "0x108FBF0", Offset = "0x108FBF0", VA = "0x108FBF0")]
			public <>c()
			{
			}

			[Token(Token = "0x600141A")]
			[Address(RVA = "0x108FBF8", Offset = "0x108FBF8", VA = "0x108FBF8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000ED4")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000ED5")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000ED6")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000ED7")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000ED8")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000ED9")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000EDA")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000EDB")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000EDC")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000EDD")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000EDE")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x108EE08", Offset = "0x108EE08", VA = "0x108EE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x108EE68", Offset = "0x108EE68", VA = "0x108EE68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x108F290", Offset = "0x108F290", VA = "0x108F290")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x108F35C", Offset = "0x108F35C", VA = "0x108F35C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x108F468", Offset = "0x108F468", VA = "0x108F468")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x108F7A0", Offset = "0x108F7A0", VA = "0x108F7A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x108F908", Offset = "0x108F908", VA = "0x108F908")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x108FA54", Offset = "0x108FA54", VA = "0x108FA54")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x108F504", Offset = "0x108F504", VA = "0x108F504")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x108F5A4", Offset = "0x108F5A4", VA = "0x108F5A4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x108F0E4", Offset = "0x108F0E4", VA = "0x108F0E4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x108FB70", Offset = "0x108FB70", VA = "0x108FB70")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000EF1")]
		Default,
		[Token(Token = "0x4000EF2")]
		Generic,
		[Token(Token = "0x4000EF3")]
		PingPongBall,
		[Token(Token = "0x4000EF4")]
		Controller
	}
	[Token(Token = "0x20001FB")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000DD")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x108FC24", Offset = "0x108FC24", VA = "0x108FC24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x108FC2C", Offset = "0x108FC2C", VA = "0x108FC2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x108FC34", Offset = "0x108FC34", VA = "0x108FC34")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x108FC3C", Offset = "0x108FC3C", VA = "0x108FC3C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x108FC44", Offset = "0x108FC44", VA = "0x108FC44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x108FEB8", Offset = "0x108FEB8", VA = "0x108FEB8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x108FF14", Offset = "0x108FF14", VA = "0x108FF14")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x108FF58", Offset = "0x108FF58", VA = "0x108FF58")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001FD")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000EFC")]
		TRIANGLES,
		[Token(Token = "0x4000EFD")]
		QUADS
	}
	[Token(Token = "0x20001FE")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000EFF")]
		ABSORPTION,
		[Token(Token = "0x4000F00")]
		TRANSMISSION,
		[Token(Token = "0x4000F01")]
		SCATTERING
	}
	[Token(Token = "0x20001FF")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000200")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000F06")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000F07")]
		public const string Tab = "    ";

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1090520", Offset = "0x1090520", VA = "0x1090520")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66284", Offset = "0xA66284")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66284", Offset = "0xA66284")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x10905A8", Offset = "0x10905A8", VA = "0x10905A8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA662E4", Offset = "0xA662E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA662E4", Offset = "0xA662E4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1090640", Offset = "0x1090640", VA = "0x1090640")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66344", Offset = "0xA66344")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66344", Offset = "0xA66344")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x10906C8", Offset = "0x10906C8", VA = "0x10906C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA663A4", Offset = "0xA663A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA663A4", Offset = "0xA663A4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1090750", Offset = "0x1090750", VA = "0x1090750")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66404", Offset = "0xA66404")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA66404", Offset = "0xA66404")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class CAPI
	{
		[Token(Token = "0x2000325")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000326")]
		public enum Result
		{
			[Token(Token = "0x400148F")]
			Success = 0,
			[Token(Token = "0x4001490")]
			Failure = -1000,
			[Token(Token = "0x4001491")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001492")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001493")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001494")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001495")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001496")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001497")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000327")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1097FC0", Offset = "0x1097FC0", VA = "0x1097FC0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000F08")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000F10")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1090850", Offset = "0x1090850", VA = "0x1090850")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x10908E0", Offset = "0x10908E0", VA = "0x10908E0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1090AA8", Offset = "0x1090AA8", VA = "0x1090AA8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1090B8C", Offset = "0x1090B8C", VA = "0x1090B8C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1090BFC", Offset = "0x1090BFC", VA = "0x1090BFC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1090C70", Offset = "0x1090C70", VA = "0x1090C70")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1090CF0", Offset = "0x1090CF0", VA = "0x1090CF0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1090E08", Offset = "0x1090E08", VA = "0x1090E08")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1090E88", Offset = "0x1090E88", VA = "0x1090E88")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1090FA0", Offset = "0x1090FA0", VA = "0x1090FA0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1091020", Offset = "0x1091020", VA = "0x1091020")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x10910A0", Offset = "0x10910A0", VA = "0x10910A0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1091120", Offset = "0x1091120", VA = "0x1091120")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x10911A0", Offset = "0x10911A0", VA = "0x10911A0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1091230", Offset = "0x1091230", VA = "0x1091230")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x10912C0", Offset = "0x10912C0", VA = "0x10912C0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1091350", Offset = "0x1091350", VA = "0x1091350")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x10913D0", Offset = "0x10913D0", VA = "0x10913D0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1091450", Offset = "0x1091450", VA = "0x1091450")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x10914E0", Offset = "0x10914E0", VA = "0x10914E0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1091570", Offset = "0x1091570", VA = "0x1091570")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1091600", Offset = "0x1091600", VA = "0x1091600")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1091680", Offset = "0x1091680", VA = "0x1091680")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1091720", Offset = "0x1091720", VA = "0x1091720")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x10917A0", Offset = "0x10917A0", VA = "0x10917A0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1091840", Offset = "0x1091840", VA = "0x1091840")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1091900", Offset = "0x1091900", VA = "0x1091900")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x10919D0", Offset = "0x10919D0", VA = "0x10919D0")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1091A60", Offset = "0x1091A60", VA = "0x1091A60")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1091AF0", Offset = "0x1091AF0", VA = "0x1091AF0")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1091B80", Offset = "0x1091B80", VA = "0x1091B80")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1091C10", Offset = "0x1091C10", VA = "0x1091C10")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1091CA0", Offset = "0x1091CA0", VA = "0x1091CA0")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1091D20", Offset = "0x1091D20", VA = "0x1091D20")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1091E40", Offset = "0x1091E40", VA = "0x1091E40")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1091DB0", Offset = "0x1091DB0", VA = "0x1091DB0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1092040", Offset = "0x1092040", VA = "0x1092040")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1092178", Offset = "0x1092178", VA = "0x1092178")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE6")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x10921F8", Offset = "0x10921F8", VA = "0x10921F8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1092468", Offset = "0x1092468", VA = "0x1092468")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x10924E8", Offset = "0x10924E8", VA = "0x10924E8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1092620", Offset = "0x1092620", VA = "0x1092620")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x10926A0", Offset = "0x10926A0", VA = "0x10926A0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x10927D8", Offset = "0x10927D8", VA = "0x10927D8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1092858", Offset = "0x1092858", VA = "0x1092858")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1092990", Offset = "0x1092990", VA = "0x1092990")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1092A10", Offset = "0x1092A10", VA = "0x1092A10")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1092B48", Offset = "0x1092B48", VA = "0x1092B48")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1092BC8", Offset = "0x1092BC8", VA = "0x1092BC8")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1092C48", Offset = "0x1092C48", VA = "0x1092C48")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1092CE0", Offset = "0x1092CE0", VA = "0x1092CE0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1092D60", Offset = "0x1092D60", VA = "0x1092D60")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1092F0C", Offset = "0x1092F0C", VA = "0x1092F0C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1093038", Offset = "0x1093038", VA = "0x1093038")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1092E8C", Offset = "0x1092E8C", VA = "0x1092E8C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x10930B8", Offset = "0x10930B8", VA = "0x10930B8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1093138", Offset = "0x1093138", VA = "0x1093138")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x10931C8", Offset = "0x10931C8", VA = "0x10931C8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1093248", Offset = "0x1093248", VA = "0x1093248")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x10932D8", Offset = "0x10932D8", VA = "0x10932D8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1093358", Offset = "0x1093358", VA = "0x1093358")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x10933D8", Offset = "0x10933D8", VA = "0x10933D8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1093614", Offset = "0x1093614", VA = "0x1093614")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x10936A4", Offset = "0x10936A4", VA = "0x10936A4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1093890", Offset = "0x1093890", VA = "0x1093890")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1093928", Offset = "0x1093928", VA = "0x1093928")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1093A4C", Offset = "0x1093A4C", VA = "0x1093A4C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1093ACC", Offset = "0x1093ACC", VA = "0x1093ACC")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1093B4C", Offset = "0x1093B4C", VA = "0x1093B4C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1093C74", Offset = "0x1093C74", VA = "0x1093C74")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1093CF4", Offset = "0x1093CF4", VA = "0x1093CF4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1093E1C", Offset = "0x1093E1C", VA = "0x1093E1C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1093E9C", Offset = "0x1093E9C", VA = "0x1093E9C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1093F2C", Offset = "0x1093F2C", VA = "0x1093F2C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1093FBC", Offset = "0x1093FBC", VA = "0x1093FBC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x109404C", Offset = "0x109404C", VA = "0x109404C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x10940CC", Offset = "0x10940CC", VA = "0x10940CC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1094154", Offset = "0x1094154", VA = "0x1094154")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x10941DC", Offset = "0x10941DC", VA = "0x10941DC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x109425C", Offset = "0x109425C", VA = "0x109425C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x10942DC", Offset = "0x10942DC", VA = "0x10942DC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1094390", Offset = "0x1094390", VA = "0x1094390")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1094420", Offset = "0x1094420", VA = "0x1094420")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x10944B0", Offset = "0x10944B0", VA = "0x10944B0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1094530", Offset = "0x1094530", VA = "0x1094530")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x10945B0", Offset = "0x10945B0", VA = "0x10945B0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1094630", Offset = "0x1094630", VA = "0x1094630")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x10946C8", Offset = "0x10946C8", VA = "0x10946C8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1094758", Offset = "0x1094758", VA = "0x1094758")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x10947E8", Offset = "0x10947E8", VA = "0x10947E8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1094878", Offset = "0x1094878", VA = "0x1094878")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1094910", Offset = "0x1094910", VA = "0x1094910")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x10949A8", Offset = "0x10949A8", VA = "0x10949A8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1094A28", Offset = "0x1094A28", VA = "0x1094A28")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1094AA8", Offset = "0x1094AA8", VA = "0x1094AA8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1094BD0", Offset = "0x1094BD0", VA = "0x1094BD0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1094C50", Offset = "0x1094C50", VA = "0x1094C50")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1094D78", Offset = "0x1094D78", VA = "0x1094D78")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1094DF8", Offset = "0x1094DF8", VA = "0x1094DF8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1094F20", Offset = "0x1094F20", VA = "0x1094F20")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1094FA0", Offset = "0x1094FA0", VA = "0x1094FA0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1095148", Offset = "0x1095148", VA = "0x1095148")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x10953E4", Offset = "0x10953E4", VA = "0x10953E4")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x10950C8", Offset = "0x10950C8", VA = "0x10950C8")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1095474", Offset = "0x1095474", VA = "0x1095474")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x10954F4", Offset = "0x10954F4", VA = "0x10954F4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1095584", Offset = "0x1095584", VA = "0x1095584")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1095614", Offset = "0x1095614", VA = "0x1095614")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x10956A4", Offset = "0x10956A4", VA = "0x10956A4")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1095744", Offset = "0x1095744", VA = "0x1095744")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x10957E4", Offset = "0x10957E4", VA = "0x10957E4")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1095884", Offset = "0x1095884", VA = "0x1095884")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1095904", Offset = "0x1095904", VA = "0x1095904")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x1095984", Offset = "0x1095984", VA = "0x1095984")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1095A04", Offset = "0x1095A04", VA = "0x1095A04")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1095A84", Offset = "0x1095A84", VA = "0x1095A84")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1095B04", Offset = "0x1095B04", VA = "0x1095B04")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1095C2C", Offset = "0x1095C2C", VA = "0x1095C2C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1095CC4", Offset = "0x1095CC4", VA = "0x1095CC4")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1095D44", Offset = "0x1095D44", VA = "0x1095D44")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1095DA8", Offset = "0x1095DA8", VA = "0x1095DA8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1095EC4", Offset = "0x1095EC4", VA = "0x1095EC4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1095F54", Offset = "0x1095F54", VA = "0x1095F54")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1096098", Offset = "0x1096098", VA = "0x1096098")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1096128", Offset = "0x1096128", VA = "0x1096128")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x10961C8", Offset = "0x10961C8", VA = "0x10961C8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1096560", Offset = "0x1096560", VA = "0x1096560")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x10965E0", Offset = "0x10965E0", VA = "0x10965E0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1096678", Offset = "0x1096678", VA = "0x1096678")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1096E40", Offset = "0x1096E40", VA = "0x1096E40")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1096EC0", Offset = "0x1096EC0", VA = "0x1096EC0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x10907E8", Offset = "0x10907E8", VA = "0x10907E8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA66464", Offset = "0xA66464")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1096F58", Offset = "0x1096F58", VA = "0x1096F58")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1096FDC", Offset = "0x1096FDC", VA = "0x1096FDC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x109705C", Offset = "0x109705C", VA = "0x109705C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x10970DC", Offset = "0x10970DC", VA = "0x10970DC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x109715C", Offset = "0x109715C", VA = "0x109715C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1097B3C", Offset = "0x1097B3C", VA = "0x1097B3C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1097BBC", Offset = "0x1097BBC", VA = "0x1097BBC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x109809C", Offset = "0x109809C", VA = "0x109809C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1097F30", Offset = "0x1097F30", VA = "0x1097F30")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1098110", Offset = "0x1098110", VA = "0x1098110")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000202")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xA621B8", Offset = "0xA621B8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1088398", Offset = "0x1088398", VA = "0x1088398")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x108839C", Offset = "0x108839C", VA = "0x108839C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x108845C", Offset = "0x108845C", VA = "0x108845C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62204", Offset = "0xA62204")]
		public bool autoRetrigger;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA6223C", Offset = "0xA6223C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62260", Offset = "0xA62260")]
		public Transform[] playPositions;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x12070B8", Offset = "0x12070B8", VA = "0x12070B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1207268", Offset = "0x1207268", VA = "0x1207268")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1207448", Offset = "0x1207448", VA = "0x1207448")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x12072C8", Offset = "0x12072C8", VA = "0x12072C8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x120750C", Offset = "0x120750C", VA = "0x120750C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1207684", Offset = "0x1207684", VA = "0x1207684")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000F1F")]
		Default,
		[Token(Token = "0x4000F20")]
		Preload,
		[Token(Token = "0x4000F21")]
		ManualPreload
	}
	[Token(Token = "0x2000205")]
	public enum Fade
	{
		[Token(Token = "0x4000F23")]
		In,
		[Token(Token = "0x4000F24")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class SoundGroup
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62298", Offset = "0xA62298")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1088228", Offset = "0x1088228", VA = "0x1088228")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x10882DC", Offset = "0x10882DC", VA = "0x10882DC")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1085D78", Offset = "0x1085D78", VA = "0x1085D78")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1086114", Offset = "0x1086114", VA = "0x1086114")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1087794", Offset = "0x1087794", VA = "0x1087794")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000207")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000328")]
		public enum Fade
		{
			[Token(Token = "0x400149A")]
			In,
			[Token(Token = "0x400149B")]
			Out
		}

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFCC", Offset = "0xA5CFCC")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001421")]
			[Address(RVA = "0x1085780", Offset = "0x1085780", VA = "0x1085780")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1085788", Offset = "0x1085788", VA = "0x1085788")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFDC", Offset = "0xA5CFDC")]
		private sealed class <>c
		{
			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x10856E8", Offset = "0x10856E8", VA = "0x10856E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x10856F0", Offset = "0x10856F0", VA = "0x10856F0")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA622C4", Offset = "0xA622C4")]
		public bool makePersistent;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA622FC", Offset = "0xA622FC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62334", Offset = "0xA62334")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6236C", Offset = "0xA6236C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA623A4", Offset = "0xA623A4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA623DC", Offset = "0xA623DC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62414", Offset = "0xA62414")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6244C", Offset = "0xA6244C")]
		public bool verboseLogging;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62484", Offset = "0xA62484")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA624BC", Offset = "0xA624BC")]
		public float volumeSoundFX;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA624F4", Offset = "0xA624F4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000E0")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x120775C", Offset = "0x120775C", VA = "0x120775C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x120783C", Offset = "0x120783C", VA = "0x120783C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x12078A4", Offset = "0x12078A4", VA = "0x12078A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E3")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1207918", Offset = "0x1207918", VA = "0x1207918")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E4")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x120798C", Offset = "0x120798C", VA = "0x120798C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1207A00", Offset = "0x1207A00", VA = "0x1207A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x1207A74", Offset = "0x1207A74", VA = "0x1207A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x1209930", Offset = "0x1209930", VA = "0x1209930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1207AE8", Offset = "0x1207AE8", VA = "0x1207AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1207D1C", Offset = "0x1207D1C", VA = "0x1207D1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1207AEC", Offset = "0x1207AEC", VA = "0x1207AEC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1208A4C", Offset = "0x1208A4C", VA = "0x1208A4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1207E74", Offset = "0x1207E74", VA = "0x1207E74")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x12090CC", Offset = "0x12090CC", VA = "0x12090CC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x120924C", Offset = "0x120924C", VA = "0x120924C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x12093E8", Offset = "0x12093E8", VA = "0x12093E8")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x12094E8", Offset = "0x12094E8", VA = "0x12094E8")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1209578", Offset = "0x1209578", VA = "0x1209578")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1209998", Offset = "0x1209998", VA = "0x1209998")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1209A10", Offset = "0x1209A10", VA = "0x1209A10")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1208328", Offset = "0x1208328", VA = "0x1208328")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1208A50", Offset = "0x1208A50", VA = "0x1208A50")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1209B54", Offset = "0x1209B54", VA = "0x1209B54")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1209C58", Offset = "0x1209C58", VA = "0x1209C58")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1209D60", Offset = "0x1209D60", VA = "0x1209D60")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1209A88", Offset = "0x1209A88", VA = "0x1209A88")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1209E94", Offset = "0x1209E94", VA = "0x1209E94")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1209F50", Offset = "0x1209F50", VA = "0x1209F50")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x120A070", Offset = "0x120A070", VA = "0x120A070")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1207458", Offset = "0x1207458", VA = "0x1207458")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x12075D0", Offset = "0x12075D0", VA = "0x12075D0")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x120A12C", Offset = "0x120A12C", VA = "0x120A12C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x120A1F8", Offset = "0x120A1F8", VA = "0x120A1F8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x120A28C", Offset = "0x120A28C", VA = "0x120A28C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x120A350", Offset = "0x120A350", VA = "0x120A350")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x120A3F4", Offset = "0x120A3F4", VA = "0x120A3F4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x120A4B0", Offset = "0x120A4B0", VA = "0x120A4B0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x120B048", Offset = "0x120B048", VA = "0x120B048")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x120B744", Offset = "0x120B744", VA = "0x120B744")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x120B924", Offset = "0x120B924", VA = "0x120B924")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x120C508", Offset = "0x120C508", VA = "0x120C508")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x120A6B8", Offset = "0x120A6B8", VA = "0x120A6B8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x120C628", Offset = "0x120C628", VA = "0x120C628")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x120C710", Offset = "0x120C710", VA = "0x120C710")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x120C800", Offset = "0x120C800", VA = "0x120C800")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x120CAF8", Offset = "0x120CAF8", VA = "0x120CAF8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x120CC40", Offset = "0x120CC40", VA = "0x120CC40")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x120CD68", Offset = "0x120CD68", VA = "0x120CD68")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x120CE8C", Offset = "0x120CE8C", VA = "0x120CE8C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x120CF64", Offset = "0x120CF64", VA = "0x120CF64")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x120D0AC", Offset = "0x120D0AC", VA = "0x120D0AC")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x120D4B0", Offset = "0x120D4B0", VA = "0x120D4B0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000F4C")]
		None = -1,
		[Token(Token = "0x4000F4D")]
		Reserved,
		[Token(Token = "0x4000F4E")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1085884", Offset = "0x1085884", VA = "0x1085884")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1085828", Offset = "0x1085828", VA = "0x1085828")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200032B")]
		public enum FadeState
		{
			[Token(Token = "0x40014A0")]
			Null,
			[Token(Token = "0x40014A1")]
			FadingIn,
			[Token(Token = "0x40014A2")]
			FadingOut,
			[Token(Token = "0x40014A3")]
			Ducking
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFEC", Offset = "0xA5CFEC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001429")]
				[Address(RVA = "0x1086A64", Offset = "0x1086A64", VA = "0x1086A64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600142B")]
				[Address(RVA = "0x1086ACC", Offset = "0x1086ACC", VA = "0x1086ACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x10864F8", Offset = "0x10864F8", VA = "0x10864F8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0x1086968", Offset = "0x1086968", VA = "0x1086968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x108696C", Offset = "0x108696C", VA = "0x108696C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0x1086A6C", Offset = "0x1086A6C", VA = "0x1086A6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5CFFC", Offset = "0xA5CFFC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600142F")]
				[Address(RVA = "0x1086F3C", Offset = "0x1086F3C", VA = "0x1086F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001431")]
				[Address(RVA = "0x1086FA4", Offset = "0x1086FA4", VA = "0x1086FA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x10868F8", Offset = "0x10868F8", VA = "0x10868F8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0x1086DC4", Offset = "0x1086DC4", VA = "0x1086DC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x1086DC8", Offset = "0x1086DC8", VA = "0x1086DC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x1086F44", Offset = "0x1086F44", VA = "0x1086F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5D00C", Offset = "0xA5D00C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001435")]
				[Address(RVA = "0x1086D54", Offset = "0x1086D54", VA = "0x1086D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001437")]
				[Address(RVA = "0x1086DBC", Offset = "0x1086DBC", VA = "0x1086DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x1086924", Offset = "0x1086924", VA = "0x1086924")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0x1086AD4", Offset = "0x1086AD4", VA = "0x1086AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x1086AD8", Offset = "0x1086AD8", VA = "0x1086AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x1086D5C", Offset = "0x1086D5C", VA = "0x1086D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000E8")]
		public float volume
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1085924", Offset = "0x1085924", VA = "0x1085924")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x1085940", Offset = "0x1085940", VA = "0x1085940")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public float pitch
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x108595C", Offset = "0x108595C", VA = "0x108595C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1085978", Offset = "0x1085978", VA = "0x1085978")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public AudioClip clip
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1085994", Offset = "0x1085994", VA = "0x1085994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x10859B0", Offset = "0x10859B0", VA = "0x10859B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public float time
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x10859CC", Offset = "0x10859CC", VA = "0x10859CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x10859E8", Offset = "0x10859E8", VA = "0x10859E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float length
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1085A04", Offset = "0x1085A04", VA = "0x1085A04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		public bool loop
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1085ABC", Offset = "0x1085ABC", VA = "0x1085ABC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1085AD8", Offset = "0x1085AD8", VA = "0x1085AD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public bool mute
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1085AF8", Offset = "0x1085AF8", VA = "0x1085AF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1085B14", Offset = "0x1085B14", VA = "0x1085B14")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1085B34", Offset = "0x1085B34", VA = "0x1085B34")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1085B50", Offset = "0x1085B50", VA = "0x1085B50")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public bool isPlaying
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1085B6C", Offset = "0x1085B6C", VA = "0x1085B6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1085B88", Offset = "0x1085B88", VA = "0x1085B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1085D40", Offset = "0x1085D40", VA = "0x1085D40")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1085E08", Offset = "0x1085E08", VA = "0x1085E08")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1085E10", Offset = "0x1085E10", VA = "0x1085E10")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1085E44", Offset = "0x1085E44", VA = "0x1085E44")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1085E4C", Offset = "0x1085E4C", VA = "0x1085E4C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1085E54", Offset = "0x1085E54", VA = "0x1085E54")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1085EFC", Offset = "0x1085EFC", VA = "0x1085EFC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1085F68", Offset = "0x1085F68", VA = "0x1085F68")]
		public void Play()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1085FC8", Offset = "0x1085FC8", VA = "0x1085FC8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1086000", Offset = "0x1086000", VA = "0x1086000")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x10861A4", Offset = "0x10861A4", VA = "0x10861A4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x10861FC", Offset = "0x10861FC", VA = "0x10861FC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1086308", Offset = "0x1086308", VA = "0x1086308")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x10863D8", Offset = "0x10863D8", VA = "0x10863D8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1086420", Offset = "0x1086420", VA = "0x1086420")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x108644C", Offset = "0x108644C", VA = "0x108644C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA664C8", Offset = "0xA664C8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1086524", Offset = "0x1086524", VA = "0x1086524")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x108661C", Offset = "0x108661C", VA = "0x108661C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x108674C", Offset = "0x108674C", VA = "0x108674C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x10867C4", Offset = "0x10867C4", VA = "0x10867C4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x108685C", Offset = "0x108685C", VA = "0x108685C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x108658C", Offset = "0x108658C", VA = "0x108658C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA6652C", Offset = "0xA6652C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1086698", Offset = "0x1086698", VA = "0x1086698")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA66590", Offset = "0xA66590")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1086950", Offset = "0x1086950", VA = "0x1086950")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000F65")]
		Random,
		[Token(Token = "0x4000F66")]
		Sequential
	}
	[Token(Token = "0x200020D")]
	public enum FreqHint
	{
		[Token(Token = "0x4000F68")]
		None,
		[Token(Token = "0x4000F69")]
		Wide,
		[Token(Token = "0x4000F6A")]
		Narrow
	}
	[Token(Token = "0x200020E")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000F6C")]
		VeryLow = -2,
		[Token(Token = "0x4000F6D")]
		Low,
		[Token(Token = "0x4000F6E")]
		Default,
		[Token(Token = "0x4000F6F")]
		High,
		[Token(Token = "0x4000F70")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class OSPProps
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA625DC", Offset = "0xA625DC")]
		public bool enableSpatialization;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62614", Offset = "0xA62614")]
		public bool useFastOverride;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA6264C", Offset = "0xA6264C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA6264C", Offset = "0xA6264C")]
		public float gain;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA626A0", Offset = "0xA626A0")]
		public bool enableInvSquare;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA626D8", Offset = "0xA626D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA626D8", Offset = "0xA626D8")]
		public float volumetric;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62730", Offset = "0xA62730")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA62730", Offset = "0xA62730")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1085894", Offset = "0x1085894", VA = "0x1085894")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class SoundFX
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62790", Offset = "0xA62790")]
		public string name;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA627C8", Offset = "0xA627C8")]
		public SoundFXNext playback;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62800", Offset = "0xA62800")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62800", Offset = "0xA62800")]
		public float volume;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62854", Offset = "0xA62854")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA62854", Offset = "0xA62854")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA628B0", Offset = "0xA628B0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA628B0", Offset = "0xA628B0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62910", Offset = "0xA62910")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62948", Offset = "0xA62948")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62980", Offset = "0xA62980")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA629B8", Offset = "0xA629B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA629B8", Offset = "0xA629B8")]
		public float spread;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62A10", Offset = "0xA62A10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA62A10", Offset = "0xA62A10")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62A64", Offset = "0xA62A64")]
		public SoundPriority priority;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62A9C", Offset = "0xA62A9C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA62A9C", Offset = "0xA62A9C")]
		public Vector2 delay;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62AF8", Offset = "0xA62AF8")]
		public bool looping;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62B30", Offset = "0xA62B30")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000F1")]
		public int Length
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1087508", Offset = "0x1087508", VA = "0x1087508")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F2")]
		public bool IsValid
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x1087524", Offset = "0x1087524", VA = "0x1087524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x10875C8", Offset = "0x10875C8", VA = "0x10875C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x10875D0", Offset = "0x10875D0", VA = "0x10875D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x10875D8", Offset = "0x10875D8", VA = "0x10875D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F5")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x10875E4", Offset = "0x10875E4", VA = "0x10875E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1086FAC", Offset = "0x1086FAC", VA = "0x1086FAC")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x10875FC", Offset = "0x10875FC", VA = "0x10875FC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x10876CC", Offset = "0x10876CC", VA = "0x10876CC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x108776C", Offset = "0x108776C", VA = "0x108776C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x10877B4", Offset = "0x10877B4", VA = "0x10877B4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x10878B0", Offset = "0x10878B0", VA = "0x10878B0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x10878BC", Offset = "0x10878BC", VA = "0x10878BC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x108799C", Offset = "0x108799C", VA = "0x108799C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1087AB4", Offset = "0x1087AB4", VA = "0x1087AB4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1087B44", Offset = "0x1087B44", VA = "0x1087B44")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1087BDC", Offset = "0x1087BDC", VA = "0x1087BDC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1087C6C", Offset = "0x1087C6C", VA = "0x1087C6C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1087CFC", Offset = "0x1087CFC", VA = "0x1087CFC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000F6")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1087D78", Offset = "0x1087D78", VA = "0x1087D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public string name
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1087E94", Offset = "0x1087E94", VA = "0x1087E94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1087E9C", Offset = "0x1087E9C", VA = "0x1087E9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public int Length
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x1087EC4", Offset = "0x1087EC4", VA = "0x1087EC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsValid
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x1087F08", Offset = "0x1087F08", VA = "0x1087F08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1087DA8", Offset = "0x1087DA8", VA = "0x1087DA8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1087F40", Offset = "0x1087F40", VA = "0x1087F40")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1087F78", Offset = "0x1087F78", VA = "0x1087F78")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1087FB8", Offset = "0x1087FB8", VA = "0x1087FB8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1088000", Offset = "0x1088000", VA = "0x1088000")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1088080", Offset = "0x1088080", VA = "0x1088080")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x10880C0", Offset = "0x10880C0", VA = "0x10880C0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1088110", Offset = "0x1088110", VA = "0x1088110")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1088148", Offset = "0x1088148", VA = "0x1088148")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1088188", Offset = "0x1088188", VA = "0x1088188")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x10881C0", Offset = "0x10881C0", VA = "0x10881C0")]
		public SoundFXRef()
		{
		}
	}
}
namespace MRCHelpers
{
	[Token(Token = "0x2000212")]
	public class CopyTransform : MonoBehaviour
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_originalTransform;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xDAF0E8", Offset = "0xDAF0E8", VA = "0xDAF0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xDAF19C", Offset = "0xDAF19C", VA = "0xDAF19C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xDAF250", Offset = "0xDAF250", VA = "0xDAF250")]
		public CopyTransform()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class OVRMixedRealityCaptureTestMod : MonoBehaviour
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera defaultExternalCamera;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRPlugin.Fovf defaultFov;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xDAF258", Offset = "0xDAF258", VA = "0xDAF258")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xDAF308", Offset = "0xDAF308", VA = "0xDAF308")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xDAF548", Offset = "0xDAF548", VA = "0xDAF548")]
		private void UpdateDefaultExternalCamera()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xDAF8DC", Offset = "0xDAF8DC", VA = "0xDAF8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xDAFA3C", Offset = "0xDAFA3C", VA = "0xDAFA3C")]
		public OVRMixedRealityCaptureTestMod()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class RemoveMRCamerasTracking : MonoBehaviour
	{
		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5D01C", Offset = "0xA5D01C")]
		private sealed class <RemoveCamerasTracking>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RemoveMRCamerasTracking <>4__this;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <trackingSpaceTransform>5__2;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <camerasNames>5__3;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WaitForSeconds <waiter>5__4;

			[Token(Token = "0x170001DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600143B")]
				[Address(RVA = "0xDAFE78", Offset = "0xDAFE78", VA = "0xDAFE78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600143D")]
				[Address(RVA = "0xDAFEE0", Offset = "0xDAFEE0", VA = "0xDAFEE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0xDAFAEC", Offset = "0xDAFAEC", VA = "0xDAFAEC")]
			[DebuggerHidden]
			public <RemoveCamerasTracking>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001439")]
			[Address(RVA = "0xDAFB20", Offset = "0xDAFB20", VA = "0xDAFB20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0xDAFB24", Offset = "0xDAFB24", VA = "0xDAFB24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0xDAFE80", Offset = "0xDAFE80", VA = "0xDAFE80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xDAFA44", Offset = "0xDAFA44", VA = "0xDAFA44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xDAFA70", Offset = "0xDAFA70", VA = "0xDAFA70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA665F4", Offset = "0xA665F4")]
		private IEnumerator RemoveCamerasTracking()
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xDAFB18", Offset = "0xDAFB18", VA = "0xDAFB18")]
		public RemoveMRCamerasTracking()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000215")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000F92")]
		NONE = 0u,
		[Token(Token = "0x4000F93")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000F94")]
		STAGE = 2u,
		[Token(Token = "0x4000F95")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000F96")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA5C5C4", Offset = "0xA5C5C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA5C5C4", Offset = "0xA5C5C4")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5D02C", Offset = "0xA5D02C")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170001DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001441")]
				[Address(RVA = "0xDC6178", Offset = "0xDC6178", VA = "0xDC6178", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001443")]
				[Address(RVA = "0xDC61E0", Offset = "0xDC61E0", VA = "0xDC61E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0xDC5750", Offset = "0xDC5750", VA = "0xDC5750")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0xDC6090", Offset = "0xDC6090", VA = "0xDC6090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0xDC6094", Offset = "0xDC6094", VA = "0xDC6094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0xDC6180", Offset = "0xDC6180", VA = "0xDC6180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62B78", Offset = "0xA62B78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62B78", Offset = "0xA62B78")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62BE8", Offset = "0xA62BE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62BE8", Offset = "0xA62BE8")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62C58", Offset = "0xA62C58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62C58", Offset = "0xA62C58")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62CC8", Offset = "0xA62CC8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62CC8", Offset = "0xA62CC8")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62D38", Offset = "0xA62D38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62D38", Offset = "0xA62D38")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62DA8", Offset = "0xA62DA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62DA8", Offset = "0xA62DA8")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62E18", Offset = "0xA62E18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62E18", Offset = "0xA62E18")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA62E88", Offset = "0xA62E88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA62E88", Offset = "0xA62E88")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170000FA")]
		public Transform stage
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xDC4C40", Offset = "0xDC4C40", VA = "0xDC4C40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xDC4CE0", Offset = "0xDC4CE0", VA = "0xDC4CE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA6805C", Offset = "0xA6805C")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xDC4DEC", Offset = "0xDC4DEC", VA = "0xDC4DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xDC4DF0", Offset = "0xDC4DF0", VA = "0xDC4DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xDC4DF4", Offset = "0xDC4DF4", VA = "0xDC4DF4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000FD")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xDC4ED4", Offset = "0xDC4ED4", VA = "0xDC4ED4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000FE")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xDC4FB4", Offset = "0xDC4FB4", VA = "0xDC4FB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xDC4FBC", Offset = "0xDC4FBC", VA = "0xDC4FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xDC4FC4", Offset = "0xDC4FC4", VA = "0xDC4FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xDC4FCC", Offset = "0xDC4FCC", VA = "0xDC4FCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xDC50D8", Offset = "0xDC50D8", VA = "0xDC50D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xDC50E0", Offset = "0xDC50E0", VA = "0xDC50E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xDC518C", Offset = "0xDC518C", VA = "0xDC518C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xDC5194", Offset = "0xDC5194", VA = "0xDC5194")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xDC51A0", Offset = "0xDC51A0", VA = "0xDC51A0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xDC51A8", Offset = "0xDC51A8", VA = "0xDC51A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xDC51B0", Offset = "0xDC51B0", VA = "0xDC51B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xDC51B8", Offset = "0xDC51B8", VA = "0xDC51B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0xDC5204", Offset = "0xDC5204", VA = "0xDC5204")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xDC520C", Offset = "0xDC520C", VA = "0xDC520C")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool isValid
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0xDC5218", Offset = "0xDC5218", VA = "0xDC5218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public bool isActive
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xDC5388", Offset = "0xDC5388", VA = "0xDC5388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		private bool _isReady
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xDC5390", Offset = "0xDC5390", VA = "0xDC5390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public SDKRender render
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xDC54CC", Offset = "0xDC54CC", VA = "0xDC54CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xDC54D4", Offset = "0xDC54D4", VA = "0xDC54D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xDC5538", Offset = "0xDC5538", VA = "0xDC5538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xDC56CC", Offset = "0xDC56CC", VA = "0xDC56CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xDC56D4", Offset = "0xDC56D4", VA = "0xDC56D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA66658", Offset = "0xA66658")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xDC54E0", Offset = "0xDC54E0", VA = "0xDC54E0")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xDC577C", Offset = "0xDC577C", VA = "0xDC577C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xDC5788", Offset = "0xDC5788", VA = "0xDC5788")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xDC5830", Offset = "0xDC5830", VA = "0xDC5830")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xDC5A88", Offset = "0xDC5A88", VA = "0xDC5A88")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xDC5B88", Offset = "0xDC5B88", VA = "0xDC5B88")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xDC5AFC", Offset = "0xDC5AFC", VA = "0xDC5AFC")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xDC5B40", Offset = "0xDC5B40", VA = "0xDC5B40")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xDC58C8", Offset = "0xDC58C8", VA = "0xDC58C8")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xDC555C", Offset = "0xDC555C", VA = "0xDC555C")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xDC5E98", Offset = "0xDC5E98", VA = "0xDC5E98")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public static class SDKBridge
	{
		[Token(Token = "0x2000331")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000109")]
		public static bool IsActive
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xDC5414", Offset = "0xDC5414", VA = "0xDC5414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xDC6490", Offset = "0xDC6490", VA = "0xDC6490")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xDC6498", Offset = "0xDC6498", VA = "0xDC6498")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xDC64A0", Offset = "0xDC64A0", VA = "0xDC64A0")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xDC64A8", Offset = "0xDC64A8", VA = "0xDC64A8")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xDC64B0", Offset = "0xDC64B0", VA = "0xDC64B0")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xDC64B8", Offset = "0xDC64B8", VA = "0xDC64B8")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xDC64F8", Offset = "0xDC64F8", VA = "0xDC64F8")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xDC6538", Offset = "0xDC6538", VA = "0xDC6538")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xDC6540", Offset = "0xDC6540", VA = "0xDC6540")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xDC6548", Offset = "0xDC6548", VA = "0xDC6548")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xDC6588", Offset = "0xDC6588", VA = "0xDC6588")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xDC65C8", Offset = "0xDC65C8", VA = "0xDC65C8")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xDC6608", Offset = "0xDC6608", VA = "0xDC6608")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xDC6610", Offset = "0xDC6610", VA = "0xDC6610")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xDC6698", Offset = "0xDC6698", VA = "0xDC6698")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xDC6794", Offset = "0xDC6794", VA = "0xDC6794")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xDC6850", Offset = "0xDC6850", VA = "0xDC6850")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xDC68BC", Offset = "0xDC68BC", VA = "0xDC68BC")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xDC6928", Offset = "0xDC6928", VA = "0xDC6928")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xDC5D08", Offset = "0xDC5D08", VA = "0xDC5D08")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6001029")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600102A")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600102B")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600102D")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xDC69E4", Offset = "0xDC69E4", VA = "0xDC69E4")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xDC6DB8", Offset = "0xDC6DB8", VA = "0xDC6DB8")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xDC6F40", Offset = "0xDC6F40", VA = "0xDC6F40")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xDC7058", Offset = "0xDC7058", VA = "0xDC7058")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xDC71A8", Offset = "0xDC71A8", VA = "0xDC71A8")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xDC7240", Offset = "0xDC7240", VA = "0xDC7240")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000218")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SDKResolution _resolution;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Camera _cameraInstance;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private SDKPass _clipPlanePass;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SDKPass _combineAlphaPass;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private SDKPass _captureTexturePass;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private SDKPass _applyTexturePass;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKPass _optimizedRenderingPass;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderPassEvent _clipPlaneRenderPassEvent;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private RenderPassEvent _addAlphaRenderPassEvent;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private RenderPassEvent _captureTextureRenderPassEvent;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private RenderPassEvent _applyTextureRenderPassEvent;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private RenderPassEvent _optimizedRenderingPassEvent;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Material _writeMaterial;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private UniversalAdditionalCameraData _universalAdditionalCameraData;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTargetIdentifier _cameraColorTextureIdentifier;

		[Token(Token = "0x1700010A")]
		public LIV liv
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xD9C184", Offset = "0xD9C184", VA = "0xD9C184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xD9C18C", Offset = "0xD9C18C", VA = "0xD9C18C")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x1700010C")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xD9C19C", Offset = "0xD9C19C", VA = "0xD9C19C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x1700010D")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0xD9C1AC", Offset = "0xD9C1AC", VA = "0xD9C1AC")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x1700010E")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0xD9C1B4", Offset = "0xD9C1B4", VA = "0xD9C1B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public Camera cameraReference
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xD9C1BC", Offset = "0xD9C1BC", VA = "0xD9C1BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public Camera hmdCamera
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xD9C258", Offset = "0xD9C258", VA = "0xD9C258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public Transform stage
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xD9C274", Offset = "0xD9C274", VA = "0xD9C274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public Transform stageTransform
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xD9C290", Offset = "0xD9C290", VA = "0xD9C290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0xD9C2AC", Offset = "0xD9C2AC", VA = "0xD9C2AC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000114")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0xD9C39C", Offset = "0xD9C39C", VA = "0xD9C39C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000115")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xD9C45C", Offset = "0xD9C45C", VA = "0xD9C45C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000116")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0xD9C47C", Offset = "0xD9C47C", VA = "0xD9C47C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public bool canSetPose
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xD9C498", Offset = "0xD9C498", VA = "0xD9C498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xD9DDB0", Offset = "0xD9DDB0", VA = "0xD9DDB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xD9DE08", Offset = "0xD9DE08", VA = "0xD9DE08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011A")]
		private bool canRenderBackground
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xD9DE14", Offset = "0xD9DE14", VA = "0xD9DE14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		private bool canRenderForeground
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xD9DEB0", Offset = "0xD9DEB0", VA = "0xD9DEB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xD9DF60", Offset = "0xD9DF60", VA = "0xD9DF60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xD9C4B8", Offset = "0xD9C4B8", VA = "0xD9C4B8")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD9C918", Offset = "0xD9C918", VA = "0xD9C918")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xD9CB14", Offset = "0xD9CB14", VA = "0xD9CB14")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xD9CB90", Offset = "0xD9CB90", VA = "0xD9CB90")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xD9CD68", Offset = "0xD9CD68", VA = "0xD9CD68")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xD9CDE0", Offset = "0xD9CDE0", VA = "0xD9CDE0")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xD9CE4C", Offset = "0xD9CE4C", VA = "0xD9CE4C")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xD9CFD0", Offset = "0xD9CFD0", VA = "0xD9CFD0")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD9D040", Offset = "0xD9D040", VA = "0xD9D040")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xD9D0B0", Offset = "0xD9D0B0", VA = "0xD9D0B0")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD9D120", Offset = "0xD9D120", VA = "0xD9D120")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD9D190", Offset = "0xD9D190", VA = "0xD9D190")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD9D200", Offset = "0xD9D200", VA = "0xD9D200")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD9D270", Offset = "0xD9D270", VA = "0xD9D270")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xD9D484", Offset = "0xD9D484", VA = "0xD9D484")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD9D51C", Offset = "0xD9D51C", VA = "0xD9D51C")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD9D5B4", Offset = "0xD9D5B4", VA = "0xD9D5B4")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD9D64C", Offset = "0xD9D64C", VA = "0xD9D64C")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD9D9D0", Offset = "0xD9D9D0", VA = "0xD9D9D0")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD9DBD8", Offset = "0xD9DBD8", VA = "0xD9DBD8")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xD9DD04", Offset = "0xD9DD04", VA = "0xD9DD04")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD9DFE8", Offset = "0xD9DFE8", VA = "0xD9DFE8")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD9E9BC", Offset = "0xD9E9BC", VA = "0xD9E9BC")]
		public void Render()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD9EBDC", Offset = "0xD9EBDC", VA = "0xD9EBDC")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD9EEDC", Offset = "0xD9EEDC", VA = "0xD9EEDC")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD9F8E4", Offset = "0xD9F8E4", VA = "0xD9F8E4")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD9E180", Offset = "0xD9E180", VA = "0xD9E180")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xDA1108", Offset = "0xDA1108", VA = "0xDA1108")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xDA12C0", Offset = "0xDA12C0", VA = "0xDA12C0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000219")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4000FDB")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4000FDC")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4000FDD")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4000FDE")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4000FDF")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4000FE0")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4000FE1")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4000FE2")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4000FE3")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4000FE4")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4000FE5")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xDA0188", Offset = "0xDA0188", VA = "0xDA0188")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xDA026C", Offset = "0xDA026C", VA = "0xDA026C")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xDA0730", Offset = "0xDA0730", VA = "0xDA0730")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xDA077C", Offset = "0xDA077C", VA = "0xDA077C")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xDA01D4", Offset = "0xDA01D4", VA = "0xDA01D4")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xDA0220", Offset = "0xDA0220", VA = "0xDA0220")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public struct SDKConstants
	{
		[Token(Token = "0x4000FE6")]
		public const string SDK_ID = "Z2Y4P28IQADO3CDCA2NMGIJXWWX1C7JR";

		[Token(Token = "0x4000FE7")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4000FE8")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x200021B")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4000FEA")]
		NONE = 0,
		[Token(Token = "0x4000FEB")]
		GAME = 63
	}
	[Token(Token = "0x200021C")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4000FED")]
		NONE = 0uL,
		[Token(Token = "0x4000FEE")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4000FEF")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4000FF0")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4000FF1")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4000FF2")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4000FF3")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4000FF4")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4000FF5")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4000FF6")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4000FF7")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4000FF8")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x200021D")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4000FFA")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000FFB")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4000FFC")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4000FFD")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x200021E")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4000FFF")]
		UNDEFINED,
		[Token(Token = "0x4001000")]
		COLOR_BUFFER
	}
	[Token(Token = "0x200021F")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4001002")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001003")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000220")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4001005")]
		UNDEFINED,
		[Token(Token = "0x4001006")]
		RAW,
		[Token(Token = "0x4001007")]
		DIRECTX,
		[Token(Token = "0x4001008")]
		OPENGL,
		[Token(Token = "0x4001009")]
		VULKAN,
		[Token(Token = "0x400100A")]
		METAL
	}
	[Token(Token = "0x2000221")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x400100C")]
		UNDEFINED,
		[Token(Token = "0x400100D")]
		LINEAR,
		[Token(Token = "0x400100E")]
		SRGB
	}
	[Token(Token = "0x2000222")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001010")]
		UNDEFINED,
		[Token(Token = "0x4001011")]
		FORWARD,
		[Token(Token = "0x4001012")]
		DEFERRED,
		[Token(Token = "0x4001013")]
		VERTEX_LIT,
		[Token(Token = "0x4001014")]
		UNIVERSAL,
		[Token(Token = "0x4001015")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000223")]
	public struct SDKResolution
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700011D")]
		public static SDKResolution zero
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xD9E178", Offset = "0xD9E178", VA = "0xD9E178")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xB1E3FC", Offset = "0xB1E3FC", VA = "0xB1E3FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000224")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700011E")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xD9B7D4", Offset = "0xD9B7D4", VA = "0xD9B7D4")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700011F")]
		public static SDKVector3 one
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xDA1AD4", Offset = "0xDA1AD4", VA = "0xDA1AD4")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000120")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xDA2080", Offset = "0xDA2080", VA = "0xDA2080")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000121")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xD9B6A4", Offset = "0xD9B6A4", VA = "0xD9B6A4")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000122")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xDA2090", Offset = "0xDA2090", VA = "0xDA2090")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xDA1E70", Offset = "0xDA1E70", VA = "0xDA1E70")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xD9B68C", Offset = "0xD9B68C", VA = "0xD9B68C")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xDA20A0", Offset = "0xDA20A0", VA = "0xDA20A0")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xDA20B0", Offset = "0xDA20B0", VA = "0xDA20B0")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xDA20C0", Offset = "0xDA20C0", VA = "0xDA20C0")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xDA20D0", Offset = "0xDA20D0", VA = "0xDA20D0")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xB1E41C", Offset = "0xB1E41C", VA = "0xB1E41C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000123")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xD9B7E4", Offset = "0xD9B7E4", VA = "0xD9B7E4")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xD9BD50", Offset = "0xD9BD50", VA = "0xD9BD50")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD9BD80", Offset = "0xD9BD80", VA = "0xD9BD80")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xD9BD84", Offset = "0xD9BD84", VA = "0xD9BD84")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD9BE98", Offset = "0xD9BE98", VA = "0xD9BE98")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD9BF0C", Offset = "0xD9BF0C", VA = "0xD9BF0C")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xB1E3F4", Offset = "0xB1E3F4", VA = "0xB1E3F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000226")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000124")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xDC754C", Offset = "0xDC754C", VA = "0xDC754C")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xDC809C", Offset = "0xDC809C", VA = "0xDC809C")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xDC80E0", Offset = "0xDC80E0", VA = "0xDC80E0")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xDC8124", Offset = "0xDC8124", VA = "0xDC8124")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xDC822C", Offset = "0xDC822C", VA = "0xDC822C")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xDC82D8", Offset = "0xDC82D8", VA = "0xDC82D8")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xDC8330", Offset = "0xDC8330", VA = "0xDC8330")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xDC836C", Offset = "0xDC836C", VA = "0xDC836C")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xDC8400", Offset = "0xDC8400", VA = "0xDC8400")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xDC842C", Offset = "0xDC842C", VA = "0xDC842C")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xB1E6CC", Offset = "0xB1E6CC", VA = "0xB1E6CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000227")]
	public struct SDKPlane
	{
		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000125")]
		public static SDKPlane empty
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xD9B690", Offset = "0xD9B690", VA = "0xD9B690")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xD9B62C", Offset = "0xD9B62C", VA = "0xD9B62C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xB1E3DC", Offset = "0xB1E3DC", VA = "0xB1E3DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000228")]
	public struct SDKPriority
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000126")]
		public static SDKPriority empty
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xD9BA8C", Offset = "0xD9BA8C", VA = "0xD9BA8C")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xB1E3EC", Offset = "0xB1E3EC", VA = "0xB1E3EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000229")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000127")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xDC5BCC", Offset = "0xDC5BCC", VA = "0xDC5BCC")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xB1E654", Offset = "0xB1E654", VA = "0xB1E654", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022A")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000128")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0xDC6C8C", Offset = "0xDC6C8C", VA = "0xDC6C8C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xB1E66C", Offset = "0xB1E66C", VA = "0xB1E66C")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xB1E694", Offset = "0xB1E694", VA = "0xB1E694")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xB1E6C4", Offset = "0xB1E6C4", VA = "0xB1E6C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022B")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000129")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xD9B45C", Offset = "0xD9B45C", VA = "0xD9B45C")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xB1E3D4", Offset = "0xB1E3D4", VA = "0xB1E3D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022C")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x1700012A")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xD9B4AC", Offset = "0xD9B4AC", VA = "0xD9B4AC")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xB1E40C", Offset = "0xB1E40C", VA = "0xB1E40C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022D")]
	public struct SDKTexture
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x1700012B")]
		public static SDKTexture empty
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xDA1444", Offset = "0xDA1444", VA = "0xDA1444")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xB1E404", Offset = "0xB1E404", VA = "0xB1E404", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	public struct SDKTransform
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700012C")]
		public static SDKTransform empty
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xDA1AC0", Offset = "0xDA1AC0", VA = "0xDA1AC0")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xB1E414", Offset = "0xB1E414", VA = "0xB1E414", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022F")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700012D")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xDC7518", Offset = "0xDC7518", VA = "0xDC7518")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xB1E65C", Offset = "0xB1E65C", VA = "0xB1E65C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000230")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700012E")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xDC7764", Offset = "0xDC7764", VA = "0xDC7764")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xB1E664", Offset = "0xB1E664", VA = "0xB1E664", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public struct SDKPose
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x1700012F")]
		public static SDKPose empty
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xD9B760", Offset = "0xD9B760", VA = "0xD9B760")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xB1E3E4", Offset = "0xB1E3E4", VA = "0xB1E3E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000232")]
	public class SDKPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CommandBuffer commandBuffer;

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xD9B5F8", Offset = "0xD9B5F8", VA = "0xD9B5F8", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xD9B624", Offset = "0xD9B624", VA = "0xD9B624")]
		public SDKPass()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class SDKUniversalRenderFeature : ScriptableRendererFeature
	{
		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SDKPass> passes;

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xDA0104", Offset = "0xDA0104", VA = "0xDA0104")]
		public static void AddPass(SDKPass pass)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xDA02B8", Offset = "0xDA02B8", VA = "0xDA02B8")]
		public static void ClearPasses()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xDA1BBC", Offset = "0xDA1BBC", VA = "0xDA1BBC", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xDA1BC0", Offset = "0xDA1BC0", VA = "0xDA1BC0", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xDA1CBC", Offset = "0xDA1CBC", VA = "0xDA1CBC")]
		public SDKUniversalRenderFeature()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000130")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xDA1D54", Offset = "0xDA1D54", VA = "0xDA1D54")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xDA0B78", Offset = "0xDA0B78", VA = "0xDA0B78")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xDA1D3C", Offset = "0xDA1D3C", VA = "0xDA1D3C")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xD9DB3C", Offset = "0xD9DB3C", VA = "0xD9DB3C")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xDA1D84", Offset = "0xDA1D84", VA = "0xDA1D84")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xD9DAD8", Offset = "0xD9DAD8", VA = "0xD9DAD8")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xDA1DA4", Offset = "0xDA1DA4", VA = "0xDA1DA4")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xDA1DB0", Offset = "0xDA1DB0", VA = "0xDA1DB0")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xDA1DC4", Offset = "0xDA1DC4", VA = "0xDA1DC4")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xDA0864", Offset = "0xDA0864", VA = "0xDA0864")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xD9FF0C", Offset = "0xD9FF0C", VA = "0xD9FF0C")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xD9C7F4", Offset = "0xD9C7F4", VA = "0xD9C7F4")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xDA1EA4", Offset = "0xDA1EA4", VA = "0xDA1EA4")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x60010BA")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xD9D308", Offset = "0xD9D308", VA = "0xD9D308")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xD9D918", Offset = "0xD9D918", VA = "0xD9D918")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xD9EA94", Offset = "0xD9EA94", VA = "0xD9EA94")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xD9FDD0", Offset = "0xD9FDD0", VA = "0xD9FDD0")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xD9D90C", Offset = "0xD9D90C", VA = "0xD9D90C")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xDA0334", Offset = "0xDA0334", VA = "0xDA0334")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xDA07C8", Offset = "0xDA07C8", VA = "0xDA07C8")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xDA04CC", Offset = "0xDA04CC", VA = "0xDA04CC")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
