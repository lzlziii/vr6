using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class RotateObj : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rotateObject;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotateSpeed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xAF2864", Offset = "0xAF2864", VA = "0xAF2864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xAF2868", Offset = "0xAF2868", VA = "0xAF2868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAF28A8", Offset = "0xAF28A8", VA = "0xAF28A8")]
	public RotateObj()
	{
	}
}
[Token(Token = "0x2000003")]
public class CameraHolder : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	public struct SVA
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float V;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float A;
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Holder;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currDistance;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotate;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotate;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float prevDistance;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float x;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x598110", Offset = "0x598110")]
	private float windowDpi;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int Prefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject Instance;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float StartColor;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float HueColor;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture HueTexture;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SVA> svList;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float H;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xFD093C", Offset = "0xFD093C", VA = "0xFD093C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xFD0C90", Offset = "0xFD0C90", VA = "0xFD0C90")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xFD09CC", Offset = "0xFD09CC", VA = "0xFD09CC")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xFD10C4", Offset = "0xFD10C4", VA = "0xFD10C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xFD14C8", Offset = "0xFD14C8", VA = "0xFD14C8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xFD14F8", Offset = "0xFD14F8", VA = "0xFD14F8")]
	public CameraHolder()
	{
	}
}
[Token(Token = "0x2000005")]
public class DemoShooting : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirePoint;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Cam;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxLength;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray RayMouse;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 direction;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion rotation;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x598148", Offset = "0x598148")]
	private float windowDpi;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Prefab;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Instance;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float hSliderValue;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fireCountdown;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float buttonSaver;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Animation camAnim;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB8A424", Offset = "0xB8A424", VA = "0xB8A424")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB8A4DC", Offset = "0xB8A4DC", VA = "0xB8A4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB8AA5C", Offset = "0xB8AA5C", VA = "0xB8AA5C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB8A494", Offset = "0xB8A494", VA = "0xB8A494")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB8A980", Offset = "0xB8A980", VA = "0xB8A980")]
	private void RotateToMouseDirection(GameObject obj, Vector3 destination)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB8AC84", Offset = "0xB8AC84", VA = "0xB8AC84")]
	public DemoShooting()
	{
	}
}
[Token(Token = "0x2000006")]
public class AutoDestroyPS : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeLeft;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x9D798C", Offset = "0x9D798C", VA = "0x9D798C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x9D7A74", Offset = "0x9D7A74", VA = "0x9D7A74")]
	public AutoDestroyPS()
	{
	}
}
[Token(Token = "0x2000007")]
public class ParticleCollisionInstance : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DestroyTimeDelay;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotationOffset;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useOnlyRotationOffset;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseFirePointRotation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool DestoyMainEffect;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem part;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem ps;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xADE808", Offset = "0xADE808", VA = "0xADE808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xADE864", Offset = "0xADE864", VA = "0xADE864")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xADED44", Offset = "0xADED44", VA = "0xADED44")]
	public ParticleCollisionInstance()
	{
	}
}
[Token(Token = "0x2000008")]
public class ProjectileMover : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hitOffset;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFirePointRotation;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hit;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flash;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Detached;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAEBE14", Offset = "0xAEBE14", VA = "0xAEBE14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAEC0C4", Offset = "0xAEC0C4", VA = "0xAEC0C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAEC130", Offset = "0xAEC130", VA = "0xAEC130")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAEC620", Offset = "0xAEC620", VA = "0xAEC620")]
	public ProjectileMover()
	{
	}
}
[Token(Token = "0x2000009")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1582D28", Offset = "0x1582D28", VA = "0x1582D28")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x15831D0", Offset = "0x15831D0", VA = "0x15831D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1582E9C", Offset = "0x1582E9C", VA = "0x1582E9C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x15838F4", Offset = "0x15838F4", VA = "0x15838F4")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1583A1C", Offset = "0x1583A1C", VA = "0x1583A1C")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1583A88", Offset = "0x1583A88", VA = "0x1583A88")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x200000A")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1583ECC", Offset = "0x1583ECC", VA = "0x1583ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1583F04", Offset = "0x1583F04", VA = "0x1583F04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x158434C", Offset = "0x158434C", VA = "0x158434C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x158437C", Offset = "0x158437C", VA = "0x158437C")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x200000B")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x15862C4", Offset = "0x15862C4", VA = "0x15862C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1586348", Offset = "0x1586348", VA = "0x1586348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x15863E4", Offset = "0x15863E4", VA = "0x15863E4")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200000C")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x157F8CC", Offset = "0x157F8CC", VA = "0x157F8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x157FA74", Offset = "0x157FA74", VA = "0x157FA74")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x157FCA0", Offset = "0x157FCA0", VA = "0x157FCA0")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x157FD68", Offset = "0x157FD68", VA = "0x157FD68")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1580308", Offset = "0x1580308", VA = "0x1580308")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x200000D")]
public static class ME_ColorHelper
{
	[Token(Token = "0x200000E")]
	public struct HSBColor
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x8F4B90", Offset = "0x8F4B90", VA = "0x8F4B90")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000069")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x157FEE0", Offset = "0x157FEE0", VA = "0x157FEE0")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x15800C8", Offset = "0x15800C8", VA = "0x15800C8")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1580310", Offset = "0x1580310", VA = "0x1580310")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x158042C", Offset = "0x158042C", VA = "0x158042C")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x15810C8", Offset = "0x15810C8", VA = "0x15810C8")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x15811A0", Offset = "0x15811A0", VA = "0x15811A0")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200000F")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1583B64", Offset = "0x1583B64", VA = "0x1583B64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1583B68", Offset = "0x1583B68", VA = "0x1583B68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1583BB0", Offset = "0x1583BB0", VA = "0x1583BB0")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1583C58", Offset = "0x1583C58", VA = "0x1583C58")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000010")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x15815A4", Offset = "0x15815A4", VA = "0x15815A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x158197C", Offset = "0x158197C", VA = "0x158197C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1582B98", Offset = "0x1582B98", VA = "0x1582B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1581B58", Offset = "0x1581B58", VA = "0x1581B58")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1581D44", Offset = "0x1581D44", VA = "0x1581D44")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1582278", Offset = "0x1582278", VA = "0x1582278")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x158173C", Offset = "0x158173C", VA = "0x158173C")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1581F98", Offset = "0x1581F98", VA = "0x1581F98")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1582510", Offset = "0x1582510", VA = "0x1582510")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x158185C", Offset = "0x158185C", VA = "0x158185C")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1582CD0", Offset = "0x1582CD0", VA = "0x1582CD0")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000011")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1583C8C", Offset = "0x1583C8C", VA = "0x1583C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1583D0C", Offset = "0x1583D0C", VA = "0x1583D0C")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000012")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1583D14", Offset = "0x1583D14", VA = "0x1583D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1583D9C", Offset = "0x1583D9C", VA = "0x1583D9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1583DCC", Offset = "0x1583DCC", VA = "0x1583DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1583E70", Offset = "0x1583E70", VA = "0x1583E70")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000013")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1583EC4", Offset = "0x1583EC4", VA = "0x1583EC4")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1584398", Offset = "0x1584398", VA = "0x1584398")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x15844E0", Offset = "0x15844E0", VA = "0x15844E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1584544", Offset = "0x1584544", VA = "0x1584544")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1584684", Offset = "0x1584684", VA = "0x1584684")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1584AE8", Offset = "0x1584AE8", VA = "0x1584AE8")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1584BAC", Offset = "0x1584BAC", VA = "0x1584BAC")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1584C94", Offset = "0x1584C94", VA = "0x1584C94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1584D14", Offset = "0x1584D14", VA = "0x1584D14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1584FCC", Offset = "0x1584FCC", VA = "0x1584FCC")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x2000016")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5960A4", Offset = "0x5960A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x8F4C00", Offset = "0x8F4C00", VA = "0x8F4C00")]
		public <>c()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x8F4C08", Offset = "0x8F4C08", VA = "0x8F4C08")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x8F4C7C", Offset = "0x8F4C7C", VA = "0x8F4C7C")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x8F4CBC", Offset = "0x8F4CBC", VA = "0x8F4CBC")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1584FDC", Offset = "0x1584FDC", VA = "0x1584FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x15850A0", Offset = "0x15850A0", VA = "0x15850A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x15850F8", Offset = "0x15850F8", VA = "0x15850F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1585150", Offset = "0x1585150", VA = "0x1585150")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x15852B8", Offset = "0x15852B8", VA = "0x15852B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x15852BC", Offset = "0x15852BC", VA = "0x15852BC")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000059")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1585A50", Offset = "0x1585A50", VA = "0x1585A50")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1585D30", Offset = "0x1585D30", VA = "0x1585D30")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000018")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x15863F4", Offset = "0x15863F4", VA = "0x15863F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x15866F4", Offset = "0x15866F4", VA = "0x15866F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x15868C0", Offset = "0x15868C0", VA = "0x15868C0")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x2000019")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x598180", Offset = "0x598180")]
	public float MinVertexDistance;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59819C", Offset = "0x59819C")]
	public float Frequency;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5981B8", Offset = "0x5981B8")]
	public float TimeScale;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5981D4", Offset = "0x5981D4")]
	public float Amplitude;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x40000B1")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x40000B2")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x40000B3")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x15868C8", Offset = "0x15868C8", VA = "0x15868C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1586A2C", Offset = "0x1586A2C", VA = "0x1586A2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1586AB4", Offset = "0x1586AB4", VA = "0x1586AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1586BC8", Offset = "0x1586BC8", VA = "0x1586BC8")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1586DA8", Offset = "0x1586DA8", VA = "0x1586DA8")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1586F94", Offset = "0x1586F94", VA = "0x1586F94")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1587064", Offset = "0x1587064", VA = "0x1587064")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1587114", Offset = "0x1587114", VA = "0x1587114")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x15872E0", Offset = "0x15872E0", VA = "0x15872E0")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1587680", Offset = "0x1587680", VA = "0x1587680")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1587788", Offset = "0x1587788", VA = "0x1587788")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1587A4C", Offset = "0x1587A4C", VA = "0x1587A4C")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x15878BC", Offset = "0x15878BC", VA = "0x15878BC")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1587C74", Offset = "0x1587C74", VA = "0x1587C74")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1587D08", Offset = "0x1587D08", VA = "0x1587D08")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x200001A")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x8F8A4C", Offset = "0x8F8A4C", VA = "0x8F8A4C")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x40000B7")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xADA984", Offset = "0xADA984", VA = "0xADA984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xADA994", Offset = "0xADA994", VA = "0xADA994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xADAB24", Offset = "0xADAB24", VA = "0xADAB24")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xADBBBC", Offset = "0xADBBBC", VA = "0xADBBBC")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xADB1BC", Offset = "0xADB1BC", VA = "0xADB1BC")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xADBDA4", Offset = "0xADBDA4", VA = "0xADBDA4")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xADBA14", Offset = "0xADBA14", VA = "0xADBA14")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xADB920", Offset = "0xADB920", VA = "0xADB920")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xADBF04", Offset = "0xADBF04", VA = "0xADBF04")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xADBFD0", Offset = "0xADBFD0", VA = "0xADBFD0")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xADC93C", Offset = "0xADC93C", VA = "0xADC93C")]
	public void updateMeshEffectNoTransformModification()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xADCA08", Offset = "0xADCA08", VA = "0xADCA08")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xADCA0C", Offset = "0xADCA0C", VA = "0xADCA0C")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xADC0EC", Offset = "0xADC0EC", VA = "0xADC0EC")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xADCB40", Offset = "0xADCB40", VA = "0xADCB40")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xADC718", Offset = "0xADC718", VA = "0xADC718")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xADCBFC", Offset = "0xADCBFC", VA = "0xADCBFC")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xADCDE8", Offset = "0xADCDE8", VA = "0xADCDE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xADD290", Offset = "0xADD290", VA = "0xADD290")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200001C")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5981F0", Offset = "0x5981F0")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1585E2C", Offset = "0x1585E2C", VA = "0x1585E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1585EB0", Offset = "0x1585EB0", VA = "0x1585EB0")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1585EB8", Offset = "0x1585EB8", VA = "0x1585EB8")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x15862B4", Offset = "0x15862B4", VA = "0x15862B4")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x200001D")]
public class HandPresence : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDeviceCharacteristics controllerCharacteristics;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDevice targetDevice;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator handAnimator;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xACA594", Offset = "0xACA594", VA = "0xACA594")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xACA598", Offset = "0xACA598", VA = "0xACA598")]
	private void TryInitialize()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xACA64C", Offset = "0xACA64C", VA = "0xACA64C")]
	private void UpdateHandAnimation()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xACA79C", Offset = "0xACA79C", VA = "0xACA79C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xACA7DC", Offset = "0xACA7DC", VA = "0xACA7DC")]
	public HandPresence()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xAD8700", Offset = "0xAD8700", VA = "0xAD8700")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xAD8864", Offset = "0xAD8864", VA = "0xAD8864")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAD8C00", Offset = "0xAD8C00", VA = "0xAD8C00")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAD8DA4", Offset = "0xAD8DA4", VA = "0xAD8DA4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAD8DD0", Offset = "0xAD8DD0", VA = "0xAD8DD0")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200001F")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xAE8D78", Offset = "0xAE8D78", VA = "0xAE8D78")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xAE8E00", Offset = "0xAE8E00", VA = "0xAE8E00")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xAE8F74", Offset = "0xAE8F74", VA = "0xAE8F74")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000020")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0xAC2A60", Offset = "0xAC2A60", VA = "0xAC2A60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0xAC2A68", Offset = "0xAC2A68", VA = "0xAC2A68")]
		set
		{
		}
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xAC2BA4", Offset = "0xAC2BA4", VA = "0xAC2BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xAC2D6C", Offset = "0xAC2D6C", VA = "0xAC2D6C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xAC2D74", Offset = "0xAC2D74", VA = "0xAC2D74")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000021")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x8FBE4C", Offset = "0x8FBE4C", VA = "0x8FBE4C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000023")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59821C", Offset = "0x59821C")]
		public float FakeLatencyMax;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x598234", Offset = "0x598234")]
		public float FakeLatencyMin;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59824C", Offset = "0x59824C")]
		public float LatencyWeight;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x598264", Offset = "0x598264")]
		public int MaxSamples;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x8FBE54", Offset = "0x8FBE54", VA = "0x8FBE54")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x8FBF8C", Offset = "0x8FBF8C", VA = "0x8FBF8C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAEF2F0", Offset = "0xAEF2F0", VA = "0xAEF2F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAEF448", Offset = "0xAEF448", VA = "0xAEF448")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xAEF82C", Offset = "0xAEF82C", VA = "0xAEF82C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAEF778", Offset = "0xAEF778", VA = "0xAEF778")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAEFB5C", Offset = "0xAEFB5C", VA = "0xAEFB5C")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAEFE44", Offset = "0xAEFE44", VA = "0xAEFE44")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000024")]
public class P2PManager
{
	[Token(Token = "0x2000025")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40000E8")]
		Update = 1
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xAD999C", Offset = "0xAD999C", VA = "0xAD999C")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xAD9A7C", Offset = "0xAD9A7C", VA = "0xAD9A7C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xAD9B60", Offset = "0xAD9B60", VA = "0xAD9B60")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xAD9BE0", Offset = "0xAD9BE0", VA = "0xAD9BE0")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xAD9D50", Offset = "0xAD9D50", VA = "0xAD9D50")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xAD9F90", Offset = "0xAD9F90", VA = "0xAD9F90")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xADA380", Offset = "0xADA380", VA = "0xADA380")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xADA63C", Offset = "0xADA63C", VA = "0xADA63C")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xADA15C", Offset = "0xADA15C", VA = "0xADA15C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xADA570", Offset = "0xADA570", VA = "0xADA570")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xADA240", Offset = "0xADA240", VA = "0xADA240")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xADA874", Offset = "0xADA874", VA = "0xADA874")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xADA1A4", Offset = "0xADA1A4", VA = "0xADA1A4")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xADA5B4", Offset = "0xADA5B4", VA = "0xADA5B4")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xADA2E4", Offset = "0xADA2E4", VA = "0xADA2E4")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xADA8FC", Offset = "0xADA8FC", VA = "0xADA8FC")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000026")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xAE31A4", Offset = "0xAE31A4", VA = "0xAE31A4", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xAE31E8", Offset = "0xAE31E8", VA = "0xAE31E8", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xAE3220", Offset = "0xAE3220", VA = "0xAE3220", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xAE3248", Offset = "0xAE3248", VA = "0xAE3248")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAE33E4", Offset = "0xAE33E4", VA = "0xAE33E4")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAE3464", Offset = "0xAE3464", VA = "0xAE3464")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xAE34B8", Offset = "0xAE34B8", VA = "0xAE34B8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000027")]
public class RemotePlayer
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xAEFF00", Offset = "0xAEFF00", VA = "0xAEFF00")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000028")]
public class RoomManager
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xAF0840", Offset = "0xAF0840", VA = "0xAF0840")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xAF0944", Offset = "0xAF0944", VA = "0xAF0944")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xAF0C34", Offset = "0xAF0C34", VA = "0xAF0C34")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xAF0D6C", Offset = "0xAF0D6C", VA = "0xAF0D6C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xAF0E40", Offset = "0xAF0E40", VA = "0xAF0E40")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xAF13F0", Offset = "0xAF13F0", VA = "0xAF13F0")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xAF0C64", Offset = "0xAF0C64", VA = "0xAF0C64")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xAF1474", Offset = "0xAF1474", VA = "0xAF1474")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xAF1BF8", Offset = "0xAF1BF8", VA = "0xAF1BF8")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAF1F44", Offset = "0xAF1F44", VA = "0xAF1F44")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAF17A4", Offset = "0xAF17A4", VA = "0xAF17A4")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000029")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	public enum State
	{
		[Token(Token = "0x4000120")]
		INITIALIZING,
		[Token(Token = "0x4000121")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000122")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000123")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000124")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000125")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000126")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000127")]
		SHUTDOWN
	}

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xAFACD4", Offset = "0xAFACD4", VA = "0xAFACD4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xAF0F6C", Offset = "0xAF0F6C", VA = "0xAF0F6C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xAFAD44", Offset = "0xAFAD44", VA = "0xAFAD44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xAF926C", Offset = "0xAF926C", VA = "0xAF926C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xAF9610", Offset = "0xAF9610", VA = "0xAF9610", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xAF9ABC", Offset = "0xAF9ABC", VA = "0xAF9ABC")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xAF9C64", Offset = "0xAF9C64", VA = "0xAF9C64", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xAF9C68", Offset = "0xAF9C68", VA = "0xAF9C68")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xAF9D88", Offset = "0xAF9D88", VA = "0xAF9D88")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xAFA4E8", Offset = "0xAFA4E8", VA = "0xAFA4E8")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xAFA8D4", Offset = "0xAFA8D4", VA = "0xAFA8D4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xAFAAE4", Offset = "0xAFAAE4", VA = "0xAFAAE4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xAFAC68", Offset = "0xAFAC68", VA = "0xAFAC68")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xAF9A08", Offset = "0xAF9A08", VA = "0xAF9A08")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xAF0ABC", Offset = "0xAF0ABC", VA = "0xAF0ABC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xAF104C", Offset = "0xAF104C", VA = "0xAF104C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xAFAE6C", Offset = "0xAFAE6C", VA = "0xAFAE6C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xAF130C", Offset = "0xAF130C", VA = "0xAF130C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xAF1FB8", Offset = "0xAF1FB8", VA = "0xAF1FB8")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xAF23B4", Offset = "0xAF23B4", VA = "0xAF23B4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xAF2498", Offset = "0xAF2498", VA = "0xAF2498")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xAF0B74", Offset = "0xAF0B74", VA = "0xAF0B74")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xAF2114", Offset = "0xAF2114", VA = "0xAF2114")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xAF21A8", Offset = "0xAF21A8", VA = "0xAF21A8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xAFAFE8", Offset = "0xAFAFE8", VA = "0xAFAFE8")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xAFB1FC", Offset = "0xAFB1FC", VA = "0xAFB1FC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xAF91E8", Offset = "0xAF91E8", VA = "0xAF91E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x59D544", Offset = "0x59D544")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xAFB340", Offset = "0xAFB340", VA = "0xAFB340")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xAFB41C", Offset = "0xAFB41C", VA = "0xAFB41C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class VoipManager
{
	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xF23968", Offset = "0xF23968", VA = "0xF23968")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xF23A48", Offset = "0xF23A48", VA = "0xF23A48")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xF23B2C", Offset = "0xF23B2C", VA = "0xF23B2C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF23BAC", Offset = "0xF23BAC", VA = "0xF23BAC")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF23D1C", Offset = "0xF23D1C", VA = "0xF23D1C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200002C")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xAC271C", Offset = "0xAC271C", VA = "0xAC271C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xAC27A4", Offset = "0xAC27A4", VA = "0xAC27A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xAC2918", Offset = "0xAC2918", VA = "0xAC2918")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xAC297C", Offset = "0xAC297C", VA = "0xAC297C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xAC27E0", Offset = "0xAC27E0", VA = "0xAC27E0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xAC2A40", Offset = "0xAC2A40", VA = "0xAC2A40")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xAC2A58", Offset = "0xAC2A58", VA = "0xAC2A58")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class AvatarLayer
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x9D7A7C", Offset = "0x9D7A7C", VA = "0x9D7A7C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class PacketRecordSettings
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xADD698", Offset = "0xADD698", VA = "0xADD698")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x8F771C", Offset = "0x8F771C", VA = "0x8F771C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000031")]
	public enum HandType
	{
		[Token(Token = "0x4000189")]
		Right,
		[Token(Token = "0x400018A")]
		Left,
		[Token(Token = "0x400018B")]
		Max
	}

	[Token(Token = "0x2000032")]
	public enum HandJoint
	{
		[Token(Token = "0x400018D")]
		HandBase,
		[Token(Token = "0x400018E")]
		IndexBase,
		[Token(Token = "0x400018F")]
		IndexTip,
		[Token(Token = "0x4000190")]
		ThumbBase,
		[Token(Token = "0x4000191")]
		ThumbTip,
		[Token(Token = "0x4000192")]
		Max
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5960C4", Offset = "0x5960C4")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012D")]
			[Address(RVA = "0x8F76CC", Offset = "0x8F76CC", VA = "0x8F76CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x8F7714", Offset = "0x8F7714", VA = "0x8F7714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x8F74F0", Offset = "0x8F74F0", VA = "0x8F74F0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x8F751C", Offset = "0x8F751C", VA = "0x8F751C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x8F7520", Offset = "0x8F7520", VA = "0x8F7520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x8F76D4", Offset = "0x8F76D4", VA = "0x8F76D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59827C", Offset = "0x59827C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5982B4", Offset = "0x5982B4")]
	public bool EnableBody;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5982EC", Offset = "0x5982EC")]
	public bool RecordPackets;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x598324", Offset = "0x598324")]
	public bool StartWithControllers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59835C", Offset = "0x59835C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59835C", Offset = "0x59835C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5983CC", Offset = "0x5983CC")]
	private bool CombineMeshes;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598404", Offset = "0x598404")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59843C", Offset = "0x59843C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x598474", Offset = "0x598474")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5984AC", Offset = "0x5984AC")]
	public bool EnableLaughter;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000169")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400016B")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400016C")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400016D")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400016E")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400016F")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB08AF4", Offset = "0xB08AF4", VA = "0xB08AF4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB08F94", Offset = "0xB08F94", VA = "0xB08F94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB09028", Offset = "0xB09028", VA = "0xB09028")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB09090", Offset = "0xB09090", VA = "0xB09090")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB091C0", Offset = "0xB091C0", VA = "0xB091C0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB092A0", Offset = "0xB092A0", VA = "0xB092A0")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB0937C", Offset = "0xB0937C", VA = "0xB0937C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB09560", Offset = "0xB09560", VA = "0xB09560")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB0963C", Offset = "0xB0963C", VA = "0xB0963C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB096B4", Offset = "0xB096B4", VA = "0xB096B4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB0979C", Offset = "0xB0979C", VA = "0xB0979C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB09828", Offset = "0xB09828", VA = "0xB09828")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB098B0", Offset = "0xB098B0", VA = "0xB098B0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB098C8", Offset = "0xB098C8", VA = "0xB098C8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000103")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB09D78", Offset = "0xB09D78", VA = "0xB09D78")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB0A0F8", Offset = "0xB0A0F8", VA = "0xB0A0F8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB0A2E4", Offset = "0xB0A2E4", VA = "0xB0A2E4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB0A530", Offset = "0xB0A530", VA = "0xB0A530")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB0A624", Offset = "0xB0A624", VA = "0xB0A624")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB0AA2C", Offset = "0xB0AA2C", VA = "0xB0AA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB0AD64", Offset = "0xB0AD64", VA = "0xB0AD64")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB0B79C", Offset = "0xB0B79C", VA = "0xB0B79C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB0B7F0", Offset = "0xB0B7F0", VA = "0xB0B7F0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB0A8E4", Offset = "0xB0A8E4", VA = "0xB0A8E4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB0A988", Offset = "0xB0A988", VA = "0xB0A988")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB0B820", Offset = "0xB0B820", VA = "0xB0B820")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB0B13C", Offset = "0xB0B13C", VA = "0xB0B13C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB0BA94", Offset = "0xB0BA94", VA = "0xB0BA94")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB0B884", Offset = "0xB0B884", VA = "0xB0B884")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB0BD68", Offset = "0xB0BD68", VA = "0xB0BD68")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB0C1E4", Offset = "0xB0C1E4", VA = "0xB0C1E4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB0C5E8", Offset = "0xB0C5E8", VA = "0xB0C5E8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB0C73C", Offset = "0xB0C73C", VA = "0xB0C73C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB0C920", Offset = "0xB0C920", VA = "0xB0C920")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB0B31C", Offset = "0xB0B31C", VA = "0xB0B31C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB0C9F4", Offset = "0xB0C9F4", VA = "0xB0C9F4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB0B14C", Offset = "0xB0B14C", VA = "0xB0B14C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB0CAE4", Offset = "0xB0CAE4", VA = "0xB0CAE4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB0D198", Offset = "0xB0D198", VA = "0xB0D198")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB0D67C", Offset = "0xB0D67C", VA = "0xB0D67C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB0D6A4", Offset = "0xB0D6A4", VA = "0xB0D6A4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB0D6CC", Offset = "0xB0D6CC", VA = "0xB0D6CC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB0B628", Offset = "0xB0B628", VA = "0xB0B628")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB0CBB4", Offset = "0xB0CBB4", VA = "0xB0CBB4")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB0DAFC", Offset = "0xB0DAFC", VA = "0xB0DAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59D5A4", Offset = "0x59D5A4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB0DB74", Offset = "0xB0DB74", VA = "0xB0DB74")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB0D9BC", Offset = "0xB0D9BC", VA = "0xB0D9BC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB0DC38", Offset = "0xB0DC38", VA = "0xB0DC38")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB0DD20", Offset = "0xB0DD20", VA = "0xB0DD20")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB0D708", Offset = "0xB0D708", VA = "0xB0D708")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB0DE08", Offset = "0xB0DE08", VA = "0xB0DE08")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB0E004", Offset = "0xB0E004", VA = "0xB0E004")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB0E0D4", Offset = "0xB0E0D4", VA = "0xB0E0D4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB0F38C", Offset = "0xB0F38C", VA = "0xB0F38C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB0EF60", Offset = "0xB0EF60", VA = "0xB0EF60")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB0ECE4", Offset = "0xB0ECE4", VA = "0xB0ECE4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB0EDCC", Offset = "0xB0EDCC", VA = "0xB0EDCC")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB0F61C", Offset = "0xB0F61C", VA = "0xB0F61C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400019B")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB0FBE4", Offset = "0xB0FBE4", VA = "0xB0FBE4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB0FE60", Offset = "0xB0FE60", VA = "0xB0FE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB102C0", Offset = "0xB102C0", VA = "0xB102C0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB0C478", Offset = "0xB0C478", VA = "0xB0C478")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB103F0", Offset = "0xB103F0", VA = "0xB103F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB10520", Offset = "0xB10520", VA = "0xB10520")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB10580", Offset = "0xB10580", VA = "0xB10580")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB0FF90", Offset = "0xB0FF90", VA = "0xB0FF90")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB10588", Offset = "0xB10588", VA = "0xB10588")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB105E8", Offset = "0xB105E8", VA = "0xB105E8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB10D9C", Offset = "0xB10D9C", VA = "0xB10D9C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB10320", Offset = "0xB10320", VA = "0xB10320")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	public enum PacketMode
	{
		[Token(Token = "0x40001AF")]
		SDK,
		[Token(Token = "0x40001B0")]
		Unity
	}

	[Token(Token = "0x200003C")]
	public struct ControllerPose
	{
		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x8F779C", Offset = "0x8F779C", VA = "0x8F779C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200003D")]
	public struct PoseFrame
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x8F7878", Offset = "0x8F7878", VA = "0x8F7878")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xACFB14", Offset = "0xACFB14", VA = "0xACFB14")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000145")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xACFB24", Offset = "0xACFB24", VA = "0xACFB24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xACFBAC", Offset = "0xACFBAC", VA = "0xACFBAC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xACFE28", Offset = "0xACFE28", VA = "0xACFE28")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xACFE30", Offset = "0xACFE30", VA = "0xACFE30")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xACFE40", Offset = "0xACFE40", VA = "0xACFE40")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xACFFB4", Offset = "0xACFFB4", VA = "0xACFFB4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xAD0020", Offset = "0xAD0020", VA = "0xAD0020")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xAD0184", Offset = "0xAD0184", VA = "0xAD0184")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xAD0520", Offset = "0xAD0520", VA = "0xAD0520")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xAD0744", Offset = "0xAD0744", VA = "0xAD0744", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xAD0770", Offset = "0xAD0770", VA = "0xAD0770")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000040")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000041")]
	public enum TextureType
	{
		[Token(Token = "0x40001E6")]
		DiffuseTextures,
		[Token(Token = "0x40001E7")]
		NormalMaps,
		[Token(Token = "0x40001E8")]
		RoughnessMaps,
		[Token(Token = "0x40001E9")]
		Count
	}

	[Token(Token = "0x2000042")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000043")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000044")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000045")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x8F82BC", Offset = "0x8F82BC", VA = "0x8F82BC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5960D4", Offset = "0x5960D4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0x8F826C", Offset = "0x8F826C", VA = "0x8F826C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0x8F82B4", Offset = "0x8F82B4", VA = "0x8F82B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x8F7B7C", Offset = "0x8F7B7C", VA = "0x8F7B7C")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x8F7BA8", Offset = "0x8F7BA8", VA = "0x8F7BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x8F7BAC", Offset = "0x8F7BAC", VA = "0x8F7BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x8F8274", Offset = "0x8F8274", VA = "0x8F8274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40001E1")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40001E2")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40001E3")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40001E4")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xAD07BC", Offset = "0xAD07BC", VA = "0xAD07BC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xAD099C", Offset = "0xAD099C", VA = "0xAD099C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xAD09DC", Offset = "0xAD09DC", VA = "0xAD09DC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xAD1170", Offset = "0xAD1170", VA = "0xAD1170")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xAD1650", Offset = "0xAD1650", VA = "0xAD1650")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xAD0A78", Offset = "0xAD0A78", VA = "0xAD0A78")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xAD173C", Offset = "0xAD173C", VA = "0xAD173C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xAD0ECC", Offset = "0xAD0ECC", VA = "0xAD0ECC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xAD19CC", Offset = "0xAD19CC", VA = "0xAD19CC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xAD1C70", Offset = "0xAD1C70", VA = "0xAD1C70")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xAD1D98", Offset = "0xAD1D98", VA = "0xAD1D98")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xAD1DD0", Offset = "0xAD1DD0", VA = "0xAD1DD0")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xAD10DC", Offset = "0xAD10DC", VA = "0xAD10DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59D654", Offset = "0x59D654")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xAD2D38", Offset = "0xAD2D38", VA = "0xAD2D38")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000047")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xAD3374", Offset = "0xAD3374", VA = "0xAD3374")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xAD33E8", Offset = "0xAD33E8", VA = "0xAD33E8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xAD3478", Offset = "0xAD3478", VA = "0xAD3478")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xAD35A4", Offset = "0xAD35A4", VA = "0xAD35A4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xAD3770", Offset = "0xAD3770", VA = "0xAD3770")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xAD38DC", Offset = "0xAD38DC", VA = "0xAD38DC")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xAD39B4", Offset = "0xAD39B4", VA = "0xAD39B4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xAD3BE4", Offset = "0xAD3BE4", VA = "0xAD3BE4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xAD3EC0", Offset = "0xAD3EC0", VA = "0xAD3EC0")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000048")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x9D9A10", Offset = "0x9D9A10", VA = "0x9D9A10")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x9D9B24", Offset = "0x9D9B24", VA = "0x9D9B24")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x9D9CD0", Offset = "0x9D9CD0", VA = "0x9D9CD0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x9D9B94", Offset = "0x9D9B94", VA = "0x9D9B94")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x9D9C28", Offset = "0x9D9C28", VA = "0x9D9C28")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000049")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0x9D9610", Offset = "0x9D9610", VA = "0x9D9610")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x9D99B4", Offset = "0x9D99B4", VA = "0x9D99B4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x9D97B0", Offset = "0x9D97B0", VA = "0x9D97B0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x9D9828", Offset = "0x9D9828", VA = "0x9D9828")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x9D98C4", Offset = "0x9D98C4", VA = "0x9D98C4")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200004A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400020B")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400020C")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xAD40E8", Offset = "0xAD40E8", VA = "0xAD40E8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xAD4170", Offset = "0xAD4170", VA = "0xAD4170", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xAD418C", Offset = "0xAD418C", VA = "0xAD418C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xAD4330", Offset = "0xAD4330", VA = "0xAD4330")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xAD451C", Offset = "0xAD451C", VA = "0xAD451C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200004B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xAD45C0", Offset = "0xAD45C0", VA = "0xAD45C0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xAD46A4", Offset = "0xAD46A4", VA = "0xAD46A4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xAD4918", Offset = "0xAD4918", VA = "0xAD4918")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xAD4CD8", Offset = "0xAD4CD8", VA = "0xAD4CD8")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xAD4DE4", Offset = "0xAD4DE4", VA = "0xAD4DE4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200004C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000215")]
	Body = 1,
	[Token(Token = "0x4000216")]
	Hands = 2,
	[Token(Token = "0x4000217")]
	Base = 4,
	[Token(Token = "0x4000218")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000219")]
	Expressive = 0x20,
	[Token(Token = "0x400021A")]
	All = -1
}
[Token(Token = "0x200004D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400021C")]
	AvatarSpecification,
	[Token(Token = "0x400021D")]
	AssetLoaded,
	[Token(Token = "0x400021E")]
	Count
}
[Token(Token = "0x200004E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000224")]
	Mesh,
	[Token(Token = "0x4000225")]
	Texture,
	[Token(Token = "0x4000226")]
	Pose,
	[Token(Token = "0x4000227")]
	Material,
	[Token(Token = "0x4000228")]
	CombinedMesh,
	[Token(Token = "0x4000229")]
	PBSMaterial,
	[Token(Token = "0x400022A")]
	FailedLoad,
	[Token(Token = "0x400022B")]
	Count
}
[Token(Token = "0x2000051")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000056")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000260")]
	RGB24,
	[Token(Token = "0x4000261")]
	DXT1,
	[Token(Token = "0x4000262")]
	DXT5,
	[Token(Token = "0x4000263")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000264")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000265")]
	Count
}
[Token(Token = "0x2000057")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000058")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400026D")]
	SkinnedMeshRender,
	[Token(Token = "0x400026E")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400026F")]
	ProjectorRender,
	[Token(Token = "0x4000270")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000271")]
	Count
}
[Token(Token = "0x2000059")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000273")]
	Unknown,
	[Token(Token = "0x4000274")]
	Default,
	[Token(Token = "0x4000275")]
	Verbose,
	[Token(Token = "0x4000276")]
	Debug,
	[Token(Token = "0x4000277")]
	Info,
	[Token(Token = "0x4000278")]
	Warn,
	[Token(Token = "0x4000279")]
	Error,
	[Token(Token = "0x400027A")]
	Fatal,
	[Token(Token = "0x400027B")]
	Silent
}
[Token(Token = "0x200005A")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200005B")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000280")]
	One = 1,
	[Token(Token = "0x4000281")]
	Two = 2,
	[Token(Token = "0x4000282")]
	Three = 4,
	[Token(Token = "0x4000283")]
	Joystick = 8
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000285")]
	One = 1,
	[Token(Token = "0x4000286")]
	Two = 2,
	[Token(Token = "0x4000287")]
	Joystick = 4,
	[Token(Token = "0x4000288")]
	ThumbRest = 8,
	[Token(Token = "0x4000289")]
	Index = 0x10,
	[Token(Token = "0x400028A")]
	Pointing = 0x40,
	[Token(Token = "0x400028B")]
	ThumbUp = 0x80
}
[Token(Token = "0x200005D")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000061")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40002AB")]
	Add,
	[Token(Token = "0x40002AC")]
	Multiply,
	[Token(Token = "0x40002AD")]
	Count
}
[Token(Token = "0x2000066")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40002AF")]
	Color,
	[Token(Token = "0x40002B0")]
	Texture,
	[Token(Token = "0x40002B1")]
	TextureSingleChannel,
	[Token(Token = "0x40002B2")]
	Parallax,
	[Token(Token = "0x40002B3")]
	Count
}
[Token(Token = "0x2000067")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40002B5")]
	None,
	[Token(Token = "0x40002B6")]
	Positional,
	[Token(Token = "0x40002B7")]
	ViewReflection,
	[Token(Token = "0x40002B8")]
	Fresnel,
	[Token(Token = "0x40002B9")]
	Pulse,
	[Token(Token = "0x40002BA")]
	Count
}
[Token(Token = "0x2000068")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40002BC")]
	Touch,
	[Token(Token = "0x40002BD")]
	Malibu,
	[Token(Token = "0x40002BE")]
	Go,
	[Token(Token = "0x40002BF")]
	Quest,
	[Token(Token = "0x40002C0")]
	Count
}
[Token(Token = "0x2000069")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40002C2")]
	Lowest = 1,
	[Token(Token = "0x40002C3")]
	Medium = 3,
	[Token(Token = "0x40002C4")]
	Highest = 5
}
[Token(Token = "0x200006A")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40002C6")]
	Unknown = -1,
	[Token(Token = "0x40002C7")]
	One,
	[Token(Token = "0x40002C8")]
	Two
}
[Token(Token = "0x200006B")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x9E8DD8", Offset = "0x9E8DD8", VA = "0x9E8DD8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x9E8E08", Offset = "0x9E8E08", VA = "0x9E8E08", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x9E9024", Offset = "0x9E9024", VA = "0x9E9024", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006C")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x9E9108", Offset = "0x9E9108", VA = "0x9E9108")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x9E9138", Offset = "0x9E9138", VA = "0x9E9138", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x9E94D4", Offset = "0x9E94D4", VA = "0x9E94D4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006D")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x9E8368", Offset = "0x9E8368", VA = "0x9E8368")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x9E8398", Offset = "0x9E8398", VA = "0x9E8398", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x9E8628", Offset = "0x9E8628", VA = "0x9E8628", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006E")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x9E963C", Offset = "0x9E963C", VA = "0x9E963C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x9E966C", Offset = "0x9E966C", VA = "0x9E966C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x9E985C", Offset = "0x9E985C", VA = "0x9E985C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB0E00C", Offset = "0xB0E00C", VA = "0xB0E00C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000070")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000071")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002FD")]
	FirstPerson = 1,
	[Token(Token = "0x40002FE")]
	ThirdPerson = 2,
	[Token(Token = "0x40002FF")]
	SelfOccluding = 4
}
[Token(Token = "0x2000072")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000075")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000076")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000315")]
	Default,
	[Token(Token = "0x4000316")]
	GripSphere,
	[Token(Token = "0x4000317")]
	GripCube,
	[Token(Token = "0x4000318")]
	Count
}
[Token(Token = "0x2000077")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400031A")]
	Body,
	[Token(Token = "0x400031B")]
	Clothing,
	[Token(Token = "0x400031C")]
	Eyewear,
	[Token(Token = "0x400031D")]
	Hair,
	[Token(Token = "0x400031E")]
	Beard,
	[Token(Token = "0x400031F")]
	Count
}
[Token(Token = "0x2000078")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000079")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200007A")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200007B")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200007C")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000329")]
	AvatarHead,
	[Token(Token = "0x400032A")]
	AvatarHand,
	[Token(Token = "0x400032B")]
	Object,
	[Token(Token = "0x400032C")]
	ObjectStatic,
	[Token(Token = "0x400032D")]
	Count
}
[Token(Token = "0x200007D")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200007E")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200007F")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000080")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000081")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000339")]
	Point,
	[Token(Token = "0x400033A")]
	Direction,
	[Token(Token = "0x400033B")]
	Spot,
	[Token(Token = "0x400033C")]
	Count
}
[Token(Token = "0x2000082")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000083")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000084")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000085")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000086")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000352")]
	None = 0u,
	[Token(Token = "0x4000353")]
	GazeTarget = 1u,
	[Token(Token = "0x4000354")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000087")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000088")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000089")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200008A")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200008B")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200008C")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x8F82C4", Offset = "0x8F82C4", VA = "0x8F82C4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000369")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xAD11D0", Offset = "0xAD11D0", VA = "0xAD11D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xAD4DF4", Offset = "0xAD4DF4", VA = "0xAD4DF4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xAD5144", Offset = "0xAD5144", VA = "0xAD5144")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xAD51B4", Offset = "0xAD51B4", VA = "0xAD51B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xAD5B94", Offset = "0xAD5B94", VA = "0xAD5B94")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xAD5BE8", Offset = "0xAD5BE8", VA = "0xAD5BE8")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xAD5C3C", Offset = "0xAD5C3C", VA = "0xAD5C3C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xAD5CA0", Offset = "0xAD5CA0", VA = "0xAD5CA0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xAD5D04", Offset = "0xAD5D04", VA = "0xAD5D04")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xAD5994", Offset = "0xAD5994", VA = "0xAD5994")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xAD5DE0", Offset = "0xAD5DE0", VA = "0xAD5DE0")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xAD5F34", Offset = "0xAD5F34", VA = "0xAD5F34")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xAD489C", Offset = "0xAD489C", VA = "0xAD489C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xAD6028", Offset = "0xAD6028", VA = "0xAD6028")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xAD50F8", Offset = "0xAD50F8", VA = "0xAD50F8")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xAD13C8", Offset = "0xAD13C8", VA = "0xAD13C8")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xAD6108", Offset = "0xAD6108", VA = "0xAD6108")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200008E")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xAD60C8", Offset = "0xAD60C8", VA = "0xAD60C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xAD6278", Offset = "0xAD6278", VA = "0xAD6278")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xAD60E8", Offset = "0xAD60E8", VA = "0xAD60E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xAD62A8", Offset = "0xAD62A8", VA = "0xAD62A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xAD6120", Offset = "0xAD6120", VA = "0xAD6120")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xAD62D8", Offset = "0xAD62D8", VA = "0xAD62D8")]
		set
		{
		}
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xAD632C", Offset = "0xAD632C", VA = "0xAD632C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200008F")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xAD7E78", Offset = "0xAD7E78", VA = "0xAD7E78")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xAD816C", Offset = "0xAD816C", VA = "0xAD816C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xAD8004", Offset = "0xAD8004", VA = "0xAD8004")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xAD83AC", Offset = "0xAD83AC", VA = "0xAD83AC")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000090")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xAD83BC", Offset = "0xAD83BC", VA = "0xAD83BC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xAD8518", Offset = "0xAD8518", VA = "0xAD8518")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xAD86F0", Offset = "0xAD86F0", VA = "0xAD86F0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000091")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000380")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000381")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000382")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xAD6398", Offset = "0xAD6398", VA = "0xAD6398")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xAD73B4", Offset = "0xAD73B4", VA = "0xAD73B4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xAD75F0", Offset = "0xAD75F0", VA = "0xAD75F0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xAD6AC8", Offset = "0xAD6AC8", VA = "0xAD6AC8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xAD67EC", Offset = "0xAD67EC", VA = "0xAD67EC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xAD6950", Offset = "0xAD6950", VA = "0xAD6950")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xAD7E68", Offset = "0xAD7E68", VA = "0xAD7E68")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000092")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000093")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000094")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x8F89C0", Offset = "0x8F89C0", VA = "0x8F89C0")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000095")]
	public struct TextureSet
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x8F8A1C", Offset = "0x8F8A1C", VA = "0x8F8A1C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596154", Offset = "0x596154")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0x8F8970", Offset = "0x8F8970", VA = "0x8F8970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0x8F89B8", Offset = "0x8F89B8", VA = "0x8F89B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x8F8340", Offset = "0x8F8340", VA = "0x8F8340")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x8F836C", Offset = "0x8F836C", VA = "0x8F836C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x8F8370", Offset = "0x8F8370", VA = "0x8F8370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x8F8978", Offset = "0x8F8978", VA = "0x8F8978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000386")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000387")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400038A")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400038B")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400038C")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400038D")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400038E")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400038F")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000390")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xAD8E1C", Offset = "0xAD8E1C", VA = "0xAD8E1C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xAD92FC", Offset = "0xAD92FC", VA = "0xAD92FC")]
	public void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xAD94FC", Offset = "0xAD94FC", VA = "0xAD94FC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xAD1820", Offset = "0xAD1820", VA = "0xAD1820")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAD9470", Offset = "0xAD9470", VA = "0xAD9470")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xAD1448", Offset = "0xAD1448", VA = "0xAD1448")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xAD1698", Offset = "0xAD1698", VA = "0xAD1698")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xAD9548", Offset = "0xAD9548", VA = "0xAD9548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59D7A4", Offset = "0x59D7A4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xAD5D94", Offset = "0xAD5D94", VA = "0xAD5D94")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xAD95F4", Offset = "0xAD95F4", VA = "0xAD95F4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000097")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAD976C", Offset = "0xAD976C", VA = "0xAD976C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAD98E0", Offset = "0xAD98E0", VA = "0xAD98E0")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000098")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000011")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xC6A14C", Offset = "0xC6A14C", VA = "0xC6A14C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC6A2F0", Offset = "0xC6A2F0", VA = "0xC6A2F0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x59D854", Offset = "0x59D854")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC6A460", Offset = "0xC6A460", VA = "0xC6A460")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xC6A5D4", Offset = "0xC6A5D4", VA = "0xC6A5D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC6A720", Offset = "0xC6A720", VA = "0xC6A720")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC6A464", Offset = "0xC6A464", VA = "0xC6A464")]
	private void Bind()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC6A5D8", Offset = "0xC6A5D8", VA = "0xC6A5D8")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC6A72C", Offset = "0xC6A72C", VA = "0xC6A72C")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC6A920", Offset = "0xC6A920", VA = "0xC6A920")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC6AB14", Offset = "0xC6AB14", VA = "0xC6AB14")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x2000099")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	public delegate void OnClick();

	[Token(Token = "0x200009B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200009C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200009D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596164", Offset = "0x596164")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x9F3B64", Offset = "0x9F3B64", VA = "0x9F3B64")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x9F3B6C", Offset = "0x9F3B6C", VA = "0x9F3B6C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596174", Offset = "0x596174")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x9F3D90", Offset = "0x9F3D90", VA = "0x9F3D90")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x9F3D98", Offset = "0x9F3D98", VA = "0x9F3D98")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596184", Offset = "0x596184")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x9F3FE4", Offset = "0x9F3FE4", VA = "0x9F3FE4")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x9F3FEC", Offset = "0x9F3FEC", VA = "0x9F3FEC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596194", Offset = "0x596194")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x9F4380", Offset = "0x9F4380", VA = "0x9F4380")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x9F4388", Offset = "0x9F4388", VA = "0x9F4388")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961A4", Offset = "0x5961A4")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x9F43A8", Offset = "0x9F43A8", VA = "0x9F43A8")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x9F43B0", Offset = "0x9F43B0", VA = "0x9F43B0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40003A6")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40003A7")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40003A8")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40003B7")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40003B8")]
	public const float marginH = 16f;

	[Token(Token = "0x40003B9")]
	public const float marginV = 16f;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB87774", Offset = "0xB87774", VA = "0xB87774")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB87CA4", Offset = "0xB87CA4", VA = "0xB87CA4")]
	public void Show()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB882A0", Offset = "0xB882A0", VA = "0xB882A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB8805C", Offset = "0xB8805C", VA = "0xB8805C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB8845C", Offset = "0xB8845C", VA = "0xB8845C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB8877C", Offset = "0xB8877C", VA = "0xB8877C")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB88B44", Offset = "0xB88B44", VA = "0xB88B44")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB88C48", Offset = "0xB88C48", VA = "0xB88C48")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB88E2C", Offset = "0xB88E2C", VA = "0xB88E2C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB88ED0", Offset = "0xB88ED0", VA = "0xB88ED0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB890C0", Offset = "0xB890C0", VA = "0xB890C0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB892C8", Offset = "0xB892C8", VA = "0xB892C8")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB895CC", Offset = "0xB895CC", VA = "0xB895CC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB896C8", Offset = "0xB896C8", VA = "0xB896C8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB89774", Offset = "0xB89774", VA = "0xB89774")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A3")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xACA7E4", Offset = "0xACA7E4", VA = "0xACA7E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xACA894", Offset = "0xACA894", VA = "0xACA894")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xACA954", Offset = "0xACA954", VA = "0xACA954")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xACA990", Offset = "0xACA990", VA = "0xACA990")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A4")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000A5")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40003D7")]
		On,
		[Token(Token = "0x40003D8")]
		Off,
		[Token(Token = "0x40003D9")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x157B2E4", Offset = "0x157B2E4", VA = "0x157B2E4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x157B2A0", Offset = "0x157B2A0", VA = "0x157B2A0")]
		set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x157B2EC", Offset = "0x157B2EC", VA = "0x157B2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x157B348", Offset = "0x157B348", VA = "0x157B348")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x157B48C", Offset = "0x157B48C", VA = "0x157B48C", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x157B4A8", Offset = "0x157B4A8", VA = "0x157B4A8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x157B4FC", Offset = "0x157B4FC", VA = "0x157B4FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x157B6B8", Offset = "0x157B6B8", VA = "0x157B6B8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x157B7CC", Offset = "0x157B7CC", VA = "0x157B7CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x157B85C", Offset = "0x157B85C", VA = "0x157B85C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x157B928", Offset = "0x157B928", VA = "0x157B928")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x157B9DC", Offset = "0x157B9DC", VA = "0x157B9DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x157BAC8", Offset = "0x157BAC8", VA = "0x157BAC8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A6")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40003DB")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40003DC")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5985C4", Offset = "0x5985C4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5985FC", Offset = "0x5985FC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598634", Offset = "0x598634")]
	public float HeightOffset;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59866C", Offset = "0x59866C")]
	public float MinimumHeight;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5986A4", Offset = "0x5986A4")]
	public float MaximumHeight;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xFD3B90", Offset = "0xFD3B90", VA = "0xFD3B90")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xFD3B98", Offset = "0xFD3B98", VA = "0xFD3B98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xFD3C24", Offset = "0xFD3C24", VA = "0xFD3C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xFD3CB8", Offset = "0xFD3CB8", VA = "0xFD3CB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xFD3D4C", Offset = "0xFD3D4C", VA = "0xFD3D4C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xFD4078", Offset = "0xFD4078", VA = "0xFD4078")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xFD42A8", Offset = "0xFD42A8", VA = "0xFD42A8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A7")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x157D100", Offset = "0x157D100", VA = "0x157D100")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x157D1CC", Offset = "0x157D1CC", VA = "0x157D1CC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000A9")]
	public enum States
	{
		[Token(Token = "0x400040A")]
		Ready,
		[Token(Token = "0x400040B")]
		Aim,
		[Token(Token = "0x400040C")]
		CancelAim,
		[Token(Token = "0x400040D")]
		PreTeleport,
		[Token(Token = "0x400040E")]
		CancelTeleport,
		[Token(Token = "0x400040F")]
		Teleporting,
		[Token(Token = "0x4000410")]
		PostTeleport
	}

	[Token(Token = "0x20000AA")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000412")]
		None,
		[Token(Token = "0x4000413")]
		Aim,
		[Token(Token = "0x4000414")]
		PreTeleport,
		[Token(Token = "0x4000415")]
		Teleport
	}

	[Token(Token = "0x20000AB")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000417")]
		Point,
		[Token(Token = "0x4000418")]
		Sphere,
		[Token(Token = "0x4000419")]
		Capsule
	}

	[Token(Token = "0x20000AC")]
	public class AimData
	{
		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598ABC", Offset = "0x598ABC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000016")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0x8F4B20", Offset = "0x8F4B20", VA = "0x8F4B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DD04", Offset = "0x59DD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000266")]
			[Address(RVA = "0x8F4B28", Offset = "0x8F4B28", VA = "0x8F4B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DD14", Offset = "0x59DD14")]
			private set
			{
			}
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x8F4A9C", Offset = "0x8F4A9C", VA = "0x8F4A9C")]
		public AimData()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x8F4B30", Offset = "0x8F4B30", VA = "0x8F4B30")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961B4", Offset = "0x5961B4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x8F48E8", Offset = "0x8F48E8", VA = "0x8F48E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0x8F4930", Offset = "0x8F4930", VA = "0x8F4930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x8F47AC", Offset = "0x8F47AC", VA = "0x8F47AC")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x8F47D8", Offset = "0x8F47D8", VA = "0x8F47D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x8F47DC", Offset = "0x8F47DC", VA = "0x8F47DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x8F48F0", Offset = "0x8F48F0", VA = "0x8F48F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961C4", Offset = "0x5961C4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0x8F4218", Offset = "0x8F4218", VA = "0x8F4218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x8F4260", Offset = "0x8F4260", VA = "0x8F4260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x8F4090", Offset = "0x8F4090", VA = "0x8F4090")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x8F40BC", Offset = "0x8F40BC", VA = "0x8F40BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x8F40C0", Offset = "0x8F40C0", VA = "0x8F40C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x8F4220", Offset = "0x8F4220", VA = "0x8F4220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961D4", Offset = "0x5961D4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x8F4344", Offset = "0x8F4344", VA = "0x8F4344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x8F438C", Offset = "0x8F438C", VA = "0x8F438C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x8F4268", Offset = "0x8F4268", VA = "0x8F4268")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x8F4294", Offset = "0x8F4294", VA = "0x8F4294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x8F4298", Offset = "0x8F4298", VA = "0x8F4298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x8F434C", Offset = "0x8F434C", VA = "0x8F434C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961E4", Offset = "0x5961E4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x8F475C", Offset = "0x8F475C", VA = "0x8F475C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x8F47A4", Offset = "0x8F47A4", VA = "0x8F47A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x8F4640", Offset = "0x8F4640", VA = "0x8F4640")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x8F466C", Offset = "0x8F466C", VA = "0x8F466C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x8F4670", Offset = "0x8F4670", VA = "0x8F4670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x8F4764", Offset = "0x8F4764", VA = "0x8F4764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5961F4", Offset = "0x5961F4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x8F4470", Offset = "0x8F4470", VA = "0x8F4470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x8F44B8", Offset = "0x8F44B8", VA = "0x8F44B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x8F4394", Offset = "0x8F4394", VA = "0x8F4394")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x8F43C0", Offset = "0x8F43C0", VA = "0x8F43C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x8F43C4", Offset = "0x8F43C4", VA = "0x8F43C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x8F4478", Offset = "0x8F4478", VA = "0x8F4478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596204", Offset = "0x596204")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0x8F4A4C", Offset = "0x8F4A4C", VA = "0x8F4A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x8F4A94", Offset = "0x8F4A94", VA = "0x8F4A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x8F4938", Offset = "0x8F4938", VA = "0x8F4938")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x8F4964", Offset = "0x8F4964", VA = "0x8F4964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x8F4968", Offset = "0x8F4968", VA = "0x8F4968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x8F4A54", Offset = "0x8F4A54", VA = "0x8F4A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596214", Offset = "0x596214")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0x8F45F0", Offset = "0x8F45F0", VA = "0x8F45F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0x8F4638", Offset = "0x8F4638", VA = "0x8F4638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x8F44C0", Offset = "0x8F44C0", VA = "0x8F44C0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x8F44EC", Offset = "0x8F44EC", VA = "0x8F44EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x8F44F0", Offset = "0x8F44F0", VA = "0x8F44F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x8F45F8", Offset = "0x8F45F8", VA = "0x8F45F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5986DC", Offset = "0x5986DC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598714", Offset = "0x598714")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59874C", Offset = "0x59874C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598784", Offset = "0x598784")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5987BC", Offset = "0x5987BC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5987F4", Offset = "0x5987F4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59882C", Offset = "0x59882C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598864", Offset = "0x598864")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59889C", Offset = "0x59889C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5988AC", Offset = "0x5988AC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5988E4", Offset = "0x5988E4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59892C", Offset = "0x59892C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59893C", Offset = "0x59893C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598974", Offset = "0x598974")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5989AC", Offset = "0x5989AC")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5989E4", Offset = "0x5989E4")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000013")]
	public States CurrentState
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x157DCC8", Offset = "0x157DCC8", VA = "0x157DCC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D88C", Offset = "0x59D88C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x157DCD0", Offset = "0x157DCD0", VA = "0x157DCD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D89C", Offset = "0x59D89C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x157DEF4", Offset = "0x157DEF4", VA = "0x157DEF4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000015")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x157DF1C", Offset = "0x157DF1C", VA = "0x157DF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D8CC", Offset = "0x59D8CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x157DF24", Offset = "0x157DF24", VA = "0x157DF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D8DC", Offset = "0x59D8DC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x157DCD8", Offset = "0x157DCD8", VA = "0x157DCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D8AC", Offset = "0x59D8AC")]
		add
		{
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x157DD78", Offset = "0x157DD78", VA = "0x157DD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D8BC", Offset = "0x59D8BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x157E564", Offset = "0x157E564", VA = "0x157E564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D924", Offset = "0x59D924")]
		add
		{
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x157E604", Offset = "0x157E604", VA = "0x157E604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D934", Offset = "0x59D934")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x157E6A4", Offset = "0x157E6A4", VA = "0x157E6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9A4", Offset = "0x59D9A4")]
		add
		{
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x157E744", Offset = "0x157E744", VA = "0x157E744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9B4", Offset = "0x59D9B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x157E7E4", Offset = "0x157E7E4", VA = "0x157E7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9C4", Offset = "0x59D9C4")]
		add
		{
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x157E884", Offset = "0x157E884", VA = "0x157E884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9D4", Offset = "0x59D9D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x157E994", Offset = "0x157E994", VA = "0x157E994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9E4", Offset = "0x59D9E4")]
		add
		{
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x157EA34", Offset = "0x157EA34", VA = "0x157EA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D9F4", Offset = "0x59D9F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x157EB4C", Offset = "0x157EB4C", VA = "0x157EB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DA64", Offset = "0x59DA64")]
		add
		{
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x157EBEC", Offset = "0x157EBEC", VA = "0x157EBEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DA74", Offset = "0x59DA74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x157ED04", Offset = "0x157ED04", VA = "0x157ED04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DAE4", Offset = "0x59DAE4")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x157EDA4", Offset = "0x157EDA4", VA = "0x157EDA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DAF4", Offset = "0x59DAF4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x157EEBC", Offset = "0x157EEBC", VA = "0x157EEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DB64", Offset = "0x59DB64")]
		add
		{
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x157EF5C", Offset = "0x157EF5C", VA = "0x157EF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DB74", Offset = "0x59DB74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x157F074", Offset = "0x157F074", VA = "0x157F074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DBE4", Offset = "0x59DBE4")]
		add
		{
		}
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x157F114", Offset = "0x157F114", VA = "0x157F114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DBF4", Offset = "0x59DBF4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x157F22C", Offset = "0x157F22C", VA = "0x157F22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DC64", Offset = "0x59DC64")]
		add
		{
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x157F2CC", Offset = "0x157F2CC", VA = "0x157F2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DC74", Offset = "0x59DC74")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x157F3E4", Offset = "0x157F3E4", VA = "0x157F3E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DCE4", Offset = "0x59DCE4")]
		add
		{
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x157F484", Offset = "0x157F484", VA = "0x157F484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DCF4", Offset = "0x59DCF4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x157D974", Offset = "0x157D974", VA = "0x157D974")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x157D998", Offset = "0x157D998", VA = "0x157D998")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x157DE18", Offset = "0x157DE18", VA = "0x157DE18")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x157DF2C", Offset = "0x157DF2C", VA = "0x157DF2C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x157E178", Offset = "0x157E178", VA = "0x157E178")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x59D8EC", Offset = "0x59D8EC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x157E22C", Offset = "0x157E22C", VA = "0x157E22C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x157E32C", Offset = "0x157E32C", VA = "0x157E32C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x157E348", Offset = "0x157E348", VA = "0x157E348")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x157E40C", Offset = "0x157E40C", VA = "0x157E40C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x157E450", Offset = "0x157E450", VA = "0x157E450")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x157E4B4", Offset = "0x157E4B4", VA = "0x157E4B4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x157E55C", Offset = "0x157E55C", VA = "0x157E55C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x157E4E4", Offset = "0x157E4E4", VA = "0x157E4E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59D944", Offset = "0x59D944")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x157E924", Offset = "0x157E924", VA = "0x157E924")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x157EAD4", Offset = "0x157EAD4", VA = "0x157EAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DA04", Offset = "0x59DA04")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x157EC8C", Offset = "0x157EC8C", VA = "0x157EC8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DA84", Offset = "0x59DA84")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x157EE44", Offset = "0x157EE44", VA = "0x157EE44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DB04", Offset = "0x59DB04")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x157EFFC", Offset = "0x157EFFC", VA = "0x157EFFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DB84", Offset = "0x59DB84")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x157F1B4", Offset = "0x157F1B4", VA = "0x157F1B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DC04", Offset = "0x59DC04")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x157F36C", Offset = "0x157F36C", VA = "0x157F36C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DC84", Offset = "0x59DC84")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x157F524", Offset = "0x157F524", VA = "0x157F524")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x157F664", Offset = "0x157F664", VA = "0x157F664")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x157F698", Offset = "0x157F698", VA = "0x157F698")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x157F760", Offset = "0x157F760", VA = "0x157F760")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x157F858", Offset = "0x157F858", VA = "0x157F858")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xAF7140", Offset = "0xAF7140", VA = "0xAF7140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DF54", Offset = "0x59DF54")]
		add
		{
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xAF71E0", Offset = "0xAF71E0", VA = "0xAF71E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DF64", Offset = "0x59DF64")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xAF7280", Offset = "0xAF7280", VA = "0xAF7280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DF74", Offset = "0x59DF74")]
		add
		{
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xAF7320", Offset = "0xAF7320", VA = "0xAF7320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DF84", Offset = "0x59DF84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xAF73C0", Offset = "0xAF73C0", VA = "0xAF73C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xAF74AC", Offset = "0xAF74AC", VA = "0xAF74AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xAF74B0", Offset = "0xAF74B0", VA = "0xAF74B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xAF7524", Offset = "0xAF7524", VA = "0xAF7524")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xAF7648", Offset = "0xAF7648", VA = "0xAF7648")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xAF7830", Offset = "0xAF7830", VA = "0xAF7830")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xAF7A38", Offset = "0xAF7A38", VA = "0xAF7A38")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B5")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600029D")]
	[Address(RVA = "0xBA11D4", Offset = "0xBA11D4", VA = "0xBA11D4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBA1274", Offset = "0xBA1274", VA = "0xBA1274", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600029F")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xBA1364", Offset = "0xBA1364", VA = "0xBA1364")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598AEC", Offset = "0x598AEC")]
	public float Range;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBA1374", Offset = "0xBA1374", VA = "0xBA1374", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xBA1470", Offset = "0xBA1470", VA = "0xBA1470")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598B24", Offset = "0x598B24")]
	public float Range;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598B5C", Offset = "0x598B5C")]
	public float MinimumElevation;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598B94", Offset = "0x598B94")]
	public float Gravity;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x598BCC", Offset = "0x598BCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598BCC", Offset = "0x598BCC")]
	public float AimVelocity;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x598C28", Offset = "0x598C28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598C28", Offset = "0x598C28")]
	public float AimStep;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xBA1480", Offset = "0xBA1480", VA = "0xBA1480", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xBA1610", Offset = "0xBA1610", VA = "0xBA1610")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598C80", Offset = "0x598C80")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xBA1624", Offset = "0xBA1624", VA = "0xBA1624")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xBA1760", Offset = "0xBA1760", VA = "0xBA1760")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xBA1790", Offset = "0xBA1790", VA = "0xBA1790")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xBA17C0", Offset = "0xBA17C0", VA = "0xBA17C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xBA1870", Offset = "0xBA1870", VA = "0xBA1870", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xBA18DC", Offset = "0xBA18DC", VA = "0xBA18DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xBA1944", Offset = "0xBA1944", VA = "0xBA1944")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598CB8", Offset = "0x598CB8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598CC8", Offset = "0x598CC8")]
	public Transform PositionIndicator;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598D00", Offset = "0x598D00")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598D38", Offset = "0x598D38")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000025")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xBA1A68", Offset = "0xBA1A68", VA = "0xBA1A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DF94", Offset = "0x59DF94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xBA1A70", Offset = "0xBA1A70", VA = "0xBA1A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DFA4", Offset = "0x59DFA4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xBA1C2C", Offset = "0xBA1C2C", VA = "0xBA1C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DFB4", Offset = "0x59DFB4")]
		add
		{
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xBA1CCC", Offset = "0xBA1CCC", VA = "0xBA1CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59DFC4", Offset = "0x59DFC4")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xBA1A7C", Offset = "0xBA1A7C", VA = "0xBA1A7C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBA1B14", Offset = "0xBA1B14", VA = "0xBA1B14")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xBA1BE8", Offset = "0xBA1BE8", VA = "0xBA1BE8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xBA1C28", Offset = "0xBA1C28", VA = "0xBA1C28")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xBA1D6C", Offset = "0xBA1D6C", VA = "0xBA1D6C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBA1DD0", Offset = "0xBA1DD0", VA = "0xBA1DD0")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBA1DF0", Offset = "0xBA1DF0", VA = "0xBA1DF0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000BA")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596224", Offset = "0x596224")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x900438", Offset = "0x900438", VA = "0x900438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x900480", Offset = "0x900480", VA = "0x900480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x900370", Offset = "0x900370", VA = "0x900370")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x90039C", Offset = "0x90039C", VA = "0x90039C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x9003A0", Offset = "0x9003A0", VA = "0x9003A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x900440", Offset = "0x900440", VA = "0x900440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596234", Offset = "0x596234")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x900320", Offset = "0x900320", VA = "0x900320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x900368", Offset = "0x900368", VA = "0x900368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x900254", Offset = "0x900254", VA = "0x900254")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x900280", Offset = "0x900280", VA = "0x900280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x900284", Offset = "0x900284", VA = "0x900284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x900328", Offset = "0x900328", VA = "0x900328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBA1FFC", Offset = "0xBA1FFC", VA = "0xBA1FFC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBA20D0", Offset = "0xBA20D0", VA = "0xBA20D0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xBA2130", Offset = "0xBA2130", VA = "0xBA2130", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xBA21F0", Offset = "0xBA21F0", VA = "0xBA21F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59DFD4", Offset = "0x59DFD4")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xBA2268", Offset = "0xBA2268", VA = "0xBA2268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E034", Offset = "0x59E034")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002BD")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xBA22E0", Offset = "0xBA22E0", VA = "0xBA22E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E094", Offset = "0x59E094")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xBA230C", Offset = "0xBA230C", VA = "0xBA230C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E0A4", Offset = "0x59E0A4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598D80", Offset = "0x598D80")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598D90", Offset = "0x598D90")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598DC8", Offset = "0x598DC8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598E00", Offset = "0x598E00")]
	public bool FastTeleport;

	[Token(Token = "0x1700002A")]
	public Transform Pointer
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xBA2338", Offset = "0xBA2338", VA = "0xBA2338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E154", Offset = "0x59E154")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xBA2340", Offset = "0xBA2340", VA = "0xBA2340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E164", Offset = "0x59E164")]
		private set
		{
		}
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xBA2348", Offset = "0xBA2348", VA = "0xBA2348", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xBA24A0", Offset = "0xBA24A0", VA = "0xBA24A0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xBA2558", Offset = "0xBA2558", VA = "0xBA2558")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000BF")]
	public enum InputModes
	{
		[Token(Token = "0x400046A")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400046B")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400046C")]
		ThumbstickTeleport,
		[Token(Token = "0x400046D")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000C0")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400046F")]
		A,
		[Token(Token = "0x4000470")]
		B,
		[Token(Token = "0x4000471")]
		LeftTrigger,
		[Token(Token = "0x4000472")]
		LeftThumbstick,
		[Token(Token = "0x4000473")]
		RightTrigger,
		[Token(Token = "0x4000474")]
		RightThumbstick,
		[Token(Token = "0x4000475")]
		X,
		[Token(Token = "0x4000476")]
		Y
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598E38", Offset = "0x598E38")]
	public InputModes InputMode;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598E70", Offset = "0x598E70")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598EA8", Offset = "0x598EA8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598EE0", Offset = "0x598EE0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xBA255C", Offset = "0xBA255C", VA = "0xBA255C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBA2560", Offset = "0xBA2560", VA = "0xBA2560", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBA2948", Offset = "0xBA2948", VA = "0xBA2948", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBA2A08", Offset = "0xBA2A08", VA = "0xBA2A08")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C1")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000C2")]
	public enum OrientationModes
	{
		[Token(Token = "0x400047B")]
		HeadRelative,
		[Token(Token = "0x400047C")]
		ForwardFacing
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596244", Offset = "0x596244")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x900568", Offset = "0x900568", VA = "0x900568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x9005B0", Offset = "0x9005B0", VA = "0x9005B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x900488", Offset = "0x900488", VA = "0x900488")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x9004B4", Offset = "0x9004B4", VA = "0x9004B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x9004B8", Offset = "0x9004B8", VA = "0x9004B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x900570", Offset = "0x900570", VA = "0x900570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBA2AEC", Offset = "0xBA2AEC", VA = "0xBA2AEC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBA2BE0", Offset = "0xBA2BE0", VA = "0xBA2BE0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBA2BE8", Offset = "0xBA2BE8", VA = "0xBA2BE8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBA2C34", Offset = "0xBA2C34", VA = "0xBA2C34", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xBA2C7C", Offset = "0xBA2C7C", VA = "0xBA2C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E174", Offset = "0x59E174")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DA")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002DB")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xBA2CF4", Offset = "0xBA2CF4", VA = "0xBA2CF4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xBA2DB0", Offset = "0xBA2DB0", VA = "0xBA2DB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E1D4", Offset = "0x59E1D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xBA2DDC", Offset = "0xBA2DDC", VA = "0xBA2DDC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xBA2DE0", Offset = "0xBA2DE0", VA = "0xBA2DE0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xBA2E5C", Offset = "0xBA2E5C", VA = "0xBA2E5C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598F18", Offset = "0x598F18")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598F50", Offset = "0x598F50")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598F88", Offset = "0x598F88")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598FC0", Offset = "0x598FC0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBA2E60", Offset = "0xBA2E60", VA = "0xBA2E60", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xBA2E8C", Offset = "0xBA2E8C", VA = "0xBA2E8C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBA323C", Offset = "0xBA323C", VA = "0xBA323C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x598FF8", Offset = "0x598FF8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599030", Offset = "0x599030")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599068", Offset = "0x599068")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBA3240", Offset = "0xBA3240", VA = "0xBA3240", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xBA3284", Offset = "0xBA3284", VA = "0xBA3284", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBA362C", Offset = "0xBA362C", VA = "0xBA362C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xBA363C", Offset = "0xBA363C", VA = "0xBA363C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBA3640", Offset = "0xBA3640", VA = "0xBA3640")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBA3648", Offset = "0xBA3648", VA = "0xBA3648")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBA3704", Offset = "0xBA3704", VA = "0xBA3704")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBA372C", Offset = "0xBA372C", VA = "0xBA372C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000C8")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5990A0", Offset = "0x5990A0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002D")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xBA3744", Offset = "0xBA3744", VA = "0xBA3744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E234", Offset = "0x59E234")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xBA374C", Offset = "0xBA374C", VA = "0xBA374C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E244", Offset = "0x59E244")]
		private set
		{
		}
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xBA1208", Offset = "0xBA1208", VA = "0xBA1208", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xBA1330", Offset = "0xBA1330", VA = "0xBA1330", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xBA3754", Offset = "0xBA3754", VA = "0xBA3754")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x59E254", Offset = "0x59E254")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBA18D0", Offset = "0xBA18D0", VA = "0xBA18D0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xBA193C", Offset = "0xBA193C", VA = "0xBA193C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBA136C", Offset = "0xBA136C", VA = "0xBA136C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000C9")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596254", Offset = "0x596254")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x900888", Offset = "0x900888", VA = "0x900888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000307")]
			[Address(RVA = "0x9008D0", Offset = "0x9008D0", VA = "0x9008D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x9005B8", Offset = "0x9005B8", VA = "0x9005B8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x9005E4", Offset = "0x9005E4", VA = "0x9005E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x9005E8", Offset = "0x9005E8", VA = "0x9005E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x900890", Offset = "0x900890", VA = "0x900890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5990B0", Offset = "0x5990B0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000496")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBA3830", Offset = "0xBA3830", VA = "0xBA3830")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xBA3940", Offset = "0xBA3940", VA = "0xBA3940", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xBA396C", Offset = "0xBA396C", VA = "0xBA396C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xBA3994", Offset = "0xBA3994", VA = "0xBA3994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E28C", Offset = "0x59E28C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xBA3A0C", Offset = "0xBA3A0C", VA = "0xBA3A0C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002FF")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xBA3A28", Offset = "0xBA3A28", VA = "0xBA3A28", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xBA3B48", Offset = "0xBA3B48", VA = "0xBA3B48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E2EC", Offset = "0x59E2EC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xBA3B74", Offset = "0xBA3B74", VA = "0xBA3B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xBA3BD8", Offset = "0xBA3BD8", VA = "0xBA3BD8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xBA3CD0", Offset = "0xBA3CD0", VA = "0xBA3CD0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xBA3DC8", Offset = "0xBA3DC8", VA = "0xBA3DC8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x59E34C", Offset = "0x59E34C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xBA3DCC", Offset = "0xBA3DCC", VA = "0xBA3DCC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5990E8", Offset = "0x5990E8")]
	public float LOSOffset;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599120", Offset = "0x599120")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xBA3DD8", Offset = "0xBA3DD8", VA = "0xBA3DD8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xBA3FE4", Offset = "0xBA3FE4", VA = "0xBA3FE4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBA3FF0", Offset = "0xBA3FF0", VA = "0xBA3FF0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xBA40E8", Offset = "0xBA40E8", VA = "0xBA40E8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000CE")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBA40EC", Offset = "0xBA40EC", VA = "0xBA40EC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xBA4180", Offset = "0xBA4180", VA = "0xBA4180", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000313")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xBA4210", Offset = "0xBA4210", VA = "0xBA4210")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596264", Offset = "0x596264")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x900A10", Offset = "0x900A10", VA = "0x900A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0x900A58", Offset = "0x900A58", VA = "0x900A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x9008D8", Offset = "0x9008D8", VA = "0x9008D8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x900904", Offset = "0x900904", VA = "0x900904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x900908", Offset = "0x900908", VA = "0x900908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x900A18", Offset = "0x900A18", VA = "0x900A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x599158", Offset = "0x599158")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599158", Offset = "0x599158")]
	public float TransitionDuration;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5991B0", Offset = "0x5991B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5991B0", Offset = "0x5991B0")]
	public float TeleportDelay;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599204", Offset = "0x599204")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xBA4218", Offset = "0xBA4218", VA = "0xBA4218", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBA4244", Offset = "0xBA4244", VA = "0xBA4244")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E384", Offset = "0x59E384")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBA42BC", Offset = "0xBA42BC", VA = "0xBA42BC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600031E")]
	[Address(RVA = "0xBA4468", Offset = "0xBA4468", VA = "0xBA4468", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xBA4484", Offset = "0xBA4484", VA = "0xBA4484")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596274", Offset = "0x596274")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0x900BCC", Offset = "0x900BCC", VA = "0x900BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0x900C14", Offset = "0x900C14", VA = "0x900C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x900A60", Offset = "0x900A60", VA = "0x900A60")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x900A8C", Offset = "0x900A8C", VA = "0x900A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x900A90", Offset = "0x900A90", VA = "0x900A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x900BD4", Offset = "0x900BD4", VA = "0x900BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59923C", Offset = "0x59923C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59923C", Offset = "0x59923C")]
	public float TransitionDuration;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xBA448C", Offset = "0xBA448C", VA = "0xBA448C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xBA44B8", Offset = "0xBA44B8", VA = "0xBA44B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E434", Offset = "0x59E434")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xBA4530", Offset = "0xBA4530", VA = "0xBA4530")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D4")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D5")]
	public enum PlabackState
	{
		[Token(Token = "0x40004C6")]
		Idle = 1,
		[Token(Token = "0x40004C7")]
		Preparing,
		[Token(Token = "0x40004C8")]
		Buffering,
		[Token(Token = "0x40004C9")]
		Ready,
		[Token(Token = "0x40004CA")]
		Ended
	}

	[Token(Token = "0x20000D6")]
	public enum StereoMode
	{
		[Token(Token = "0x40004CC")]
		Unknown = -1,
		[Token(Token = "0x40004CD")]
		Mono,
		[Token(Token = "0x40004CE")]
		TopBottom,
		[Token(Token = "0x40004CF")]
		LeftRight,
		[Token(Token = "0x40004D0")]
		Mesh
	}

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000034")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xC641B8", Offset = "0xC641B8", VA = "0xC641B8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xC644E8", Offset = "0xC644E8", VA = "0xC644E8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xC617C0", Offset = "0xC617C0", VA = "0xC617C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xC62FBC", Offset = "0xC62FBC", VA = "0xC62FBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xC647B8", Offset = "0xC647B8", VA = "0xC647B8")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000039")]
	public static long Duration
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xC631E0", Offset = "0xC631E0", VA = "0xC631E0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700003A")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xC61DE8", Offset = "0xC61DE8", VA = "0xC61DE8")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xC61BC0", Offset = "0xC61BC0", VA = "0xC61BC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xC61CD4", Offset = "0xC61CD4", VA = "0xC61CD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xC630CC", Offset = "0xC630CC", VA = "0xC630CC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xC626A0", Offset = "0xC626A0", VA = "0xC626A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC648CC", Offset = "0xC648CC", VA = "0xC648CC")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC635B0", Offset = "0xC635B0", VA = "0xC635B0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC622EC", Offset = "0xC622EC", VA = "0xC622EC")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC6248C", Offset = "0xC6248C", VA = "0xC6248C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC633A8", Offset = "0xC633A8", VA = "0xC633A8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC64AF8", Offset = "0xC64AF8", VA = "0xC64AF8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC62DCC", Offset = "0xC62DCC", VA = "0xC62DCC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D7")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xFC6BA4", Offset = "0xFC6BA4", VA = "0xFC6BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E4E4", Offset = "0x59E4E4")]
		add
		{
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xFC6C44", Offset = "0xFC6C44", VA = "0xFC6C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E4F4", Offset = "0x59E4F4")]
		remove
		{
		}
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xFC6CE4", Offset = "0xFC6CE4", VA = "0xFC6CE4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xFC6CF8", Offset = "0xFC6CF8", VA = "0xFC6CF8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000D8")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000D9")]
	public enum ButtonType
	{
		[Token(Token = "0x40004D4")]
		Play,
		[Token(Token = "0x40004D5")]
		Pause,
		[Token(Token = "0x40004D6")]
		FastForward,
		[Token(Token = "0x40004D7")]
		Rewind,
		[Token(Token = "0x40004D8")]
		SkipForward,
		[Token(Token = "0x40004D9")]
		SkipBack,
		[Token(Token = "0x40004DA")]
		Stop
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x158A51C", Offset = "0x158A51C", VA = "0x158A51C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x158A524", Offset = "0x158A524", VA = "0x158A524")]
		set
		{
		}
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x158A548", Offset = "0x158A548", VA = "0x158A548", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x158B9E0", Offset = "0x158B9E0", VA = "0x158B9E0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	public enum VideoShape
	{
		[Token(Token = "0x40004EF")]
		_360,
		[Token(Token = "0x40004F0")]
		_180,
		[Token(Token = "0x40004F1")]
		Quad
	}

	[Token(Token = "0x20000DC")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004F3")]
		Mono,
		[Token(Token = "0x40004F4")]
		TopBottom,
		[Token(Token = "0x40004F5")]
		LeftRight,
		[Token(Token = "0x40004F6")]
		BottomTop
	}

	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596284", Offset = "0x596284")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0x8F60B8", Offset = "0x8F60B8", VA = "0x8F60B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x8F6100", Offset = "0x8F6100", VA = "0x8F6100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x8F5EC4", Offset = "0x8F5EC4", VA = "0x8F5EC4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x8F5EF0", Offset = "0x8F5EF0", VA = "0x8F5EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x8F5EF4", Offset = "0x8F5EF4", VA = "0x8F5EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x8F60C0", Offset = "0x8F60C0", VA = "0x8F60C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596294", Offset = "0x596294")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x8F5DCC", Offset = "0x8F5DCC", VA = "0x8F5DCC")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x8F5DD4", Offset = "0x8F5DD4", VA = "0x8F5DD4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5992C4", Offset = "0x5992C4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5992D4", Offset = "0x5992D4")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5992E4", Offset = "0x5992E4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003F")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xC614E4", Offset = "0xC614E4", VA = "0xC614E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E504", Offset = "0x59E504")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xC614EC", Offset = "0xC614EC", VA = "0xC614EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E514", Offset = "0x59E514")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long Duration
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xC614F8", Offset = "0xC614F8", VA = "0xC614F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E524", Offset = "0x59E524")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xC61500", Offset = "0xC61500", VA = "0xC61500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E534", Offset = "0x59E534")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xC61508", Offset = "0xC61508", VA = "0xC61508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E544", Offset = "0x59E544")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xC61510", Offset = "0xC61510", VA = "0xC61510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E554", Offset = "0x59E554")]
		private set
		{
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC61518", Offset = "0xC61518", VA = "0xC61518")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC61830", Offset = "0xC61830", VA = "0xC61830")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC61894", Offset = "0xC61894", VA = "0xC61894")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC61EFC", Offset = "0xC61EFC", VA = "0xC61EFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E564", Offset = "0x59E564")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC61F74", Offset = "0xC61F74", VA = "0xC61F74")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC6225C", Offset = "0xC6225C", VA = "0xC6225C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC62400", Offset = "0xC62400", VA = "0xC62400")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC625A0", Offset = "0xC625A0", VA = "0xC625A0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC62814", Offset = "0xC62814", VA = "0xC62814")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC632F4", Offset = "0xC632F4", VA = "0xC632F4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC63524", Offset = "0xC63524", VA = "0xC63524")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC636C4", Offset = "0xC636C4", VA = "0xC636C4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC637B0", Offset = "0xC637B0", VA = "0xC637B0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000E0")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000513")]
		Playing,
		[Token(Token = "0x4000514")]
		Paused,
		[Token(Token = "0x4000515")]
		Rewinding,
		[Token(Token = "0x4000516")]
		FastForwarding
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC637C0", Offset = "0xC637C0", VA = "0xC637C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC63ACC", Offset = "0xC63ACC", VA = "0xC63ACC")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC63BF8", Offset = "0xC63BF8", VA = "0xC63BF8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC63D04", Offset = "0xC63D04", VA = "0xC63D04")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC63DE4", Offset = "0xC63DE4", VA = "0xC63DE4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC63CD8", Offset = "0xC63CD8", VA = "0xC63CD8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC63E44", Offset = "0xC63E44", VA = "0xC63E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC639B8", Offset = "0xC639B8", VA = "0xC639B8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC641A8", Offset = "0xC641A8", VA = "0xC641A8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E1")]
public static class VectorUtil
{
	[Token(Token = "0x6000368")]
	[Address(RVA = "0xF2320C", Offset = "0xF2320C", VA = "0xF2320C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E2")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000518")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x9D48B4", Offset = "0x9D48B4", VA = "0x9D48B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x9D4CC8", Offset = "0x9D4CC8", VA = "0x9D4CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x9D4F54", Offset = "0x9D4F54", VA = "0x9D4F54")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x9D50BC", Offset = "0x9D50BC", VA = "0x9D50BC")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x9D5228", Offset = "0x9D5228", VA = "0x9D5228")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x9D53B8", Offset = "0x9D53B8", VA = "0x9D53B8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000E3")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000521")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB8606C", Offset = "0xB8606C", VA = "0xB8606C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB860C0", Offset = "0xB860C0", VA = "0xB860C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB860C4", Offset = "0xB860C4", VA = "0xB860C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB860C8", Offset = "0xB860C8", VA = "0xB860C8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB8633C", Offset = "0xB8633C", VA = "0xB8633C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB8656C", Offset = "0xB8656C", VA = "0xB8656C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000E4")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB897F8", Offset = "0xB897F8", VA = "0xB897F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB89D14", Offset = "0xB89D14", VA = "0xB89D14")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB89DD4", Offset = "0xB89DD4", VA = "0xB89DD4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB8A054", Offset = "0xB8A054", VA = "0xB8A054")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB8A134", Offset = "0xB8A134", VA = "0xB8A134")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB8A218", Offset = "0xB8A218", VA = "0xB8A218")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB8A28C", Offset = "0xB8A28C", VA = "0xB8A28C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB8A294", Offset = "0xB8A294", VA = "0xB8A294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E624", Offset = "0x59E624")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB8A2F8", Offset = "0xB8A2F8", VA = "0xB8A2F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E634", Offset = "0x59E634")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB8A35C", Offset = "0xB8A35C", VA = "0xB8A35C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E644", Offset = "0x59E644")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB8A3C0", Offset = "0xB8A3C0", VA = "0xB8A3C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59E654", Offset = "0x59E654")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E5")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x9D1DE8", Offset = "0x9D1DE8", VA = "0x9D1DE8")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xAF3C30", Offset = "0xAF3C30", VA = "0xAF3C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xAF3CD4", Offset = "0xAF3CD4", VA = "0xAF3CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xAF3DC0", Offset = "0xAF3DC0", VA = "0xAF3DC0")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xAF3E20", Offset = "0xAF3E20", VA = "0xAF3E20")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000E7")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB92F0C", Offset = "0xB92F0C", VA = "0xB92F0C")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000E8")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5962B4", Offset = "0x5962B4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x8F317C", Offset = "0x8F317C", VA = "0x8F317C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x8F31C4", Offset = "0x8F31C4", VA = "0x8F31C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x8F3000", Offset = "0x8F3000", VA = "0x8F3000")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x8F302C", Offset = "0x8F302C", VA = "0x8F302C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x8F3030", Offset = "0x8F3030", VA = "0x8F3030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x8F3184", Offset = "0x8F3184", VA = "0x8F3184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xACA998", Offset = "0xACA998", VA = "0xACA998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xACAAB4", Offset = "0xACAAB4", VA = "0xACAAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xACAA3C", Offset = "0xACAA3C", VA = "0xACAA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E664", Offset = "0x59E664")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xACAC60", Offset = "0xACAC60", VA = "0xACAC60")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000EA")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x599314", Offset = "0x599314")]
	public int SubdivisionsU;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x599330", Offset = "0x599330")]
	public int SubdivisionsV;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xFD4774", Offset = "0xFD4774", VA = "0xFD4774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xFD51BC", Offset = "0xFD51BC", VA = "0xFD51BC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000EB")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000046")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x157D1D4", Offset = "0x157D1D4", VA = "0x157D1D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x157D228", Offset = "0x157D228", VA = "0x157D228")]
	public void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x157D650", Offset = "0x157D650", VA = "0x157D650")]
	public void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x157D73C", Offset = "0x157D73C", VA = "0x157D73C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x59E714", Offset = "0x59E714")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000396")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000398")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000399")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600039A")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600039B")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600039C")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600039D")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x157D7A0", Offset = "0x157D7A0", VA = "0x157D7A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x157D7DC", Offset = "0x157D7DC", VA = "0x157D7DC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x157D84C", Offset = "0x157D84C", VA = "0x157D84C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x157D9BC", Offset = "0x157D9BC", VA = "0x157D9BC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x157DA98", Offset = "0x157DA98", VA = "0x157DA98")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x157D548", Offset = "0x157D548", VA = "0x157D548")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x157DB60", Offset = "0x157DB60", VA = "0x157DB60")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x157DBC8", Offset = "0x157DBC8", VA = "0x157DBC8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x157DCC0", Offset = "0x157DCC0", VA = "0x157DCC0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5962D4", Offset = "0x5962D4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	public enum DrawMode
	{
		[Token(Token = "0x4000550")]
		Opaque,
		[Token(Token = "0x4000551")]
		OpaqueWithClip,
		[Token(Token = "0x4000552")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000553")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000047")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xC6C0A4", Offset = "0xC6C0A4", VA = "0xC6C0A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xC6C134", Offset = "0xC6C134", VA = "0xC6C134")]
		set
		{
		}
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC6AB20", Offset = "0xC6AB20", VA = "0xC6AB20")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC6B710", Offset = "0xC6B710", VA = "0xC6B710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC6B790", Offset = "0xC6B790", VA = "0xC6B790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC6B880", Offset = "0xC6B880", VA = "0xC6B880")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC6B970", Offset = "0xC6B970", VA = "0xC6B970", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC6BB7C", Offset = "0xC6BB7C", VA = "0xC6BB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC6C200", Offset = "0xC6C200", VA = "0xC6C200")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000EE")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x9D7604", Offset = "0x9D7604", VA = "0x9D7604")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9D77EC", Offset = "0x9D77EC", VA = "0x9D77EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x9D7974", Offset = "0x9D7974", VA = "0x9D7974")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x9D797C", Offset = "0x9D797C", VA = "0x9D797C")]
	public void Release()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x9D7964", Offset = "0x9D7964", VA = "0x9D7964")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x9D7984", Offset = "0x9D7984", VA = "0x9D7984")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596334", Offset = "0x596334")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x9F0724", Offset = "0x9F0724", VA = "0x9F0724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x9F076C", Offset = "0x9F076C", VA = "0x9F076C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x9F05F4", Offset = "0x9F05F4", VA = "0x9F05F4")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x9F0620", Offset = "0x9F0620", VA = "0x9F0620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x9F0624", Offset = "0x9F0624", VA = "0x9F0624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x9F072C", Offset = "0x9F072C", VA = "0x9F072C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596344", Offset = "0x596344")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x9F092C", Offset = "0x9F092C", VA = "0x9F092C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x9F0974", Offset = "0x9F0974", VA = "0x9F0974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x9F0774", Offset = "0x9F0774", VA = "0x9F0774")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x9F07A0", Offset = "0x9F07A0", VA = "0x9F07A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x9F07A4", Offset = "0x9F07A4", VA = "0x9F07A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x9F0934", Offset = "0x9F0934", VA = "0x9F0934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xFC3654", Offset = "0xFC3654", VA = "0xFC3654")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xFC3928", Offset = "0xFC3928", VA = "0xFC3928")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xFC3984", Offset = "0xFC3984", VA = "0xFC3984")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xFC3B04", Offset = "0xFC3B04", VA = "0xFC3B04")]
	public void Release()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xFC3BD8", Offset = "0xFC3BD8", VA = "0xFC3BD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E74C", Offset = "0x59E74C")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xFC3A40", Offset = "0xFC3A40", VA = "0xFC3A40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E7AC", Offset = "0x59E7AC")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xFC3C74", Offset = "0xFC3C74", VA = "0xFC3C74")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000F2")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x9FDF8C", Offset = "0x9FDF8C", VA = "0x9FDF8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x9FDFEC", Offset = "0x9FDFEC", VA = "0x9FDFEC")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xA092A8", Offset = "0xA092A8", VA = "0xA092A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xA093DC", Offset = "0xA093DC", VA = "0xA093DC")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xA09470", Offset = "0xA09470", VA = "0xA09470")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xA094D8", Offset = "0xA094D8", VA = "0xA094D8")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000F4")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596354", Offset = "0x596354")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x9F6BC4", Offset = "0x9F6BC4", VA = "0x9F6BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x9F6C0C", Offset = "0x9F6C0C", VA = "0x9F6C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x9F69B8", Offset = "0x9F69B8", VA = "0x9F69B8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x9F69E4", Offset = "0x9F69E4", VA = "0x9F69E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x9F69E8", Offset = "0x9F69E8", VA = "0x9F69E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x9F6BCC", Offset = "0x9F6BCC", VA = "0x9F6BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xA094E0", Offset = "0xA094E0", VA = "0xA094E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xA097C4", Offset = "0xA097C4", VA = "0xA097C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xA09B14", Offset = "0xA09B14", VA = "0xA09B14")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xA09E70", Offset = "0xA09E70", VA = "0xA09E70")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xA0A174", Offset = "0xA0A174", VA = "0xA0A174")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xA0A268", Offset = "0xA0A268", VA = "0xA0A268")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xA0A434", Offset = "0xA0A434", VA = "0xA0A434")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xA0A380", Offset = "0xA0A380", VA = "0xA0A380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E8AC", Offset = "0x59E8AC")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xA0A51C", Offset = "0xA0A51C", VA = "0xA0A51C")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000F6")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000F7")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000588")]
		Default,
		[Token(Token = "0x4000589")]
		ForcedHand,
		[Token(Token = "0x400058A")]
		DollyHand,
		[Token(Token = "0x400058B")]
		DollyAttached,
		[Token(Token = "0x400058C")]
		HorizontalScaled,
		[Token(Token = "0x400058D")]
		VerticalScaled,
		[Token(Token = "0x400058E")]
		Menu
	}

	[Token(Token = "0x20000F8")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000F9")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000FA")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x5993BC", Offset = "0x5993BC")]
	public string ObjectName;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x5993CC", Offset = "0x5993CC")]
	public string ObjectInstructions;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xAC4F50", Offset = "0xAC4F50", VA = "0xAC4F50")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xAC4FAC", Offset = "0xAC4FAC", VA = "0xAC4FAC")]
	public void Release()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xAC4FC0", Offset = "0xAC4FC0", VA = "0xAC4FC0")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xAC4FD4", Offset = "0xAC4FD4", VA = "0xAC4FD4")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000FB")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5993EC", Offset = "0x5993EC")]
	public int radialDivisions;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599424", Offset = "0x599424")]
	public float borderSize;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59945C", Offset = "0x59945C")]
	public float fingerTaper;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599494", Offset = "0x599494")]
	public float fingerTipLength;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5994CC", Offset = "0x5994CC")]
	public float webOffset;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xAC6130", Offset = "0xAC6130", VA = "0xAC6130")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xAC6330", Offset = "0xAC6330", VA = "0xAC6330")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xAC653C", Offset = "0xAC653C", VA = "0xAC653C")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xAC6BC0", Offset = "0xAC6BC0", VA = "0xAC6BC0")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAC71F0", Offset = "0xAC71F0", VA = "0xAC71F0")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAC986C", Offset = "0xAC986C", VA = "0xAC986C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAC9928", Offset = "0xAC9928", VA = "0xAC9928")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000FC")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAC994C", Offset = "0xAC994C", VA = "0xAC994C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAC9C84", Offset = "0xAC9C84", VA = "0xAC9C84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAC99F4", Offset = "0xAC99F4", VA = "0xAC99F4")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xACA074", Offset = "0xACA074", VA = "0xACA074")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xACA564", Offset = "0xACA564", VA = "0xACA564")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000FD")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596364", Offset = "0x596364")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x8F668C", Offset = "0x8F668C", VA = "0x8F668C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x8F66D4", Offset = "0x8F66D4", VA = "0x8F66D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x8F63BC", Offset = "0x8F63BC", VA = "0x8F63BC")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x8F63E8", Offset = "0x8F63E8", VA = "0x8F63E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x8F63EC", Offset = "0x8F63EC", VA = "0x8F63EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x8F6694", Offset = "0x8F6694", VA = "0x8F6694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC6EAA8", Offset = "0xC6EAA8", VA = "0xC6EAA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC6ECE0", Offset = "0xC6ECE0", VA = "0xC6ECE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC6F930", Offset = "0xC6F930", VA = "0xC6F930")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC70538", Offset = "0xC70538", VA = "0xC70538")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC6EC68", Offset = "0xC6EC68", VA = "0xC6EC68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59E95C", Offset = "0x59E95C")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC6EF4C", Offset = "0xC6EF4C", VA = "0xC6EF4C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC6FBF4", Offset = "0xC6FBF4", VA = "0xC6FBF4")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC707FC", Offset = "0xC707FC", VA = "0xC707FC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC70888", Offset = "0xC70888", VA = "0xC70888")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC708B8", Offset = "0xC708B8", VA = "0xC708B8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC706C4", Offset = "0xC706C4", VA = "0xC706C4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC709DC", Offset = "0xC709DC", VA = "0xC709DC")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000FF")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB0888C", Offset = "0xB0888C", VA = "0xB0888C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB08A24", Offset = "0xB08A24", VA = "0xB08A24")]
	private void Update()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB08AEC", Offset = "0xB08AEC", VA = "0xB08AEC")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000100")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	public enum BrushState
	{
		[Token(Token = "0x40005CB")]
		Idle,
		[Token(Token = "0x40005CC")]
		Inking
	}

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xADF164", Offset = "0xADF164", VA = "0xADF164")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xADF16C", Offset = "0xADF16C", VA = "0xADF16C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xADF454", Offset = "0xADF454", VA = "0xADF454")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xADF64C", Offset = "0xADF64C", VA = "0xADF64C")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xADF7F4", Offset = "0xADF7F4", VA = "0xADF7F4")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xADF360", Offset = "0xADF360", VA = "0xADF360")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xADF8D0", Offset = "0xADF8D0", VA = "0xADF8D0")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000102")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xADF968", Offset = "0xADF968", VA = "0xADF968")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xADFB00", Offset = "0xADFB00", VA = "0xADFB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xADFC64", Offset = "0xADFC64", VA = "0xADFC64")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000103")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xADFC6C", Offset = "0xADFC6C", VA = "0xADFC6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xADFE80", Offset = "0xADFE80", VA = "0xADFE80")]
	private void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xAE0050", Offset = "0xAE0050", VA = "0xAE0050")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000104")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596374", Offset = "0x596374")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x8FA248", Offset = "0x8FA248", VA = "0x8FA248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x8FA290", Offset = "0x8FA290", VA = "0x8FA290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x8FA064", Offset = "0x8FA064", VA = "0x8FA064")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x8FA090", Offset = "0x8FA090", VA = "0x8FA090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x8FA094", Offset = "0x8FA094", VA = "0x8FA094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x8FA250", Offset = "0x8FA250", VA = "0x8FA250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596384", Offset = "0x596384")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x8FA4BC", Offset = "0x8FA4BC", VA = "0x8FA4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x8FA504", Offset = "0x8FA504", VA = "0x8FA504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x8FA298", Offset = "0x8FA298", VA = "0x8FA298")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x8FA2C4", Offset = "0x8FA2C4", VA = "0x8FA2C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x8FA2C8", Offset = "0x8FA2C8", VA = "0x8FA2C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x8FA4C4", Offset = "0x8FA4C4", VA = "0x8FA4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xAE0058", Offset = "0xAE0058", VA = "0xAE0058")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xAE0390", Offset = "0xAE0390", VA = "0xAE0390")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xAE05E8", Offset = "0xAE05E8", VA = "0xAE05E8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xAE076C", Offset = "0xAE076C", VA = "0xAE076C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xAE06E4", Offset = "0xAE06E4", VA = "0xAE06E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EA0C", Offset = "0x59EA0C")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xAE085C", Offset = "0xAE085C", VA = "0xAE085C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EA6C", Offset = "0x59EA6C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xAE08E4", Offset = "0xAE08E4", VA = "0xAE08E4")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xAE0904", Offset = "0xAE0904", VA = "0xAE0904")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xAE0924", Offset = "0xAE0924", VA = "0xAE0924")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xAE0944", Offset = "0xAE0944", VA = "0xAE0944")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xAE0314", Offset = "0xAE0314", VA = "0xAE0314")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xAE09A8", Offset = "0xAE09A8", VA = "0xAE09A8")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xAE09B4", Offset = "0xAE09B4", VA = "0xAE09B4")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xAE03A8", Offset = "0xAE03A8", VA = "0xAE03A8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xAE09C0", Offset = "0xAE09C0", VA = "0xAE09C0")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000107")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xAE0A04", Offset = "0xAE0A04", VA = "0xAE0A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xAE0AC4", Offset = "0xAE0AC4", VA = "0xAE0AC4")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000108")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xAF3940", Offset = "0xAF3940", VA = "0xAF3940")]
	private void Start()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xAF3B84", Offset = "0xAF3B84", VA = "0xAF3B84")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xAF3BDC", Offset = "0xAF3BDC", VA = "0xAF3BDC")]
	public void Release()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xAF3C28", Offset = "0xAF3C28", VA = "0xAF3C28")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000109")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xAF3E28", Offset = "0xAF3E28", VA = "0xAF3E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xAF3EA0", Offset = "0xAF3EA0", VA = "0xAF3EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xAF41C4", Offset = "0xAF41C4", VA = "0xAF41C4")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200010A")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xAF6130", Offset = "0xAF6130", VA = "0xAF6130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xAF65B8", Offset = "0xAF65B8", VA = "0xAF65B8")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200010B")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000054")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x9D1DF0", Offset = "0x9D1DF0", VA = "0x9D1DF0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x9D1DF8", Offset = "0x9D1DF8", VA = "0x9D1DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x9D1EE0", Offset = "0x9D1EE0", VA = "0x9D1EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x9D2148", Offset = "0x9D2148", VA = "0x9D2148")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x9D21B0", Offset = "0x9D21B0", VA = "0x9D21B0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x9D2214", Offset = "0x9D2214", VA = "0x9D2214")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x9D2278", Offset = "0x9D2278", VA = "0x9D2278")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x9D2380", Offset = "0x9D2380", VA = "0x9D2380")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x9D24A0", Offset = "0x9D24A0", VA = "0x9D24A0")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x9D25D4", Offset = "0x9D25D4", VA = "0x9D25D4")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x9D2668", Offset = "0x9D2668", VA = "0x9D2668")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x9D1F24", Offset = "0x9D1F24", VA = "0x9D1F24")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x9D2038", Offset = "0x9D2038", VA = "0x9D2038")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x9D2688", Offset = "0x9D2688", VA = "0x9D2688")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x9D27A0", Offset = "0x9D27A0", VA = "0x9D27A0")]
	public Anchor()
	{
	}
}
[Token(Token = "0x200010C")]
public class AnchorHelpers
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000055")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x9D27A8", Offset = "0x9D27A8", VA = "0x9D27A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x9D2860", Offset = "0x9D2860", VA = "0x9D2860")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x9D28DC", Offset = "0x9D28DC", VA = "0x9D28DC")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x9D2950", Offset = "0x9D2950", VA = "0x9D2950")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000456")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x9D29A8", Offset = "0x9D29A8", VA = "0x9D29A8")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x9D2C4C", Offset = "0x9D2C4C", VA = "0x9D2C4C")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x9D2DC4", Offset = "0x9D2DC4", VA = "0x9D2DC4")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x9D2E88", Offset = "0x9D2E88", VA = "0x9D2E88")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x200010D")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000614")]
		LOCAL
	}

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400060E")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000610")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000611")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x9D2E90", Offset = "0x9D2E90", VA = "0x9D2E90", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x9D2BBC", Offset = "0x9D2BBC", VA = "0x9D2BBC")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x9D2F98", Offset = "0x9D2F98", VA = "0x9D2F98")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x600045F")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000460")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000461")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000462")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x9D2FA4", Offset = "0x9D2FA4", VA = "0x9D2FA4")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x200010F")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000056")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x9D3028", Offset = "0x9D3028", VA = "0x9D3028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x9D3030", Offset = "0x9D3030", VA = "0x9D3030")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x9D3130", Offset = "0x9D3130", VA = "0x9D3130")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x9D3364", Offset = "0x9D3364", VA = "0x9D3364")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x2000110")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000111")]
	public enum AnchorMode
	{
		[Token(Token = "0x400062A")]
		Create,
		[Token(Token = "0x400062B")]
		Select
	}

	[Token(Token = "0x2000112")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x9D336C", Offset = "0x9D336C", VA = "0x9D336C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x9D3444", Offset = "0x9D3444", VA = "0x9D3444")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x9D35B0", Offset = "0x9D35B0", VA = "0x9D35B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x9D3A04", Offset = "0x9D3A04", VA = "0x9D3A04")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x9D3A74", Offset = "0x9D3A74", VA = "0x9D3A74")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x9D3538", Offset = "0x9D3538", VA = "0x9D3538")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x9D3AFC", Offset = "0x9D3AFC", VA = "0x9D3AFC")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x9D3B84", Offset = "0x9D3B84", VA = "0x9D3B84")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x9D3BB0", Offset = "0x9D3BB0", VA = "0x9D3BB0")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x9D3AD0", Offset = "0x9D3AD0", VA = "0x9D3AD0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x9D38F4", Offset = "0x9D38F4", VA = "0x9D38F4")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9D3CEC", Offset = "0x9D3CEC", VA = "0x9D3CEC")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9D3C38", Offset = "0x9D3C38", VA = "0x9D3C38")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9D3C58", Offset = "0x9D3C58", VA = "0x9D3C58")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x9D3E04", Offset = "0x9D3E04", VA = "0x9D3E04")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x9D3C78", Offset = "0x9D3C78", VA = "0x9D3C78")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x9D3CB4", Offset = "0x9D3CB4", VA = "0x9D3CB4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x9D36BC", Offset = "0x9D36BC", VA = "0x9D36BC")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x9D3E60", Offset = "0x9D3E60", VA = "0x9D3E60")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x9D3E94", Offset = "0x9D3E94", VA = "0x9D3E94")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x9D3F30", Offset = "0x9D3F30", VA = "0x9D3F30")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x9D40AC", Offset = "0x9D40AC", VA = "0x9D40AC")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000113")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x400062D")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB8FD7C", Offset = "0xB8FD7C", VA = "0xB8FD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB8FFC8", Offset = "0xB8FFC8", VA = "0xB8FFC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB90214", Offset = "0xB90214", VA = "0xB90214")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xB90424", Offset = "0xB90424", VA = "0xB90424")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xB90914", Offset = "0xB90914", VA = "0xB90914")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xB90C44", Offset = "0xB90C44", VA = "0xB90C44")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xB91368", Offset = "0xB91368", VA = "0xB91368")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xB90838", Offset = "0xB90838", VA = "0xB90838")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xB90F2C", Offset = "0xB90F2C", VA = "0xB90F2C")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xB90304", Offset = "0xB90304", VA = "0xB90304")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xB915BC", Offset = "0xB915BC", VA = "0xB915BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xB9186C", Offset = "0xB9186C", VA = "0xB9186C", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xB91A0C", Offset = "0xB91A0C", VA = "0xB91A0C", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xB91BC8", Offset = "0xB91BC8", VA = "0xB91BC8", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xB91D94", Offset = "0xB91D94", VA = "0xB91D94")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB9208C", Offset = "0xB9208C", VA = "0xB9208C", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB9217C", Offset = "0xB9217C", VA = "0xB9217C", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xB922EC", Offset = "0xB922EC", VA = "0xB922EC")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000114")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596394", Offset = "0x596394")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x8FCC30", Offset = "0x8FCC30", VA = "0x8FCC30")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x8FCC38", Offset = "0x8FCC38", VA = "0x8FCC38")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xB92F60", Offset = "0xB92F60", VA = "0xB92F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xB9317C", Offset = "0xB9317C", VA = "0xB9317C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xB9328C", Offset = "0xB9328C", VA = "0xB9328C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000116")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA076AC", Offset = "0xA076AC", VA = "0xA076AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA07D1C", Offset = "0xA07D1C", VA = "0xA07D1C")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000117")]
internal class ArrowObjectPool : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArrowObjectPool current;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599654", Offset = "0x599654")]
	public Indicator pooledObject;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59968C", Offset = "0x59968C")]
	public int pooledAmount;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5996C4", Offset = "0x5996C4")]
	public bool willGrow;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Indicator> pooledObjects;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x9D68E0", Offset = "0x9D68E0", VA = "0x9D68E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x9D6934", Offset = "0x9D6934", VA = "0x9D6934")]
	private void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9D6AB0", Offset = "0x9D6AB0", VA = "0x9D6AB0")]
	public Indicator GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x9D6C54", Offset = "0x9D6C54", VA = "0x9D6C54")]
	public void DeactivateAllPooledObjects()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x9D6D70", Offset = "0x9D6D70", VA = "0x9D6D70")]
	public ArrowObjectPool()
	{
	}
}
[Token(Token = "0x2000118")]
public class BoxObjectPool : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BoxObjectPool current;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5996FC", Offset = "0x5996FC")]
	public Indicator pooledObject;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599734", Offset = "0x599734")]
	public int pooledAmount;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59976C", Offset = "0x59976C")]
	public bool willGrow;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Indicator> pooledObjects;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xFC31B0", Offset = "0xFC31B0", VA = "0xFC31B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xFC3204", Offset = "0xFC3204", VA = "0xFC3204")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xFC3380", Offset = "0xFC3380", VA = "0xFC3380")]
	public Indicator GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xFC3524", Offset = "0xFC3524", VA = "0xFC3524")]
	public void DeactivateAllPooledObjects()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xFC3640", Offset = "0xFC3640", VA = "0xFC3640")]
	public BoxObjectPool()
	{
	}
}
[Token(Token = "0x2000119")]
public class Indicator : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IndicatorType indicatorType;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image indicatorImage;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text distanceText;

	[Token(Token = "0x17000057")]
	public bool Active
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xACD344", Offset = "0xACD344", VA = "0xACD344")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public IndicatorType Type
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xACD374", Offset = "0xACD374", VA = "0xACD374")]
		get
		{
			return default(IndicatorType);
		}
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xACD37C", Offset = "0xACD37C", VA = "0xACD37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xACD424", Offset = "0xACD424", VA = "0xACD424")]
	public void SetImageColor(Color color)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xACD448", Offset = "0xACD448", VA = "0xACD448")]
	public void SetDistanceText(float value)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xACD508", Offset = "0xACD508", VA = "0xACD508")]
	public void SetTextRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xACD564", Offset = "0xACD564", VA = "0xACD564")]
	public void Activate(bool value)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xACD5A4", Offset = "0xACD5A4", VA = "0xACD5A4")]
	public Indicator()
	{
	}
}
[Token(Token = "0x200011A")]
public enum IndicatorType
{
	[Token(Token = "0x4000648")]
	BOX,
	[Token(Token = "0x4000649")]
	ARROW
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x5963A4", Offset = "0x5963A4")]
public class OffScreenIndicator : MonoBehaviour
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5997B4", Offset = "0x5997B4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5997B4", Offset = "0x5997B4")]
	private float screenBoundOffset;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera mainCamera;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 screenCentre;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 screenBounds;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Target> targets;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Target, bool> TargetStateChanged;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xB07C14", Offset = "0xB07C14", VA = "0xB07C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB07D74", Offset = "0xB07D74", VA = "0xB07D74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB07D78", Offset = "0xB07D78", VA = "0xB07D78")]
	private void DrawIndicators()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB083C0", Offset = "0xB083C0", VA = "0xB083C0")]
	private void HandleTargetStateChanged(Target target, bool active)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB081AC", Offset = "0xB081AC", VA = "0xB081AC")]
	private Indicator GetIndicator(ref Indicator indicator, IndicatorType type)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB0848C", Offset = "0xB0848C", VA = "0xB0848C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB08588", Offset = "0xB08588", VA = "0xB08588")]
	public OffScreenIndicator()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x5963B8", Offset = "0x5963B8")]
public class Target : MonoBehaviour
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59981C", Offset = "0x59981C")]
	private Color targetColor;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599868", Offset = "0x599868")]
	private bool needBoxIndicator;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5998B4", Offset = "0x5998B4")]
	[SerializeField]
	private bool needArrowIndicator;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599900", Offset = "0x599900")]
	[SerializeField]
	private bool needDistanceText;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Indicator indicator;

	[Token(Token = "0x17000059")]
	public Color TargetColor
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB950AC", Offset = "0xB950AC", VA = "0xB950AC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool NeedBoxIndicator
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB950B8", Offset = "0xB950B8", VA = "0xB950B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public bool NeedArrowIndicator
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB950C0", Offset = "0xB950C0", VA = "0xB950C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public bool NeedDistanceText
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xB950C8", Offset = "0xB950C8", VA = "0xB950C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB950D0", Offset = "0xB950D0", VA = "0xB950D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xB95150", Offset = "0xB95150", VA = "0xB95150")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB951D0", Offset = "0xB951D0", VA = "0xB951D0")]
	public float GetDistanceFromCamera(Vector3 cameraPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xB95230", Offset = "0xB95230", VA = "0xB95230")]
	public Target()
	{
	}
}
[Token(Token = "0x200011D")]
public class CircleSlider : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool b;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text progress;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xFD5BD0", Offset = "0xFD5BD0", VA = "0xFD5BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xFD5C2C", Offset = "0xFD5C2C", VA = "0xFD5C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xFD5D78", Offset = "0xFD5D78", VA = "0xFD5D78")]
	public CircleSlider()
	{
	}
}
[Token(Token = "0x200011E")]
public class JustRotate : MonoBehaviour
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canRotate;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1579C24", Offset = "0x1579C24", VA = "0x1579C24")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1579CC4", Offset = "0x1579CC4", VA = "0x1579CC4")]
	public JustRotate()
	{
	}
}
[Token(Token = "0x200011F")]
public class PressedBtn : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerClickHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myIcon;

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xAEAFC4", Offset = "0xAEAFC4", VA = "0xAEAFC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xAEB07C", Offset = "0xAEB07C", VA = "0xAEB07C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xAEB118", Offset = "0xAEB118", VA = "0xAEB118")]
	public void OnPressed()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xAEB1C8", Offset = "0xAEB1C8", VA = "0xAEB1C8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xAEB1CC", Offset = "0xAEB1CC", VA = "0xAEB1CC", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xAEB1D0", Offset = "0xAEB1D0", VA = "0xAEB1D0", Slot = "6")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xAEB1D4", Offset = "0xAEB1D4", VA = "0xAEB1D4", Slot = "7")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xAEB1D8", Offset = "0xAEB1D8", VA = "0xAEB1D8")]
	public PressedBtn()
	{
	}
}
[Token(Token = "0x2000120")]
public class SliderRunTo1 : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool b;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xAF8F78", Offset = "0xAF8F78", VA = "0xAF8F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xAF8FD4", Offset = "0xAF8FD4", VA = "0xAF8FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xAF9050", Offset = "0xAF9050", VA = "0xAF9050")]
	public SliderRunTo1()
	{
	}
}
[Token(Token = "0x2000121")]
public class SliderValuePass : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text progress;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xAF9068", Offset = "0xAF9068", VA = "0xAF9068")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xAF90C4", Offset = "0xAF90C4", VA = "0xAF90C4")]
	public void UpdateProgress(float content)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xAF91E0", Offset = "0xAF91E0", VA = "0xAF91E0")]
	public SliderValuePass()
	{
	}
}
[Token(Token = "0x2000122")]
public class CamControl2 : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceMin;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceMax;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float xSpeed;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ySpeed;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distance;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float xAngle;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float yAngle;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xFD0700", Offset = "0xFD0700", VA = "0xFD0700")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xFD0934", Offset = "0xFD0934", VA = "0xFD0934")]
	public CamControl2()
	{
	}
}
[Token(Token = "0x2000123")]
public class DetectHit : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ForceField forceField;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x9F8E24", Offset = "0x9F8E24", VA = "0x9F8E24")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x9F8E48", Offset = "0x9F8E48", VA = "0x9F8E48")]
	public void PointHit(Vector3 point)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x9F906C", Offset = "0x9F906C", VA = "0x9F906C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x9F9330", Offset = "0x9F9330", VA = "0x9F9330")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x9F910C", Offset = "0x9F910C", VA = "0x9F910C")]
	private void addCollisionDetailToForceField(Vector3 pos)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x9F95BC", Offset = "0x9F95BC", VA = "0x9F95BC")]
	public DetectHit()
	{
	}
}
[Token(Token = "0x2000124")]
public class ForceField : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] underShield;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material materialShield;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float brightnessCollision;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadingGlow;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float armor;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedOnOff;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 speedOffset;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool sphere;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sphereScale;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 spherePosition;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float mTime;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Color shieldColor;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool hit;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[HideInInspector]
	public bool hit2;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public MeshRenderer[] mesh;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public int i;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float shieldA;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject sp;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool activ;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector4 offset;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA0A878", Offset = "0xA0A878", VA = "0xA0A878")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA0AE74", Offset = "0xA0AE74", VA = "0xA0AE74")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA0A87C", Offset = "0xA0A87C", VA = "0xA0A87C")]
	public void CreateForceField()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA0B4DC", Offset = "0xA0B4DC", VA = "0xA0B4DC")]
	public void DestroyForceField()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA0B79C", Offset = "0xA0B79C", VA = "0xA0B79C")]
	public ForceField()
	{
	}
}
[Token(Token = "0x2000125")]
public class Hologram : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new MeshRenderer[] gameObject;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 speedOffset;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 offset;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material[] material;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float camDistance;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xACC69C", Offset = "0xACC69C", VA = "0xACC69C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xACC7B8", Offset = "0xACC7B8", VA = "0xACC7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xACC9AC", Offset = "0xACC9AC", VA = "0xACC9AC")]
	public Hologram()
	{
	}
}
[Token(Token = "0x2000126")]
public class Pointer2 : MonoBehaviour
{
	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xAE8948", Offset = "0xAE8948", VA = "0xAE8948")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xAE8954", Offset = "0xAE8954", VA = "0xAE8954")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xAE89B8", Offset = "0xAE89B8", VA = "0xAE89B8")]
	public Pointer2()
	{
	}
}
[Token(Token = "0x2000127")]
public class TestBox2 : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xBA4604", Offset = "0xBA4604", VA = "0xBA4604")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xBA4818", Offset = "0xBA4818", VA = "0xBA4818")]
	public TestBox2()
	{
	}
}
[Token(Token = "0x2000128")]
public class TestScene2 : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam1;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cam2;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ForceField forceField;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> obj;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool createBox2;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool createBox;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeBox;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xF10DB8", Offset = "0xF10DB8", VA = "0xF10DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xF10DFC", Offset = "0xF10DFC", VA = "0xF10DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xF11090", Offset = "0xF11090", VA = "0xF11090")]
	private void CreateObjectA()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xF11210", Offset = "0xF11210", VA = "0xF11210")]
	private void CreateObjectB()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xF11F84", Offset = "0xF11F84", VA = "0xF11F84")]
	private void CreateLineY(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xF11E38", Offset = "0xF11E38", VA = "0xF11E38")]
	private void CreateLineX(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xF11AC4", Offset = "0xF11AC4", VA = "0xF11AC4")]
	private void CreateSquare(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xF120D0", Offset = "0xF120D0", VA = "0xF120D0")]
	public TestScene2()
	{
	}
}
[Token(Token = "0x2000129")]
public class ActiveStateToggler : MonoBehaviour
{
	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x9CED5C", Offset = "0x9CED5C", VA = "0x9CED5C")]
	public void ToggleActive()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9CEDB4", Offset = "0x9CEDB4", VA = "0x9CEDB4")]
	public ActiveStateToggler()
	{
	}
}
[Token(Token = "0x200012A")]
public class ApplicationManager : MonoBehaviour
{
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x9D5808", Offset = "0x9D5808", VA = "0x9D5808")]
	public void Quit()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x9D5810", Offset = "0x9D5810", VA = "0x9D5810")]
	public ApplicationManager()
	{
	}
}
[Token(Token = "0x200012B")]
public class ChangeColor : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xFD361C", Offset = "0xFD361C", VA = "0xFD361C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xFD3620", Offset = "0xFD3620", VA = "0xFD3620")]
	public void SetRed(float value)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xFD3888", Offset = "0xFD3888", VA = "0xFD3888")]
	public void SetGreen(float value)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xFD3890", Offset = "0xFD3890", VA = "0xFD3890")]
	public void SetBlue(float value)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xFD3628", Offset = "0xFD3628", VA = "0xFD3628")]
	public void OnValueChanged(float value, int channel)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xFD3898", Offset = "0xFD3898", VA = "0xFD3898", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xFD3A80", Offset = "0xFD3A80", VA = "0xFD3A80")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5963CC", Offset = "0x5963CC")]
public class DragMe : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dragOnSurfaces;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, GameObject> m_DraggingIcons;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, RectTransform> m_DraggingPlanes;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9FC9DC", Offset = "0x9FC9DC", VA = "0x9FC9DC", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9FCFBC", Offset = "0x9FCFBC", VA = "0x9FCFBC", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9FCD08", Offset = "0x9FCD08", VA = "0x9FCD08")]
	private void SetDraggedPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9FD088", Offset = "0x9FD088", VA = "0x9FD088", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004FB")]
	public static T FindInParents<T>(GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9FD1AC", Offset = "0x9FD1AC", VA = "0x9FD1AC")]
	public DragMe()
	{
	}
}
[Token(Token = "0x200012D")]
public class DragPanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 originalPanelLocalPosition;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform parentRectTransform;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9FD284", Offset = "0x9FD284", VA = "0x9FD284")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9FD34C", Offset = "0x9FD34C", VA = "0x9FD34C", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9FD410", Offset = "0x9FD410", VA = "0x9FD410", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9FD57C", Offset = "0x9FD57C", VA = "0x9FD57C")]
	private void ClampToWindow()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x9FD6FC", Offset = "0x9FD6FC", VA = "0x9FD6FC")]
	public DragPanel()
	{
	}
}
[Token(Token = "0x200012E")]
public class DropMe : MonoBehaviour, IDropHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image containerImage;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image receivingImage;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color normalColor;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color highlightColor;

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9FD704", Offset = "0x9FD704", VA = "0x9FD704")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9FD79C", Offset = "0x9FD79C", VA = "0x9FD79C", Slot = "4")]
	public void OnDrop(PointerEventData data)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9FD9EC", Offset = "0x9FD9EC", VA = "0x9FD9EC", Slot = "5")]
	public void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9FDAD8", Offset = "0x9FDAD8", VA = "0x9FDAD8", Slot = "6")]
	public void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9FD89C", Offset = "0x9FD89C", VA = "0x9FD89C")]
	private Sprite GetDropSprite(PointerEventData data)
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9FDB78", Offset = "0x9FDB78", VA = "0x9FDB78")]
	public DropMe()
	{
	}
}
[Token(Token = "0x200012F")]
public class PanelManager : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59642C", Offset = "0x59642C")]
	private sealed class <DisablePanelDeleyed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator anim;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PanelManager <>4__this;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <closedStateReached>5__2;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <wantToClose>5__3;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x8F8E74", Offset = "0x8F8E74", VA = "0x8F8E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x8F8EBC", Offset = "0x8F8EBC", VA = "0x8F8EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x8F8C90", Offset = "0x8F8C90", VA = "0x8F8C90")]
		[DebuggerHidden]
		public <DisablePanelDeleyed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x8F8CBC", Offset = "0x8F8CBC", VA = "0x8F8CBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x8F8CC0", Offset = "0x8F8CC0", VA = "0x8F8CC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x8F8E7C", Offset = "0x8F8E7C", VA = "0x8F8E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator initiallyOpen;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_OpenParameterId;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator m_Open;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_PreviouslySelected;

	[Token(Token = "0x400069F")]
	private const string k_OpenTransitionName = "Open";

	[Token(Token = "0x40006A0")]
	private const string k_ClosedStateName = "Closed";

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xADDA60", Offset = "0xADDA60", VA = "0xADDA60")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xADDB0C", Offset = "0xADDB0C", VA = "0xADDB0C")]
	public void OpenPanel(Animator anim)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xADDD58", Offset = "0xADDD58", VA = "0xADDD58")]
	private static GameObject FindFirstEnabledSelectable(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xADDC7C", Offset = "0xADDC7C", VA = "0xADDC7C")]
	public void CloseCurrent()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xADDEC0", Offset = "0xADDEC0", VA = "0xADDEC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EB6C", Offset = "0x59EB6C")]
	private IEnumerator DisablePanelDeleyed(Animator anim)
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xADDE4C", Offset = "0xADDE4C", VA = "0xADDE4C")]
	private void SetSelected(GameObject go)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xADDF54", Offset = "0xADDF54", VA = "0xADDF54")]
	public PanelManager()
	{
	}
}
[Token(Token = "0x2000131")]
public class ResizePanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 minSize;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 maxSize;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 originalSizeDelta;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xAEFF18", Offset = "0xAEFF18", VA = "0xAEFF18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xAEFF90", Offset = "0xAEFF90", VA = "0xAEFF90", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xAF0050", Offset = "0xAF0050", VA = "0xAF0050", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xAF01A4", Offset = "0xAF01A4", VA = "0xAF01A4")]
	public ResizePanel()
	{
	}
}
[Token(Token = "0x2000132")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x59643C", Offset = "0x59643C")]
public class ScrollDetailTexture : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool uniqueMaterial;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 scrollPerSecond;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Matrix4x4 m_Matrix;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material mCopy;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material mOriginal;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Image mSprite;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_Mat;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xAF55A0", Offset = "0xAF55A0", VA = "0xAF55A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xAF5774", Offset = "0xAF5774", VA = "0xAF5774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xAF5894", Offset = "0xAF5894", VA = "0xAF5894")]
	private void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xAF59EC", Offset = "0xAF59EC", VA = "0xAF59EC")]
	public ScrollDetailTexture()
	{
	}
}
[Token(Token = "0x2000133")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x59649C", Offset = "0x59649C")]
public class ShowSliderValue : MonoBehaviour
{
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xAF6FBC", Offset = "0xAF6FBC", VA = "0xAF6FBC")]
	public void UpdateLabel(float value)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xAF70C8", Offset = "0xAF70C8", VA = "0xAF70C8")]
	public ShowSliderValue()
	{
	}
}
[Token(Token = "0x2000134")]
public class TiltWindow : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 range;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion mStart;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mRot;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xF12A64", Offset = "0xF12A64", VA = "0xF12A64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xF12AB4", Offset = "0xF12AB4", VA = "0xF12AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xF12BF8", Offset = "0xF12BF8", VA = "0xF12BF8")]
	public TiltWindow()
	{
	}
}
[Token(Token = "0x2000135")]
public class Interactable : MonoBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PerformOnInteraction> performOnInteractionComponents;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xACDD0C", Offset = "0xACDD0C", VA = "0xACDD0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xACDD88", Offset = "0xACDD88", VA = "0xACDD88")]
	public void onRayOver()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xACDF10", Offset = "0xACDF10", VA = "0xACDF10")]
	public void onRayLeave()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xACE098", Offset = "0xACE098", VA = "0xACE098")]
	public void pressed()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xACE220", Offset = "0xACE220", VA = "0xACE220")]
	public Interactable()
	{
	}
}
[Token(Token = "0x2000136")]
public class Reticule : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite openSprite;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite closedSprite;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera my_Camera;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xAF060C", Offset = "0xAF060C", VA = "0xAF060C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xAF0668", Offset = "0xAF0668", VA = "0xAF0668")]
	public void updateSprite(Vector3 point, GameObject hitObject)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xAF0744", Offset = "0xAF0744", VA = "0xAF0744")]
	public Reticule()
	{
	}
}
[Token(Token = "0x2000137")]
public class ControlParticlesSpawner : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem cps;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string bulletTag;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xB7C46C", Offset = "0xB7C46C", VA = "0xB7C46C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xB7C578", Offset = "0xB7C578", VA = "0xB7C578")]
	public ControlParticlesSpawner()
	{
	}
}
[Token(Token = "0x2000138")]
public class ForceFieldController : MonoBehaviour
{
	[Token(Token = "0x2000139")]
	public enum FFstate
	{
		[Token(Token = "0x40006DA")]
		SingleSpheres,
		[Token(Token = "0x40006DB")]
		MultipleSpheres
	}

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FFstate forceFieldMode;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int affectorCount;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5999DC", Offset = "0x5999DC")]
	public float openCloseProgress;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAutoAnimation;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float openSpeed;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve openCurve;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materialLayers;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool procedrualGradientEnabled;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool procedrualGradientUpdate;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient procedrualGradientRamp;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color procedrualRampColorTint;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem controlParticleSystem;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject getRenderersInChildren;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer[] getRenderersCustom;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer[] renderers;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture2D rampTexture;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector4[] spherePositions;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] sphereSizes;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int numberOfSpheres;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int numberOfSpheresOld;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.Particle[] controlParticles;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector4[] controlParticlesPositions;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] controlParticlesSizes;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Material> rendererMaterials;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.MainModule psmain;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float openCloseValue;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float openCloseCurve;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA0B834", Offset = "0xA0B834", VA = "0xA0B834")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA0BF34", Offset = "0xA0BF34", VA = "0xA0BF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA0C4F0", Offset = "0xA0C4F0", VA = "0xA0C4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA0B92C", Offset = "0xA0B92C", VA = "0xA0B92C")]
	private void GetNumberOfSpheres()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA0B97C", Offset = "0xA0B97C", VA = "0xA0B97C")]
	private void GetSphereArrays()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xA0C184", Offset = "0xA0C184", VA = "0xA0C184")]
	private void OpenCloseProgress()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA0C778", Offset = "0xA0C778", VA = "0xA0C778")]
	public void SetOpenCloseValue(float val)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA0C788", Offset = "0xA0C788", VA = "0xA0C788")]
	private Texture2D GenerateTextureFromGradient(Gradient grad)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA0BB18", Offset = "0xA0BB18", VA = "0xA0BB18")]
	public void ApplyMaterials()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA0BDFC", Offset = "0xA0BDFC", VA = "0xA0BDFC")]
	public void UpdateRampTexture()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA0B8B0", Offset = "0xA0B8B0", VA = "0xA0B8B0")]
	public void GetRenderers()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA0C1EC", Offset = "0xA0C1EC", VA = "0xA0C1EC")]
	public void UpdateHitWaves()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA0C870", Offset = "0xA0C870", VA = "0xA0C870")]
	public ForceFieldController()
	{
	}
}
[Token(Token = "0x200013A")]
public class ShooterController : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectile;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 mouseWorldPosition;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xAF6C00", Offset = "0xAF6C00", VA = "0xAF6C00")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xAF6C04", Offset = "0xAF6C04", VA = "0xAF6C04")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xAF6E88", Offset = "0xAF6E88", VA = "0xAF6E88")]
	public ShooterController()
	{
	}
}
[Token(Token = "0x200013B")]
public class SimpleCameraRotator : MonoBehaviour
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xAF70D0", Offset = "0xAF70D0", VA = "0xAF70D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xAF7130", Offset = "0xAF7130", VA = "0xAF7130")]
	public SimpleCameraRotator()
	{
	}
}
[Token(Token = "0x200013C")]
public class SimpleProjectileSphere : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xAF7AD4", Offset = "0xAF7AD4", VA = "0xAF7AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xAF7BC0", Offset = "0xAF7BC0", VA = "0xAF7BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xAF7BC4", Offset = "0xAF7BC4", VA = "0xAF7BC4")]
	public SimpleProjectileSphere()
	{
	}
}
[Token(Token = "0x200013D")]
public class UIControllerSine : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefabHolder;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openSpeed;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAnimation;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve openCurve;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] prefabs;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> lt;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int activeNumber;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ForceFieldController ffc;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float openCloseValue;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float openCloseCurve;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeGameObject;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xF1EB98", Offset = "0xF1EB98", VA = "0xF1EB98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xF1ED78", Offset = "0xF1ED78", VA = "0xF1ED78")]
	public void EnableActive()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xF1EE58", Offset = "0xF1EE58", VA = "0xF1EE58")]
	public void ChangeEffect(bool bo)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xF1EF1C", Offset = "0xF1EF1C", VA = "0xF1EF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xF1EF98", Offset = "0xF1EF98", VA = "0xF1EF98")]
	public UIControllerSine()
	{
	}
}
[Token(Token = "0x200013E")]
public class FadeAlpha : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadePerSecond;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA07D38", Offset = "0xA07D38", VA = "0xA07D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA07E1C", Offset = "0xA07E1C", VA = "0xA07E1C")]
	public FadeAlpha()
	{
	}
}
[Token(Token = "0x200013F")]
public class DestroyObject : MonoBehaviour
{
	[Token(Token = "0x6000548")]
	[Address(RVA = "0x9F8D98", Offset = "0x9F8D98", VA = "0x9F8D98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x9F8E18", Offset = "0x9F8E18", VA = "0x9F8E18")]
	private void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x9F8E1C", Offset = "0x9F8E1C", VA = "0x9F8E1C")]
	public DestroyObject()
	{
	}
}
[Token(Token = "0x2000140")]
public class VRFollowPlayer : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera camera;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xF213A8", Offset = "0xF213A8", VA = "0xF213A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xF2143C", Offset = "0xF2143C", VA = "0xF2143C")]
	public VRFollowPlayer()
	{
	}
}
[Token(Token = "0x2000141")]
public class FullVRMainMenuController : MainMenuController
{
	[Token(Token = "0x600054D")]
	[Address(RVA = "0xABD1E0", Offset = "0xABD1E0", VA = "0xABD1E0")]
	public FullVRMainMenuController()
	{
	}
}
[Token(Token = "0x2000142")]
public class DEPRECATEDGameController : MonoBehaviour
{
	[Token(Token = "0x600054E")]
	[Address(RVA = "0xB86574", Offset = "0xB86574", VA = "0xB86574")]
	public DEPRECATEDGameController()
	{
	}
}
[Token(Token = "0x2000143")]
public class DEPRECATED_ButtonSelected : PerformOnInteraction
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x599A24", Offset = "0x599A24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x599A24", Offset = "0x599A24")]
	public Color activeColor;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x599A84", Offset = "0x599A84")]
	public Color defaultColor;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material defaultMaterial;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material activeMaterial;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float contactEndedTime;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool active;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer my_Renderer;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xB8727C", Offset = "0xB8727C", VA = "0xB8727C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xB87280", Offset = "0xB87280", VA = "0xB87280")]
	private void findRendererAndMaterial()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xB87450", Offset = "0xB87450", VA = "0xB87450", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xB87460", Offset = "0xB87460", VA = "0xB87460")]
	public void setActiveState(bool input)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xB875A4", Offset = "0xB875A4", VA = "0xB875A4")]
	public DEPRECATED_ButtonSelected()
	{
	}
}
[Token(Token = "0x2000144")]
public class DEPRECATED_GameDifficultyButtonSelected : DEPRECATED_ButtonSelected
{
	[Token(Token = "0x6000554")]
	[Address(RVA = "0xB8764C", Offset = "0xB8764C", VA = "0xB8764C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xB87654", Offset = "0xB87654", VA = "0xB87654")]
	public DEPRECATED_GameDifficultyButtonSelected()
	{
	}
}
[Token(Token = "0x2000145")]
public class BlockIncomingEffectsPoolController : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject normalAppearanceEffect;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bonusAppearanceEffect;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject bonusEffect;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ArrayList normalEntranceWormholes;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrayList bonusEntranceWormholes;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ArrayList bonusDisappearanceWormholes;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ArrayList playerScoredNormalEffect;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ArrayList playerScoredBonusEffect;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ArrayList playerHitEffect;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ArrayList playerTouchedUnblockableEffect;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x9D9D24", Offset = "0x9D9D24", VA = "0x9D9D24")]
	public BlockIncomingEffectsPoolController()
	{
	}
}
[Token(Token = "0x2000146")]
public class FragmentingObjectConstants : MonoBehaviour
{
	[Token(Token = "0x4000702")]
	public const string FRAGMENTING_OBJECT_FRACTURED_PART = "fracturedPart";

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float APPEARANCE_WORMHOLE_DURATION;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xABC524", Offset = "0xABC524", VA = "0xABC524")]
	public FragmentingObjectConstants()
	{
	}
}
[Token(Token = "0x2000147")]
public class BlockIncomingObjectGameModeAudioController : GameModeAudioController
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip bonusObjectAppeared;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip bonusObjectScored;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip bonusObjectMissed;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x9D9FF8", Offset = "0x9D9FF8", VA = "0x9D9FF8")]
	public void playBonusObjectAppeared()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x9DA01C", Offset = "0x9DA01C", VA = "0x9DA01C")]
	public void playBonusObjectScored()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x9DA040", Offset = "0x9DA040", VA = "0x9DA040")]
	public void playBonusObjectMissed()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x9DA064", Offset = "0x9DA064", VA = "0x9DA064")]
	public BlockIncomingObjectGameModeAudioController()
	{
	}
}
[Token(Token = "0x2000148")]
public class BlockIncomingObjectPositionConstants : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OBJECT_POOL_Y;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FRACTURED_PREFABS_OBJECT_POOL_Y;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float NORMAL_OBJECT_X;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float DODGE_ONLY_OBJECT_X;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float DODGE_ONLY_LARGE_X;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BLOCK_ONLY_OBJECT_X;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float BONUS_OBJECT_X;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x9DA06C", Offset = "0x9DA06C", VA = "0x9DA06C")]
	public BlockIncomingObjectPositionConstants()
	{
	}
}
[Token(Token = "0x2000149")]
public class BlockIncomingObjectsAppearancePositionHelper : ObjectAppearancePositionHelper
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected BlockIncomingObjectsGameController blockIncomingObjectsGameController;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected TesterBlockIncomingObjectsPositionHelper testerBlockIncomingObjectsPositionHelper;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform transformOfPlayerCamera;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int AMOUNT_OF_OBJECT_TO_BLOCK_ROWS;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int AMOUNT_OF_OBJECT_TO_BLOCK_COLUMNS;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int AMOUNT_OF_BONUS_OBJECT_ROWS;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int AMOUNT_OF_BONUS_OBJECT_COLUMNS;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x9DA110", Offset = "0x9DA110", VA = "0x9DA110")]
	public float[] getObjectCreationRanges(float xWidth)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x9DA328", Offset = "0x9DA328", VA = "0x9DA328")]
	private float getLargerDistanceForObjectCreation(float objectSize, float objectSizeMultiplier, float defaultAdditionalRange)
	{
		return default(float);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x9DA338", Offset = "0x9DA338", VA = "0x9DA338")]
	public Vector3 getObjectToBlockStartingPosition(float objectSizeX, float objectSizeY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x9DA7FC", Offset = "0x9DA7FC", VA = "0x9DA7FC")]
	private Vector3 getRandomPositionFromWithinRandomCreationArea(Area3D validObjectCreationArea, float objectSize)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x9DA918", Offset = "0x9DA918", VA = "0x9DA918")]
	public Vector3 getBonusObjectStartingPosition(float objectSize)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x9DAC88", Offset = "0x9DAC88", VA = "0x9DAC88")]
	protected List<Area3D> validateBonusObjectCreationAreas(List<Area3D> creationAreas, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x9DA520", Offset = "0x9DA520", VA = "0x9DA520")]
	private List<Area3D> getObjectCreationSubAreas(float creationRangeMinX, float creationRangeMaxX, float creationRangeMinY, float creationRangeMaxY, int amountOfRows, int amountOfColumns, float objectSizeX, float objectSizeY)
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x9DB21C", Offset = "0x9DB21C", VA = "0x9DB21C")]
	private List<Area3D> getValidAreas(List<Area3D> originalCreationAreas, List<Area3D> forbidenObjectCreationAreas, float objectSizeX, float objectSizeY)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x9DAEA4", Offset = "0x9DAEA4", VA = "0x9DAEA4")]
	private List<Area3D> calculateForbidenObjectCreationAreas(List<GameObject> gameObjects)
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x9DADCC", Offset = "0x9DADCC", VA = "0x9DADCC")]
	private List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x9DAAA8", Offset = "0x9DAAA8", VA = "0x9DAAA8")]
	private List<Area3D> getNewValidObjectCreationAreasForBonusObjects(float objectSize)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x9DB750", Offset = "0x9DB750", VA = "0x9DB750")]
	public BlockIncomingObjectsAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x200014A")]
public class BlockIncomingObjectsFracturedPrefabPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9DB828", Offset = "0x9DB828", VA = "0x9DB828", Slot = "29")]
	protected override void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9DB834", Offset = "0x9DB834", VA = "0x9DB834", Slot = "11")]
	protected override void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9DB894", Offset = "0x9DB894", VA = "0x9DB894", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x9DB914", Offset = "0x9DB914", VA = "0x9DB914", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9DB984", Offset = "0x9DB984", VA = "0x9DB984", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9DB994", Offset = "0x9DB994", VA = "0x9DB994")]
	public BlockIncomingObjectsFracturedPrefabPoolController()
	{
	}
}
[Token(Token = "0x200014B")]
public class BlockIncomingObjectsGameController : GameController
{
	[Token(Token = "0x200014C")]
	public enum FragmentingObjectsToBlockType
	{
		[Token(Token = "0x400072A")]
		NORMAL,
		[Token(Token = "0x400072B")]
		BLOCK_ONLY,
		[Token(Token = "0x400072C")]
		DODGE_ONLY,
		[Token(Token = "0x400072D")]
		LARGE_DODGE_ONLY,
		[Token(Token = "0x400072E")]
		FLAT_LARGE_DODGE_ONLY,
		[Token(Token = "0x400072F")]
		BONUS
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5964FC", Offset = "0x5964FC")]
	private sealed class <mainGameModeLoop>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <maxObjectsAmount>5__2;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x9EE560", Offset = "0x9EE560", VA = "0x9EE560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x9EE5A8", Offset = "0x9EE5A8", VA = "0x9EE5A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x9EDD68", Offset = "0x9EDD68", VA = "0x9EDD68")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x9EDD94", Offset = "0x9EDD94", VA = "0x9EDD94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x9EDD98", Offset = "0x9EDD98", VA = "0x9EDD98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x9EE568", Offset = "0x9EE568", VA = "0x9EE568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59650C", Offset = "0x59650C")]
	private sealed class <dodgeOnlyDurationCountdown>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x9EDD18", Offset = "0x9EDD18", VA = "0x9EDD18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0x9EDD60", Offset = "0x9EDD60", VA = "0x9EDD60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x9EDC24", Offset = "0x9EDC24", VA = "0x9EDC24")]
		[DebuggerHidden]
		public <dodgeOnlyDurationCountdown>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x9EDC50", Offset = "0x9EDC50", VA = "0x9EDC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x9EDC54", Offset = "0x9EDC54", VA = "0x9EDC54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x9EDD20", Offset = "0x9EDD20", VA = "0x9EDD20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59651C", Offset = "0x59651C")]
	private sealed class <startRapidFireCountdown>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x9EE80C", Offset = "0x9EE80C", VA = "0x9EE80C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x9EE854", Offset = "0x9EE854", VA = "0x9EE854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x9EE6F4", Offset = "0x9EE6F4", VA = "0x9EE6F4")]
		[DebuggerHidden]
		public <startRapidFireCountdown>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x9EE720", Offset = "0x9EE720", VA = "0x9EE720", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x9EE724", Offset = "0x9EE724", VA = "0x9EE724", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x9EE814", Offset = "0x9EE814", VA = "0x9EE814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59652C", Offset = "0x59652C")]
	private sealed class <startSlerpOnlyMovementModeCountdown>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x9EE974", Offset = "0x9EE974", VA = "0x9EE974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x9EE9BC", Offset = "0x9EE9BC", VA = "0x9EE9BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x9EE85C", Offset = "0x9EE85C", VA = "0x9EE85C")]
		[DebuggerHidden]
		public <startSlerpOnlyMovementModeCountdown>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x9EE888", Offset = "0x9EE888", VA = "0x9EE888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x9EE88C", Offset = "0x9EE88C", VA = "0x9EE88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x9EE97C", Offset = "0x9EE97C", VA = "0x9EE97C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59653C", Offset = "0x59653C")]
	private sealed class <startBlockOnlyCountdown>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x9EE6A4", Offset = "0x9EE6A4", VA = "0x9EE6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x9EE6EC", Offset = "0x9EE6EC", VA = "0x9EE6EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x9EE5B0", Offset = "0x9EE5B0", VA = "0x9EE5B0")]
		[DebuggerHidden]
		public <startBlockOnlyCountdown>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x9EE5DC", Offset = "0x9EE5DC", VA = "0x9EE5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x9EE5E0", Offset = "0x9EE5E0", VA = "0x9EE5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x9EE6AC", Offset = "0x9EE6AC", VA = "0x9EE6AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59654C", Offset = "0x59654C")]
	private sealed class <bonusObjectCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x9EDBD4", Offset = "0x9EDBD4", VA = "0x9EDBD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x9EDC1C", Offset = "0x9EDC1C", VA = "0x9EDC1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x9ED858", Offset = "0x9ED858", VA = "0x9ED858")]
		[DebuggerHidden]
		public <bonusObjectCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x9ED884", Offset = "0x9ED884", VA = "0x9ED884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x9ED888", Offset = "0x9ED888", VA = "0x9ED888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x9EDBDC", Offset = "0x9EDBDC", VA = "0x9EDBDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected DateTime lastObjectCreationTime;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool objectToBlockAlreadyCreated;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected List<GameObject> bonusGameObjects;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected bool performCountdown;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private BlockIncomingObjectGameModeAudioController blockIncomingObjectGameModeAudioController;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected BlockIncomingObjectsParameterContainer blockIncomingObjectsParameterContainer;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	protected BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsAppearancePositionHelper;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool largeObjectActive;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool dodgeOnlyModeActive;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool rapidFireModeActive;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	private bool blockOnlyModeActive;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool slerpOnlyObjectMovementModeActive;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool specialModeJustEnded;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int specialGameModeTimeDuration;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private BlockIncomingObjectsPoolController blockIncomingObjectsPoolController;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController fracturedPrefabPoolController;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Dictionary<FragmentingObjectsToBlockType, string> objectTypesStringMap;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float playerHeight;

	[Token(Token = "0x4000728")]
	private const float DISTANCE_FROM_PLAYER_HEIGHT = 0.2f;

	[Token(Token = "0x1700005F")]
	public BlockIncomingObjectGameModeAudioController BlockIncomingObjectGameModeAudioController
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x9DB99C", Offset = "0x9DB99C", VA = "0x9DB99C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x9DB9A4", Offset = "0x9DB9A4", VA = "0x9DB9A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9DB9B4", Offset = "0x9DB9B4", VA = "0x9DB9B4", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9DBAEC", Offset = "0x9DBAEC", VA = "0x9DBAEC", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9DBF40", Offset = "0x9DBF40", VA = "0x9DBF40")]
	public void setLargeObjectActive(bool input)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9DBF6C", Offset = "0x9DBF6C", VA = "0x9DBF6C", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9DC070", Offset = "0x9DC070", VA = "0x9DC070", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x9DC058", Offset = "0x9DC058", VA = "0x9DC058")]
	private void resetOnStopGameSpecial()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x9DC15C", Offset = "0x9DC15C", VA = "0x9DC15C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EC1C", Offset = "0x59EC1C")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9DC1D4", Offset = "0x9DC1D4", VA = "0x9DC1D4", Slot = "59")]
	protected virtual bool specialModeActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x9DC1FC", Offset = "0x9DC1FC", VA = "0x9DC1FC")]
	private bool checkIfStartDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x9DC24C", Offset = "0x9DC24C", VA = "0x9DC24C")]
	private void startDodgeOnly()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9DC2B8", Offset = "0x9DC2B8", VA = "0x9DC2B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EC7C", Offset = "0x59EC7C")]
	private IEnumerator dodgeOnlyDurationCountdown()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x9DC330", Offset = "0x9DC330", VA = "0x9DC330")]
	private bool checkIfStartRapidFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x9DC380", Offset = "0x9DC380", VA = "0x9DC380")]
	private bool checkIfStartSlerpOnlyMovementMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x9DC3D4", Offset = "0x9DC3D4", VA = "0x9DC3D4")]
	private void startRapidFire()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x9DC43C", Offset = "0x9DC43C", VA = "0x9DC43C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59ECDC", Offset = "0x59ECDC")]
	private IEnumerator startRapidFireCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x9DC4B4", Offset = "0x9DC4B4", VA = "0x9DC4B4")]
	private void startSlerpOnlyMovementMode()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x9DC51C", Offset = "0x9DC51C", VA = "0x9DC51C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59ED3C", Offset = "0x59ED3C")]
	private IEnumerator startSlerpOnlyMovementModeCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x9DC594", Offset = "0x9DC594", VA = "0x9DC594")]
	private bool checkIfStartBlockOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9DC5E4", Offset = "0x9DC5E4", VA = "0x9DC5E4")]
	private void startBlockOnlyMode()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x9DC650", Offset = "0x9DC650", VA = "0x9DC650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59ED9C", Offset = "0x59ED9C")]
	private IEnumerator startBlockOnlyCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x9DC6C8", Offset = "0x9DC6C8", VA = "0x9DC6C8", Slot = "60")]
	protected virtual bool activateObjectToBlock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9DCA38", Offset = "0x9DCA38", VA = "0x9DCA38")]
	private GameObject getObjectToBlock(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9DCD1C", Offset = "0x9DCD1C", VA = "0x9DCD1C")]
	private bool canBlockOnlyObjectBeCreated()
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9DC95C", Offset = "0x9DC95C", VA = "0x9DC95C")]
	private GameObject getDodgeOnlyObject()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9DCC24", Offset = "0x9DCC24", VA = "0x9DCC24")]
	private GameObject activateLargeObject()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x9DCD68", Offset = "0x9DCD68", VA = "0x9DCD68")]
	private bool playerCrouching()
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9DCDD8", Offset = "0x9DCDD8", VA = "0x9DCDD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59EDFC", Offset = "0x59EDFC")]
	private IEnumerator bonusObjectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9DCE50", Offset = "0x9DCE50", VA = "0x9DCE50")]
	private bool activateBonusObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9DD374", Offset = "0x9DD374", VA = "0x9DD374")]
	private void createTestObjectsAtTheLimitsOfValidCreationRanges()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9DD598", Offset = "0x9DD598", VA = "0x9DD598")]
	private void createTestObjectsAtTheLimitsOfCreationRanges()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x9DD694", Offset = "0x9DD694", VA = "0x9DD694", Slot = "51")]
	public override void returnObjectToObjectPool(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x9DD9E4", Offset = "0x9DD9E4", VA = "0x9DD9E4", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x9DD7C4", Offset = "0x9DD7C4", VA = "0x9DD7C4")]
	private bool isLargeObject(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x9DD9F4", Offset = "0x9DD9F4", VA = "0x9DD9F4", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x9DDAD4", Offset = "0x9DDAD4", VA = "0x9DDAD4", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x9DDB10", Offset = "0x9DDB10", VA = "0x9DDB10")]
	public BlockIncomingObjectsFracturedPrefabPoolController getFracturedPrefabController()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x9DDB18", Offset = "0x9DDB18", VA = "0x9DDB18", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x9DD238", Offset = "0x9DD238", VA = "0x9DD238")]
	private void addToBonusObjectsThreadSafe(GameObject bonusObject)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x9DD8A4", Offset = "0x9DD8A4", VA = "0x9DD8A4")]
	private void removeFromBonusObjectsThreadSafe(GameObject bonusObject)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x9DDC58", Offset = "0x9DDC58", VA = "0x9DDC58")]
	public BlockIncomingObjectsGameController()
	{
	}
}
[Token(Token = "0x2000153")]
public class BlockIncomingObjectsParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x2000154")]
	public enum BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES
	{
		[Token(Token = "0x4000766")]
		NORMAL,
		[Token(Token = "0x4000767")]
		BONUS_OBJECT
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES currentGameMode;

	[Token(Token = "0x4000748")]
	private const string GAME_MODE_NAME = "BLOCK_INCOMING_OBJECTS";

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float objectToBlockMovementSpeed;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float minTimeBetweenObjectsToBlockSpawning;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float maxTimeBetweenObjectsToBlockSpawning;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int maxObjectsAmount;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int maxAmountOfBonusObjects;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minTimeBetweenBonusObjectsSpawning;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float maxTimeBetweenBonusObjectsSpawning;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float objectToBlockSize;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float largeDodgeOnlyObjectSize;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float zDistanceFromPlayerObjectToBlock;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float zDistanceFromPlayerBonusObject;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float sizeForLargeObjectCreationCalculation;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float xWidthForObjectToBlockCreation;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float xWidthForBonusObjectCreation;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float yHeightDownForObjectCreation;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float yHeightUpForObjectCreation;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static float bonusObjectSize;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float bonusObjectTimeToDisappearance;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static bool bonusObjectMoving;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static float bonusObjectMovementSpeed;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static float bonusObjectMaxMovementDistance;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected static float distanceToStopFollowingTarget;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static float distanceLargeObjectFromNormalObjectCreationPos;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool normalStrafingAllowed;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float tutorialObjectToBlockMovementSpeed;

	[Token(Token = "0x4000763")]
	public const float MIN_Z_LIMITS = -10f;

	[Token(Token = "0x4000764")]
	public const float MAX_Z_LIMITS = 10f;

	[Token(Token = "0x1700006C")]
	public static float ObjectToBlockMovementSpeed
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x9DEC68", Offset = "0x9DEC68", VA = "0x9DEC68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x9DECCC", Offset = "0x9DECCC", VA = "0x9DECCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public static float MinTimeBetweenObjectsToBlockSpawning
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x9DED3C", Offset = "0x9DED3C", VA = "0x9DED3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x9DEDA0", Offset = "0x9DEDA0", VA = "0x9DEDA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public static float MaxTimeBetweenObjectsToBlockSpawning
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x9DEE10", Offset = "0x9DEE10", VA = "0x9DEE10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x9DEE74", Offset = "0x9DEE74", VA = "0x9DEE74")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public static float ObjectSize
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x9DEEE4", Offset = "0x9DEEE4", VA = "0x9DEEE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x9DEF48", Offset = "0x9DEF48", VA = "0x9DEF48")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public static float ZDistanceFromPlayerObjectToBlock
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x9DEFB8", Offset = "0x9DEFB8", VA = "0x9DEFB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x9DF01C", Offset = "0x9DF01C", VA = "0x9DF01C")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public static float XWidthForObjectToBlockCreation
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x9DF08C", Offset = "0x9DF08C", VA = "0x9DF08C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x9DF0F0", Offset = "0x9DF0F0", VA = "0x9DF0F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static float YHeightDownForObjectCreation
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x9DF160", Offset = "0x9DF160", VA = "0x9DF160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x9DF1C4", Offset = "0x9DF1C4", VA = "0x9DF1C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public static float YHeightUpForObjectCreation
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x9DF234", Offset = "0x9DF234", VA = "0x9DF234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x9DF298", Offset = "0x9DF298", VA = "0x9DF298")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public static bool BonusObjectMoving
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x9DF308", Offset = "0x9DF308", VA = "0x9DF308")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x9DF36C", Offset = "0x9DF36C", VA = "0x9DF36C")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public static float BonusObjectSize
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x9DF3D8", Offset = "0x9DF3D8", VA = "0x9DF3D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x9DF43C", Offset = "0x9DF43C", VA = "0x9DF43C")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static float BonusObjectMovementSpeed
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x9DF4AC", Offset = "0x9DF4AC", VA = "0x9DF4AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x9DF510", Offset = "0x9DF510", VA = "0x9DF510")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public static float MaxSecondsBetweenBonusObjectsSpawning
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x9DF580", Offset = "0x9DF580", VA = "0x9DF580")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x9DF5E4", Offset = "0x9DF5E4", VA = "0x9DF5E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static float BonusObjectTimeToDisappearance
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x9DF654", Offset = "0x9DF654", VA = "0x9DF654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x9DF6B8", Offset = "0x9DF6B8", VA = "0x9DF6B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static float LargeDodgeOnlyObjectSize
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x9DF728", Offset = "0x9DF728", VA = "0x9DF728")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x9DF78C", Offset = "0x9DF78C", VA = "0x9DF78C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static float DistanceToStopFollowingTarget
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x9DF7FC", Offset = "0x9DF7FC", VA = "0x9DF7FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x9DF860", Offset = "0x9DF860", VA = "0x9DF860")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public bool NormalStrafingAllowed
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x9DF8D0", Offset = "0x9DF8D0", VA = "0x9DF8D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x9DF8D8", Offset = "0x9DF8D8", VA = "0x9DF8D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public static float ZDistanceFromPlayerBonusObject
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x9DF8E4", Offset = "0x9DF8E4", VA = "0x9DF8E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x9DF948", Offset = "0x9DF948", VA = "0x9DF948")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static float MinTimeBetweenBonusObjectsSpawning
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x9DF9B8", Offset = "0x9DF9B8", VA = "0x9DF9B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x9DFA1C", Offset = "0x9DFA1C", VA = "0x9DFA1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static int MaxAmountOfBonusObjects
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x9DFA8C", Offset = "0x9DFA8C", VA = "0x9DFA8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x9DFAF0", Offset = "0x9DFAF0", VA = "0x9DFAF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static float XWidthForBonusObjectCreation
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x9DFB58", Offset = "0x9DFB58", VA = "0x9DFB58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x9DFBBC", Offset = "0x9DFBBC", VA = "0x9DFBBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES CurrentGameMode
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x9DFC2C", Offset = "0x9DFC2C", VA = "0x9DFC2C")]
		get
		{
			return default(BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES);
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x9DFC90", Offset = "0x9DFC90", VA = "0x9DFC90")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static float DistanceLargeObjectFromNormalObjectCreationPos
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x9DFCF8", Offset = "0x9DFCF8", VA = "0x9DFCF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x9DFD5C", Offset = "0x9DFD5C", VA = "0x9DFD5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static float SizeForLargeObjectCreationCalculation
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x9DFDCC", Offset = "0x9DFDCC", VA = "0x9DFDCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x9DFE30", Offset = "0x9DFE30", VA = "0x9DFE30")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static float BonusObjectMaxMovementDistance
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x9DFEA0", Offset = "0x9DFEA0", VA = "0x9DFEA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x9DFF04", Offset = "0x9DFF04", VA = "0x9DFF04")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static float TutorialObjectToBlockMovementSpeed
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x9DFF74", Offset = "0x9DFF74", VA = "0x9DFF74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x9DFFD8", Offset = "0x9DFFD8", VA = "0x9DFFD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static int MaxObjectsAmount
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x9E0048", Offset = "0x9E0048", VA = "0x9E0048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x9E00AC", Offset = "0x9E00AC", VA = "0x9E00AC")]
		set
		{
		}
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x9DDD64", Offset = "0x9DDD64", VA = "0x9DDD64", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x9DE83C", Offset = "0x9DE83C", VA = "0x9DE83C")]
	private void setObjectToBlockMovementSpeed(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x9DE980", Offset = "0x9DE980", VA = "0x9DE980")]
	private void setMaxObjectsAmount(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x9DE608", Offset = "0x9DE608", VA = "0x9DE608")]
	private void setTimeBetweenObjectSpawn(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x9E0114", Offset = "0x9E0114", VA = "0x9E0114", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9E011C", Offset = "0x9E011C", VA = "0x9E011C", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x9E0160", Offset = "0x9E0160", VA = "0x9E0160", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x9E0408", Offset = "0x9E0408", VA = "0x9E0408", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x9E04C8", Offset = "0x9E04C8", VA = "0x9E04C8")]
	public BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES getLastUsedSubGameMode()
	{
		return default(BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x9E058C", Offset = "0x9E058C", VA = "0x9E058C", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x9E06D8", Offset = "0x9E06D8", VA = "0x9E06D8")]
	public BlockIncomingObjectsParameterContainer()
	{
	}
}
[Token(Token = "0x2000155")]
public class BlockIncomingObjectsPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController blockIncomingObjectsFracturedPrefabPoolController;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsObjectCreationPositionHelper;

	[Token(Token = "0x400076B")]
	public const int EFFECT_DURATION = 3;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool playAreaCorrectForObjectSize;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x9E08A4", Offset = "0x9E08A4", VA = "0x9E08A4", Slot = "4")]
	protected override void performSetup()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x9E0938", Offset = "0x9E0938", VA = "0x9E0938", Slot = "29")]
	protected override void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9E0A5C", Offset = "0x9E0A5C", VA = "0x9E0A5C", Slot = "9")]
	protected override void performSetupOnAdditionalObject(GameObject additionalGameObject)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x9E0ACC", Offset = "0x9E0ACC", VA = "0x9E0ACC", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x9E0EA8", Offset = "0x9E0EA8", VA = "0x9E0EA8")]
	private void setupAdditionalObject(GameObject instantiatedGameObject)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x9E11E8", Offset = "0x9E11E8", VA = "0x9E11E8", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedPrefab, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x9E0C8C", Offset = "0x9E0C8C", VA = "0x9E0C8C")]
	private void performGenericSetupOnGameObject(GameObject instantiatedPrefab, BlockIncomingObjectsGameController.FragmentingObjectsToBlockType blockObjectsType, float movementSpeed, float objectToBlockSize, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9E1220", Offset = "0x9E1220", VA = "0x9E1220", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x9E1360", Offset = "0x9E1360", VA = "0x9E1360", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x9E14A8", Offset = "0x9E14A8", VA = "0x9E14A8")]
	public BlockIncomingObjectsPoolController()
	{
	}
}
[Token(Token = "0x2000156")]
public class BlockIncomingObjectsScoreKeeper : ScoreKeeper
{
	[Token(Token = "0x4000770")]
	private const string SCRIPT_NAME = "BlockIncomingObjectsScoreKeeper";

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9E1580", Offset = "0x9E1580", VA = "0x9E1580")]
	public BlockIncomingObjectsScoreKeeper()
	{
	}
}
[Token(Token = "0x2000157")]
public class BlockIncomingObjectsSphereGameObject : FragmentingObjectToBlock
{
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59655C", Offset = "0x59655C")]
	private sealed class <activeTimeCountdownCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlockIncomingObjectsSphereGameObject <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0x9EEADC", Offset = "0x9EEADC", VA = "0x9EEADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0x9EEB24", Offset = "0x9EEB24", VA = "0x9EEB24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x9EE9C4", Offset = "0x9EE9C4", VA = "0x9EE9C4")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x9EE9F0", Offset = "0x9EE9F0", VA = "0x9EE9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x9EE9F4", Offset = "0x9EE9F4", VA = "0x9EE9F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x9EEAE4", Offset = "0x9EEAE4", VA = "0x9EEAE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000771")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.4f;

	[Token(Token = "0x17000086")]
	public BlockIncomingObjectsGameController BlockIncomingObjectsGameController
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x9E1588", Offset = "0x9E1588", VA = "0x9E1588")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x9E1590", Offset = "0x9E1590", VA = "0x9E1590")]
		set
		{
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x9E15A0", Offset = "0x9E15A0", VA = "0x9E15A0")]
	public void startCountdown()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9E1668", Offset = "0x9E1668", VA = "0x9E1668")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x9E17AC", Offset = "0x9E17AC", VA = "0x9E17AC", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9E1874", Offset = "0x9E1874", VA = "0x9E1874", Slot = "94")]
	protected override void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x9E161C", Offset = "0x9E161C", VA = "0x9E161C")]
	public void startCountdownToDeactivation()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x9E1880", Offset = "0x9E1880", VA = "0x9E1880", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F03C", Offset = "0x59F03C")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x9E1908", Offset = "0x9E1908", VA = "0x9E1908", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x9E1964", Offset = "0x9E1964", VA = "0x9E1964", Slot = "121")]
	public virtual void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x9E1AE8", Offset = "0x9E1AE8", VA = "0x9E1AE8", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x9E1B54", Offset = "0x9E1B54", VA = "0x9E1B54", Slot = "78")]
	public override void prePerformMovement()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x9E1BB4", Offset = "0x9E1BB4", VA = "0x9E1BB4", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x9E1C3C", Offset = "0x9E1C3C", VA = "0x9E1C3C", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x9DD044", Offset = "0x9DD044", VA = "0x9DD044")]
	public void performAppearance(Vector3 appearanceDestination, float timeToDisappearance)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x9E1CDC", Offset = "0x9E1CDC", VA = "0x9E1CDC", Slot = "62")]
	protected override float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x9E1CE8", Offset = "0x9E1CE8", VA = "0x9E1CE8", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x9E1CEC", Offset = "0x9E1CEC", VA = "0x9E1CEC", Slot = "60")]
	protected override GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x9E1CF4", Offset = "0x9E1CF4", VA = "0x9E1CF4", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x9E1E00", Offset = "0x9E1E00", VA = "0x9E1E00", Slot = "67")]
	protected override float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9E1E08", Offset = "0x9E1E08", VA = "0x9E1E08", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x9E1E48", Offset = "0x9E1E48", VA = "0x9E1E48", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x9E1E6C", Offset = "0x9E1E6C", VA = "0x9E1E6C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x9E1EC0", Offset = "0x9E1EC0", VA = "0x9E1EC0")]
	public void appearancePositionReachedTest()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x9E1ED0", Offset = "0x9E1ED0", VA = "0x9E1ED0", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x9E1F0C", Offset = "0x9E1F0C", VA = "0x9E1F0C", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x9E1FA8", Offset = "0x9E1FA8", VA = "0x9E1FA8", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x9E1FC0", Offset = "0x9E1FC0", VA = "0x9E1FC0")]
	public BlockIncomingObjectsSphereGameObject()
	{
	}
}
[Token(Token = "0x2000159")]
public class BlockIncomingObjectsTutorialController : TutorialController
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59656C", Offset = "0x59656C")]
	private sealed class <performGameModeSpecificTutorialSteps>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsTutorialController <>4__this;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0x9F05A4", Offset = "0x9F05A4", VA = "0x9F05A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0x9F05EC", Offset = "0x9F05EC", VA = "0x9F05EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x9EEB2C", Offset = "0x9EEB2C", VA = "0x9EEB2C")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x9EEB58", Offset = "0x9EEB58", VA = "0x9EEB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x9EEB5C", Offset = "0x9EEB5C", VA = "0x9EEB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x9F05AC", Offset = "0x9F05AC", VA = "0x9F05AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialHelper;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController fracturedPrefabPoolController;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject tutorialNormalBlockIncoming;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject tutorialDodgeOnlyObject;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject tutorialLargeDodgeOnlyObject;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject tutorialBlockOnlyObjectToBlock;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject tutorialBonusObject;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private StartTutorialStepPerformOnInteraction startTutorialStepPerformOnInteraction;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x9E1FC8", Offset = "0x9E1FC8", VA = "0x9E1FC8", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F0EC", Offset = "0x59F0EC")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x9E2054", Offset = "0x9E2054", VA = "0x9E2054", Slot = "9")]
	public override void startTutorialStep()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x9E233C", Offset = "0x9E233C", VA = "0x9E233C", Slot = "17")]
	protected override void disappearObject(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x9E2620", Offset = "0x9E2620", VA = "0x9E2620", Slot = "22")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x9E2644", Offset = "0x9E2644", VA = "0x9E2644")]
	public BlockIncomingObjectsFracturedPrefabPoolController getFracturedPrefabPoolController()
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x9E264C", Offset = "0x9E264C", VA = "0x9E264C")]
	public BlockIncomingObjectsTutorialController()
	{
	}
}
[Token(Token = "0x200015B")]
public class BlockIncomingObjectsTutorialObjectCoordinationCoachPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController blockIncomingObjectsFracturedPrefabPoolController;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject[] inputTargetTransforms;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x9E2654", Offset = "0x9E2654", VA = "0x9E2654", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x9E28A0", Offset = "0x9E28A0", VA = "0x9E28A0", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9E29D8", Offset = "0x9E29D8", VA = "0x9E29D8", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x9E2B14", Offset = "0x9E2B14", VA = "0x9E2B14")]
	public BlockIncomingObjectsTutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x200015C")]
public class BlockObjectsTimeKeeper : MonoBehaviour
{
	[Token(Token = "0x600063D")]
	[Address(RVA = "0x9E2B1C", Offset = "0x9E2B1C", VA = "0x9E2B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9E2B20", Offset = "0x9E2B20", VA = "0x9E2B20")]
	public BlockObjectsTimeKeeper()
	{
	}
}
[Token(Token = "0x200015D")]
public class DodgeMovement : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToDodge;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x9FC244", Offset = "0x9FC244", VA = "0x9FC244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9FC314", Offset = "0x9FC314", VA = "0x9FC314")]
	public DodgeMovement()
	{
	}
}
[Token(Token = "0x200015E")]
public class NormalObjectToBlockAppearanceEffectColorChanger : MonoBehaviour, UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected ParticleSystem outerLayerParticleSystem;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected ParticleSystem innerLayerParticleSystem;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ParticleSystem.MainModule outerMainModule;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParticleSystem.MainModule innerMainModule;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Color anyHandColorOuter;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Color anyHandColorInner;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Color leftHandOnlyColorOuter;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Color leftHandOnlyColorInner;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Color rightHandOnlyColorOuter;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Color rightHandOnlyColorInner;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xC69EF0", Offset = "0xC69EF0", VA = "0xC69EF0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xC69FAC", Offset = "0xC69FAC", VA = "0xC69FAC", Slot = "5")]
	protected virtual void setupAdditionalModules()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xC69FB0", Offset = "0xC69FB0", VA = "0xC69FB0", Slot = "4")]
	public void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xC6A088", Offset = "0xC6A088", VA = "0xC6A088", Slot = "6")]
	protected virtual void setupAdditionalColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xC6A08C", Offset = "0xC6A08C", VA = "0xC6A08C", Slot = "7")]
	protected virtual Color getOuterColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xC6A0E8", Offset = "0xC6A0E8", VA = "0xC6A0E8", Slot = "8")]
	protected virtual Color getInnerColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xC6A144", Offset = "0xC6A144", VA = "0xC6A144")]
	public NormalObjectToBlockAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x200015F")]
public static class DEPRECATEDBlockIncomingObjectParameterContainer
{
}
[Token(Token = "0x2000160")]
public class ObjectToBlockFracturedObjectInfo : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsGameController.FragmentingObjectsToBlockType fragmentingObjectType;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectType;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB02D14", Offset = "0xB02D14", VA = "0xB02D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xB02DA4", Offset = "0xB02DA4", VA = "0xB02DA4")]
	public void setObjectType()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xB02E34", Offset = "0xB02E34", VA = "0xB02E34", Slot = "4")]
	public string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xB02E3C", Offset = "0xB02E3C", VA = "0xB02E3C", Slot = "7")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xB02ED8", Offset = "0xB02ED8", VA = "0xB02ED8", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xB02F54", Offset = "0xB02F54", VA = "0xB02F54")]
	public ObjectToBlockFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x2000161")]
public class ObjectToBlockFracturedPartsController : FracturedPartsController
{
	[Token(Token = "0x600064E")]
	[Address(RVA = "0xB02FB0", Offset = "0xB02FB0", VA = "0xB02FB0")]
	public ObjectToBlockFracturedPartsController()
	{
	}
}
[Token(Token = "0x2000162")]
public class OculusRiftBlockIncomingObjectsGameController : BlockIncomingObjectsGameController
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xB05EC4", Offset = "0xB05EC4", VA = "0xB05EC4")]
	public OculusRiftBlockIncomingObjectsGameController()
	{
	}
}
[Token(Token = "0x2000163")]
public class OculusRiftBlockIncomingObjectsTutorialController : BlockIncomingObjectsTutorialController
{
	[Token(Token = "0x6000650")]
	[Address(RVA = "0xB05ECC", Offset = "0xB05ECC", VA = "0xB05ECC")]
	public OculusRiftBlockIncomingObjectsTutorialController()
	{
	}
}
[Token(Token = "0x2000164")]
public class BlockOnlyObjectToBlock : ObjectToBlock
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x9E2B28", Offset = "0x9E2B28", VA = "0x9E2B28", Slot = "124")]
	protected override bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x9E2B30", Offset = "0x9E2B30", VA = "0x9E2B30", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x9E2C94", Offset = "0x9E2C94", VA = "0x9E2C94", Slot = "134")]
	protected override void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x9E2CA4", Offset = "0x9E2CA4", VA = "0x9E2CA4")]
	public BlockOnlyObjectToBlock()
	{
	}
}
[Token(Token = "0x2000165")]
public class DodgeOnlyAppearanceEffectColorChanger : MonoBehaviour, UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x6000655")]
	[Address(RVA = "0x9FC31C", Offset = "0x9FC31C", VA = "0x9FC31C", Slot = "4")]
	public void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x9FC320", Offset = "0x9FC320", VA = "0x9FC320")]
	public DodgeOnlyAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x2000166")]
public class DodgeOnlyFragmentingObjectToBlock : ObjectToBlock
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	protected GameObject body;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[SerializeField]
	protected GameObject spike;

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x9FC328", Offset = "0x9FC328", VA = "0x9FC328", Slot = "119")]
	public override bool isDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x9FC330", Offset = "0x9FC330", VA = "0x9FC330", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9FC4A4", Offset = "0x9FC4A4", VA = "0x9FC4A4", Slot = "37")]
	protected override Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9FC4AC", Offset = "0x9FC4AC", VA = "0x9FC4AC", Slot = "95")]
	protected override GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9FC4B4", Offset = "0x9FC4B4", VA = "0x9FC4B4", Slot = "117")]
	protected override GameObject getPrefabToInstantiateOnDestruction(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9FC4BC", Offset = "0x9FC4BC", VA = "0x9FC4BC", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x9FC558", Offset = "0x9FC558", VA = "0x9FC558", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9FC754", Offset = "0x9FC754", VA = "0x9FC754")]
	public DodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000167")]
public class FlatLargeDodgeOnlyFragmentingObjectToBlock : LargeDodgeOnlyFragmentingObjectToBlock
{
	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA0A568", Offset = "0xA0A568", VA = "0xA0A568", Slot = "122")]
	protected override void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA0A5C0", Offset = "0xA0A5C0", VA = "0xA0A5C0", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA0A7B4", Offset = "0xA0A7B4", VA = "0xA0A7B4", Slot = "125")]
	protected override void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xA0A81C", Offset = "0xA0A81C", VA = "0xA0A81C")]
	public FlatLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000168")]
public class FragmentingObjectToBlock : FragmentingCoordinationCoachObject
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private BlockIncomingObjectsGameController.FragmentingObjectsToBlockType fragmentingObjectsToBlockType;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	protected BlockIncomingObjectsGameController blockIncomingObjectsGameController;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	protected long activationTimeLong;

	[Token(Token = "0x1700008B")]
	public BlockIncomingObjectsGameController BlockingObjectGameController
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xABC684", Offset = "0xABC684", VA = "0xABC684")]
		get
		{
			return null;
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xABC68C", Offset = "0xABC68C", VA = "0xABC68C")]
		set
		{
		}
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xABC57C", Offset = "0xABC57C", VA = "0xABC57C", Slot = "118")]
	public virtual bool isBlockOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xABC584", Offset = "0xABC584", VA = "0xABC584", Slot = "119")]
	public virtual bool isDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xABC58C", Offset = "0xABC58C", VA = "0xABC58C")]
	public void updateActivationTime()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xABC610", Offset = "0xABC610", VA = "0xABC610")]
	public long getActivationTime()
	{
		return default(long);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xABC618", Offset = "0xABC618", VA = "0xABC618", Slot = "17")]
	protected override void prepareForReturnToGameSpecific()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xABC648", Offset = "0xABC648", VA = "0xABC648", Slot = "45")]
	protected override void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xABC69C", Offset = "0xABC69C", VA = "0xABC69C", Slot = "12")]
	public override void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xABC6D8", Offset = "0xABC6D8", VA = "0xABC6D8", Slot = "92")]
	protected override void collidedWithNonPlayerObject(Collider collider)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xABC774", Offset = "0xABC774", VA = "0xABC774", Slot = "120")]
	protected virtual void setPositionToFreshStartPosition()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xABC778", Offset = "0xABC778", VA = "0xABC778", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xABC7EC", Offset = "0xABC7EC", VA = "0xABC7EC", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xABC9C4", Offset = "0xABC9C4", VA = "0xABC9C4", Slot = "22")]
	protected override void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xABCB1C", Offset = "0xABCB1C", VA = "0xABCB1C", Slot = "15")]
	public override void updatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xABCBFC", Offset = "0xABCBFC", VA = "0xABCBFC", Slot = "95")]
	protected override GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xABCC48", Offset = "0xABCC48", VA = "0xABCC48", Slot = "7")]
	public override void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xABCCD8", Offset = "0xABCCD8", VA = "0xABCCD8", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xABCD74", Offset = "0xABCD74", VA = "0xABCD74")]
	public BlockIncomingObjectsGameController.FragmentingObjectsToBlockType getFragmentingObjectsToBlockType()
	{
		return default(BlockIncomingObjectsGameController.FragmentingObjectsToBlockType);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xABCD7C", Offset = "0xABCD7C", VA = "0xABCD7C", Slot = "114")]
	public override void preloadPlayerScoredPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xABCDDC", Offset = "0xABCDDC", VA = "0xABCDDC", Slot = "115")]
	public override void preloadPlayerLostPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xABCE3C", Offset = "0xABCE3C", VA = "0xABCE3C")]
	public void preloadHitPlayerEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xABCE9C", Offset = "0xABCE9C", VA = "0xABCE9C", Slot = "21")]
	protected override void destroySpecificPrefabs()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xABD0AC", Offset = "0xABD0AC", VA = "0xABD0AC")]
	public FragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000169")]
public class LargeDodgeOnlyFragmentingObjectToBlock : DodgeOnlyFragmentingObjectToBlock
{
	[Token(Token = "0x600067B")]
	[Address(RVA = "0x157ABF0", Offset = "0x157ABF0", VA = "0x157ABF0", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x157AD10", Offset = "0x157AD10", VA = "0x157AD10", Slot = "121")]
	public override void performStartMovementTowardsTargetCalculations()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x157AD88", Offset = "0x157AD88", VA = "0x157AD88", Slot = "125")]
	protected override void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x157ADF4", Offset = "0x157ADF4", VA = "0x157ADF4", Slot = "126")]
	protected override bool isUpdateBeepControllerTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x157ADFC", Offset = "0x157ADFC", VA = "0x157ADFC", Slot = "123")]
	protected override void checkDodgeOtherObjects()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x157AE00", Offset = "0x157AE00", VA = "0x157AE00", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x157AEA4", Offset = "0x157AEA4", VA = "0x157AEA4", Slot = "138")]
	protected new virtual void rotateTowardsTarget()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x157AEA8", Offset = "0x157AEA8", VA = "0x157AEA8", Slot = "124")]
	protected override bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x157AEB0", Offset = "0x157AEB0", VA = "0x157AEB0", Slot = "73")]
	protected override void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x157AEF0", Offset = "0x157AEF0", VA = "0x157AEF0", Slot = "107")]
	public override int getPointsValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x157AEF8", Offset = "0x157AEF8", VA = "0x157AEF8", Slot = "136")]
	public override bool isLargeObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x157AF00", Offset = "0x157AF00", VA = "0x157AF00", Slot = "122")]
	protected override void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x157AF5C", Offset = "0x157AF5C", VA = "0x157AF5C", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x157AFF8", Offset = "0x157AFF8", VA = "0x157AFF8", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x157B1F4", Offset = "0x157B1F4", VA = "0x157B1F4")]
	public LargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x200016A")]
public class LargeObjectToBlockFracturedObjectInfo : ObjectToBlockFracturedObjectInfo
{
	[Token(Token = "0x600068A")]
	[Address(RVA = "0x157B1FC", Offset = "0x157B1FC", VA = "0x157B1FC", Slot = "7")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x157B298", Offset = "0x157B298", VA = "0x157B298")]
	public LargeObjectToBlockFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x200016B")]
public class ObjectToBlock : FragmentingObjectToBlock
{
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59657C", Offset = "0x59657C")]
	private sealed class <startDisappearanceMovementCoroutine>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlock <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x8F6974", Offset = "0x8F6974", VA = "0x8F6974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x8F69BC", Offset = "0x8F69BC", VA = "0x8F69BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x8F68C0", Offset = "0x8F68C0", VA = "0x8F68C0")]
		[DebuggerHidden]
		public <startDisappearanceMovementCoroutine>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x8F68EC", Offset = "0x8F68EC", VA = "0x8F68EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x8F68F0", Offset = "0x8F68F0", VA = "0x8F68F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x8F697C", Offset = "0x8F697C", VA = "0x8F697C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool startMovement;

	[Token(Token = "0x4000798")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.2f;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected GameObject[] targetGameObjects;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	protected bool continueTracking;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	protected Transform currentTargetTransform;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Vector3 fakeTargetPosition;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	protected Vector3 correctionalPosition;

	[Token(Token = "0x400079E")]
	private const float OBJECT_TO_BLOCK_BEZIER_CURVE_MULTIPLIER = 0.5f;

	[Token(Token = "0x400079F")]
	private const float POSITIONAL_CORRECTION_MOVEMENT_SPEED = 1f;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private float distanceToCheckForCollisionWithOtherObject;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private int raycastLayer;

	[Token(Token = "0x40007A2")]
	private const float FIRST_DISTANCE_TRAVELED_LIMIT = 0.3f;

	[Token(Token = "0x40007A3")]
	private const float FIRST_DISTANCE_TO_PLAYER_LIMIT = 0.8f;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool firstDistanceLimitCrossed;

	[Token(Token = "0x40007A5")]
	private const float SECOND_DISTANCE_TRAVELED_LIMIT = 0.7f;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x329")]
	protected bool secondDistanceLimitCrossed;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float defaultDistanceToPlayerDivider;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float distanceFromOriginalStartingPosToTarget;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private bool curvedMovementOnly;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	protected float originalJourneyTime;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	protected float ROTATION_SPEED_MULTIPLIER;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected float DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	protected float lerpPercentageToStartDisappearanceEffect;

	[Token(Token = "0x40007AE")]
	private const float DISAPPEARANCE_EFFECT_DURATION = 1f;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	protected bool disappearanceEffectStarted;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	protected bool disappearanceRotationFinished;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34A")]
	protected bool disappearanceAudioPlayed;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	protected WarningBeepController warningBeepController;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB0016C", Offset = "0xB0016C", VA = "0xB0016C")]
	public void setCurrentTargetTransform(Transform targetTransform)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB0017C", Offset = "0xB0017C", VA = "0xB0017C")]
	public void performGenericSetup(GameObject[] targetGameObjects, float speed, int index)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xB00254", Offset = "0xB00254", VA = "0xB00254", Slot = "23")]
	protected override void instantiateSpecificPrefabs()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB00478", Offset = "0xB00478", VA = "0xB00478")]
	public void performSetupForMovement(bool curvedMovementOnly)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB004E4", Offset = "0xB004E4", VA = "0xB004E4")]
	public void performSetupWithoutMovementStart(bool curvedMovementOnly)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB00548", Offset = "0xB00548", VA = "0xB00548")]
	public void setStartMovement(bool input)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB00554", Offset = "0xB00554", VA = "0xB00554", Slot = "121")]
	public virtual void performStartMovementTowardsTargetCalculations()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB006E8", Offset = "0xB006E8", VA = "0xB006E8")]
	private float getPercentageOfDistanceToTargetCovered()
	{
		return default(float);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB00678", Offset = "0xB00678", VA = "0xB00678")]
	protected void updateDistanceFromOriginalStartingPosToTarget()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB007B0", Offset = "0xB007B0", VA = "0xB007B0", Slot = "65")]
	protected override void updateDistanceFromCurrentStartingPosToTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB00860", Offset = "0xB00860", VA = "0xB00860", Slot = "122")]
	protected virtual void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB008D0", Offset = "0xB008D0", VA = "0xB008D0")]
	private void chooseNewTargetTransform()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB00A84", Offset = "0xB00A84", VA = "0xB00A84", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xB00BD8", Offset = "0xB00BD8", VA = "0xB00BD8", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xB00CEC", Offset = "0xB00CEC", VA = "0xB00CEC", Slot = "123")]
	protected virtual void checkDodgeOtherObjects()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xB00F88", Offset = "0xB00F88", VA = "0xB00F88", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xB01138", Offset = "0xB01138", VA = "0xB01138", Slot = "124")]
	protected virtual bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xB01140", Offset = "0xB01140", VA = "0xB01140")]
	protected void recalculateMovementSpeedValues()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xB00E30", Offset = "0xB00E30", VA = "0xB00E30")]
	protected void dodgeOtherObject()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xB011CC", Offset = "0xB011CC", VA = "0xB011CC")]
	private void positionCorrectionFinished()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xB00D34", Offset = "0xB00D34", VA = "0xB00D34")]
	private void checkIfOtherObjectInPath()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB012A0", Offset = "0xB012A0", VA = "0xB012A0")]
	private void moveAwayFromOtherObject(GameObject objectToAvoid)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB01354", Offset = "0xB01354", VA = "0xB01354")]
	public CurrentSpecialAction GetCurrentAction()
	{
		return default(CurrentSpecialAction);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB0135C", Offset = "0xB0135C", VA = "0xB0135C", Slot = "26")]
	protected override void updateMovementMode()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB011D4", Offset = "0xB011D4", VA = "0xB011D4")]
	private GameObject getObjectInMovementPath()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xB013D4", Offset = "0xB013D4", VA = "0xB013D4")]
	private RaycastHit createRaycast()
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB00CDC", Offset = "0xB00CDC", VA = "0xB00CDC")]
	protected bool noCurrentSpecialAction()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB014BC", Offset = "0xB014BC", VA = "0xB014BC", Slot = "79")]
	protected override void performMovement()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xB01804", Offset = "0xB01804", VA = "0xB01804", Slot = "125")]
	protected virtual void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xB01840", Offset = "0xB01840", VA = "0xB01840", Slot = "126")]
	protected virtual bool isUpdateBeepControllerTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB01850", Offset = "0xB01850", VA = "0xB01850", Slot = "84")]
	protected override Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB01980", Offset = "0xB01980", VA = "0xB01980", Slot = "86")]
	protected override float getMTimerCorrectedBezier(float mTimer, Vector3 targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB0198C", Offset = "0xB0198C", VA = "0xB0198C", Slot = "66")]
	protected override float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xB019D4", Offset = "0xB019D4", VA = "0xB019D4")]
	private float getPercentageOfDistanceCrossedFromStartingPos()
	{
		return default(float);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xB01A5C", Offset = "0xB01A5C", VA = "0xB01A5C", Slot = "127")]
	protected virtual void checkIfUpdateMovementAndTarget()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xB01B80", Offset = "0xB01B80", VA = "0xB01B80", Slot = "128")]
	protected virtual void performOnSecondDistanceLimitCrossed()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xB01B9C", Offset = "0xB01B9C", VA = "0xB01B9C", Slot = "129")]
	protected virtual void updateMovementAndTarget()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB01180", Offset = "0xB01180", VA = "0xB01180")]
	private void updateMovementValues()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB00AE4", Offset = "0xB00AE4", VA = "0xB00AE4")]
	public void updateMovementSpeedRelativeToBaseParameterDistance()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB01C9C", Offset = "0xB01C9C", VA = "0xB01C9C", Slot = "130")]
	protected virtual Vector3 getCurrentTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB01CD8", Offset = "0xB01CD8", VA = "0xB01CD8", Slot = "25")]
	protected override void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB01E74", Offset = "0xB01E74", VA = "0xB01E74", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB01EE8", Offset = "0xB01EE8", VA = "0xB01EE8", Slot = "131")]
	protected virtual void updateBezierCurveEndpoint()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB01F24", Offset = "0xB01F24", VA = "0xB01F24", Slot = "132")]
	protected virtual void rotateTowardsTarget()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB0201C", Offset = "0xB0201C", VA = "0xB0201C", Slot = "133")]
	protected virtual void performRotationCorrection()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB01C4C", Offset = "0xB01C4C", VA = "0xB01C4C")]
	private bool isChangeTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB01C74", Offset = "0xB01C74", VA = "0xB01C74")]
	private bool isChangeMovementMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB0060C", Offset = "0xB0060C", VA = "0xB0060C")]
	protected void updateFakeTargetPosition()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB021D4", Offset = "0xB021D4", VA = "0xB021D4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB02318", Offset = "0xB02318", VA = "0xB02318", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB023D4", Offset = "0xB023D4", VA = "0xB023D4", Slot = "134")]
	protected virtual void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB02468", Offset = "0xB02468", VA = "0xB02468", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB010D0", Offset = "0xB010D0", VA = "0xB010D0")]
	protected void startFinalDisappearanceMovement()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB02478", Offset = "0xB02478", VA = "0xB02478", Slot = "135")]
	protected virtual void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB02588", Offset = "0xB02588", VA = "0xB02588", Slot = "50")]
	public override void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB02818", Offset = "0xB02818", VA = "0xB02818", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB02900", Offset = "0xB02900", VA = "0xB02900", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB02910", Offset = "0xB02910", VA = "0xB02910", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB02944", Offset = "0xB02944", VA = "0xB02944", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB029C8", Offset = "0xB029C8", VA = "0xB029C8", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB02B04", Offset = "0xB02B04", VA = "0xB02B04", Slot = "69")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F19C", Offset = "0x59F19C")]
	protected override IEnumerator startDisappearanceMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB02454", Offset = "0xB02454", VA = "0xB02454")]
	protected float calculateLerpPercentageToStartDisappearanceEffect()
	{
		return default(float);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB02B7C", Offset = "0xB02B7C", VA = "0xB02B7C")]
	public Transform getTargetTransform()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB02B84", Offset = "0xB02B84", VA = "0xB02B84", Slot = "136")]
	public virtual bool isLargeObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB02B8C", Offset = "0xB02B8C", VA = "0xB02B8C", Slot = "137")]
	public virtual void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB02B94", Offset = "0xB02B94", VA = "0xB02B94", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB02BAC", Offset = "0xB02BAC", VA = "0xB02BAC")]
	public ObjectToBlock()
	{
	}
}
[Token(Token = "0x200016D")]
public class ObjectToBlockActivationTypeTester : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FragmentingObjectToBlock frag;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB02C8C", Offset = "0xB02C8C", VA = "0xB02C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB02D08", Offset = "0xB02D08", VA = "0xB02D08")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB02D0C", Offset = "0xB02D0C", VA = "0xB02D0C")]
	public ObjectToBlockActivationTypeTester()
	{
	}
}
[Token(Token = "0x200016E")]
public class ObjectToBlockTestActivator : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59658C", Offset = "0x59658C")]
	private sealed class <startSphereObjectMovement>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlockTestActivator <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x8F6E8C", Offset = "0x8F6E8C", VA = "0x8F6E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x8F6ED4", Offset = "0x8F6ED4", VA = "0x8F6ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x8F6B94", Offset = "0x8F6B94", VA = "0x8F6B94")]
		[DebuggerHidden]
		public <startSphereObjectMovement>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x8F6BC0", Offset = "0x8F6BC0", VA = "0x8F6BC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x8F6BC4", Offset = "0x8F6BC4", VA = "0x8F6BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x8F6E94", Offset = "0x8F6E94", VA = "0x8F6E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59659C", Offset = "0x59659C")]
	private sealed class <startObjectToBlockMovement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlockTestActivator <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0x8F6B44", Offset = "0x8F6B44", VA = "0x8F6B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x8F6B8C", Offset = "0x8F6B8C", VA = "0x8F6B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x8F69C4", Offset = "0x8F69C4", VA = "0x8F69C4")]
		[DebuggerHidden]
		public <startObjectToBlockMovement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x8F69F0", Offset = "0x8F69F0", VA = "0x8F69F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x8F69F4", Offset = "0x8F69F4", VA = "0x8F69F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x8F6B4C", Offset = "0x8F6B4C", VA = "0x8F6B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObjectToBlock[] objectToBlockToActivate;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectToBlock[] objectsToBlockSetMovementAllowedTrue;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BlockIncomingObjectsSphereGameObject[] sphereGameObjects;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject fracturedPrefab;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB02FB8", Offset = "0xB02FB8", VA = "0xB02FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB02FFC", Offset = "0xB02FFC", VA = "0xB02FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F24C", Offset = "0x59F24C")]
	private IEnumerator startSphereObjectMovement()
	{
		return null;
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB03074", Offset = "0xB03074", VA = "0xB03074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F2AC", Offset = "0x59F2AC")]
	private IEnumerator startObjectToBlockMovement()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB030EC", Offset = "0xB030EC", VA = "0xB030EC")]
	public ObjectToBlockTestActivator()
	{
	}
}
[Token(Token = "0x2000171")]
public class TesterBlockIncomingObjectsPositionHelper : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsObjectCreationPositionHelper;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] gameObjects;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> gameObjectsArrayList;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xF12154", Offset = "0xF12154", VA = "0xF12154")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xF121F4", Offset = "0xF121F4", VA = "0xF121F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xF12680", Offset = "0xF12680", VA = "0xF12680")]
	public List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xF12688", Offset = "0xF12688", VA = "0xF12688")]
	public TesterBlockIncomingObjectsPositionHelper()
	{
	}
}
[Token(Token = "0x2000172")]
public class TutorialBlockIncomingObjectsSphereGameObject : BlockIncomingObjectsSphereGameObject, TutorialObjectInterface
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool disappearanceForced;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private TutorialController tutorialController;

	[Token(Token = "0x17000092")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xF188CC", Offset = "0xF188CC", VA = "0xF188CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xF188D4", Offset = "0xF188D4", VA = "0xF188D4")]
		set
		{
		}
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xF188E4", Offset = "0xF188E4", VA = "0xF188E4", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xF18A8C", Offset = "0xF18A8C", VA = "0xF18A8C", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xF18AC0", Offset = "0xF18AC0", VA = "0xF18AC0", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xF18B00", Offset = "0xF18B00", VA = "0xF18B00", Slot = "121")]
	public override void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xF18C64", Offset = "0xF18C64", VA = "0xF18C64", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xF18CA4", Offset = "0xF18CA4", VA = "0xF18CA4", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xF18D00", Offset = "0xF18D00", VA = "0xF18D00", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xF18D98", Offset = "0xF18D98", VA = "0xF18D98", Slot = "122")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xF18DA8", Offset = "0xF18DA8", VA = "0xF18DA8", Slot = "123")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xF18DB4", Offset = "0xF18DB4", VA = "0xF18DB4")]
	public TutorialBlockIncomingObjectsSphereGameObject()
	{
	}
}
[Token(Token = "0x2000173")]
public class TutorialBlockOnlyObjectToBlock : BlockOnlyObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool disappearanceForced;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	protected float TUTORIAL_BACKWARDS_DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x17000093")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xF18DBC", Offset = "0xF18DBC", VA = "0xF18DBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xF18DC4", Offset = "0xF18DC4", VA = "0xF18DC4")]
		set
		{
		}
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xF18DD4", Offset = "0xF18DD4", VA = "0xF18DD4", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xF18E34", Offset = "0xF18E34", VA = "0xF18E34", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xF18FD8", Offset = "0xF18FD8", VA = "0xF18FD8", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xF1900C", Offset = "0xF1900C", VA = "0xF1900C", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xF1904C", Offset = "0xF1904C", VA = "0xF1904C", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xF1908C", Offset = "0xF1908C", VA = "0xF1908C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xF19100", Offset = "0xF19100", VA = "0xF19100", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xF19140", Offset = "0xF19140", VA = "0xF19140", Slot = "134")]
	protected override void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xF191C4", Offset = "0xF191C4", VA = "0xF191C4", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xF191D4", Offset = "0xF191D4", VA = "0xF191D4", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xF19368", Offset = "0xF19368", VA = "0xF19368", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xF1937C", Offset = "0xF1937C", VA = "0xF1937C", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xF193FC", Offset = "0xF193FC", VA = "0xF193FC", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xF19484", Offset = "0xF19484", VA = "0xF19484", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xF19604", Offset = "0xF19604", VA = "0xF19604")]
	public TutorialBlockOnlyObjectToBlock()
	{
	}
}
[Token(Token = "0x2000174")]
public class TutorialDodgeOnlyFragmentingObjectToBlock : DodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x17000094")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000709")]
		[Address(RVA = "0xF1B520", Offset = "0xF1B520", VA = "0xF1B520")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070A")]
		[Address(RVA = "0xF1B528", Offset = "0xF1B528", VA = "0xF1B528")]
		set
		{
		}
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xF1B538", Offset = "0xF1B538", VA = "0xF1B538", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xF1B598", Offset = "0xF1B598", VA = "0xF1B598", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xF1B724", Offset = "0xF1B724", VA = "0xF1B724", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xF1B758", Offset = "0xF1B758", VA = "0xF1B758", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xF1B798", Offset = "0xF1B798", VA = "0xF1B798", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xF1B7D8", Offset = "0xF1B7D8", VA = "0xF1B7D8", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xF1B84C", Offset = "0xF1B84C", VA = "0xF1B84C", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xF1B88C", Offset = "0xF1B88C", VA = "0xF1B88C", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xF1B89C", Offset = "0xF1B89C", VA = "0xF1B89C", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xF1BA30", Offset = "0xF1BA30", VA = "0xF1BA30", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF1BA44", Offset = "0xF1BA44", VA = "0xF1BA44", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xF1BACC", Offset = "0xF1BACC", VA = "0xF1BACC", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xF1BB4C", Offset = "0xF1BB4C", VA = "0xF1BB4C", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xF1BCD4", Offset = "0xF1BCD4", VA = "0xF1BCD4")]
	public TutorialDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000175")]
public class TutorialFlatLargeDodgeOnlyFragmentingObjectToBlock : FlatLargeDodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x17000095")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xF1C204", Offset = "0xF1C204", VA = "0xF1C204")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0xF1C20C", Offset = "0xF1C20C", VA = "0xF1C20C")]
		set
		{
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xF1C21C", Offset = "0xF1C21C", VA = "0xF1C21C", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xF1C27C", Offset = "0xF1C27C", VA = "0xF1C27C", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xF1C408", Offset = "0xF1C408", VA = "0xF1C408", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xF1C43C", Offset = "0xF1C43C", VA = "0xF1C43C", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xF1C47C", Offset = "0xF1C47C", VA = "0xF1C47C", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xF1C4BC", Offset = "0xF1C4BC", VA = "0xF1C4BC", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xF1C52C", Offset = "0xF1C52C", VA = "0xF1C52C", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xF1C56C", Offset = "0xF1C56C", VA = "0xF1C56C", Slot = "139")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xF1C57C", Offset = "0xF1C57C", VA = "0xF1C57C", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xF1C710", Offset = "0xF1C710", VA = "0xF1C710", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xF1C798", Offset = "0xF1C798", VA = "0xF1C798", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xF1C7AC", Offset = "0xF1C7AC", VA = "0xF1C7AC", Slot = "140")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xF1C82C", Offset = "0xF1C82C", VA = "0xF1C82C", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF1C9AC", Offset = "0xF1C9AC", VA = "0xF1C9AC")]
	public TutorialFlatLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000176")]
public class TutorialLargeDodgeOnlyFragmentingObjectToBlock : LargeDodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x17000096")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0xF1C9B4", Offset = "0xF1C9B4", VA = "0xF1C9B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0xF1C9BC", Offset = "0xF1C9BC", VA = "0xF1C9BC")]
		set
		{
		}
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF1C9CC", Offset = "0xF1C9CC", VA = "0xF1C9CC", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF1CA2C", Offset = "0xF1CA2C", VA = "0xF1CA2C", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF1CBB8", Offset = "0xF1CBB8", VA = "0xF1CBB8", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF1CBEC", Offset = "0xF1CBEC", VA = "0xF1CBEC", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF1CC2C", Offset = "0xF1CC2C", VA = "0xF1CC2C", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF1CC6C", Offset = "0xF1CC6C", VA = "0xF1CC6C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xF1CD38", Offset = "0xF1CD38", VA = "0xF1CD38", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xF1CD78", Offset = "0xF1CD78", VA = "0xF1CD78", Slot = "139")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xF1CD88", Offset = "0xF1CD88", VA = "0xF1CD88", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xF1CF1C", Offset = "0xF1CF1C", VA = "0xF1CF1C", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xF1CF30", Offset = "0xF1CF30", VA = "0xF1CF30", Slot = "140")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xF1CFB0", Offset = "0xF1CFB0", VA = "0xF1CFB0", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xF1D038", Offset = "0xF1D038", VA = "0xF1D038", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xF1D1B8", Offset = "0xF1D1B8", VA = "0xF1D1B8")]
	public TutorialLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000177")]
public class TutorialObjectToBlock : ObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool disappearanceForced;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float TUTORIAL_BACKWARDS_DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FORCED_DISAPPEARANCE_SPEED;

	[Token(Token = "0x17000097")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0xF1DE84", Offset = "0xF1DE84", VA = "0xF1DE84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073A")]
		[Address(RVA = "0xF1DE8C", Offset = "0xF1DE8C", VA = "0xF1DE8C")]
		set
		{
		}
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xF1DE9C", Offset = "0xF1DE9C", VA = "0xF1DE9C", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xF1DEFC", Offset = "0xF1DEFC", VA = "0xF1DEFC", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xF1E0A4", Offset = "0xF1E0A4", VA = "0xF1E0A4", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xF1E0D8", Offset = "0xF1E0D8", VA = "0xF1E0D8", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xF1E118", Offset = "0xF1E118", VA = "0xF1E118", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xF1E158", Offset = "0xF1E158", VA = "0xF1E158", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xF1E1CC", Offset = "0xF1E1CC", VA = "0xF1E1CC", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xF1E20C", Offset = "0xF1E20C", VA = "0xF1E20C", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xF1E21C", Offset = "0xF1E21C", VA = "0xF1E21C", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xF1E3B0", Offset = "0xF1E3B0", VA = "0xF1E3B0", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xF1E3C4", Offset = "0xF1E3C4", VA = "0xF1E3C4", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xF1E44C", Offset = "0xF1E44C", VA = "0xF1E44C", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xF1E460", Offset = "0xF1E460", VA = "0xF1E460", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xF1E5E0", Offset = "0xF1E5E0", VA = "0xF1E5E0")]
	public TutorialObjectToBlock()
	{
	}
}
[Token(Token = "0x2000178")]
public class EnduranceFracturedObjectInfo : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x2000179")]
	public enum EnduranceFragmentingObjectsType
	{
		[Token(Token = "0x40007D8")]
		NORMAL
	}

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceFragmentingObjectsType fragmentingObjectType;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectType;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x9FE044", Offset = "0x9FE044", VA = "0x9FE044")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x9FE0D4", Offset = "0x9FE0D4", VA = "0x9FE0D4")]
	public void setObjectType()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x9FE164", Offset = "0x9FE164", VA = "0x9FE164", Slot = "4")]
	public string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x9FE16C", Offset = "0x9FE16C", VA = "0x9FE16C", Slot = "7")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x9FE208", Offset = "0x9FE208", VA = "0x9FE208", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x9FE284", Offset = "0x9FE284", VA = "0x9FE284")]
	public EnduranceFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x200017A")]
public class EnduranceFracturedPrefabPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x6000750")]
	[Address(RVA = "0x9FE2E0", Offset = "0x9FE2E0", VA = "0x9FE2E0", Slot = "11")]
	protected override void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x9FE33C", Offset = "0x9FE33C", VA = "0x9FE33C", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x9FE3BC", Offset = "0x9FE3BC", VA = "0x9FE3BC", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x9FE42C", Offset = "0x9FE42C", VA = "0x9FE42C", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x9FE43C", Offset = "0x9FE43C", VA = "0x9FE43C")]
	public EnduranceFracturedPrefabPoolController()
	{
	}
}
[Token(Token = "0x200017B")]
public class EnduranceGameController : GameController
{
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965AC", Offset = "0x5965AC")]
	private sealed class <mainGameModeLoop>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceGameController <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x9F51AC", Offset = "0x9F51AC", VA = "0x9F51AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0x9F51F4", Offset = "0x9F51F4", VA = "0x9F51F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x9F4898", Offset = "0x9F4898", VA = "0x9F4898")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x9F48C4", Offset = "0x9F48C4", VA = "0x9F48C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x9F48C8", Offset = "0x9F48C8", VA = "0x9F48C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x9F51B4", Offset = "0x9F51B4", VA = "0x9F51B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string gameObjectType;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool noGameObjectsPresent;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool squatGameObjectActive;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool lastObjectJustRemoved;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private EnduranceGameModeParameterContainer enduranceGameModeParameterContainer;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int maxMovementCounter;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GameObject gameObjectBeingPointedAt;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private EnduranceSquatUnderneathObject enduranceSquatGameObject;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<EnduranceModePlane> enduranceModePlanes;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<EnduranceModePlane> enduranceModePlanesFarEnough;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private EnduranceModePlane previousMaxDistanceEndurancePlane;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool performPlaneDistanceCheck;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 playerPosZeroHeight;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x9FE444", Offset = "0x9FE444", VA = "0x9FE444", Slot = "8")]
	protected override void specificAwakeSetup()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x9FE558", Offset = "0x9FE558", VA = "0x9FE558", Slot = "35")]
	protected override void specificModePerformGameSetup()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x9FE7FC", Offset = "0x9FE7FC", VA = "0x9FE7FC", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x9FE928", Offset = "0x9FE928", VA = "0x9FE928", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F3AC", Offset = "0x59F3AC")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x9FE9A0", Offset = "0x9FE9A0", VA = "0x9FE9A0", Slot = "34")]
	protected override void performBeforeCountdownStartsSetup()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x9FEB28", Offset = "0x9FEB28", VA = "0x9FEB28")]
	private void initializePlaneAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x9FEC64", Offset = "0x9FEC64", VA = "0x9FEC64", Slot = "29")]
	protected override void specificGameModeStopGame()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x9FEDD8", Offset = "0x9FEDD8", VA = "0x9FEDD8")]
	private EnduranceModePlane getEnduranceModePlaneForObjectAppearance()
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x9FEFC8", Offset = "0x9FEFC8", VA = "0x9FEFC8")]
	private void updateEndurancePlanesFarEnough()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x9FF328", Offset = "0x9FF328", VA = "0x9FF328")]
	private EnduranceModePlane getEndurancePlaneAtMaximumDistanceFromPlayer()
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x9FF4AC", Offset = "0x9FF4AC", VA = "0x9FF4AC")]
	private GameObject startObjectAppearance(PositionAndRotationContainer positionAndRotationContainer)
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x9FF60C", Offset = "0x9FF60C", VA = "0x9FF60C", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x9FF6E4", Offset = "0x9FF6E4", VA = "0x9FF6E4")]
	private void removeObjectFromActiveObjects(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x9FF938", Offset = "0x9FF938", VA = "0x9FF938", Slot = "51")]
	public override void returnObjectToObjectPool(GameObject objectToReturnToPool)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x9FF838", Offset = "0x9FF838", VA = "0x9FF838")]
	private void lastObjectJustRemovedFromActiveObjects()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x9FFA8C", Offset = "0x9FFA8C", VA = "0x9FFA8C")]
	public void squatGameObjectReachedStartingPosition()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x9FFAC4", Offset = "0x9FFAC4", VA = "0x9FFAC4", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x9FFB7C", Offset = "0x9FFB7C", VA = "0x9FFB7C", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x9FFBD0", Offset = "0x9FFBD0", VA = "0x9FFBD0")]
	public void setEnduranceModePlanes(List<EnduranceModePlane> enduranceModePlanes)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x9FFBE0", Offset = "0x9FFBE0", VA = "0x9FFBE0", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x9FFCB8", Offset = "0x9FFCB8", VA = "0x9FFCB8", Slot = "54")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x9FFD94", Offset = "0x9FFD94", VA = "0x9FFD94", Slot = "56")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x9FFE70", Offset = "0x9FFE70", VA = "0x9FFE70", Slot = "20")]
	protected override void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x9FFFC0", Offset = "0x9FFFC0", VA = "0x9FFFC0", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA00050", Offset = "0xA00050", VA = "0xA00050", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA00204", Offset = "0xA00204", VA = "0xA00204", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA003F8", Offset = "0xA003F8", VA = "0xA003F8")]
	public EnduranceGameController()
	{
	}
}
[Token(Token = "0x200017D")]
public class EnduranceGameLoopSimulator : MonoBehaviour
{
	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA004EC", Offset = "0xA004EC", VA = "0xA004EC")]
	public EnduranceGameLoopSimulator()
	{
	}
}
[Token(Token = "0x200017E")]
public class EnduranceGameModeParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x200017F")]
	public enum ENDURANCE_GAME_MODES
	{
		[Token(Token = "0x4000803")]
		NORMAL,
		[Token(Token = "0x4000804")]
		MAX_MOVEMENT
	}

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private ENDURANCE_GAME_MODES currentGameMode;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_DISTANCE_BETWEEN_PLAYER_AND_CREATION_PLANE;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float MIN_DISTANCE_BETWEEN_PLAYER_AND_OBJECT;

	[Token(Token = "0x40007F2")]
	private const string GAME_MODE_NAME = "ENDURANCE_MODE";

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool squat_object_active;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float TUTORIAL_SQUAT_OBJECT_MOVEMENT_SPEED;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float TUTORIAL_OBJECT_MOVEMENT_SPEED;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float TUTORIAL_OBJECT_ACTIVATION_DURATION;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float squatObjectJourneyTime;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float squatObjectReturnJourneyTime;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool enduranceObjectsMove;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int amountOfObjectsToActivate;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float enduranceObjectMovementSpeed;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float enduranceObjectTimeToDisappearance;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float enduranceObjectMovementAmount;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float enduranceObjectSize;

	[Token(Token = "0x4000800")]
	private const string SQUAT_OBJECT_ACTIVE_STRING = "SQUAT_OBJECT_ACTIVE";

	[Token(Token = "0x4000801")]
	private const string SQUAT_ACTIVE_PREFERENCES_VALUE = "SQUAT_ACTIVE";

	[Token(Token = "0x1700009A")]
	public static bool EnduranceObjectsMove
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xA004F4", Offset = "0xA004F4", VA = "0xA004F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	public static int AmountOfObjectsToActivate
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xA00558", Offset = "0xA00558", VA = "0xA00558")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	public static float EnduranceObjectMovementSpeed
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0xA005BC", Offset = "0xA005BC", VA = "0xA005BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public static float EnduranceObjectTimeToDisappearance
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0xA00620", Offset = "0xA00620", VA = "0xA00620")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009E")]
	public static float EnduranceObjectMovementAmount
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0xA00684", Offset = "0xA00684", VA = "0xA00684")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009F")]
	public ENDURANCE_GAME_MODES CurrentGameMode
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0xA006E8", Offset = "0xA006E8", VA = "0xA006E8")]
		get
		{
			return default(ENDURANCE_GAME_MODES);
		}
		[Token(Token = "0x600077D")]
		[Address(RVA = "0xA006F0", Offset = "0xA006F0", VA = "0xA006F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static float SquatObjectJourneyTime
	{
		[Token(Token = "0x600077E")]
		[Address(RVA = "0xA006F8", Offset = "0xA006F8", VA = "0xA006F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A1")]
	public static float SquatObjectReturnJourneyTime
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0xA0075C", Offset = "0xA0075C", VA = "0xA0075C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A2")]
	public static float EnduranceObjectSize
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0xA007C0", Offset = "0xA007C0", VA = "0xA007C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000781")]
		[Address(RVA = "0xA00824", Offset = "0xA00824", VA = "0xA00824")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public static bool Squat_object_active
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0xA00894", Offset = "0xA00894", VA = "0xA00894")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000783")]
		[Address(RVA = "0xA008F8", Offset = "0xA008F8", VA = "0xA008F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA00964", Offset = "0xA00964", VA = "0xA00964", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA0096C", Offset = "0xA0096C", VA = "0xA0096C", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA00B88", Offset = "0xA00B88", VA = "0xA00B88", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA00BCC", Offset = "0xA00BCC", VA = "0xA00BCC", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA00EF4", Offset = "0xA00EF4", VA = "0xA00EF4")]
	public static float getSquatObjectRetournJourneyTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA00FC4", Offset = "0xA00FC4", VA = "0xA00FC4", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA01050", Offset = "0xA01050", VA = "0xA01050", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA0135C", Offset = "0xA0135C", VA = "0xA0135C")]
	public static void saveSquatObjectActiveValue()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA01214", Offset = "0xA01214", VA = "0xA01214")]
	private static string getSquatObjectPreferencesString()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA013EC", Offset = "0xA013EC", VA = "0xA013EC")]
	public EnduranceGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x2000180")]
public class EnduranceGameObjectPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private EnduranceFracturedPrefabPoolController enduranceFracturedPrefabPoolController;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x4000808")]
	private const int effectDuration = 2;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool playAreaSet;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float activationDurationMultiplier;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float regularXDistance;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float regularZDistance;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xA021D8", Offset = "0xA021D8", VA = "0xA021D8", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA02534", Offset = "0xA02534", VA = "0xA02534", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xA02544", Offset = "0xA02544", VA = "0xA02544", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xA02690", Offset = "0xA02690", VA = "0xA02690", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xA027D4", Offset = "0xA027D4", VA = "0xA027D4")]
	public void enableObjectMovement(string objectType, float maxDistanceToMove, float movementSpeed, List<CoordinationCoachGameObject.MovementAxis> movementAxises, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xA02AF4", Offset = "0xA02AF4", VA = "0xA02AF4")]
	public void disableObjectMovement(string objectType)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xA02DA4", Offset = "0xA02DA4", VA = "0xA02DA4")]
	public EnduranceGameObjectPoolController()
	{
	}
}
[Token(Token = "0x2000181")]
public class EnduranceModeConstants
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 forwardPlaneRotation;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 leftPlaneRotation;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 rightPlaneRotation;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 backPlaneRotation;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Vector3 forwardObjectRotation;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static readonly Vector3 leftObjectRotation;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly Vector3 rightObjectRotation;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static readonly Vector3 backObjectRotation;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Vector3 forwardAppearanceCalculationVector;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static readonly Vector3 backAppearanceCalculationVector;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly Vector3 leftAppearanceCalculationVector;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static readonly Vector3 rightAppearanceCalculationVector;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xA02E90", Offset = "0xA02E90", VA = "0xA02E90")]
	public EnduranceModeConstants()
	{
	}
}
[Token(Token = "0x2000182")]
public class EnduranceModeGameObject : FragmentingCoordinationCoachObject
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965BC", Offset = "0x5965BC")]
	private sealed class <activeTimeCountdownCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnduranceModeGameObject <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x9F5314", Offset = "0x9F5314", VA = "0x9F5314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x9F535C", Offset = "0x9F535C", VA = "0x9F535C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x9F51FC", Offset = "0x9F51FC", VA = "0x9F51FC")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x9F5228", Offset = "0x9F5228", VA = "0x9F5228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x9F522C", Offset = "0x9F522C", VA = "0x9F522C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x9F531C", Offset = "0x9F531C", VA = "0x9F531C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081A")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.2f;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private EnduranceFracturedObjectInfo.EnduranceFragmentingObjectsType enduranceFragmentingObjectsType;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xA02FC4", Offset = "0xA02FC4", VA = "0xA02FC4")]
	public void startCountdown()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xA0308C", Offset = "0xA0308C", VA = "0xA0308C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xA03204", Offset = "0xA03204", VA = "0xA03204", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xA03254", Offset = "0xA03254", VA = "0xA03254", Slot = "94")]
	protected override void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xA03040", Offset = "0xA03040", VA = "0xA03040")]
	public void startCountdownToDeactivation()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xA03260", Offset = "0xA03260", VA = "0xA03260", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F45C", Offset = "0x59F45C")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xA032E8", Offset = "0xA032E8", VA = "0xA032E8", Slot = "118")]
	protected virtual void removeObjectFromGame(GameObject effectToPlay, Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xA0335C", Offset = "0xA0335C", VA = "0xA0335C", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xA033C8", Offset = "0xA033C8", VA = "0xA033C8", Slot = "104")]
	protected override void prepareObjectForReturnToGameObjectPool()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xA033CC", Offset = "0xA033CC", VA = "0xA033CC", Slot = "119")]
	public virtual void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xA03538", Offset = "0xA03538", VA = "0xA03538", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xA03714", Offset = "0xA03714", VA = "0xA03714", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xA03768", Offset = "0xA03768", VA = "0xA03768", Slot = "78")]
	public override void prePerformMovement()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA037C8", Offset = "0xA037C8", VA = "0xA037C8", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA03850", Offset = "0xA03850", VA = "0xA03850", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA038C4", Offset = "0xA038C4", VA = "0xA038C4", Slot = "50")]
	public override void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA03A8C", Offset = "0xA03A8C", VA = "0xA03A8C", Slot = "62")]
	protected override float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xA03A98", Offset = "0xA03A98", VA = "0xA03A98", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xA03A9C", Offset = "0xA03A9C", VA = "0xA03A9C", Slot = "60")]
	protected override GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xA03AA4", Offset = "0xA03AA4", VA = "0xA03AA4", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xA03B8C", Offset = "0xA03B8C", VA = "0xA03B8C", Slot = "67")]
	protected override float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xA03B94", Offset = "0xA03B94", VA = "0xA03B94", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xA03BD4", Offset = "0xA03BD4", VA = "0xA03BD4", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA03BF8", Offset = "0xA03BF8", VA = "0xA03BF8", Slot = "20")]
	protected override void destroyAppearanceAndDisappearanceEffect()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA03C6C", Offset = "0xA03C6C", VA = "0xA03C6C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA03CD4", Offset = "0xA03CD4", VA = "0xA03CD4")]
	public void appearancePositionReachedTest()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA03CE4", Offset = "0xA03CE4", VA = "0xA03CE4", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA03D20", Offset = "0xA03D20", VA = "0xA03D20", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xA03DBC", Offset = "0xA03DBC", VA = "0xA03DBC", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xA03EB8", Offset = "0xA03EB8", VA = "0xA03EB8", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA0401C", Offset = "0xA0401C", VA = "0xA0401C", Slot = "7")]
	public override void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA040AC", Offset = "0xA040AC", VA = "0xA040AC", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xA040C4", Offset = "0xA040C4", VA = "0xA040C4")]
	public EnduranceModeGameObject()
	{
	}
}
[Token(Token = "0x2000184")]
public class EnduranceModePlane : MonoBehaviour
{
	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 enduranceObjectRotation;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 appearancePosCalculationVector;

	[Token(Token = "0x4000823")]
	protected const float ADDITIONAL_DISTANCE_FROM_LIMIT = 0.15f;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int planeIndex;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 raycastHitPosition;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EnduranceModePlane leftPlane;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnduranceModePlane rightPlane;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float[] appearanceLimits;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float[] totalAppearanceArea;

	[Token(Token = "0x400082A")]
	protected const float RENDERER_MULTIPLIER = 1.5f;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float enduranceObjectSize;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float objectForwardAmount;

	[Token(Token = "0x400082D")]
	protected const float OBJECT_POSITIONING_FORWARD_MULTIPLIER = 2f;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float objectStartAppearancePosBackAmount;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Vector3 appearanceStartPosition;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 appearanceFinishedPosition;

	[Token(Token = "0x170000A6")]
	public Vector3 EnduranceObjectRotation
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xA040CC", Offset = "0xA040CC", VA = "0xA040CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xA040D8", Offset = "0xA040D8", VA = "0xA040D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector3 RaycastHitPosition
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xA040E4", Offset = "0xA040E4", VA = "0xA040E4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xA040F0", Offset = "0xA040F0", VA = "0xA040F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public Vector3 AppearancePosCalculationVector
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xA040FC", Offset = "0xA040FC", VA = "0xA040FC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xA04108", Offset = "0xA04108", VA = "0xA04108")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public EnduranceModePlane LeftPlane
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xA04114", Offset = "0xA04114", VA = "0xA04114")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xA0411C", Offset = "0xA0411C", VA = "0xA0411C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public EnduranceModePlane RightPlane
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xA04124", Offset = "0xA04124", VA = "0xA04124")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xA0412C", Offset = "0xA0412C", VA = "0xA0412C")]
		set
		{
		}
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA04134", Offset = "0xA04134", VA = "0xA04134")]
	public int getPlaneIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA0413C", Offset = "0xA0413C", VA = "0xA0413C", Slot = "4")]
	public virtual void initalizeAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xA043D0", Offset = "0xA043D0", VA = "0xA043D0", Slot = "5")]
	protected virtual void calculateTotalAppearanceArea()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xA04540", Offset = "0xA04540", VA = "0xA04540", Slot = "6")]
	public virtual Vector3 getRandomPosForObjectAppearance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xA045F0", Offset = "0xA045F0", VA = "0xA045F0", Slot = "7")]
	public virtual float[] getTotalApperanceArea()
	{
		return null;
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xA045F8", Offset = "0xA045F8", VA = "0xA045F8", Slot = "8")]
	public virtual Vector3 getLeftAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xA04690", Offset = "0xA04690", VA = "0xA04690", Slot = "9")]
	public virtual Vector3 getRightAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xA0205C", Offset = "0xA0205C", VA = "0xA0205C")]
	public Vector3 getAppearanceStartPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xA0472C", Offset = "0xA0472C", VA = "0xA0472C")]
	public void setAppearanceForwardAmount(float appearanceForward)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xA04734", Offset = "0xA04734", VA = "0xA04734")]
	public EnduranceModePlane()
	{
	}
}
[Token(Token = "0x2000185")]
public class EnduranceModePlaneCreationService : MonoBehaviour
{
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject enduranceModePlanePrefab;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftRightEnduranceModePlanePrefab;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x4000835")]
	private const int NUMBER_OF_PLANES_PER_SIDE = 4;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject enduranceGameModeObject;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnduranceGameController enduranceGameController;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PositionToBoundaryService positionToBoundaryService;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<EnduranceModePlane> allEndurancePlanes;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xA047CC", Offset = "0xA047CC", VA = "0xA047CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xA054E4", Offset = "0xA054E4", VA = "0xA054E4")]
	public List<EnduranceModePlane> getEnduranceModePlanes()
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA05008", Offset = "0xA05008", VA = "0xA05008")]
	private void connectPlanesToEachOther(EnduranceModePlane[] forwardPlanes, EnduranceModePlane[] rightPlanes, EnduranceModePlane[] backPlanes, EnduranceModePlane[] leftPlanes)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA04C58", Offset = "0xA04C58", VA = "0xA04C58")]
	private EnduranceModePlane[] createEnduranceModePlanes(GameObject prefabToInstantiate, float size, Vector3 planeRotationVector3, Vector3 activatedGameObjectRotationVector, Vector3 apperanceCalculationVector, Vector3[] positions)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA04B94", Offset = "0xA04B94", VA = "0xA04B94")]
	private Vector3[] getForwardOrBackPlanePositions(float xMin, float zPos, float size)
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA04F48", Offset = "0xA04F48", VA = "0xA04F48")]
	private Vector3[] getLeftOrRightPlanePositions(float zMin, float xPos, float size)
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA054EC", Offset = "0xA054EC", VA = "0xA054EC")]
	public EnduranceModePlaneCreationService()
	{
	}
}
[Token(Token = "0x2000186")]
public class EnduranceModeRaycaster : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_Distance;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x400083D")]
	private const int AMOUNT_OF_RAYS = 8;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<EnduranceRaycastHitContainer> raycastHitContainers;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<EnduranceRaycastHitContainer> containersWithHits;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[][] angles;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA054F4", Offset = "0xA054F4", VA = "0xA054F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xA055A4", Offset = "0xA055A4", VA = "0xA055A4")]
	public List<EnduranceRaycastHitContainer> getEnduranceRaycastHitContainers()
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xA056DC", Offset = "0xA056DC", VA = "0xA056DC")]
	private EnduranceRaycastHitContainer getEnduranceRaycastHitContainerAtAngle(int angle, EnduranceRaycastHitContainer containerToUse)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xA059A8", Offset = "0xA059A8", VA = "0xA059A8")]
	private RaycastHit getObjectAtEndOfRaycast(int angle)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xA05A0C", Offset = "0xA05A0C", VA = "0xA05A0C")]
	private RaycastHit CreateRaycast(int layer, int angle)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xA05B90", Offset = "0xA05B90", VA = "0xA05B90")]
	public RaycastHit CreateRaycast(Vector3 startingPos, Vector3 direction, int layer)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA05C20", Offset = "0xA05C20", VA = "0xA05C20")]
	public EnduranceModePlane getEnduranceModePlaneRelativeToPosition(Vector3 startingPos, Vector3 direction)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA05E1C", Offset = "0xA05E1C", VA = "0xA05E1C")]
	public EnduranceModeRaycaster()
	{
	}
}
[Token(Token = "0x2000187")]
public class EnduranceModeRaycasterTester : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InstantiateAndActivateEnduranceObjectTester instantiateTester;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA06260", Offset = "0xA06260", VA = "0xA06260")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xA06334", Offset = "0xA06334", VA = "0xA06334")]
	private void startObjectMovement(List<GameObject> objectsToActivate)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xA06574", Offset = "0xA06574", VA = "0xA06574")]
	public EnduranceModeRaycasterTester()
	{
	}
}
[Token(Token = "0x2000188")]
public class EnduranceModeSphereAppearanceColorChanger : MonoBehaviour
{
	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xA0657C", Offset = "0xA0657C", VA = "0xA0657C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xA06580", Offset = "0xA06580", VA = "0xA06580")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xA06584", Offset = "0xA06584", VA = "0xA06584")]
	public EnduranceModeSphereAppearanceColorChanger()
	{
	}
}
[Token(Token = "0x2000189")]
public class EnduranceRaycastHitContainer
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float rotationAngle;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnduranceModePlane enduranceModePlane;

	[Token(Token = "0x170000AB")]
	public float RotationAngle
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xA0658C", Offset = "0xA0658C", VA = "0xA0658C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xA06594", Offset = "0xA06594", VA = "0xA06594")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public EnduranceModePlane EnduranceModePlane
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xA0659C", Offset = "0xA0659C", VA = "0xA0659C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xA065A4", Offset = "0xA065A4", VA = "0xA065A4")]
		set
		{
		}
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xA0559C", Offset = "0xA0559C", VA = "0xA0559C")]
	public EnduranceRaycastHitContainer()
	{
	}
}
[Token(Token = "0x200018A")]
public class EnduranceSquatUnderneathObject : CoordinationCoachGameObject
{
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965CC", Offset = "0x5965CC")]
	private sealed class <heightSettingCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceSquatUnderneathObject <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x9F5430", Offset = "0x9F5430", VA = "0x9F5430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x9F5478", Offset = "0x9F5478", VA = "0x9F5478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x9F5364", Offset = "0x9F5364", VA = "0x9F5364")]
		[DebuggerHidden]
		public <heightSettingCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x9F5390", Offset = "0x9F5390", VA = "0x9F5390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x9F5394", Offset = "0x9F5394", VA = "0x9F5394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x9F5438", Offset = "0x9F5438", VA = "0x9F5438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Transform playerTransform;

	[Token(Token = "0x400084A")]
	private const float HEIGHT_MULTIPLIER = 0.35f;

	[Token(Token = "0x400084B")]
	private const float STARTING_DISTANCE_FROM_PLAYER = 3f;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool movingTowardsPlayer;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private AudioClip movingTowardsPlayerSound;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private AudioClip movingTowardsOriginalPositionSound;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float startingHeight;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float originalJourneyTime;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private EnduranceGameController enduranceGameController;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public readonly Vector3 defaultStartingPosition;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	[SerializeField]
	private bool updateStartPosHeighInCoroutine;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	private Transform startingHeightOffset;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x170000AD")]
	public Transform PlayerTransform
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA065FC", Offset = "0xA065FC", VA = "0xA065FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA06604", Offset = "0xA06604", VA = "0xA06604")]
		set
		{
		}
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9FE740", Offset = "0x9FE740", VA = "0x9FE740")]
	public void performGenericSetup(float speed, GameController gameController)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9FE6C8", Offset = "0x9FE6C8", VA = "0x9FE6C8")]
	public void updatePositionCorrespondingToPlayer()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xA06614", Offset = "0xA06614", VA = "0xA06614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F50C", Offset = "0x59F50C")]
	private IEnumerator heightSettingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xA0668C", Offset = "0xA0668C", VA = "0xA0668C")]
	private void updateStartingPosition()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x9FFA10", Offset = "0x9FFA10", VA = "0x9FFA10")]
	public void startMovingTowardsPlayer()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xA06800", Offset = "0xA06800", VA = "0xA06800", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xA068DC", Offset = "0xA068DC", VA = "0xA068DC")]
	private void updateDestination()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xA06A08", Offset = "0xA06A08", VA = "0xA06A08", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xA06B6C", Offset = "0xA06B6C", VA = "0xA06B6C", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xA06BF4", Offset = "0xA06BF4", VA = "0xA06BF4", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xA06938", Offset = "0xA06938", VA = "0xA06938")]
	private void startMovingBackToOriginalPosition()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x9FEA94", Offset = "0x9FEA94", VA = "0x9FEA94")]
	public void resetEnduranceSquatObject()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x9FFCAC", Offset = "0x9FFCAC", VA = "0x9FFCAC")]
	public void updateJourneyTime(float speed)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x9FEAF0", Offset = "0x9FEAF0", VA = "0x9FEAF0")]
	public void repositionToOriginalPosition()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xA06C58", Offset = "0xA06C58", VA = "0xA06C58")]
	public EnduranceSquatUnderneathObject()
	{
	}
}
[Token(Token = "0x200018C")]
public class EnduranceTutorialController : TutorialController
{
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965DC", Offset = "0x5965DC")]
	private sealed class <performGameModeSpecificTutorialSteps>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceTutorialController <>4__this;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x9F62BC", Offset = "0x9F62BC", VA = "0x9F62BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x9F6304", Offset = "0x9F6304", VA = "0x9F6304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x9F5480", Offset = "0x9F5480", VA = "0x9F5480")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x9F54AC", Offset = "0x9F54AC", VA = "0x9F54AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x9F54B0", Offset = "0x9F54B0", VA = "0x9F54B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x9F62C4", Offset = "0x9F62C4", VA = "0x9F62C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject tutorialEnduranceObject;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialHelper;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private EnduranceSquatUnderneathObject enduranceSquat;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private StartTutorialStepPerformOnInteraction startTutorialStepPerformOnInteraction;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 ADDITIONAL_Z;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool squatObjectActive;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xA06D10", Offset = "0xA06D10", VA = "0xA06D10", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F5BC", Offset = "0x59F5BC")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA06D9C", Offset = "0xA06D9C", VA = "0xA06D9C", Slot = "22")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA06DC0", Offset = "0xA06DC0", VA = "0xA06DC0", Slot = "9")]
	public override void startTutorialStep()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA06DD8", Offset = "0xA06DD8", VA = "0xA06DD8", Slot = "23")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA06E4C", Offset = "0xA06E4C", VA = "0xA06E4C", Slot = "24")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA06EA8", Offset = "0xA06EA8", VA = "0xA06EA8", Slot = "7")]
	protected override void stopTutorialSpecific()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA06ED8", Offset = "0xA06ED8", VA = "0xA06ED8")]
	public EnduranceTutorialController()
	{
	}
}
[Token(Token = "0x200018E")]
public class InstantiateAndActivateEnduranceObjectTester : MonoBehaviour
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xACD894", Offset = "0xACD894", VA = "0xACD894")]
	public GameObject instantiateEnduranceGameObjectPrefab(Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xACD968", Offset = "0xACD968", VA = "0xACD968")]
	public InstantiateAndActivateEnduranceObjectTester()
	{
	}
}
[Token(Token = "0x200018F")]
public class LeftRightEnduranceModePlane : EnduranceModePlane
{
	[Token(Token = "0x6000813")]
	[Address(RVA = "0x157BC1C", Offset = "0x157BC1C", VA = "0x157BC1C", Slot = "5")]
	protected override void calculateTotalAppearanceArea()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x157BD78", Offset = "0x157BD78", VA = "0x157BD78", Slot = "4")]
	public override void initalizeAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x157C010", Offset = "0x157C010", VA = "0x157C010", Slot = "6")]
	public override Vector3 getRandomPosForObjectAppearance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x157C0BC", Offset = "0x157C0BC", VA = "0x157C0BC", Slot = "8")]
	public override Vector3 getLeftAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x157C148", Offset = "0x157C148", VA = "0x157C148", Slot = "9")]
	public override Vector3 getRightAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x157C1D8", Offset = "0x157C1D8", VA = "0x157C1D8")]
	public LeftRightEnduranceModePlane()
	{
	}
}
[Token(Token = "0x2000190")]
public class EnduranceTutorialPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private EnduranceFracturedPrefabPoolController enduranceFracturedPrefabPoolController;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xA06EF0", Offset = "0xA06EF0", VA = "0xA06EF0", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xA06F9C", Offset = "0xA06F9C", VA = "0xA06F9C", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xA07014", Offset = "0xA07014", VA = "0xA07014", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xA0714C", Offset = "0xA0714C", VA = "0xA0714C", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xA072BC", Offset = "0xA072BC", VA = "0xA072BC")]
	public EnduranceTutorialPoolController()
	{
	}
}
[Token(Token = "0x2000191")]
public class TutorialEnduranceGameObject : EnduranceModeGameObject
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private TutorialController tutorialController;

	[Token(Token = "0x170000B2")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xF1BCDC", Offset = "0xF1BCDC", VA = "0xF1BCDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xF1BCE4", Offset = "0xF1BCE4", VA = "0xF1BCE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xF1BCF4", Offset = "0xF1BCF4", VA = "0xF1BCF4", Slot = "118")]
	protected override void removeObjectFromGame(GameObject effectToPlay, Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xF1BD6C", Offset = "0xF1BD6C", VA = "0xF1BD6C", Slot = "119")]
	public override void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF1BEA8", Offset = "0xF1BEA8", VA = "0xF1BEA8", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF1BF1C", Offset = "0xF1BF1C", VA = "0xF1BF1C", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF1BF8C", Offset = "0xF1BF8C", VA = "0xF1BF8C", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF1C130", Offset = "0xF1C130", VA = "0xF1C130", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF1C170", Offset = "0xF1C170", VA = "0xF1C170", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xF1C1A4", Offset = "0xF1C1A4", VA = "0xF1C1A4", Slot = "73")]
	protected override void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xF1C1E4", Offset = "0xF1C1E4", VA = "0xF1C1E4", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xF1C1FC", Offset = "0xF1C1FC", VA = "0xF1C1FC")]
	public TutorialEnduranceGameObject()
	{
	}
}
[Token(Token = "0x2000192")]
public class NonStandAloneTargetTouchContainerMovementStarter : MonoBehaviour
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC66258", Offset = "0xC66258", VA = "0xC66258")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC6637C", Offset = "0xC6637C", VA = "0xC6637C")]
	public NonStandAloneTargetTouchContainerMovementStarter()
	{
	}
}
[Token(Token = "0x2000193")]
public class NonStandaloneTargetTouchContainerMovementController : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	protected enum MOVEMENT
	{
		[Token(Token = "0x4000896")]
		NONE,
		[Token(Token = "0x4000897")]
		LEFT,
		[Token(Token = "0x4000898")]
		RIGHT,
		[Token(Token = "0x4000899")]
		FORWARD,
		[Token(Token = "0x400089A")]
		BACK,
		[Token(Token = "0x400089B")]
		DOWN,
		[Token(Token = "0x400089C")]
		UP,
		[Token(Token = "0x400089D")]
		ROTATE_LEFT,
		[Token(Token = "0x400089E")]
		ROTATE_RIGHT,
		[Token(Token = "0x400089F")]
		CORRECTIONAL
	}

	[Token(Token = "0x2000195")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x40008A1")]
		DIRECT,
		[Token(Token = "0x40008A2")]
		CURVED
	}

	[Token(Token = "0x2000196")]
	private enum LAST_ROTATION
	{
		[Token(Token = "0x40008A4")]
		NONE,
		[Token(Token = "0x40008A5")]
		LEFT,
		[Token(Token = "0x40008A6")]
		RIGHT
	}

	[Token(Token = "0x2000197")]
	private class PausedRotation
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MOVEMENT movement;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x8F6108", Offset = "0x8F6108", VA = "0x8F6108")]
		public PausedRotation(MOVEMENT movement)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x8F6134", Offset = "0x8F6134", VA = "0x8F6134")]
		public MOVEMENT getMovement()
		{
			return default(MOVEMENT);
		}
	}

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierCurveController bezierCurveController;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 destination;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float mTimer;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float journeyTime;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float lerpJourneyTimeMultiplier;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float maxJourneyDistance;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<MOVEMENT, Vector3> currentMovements;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LAST_ROTATION lastPerformedRotation;

	[Token(Token = "0x4000876")]
	private const int ROTATION_DEGREES_90 = 90;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startRotation;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentRotationDirection;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int currentAmountToRotate;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x400087B")]
	private const int LEFT_ROTATION_DIRECTION = -1;

	[Token(Token = "0x400087C")]
	private const int RIGHT_ROTATION_DIRECTION = 1;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] playAreaBoundary;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool movementStarted;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> childGameObjects;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] rendererBounds;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float xBoundsDividedByLeftRightDivider;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float zBoundsDividedByLeftRightDivider;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float zBoundsDividedByBackForwardDivider;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float zBoundsForRotation;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] rendererBoundsForMovementCalc;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] rotationRendererBoundsForMovementCalc;

	[Token(Token = "0x4000889")]
	private const float LEFT_RIGHT_BOUNDARY_CHECK_DIVIDER = 1.9f;

	[Token(Token = "0x400088A")]
	private const float BACK_BOUNDARY_CHECK_DIVIDER = 1f;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] backMovementRendererBounds;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] forwardMovementRendererBounds;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float xForwardMovementBounds;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float zForwardMovementBounds;

	[Token(Token = "0x400088F")]
	private const float FORWARD_MOVE_ADDITIONAL_DIVIDER = 2f;

	[Token(Token = "0x4000890")]
	private const float ROTATION_LEFT_RIGHT_DIVIDER = 2f;

	[Token(Token = "0x4000891")]
	private const float ROTATION_BACK_FORWARD_DIVIDER = 2f;

	[Token(Token = "0x4000892")]
	private const float LEFT_RIGHT_EDGE_CALCULATION_DIVIDER = 2f;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool performInitialPositionCheck;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer my_Renderer;

	[Token(Token = "0x170000B3")]
	public List<GameObject> ChildGameObjects
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xC66384", Offset = "0xC66384", VA = "0xC66384")]
		get
		{
			return null;
		}
		[Token(Token = "0x600082D")]
		[Address(RVA = "0xC6638C", Offset = "0xC6638C", VA = "0xC6638C")]
		set
		{
		}
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC66394", Offset = "0xC66394", VA = "0xC66394")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC66430", Offset = "0xC66430", VA = "0xC66430")]
	private void calculateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC66534", Offset = "0xC66534", VA = "0xC66534")]
	private void updateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC66294", Offset = "0xC66294", VA = "0xC66294")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC66A30", Offset = "0xC66A30", VA = "0xC66A30")]
	private void setupPositionCheckGameObject()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC66B48", Offset = "0xC66B48", VA = "0xC66B48", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC66D18", Offset = "0xC66D18", VA = "0xC66D18")]
	public void setMovementStarted(bool input)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC66D24", Offset = "0xC66D24", VA = "0xC66D24")]
	public void stopMovement()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC66D64", Offset = "0xC66D64", VA = "0xC66D64")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC66D9C", Offset = "0xC66D9C", VA = "0xC66D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC67794", Offset = "0xC67794", VA = "0xC67794")]
	private MOVEMENT getRotationalMovementFromCurrentMovements()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC678D4", Offset = "0xC678D4", VA = "0xC678D4")]
	private MOVEMENT getVerticalMovementInCurrentMovements()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC672D0", Offset = "0xC672D0", VA = "0xC672D0")]
	private bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC67A14", Offset = "0xC67A14", VA = "0xC67A14")]
	private void performNormalGameMovement()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC673A0", Offset = "0xC673A0", VA = "0xC673A0")]
	private void moveToRandomBoundary()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC67E34", Offset = "0xC67E34", VA = "0xC67E34")]
	private Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC67E28", Offset = "0xC67E28", VA = "0xC67E28")]
	private float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC668F8", Offset = "0xC668F8", VA = "0xC668F8")]
	private void clearCurrentMovements()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC67788", Offset = "0xC67788", VA = "0xC67788")]
	private void startNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC683C0", Offset = "0xC683C0", VA = "0xC683C0")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC671FC", Offset = "0xC671FC", VA = "0xC671FC")]
	private void moveChildObjects()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC6858C", Offset = "0xC6858C", VA = "0xC6858C")]
	private void setRotationDirection(MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC67DA0", Offset = "0xC67DA0", VA = "0xC67DA0")]
	private bool isRotationalMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC67DBC", Offset = "0xC67DBC", VA = "0xC67DBC")]
	private bool isUpDownMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC685A0", Offset = "0xC685A0", VA = "0xC685A0")]
	private Vector3 changeDestinationDueToMovement(MOVEMENT movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC687B8", Offset = "0xC687B8", VA = "0xC687B8")]
	private void setRotationAmount()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC68868", Offset = "0xC68868", VA = "0xC68868")]
	private int getResetRotationAmount()
	{
		return default(int);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC68830", Offset = "0xC68830", VA = "0xC68830")]
	private bool furtherRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC68768", Offset = "0xC68768", VA = "0xC68768")]
	private float getLinearMovementAmount(float max)
	{
		return default(float);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC67CC0", Offset = "0xC67CC0", VA = "0xC67CC0")]
	private bool checkMovementFinished(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC68B54", Offset = "0xC68B54", VA = "0xC68B54")]
	public void stopAllCoroutinesForTesting()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC68B5C", Offset = "0xC68B5C", VA = "0xC68B5C")]
	private void setDestinationToCurrentPosition()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC67F64", Offset = "0xC67F64", VA = "0xC67F64")]
	private void calculateNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC691B4", Offset = "0xC691B4", VA = "0xC691B4")]
	private bool isObjectRotated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC68E08", Offset = "0xC68E08", VA = "0xC68E08")]
	private void addOneMovementToCurrentMovements(List<MOVEMENT> movements)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC67DD8", Offset = "0xC67DD8", VA = "0xC67DD8")]
	private void updateLerpJourneyTimeMultiplier()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC669F4", Offset = "0xC669F4", VA = "0xC669F4")]
	public void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC691E4", Offset = "0xC691E4", VA = "0xC691E4")]
	public void repositionPositionCheckGameObject(Vector3 pos)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC69074", Offset = "0xC69074", VA = "0xC69074")]
	private void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC6926C", Offset = "0xC6926C", VA = "0xC6926C")]
	private MOVEMENT getCurrentMovementBackForward()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC6944C", Offset = "0xC6944C", VA = "0xC6944C")]
	private bool isBackForwardMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC69468", Offset = "0xC69468", VA = "0xC69468", Slot = "5")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC694A0", Offset = "0xC694A0", VA = "0xC694A0")]
	private void addOneOfAllowedMovements(List<MOVEMENT> movementsToPerform, List<MOVEMENT> allowedSubMovements)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC68F34", Offset = "0xC68F34", VA = "0xC68F34")]
	private MOVEMENT getOneOfAllowedMovements(List<MOVEMENT> allowedSubMovements)
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC68C68", Offset = "0xC68C68", VA = "0xC68C68")]
	private List<MOVEMENT> getAllowedLeftRightMovements()
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC68D38", Offset = "0xC68D38", VA = "0xC68D38")]
	private List<MOVEMENT> getAllowedBackForwardMovements()
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC67D30", Offset = "0xC67D30", VA = "0xC67D30")]
	private void setLastRotation(MOVEMENT movementToPerform)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC66734", Offset = "0xC66734", VA = "0xC66734")]
	private void setPositionOfPositionCheckGameObjectToCurrentPosition()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC69760", Offset = "0xC69760", VA = "0xC69760")]
	private bool canMoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC6985C", Offset = "0xC6985C", VA = "0xC6985C")]
	private bool canMoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC69568", Offset = "0xC69568", VA = "0xC69568")]
	private bool canMoveLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC69664", Offset = "0xC69664", VA = "0xC69664")]
	private bool canMoveRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC68B98", Offset = "0xC68B98", VA = "0xC68B98")]
	private List<MOVEMENT> getAllowedVerticalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC69958", Offset = "0xC69958", VA = "0xC69958")]
	private bool checkIfMoveDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC69A00", Offset = "0xC69A00", VA = "0xC69A00")]
	private bool checkIfMoveUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC69AB4", Offset = "0xC69AB4", VA = "0xC69AB4", Slot = "6")]
	protected virtual List<MOVEMENT> getAllowedRotationalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC69BD4", Offset = "0xC69BD4", VA = "0xC69BD4")]
	private bool canRotateLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xC69BDC", Offset = "0xC69BDC", VA = "0xC69BDC")]
	private bool canRotateRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xC688D4", Offset = "0xC688D4", VA = "0xC688D4")]
	private bool checkFurtherLeftRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xC68948", Offset = "0xC68948", VA = "0xC68948")]
	private bool checkFurtherRightRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC66560", Offset = "0xC66560", VA = "0xC66560")]
	private void setBoundaryCalculationBounds()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC667F4", Offset = "0xC667F4", VA = "0xC667F4")]
	private void setRotationBoundaryCalculationBounds()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC69BE4", Offset = "0xC69BE4", VA = "0xC69BE4")]
	private bool checkRotationPossible(int rotationDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC67B94", Offset = "0xC67B94", VA = "0xC67B94")]
	private void rotateObject(int rotationDirection)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC69D18", Offset = "0xC69D18", VA = "0xC69D18")]
	private float getCorrectedDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC69050", Offset = "0xC69050", VA = "0xC69050")]
	private float getCorrectedDegreesWithMinusDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC689BC", Offset = "0xC689BC", VA = "0xC689BC")]
	private bool checkRotationFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC68FC8", Offset = "0xC68FC8", VA = "0xC68FC8")]
	private Vector3 getPositionForRotatingAround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC69D38", Offset = "0xC69D38", VA = "0xC69D38")]
	public NonStandaloneTargetTouchContainerMovementController()
	{
	}
}
[Token(Token = "0x2000198")]
public class OculusRiftTargetTouchGameController : TargetTouchGameController
{
	[Token(Token = "0x6000875")]
	[Address(RVA = "0xB079D8", Offset = "0xB079D8", VA = "0xB079D8")]
	public OculusRiftTargetTouchGameController()
	{
	}
}
[Token(Token = "0x2000199")]
public class OculusRiftTargetTouchIntroManager : TargetTouchTutorialController
{
	[Token(Token = "0x6000876")]
	[Address(RVA = "0xB079E8", Offset = "0xB079E8", VA = "0xB079E8")]
	public OculusRiftTargetTouchIntroManager()
	{
	}
}
[Token(Token = "0x200019A")]
public class SphereAppearanceEffectColorChanger : NormalObjectToBlockAppearanceEffectColorChanger
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem circle;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.MainModule circleMainModule;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ParticleSystem semiCircle;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem.MainModule semiCircleMainModule;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Color doNotTouchColorOuter;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Color doNotTouchColorInner;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected Color anyHandColorCircle;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected Color leftHandOnlyColorCircle;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected Color rightHandOnlyColorCircle;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected Color doNotTouchColorCircle;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected Color anyHandColorSemiCircle;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	protected Color leftHandOnlyColorSemiCircle;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	protected Color rightHandOnlyColorSemiCircle;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected Color doNotTouchColorSemiCircle;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xB92488", Offset = "0xB92488", VA = "0xB92488", Slot = "5")]
	protected override void setupAdditionalModules()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xB92530", Offset = "0xB92530", VA = "0xB92530", Slot = "6")]
	protected override void setupAdditionalColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xB927D0", Offset = "0xB927D0", VA = "0xB927D0", Slot = "7")]
	protected override Color getOuterColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xB92850", Offset = "0xB92850", VA = "0xB92850", Slot = "8")]
	protected override Color getInnerColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB926D0", Offset = "0xB926D0", VA = "0xB926D0")]
	protected Color getCircleColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xB92750", Offset = "0xB92750", VA = "0xB92750")]
	protected Color getSemiCircleColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xB928D0", Offset = "0xB928D0", VA = "0xB928D0")]
	public SphereAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x200019B")]
public class SphereGameObjectActivator : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsSphereGameObject sphereGameObject;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB928D8", Offset = "0xB928D8", VA = "0xB928D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xB92B1C", Offset = "0xB92B1C", VA = "0xB92B1C")]
	public SphereGameObjectActivator()
	{
	}
}
[Token(Token = "0x200019C")]
public class SphereResizeStarter : MonoBehaviour
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController[] sphereControllers;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB92B24", Offset = "0xB92B24", VA = "0xB92B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB92BEC", Offset = "0xB92BEC", VA = "0xB92BEC")]
	public SphereResizeStarter()
	{
	}
}
[Token(Token = "0x200019D")]
public class TargetObject : CoordinationCoachGameObject
{
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965EC", Offset = "0x5965EC")]
	private sealed class <activeTimeCountdownCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetObject <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x8FD74C", Offset = "0x8FD74C", VA = "0x8FD74C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x8FD794", Offset = "0x8FD794", VA = "0x8FD794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x8FD540", Offset = "0x8FD540", VA = "0x8FD540")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x8FD56C", Offset = "0x8FD56C", VA = "0x8FD56C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x8FD570", Offset = "0x8FD570", VA = "0x8FD570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x8FD754", Offset = "0x8FD754", VA = "0x8FD754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5965FC", Offset = "0x5965FC")]
	private sealed class <stopObjectDeactivatedEffect>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int effectCounter;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetObject <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x8FD8B8", Offset = "0x8FD8B8", VA = "0x8FD8B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x8FD900", Offset = "0x8FD900", VA = "0x8FD900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x8FD79C", Offset = "0x8FD79C", VA = "0x8FD79C")]
		[DebuggerHidden]
		public <stopObjectDeactivatedEffect>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x8FD7C8", Offset = "0x8FD7C8", VA = "0x8FD7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x8FD7CC", Offset = "0x8FD7CC", VA = "0x8FD7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x8FD8C0", Offset = "0x8FD8C0", VA = "0x8FD8C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	protected DateTime deactivationTime;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	protected bool playerCanScore;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	protected Material deactivatedMaterial;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private Material playerMustResetHandsMaterial;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	protected bool touchedWhileInactive;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool moveIndividually;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[SerializeField]
	private GameObject cubeActivatedEffect;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[SerializeField]
	private ParticleSystem[] cubeActivatedEffectParticlesToChange;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private ParticleSystem electricityStartMagicHitEffect;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	protected TargetTouchObjectTouchedWhileInactiveEffectController inactiveEffectController;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	private ParticleSystem playerFailedToTouchActiveObjectEffect;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private AudioClip playerCanScoreLoopingAudio;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private AudioClip playerCanScoreDoNotTouchLoopingAudio;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private AudioClip playerCannotScoreLoopingAudio;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	protected AudioClip objectDeactivatedAudio;

	[Token(Token = "0x40008C8")]
	private const float EFFECT_DURATION = 1f;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private int stopObjectDisabledEffectCounter;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private IEnumerator stopElectricityEffectCoroutine;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private IEnumerator stopObjectDeactivatedEffectCoroutine;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[SerializeField]
	private AudioClip electricityAudio;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController innerSphereController;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController outerSphereController;

	[Token(Token = "0x170000B4")]
	public bool MoveIndividually
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB95274", Offset = "0xB95274", VA = "0xB95274")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xB9527C", Offset = "0xB9527C", VA = "0xB9527C")]
		set
		{
		}
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xB95288", Offset = "0xB95288", VA = "0xB95288", Slot = "9")]
	protected override void performSpecificSetup()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xB952F0", Offset = "0xB952F0", VA = "0xB952F0", Slot = "28")]
	public override void activate(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xB954FC", Offset = "0xB954FC", VA = "0xB954FC")]
	public void activate(bool playerCanScore, ActivationType activationType)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xB9555C", Offset = "0xB9555C", VA = "0xB9555C", Slot = "32")]
	public override void activateSpecific()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xB953C0", Offset = "0xB953C0", VA = "0xB953C0")]
	private void playActivatedEffect(Color color, Color sphereColor, bool playerScored)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xB95A30", Offset = "0xB95A30", VA = "0xB95A30", Slot = "11")]
	public override void performInitalizationSetup(GameController gameController)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xB95B60", Offset = "0xB95B60", VA = "0xB95B60", Slot = "37")]
	protected override Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xB956C0", Offset = "0xB956C0", VA = "0xB956C0")]
	private Color getActivationEffectColor(bool canScore)
	{
		return default(Color);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xB95A04", Offset = "0xB95A04", VA = "0xB95A04")]
	private AudioClip getActivatedSound(bool playerCanScore)
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xB95860", Offset = "0xB95860", VA = "0xB95860")]
	private Color getActivatedSphereEffectColor(bool canScore)
	{
		return default(Color);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xB95BD0", Offset = "0xB95BD0", VA = "0xB95BD0", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F66C", Offset = "0x59F66C")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xB95C58", Offset = "0xB95C58", VA = "0xB95C58")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xB95CDC", Offset = "0xB95CDC", VA = "0xB95CDC", Slot = "96")]
	public override void deactivateDueToTouchedByPlayer()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xB95CE0", Offset = "0xB95CE0", VA = "0xB95CE0")]
	public void deactivateDueToTimeRanOut()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xB95DB8", Offset = "0xB95DB8", VA = "0xB95DB8", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB96080", Offset = "0xB96080", VA = "0xB96080")]
	public void preloadInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB9609C", Offset = "0xB9609C", VA = "0xB9609C")]
	public void stopInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB960D8", Offset = "0xB960D8", VA = "0xB960D8", Slot = "43")]
	protected override void playerTouchedForbiddenObjectSpecific(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB96118", Offset = "0xB96118", VA = "0xB96118")]
	public void preloadElectricityEffect()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB9612C", Offset = "0xB9612C", VA = "0xB9612C", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB96188", Offset = "0xB96188", VA = "0xB96188", Slot = "79")]
	protected override void performMovement()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB9622C", Offset = "0xB9622C", VA = "0xB9622C")]
	public void setTouchedWhileInactive(bool touched)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB96238", Offset = "0xB96238", VA = "0xB96238")]
	public bool isTouchedWhileInactive()
	{
		return default(bool);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xB96240", Offset = "0xB96240", VA = "0xB96240", Slot = "75")]
	public override void stopAllEffects(bool playerScored)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB963F4", Offset = "0xB963F4", VA = "0xB963F4")]
	public void setMaterialsToDeactivatedMaterial()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB96408", Offset = "0xB96408", VA = "0xB96408", Slot = "30")]
	protected override void setMaterialOnRendenders(Material material)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xB962C8", Offset = "0xB962C8", VA = "0xB962C8")]
	private void stopAllEffectCoroutines()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xB9633C", Offset = "0xB9633C", VA = "0xB9633C")]
	private void stopActivatedEffect(bool playerScored)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xB965B0", Offset = "0xB965B0", VA = "0xB965B0", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xB966A0", Offset = "0xB966A0", VA = "0xB966A0", Slot = "102")]
	public override void gameRestartedByPlayer()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xB9673C", Offset = "0xB9673C", VA = "0xB9673C")]
	public void restartActiveEffect(bool playerCanScore)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xB9691C", Offset = "0xB9691C", VA = "0xB9691C")]
	public void playPointScoredEffect()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xB969BC", Offset = "0xB969BC", VA = "0xB969BC", Slot = "117")]
	protected virtual void playerScored()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xB95D34", Offset = "0xB95D34", VA = "0xB95D34")]
	public void playDeactivatedEffect()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xB969E4", Offset = "0xB969E4", VA = "0xB969E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F6CC", Offset = "0x59F6CC")]
	public IEnumerator stopObjectDeactivatedEffect(int effectCounter)
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xB963D8", Offset = "0xB963D8", VA = "0xB963D8")]
	public void stopObjectDeactivatedEffect()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xB96A6C", Offset = "0xB96A6C", VA = "0xB96A6C", Slot = "97")]
	public override string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xB96AB0", Offset = "0xB96AB0", VA = "0xB96AB0", Slot = "12")]
	public override void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xB96AEC", Offset = "0xB96AEC", VA = "0xB96AEC", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xB96B28", Offset = "0xB96B28", VA = "0xB96B28", Slot = "45")]
	protected override void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xB96B64", Offset = "0xB96B64", VA = "0xB96B64", Slot = "66")]
	protected override float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xB96BF4", Offset = "0xB96BF4", VA = "0xB96BF4", Slot = "81")]
	protected override bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xB96C4C", Offset = "0xB96C4C", VA = "0xB96C4C", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xB96CE0", Offset = "0xB96CE0", VA = "0xB96CE0", Slot = "83")]
	protected override void setNewBezierCurvePosition()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xB96DF8", Offset = "0xB96DF8", VA = "0xB96DF8", Slot = "93")]
	protected override void repositionDestinationToAvoidObjectCollidedWith(GameObject objectCollidedWith)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xB97010", Offset = "0xB97010", VA = "0xB97010")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xB9727C", Offset = "0xB9727C", VA = "0xB9727C", Slot = "113")]
	protected override bool checkWithinMaxDistanceFromStartingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xB972F4", Offset = "0xB972F4", VA = "0xB972F4", Slot = "22")]
	protected override void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xB97468", Offset = "0xB97468", VA = "0xB97468", Slot = "47")]
	protected override void positionDestinationWithCorrectionForLimits(float additionalX, float additionalY, float additionalZ, float xDirection, float yDirection, float zDirection)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xB97644", Offset = "0xB97644", VA = "0xB97644", Slot = "49")]
	protected override void repositionDestinationInSpecificDirection(float xDirection, float yDirection)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xB9772C", Offset = "0xB9772C", VA = "0xB9772C", Slot = "46")]
	protected override void repositionDestination(List<MovementAxis> axisesToMoveIn)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xB979B8", Offset = "0xB979B8", VA = "0xB979B8", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xB97A14", Offset = "0xB97A14", VA = "0xB97A14", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xB97B78", Offset = "0xB97B78", VA = "0xB97B78", Slot = "57")]
	protected override void prepareForDisappearance()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xB97B80", Offset = "0xB97B80", VA = "0xB97B80")]
	public void preloadActivatedEffect()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xB97CD0", Offset = "0xB97CD0", VA = "0xB97CD0", Slot = "10")]
	public override void calculateLocalMovementLimits(float movementAmount)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xB97E44", Offset = "0xB97E44", VA = "0xB97E44", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xB97E54", Offset = "0xB97E54", VA = "0xB97E54")]
	public TargetObject()
	{
	}
}
[Token(Token = "0x20001A0")]
public class TargetTouchActivatedInnerSphereController : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59660C", Offset = "0x59660C")]
	private sealed class <sizeChangingCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchActivatedInnerSphereController <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x8FDC44", Offset = "0x8FDC44", VA = "0x8FDC44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x8FDC8C", Offset = "0x8FDC8C", VA = "0x8FDC8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x8FD908", Offset = "0x8FD908", VA = "0x8FD908")]
		[DebuggerHidden]
		public <sizeChangingCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x8FD934", Offset = "0x8FD934", VA = "0x8FD934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x8FD938", Offset = "0x8FD938", VA = "0x8FD938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x8FDC4C", Offset = "0x8FDC4C", VA = "0x8FDC4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float minSize;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float maxSize;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Light myLight;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float startingAlpha;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Renderer myRenderer;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float disappearanceSizeChangeSize;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float sizeChangeSize;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float sizeChangingMultiplier;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Coroutine activeCoroutine;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float[] minSizeRange;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float[] maxSizeRange;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float resetAdditionalSize;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float rangeCalculator;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool continueSizeChange;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xB99468", Offset = "0xB99468", VA = "0xB99468")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xB9955C", Offset = "0xB9955C", VA = "0xB9955C")]
	public void startSizeChange()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xB92BB8", Offset = "0xB92BB8", VA = "0xB92BB8")]
	public void restart(Color color)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xB995A4", Offset = "0xB995A4", VA = "0xB995A4")]
	protected void setColorWithAlphaChange(Color color)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xB96918", Offset = "0xB96918", VA = "0xB96918")]
	public void setColor(Color color)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xB96570", Offset = "0xB96570", VA = "0xB96570")]
	public void stopAndDeactivate()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xB996E8", Offset = "0xB996E8", VA = "0xB996E8", Slot = "4")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xB996A0", Offset = "0xB996A0", VA = "0xB996A0")]
	protected void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xB99768", Offset = "0xB99768", VA = "0xB99768", Slot = "5")]
	protected virtual void resetSpecific()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xB9976C", Offset = "0xB9976C", VA = "0xB9976C")]
	public void stopChangeSize()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xB99774", Offset = "0xB99774", VA = "0xB99774", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F7CC", Offset = "0x59F7CC")]
	protected virtual IEnumerator sizeChangingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xB997EC", Offset = "0xB997EC", VA = "0xB997EC")]
	public TargetTouchActivatedInnerSphereController()
	{
	}
}
[Token(Token = "0x20001A2")]
public class TargetTouchActivatedOuterSphereController : TargetTouchActivatedInnerSphereController
{
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59661C", Offset = "0x59661C")]
	private sealed class <sizeChangingCoroutine>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchActivatedOuterSphereController <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x8FDF80", Offset = "0x8FDF80", VA = "0x8FDF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x8FDFC8", Offset = "0x8FDFC8", VA = "0x8FDFC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x8FDC94", Offset = "0x8FDC94", VA = "0x8FDC94")]
		[DebuggerHidden]
		public <sizeChangingCoroutine>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x8FDCC0", Offset = "0x8FDCC0", VA = "0x8FDCC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x8FDCC4", Offset = "0x8FDCC4", VA = "0x8FDCC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x8FDF88", Offset = "0x8FDF88", VA = "0x8FDF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xB998B0", Offset = "0xB998B0", VA = "0xB998B0", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F87C", Offset = "0x59F87C")]
	protected override IEnumerator sizeChangingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xB99928", Offset = "0xB99928", VA = "0xB99928")]
	public TargetTouchActivatedOuterSphereController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class TargetTouchAudioController : AudioController
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip pointScored;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xB99A50", Offset = "0xB99A50", VA = "0xB99A50")]
	public TargetTouchAudioController()
	{
	}
}
[Token(Token = "0x20001A5")]
public class TargetTouchColorConstants : MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color EFFECT_BLUE_COLOR;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color EFFECT_RED_COLOR;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color EFFECT_PURPLE_COLOR;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color EFFECT_YELLOW_COLOR;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color EFFECT_BLACK_COLOR;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Color SPHERE_BLACK_COLOR;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Color SPHERE_COLOR_BLUE;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Color PURPLE_COLOR_LIGHTING;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Color YELLOW_COLOR_LIGHT;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Color BLACK_COLOR_NO_ALPHA;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xB99A58", Offset = "0xB99A58", VA = "0xB99A58")]
	public TargetTouchColorConstants()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TargetTouchForceFieldController : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	private const float SOUND_VOLUME = 0.5f;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected DateTime lastPlayerScoredTime;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MakeObjectSeeThrough makeObjectSeeThrough;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip forceFieldAppearanceAudio;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip forceFieldDisappearanceAudio;

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xB99E18", Offset = "0xB99E18", VA = "0xB99E18")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xB99E80", Offset = "0xB99E80", VA = "0xB99E80")]
	public void updatePlayerLastScoredTime()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xB99EE8", Offset = "0xB99EE8", VA = "0xB99EE8")]
	public void startForceField()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xB99F58", Offset = "0xB99F58", VA = "0xB99F58")]
	public void startForceFieldNoAudio()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xB99F30", Offset = "0xB99F30", VA = "0xB99F30")]
	private void playStartForceFieldLoopingSound()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xB99F78", Offset = "0xB99F78", VA = "0xB99F78")]
	public void stopForceField()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xB9A05C", Offset = "0xB9A05C", VA = "0xB9A05C")]
	public void stopForceFieldAndAudio()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB9A09C", Offset = "0xB9A09C", VA = "0xB9A09C")]
	public void stopForceFieldNoAudio()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB9A0BC", Offset = "0xB9A0BC", VA = "0xB9A0BC")]
	public void stopAudio()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xB9A0D8", Offset = "0xB9A0D8", VA = "0xB9A0D8")]
	public TargetTouchForceFieldController()
	{
	}
}
[Token(Token = "0x20001A7")]
public class TargetTouchGameController : GameController
{
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59662C", Offset = "0x59662C")]
	private sealed class <startCountdownThenMainGameLoop>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x8FE758", Offset = "0x8FE758", VA = "0x8FE758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x8FE7A0", Offset = "0x8FE7A0", VA = "0x8FE7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x8FE674", Offset = "0x8FE674", VA = "0x8FE674")]
		[DebuggerHidden]
		public <startCountdownThenMainGameLoop>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x8FE6A0", Offset = "0x8FE6A0", VA = "0x8FE6A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x8FE6A4", Offset = "0x8FE6A4", VA = "0x8FE6A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x8FE760", Offset = "0x8FE760", VA = "0x8FE760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59663C", Offset = "0x59663C")]
	private sealed class <startGameObjectsAppearanceAnimations>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> targetObjects;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x8FE95C", Offset = "0x8FE95C", VA = "0x8FE95C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x8FE9A4", Offset = "0x8FE9A4", VA = "0x8FE9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x8FE7A8", Offset = "0x8FE7A8", VA = "0x8FE7A8")]
		[DebuggerHidden]
		public <startGameObjectsAppearanceAnimations>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x8FE7D4", Offset = "0x8FE7D4", VA = "0x8FE7D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x8FE7D8", Offset = "0x8FE7D8", VA = "0x8FE7D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x8FE964", Offset = "0x8FE964", VA = "0x8FE964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59664C", Offset = "0x59664C")]
	private sealed class <setActivateTargetObjectToNullCoroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x8FE624", Offset = "0x8FE624", VA = "0x8FE624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x8FE66C", Offset = "0x8FE66C", VA = "0x8FE66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x8FE4A0", Offset = "0x8FE4A0", VA = "0x8FE4A0")]
		[DebuggerHidden]
		public <setActivateTargetObjectToNullCoroutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x8FE4CC", Offset = "0x8FE4CC", VA = "0x8FE4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x8FE4D0", Offset = "0x8FE4D0", VA = "0x8FE4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x8FE62C", Offset = "0x8FE62C", VA = "0x8FE62C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59665C", Offset = "0x59665C")]
	private sealed class <startGameObjectsDisappearanceAnimations>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject>.Enumerator <>7__wrap1;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x8FED5C", Offset = "0x8FED5C", VA = "0x8FED5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x8FEDA4", Offset = "0x8FEDA4", VA = "0x8FEDA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x8FE9AC", Offset = "0x8FE9AC", VA = "0x8FE9AC")]
		[DebuggerHidden]
		public <startGameObjectsDisappearanceAnimations>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x8FE9D8", Offset = "0x8FE9D8", VA = "0x8FE9D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x8FEA48", Offset = "0x8FEA48", VA = "0x8FEA48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x8FE9F4", Offset = "0x8FE9F4", VA = "0x8FE9F4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x8FED64", Offset = "0x8FED64", VA = "0x8FED64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59666C", Offset = "0x59666C")]
	private sealed class <mainGameModeLoop>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x8FE450", Offset = "0x8FE450", VA = "0x8FE450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x8FE498", Offset = "0x8FE498", VA = "0x8FE498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8FDFD0", Offset = "0x8FDFD0", VA = "0x8FDFD0")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x8FDFFC", Offset = "0x8FDFFC", VA = "0x8FDFFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x8FE000", Offset = "0x8FE000", VA = "0x8FE000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x8FE458", Offset = "0x8FE458", VA = "0x8FE458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> horizontalTargetObjects;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<GameObject> verticalTargetObjects;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<TargetObject> targetObjectComponentsArrayList;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool handsResetNeededAfterPlayerScored;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int timeAlreadyWaitedForPlayerToResetHands;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TargetTouchForceFieldController targetTouchForceFieldController;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private TargetTouchHandsCollisionChecker targetTouchHandsCollisionChecker;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private TargetTouchGameModeParameterContainer targetTouchGameModeParameterContainer;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool playerCanScorePoints;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private TargetObject activeTargetObject;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int numberOfGameObjectsReachedAppearanceDestination;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int numberOfGameObjectsReachedDisappearanceDestination;

	[Token(Token = "0x4000909")]
	private const float ACTIVE_TARGET_OBJECT_RESET_DELAY = 0.75f;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private MovementWithinBoundaryController movementController;

	[Token(Token = "0x400090B")]
	private const string DEBUG_PLAYER_NEEDS_TO_RESET_HANDS = " Player needs to reset his hands";

	[Token(Token = "0x400090C")]
	private const string DEBUG_PLAYER_HEAD_ENTERED_COLLISION_AREA = " Player head entered collision area";

	[Token(Token = "0x400090D")]
	private const string GUI_PLAYER_HAND_IN_COLLISION_AREA = " Reset hands to score further points!";

	[Token(Token = "0x400090E")]
	private const string GUI_PLAYER_HEAD_ENTERED_COLLISION_AREA = " Cannot score while colliding with force field";

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private WaitForSeconds appearenceWaitForSeconds;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private WaitForSeconds disappearenceWaitForSeconds;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private WaitForSeconds resetActiveObjectWaitForSeconds;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private TargetTouchObjectCreationService targetTouchObjectCreationService;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected DateTime lastCollisionTimeWithPlayer;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Coroutine currentSetActiveObjectToZeroCoroutine;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool objectAppearanceInProgress;

	[Token(Token = "0x170000BD")]
	public bool PlayerHandsResetInProgress
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB9B1C4", Offset = "0xB9B1C4", VA = "0xB9B1C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB9B1E8", Offset = "0xB9B1E8", VA = "0xB9B1E8")]
		set
		{
		}
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB9A0E0", Offset = "0xB9A0E0", VA = "0xB9A0E0", Slot = "9")]
	protected override void gameModeSpecificSetupOnStart()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB9A154", Offset = "0xB9A154", VA = "0xB9A154")]
	public void setTargetTouchGameModeParameterContainer(TargetTouchGameModeParameterContainer targetTouchGameModeParameterContainer)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xB9A164", Offset = "0xB9A164", VA = "0xB9A164", Slot = "33")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F92C", Offset = "0x59F92C")]
	protected override IEnumerator startCountdownThenMainGameLoop()
	{
		return null;
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB9A1DC", Offset = "0xB9A1DC", VA = "0xB9A1DC", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB9AA7C", Offset = "0xB9AA7C", VA = "0xB9AA7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F98C", Offset = "0x59F98C")]
	private IEnumerator startGameObjectsAppearanceAnimations(List<GameObject> targetObjects)
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xB9AB10", Offset = "0xB9AB10", VA = "0xB9AB10", Slot = "46")]
	public override void gameObjectReachedAppearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xB9ABEC", Offset = "0xB9ABEC", VA = "0xB9ABEC", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xB969C0", Offset = "0xB969C0", VA = "0xB969C0")]
	public bool isPlayerCanScorePoints()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xB9ACAC", Offset = "0xB9ACAC", VA = "0xB9ACAC")]
	public void handContactIsZero()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xB9AD30", Offset = "0xB9AD30", VA = "0xB9AD30")]
	public void playerHeadEnteredCollisionArea()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xB9AE70", Offset = "0xB9AE70", VA = "0xB9AE70")]
	public void playerHandEntered()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xB9B090", Offset = "0xB9B090", VA = "0xB9B090", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xB9B1BC", Offset = "0xB9B1BC", VA = "0xB9B1BC")]
	public TargetTouchGameModeParameterContainer getTargetTouchGameModeParameterContainer()
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xB9A88C", Offset = "0xB9A88C", VA = "0xB9A88C")]
	private void repositionHandResetBarrierObject()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xB9A9E0", Offset = "0xB9A9E0", VA = "0xB9A9E0")]
	private void prepareHandResetBarrierObjectForMovement()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xB9B214", Offset = "0xB9B214", VA = "0xB9B214")]
	private GameObject getMiddleHorizontalObject()
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xB9B29C", Offset = "0xB9B29C", VA = "0xB9B29C")]
	private void setActiveTargetObjectToNullWithDelay()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xB9B2E0", Offset = "0xB9B2E0", VA = "0xB9B2E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59F9EC", Offset = "0x59F9EC")]
	private IEnumerator setActivateTargetObjectToNullCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xB9B358", Offset = "0xB9B358", VA = "0xB9B358")]
	private void setActiveTargetObject(TargetObject targetObject)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xB9AF14", Offset = "0xB9AF14", VA = "0xB9AF14")]
	private TargetObject getActiveTargetObject()
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xB9AD84", Offset = "0xB9AD84", VA = "0xB9AD84")]
	private void updateActiveColorOfActiveTargetObject()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xB9B47C", Offset = "0xB9B47C", VA = "0xB9B47C")]
	private void startTargetObjectMovement()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xB9B818", Offset = "0xB9B818", VA = "0xB9B818")]
	public List<GameObject> getVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xB9B820", Offset = "0xB9B820", VA = "0xB9B820")]
	public List<GameObject> getHorizontalObjects()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xB9B828", Offset = "0xB9B828", VA = "0xB9B828")]
	public List<TargetObject> getTargetObjectComponentsList()
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xB9B830", Offset = "0xB9B830", VA = "0xB9B830")]
	public void handsMustBeResetAfterPlayerScored()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xB9B030", Offset = "0xB9B030", VA = "0xB9B030")]
	public void handsMustBeResetAfterPlayerEnteredArea()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xB9AE2C", Offset = "0xB9AE2C", VA = "0xB9AE2C")]
	private void pointScoringDisabledDueToCollisionWithPlayer(string debuggerMessage, string guiMessage)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xB9B894", Offset = "0xB9B894", VA = "0xB9B894")]
	private void restartTargetObjectActivation()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xB9B8B8", Offset = "0xB9B8B8", VA = "0xB9B8B8", Slot = "37")]
	public override void playerScoredPoint(int increase, bool maxIncrease, bool performSpecific)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xB9B93C", Offset = "0xB9B93C", VA = "0xB9B93C", Slot = "41")]
	protected override void playerLostPointGameModeSpecific()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xB9ACB0", Offset = "0xB9ACB0", VA = "0xB9ACB0")]
	public void noLongerCollidingWithPlayer()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xB9A45C", Offset = "0xB9A45C", VA = "0xB9A45C")]
	private void forcePlayerCanScoreAgain()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xB9B940", Offset = "0xB9B940", VA = "0xB9B940")]
	private void targetTouchGenericSetup()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xB9BB00", Offset = "0xB9BB00", VA = "0xB9BB00", Slot = "28")]
	protected override void generalGameModeStopGame()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xB9BDB0", Offset = "0xB9BDB0", VA = "0xB9BDB0", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xB9C03C", Offset = "0xB9C03C", VA = "0xB9C03C", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xB9C0F4", Offset = "0xB9C0F4", VA = "0xB9C0F4", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xB9BD38", Offset = "0xB9BD38", VA = "0xB9BD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FA4C", Offset = "0x59FA4C")]
	private IEnumerator startGameObjectsDisappearanceAnimations()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xB9C1A8", Offset = "0xB9C1A8", VA = "0xB9C1A8", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FAAC", Offset = "0x59FAAC")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xB9C220", Offset = "0xB9C220", VA = "0xB9C220")]
	public ScoreKeeper getScoreKeeper()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xB9BC14", Offset = "0xB9BC14", VA = "0xB9BC14")]
	private void stopAllGameObjectEffects()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xB9C228", Offset = "0xB9C228", VA = "0xB9C228", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xB9C35C", Offset = "0xB9C35C", VA = "0xB9C35C")]
	public void setPlayerCanScorePointsTest()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xB9C384", Offset = "0xB9C384", VA = "0xB9C384", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xB9C3F8", Offset = "0xB9C3F8", VA = "0xB9C3F8")]
	public void clearAllGameObjects()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xB9C48C", Offset = "0xB9C48C", VA = "0xB9C48C", Slot = "54")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xB9C4E0", Offset = "0xB9C4E0", VA = "0xB9C4E0", Slot = "56")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xB9C818", Offset = "0xB9C818", VA = "0xB9C818", Slot = "20")]
	protected override void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xB97A98", Offset = "0xB97A98", VA = "0xB97A98")]
	public void targetObjectCollidedWithPlayer()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xB9C948", Offset = "0xB9C948", VA = "0xB9C948")]
	public TargetTouchGameController()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xB9CB3C", Offset = "0xB9CB3C", VA = "0xB9CB3C")]
	[DebuggerHidden]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59FB0C", Offset = "0x59FB0C")]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x20001AD")]
public class TargetTouchGameModeParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x20001AE")]
	public enum TARGET_TOUCH_ACTIVE_GAME_MODE
	{
		[Token(Token = "0x4000943")]
		NORMAL,
		[Token(Token = "0x4000944")]
		HAND_TWITCH,
		[Token(Token = "0x4000945")]
		CONTAINER_MOVES
	}

	[Token(Token = "0x20001AF")]
	public enum AdditionalVerticalObjects
	{
		[Token(Token = "0x4000947")]
		NONE,
		[Token(Token = "0x4000948")]
		TWO,
		[Token(Token = "0x4000949")]
		SIX,
		[Token(Token = "0x400094A")]
		TEN
	}

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TARGET_TOUCH_ACTIVE_GAME_MODE currentGameMode;

	[Token(Token = "0x4000929")]
	private const string GAME_MODE_NAME = "TARGET_TOUCH_GAME_MODE";

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameModeValues.GameAndSubModeDifficulty targetTouchCurrentyDifficulty;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static float activationDuration;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int maximumDurationAfterLastActivation;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float xDistanceBetweenObjects;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float zDistanceBetweenCameraAndGameObjects;

	[Token(Token = "0x4000930")]
	public const float BASE_MOVEMENT_VALUE = 0.25f;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected static float targetObjectSize;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float tutorialTargetObjectSize;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected static int numberOfHandTwitchObjectsToBeCreated;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static int numberOfTargetObjectsToBeCreated;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static AdditionalVerticalObjects crossMode;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static bool targetObjectsMove;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected static float timeToDestination;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float maximumMovementDistance;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static int timeToResetHands;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int rotationSpeed;

	[Token(Token = "0x400093B")]
	public const float LEFT_RIGHT_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x400093C")]
	public const float BACK_FORWARD_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x400093D")]
	public const float VERTICAL_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x400093E")]
	public const float VERTICAL_MOVEMENT_AMOUNT_DOWN = 0.2f;

	[Token(Token = "0x400093F")]
	public const float VERTICAL_MOVEMENT_AMOUNT_UP = 0.1f;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float containerMovementSpeed;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxAmountOfParallelMovements;

	[Token(Token = "0x170000C8")]
	public static int MaximumDurationAfterLastActivation
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0xB9D594", Offset = "0xB9D594", VA = "0xB9D594")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0xB9D5F8", Offset = "0xB9D5F8", VA = "0xB9D5F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static float XDistanceBetweenObjects
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0xB9D660", Offset = "0xB9D660", VA = "0xB9D660")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xB9D6C4", Offset = "0xB9D6C4", VA = "0xB9D6C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public static float ZDistanceBetweenCameraAndGameObjects
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xB9D734", Offset = "0xB9D734", VA = "0xB9D734")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xB9D798", Offset = "0xB9D798", VA = "0xB9D798")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public static float TargetObjectSize
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xB9D808", Offset = "0xB9D808", VA = "0xB9D808")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xB9D86C", Offset = "0xB9D86C", VA = "0xB9D86C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public static int NumberOfTargetObjectsToBeCreated
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xB9D8DC", Offset = "0xB9D8DC", VA = "0xB9D8DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xB9D940", Offset = "0xB9D940", VA = "0xB9D940")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public static AdditionalVerticalObjects CrossMode
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xB9D9A8", Offset = "0xB9D9A8", VA = "0xB9D9A8")]
		get
		{
			return default(AdditionalVerticalObjects);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xB9DA0C", Offset = "0xB9DA0C", VA = "0xB9DA0C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public static bool TargetObjectsMove
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xB9DA74", Offset = "0xB9DA74", VA = "0xB9DA74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xB9DAD8", Offset = "0xB9DAD8", VA = "0xB9DAD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public static float TimeToDestination
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xB9DB44", Offset = "0xB9DB44", VA = "0xB9DB44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xB9DBA8", Offset = "0xB9DBA8", VA = "0xB9DBA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static float MaximumMovementDistance
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xB9DC18", Offset = "0xB9DC18", VA = "0xB9DC18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB9DCD8", Offset = "0xB9DCD8", VA = "0xB9DCD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public static int TimeToResetHands
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB9DD48", Offset = "0xB9DD48", VA = "0xB9DD48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xB9DDAC", Offset = "0xB9DDAC", VA = "0xB9DDAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public static int NumberOfHandTwitchObjectsToBeCreated
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0xB9DE14", Offset = "0xB9DE14", VA = "0xB9DE14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xB9DE78", Offset = "0xB9DE78", VA = "0xB9DE78")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public static float TutorialTargetObjectSize
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xB9DEE0", Offset = "0xB9DEE0", VA = "0xB9DEE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xB9DF44", Offset = "0xB9DF44", VA = "0xB9DF44")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public static int RotationSpeed
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xB9DFB4", Offset = "0xB9DFB4", VA = "0xB9DFB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xB9E018", Offset = "0xB9E018", VA = "0xB9E018")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public static float ContainerMovementSpeed
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0xB9E080", Offset = "0xB9E080", VA = "0xB9E080")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000964")]
		[Address(RVA = "0xB9E0E4", Offset = "0xB9E0E4", VA = "0xB9E0E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public static int MaxAmountOfParallelMovements
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0xB9E154", Offset = "0xB9E154", VA = "0xB9E154")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000966")]
		[Address(RVA = "0xB9E1B8", Offset = "0xB9E1B8", VA = "0xB9E1B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xB9CB44", Offset = "0xB9CB44", VA = "0xB9CB44")]
	public void setTargetTouchGameMode(TARGET_TOUCH_ACTIVE_GAME_MODE gameMode)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xB9CB4C", Offset = "0xB9CB4C", VA = "0xB9CB4C")]
	public TARGET_TOUCH_ACTIVE_GAME_MODE getCurrentTargetTouchGameMode()
	{
		return default(TARGET_TOUCH_ACTIVE_GAME_MODE);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xB9CB54", Offset = "0xB9CB54", VA = "0xB9CB54", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty targetTouchDifficulty)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xB9E220", Offset = "0xB9E220", VA = "0xB9E220")]
	public static float getActivationDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xB9E284", Offset = "0xB9E284", VA = "0xB9E284")]
	public static void setActivationDuration(float value)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xB9E2F4", Offset = "0xB9E2F4", VA = "0xB9E2F4", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xB9E2FC", Offset = "0xB9E2FC", VA = "0xB9E2FC", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xB9E340", Offset = "0xB9E340", VA = "0xB9E340", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xB9E5F0", Offset = "0xB9E5F0", VA = "0xB9E5F0", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xB9E67C", Offset = "0xB9E67C", VA = "0xB9E67C", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xB9E7CC", Offset = "0xB9E7CC", VA = "0xB9E7CC")]
	public TargetTouchGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20001B0")]
public class TargetTouchHandsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x400094B")]
	private const string SCRIPT_NAME = "TargetTouchPlayerHandsCollisionChecker";

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int collisionWithPlayerCounter;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xB9EC40", Offset = "0xB9EC40", VA = "0xB9EC40")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xB9EC4C", Offset = "0xB9EC4C", VA = "0xB9EC4C", Slot = "4")]
	protected virtual void performOnOnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xB9ED50", Offset = "0xB9ED50", VA = "0xB9ED50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xB9ED5C", Offset = "0xB9ED5C", VA = "0xB9ED5C", Slot = "5")]
	protected virtual void performOnOnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xB9EE1C", Offset = "0xB9EE1C", VA = "0xB9EE1C")]
	protected void contactEnded()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xB9EE6C", Offset = "0xB9EE6C", VA = "0xB9EE6C")]
	public int getCollisionWithPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xB9AA74", Offset = "0xB9AA74", VA = "0xB9AA74")]
	public void reset()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xB9EE74", Offset = "0xB9EE74", VA = "0xB9EE74")]
	public int getTouchedByPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xB9EE7C", Offset = "0xB9EE7C", VA = "0xB9EE7C")]
	public TargetTouchHandsCollisionChecker()
	{
	}
}
[Token(Token = "0x20001B1")]
public class DEPRECATEDTargetTouchIntroObjectController : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59667C", Offset = "0x59667C")]
	private sealed class <startTutorialObjectsAppearanceAnimations>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArrayList tutorialObjects;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x9F39EC", Offset = "0x9F39EC", VA = "0x9F39EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x9F3A34", Offset = "0x9F3A34", VA = "0x9F3A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x9F3804", Offset = "0x9F3804", VA = "0x9F3804")]
		[DebuggerHidden]
		public <startTutorialObjectsAppearanceAnimations>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x9F3830", Offset = "0x9F3830", VA = "0x9F3830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x9F3834", Offset = "0x9F3834", VA = "0x9F3834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x9F39F4", Offset = "0x9F39F4", VA = "0x9F39F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59668C", Offset = "0x59668C")]
	private sealed class <WaitUntilPlayerTouchesActiveObject>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x9F35A4", Offset = "0x9F35A4", VA = "0x9F35A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x9F35EC", Offset = "0x9F35EC", VA = "0x9F35EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x9F33FC", Offset = "0x9F33FC", VA = "0x9F33FC")]
		[DebuggerHidden]
		public <WaitUntilPlayerTouchesActiveObject>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x9F3428", Offset = "0x9F3428", VA = "0x9F3428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x9F342C", Offset = "0x9F342C", VA = "0x9F342C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x9F35AC", Offset = "0x9F35AC", VA = "0x9F35AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59669C", Offset = "0x59669C")]
	private sealed class <WaitUntilPlayerTouchesDeactivatedObject>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x9F37B4", Offset = "0x9F37B4", VA = "0x9F37B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x9F37FC", Offset = "0x9F37FC", VA = "0x9F37FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x9F35F4", Offset = "0x9F35F4", VA = "0x9F35F4")]
		[DebuggerHidden]
		public <WaitUntilPlayerTouchesDeactivatedObject>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x9F3620", Offset = "0x9F3620", VA = "0x9F3620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x9F3624", Offset = "0x9F3624", VA = "0x9F3624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x9F37BC", Offset = "0x9F37BC", VA = "0x9F37BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966AC", Offset = "0x5966AC")]
	private sealed class <WaitForSeconds>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int seconds;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x9F31B4", Offset = "0x9F31B4", VA = "0x9F31B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x9F31FC", Offset = "0x9F31FC", VA = "0x9F31FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x9F30DC", Offset = "0x9F30DC", VA = "0x9F30DC")]
		[DebuggerHidden]
		public <WaitForSeconds>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x9F3108", Offset = "0x9F3108", VA = "0x9F3108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x9F310C", Offset = "0x9F310C", VA = "0x9F310C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x9F31BC", Offset = "0x9F31BC", VA = "0x9F31BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966BC", Offset = "0x5966BC")]
	private sealed class <WaitUntilHandsReset>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x9F33AC", Offset = "0x9F33AC", VA = "0x9F33AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x9F33F4", Offset = "0x9F33F4", VA = "0x9F33F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x9F3204", Offset = "0x9F3204", VA = "0x9F3204")]
		[DebuggerHidden]
		public <WaitUntilHandsReset>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x9F3230", Offset = "0x9F3230", VA = "0x9F3230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x9F3234", Offset = "0x9F3234", VA = "0x9F3234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x9F33B4", Offset = "0x9F33B4", VA = "0x9F33B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ArrayList tutorialGameObjects;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TargetObject middleTargetObject;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TargetTouchTutorialController targetTouchIntroManager;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool playerHandsReset;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool allowPlayerHandsReset;

	[Token(Token = "0x4000955")]
	private const int NUMBER_OF_TUTORIAL_OBJECTS = 3;

	[Token(Token = "0x4000956")]
	public const float TUTORIAL_OBJECT_SIZE = 0.2f;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xB8657C", Offset = "0xB8657C", VA = "0xB8657C")]
	public void createIntroObjects()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xB86580", Offset = "0xB86580", VA = "0xB86580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FCD4", Offset = "0x59FCD4")]
	private IEnumerator startTutorialObjectsAppearanceAnimations(ArrayList tutorialObjects)
	{
		return null;
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xB865F8", Offset = "0xB865F8", VA = "0xB865F8")]
	private ArrayList instantiateTutorialObjectPrefabs()
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xB8673C", Offset = "0xB8673C", VA = "0xB8673C")]
	private void setMiddleObject()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xB867E0", Offset = "0xB867E0", VA = "0xB867E0")]
	public void activateMiddleObject()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xB86820", Offset = "0xB86820", VA = "0xB86820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FD34", Offset = "0x59FD34")]
	public IEnumerator WaitUntilPlayerTouchesActiveObject()
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xB86898", Offset = "0xB86898", VA = "0xB86898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FD94", Offset = "0x59FD94")]
	public IEnumerator WaitUntilPlayerTouchesDeactivatedObject()
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xB86910", Offset = "0xB86910", VA = "0xB86910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FDF4", Offset = "0x59FDF4")]
	public IEnumerator WaitForSeconds(int seconds)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xB8697C", Offset = "0xB8697C", VA = "0xB8697C")]
	public void playerHasResetHands()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xB86990", Offset = "0xB86990", VA = "0xB86990")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x59FE54", Offset = "0x59FE54")]
	public IEnumerator WaitUntilHandsReset()
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xB86A08", Offset = "0xB86A08", VA = "0xB86A08")]
	public void removeTutorialObjects()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xB86A24", Offset = "0xB86A24", VA = "0xB86A24")]
	private void startTutorialObjectsDisappearanceAnimations()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xB86D40", Offset = "0xB86D40", VA = "0xB86D40")]
	public void destroyTutorialObjects()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xB87044", Offset = "0xB87044", VA = "0xB87044")]
	public void setAllowPlayerHandsToBeReset()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xB87050", Offset = "0xB87050", VA = "0xB87050")]
	public DEPRECATEDTargetTouchIntroObjectController()
	{
	}
}
[Token(Token = "0x20001B7")]
public class TargetTouchObjectCreationService : MonoBehaviour
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966CC", Offset = "0x5966CC")]
	private sealed class <recreateObjectsCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchObjectCreationService <>4__this;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x8FF108", Offset = "0x8FF108", VA = "0x8FF108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x8FF150", Offset = "0x8FF150", VA = "0x8FF150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x8FF064", Offset = "0x8FF064", VA = "0x8FF064")]
		[DebuggerHidden]
		public <recreateObjectsCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8FF090", Offset = "0x8FF090", VA = "0x8FF090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8FF094", Offset = "0x8FF094", VA = "0x8FF094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8FF110", Offset = "0x8FF110", VA = "0x8FF110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> currentObjects;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TargetTouchObjectPositioningService targetTouchObjectPositioningService;

	[Token(Token = "0x170000E1")]
	public TargetTouchGameController TargetTouchGameController
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xB9EFF0", Offset = "0xB9EFF0", VA = "0xB9EFF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xB9EFF8", Offset = "0xB9EFF8", VA = "0xB9EFF8")]
		set
		{
		}
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xB9C39C", Offset = "0xB9C39C", VA = "0xB9C39C")]
	public void recreateTargetObjects()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xB9F248", Offset = "0xB9F248", VA = "0xB9F248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0044", Offset = "0x5A0044")]
	private IEnumerator recreateObjectsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xB9A480", Offset = "0xB9A480", VA = "0xB9A480")]
	public void createTargetObjects(bool objectsNeedToPerformIntro)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xB9FBB8", Offset = "0xB9FBB8", VA = "0xB9FBB8")]
	private void setIdsOnTargetObjects()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xB9F000", Offset = "0xB9F000", VA = "0xB9F000")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xB9F920", Offset = "0xB9F920", VA = "0xB9F920")]
	public void createTargetTouchObjects()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xB9FEDC", Offset = "0xB9FEDC", VA = "0xB9FEDC")]
	protected GameObject createTargetObject(int x)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xB9F048", Offset = "0xB9F048", VA = "0xB9F048")]
	protected void destroyAllCurrentActiveGameObjects()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xBA00DC", Offset = "0xBA00DC", VA = "0xBA00DC")]
	public void addToTargetObjects(GameObject gameObject, bool vertical)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xB9FC80", Offset = "0xB9FC80", VA = "0xB9FC80")]
	private List<int> getIndexOfVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xB9F2C0", Offset = "0xB9F2C0", VA = "0xB9F2C0")]
	public void createHandTwitchObjects()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xB9F810", Offset = "0xB9F810", VA = "0xB9F810")]
	private void setAppearancePosOnTargetObjects(List<Vector3> positions)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xBA01E0", Offset = "0xBA01E0", VA = "0xBA01E0")]
	public List<GameObject> getCurrentObjects()
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xBA01E8", Offset = "0xBA01E8", VA = "0xBA01E8")]
	public TargetTouchObjectCreationService()
	{
	}
}
[Token(Token = "0x20001B9")]
public class TargetTouchObjectPositioningService : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform transformOfPlayerCamera;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] boundaries;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float objectSize;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 targetObjectPosBasedOnPlayArea;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xB9F360", Offset = "0xB9F360", VA = "0xB9F360")]
	public void init(float objectSize)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xBA026C", Offset = "0xBA026C", VA = "0xBA026C")]
	private Vector3 getMidTargetObjectPosBasedOnPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xB9FB20", Offset = "0xB9FB20", VA = "0xB9FB20")]
	public List<Vector3> getTargetObjectPositions()
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xBA09C4", Offset = "0xBA09C4", VA = "0xBA09C4")]
	public Vector3 getTutorialObjectPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xBA037C", Offset = "0xBA037C", VA = "0xBA037C")]
	private List<Vector3> calculateObjectPositions(Vector3 startingPos)
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xB9F524", Offset = "0xB9F524", VA = "0xB9F524")]
	public List<Vector3> getHandTwitchPositions()
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xBA0804", Offset = "0xBA0804", VA = "0xBA0804")]
	private bool checkAllPositionsWithinPlayArea(List<Vector3> positions)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xBA0A7C", Offset = "0xBA0A7C", VA = "0xBA0A7C")]
	private List<int> getIndexOfVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xBA0CD8", Offset = "0xBA0CD8", VA = "0xBA0CD8")]
	public TargetTouchObjectPositioningService()
	{
	}
}
[Token(Token = "0x20001BA")]
public class TargetTouchObjectTouchedWhileInactiveEffectController : MonoBehaviour
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip loopingElectricitySound;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material normalMaterial;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material touchedWhileInactiveMaterial;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xB9604C", Offset = "0xB9604C", VA = "0xB9604C")]
	public void startInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xB96098", Offset = "0xB96098", VA = "0xB96098")]
	public void startInactiveTouchedEffectNoAudio()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xB96398", Offset = "0xB96398", VA = "0xB96398")]
	public void stopInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xB960B4", Offset = "0xB960B4", VA = "0xB960B4")]
	public void stopInactiveTouchedEffectNoAudio()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xBA0D94", Offset = "0xBA0D94", VA = "0xBA0D94")]
	public void setTargetTouchGameController(TargetTouchGameController targetTouchGameController)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xBA0D70", Offset = "0xBA0D70", VA = "0xBA0D70")]
	private void activateForceFieldEffect()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xBA0D9C", Offset = "0xBA0D9C", VA = "0xBA0D9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xBA0E6C", Offset = "0xBA0E6C", VA = "0xBA0E6C")]
	public TargetTouchObjectTouchedWhileInactiveEffectController()
	{
	}
}
[Token(Token = "0x20001BB")]
public class DEPRECATEDTargetTouchPlayerHandsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int touchedByPlayer;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xB87058", Offset = "0xB87058", VA = "0xB87058")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xB87064", Offset = "0xB87064", VA = "0xB87064", Slot = "4")]
	protected virtual void performOnOnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xB87160", Offset = "0xB87160", VA = "0xB87160")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xB8716C", Offset = "0xB8716C", VA = "0xB8716C", Slot = "5")]
	protected virtual void performOnOnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xB87124", Offset = "0xB87124", VA = "0xB87124")]
	protected void contactStarted()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xB8722C", Offset = "0xB8722C", VA = "0xB8722C")]
	protected void contactEnded()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xB87264", Offset = "0xB87264", VA = "0xB87264")]
	public void reset()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xB8726C", Offset = "0xB8726C", VA = "0xB8726C")]
	public int getTouchedByPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xB87274", Offset = "0xB87274", VA = "0xB87274")]
	public DEPRECATEDTargetTouchPlayerHandsCollisionChecker()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TargetObjectEffectTester : MonoBehaviour
{
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected TargetTouchObjectTouchedWhileInactiveEffectController inactiveEffectController;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xB98790", Offset = "0xB98790", VA = "0xB98790")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xB987B8", Offset = "0xB987B8", VA = "0xB987B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xB98C8C", Offset = "0xB98C8C", VA = "0xB98C8C")]
	public TargetObjectEffectTester()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TargetObjectInstantiatePrefabsTest : MonoBehaviour
{
	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] gameObjectsThatNeedPrefabsLoaded;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xB98C94", Offset = "0xB98C94", VA = "0xB98C94")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xB98D4C", Offset = "0xB98D4C", VA = "0xB98D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xB98D50", Offset = "0xB98D50", VA = "0xB98D50")]
	public TargetObjectInstantiatePrefabsTest()
	{
	}
}
[Token(Token = "0x20001BE")]
public class TargetObjectRandomMovementTest : MonoBehaviour
{
	[Token(Token = "0x4000983")]
	private const string scriptName = "TargetObjectRandomMovementTest";

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject destinationGameObject;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform destinationTransform;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_Speed;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool targetObjectMoves;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject gameObjectForTransformOfOriginalPosition;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform transformOfOriginalPosition;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int maximumDistanceFromOriginalPosition;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform objectsOwnTransformComponent;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xB98D58", Offset = "0xB98D58", VA = "0xB98D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xB98DC4", Offset = "0xB98DC4", VA = "0xB98DC4")]
	public void updateTransformOfOriginalPosition()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xB98FD0", Offset = "0xB98FD0", VA = "0xB98FD0")]
	private void createDestinationTransform()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xB9929C", Offset = "0xB9929C", VA = "0xB9929C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xB9944C", Offset = "0xB9944C", VA = "0xB9944C")]
	public TargetObjectRandomMovementTest()
	{
	}
}
[Token(Token = "0x20001BF")]
public class TargetTouchHandSpecificActivationTester : MonoBehaviour
{
	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xB9E934", Offset = "0xB9E934", VA = "0xB9E934")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xB9EA18", Offset = "0xB9EA18", VA = "0xB9EA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xB9EC38", Offset = "0xB9EC38", VA = "0xB9EC38")]
	public TargetTouchHandSpecificActivationTester()
	{
	}
}
[Token(Token = "0x20001C0")]
public class TargetTouchTutorialController : TutorialController
{
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966DC", Offset = "0x5966DC")]
	private sealed class <performGameModeSpecificTutorialSteps>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchTutorialController <>4__this;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <activeTutorialObject>5__2;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x900204", Offset = "0x900204", VA = "0x900204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x90024C", Offset = "0x90024C", VA = "0x90024C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x8FF158", Offset = "0x8FF158", VA = "0x8FF158")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x8FF184", Offset = "0x8FF184", VA = "0x8FF184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x8FF188", Offset = "0x8FF188", VA = "0x8FF188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x90020C", Offset = "0x90020C", VA = "0x90020C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TargetTouchHandsCollisionChecker targetTouchHandsCollisionChecker;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private MakeObjectSeeThrough makeObjectSeeThrough;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject tutorialTargetTouchObject;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialObjectPositioningHelper;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xBA0E74", Offset = "0xBA0E74", VA = "0xBA0E74", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A00F4", Offset = "0x5A00F4")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xBA0F00", Offset = "0xBA0F00", VA = "0xBA0F00", Slot = "23")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xBA0F20", Offset = "0xBA0F20", VA = "0xBA0F20", Slot = "24")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBA0F40", Offset = "0xBA0F40", VA = "0xBA0F40", Slot = "22")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xBA0F94", Offset = "0xBA0F94", VA = "0xBA0F94")]
	private void activateTutorialObject(GameObject gameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xBA103C", Offset = "0xBA103C", VA = "0xBA103C")]
	private void deactivateTutorialObject(GameObject activeTutorialObject)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xBA10CC", Offset = "0xBA10CC", VA = "0xBA10CC")]
	public TargetTouchTutorialController()
	{
	}
}
[Token(Token = "0x20001C2")]
public class TargetTouchTutorialObjectCoordinationCoachPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBA10D4", Offset = "0xBA10D4", VA = "0xBA10D4", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBA11CC", Offset = "0xBA11CC", VA = "0xBA11CC")]
	public TargetTouchTutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x20001C3")]
public class TutorialTargetObject : TargetObject, TutorialObjectInterface
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private bool disappearanceForced;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private TutorialController tutorialController;

	[Token(Token = "0x170000E6")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xF1E6DC", Offset = "0xF1E6DC", VA = "0xF1E6DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xF1E6E4", Offset = "0xF1E6E4", VA = "0xF1E6E4")]
		set
		{
		}
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xF1E6F4", Offset = "0xF1E6F4", VA = "0xF1E6F4", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF1E928", Offset = "0xF1E928", VA = "0xF1E928", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xF1E99C", Offset = "0xF1E99C", VA = "0xF1E99C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xF1E9F8", Offset = "0xF1E9F8", VA = "0xF1E9F8", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xF1EA38", Offset = "0xF1EA38", VA = "0xF1EA38", Slot = "118")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xF1EA48", Offset = "0xF1EA48", VA = "0xF1EA48", Slot = "97")]
	public override string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xF1EAA8", Offset = "0xF1EAA8", VA = "0xF1EAA8", Slot = "119")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xF1EAB4", Offset = "0xF1EAB4", VA = "0xF1EAB4", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xF1EB28", Offset = "0xF1EB28", VA = "0xF1EB28")]
	public TutorialTargetObject()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ValidActivationTypesService : MonoBehaviour
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController leftHand;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandController rightHand;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool infinitePlayerHandEnergy;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool activateHandSpecificObjects;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool leftHandOnlyObjectActive;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool rightHandOnlyObjectActive;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DateTime leftHandOnlyObjectDeactivationTime;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime rightHandOnlyObjectDeactivationTime;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly double MIN_ELAPSED_TIME;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesAnyHandOnly;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesAnyHandOnlyAndDoNotTouch;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesIncludingDoNotTouch;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesWithoutDoNotTouch;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CoordinationCoachGameObject.ActivationType> activationNotPossibleList;

	[Token(Token = "0x170000E7")]
	public bool ActivateHandSpecificObjects
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xF21444", Offset = "0xF21444", VA = "0xF21444")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xF2144C", Offset = "0xF2144C", VA = "0xF2144C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public bool InfinitePlayerHandEnergy
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xF21458", Offset = "0xF21458", VA = "0xF21458")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xF21460", Offset = "0xF21460", VA = "0xF21460")]
		set
		{
		}
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xF2146C", Offset = "0xF2146C", VA = "0xF2146C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xF21660", Offset = "0xF21660", VA = "0xF21660")]
	public List<CoordinationCoachGameObject.ActivationType> getValidActivationTypesIncludingDoNotTouch()
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xF21790", Offset = "0xF21790", VA = "0xF21790")]
	public List<CoordinationCoachGameObject.ActivationType> getValidActivationTypesWithoutDoNotTouch()
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xF218F8", Offset = "0xF218F8", VA = "0xF218F8")]
	private bool isLeftHandOnlyActivationTypeValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xF21A0C", Offset = "0xF21A0C", VA = "0xF21A0C")]
	private bool isRightHandOnlyActivationTypeValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xF21B20", Offset = "0xF21B20", VA = "0xF21B20")]
	public void activationTypeActived(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xF21B68", Offset = "0xF21B68", VA = "0xF21B68")]
	public void activationTypeDeactivated(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xF21C2C", Offset = "0xF21C2C", VA = "0xF21C2C")]
	public void setLeftHandOnlyObject(bool leftHandOnlyObject)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xF21C58", Offset = "0xF21C58", VA = "0xF21C58")]
	public bool isLeftHandObjectActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xF21C7C", Offset = "0xF21C7C", VA = "0xF21C7C")]
	public void setRightHandOnlyObject(bool rightHandOnlyObject)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xF21CA8", Offset = "0xF21CA8", VA = "0xF21CA8")]
	public bool isRightHandObjectActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xF21744", Offset = "0xF21744", VA = "0xF21744")]
	public int getNumberOfActiveValidHands()
	{
		return default(int);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xF21CCC", Offset = "0xF21CCC", VA = "0xF21CCC")]
	public CoordinationCoachGameObject.ActivationType getRandomActivationTypeIncludingDoNotTouch()
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xF21E5C", Offset = "0xF21E5C", VA = "0xF21E5C")]
	public CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithoutDoNotTouch()
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xF21CE4", Offset = "0xF21CE4", VA = "0xF21CE4")]
	private CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithDoNotTouch(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xF21E74", Offset = "0xF21E74", VA = "0xF21E74")]
	private CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithoutDoNotTouch(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xF21F6C", Offset = "0xF21F6C", VA = "0xF21F6C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xF21FF0", Offset = "0xF21FF0", VA = "0xF21FF0")]
	public ValidActivationTypesService()
	{
	}
}
[Token(Token = "0x20001C5")]
public class WarningBeepController : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	private enum CLIP_PLAYING
	{
		[Token(Token = "0x40009B7")]
		NONE,
		[Token(Token = "0x40009B8")]
		FIRST,
		[Token(Token = "0x40009B9")]
		SECOND,
		[Token(Token = "0x40009BA")]
		THIRD
	}

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip firstWarningClip;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip secondWarningClip;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip thirdWarningClip;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly float FIRST_CLIP_VOLUME;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly float SECOND_CLIP_VOLUME;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly float THIRD_CLIP_VOLUME;

	[Token(Token = "0x40009AF")]
	public const float SECOND_DISTANCE = 0.2f;

	[Token(Token = "0x40009B0")]
	public const float THIRD_DISTANCE = 0.1f;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private CLIP_PLAYING currentClipPlaying;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<CLIP_PLAYING, AudioClip> clipDictionary;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<CLIP_PLAYING, float> volumeDictionary;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool playAudio;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 targetPos;

	[Token(Token = "0x170000E9")]
	public Vector3 TargetPos
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x9E681C", Offset = "0x9E681C", VA = "0x9E681C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x9E6828", Offset = "0x9E6828", VA = "0x9E6828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x9E6940", Offset = "0x9E6940", VA = "0x9E6940")]
	public void playLoopingWarning()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x9E6AB4", Offset = "0x9E6AB4", VA = "0x9E6AB4")]
	private void playClip(CLIP_PLAYING clipToPlay)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x9E6B94", Offset = "0x9E6B94", VA = "0x9E6B94")]
	public void setPlayAudio(bool input)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x9E6A0C", Offset = "0x9E6A0C", VA = "0x9E6A0C")]
	public float getFirstWarningDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x9E6C00", Offset = "0x9E6C00", VA = "0x9E6C00")]
	public WarningBeepController()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966EC", Offset = "0x5966EC")]
	private sealed class <fadeOutCurrentAudioFadeInNewAudioCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeOutTime;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInTime;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxVolume;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x9ED2E4", Offset = "0x9ED2E4", VA = "0x9ED2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x9ED32C", Offset = "0x9ED32C", VA = "0x9ED32C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x9ED198", Offset = "0x9ED198", VA = "0x9ED198")]
		[DebuggerHidden]
		public <fadeOutCurrentAudioFadeInNewAudioCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x9ED1C4", Offset = "0x9ED1C4", VA = "0x9ED1C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x9ED1C8", Offset = "0x9ED1C8", VA = "0x9ED1C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x9ED2EC", Offset = "0x9ED2EC", VA = "0x9ED2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5966FC", Offset = "0x5966FC")]
	private sealed class <fadeInAudioCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTime;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxVolume;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x9ECFC4", Offset = "0x9ECFC4", VA = "0x9ECFC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x9ED00C", Offset = "0x9ED00C", VA = "0x9ED00C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x9ECE98", Offset = "0x9ECE98", VA = "0x9ECE98")]
		[DebuggerHidden]
		public <fadeInAudioCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x9ECEC4", Offset = "0x9ECEC4", VA = "0x9ECEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x9ECEC8", Offset = "0x9ECEC8", VA = "0x9ECEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x9ECFCC", Offset = "0x9ECFCC", VA = "0x9ECFCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59670C", Offset = "0x59670C")]
	private sealed class <fadeOutCurrentAudioCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x9ED148", Offset = "0x9ED148", VA = "0x9ED148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x9ED190", Offset = "0x9ED190", VA = "0x9ED190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x9ED014", Offset = "0x9ED014", VA = "0x9ED014")]
		[DebuggerHidden]
		public <fadeOutCurrentAudioCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x9ED040", Offset = "0x9ED040", VA = "0x9ED040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x9ED044", Offset = "0x9ED044", VA = "0x9ED044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x9ED150", Offset = "0x9ED150", VA = "0x9ED150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioClip backgroundMusic;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AudioClip tutorialMusic;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip buttonClicked;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip onRayOverButton;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip errorSound;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip backButtonClicked;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip gameStarted;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AudioSource audioSource;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x9D6E04", Offset = "0x9D6E04", VA = "0x9D6E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x9D6EF8", Offset = "0x9D6EF8", VA = "0x9D6EF8")]
	private void setAudioSource()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x9D7014", Offset = "0x9D7014", VA = "0x9D7014")]
	public void playClipLooping(AudioClip clip)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x9D7070", Offset = "0x9D7070", VA = "0x9D7070")]
	public void fadeOutCurrentAudioFadeInNewAudio(float fadeOutTime, AudioClip clip, float fadeInTime, float maxVolume)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x9D70D8", Offset = "0x9D70D8", VA = "0x9D70D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A01A4", Offset = "0x5A01A4")]
	private IEnumerator fadeOutCurrentAudioFadeInNewAudioCoroutine(float fadeOutTime, AudioClip clip, float fadeInTime, float maxVolume)
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x9D7190", Offset = "0x9D7190", VA = "0x9D7190")]
	public void fadeInAudio(AudioClip clip, float fadeTime, float maxVolume)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x9D7208", Offset = "0x9D7208", VA = "0x9D7208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0204", Offset = "0x5A0204")]
	private IEnumerator fadeInAudioCoroutine(AudioClip clip, float fadeTime, float maxVolume)
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x9D72B0", Offset = "0x9D72B0", VA = "0x9D72B0")]
	public void fadeOutCurrentAudio(float fadeTime)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x9D72DC", Offset = "0x9D72DC", VA = "0x9D72DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0264", Offset = "0x5A0264")]
	private IEnumerator fadeOutCurrentAudioCoroutine(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9D7364", Offset = "0x9D7364", VA = "0x9D7364")]
	public AudioClip getTutorialAudioClip()
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x9D736C", Offset = "0x9D736C", VA = "0x9D736C")]
	public AudioClip getBackgroundMusic()
	{
		return null;
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x9D6D9C", Offset = "0x9D6D9C", VA = "0x9D6D9C")]
	public void playButtonClicked()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9D6DD8", Offset = "0x9D6DD8", VA = "0x9D6DD8")]
	public void playBackButtonClicked()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x9D7374", Offset = "0x9D7374", VA = "0x9D7374")]
	public void playGameStartedClicked()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x9D7398", Offset = "0x9D7398", VA = "0x9D7398")]
	public void playOnRayOverButton()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x9D73BC", Offset = "0x9D73BC", VA = "0x9D73BC")]
	public void playError()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x9D73E0", Offset = "0x9D73E0", VA = "0x9D73E0")]
	public AudioController()
	{
	}
}
[Token(Token = "0x20001CB")]
public class ChangeMusic : MonoBehaviour
{
	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xFD3B4C", Offset = "0xFD3B4C", VA = "0xFD3B4C")]
	public ChangeMusic()
	{
	}
}
[Token(Token = "0x20001CC")]
public class GameModeAudioController : AudioController
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip pointScored;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip pointMissed;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip playerTouchedInactiveItem;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip timeAlmostUp;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip gameEndedClip;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip gameStartCountdownClip;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip gameObjectActivated;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip playerLostClip;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xAC0A5C", Offset = "0xAC0A5C", VA = "0xAC0A5C")]
	public void playGameObjectActivated()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xAC0A80", Offset = "0xAC0A80", VA = "0xAC0A80")]
	public void playPointScored()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xAC0AA4", Offset = "0xAC0AA4", VA = "0xAC0AA4")]
	public void playPointMissed()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xAC0AC8", Offset = "0xAC0AC8", VA = "0xAC0AC8")]
	public void playTimeAlmostUp()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xAC0AEC", Offset = "0xAC0AEC", VA = "0xAC0AEC")]
	public void playPlayerLostClip()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xABE498", Offset = "0xABE498", VA = "0xABE498")]
	public void playGameEndedClip()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xAC0B10", Offset = "0xAC0B10", VA = "0xAC0B10")]
	public void playPlayerTouchedInactiveItem()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xAC0B34", Offset = "0xAC0B34", VA = "0xAC0B34")]
	public void playGameStartCountdownClip()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xAC0B58", Offset = "0xAC0B58", VA = "0xAC0B58")]
	public GameModeAudioController()
	{
	}
}
[Token(Token = "0x20001CD")]
public class VolumeConstants
{
	[Token(Token = "0x40009DF")]
	public const float MUSIC_FADE_TIME = 2f;

	[Token(Token = "0x40009E0")]
	public const float MAX_MUSIC_VOLUME = 0.1f;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xF23F5C", Offset = "0xF23F5C", VA = "0xF23F5C")]
	public VolumeConstants()
	{
	}
}
[Token(Token = "0x20001CE")]
public class BezierCurveController : MonoBehaviour
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector3[] bezierCurvePoints;

	[Token(Token = "0x40009E2")]
	public const float BEZIER_CURVE_ON_THIRD_DISTANCE = 0.33f;

	[Token(Token = "0x40009E3")]
	public const float BEZIER_CURVE_TWO_THIRDS_DISTANCE = 0.66f;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float forwardMultiplier;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 bezierCurveForwardCalculationPosition;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 bezierCurveUpCalculationPosition;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 bezierCurveRightCalculationPosition;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float curve2DMultiplier;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float firstPoint_X_DirectionMultiplier2D;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float firstPoint_Y_DirectionMultiplier2D;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float secondPoint_X_DirectionMultiplier2D;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float secondPoint_Y_DirectionMultiplier2D;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float bezierQuarterHorizontalDirection;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float bezierQuarterHorizontalMultiplier;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float bezierQuarterVerticalDirection;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float bezierQuarterVerticalMultiplier;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float bezierThreeQuartersHorizontalDirection;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bezierThreeQuartersHorizontalMultiplier;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float bezierThreeQuartersVerticalDirection;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float bezierThreeQuartersVerticalMultiplier;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float bezierQuarterForwardBackDirection;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float bezierQuarterForwardBackMultiplier;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bezierThreeQuartersForwardBackDirection;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float bezierThreeQuartersForwardBackMultiplier;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x9D7E00", Offset = "0x9D7E00", VA = "0x9D7E00")]
	public Vector3[] getBezierCurvePoints()
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x9D7E08", Offset = "0x9D7E08", VA = "0x9D7E08")]
	public void calculateNew2DBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x9D7E9C", Offset = "0x9D7E9C", VA = "0x9D7E9C")]
	public void generate2DBaseValues()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x9D7F0C", Offset = "0x9D7F0C", VA = "0x9D7F0C", Slot = "4")]
	protected virtual void calculate2DBezierCurvePoints(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x9D80E4", Offset = "0x9D80E4", VA = "0x9D80E4")]
	public void calculateNewLeftRightBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x9D8178", Offset = "0x9D8178", VA = "0x9D8178", Slot = "5")]
	protected virtual void calculateLeftRightBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x9D8478", Offset = "0x9D8478", VA = "0x9D8478")]
	public void calculate3DBezierCurve(Vector3 targetPosition, Vector3 currentMovementStartPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMutliplier)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x9D86BC", Offset = "0x9D86BC", VA = "0x9D86BC")]
	public void calculate3DBezierCurvePoints(Vector3 currentMovementStartPosition, Vector3 targetPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMultiplier)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x9D88D8", Offset = "0x9D88D8", VA = "0x9D88D8")]
	public void calculateForwardBezierCurve(Vector3 targetPosition, float direction, Vector3 currentMovementStartPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMutliplier)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x9D8964", Offset = "0x9D8964", VA = "0x9D8964")]
	public void generateForward3DBezierCurveCalculationBaseValues(Vector3 targetPosition, float direction)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9D8514", Offset = "0x9D8514", VA = "0x9D8514")]
	private void generateNewBezierCalculationPositions()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9D8590", Offset = "0x9D8590", VA = "0x9D8590")]
	private void generateForwardRightUpMovementDirections()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9D864C", Offset = "0x9D864C", VA = "0x9D864C")]
	private void generateNewMovementDirections()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x9D8A30", Offset = "0x9D8A30", VA = "0x9D8A30")]
	public void calculateForward3DBezierCurvePoints(Vector3 currentMovementStartPosition, Vector3 targetPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMultiplier)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x9D8C3C", Offset = "0x9D8C3C", VA = "0x9D8C3C")]
	public void updateBezierCurveEndpoint(Vector3 newEndpoint)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x9D8C78", Offset = "0x9D8C78", VA = "0x9D8C78")]
	public BezierCurveController()
	{
	}
}
[Token(Token = "0x20001CF")]
public class FadeCamera : MonoBehaviour
{
	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _alpha;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D _texture;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _done;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _time;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xA07E2C", Offset = "0xA07E2C", VA = "0xA07E2C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xA07E40", Offset = "0xA07E40", VA = "0xA07E40")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5A03B4", Offset = "0x5A03B4")]
	public void RedoFade()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xA07E54", Offset = "0xA07E54", VA = "0xA07E54")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xA08038", Offset = "0xA08038", VA = "0xA08038")]
	public FadeCamera()
	{
	}
}
[Token(Token = "0x20001D0")]
public class LoadGameMode : MonoBehaviour
{
	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x157CD80", Offset = "0x157CD80", VA = "0x157CD80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x157CD84", Offset = "0x157CD84", VA = "0x157CD84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x157CD88", Offset = "0x157CD88", VA = "0x157CD88")]
	public LoadGameMode()
	{
	}
}
[Token(Token = "0x20001D1")]
public class CoordinationCoachGlobalConstants : MonoBehaviour
{
	[Token(Token = "0x40009FE")]
	public const string playerHeadObjectTag = "Player";

	[Token(Token = "0x40009FF")]
	public const string playerContainerObjectTag = "PlayerContainer";

	[Token(Token = "0x4000A00")]
	public const string playerLeftHandTag = "LeftHand";

	[Token(Token = "0x4000A01")]
	public const string playerRightHandTag = "RightHand";

	[Token(Token = "0x4000A02")]
	public const string WALL_OR_FLOOR_TAG = "wallOrFloor";

	[Token(Token = "0x4000A03")]
	public const float NULL_VECTOR_X_VALUE = -66f;

	[Token(Token = "0x4000A04")]
	public const float SOUND_VOLUME = 0.5f;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OBJECT_DISAPPEARANCE_MINUS_Y;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int EFFECT_DURATION;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string COORDINATION_COACH_NAME;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float TUTORIAL_SCREEN_Z_POS;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float DISTANCE_FROM_PLAYER_HAND;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float PLAYER_HEIGHT_REDUCTION_FOR_PLAY_AREA_CALC;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float PLAYER_HEIGHT_INCREASE_FOR_PLAY_AREA_CALC;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int TUTORIAL_SCENE_INDEX;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xB823C4", Offset = "0xB823C4", VA = "0xB823C4")]
	public CoordinationCoachGlobalConstants()
	{
	}
}
[Token(Token = "0x20001D2")]
public class PositioningConstants
{
	[Token(Token = "0x4000A0D")]
	public const float TUTORIAL_OBJECTS_LEFT_RIGHT_FROM_PLAYER = 0.3f;

	[Token(Token = "0x4000A0E")]
	public const float DISTANCE_FROM_PLAY_AREA_BORDER = 0.1f;

	[Token(Token = "0x4000A0F")]
	public const float MIN_DISTANCE_FROM_PLAY_AREA_BORDER = 0.05f;

	[Token(Token = "0x4000A10")]
	public const float MIN_FORWARD_DISTANCE_FROM_PLAYER = 0.4f;

	[Token(Token = "0x4000A11")]
	public const float FORWARD_DISTANCE_FROM_PLAYER_TUTORIAL_OBJECTS = 0.55f;

	[Token(Token = "0x4000A12")]
	public const float LONG_DISTANCE = 1f;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xAE946C", Offset = "0xAE946C", VA = "0xAE946C")]
	public PositioningConstants()
	{
	}
}
[Token(Token = "0x20001D3")]
public class EnvironmentAndSkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x20001D4")]
	public enum EnvironmentType
	{
		[Token(Token = "0x4000A1A")]
		LAKE,
		[Token(Token = "0x4000A1B")]
		HILLS,
		[Token(Token = "0x4000A1C")]
		MAGMA,
		[Token(Token = "0x4000A1D")]
		CLASSIC
	}

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnvironmentType currentEnvironmentType;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material lakeMaterial;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material hillsMaterial;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material magmaMaterial;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] objects;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xA072C4", Offset = "0xA072C4", VA = "0xA072C4")]
	public void setEnvironment(EnvironmentType environmentType)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA07360", Offset = "0xA07360", VA = "0xA07360")]
	private void setObjectsEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA073DC", Offset = "0xA073DC", VA = "0xA073DC")]
	private void setRenderersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA07458", Offset = "0xA07458", VA = "0xA07458")]
	public EnvironmentAndSkyboxChanger()
	{
	}
}
[Token(Token = "0x20001D5")]
public class EnvironmentTester : MonoBehaviour
{
	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA075F8", Offset = "0xA075F8", VA = "0xA075F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA075FC", Offset = "0xA075FC", VA = "0xA075FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA076A4", Offset = "0xA076A4", VA = "0xA076A4")]
	public EnvironmentTester()
	{
	}
}
[Token(Token = "0x20001D6")]
public class MainMenuOnSceneLoadEnvironmentChanger : OnSceneLoadEnvironmentChanger
{
	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject topLevelEnvironmentButtonContainer;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> environmentElements;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1589D40", Offset = "0x1589D40", VA = "0x1589D40", Slot = "4")]
	protected override void performSetup()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1589D74", Offset = "0x1589D74", VA = "0x1589D74", Slot = "5")]
	protected override void additionalFunctionality()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1589D98", Offset = "0x1589D98", VA = "0x1589D98")]
	public MainMenuOnSceneLoadEnvironmentChanger()
	{
	}
}
[Token(Token = "0x20001D7")]
public class OnSceneLoadEnvironmentChanger : MonoBehaviour
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB08668", Offset = "0xB08668", VA = "0xB08668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB08720", Offset = "0xB08720", VA = "0xB08720", Slot = "4")]
	protected virtual void performSetup()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB08724", Offset = "0xB08724", VA = "0xB08724", Slot = "5")]
	protected virtual void additionalFunctionality()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB08728", Offset = "0xB08728", VA = "0xB08728")]
	public OnSceneLoadEnvironmentChanger()
	{
	}
}
[Token(Token = "0x20001D8")]
public class EnvironmentPositioner : MonoBehaviour
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject environmentGameObject;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 playerOriginalPos;

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA0752C", Offset = "0xA0752C", VA = "0xA0752C")]
	public void repositionEnvironment()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA075E8", Offset = "0xA075E8", VA = "0xA075E8")]
	public EnvironmentPositioner()
	{
	}
}
[Token(Token = "0x20001D9")]
public class EnvironmentRepositionOnStart : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentPositioner environmentPositioner;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA075F0", Offset = "0xA075F0", VA = "0xA075F0")]
	public EnvironmentRepositionOnStart()
	{
	}
}
[Token(Token = "0x20001DA")]
public class InGamePlayerEvents : OculusPlayerEvents
{
	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xACD2B4", Offset = "0xACD2B4", VA = "0xACD2B4")]
	public InGamePlayerEvents()
	{
	}
}
[Token(Token = "0x20001DB")]
public class PicoFocusLostListener : MonoBehaviour
{
	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xAE1300", Offset = "0xAE1300", VA = "0xAE1300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xAE1400", Offset = "0xAE1400", VA = "0xAE1400")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xAE141C", Offset = "0xAE141C", VA = "0xAE141C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xAE151C", Offset = "0xAE151C", VA = "0xAE151C")]
	public PicoFocusLostListener()
	{
	}
}
[Token(Token = "0x20001DC")]
public class QuestCheckAppInFocus : MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xAECFC4", Offset = "0xAECFC4", VA = "0xAECFC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xAED06C", Offset = "0xAED06C", VA = "0xAED06C")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xAED088", Offset = "0xAED088", VA = "0xAED088")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xAED130", Offset = "0xAED130", VA = "0xAED130")]
	public QuestCheckAppInFocus()
	{
	}
}
[Token(Token = "0x20001DD")]
public class CoordinationCoachPoolController : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59671C", Offset = "0x59671C")]
	private sealed class <initializePoolCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x9F2324", Offset = "0x9F2324", VA = "0x9F2324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x9F236C", Offset = "0x9F236C", VA = "0x9F236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x9F2280", Offset = "0x9F2280", VA = "0x9F2280")]
		[DebuggerHidden]
		public <initializePoolCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x9F22AC", Offset = "0x9F22AC", VA = "0x9F22AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x9F22B0", Offset = "0x9F22B0", VA = "0x9F22B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x9F232C", Offset = "0x9F232C", VA = "0x9F232C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59672C", Offset = "0x59672C")]
	private sealed class <destroyAndRecreatePrefabsCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x9F2230", Offset = "0x9F2230", VA = "0x9F2230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x9F2278", Offset = "0x9F2278", VA = "0x9F2278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x9F204C", Offset = "0x9F204C", VA = "0x9F204C")]
		[DebuggerHidden]
		public <destroyAndRecreatePrefabsCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x9F2078", Offset = "0x9F2078", VA = "0x9F2078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x9F207C", Offset = "0x9F207C", VA = "0x9F207C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x9F2238", Offset = "0x9F2238", VA = "0x9F2238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59673C", Offset = "0x59673C")]
	private sealed class <instantiateAndAddToQueueCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string gameObjectType;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x9F25BC", Offset = "0x9F25BC", VA = "0x9F25BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x9F2604", Offset = "0x9F2604", VA = "0x9F2604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x9F2374", Offset = "0x9F2374", VA = "0x9F2374")]
		[DebuggerHidden]
		public <instantiateAndAddToQueueCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x9F23A0", Offset = "0x9F23A0", VA = "0x9F23A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x9F23A4", Offset = "0x9F23A4", VA = "0x9F23A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x9F25C4", Offset = "0x9F25C4", VA = "0x9F25C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59674C", Offset = "0x59674C")]
	private sealed class <returnObjectToQueueCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject returnToPoolObject;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x9F2838", Offset = "0x9F2838", VA = "0x9F2838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x9F2880", Offset = "0x9F2880", VA = "0x9F2880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x9F260C", Offset = "0x9F260C", VA = "0x9F260C")]
		[DebuggerHidden]
		public <returnObjectToQueueCoroutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x9F2638", Offset = "0x9F2638", VA = "0x9F2638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x9F263C", Offset = "0x9F263C", VA = "0x9F263C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x9F2840", Offset = "0x9F2840", VA = "0x9F2840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform playerTransform;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject[] basicObjectsForWhichToCreatePools;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int[] amountOfRegularObjectsToCreate;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int amountOfRegularObjectsIndex;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject[] additionalObjectsForWhichToCreatePools;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int[] amountOfAdditionalObjectsToCreate;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int amountOfAdditionalObjectsIndex;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private int AMOUNT_OF_EACH_REGULAR_OBJECT_TO_CREATE;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int AMOUNT_OF_EACH_ADDITIONAL_OBJECT_TO_CREATE;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, GameObject> prefabs;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<string, int> prefabsXPos;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected ConcurrentDictionary<string, int> prefabsYPos;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Dictionary<string, ConcurrentQueue<GameObject>> prefabQueues;

	[Token(Token = "0x4000A38")]
	private const int X_DISTANCE_TO_ADD = 2;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int currentXPos;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected int Z_POS;

	[Token(Token = "0x4000A3B")]
	private const int starting_Y_pos = -2;

	[Token(Token = "0x4000A3C")]
	private const int MINUS_Y = 2;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int Y_POS_LIMIT;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int objectsCreatedAfterQueueInitializationId;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Coroutine activeDestroyAndReCreateObjectsCoroutine;

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB824A4", Offset = "0xB824A4", VA = "0xB824A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB82558", Offset = "0xB82558", VA = "0xB82558", Slot = "4")]
	protected virtual void performSetup()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB824E0", Offset = "0xB824E0", VA = "0xB824E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A03C4", Offset = "0x5A03C4")]
	private IEnumerator initializePoolCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB8255C", Offset = "0xB8255C", VA = "0xB8255C")]
	public void destroyAndRecreatePrefabs()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB825F4", Offset = "0xB825F4", VA = "0xB825F4", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0424", Offset = "0x5A0424")]
	protected virtual IEnumerator destroyAndRecreatePrefabsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB8266C", Offset = "0xB8266C", VA = "0xB8266C")]
	protected void destroyAllGameObjectsAndClearList(ConcurrentQueue<GameObject> gameObjectsQueue)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB827F4", Offset = "0xB827F4", VA = "0xB827F4", Slot = "6")]
	protected virtual void initializePool()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB82884", Offset = "0xB82884", VA = "0xB82884")]
	private int getAmountOfRegularObjectsToCreate()
	{
		return default(int);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xB828E4", Offset = "0xB828E4", VA = "0xB828E4")]
	private int getAmountOfAdditionalObjectsToCreate()
	{
		return default(int);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xB82944", Offset = "0xB82944", VA = "0xB82944", Slot = "7")]
	protected virtual void initalizeAdditionalObjects()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB829D4", Offset = "0xB829D4", VA = "0xB829D4", Slot = "8")]
	protected virtual void performAdditionalObjectSetup(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xB82E0C", Offset = "0xB82E0C", VA = "0xB82E0C", Slot = "9")]
	protected virtual void performSetupOnAdditionalObject(GameObject additionalGameObject)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB82E10", Offset = "0xB82E10", VA = "0xB82E10", Slot = "10")]
	protected virtual void createPrefabsDictionary(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB82FBC", Offset = "0xB82FBC", VA = "0xB82FBC", Slot = "11")]
	protected virtual void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xB83020", Offset = "0xB83020", VA = "0xB83020", Slot = "12")]
	protected virtual void createObjectQueuesXPos(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xB831C8", Offset = "0xB831C8", VA = "0xB831C8", Slot = "13")]
	protected virtual void createObjectQueuesYPos(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xB83354", Offset = "0xB83354", VA = "0xB83354", Slot = "14")]
	protected virtual void createAndFillObjectPoolQueues(GameObject[] gameObjects, int objectAmount)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xB83824", Offset = "0xB83824", VA = "0xB83824", Slot = "15")]
	protected virtual float getRegularObjectSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xB83744", Offset = "0xB83744", VA = "0xB83744")]
	private ConcurrentQueue<GameObject> createAndFillPrefabQueue(string prefabType, GameObject prefab, float xPos, float objectSize, int objectAmount)
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB83830", Offset = "0xB83830", VA = "0xB83830", Slot = "16")]
	protected virtual void instantiateAndAddToQueueFromCoroutine(string gameObjectType)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB83868", Offset = "0xB83868", VA = "0xB83868", Slot = "17")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0484", Offset = "0x5A0484")]
	protected virtual IEnumerator instantiateAndAddToQueueCoroutine(string gameObjectType)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB838FC", Offset = "0xB838FC", VA = "0xB838FC", Slot = "18")]
	protected virtual void instantiateAndAddToQueue(ConcurrentQueue<GameObject> prefabQueue, string prefabType, GameObject prefab, float xPos, float objectSize, int i)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB83C80", Offset = "0xB83C80", VA = "0xB83C80", Slot = "19")]
	protected virtual void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB83C84", Offset = "0xB83C84", VA = "0xB83C84")]
	public GameObject peekObject(string objectType)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB83D50", Offset = "0xB83D50", VA = "0xB83D50", Slot = "20")]
	public virtual GameObject getObjectFromPool(string objectType, CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB84038", Offset = "0xB84038", VA = "0xB84038", Slot = "21")]
	protected virtual void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB8403C", Offset = "0xB8403C", VA = "0xB8403C", Slot = "22")]
	protected virtual void performSetupOnObjectDequeue(GameObject queueGameObject)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB84040", Offset = "0xB84040", VA = "0xB84040", Slot = "23")]
	protected virtual void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB84044", Offset = "0xB84044", VA = "0xB84044", Slot = "24")]
	protected virtual void performAdditionalActionAfterDeqeue()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB84048", Offset = "0xB84048", VA = "0xB84048", Slot = "25")]
	protected virtual void performAdditionalActionAfterDeque(GameObject dequeuedGameObject)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xB8404C", Offset = "0xB8404C", VA = "0xB8404C", Slot = "26")]
	public virtual void returnObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB84084", Offset = "0xB84084", VA = "0xB84084", Slot = "27")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A04E4", Offset = "0x5A04E4")]
	protected virtual IEnumerator returnObjectToQueueCoroutine(GameObject returnToPoolObject)
	{
		return null;
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB84118", Offset = "0xB84118", VA = "0xB84118", Slot = "28")]
	protected virtual void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xB83B20", Offset = "0xB83B20", VA = "0xB83B20")]
	private GameObject instantiatePrefab(GameObject prefab, Vector3 instantiationPosition, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xB84138", Offset = "0xB84138", VA = "0xB84138", Slot = "29")]
	protected virtual void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xB831B8", Offset = "0xB831B8", VA = "0xB831B8")]
	protected void increaseCurrentXPos()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xB839E0", Offset = "0xB839E0", VA = "0xB839E0")]
	protected float getYPos(string objectType)
	{
		return default(float);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xB825AC", Offset = "0xB825AC", VA = "0xB825AC")]
	protected void stopActiveDestroyAndReCreateObjectsCoroutine()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xB8413C", Offset = "0xB8413C", VA = "0xB8413C")]
	public CoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x20001E2")]
public class OculusRiftStartTutorialAndGameController : StartTutorialAndOrGameAfterPlayerEnteredMiddleController
{
	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xB079D0", Offset = "0xB079D0", VA = "0xB079D0")]
	public OculusRiftStartTutorialAndGameController()
	{
	}
}
[Token(Token = "0x20001E3")]
public class ScoreKeeper : MonoBehaviour
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int pointsScored;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int pointsMissed;

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xAF41CC", Offset = "0xAF41CC", VA = "0xAF41CC")]
	public int getPointsScored()
	{
		return default(int);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xAF41D4", Offset = "0xAF41D4", VA = "0xAF41D4")]
	public int getPointsMissed()
	{
		return default(int);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xAF41DC", Offset = "0xAF41DC", VA = "0xAF41DC")]
	public void increasePointsMissed(int increase)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xAF41EC", Offset = "0xAF41EC", VA = "0xAF41EC")]
	public void increasePointsScored(int increase)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xAF41FC", Offset = "0xAF41FC", VA = "0xAF41FC")]
	public void reset()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xAF4204", Offset = "0xAF4204", VA = "0xAF4204")]
	public ScoreKeeper()
	{
	}
}
[Token(Token = "0x20001E4")]
public class StartTutorialAndOrGameAfterPlayerEnteredMiddleController : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59675C", Offset = "0x59675C")]
	private sealed class <checkPlayerPositionCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartTutorialAndOrGameAfterPlayerEnteredMiddleController <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x8FCD44", Offset = "0x8FCD44", VA = "0x8FCD44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x8FCD8C", Offset = "0x8FCD8C", VA = "0x8FCD8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8FCC5C", Offset = "0x8FCC5C", VA = "0x8FCC5C")]
		[DebuggerHidden]
		public <checkPlayerPositionCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8FCC88", Offset = "0x8FCC88", VA = "0x8FCC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8FCC8C", Offset = "0x8FCC8C", VA = "0x8FCC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x8FCD4C", Offset = "0x8FCD4C", VA = "0x8FCD4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject environment;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string playerNotInMiddleOfPlayAreaString;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string playerInMiddleOfPlayAreaString;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string playerInMiddleOfPlayAreaButtonString;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text textToInformPlayer;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text buttonText;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DisabledStartGameOrTutorialButton buttonWithWhichPlayerStartsTutorial;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject playerCamera;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject topLevelStartGameGuiObject;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> topLevelStartGameGuiObjectArrayList;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool playerStartedTutorialOrGame;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip playerEnteredMiddleOfPlayAreaAudioClip;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip playerExitedMiddleOfPlayAreaAudioClip;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool playerEntered;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine fadeInCoroutine;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool fadeInNecessary;

	[Token(Token = "0x170000F8")]
	public bool PlayerStartedTutorialOrGame
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xB93294", Offset = "0xB93294", VA = "0xB93294")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xB9329C", Offset = "0xB9329C", VA = "0xB9329C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public GameObject TopLevelStartGameGuiObject
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xB932A8", Offset = "0xB932A8", VA = "0xB932A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xB932B0", Offset = "0xB932B0", VA = "0xB932B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xB932B8", Offset = "0xB932B8", VA = "0xB932B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xB93444", Offset = "0xB93444", VA = "0xB93444")]
	public void fadeInStartGameMenu()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xB934CC", Offset = "0xB934CC", VA = "0xB934CC")]
	public void setFadeInNecessary(bool input)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xB934D8", Offset = "0xB934D8", VA = "0xB934D8")]
	public void stopFadeInOfGoToMiddleElement()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xB93528", Offset = "0xB93528", VA = "0xB93528")]
	public void activatePlayerEnteredMiddleController()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xB935DC", Offset = "0xB935DC", VA = "0xB935DC")]
	public void stopPlayerPosCheckCoroutine()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xB93564", Offset = "0xB93564", VA = "0xB93564")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0684", Offset = "0x5A0684")]
	private IEnumerator checkPlayerPositionCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB93624", Offset = "0xB93624", VA = "0xB93624")]
	public bool checkPlayerInMiddleOfArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB93744", Offset = "0xB93744", VA = "0xB93744")]
	public void startGameMode()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB93838", Offset = "0xB93838", VA = "0xB93838")]
	public void playerEnteredMiddleOfPlayArea()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xB93894", Offset = "0xB93894", VA = "0xB93894")]
	public void playerExitedMiddleOfPlayArea()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xB938F0", Offset = "0xB938F0", VA = "0xB938F0")]
	public StartTutorialAndOrGameAfterPlayerEnteredMiddleController()
	{
	}
}
[Token(Token = "0x20001E6")]
public class TimeKeeper : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59676C", Offset = "0x59676C")]
	private sealed class <startTimeCountdown>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeKeeper <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x9015B0", Offset = "0x9015B0", VA = "0x9015B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x9015F8", Offset = "0x9015F8", VA = "0x9015F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x901468", Offset = "0x901468", VA = "0x901468")]
		[DebuggerHidden]
		public <startTimeCountdown>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x901494", Offset = "0x901494", VA = "0x901494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x901498", Offset = "0x901498", VA = "0x901498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x9015B8", Offset = "0x9015B8", VA = "0x9015B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TimePlayerHUDElementController timeHUDController;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int originalTimeRemainingValue;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timeRemaining;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int timePlayed;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF12C34", Offset = "0xF12C34", VA = "0xF12C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF12C38", Offset = "0xF12C38", VA = "0xF12C38")]
	public void setPlayTime()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF12CF4", Offset = "0xF12CF4", VA = "0xF12CF4")]
	public void startTimeCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xF12D20", Offset = "0xF12D20", VA = "0xF12D20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0734", Offset = "0x5A0734")]
	public IEnumerator startTimeCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xF12D98", Offset = "0xF12D98", VA = "0xF12D98")]
	public void showTimeToPlay()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xF12DC0", Offset = "0xF12DC0", VA = "0xF12DC0")]
	public int getTimePlayed()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xF12DC8", Offset = "0xF12DC8", VA = "0xF12DC8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xF12E0C", Offset = "0xF12E0C", VA = "0xF12E0C")]
	public int getTimeRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xF12E14", Offset = "0xF12E14", VA = "0xF12E14")]
	public void pauseCountdown()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xF12E44", Offset = "0xF12E44", VA = "0xF12E44")]
	public TimeKeeper()
	{
	}
}
[Token(Token = "0x20001E8")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59677C", Offset = "0x59677C")]
	private sealed class <mainGameModeLoop>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x9F7064", Offset = "0x9F7064", VA = "0x9F7064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x9F70AC", Offset = "0x9F70AC", VA = "0x9F70AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x9F6FCC", Offset = "0x9F6FCC", VA = "0x9F6FCC")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x9F6FF8", Offset = "0x9F6FF8", VA = "0x9F6FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x9F6FFC", Offset = "0x9F6FFC", VA = "0x9F6FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x9F706C", Offset = "0x9F706C", VA = "0x9F706C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59678C", Offset = "0x59678C")]
	private sealed class <playerEnergyZeroCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x9F749C", Offset = "0x9F749C", VA = "0x9F749C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x9F74E4", Offset = "0x9F74E4", VA = "0x9F74E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x9F73CC", Offset = "0x9F73CC", VA = "0x9F73CC")]
		[DebuggerHidden]
		public <playerEnergyZeroCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x9F73F8", Offset = "0x9F73F8", VA = "0x9F73F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x9F73FC", Offset = "0x9F73FC", VA = "0x9F73FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x9F74A4", Offset = "0x9F74A4", VA = "0x9F74A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59679C", Offset = "0x59679C")]
	private sealed class <performOnStart>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x9F737C", Offset = "0x9F737C", VA = "0x9F737C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x9F73C4", Offset = "0x9F73C4", VA = "0x9F73C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x9F726C", Offset = "0x9F726C", VA = "0x9F726C")]
		[DebuggerHidden]
		public <performOnStart>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x9F7298", Offset = "0x9F7298", VA = "0x9F7298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x9F729C", Offset = "0x9F729C", VA = "0x9F729C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x9F7384", Offset = "0x9F7384", VA = "0x9F7384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967AC", Offset = "0x5967AC")]
	private sealed class <performEnvironmentSetupAndCheckIfGameCanStart>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x9F721C", Offset = "0x9F721C", VA = "0x9F721C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x9F7264", Offset = "0x9F7264", VA = "0x9F7264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x9F70B4", Offset = "0x9F70B4", VA = "0x9F70B4")]
		[DebuggerHidden]
		public <performEnvironmentSetupAndCheckIfGameCanStart>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x9F70E0", Offset = "0x9F70E0", VA = "0x9F70E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x9F70E4", Offset = "0x9F70E4", VA = "0x9F70E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x9F7224", Offset = "0x9F7224", VA = "0x9F7224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967BC", Offset = "0x5967BC")]
	private sealed class <startCountdownThenMainGameLoop>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CountdownTimerPlayerHUDElementController <countdownHUDElement>5__2;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x9F76C8", Offset = "0x9F76C8", VA = "0x9F76C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x9F7710", Offset = "0x9F7710", VA = "0x9F7710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x9F74EC", Offset = "0x9F74EC", VA = "0x9F74EC")]
		[DebuggerHidden]
		public <startCountdownThenMainGameLoop>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x9F7518", Offset = "0x9F7518", VA = "0x9F7518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x9F751C", Offset = "0x9F751C", VA = "0x9F751C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x9F76D0", Offset = "0x9F76D0", VA = "0x9F76D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967CC", Offset = "0x5967CC")]
	private sealed class <inGameDifficultyChangeCoroutine>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x9F6F7C", Offset = "0x9F6F7C", VA = "0x9F6F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x9F6FC4", Offset = "0x9F6FC4", VA = "0x9F6FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x9F6EF0", Offset = "0x9F6EF0", VA = "0x9F6EF0")]
		[DebuggerHidden]
		public <inGameDifficultyChangeCoroutine>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x9F6F1C", Offset = "0x9F6F1C", VA = "0x9F6F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x9F6F20", Offset = "0x9F6F20", VA = "0x9F6F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x9F6F84", Offset = "0x9F6F84", VA = "0x9F6F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform transformOfPlayerCamera;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected EnvironmentPositioner environmentPositioner;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected HeadsetActiveObserver headsetActiveObserver;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool tutorialCompleted;

	[Token(Token = "0x4000A79")]
	protected const int initalWaitBeforeGameStart = 3;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject tutorialCanvas;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected PlayerHUDElementController generalInfoTextController;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameModeAudioController gameModeAudioController;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected TimeKeeper timeKeeper;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected GameEndedDisplayController showGameOverInfoController;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected List<GameObject> activeGameObjects;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static object lockObject;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool playerQuit;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool playerStoppedGame;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	protected bool gameAlreadyStarting;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	protected bool playerLostGame;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool gameModeStarted;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool mainGameModeLoopRunning;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	protected bool gameFinishedDueToTimeOut;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int waitBeforeGameStartCounter;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool performTutorial;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected ScreenFadeService screenFadeService;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameModeParameterContainer gameModeParameterContainer;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject[] playerReticule;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected GameObject vrPointerObject;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected PlayerEnergyController playerEnergyController;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected bool tutorialAlreadyRunning;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	protected bool firstGameAlreadyPlayed;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected PlayerHUDController playerHUDController;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected ValidActivationTypesService validActivationTypeService;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PlayerHandController leftHandController;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private PlayerHandController rightHandController;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected WaitForSeconds waitForOneTenthSecond;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected Coroutine activeInGameDifficultyChangeCoroutine;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine activeCountdownCoroutine;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private bool repositionEnvironmentOnStart;

	[Token(Token = "0x170000FE")]
	public bool PlayerQuit
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xABD378", Offset = "0xABD378", VA = "0xABD378")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xABD380", Offset = "0xABD380", VA = "0xABD380")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public bool GameModeStarted
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xABD38C", Offset = "0xABD38C", VA = "0xABD38C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xABD394", Offset = "0xABD394", VA = "0xABD394")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public bool GameFinishedDueToTimeOut
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xABD3A0", Offset = "0xABD3A0", VA = "0xABD3A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xABD3A8", Offset = "0xABD3A8", VA = "0xABD3A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public GameModeAudioController GameModeAudioController
	{
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xABD3B4", Offset = "0xABD3B4", VA = "0xABD3B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xABD3BC", Offset = "0xABD3BC", VA = "0xABD3BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public TimeKeeper TimeKeeper
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xABD3C4", Offset = "0xABD3C4", VA = "0xABD3C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xABD3CC", Offset = "0xABD3CC", VA = "0xABD3CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public bool MainGameModeLoopRunning
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xABD3D4", Offset = "0xABD3D4", VA = "0xABD3D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xABD3DC", Offset = "0xABD3DC", VA = "0xABD3DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public bool PlayerLostGame
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xABD3E8", Offset = "0xABD3E8", VA = "0xABD3E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xABD3F0", Offset = "0xABD3F0", VA = "0xABD3F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xABD46C", Offset = "0xABD46C", VA = "0xABD46C", Slot = "4")]
	protected virtual void performOnMainLoopStart()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xABD470", Offset = "0xABD470", VA = "0xABD470", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A07E4", Offset = "0x5A07E4")]
	protected virtual IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xABD4E8", Offset = "0xABD4E8", VA = "0xABD4E8", Slot = "6")]
	protected virtual void performGeneralSetup()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xABD4F8", Offset = "0xABD4F8", VA = "0xABD4F8")]
	public void playerEnergyZero()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xABD538", Offset = "0xABD538", VA = "0xABD538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0844", Offset = "0x5A0844")]
	private IEnumerator playerEnergyZeroCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xABD5B0", Offset = "0xABD5B0", VA = "0xABD5B0", Slot = "7")]
	protected virtual void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xABD5B4", Offset = "0xABD5B4", VA = "0xABD5B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xABD760", Offset = "0xABD760", VA = "0xABD760")]
	private void generalSettingsSetup()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xABD830", Offset = "0xABD830", VA = "0xABD830", Slot = "8")]
	protected virtual void specificAwakeSetup()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xABD834", Offset = "0xABD834", VA = "0xABD834", Slot = "9")]
	protected virtual void gameModeSpecificSetupOnStart()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xABD618", Offset = "0xABD618", VA = "0xABD618")]
	protected void createAdvancedUIFader()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xABD838", Offset = "0xABD838", VA = "0xABD838", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A08A4", Offset = "0x5A08A4")]
	public virtual IEnumerator performOnStart()
	{
		return null;
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xABD8B0", Offset = "0xABD8B0", VA = "0xABD8B0", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0904", Offset = "0x5A0904")]
	protected virtual IEnumerator performEnvironmentSetupAndCheckIfGameCanStart()
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xABD928", Offset = "0xABD928", VA = "0xABD928", Slot = "12")]
	public virtual void startGameMode()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xABDA94", Offset = "0xABDA94", VA = "0xABDA94")]
	public void triggerPerformOnStart()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xABDAC8", Offset = "0xABDAC8", VA = "0xABDAC8", Slot = "13")]
	protected virtual void performUISetupOnGameModeStart()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xABDADC", Offset = "0xABDADC", VA = "0xABDADC", Slot = "14")]
	protected virtual void startTutorial()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xABDB38", Offset = "0xABDB38", VA = "0xABDB38")]
	public void startGameAfterTutorialCompleted()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xABD9B0", Offset = "0xABD9B0", VA = "0xABD9B0")]
	protected void genericStartGame()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xABDC60", Offset = "0xABDC60", VA = "0xABDC60", Slot = "15")]
	protected virtual void setupTimer()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xABDC7C", Offset = "0xABDC7C", VA = "0xABDC7C", Slot = "16")]
	public virtual void setRayCastersEnabled(bool input)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xABDD0C", Offset = "0xABDD0C", VA = "0xABDD0C", Slot = "17")]
	protected virtual void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xABDD10", Offset = "0xABDD10", VA = "0xABDD10")]
	protected GameModeParameterContainer getGameModeParameterContainer()
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xABDD18", Offset = "0xABDD18", VA = "0xABDD18", Slot = "18")]
	protected virtual bool isPlayerInStartPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xABDD74", Offset = "0xABDD74", VA = "0xABDD74")]
	private void resetOnRestart()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xABDD84", Offset = "0xABDD84", VA = "0xABDD84")]
	private void resetOnRestartGeneric()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xABDD88", Offset = "0xABDD88", VA = "0xABDD88", Slot = "19")]
	protected virtual void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xABDD8C", Offset = "0xABDD8C", VA = "0xABDD8C")]
	public void restartedByPlayerWhileGameWasStillRunning()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xABDE08", Offset = "0xABDE08", VA = "0xABDE08")]
	protected void restartedByPlayerWhileGameWasStillRunningGeneric()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xABDE44", Offset = "0xABDE44", VA = "0xABDE44", Slot = "20")]
	protected virtual void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xABDE48", Offset = "0xABDE48", VA = "0xABDE48", Slot = "21")]
	public virtual void restartGame()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xABDFB4", Offset = "0xABDFB4", VA = "0xABDFB4")]
	private void resetGameStartedValues()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xABE040", Offset = "0xABE040", VA = "0xABE040")]
	public void restartCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xABE0A4", Offset = "0xABE0A4", VA = "0xABE0A4", Slot = "22")]
	protected virtual void resetAllGameObjects()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xABE1E4", Offset = "0xABE1E4", VA = "0xABE1E4", Slot = "23")]
	protected virtual void callGameRestartedByPlayerOnAllObjects()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xABE32C", Offset = "0xABE32C", VA = "0xABE32C", Slot = "24")]
	protected virtual IEnumerator cleanUpGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xABE334", Offset = "0xABE334", VA = "0xABE334", Slot = "25")]
	public virtual void specificModeRestartGame()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xABE338", Offset = "0xABE338", VA = "0xABE338", Slot = "26")]
	public virtual void stopGame()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xABE3A0", Offset = "0xABE3A0", VA = "0xABE3A0", Slot = "27")]
	public virtual void stopGameWithoutGameOverInfo()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xABDF00", Offset = "0xABDF00", VA = "0xABDF00")]
	protected void resetPlayerHands()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xABE408", Offset = "0xABE408", VA = "0xABE408", Slot = "28")]
	protected virtual void generalGameModeStopGame()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xABE6FC", Offset = "0xABE6FC", VA = "0xABE6FC", Slot = "29")]
	protected virtual void specificGameModeStopGame()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xABE700", Offset = "0xABE700", VA = "0xABE700", Slot = "30")]
	protected virtual void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xABE704", Offset = "0xABE704", VA = "0xABE704", Slot = "31")]
	protected virtual void disableTutorialGUIAndEnablePlayerGUI()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xABE788", Offset = "0xABE788", VA = "0xABE788", Slot = "32")]
	protected virtual void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xABE78C", Offset = "0xABE78C", VA = "0xABE78C")]
	public void startCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xABE7D4", Offset = "0xABE7D4", VA = "0xABE7D4", Slot = "33")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0964", Offset = "0x5A0964")]
	protected virtual IEnumerator startCountdownThenMainGameLoop()
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xABE84C", Offset = "0xABE84C", VA = "0xABE84C", Slot = "34")]
	protected virtual void performBeforeCountdownStartsSetup()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xABE850", Offset = "0xABE850", VA = "0xABE850")]
	public void unpauseMainGameLoop()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xABE8A8", Offset = "0xABE8A8", VA = "0xABE8A8", Slot = "35")]
	protected virtual void specificModePerformGameSetup()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xABE8AC", Offset = "0xABE8AC", VA = "0xABE8AC", Slot = "36")]
	public virtual void playerScoredPoint(int increase)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xABE8FC", Offset = "0xABE8FC", VA = "0xABE8FC", Slot = "37")]
	public virtual void playerScoredPoint(int increase, bool maxIncrease, bool performSpecificFunctionality)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xABE94C", Offset = "0xABE94C", VA = "0xABE94C", Slot = "38")]
	protected virtual void playerScoredPointGeneral(int increase)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xABE968", Offset = "0xABE968", VA = "0xABE968", Slot = "39")]
	protected virtual void playerScoredPointSpecific(int increase)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xABE96C", Offset = "0xABE96C", VA = "0xABE96C", Slot = "40")]
	public virtual void playerLostPoint(int amountOfPointsLost)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xABE9E8", Offset = "0xABE9E8", VA = "0xABE9E8", Slot = "41")]
	protected virtual void playerLostPointGameModeSpecific()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xABE9EC", Offset = "0xABE9EC", VA = "0xABE9EC", Slot = "42")]
	public virtual void specificModePlayerMissedPoint()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xABE9F0", Offset = "0xABE9F0", VA = "0xABE9F0")]
	public void endGameDueToTimeRunningOut()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xABEA00", Offset = "0xABEA00", VA = "0xABEA00", Slot = "43")]
	public virtual void endGameDuePlayerQuit()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xABEA04", Offset = "0xABEA04", VA = "0xABEA04")]
	public Transform getCamera()
	{
		return null;
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xABEA0C", Offset = "0xABEA0C", VA = "0xABEA0C", Slot = "44")]
	protected virtual bool isContinueGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xABEA3C", Offset = "0xABEA3C", VA = "0xABEA3C")]
	protected void destroyAllGameObjectsAndClearList(List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xABEBD4", Offset = "0xABEBD4", VA = "0xABEBD4")]
	protected void destroyAllCurrentActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xABEDD4", Offset = "0xABEDD4", VA = "0xABEDD4")]
	public List<GameObject> getActiveGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xABEDDC", Offset = "0xABEDDC", VA = "0xABEDDC", Slot = "45")]
	protected virtual void disableAndHideActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xABEFA0", Offset = "0xABEFA0", VA = "0xABEFA0", Slot = "46")]
	public virtual void gameObjectReachedAppearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xABEFA4", Offset = "0xABEFA4", VA = "0xABEFA4", Slot = "47")]
	public virtual void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xABEFA8", Offset = "0xABEFA8", VA = "0xABEFA8")]
	public List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xABEFB0", Offset = "0xABEFB0", VA = "0xABEFB0", Slot = "48")]
	public virtual void gameDifficultyChangedInGame()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xABEFE4", Offset = "0xABEFE4", VA = "0xABEFE4", Slot = "49")]
	protected virtual void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xABEFE8", Offset = "0xABEFE8", VA = "0xABEFE8")]
	public void updateCreateHandSpecificObjects(bool handSpecificActive)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xABF034", Offset = "0xABF034", VA = "0xABF034")]
	public void updateHandInfiniteEnergy(bool infiniteEnergy)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xABF070", Offset = "0xABF070", VA = "0xABF070", Slot = "50")]
	public virtual void returnObjectsToObjectPool(List<GameObject> objectsToReturnToPool)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xABF194", Offset = "0xABF194", VA = "0xABF194", Slot = "51")]
	public virtual void returnObjectToObjectPool(GameObject objectToReturnToPool)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xABE064", Offset = "0xABE064", VA = "0xABE064")]
	protected void stopActiveCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xABF198", Offset = "0xABF198", VA = "0xABF198", Slot = "52")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A09C4", Offset = "0x5A09C4")]
	protected virtual IEnumerator inGameDifficultyChangeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xABF1F4", Offset = "0xABF1F4", VA = "0xABF1F4")]
	protected void setActiveStateOnAllGameObjects(bool input)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xABF320", Offset = "0xABF320", VA = "0xABF320")]
	public void onPaused()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xABF350", Offset = "0xABF350", VA = "0xABF350")]
	protected void onPausedGeneric()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xABF400", Offset = "0xABF400", VA = "0xABF400", Slot = "53")]
	protected virtual void callPausedOnGameObjects(List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xABF55C", Offset = "0xABF55C", VA = "0xABF55C", Slot = "54")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xABF560", Offset = "0xABF560", VA = "0xABF560")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xABF590", Offset = "0xABF590", VA = "0xABF590")]
	protected void onUnPausedGeneric()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xABF618", Offset = "0xABF618", VA = "0xABF618")]
	public bool gameCanContinue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xABF64C", Offset = "0xABF64C", VA = "0xABF64C", Slot = "55")]
	protected virtual void callUnPausedOnAllActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xABF794", Offset = "0xABF794", VA = "0xABF794", Slot = "56")]
	protected virtual void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xABF798", Offset = "0xABF798", VA = "0xABF798")]
	public void gameStoppedByPlayer()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xABF844", Offset = "0xABF844", VA = "0xABF844", Slot = "57")]
	public virtual void gameStoppedByPlayerGeneral()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xABF848", Offset = "0xABF848", VA = "0xABF848", Slot = "58")]
	public virtual void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xABF84C", Offset = "0xABF84C", VA = "0xABF84C")]
	public Transform getTransformOfPlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xABF854", Offset = "0xABF854", VA = "0xABF854")]
	protected void addToActiveObjectsThreadSafe(GameObject activeObject)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xABF990", Offset = "0xABF990", VA = "0xABF990")]
	protected void removeFromActiveObjectsThreadSafe(GameObject activeObject)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xABFAD0", Offset = "0xABFAD0", VA = "0xABFAD0")]
	public void resetTutorialValues()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xABFB30", Offset = "0xABFB30", VA = "0xABFB30")]
	public GameController()
	{
	}
}
[Token(Token = "0x20001EF")]
public class GamePausedController : MonoBehaviour
{
	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController playerEnteredMiddleAreaController;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected PlayerHUDController playerHUD;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected PlayerHandController leftHandController;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected PlayerHandController rightHandController;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected GameObject topLevelGamePausedCanvas;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<GameObject> topLevelGamePausedCanvasList;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject[] playerReticule;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected GameObject vrPointerObject;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private RestartDisabledButton restartDisabledButton;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected bool paused;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static object lockObject;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DateTime lastPauseInteractionTime;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DateTime lastButtonClickedInteractionTime;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xAC1964", Offset = "0xAC1964", VA = "0xAC1964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xAC1A18", Offset = "0xAC1A18", VA = "0xAC1A18")]
	protected void setPaused(bool input)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xABDB44", Offset = "0xABDB44", VA = "0xABDB44")]
	public bool isPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xAC1B2C", Offset = "0xAC1B2C", VA = "0xAC1B2C")]
	public void pausedStatusChange()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xAC1C9C", Offset = "0xAC1C9C", VA = "0xAC1C9C")]
	public void forcePaused()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xAC1D60", Offset = "0xAC1D60", VA = "0xAC1D60", Slot = "4")]
	protected virtual void onPaused(bool force)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xAC1FFC", Offset = "0xAC1FFC", VA = "0xAC1FFC", Slot = "5")]
	protected virtual void onUnPaused()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xAC225C", Offset = "0xAC225C", VA = "0xAC225C", Slot = "6")]
	protected virtual void updateButtons()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xAC2298", Offset = "0xAC2298", VA = "0xAC2298", Slot = "7")]
	protected virtual void setRayCastersEnabled(bool input)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xAC2328", Offset = "0xAC2328", VA = "0xAC2328")]
	public void onContinue()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xAC2488", Offset = "0xAC2488", VA = "0xAC2488")]
	public void restartButtonPressed()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xAC2568", Offset = "0xAC2568", VA = "0xAC2568")]
	public void goToGameSettingsButtonPressed()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xAC1BF8", Offset = "0xAC1BF8", VA = "0xAC1BF8")]
	private bool enoughTimePassedSincePauseInteraction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xAC23E4", Offset = "0xAC23E4", VA = "0xAC23E4")]
	private bool enoughTimePassedSinceButtonClicked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xAC269C", Offset = "0xAC269C", VA = "0xAC269C")]
	public GamePausedController()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MockEnduranceGameController : MockGameController
{
	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string gameObjectType;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private EnduranceGameModeParameterContainer enduranceGameModeParameterContainer;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int maxMomementCounter;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC5FA40", Offset = "0xC5FA40", VA = "0xC5FA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xC5FB5C", Offset = "0xC5FB5C", VA = "0xC5FB5C", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xC5FC88", Offset = "0xC5FC88", VA = "0xC5FC88")]
	private EnduranceRaycastHitContainer getContainerForPosCalculations()
	{
		return null;
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xC5FD98", Offset = "0xC5FD98", VA = "0xC5FD98")]
	private EnduranceRaycastHitContainer getContainerAtMaximumDistanceFromPlayer(List<EnduranceRaycastHitContainer> containers)
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xC5FF60", Offset = "0xC5FF60", VA = "0xC5FF60")]
	private GameObject startObjectAppearance(PositionAndRotationContainer positionAndRotationContainer)
	{
		return null;
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xC601C8", Offset = "0xC601C8", VA = "0xC601C8", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xC60248", Offset = "0xC60248", VA = "0xC60248")]
	public MockEnduranceGameController()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MockGameController : GameController
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967DC", Offset = "0x5967DC")]
	private sealed class <performEnvironmentSetupAndCheckIfGameCanStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MockGameController <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x8F5BBC", Offset = "0x8F5BBC", VA = "0x8F5BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x8F5C04", Offset = "0x8F5C04", VA = "0x8F5C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8F5B14", Offset = "0x8F5B14", VA = "0x8F5B14")]
		[DebuggerHidden]
		public <performEnvironmentSetupAndCheckIfGameCanStart>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8F5B40", Offset = "0x8F5B40", VA = "0x8F5B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x8F5B44", Offset = "0x8F5B44", VA = "0x8F5B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x8F5BC4", Offset = "0x8F5BC4", VA = "0x8F5BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xC60350", Offset = "0xC60350", VA = "0xC60350", Slot = "44")]
	protected override bool isContinueGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xC60358", Offset = "0xC60358", VA = "0xC60358", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0C04", Offset = "0x5A0C04")]
	protected override IEnumerator performEnvironmentSetupAndCheckIfGameCanStart()
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC603D0", Offset = "0xC603D0", VA = "0xC603D0", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC602EC", Offset = "0xC602EC", VA = "0xC602EC")]
	public MockGameController()
	{
	}
}
[Token(Token = "0x20001F3")]
public class GameModeValues : ScriptableObject
{
	[Token(Token = "0x20001F4")]
	public enum GameAndSubModeDifficulty
	{
		[Token(Token = "0x4000AD1")]
		VERY_EASY,
		[Token(Token = "0x4000AD2")]
		EASY,
		[Token(Token = "0x4000AD3")]
		NORMAL,
		[Token(Token = "0x4000AD4")]
		HARD,
		[Token(Token = "0x4000AD5")]
		VERY_HARD,
		[Token(Token = "0x4000AD6")]
		EXTREME,
		[Token(Token = "0x4000AD7")]
		INSANITY,
		[Token(Token = "0x4000AD8")]
		IMPOSSIBLE
	}

	[Token(Token = "0x20001F5")]
	public enum GameDuration
	{
		[Token(Token = "0x4000ADA")]
		min1 = 60,
		[Token(Token = "0x4000ADB")]
		min2 = 120,
		[Token(Token = "0x4000ADC")]
		min3 = 180,
		[Token(Token = "0x4000ADD")]
		min5 = 300,
		[Token(Token = "0x4000ADE")]
		min10 = 600,
		[Token(Token = "0x4000ADF")]
		min15 = 900
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xAC1854", Offset = "0xAC1854", VA = "0xAC1854")]
	public GameModeValues()
	{
	}
}
[Token(Token = "0x20001F6")]
public class GameModeParameterContainer
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameModeValues.GameAndSubModeDifficulty difficulty;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool startTutorial;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool activateHandSpecificObjects;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected int timeToPlay;

	[Token(Token = "0x4000AE4")]
	protected const string NORMAL_GAME_MODE = "NORMAL";

	[Token(Token = "0x4000AE5")]
	private const string GAME_MODE_NAME = "GAME_MODE";

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool playerInfiniteHealth;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool playerInfiniteHandEnergy;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool cardioModePlayerInfiniteHealth;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool cardioModePlayerInfiniteHandEnergy;

	[Token(Token = "0x4000AEA")]
	public const int PLAYER_STARTING_ENERGY = 5;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static StringBuilder stringBuilder;

	[Token(Token = "0x17000113")]
	public bool PlayerInfiniteHealth
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xAC0B60", Offset = "0xAC0B60", VA = "0xAC0B60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xAC0B68", Offset = "0xAC0B68", VA = "0xAC0B68")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public bool ActivateHandSpecificObjects
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xAC0B74", Offset = "0xAC0B74", VA = "0xAC0B74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xAC0B7C", Offset = "0xAC0B7C", VA = "0xAC0B7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public bool PlayerInfiniteHandEnergy
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xAC0B88", Offset = "0xAC0B88", VA = "0xAC0B88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xAC0B90", Offset = "0xAC0B90", VA = "0xAC0B90")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool CardioModePlayerInfiniteHealth
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xAC0B9C", Offset = "0xAC0B9C", VA = "0xAC0B9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xAC0BA4", Offset = "0xAC0BA4", VA = "0xAC0BA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public bool CardioModePlayerInfiniteHandEnergy
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xAC0BB0", Offset = "0xAC0BB0", VA = "0xAC0BB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xAC0BB8", Offset = "0xAC0BB8", VA = "0xAC0BB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public bool StartTutorial
	{
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xAC0BC8", Offset = "0xAC0BC8", VA = "0xAC0BC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xAC0BD0", Offset = "0xAC0BD0", VA = "0xAC0BD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public int TimeToPlay
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xAC0BE0", Offset = "0xAC0BE0", VA = "0xAC0BE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xAC0BE8", Offset = "0xAC0BE8", VA = "0xAC0BE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xAC0BC4", Offset = "0xAC0BC4", VA = "0xAC0BC4", Slot = "4")]
	public virtual void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xAC0BDC", Offset = "0xAC0BDC", VA = "0xAC0BDC", Slot = "5")]
	public virtual void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xAC0BF0", Offset = "0xAC0BF0", VA = "0xAC0BF0", Slot = "6")]
	public virtual string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34", Slot = "7")]
	public virtual string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xAC0C78", Offset = "0xAC0C78", VA = "0xAC0C78", Slot = "8")]
	public virtual string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xAC0CBC", Offset = "0xAC0CBC", VA = "0xAC0CBC", Slot = "9")]
	public virtual int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xAC0398", Offset = "0xAC0398", VA = "0xAC0398")]
	public string getStringForSavingScore()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xAC0CC4", Offset = "0xAC0CC4", VA = "0xAC0CC4")]
	public void saveSubGameModeToPlayerPreferences()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xAC0D04", Offset = "0xAC0D04", VA = "0xAC0D04")]
	protected string getLastUsedSubGameModeKey()
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xAC0E44", Offset = "0xAC0E44", VA = "0xAC0E44")]
	public GameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20001F7")]
public class GameModeParameterContainerController : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	public enum GameModeSelectionEnum
	{
		[Token(Token = "0x4000AF0")]
		TargetTouch,
		[Token(Token = "0x4000AF1")]
		BlockIncomingObject,
		[Token(Token = "0x4000AF2")]
		EnduranceMode
	}

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameModeParameterContainer currentGameModeParameterContainer;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool parametersAlreadyCreated;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<GameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersMap;

	[Token(Token = "0x1700011A")]
	public static GameModeParameterContainer CurrentGameModeParameterContainer
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xAC0EE4", Offset = "0xAC0EE4", VA = "0xAC0EE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xAC0F48", Offset = "0xAC0F48", VA = "0xAC0F48")]
		set
		{
		}
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xAC0FB4", Offset = "0xAC0FB4", VA = "0xAC0FB4")]
	public static void fillGameModeParameterContainers(Dictionary<GameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersInput)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xAC1034", Offset = "0xAC1034", VA = "0xAC1034")]
	public static void fillGameModeParameterContainers()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xAC1214", Offset = "0xAC1214", VA = "0xAC1214")]
	protected static void createGameModeParameterContainers()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xAC13F4", Offset = "0xAC13F4", VA = "0xAC13F4")]
	public static GameModeParameterContainer getGameModeParameterContainerOfGameMode(GameModeSelectionEnum gameModeSelectionEnum)
	{
		return null;
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xAC1608", Offset = "0xAC1608", VA = "0xAC1608")]
	public static void setCardioActiveParameterContainers(bool input)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xAC17B4", Offset = "0xAC17B4", VA = "0xAC17B4")]
	public GameModeParameterContainerController()
	{
	}
}
[Token(Token = "0x20001F9")]
public class GeneralTutorialCoordinationCoachGameObject : TargetObject
{
	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xAC2D88", Offset = "0xAC2D88", VA = "0xAC2D88")]
	public GeneralTutorialCoordinationCoachGameObject()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TutorialController : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967EC", Offset = "0x5967EC")]
	private sealed class <fadeOutCurrentVisibleWindow>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x1550374", Offset = "0x1550374", VA = "0x1550374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x15503BC", Offset = "0x15503BC", VA = "0x15503BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x15501E0", Offset = "0x15501E0", VA = "0x15501E0")]
		[DebuggerHidden]
		public <fadeOutCurrentVisibleWindow>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x155020C", Offset = "0x155020C", VA = "0x155020C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1550210", Offset = "0x1550210", VA = "0x1550210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x155037C", Offset = "0x155037C", VA = "0x155037C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5967FC", Offset = "0x5967FC")]
	private sealed class <performTutorialAndStartGame>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startingBySkip;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialController <>4__this;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x1550DA8", Offset = "0x1550DA8", VA = "0x1550DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x1550DF0", Offset = "0x1550DF0", VA = "0x1550DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1550C18", Offset = "0x1550C18", VA = "0x1550C18")]
		[DebuggerHidden]
		public <performTutorialAndStartGame>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1550C44", Offset = "0x1550C44", VA = "0x1550C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1550C48", Offset = "0x1550C48", VA = "0x1550C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1550DB0", Offset = "0x1550DB0", VA = "0x1550DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59680C", Offset = "0x59680C")]
	private sealed class <performGeneralTutorialSteps>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x1550BC8", Offset = "0x1550BC8", VA = "0x1550BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x1550C10", Offset = "0x1550C10", VA = "0x1550C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x15504AC", Offset = "0x15504AC", VA = "0x15504AC")]
		[DebuggerHidden]
		public <performGeneralTutorialSteps>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x15504D8", Offset = "0x15504D8", VA = "0x15504D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x15504DC", Offset = "0x15504DC", VA = "0x15504DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1550BD0", Offset = "0x1550BD0", VA = "0x1550BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59681C", Offset = "0x59681C")]
	private sealed class <startGameCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x1551098", Offset = "0x1551098", VA = "0x1551098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x15510E0", Offset = "0x15510E0", VA = "0x15510E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1550F08", Offset = "0x1550F08", VA = "0x1550F08")]
		[DebuggerHidden]
		public <startGameCoroutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1550F34", Offset = "0x1550F34", VA = "0x1550F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1550F38", Offset = "0x1550F38", VA = "0x1550F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x15510A0", Offset = "0x15510A0", VA = "0x15510A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59682C", Offset = "0x59682C")]
	private sealed class <performGameModeSpecificTutorialSteps>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x155045C", Offset = "0x155045C", VA = "0x155045C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x15504A4", Offset = "0x15504A4", VA = "0x15504A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x15503C4", Offset = "0x15503C4", VA = "0x15503C4")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x15503F0", Offset = "0x15503F0", VA = "0x15503F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x15503F4", Offset = "0x15503F4", VA = "0x15503F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1550464", Offset = "0x1550464", VA = "0x1550464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59683C", Offset = "0x59683C")]
	private sealed class <activateAndFadeInObjects>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] textComponents;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x901EA0", Offset = "0x901EA0", VA = "0x901EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x901EE8", Offset = "0x901EE8", VA = "0x901EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x901DA0", Offset = "0x901DA0", VA = "0x901DA0")]
		[DebuggerHidden]
		public <activateAndFadeInObjects>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x901DCC", Offset = "0x901DCC", VA = "0x901DCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x901DD0", Offset = "0x901DD0", VA = "0x901DD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x901EA8", Offset = "0x901EA8", VA = "0x901EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59684C", Offset = "0x59684C")]
	private sealed class <raycastEnabledControllerCoroutine>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool input;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x1550EB8", Offset = "0x1550EB8", VA = "0x1550EB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x1550F00", Offset = "0x1550F00", VA = "0x1550F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1550DF8", Offset = "0x1550DF8", VA = "0x1550DF8")]
		[DebuggerHidden]
		public <raycastEnabledControllerCoroutine>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1550E24", Offset = "0x1550E24", VA = "0x1550E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1550E28", Offset = "0x1550E28", VA = "0x1550E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1550EC0", Offset = "0x1550EC0", VA = "0x1550EC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform playerTransform;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected DateTime lastNextStepClickedTime;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool allowNextStep;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameModeAudioController gameModeAudioController;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int numberOfTutorialObjectsReachedAppearanceDestination;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<GameObject> activeTutorialObjects;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject tutorialCanvas;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject forwardTutorialWindow;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<GameObject> forwardTutorialWindowArrayList;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected GameObject rotatedRightTutorialWindowWithStartStep;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected List<GameObject> rotatedRightTutorialWindowWithStartStepArrayList;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected GameObject rotatedRightTutorialWindowWithoutStartStep;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected List<GameObject> rotatedRightTutorialWindowWithoutStartStepArrayList;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected GameObject finishTutorialWindow;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<GameObject> finishTutorialWindowArrayList;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected PlayerHUDController playerHUDController;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int currentGeneralStepIndex;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int numberOfGeneralSteps;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected int currentSpecificStepIndex;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	protected int numberOfSpecificSteps;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected string[] gameModeSpecificTutorialStrings;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Text forwardWindowText;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	protected Text rightWindowWithStartButtonText;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected Text rightWindowWithoutStartButtonText;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected Coroutine activeTutorialCoroutine;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected TutorialObjectCoordinationCoachPoolController poolController;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	protected PlayerHandController leftHandController;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected PlayerHandController rightHandController;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected GameObject currentVisibleWindow;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool tutorialStarted;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly object syncLock;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected bool skipCorrectionPerformed;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool skippingTutorial;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected Dictionary<GameObject, List<GameObject>> windowArrayDictionary;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool skippedToGameModeSpecific;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private VRControllerRaycaster raycasterController;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool raycasterEnabled;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Coroutine currentRaycasterControllerCoroutine;

	[Token(Token = "0x4000B1D")]
	private const float MILISECONDS_TO_NEXT_STEP_ALLOWED = 400f;

	[Token(Token = "0x1700011B")]
	public bool TutorialStarted
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF19614", Offset = "0xF19614", VA = "0xF19614")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF19638", Offset = "0xF19638", VA = "0xF19638")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public GameObject TutorialCanvas
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF19664", Offset = "0xF19664", VA = "0xF19664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xF1966C", Offset = "0xF1966C", VA = "0xF1966C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xF19678", Offset = "0xF19678", VA = "0xF19678", Slot = "4")]
	protected virtual void performSetupOnAwake()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xF19870", Offset = "0xF19870", VA = "0xF19870")]
	protected void setCurrentVisibleWindow(GameObject visibleWindow)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xF19944", Offset = "0xF19944", VA = "0xF19944")]
	protected GameObject getCurrentVisibleWindow()
	{
		return null;
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xF19A0C", Offset = "0xF19A0C", VA = "0xF19A0C")]
	public void startTutorial()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xF19AA8", Offset = "0xF19AA8", VA = "0xF19AA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0CB4", Offset = "0x5A0CB4")]
	protected IEnumerator fadeOutCurrentVisibleWindow()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xF19B20", Offset = "0xF19B20", VA = "0xF19B20", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0D14", Offset = "0x5A0D14")]
	protected virtual IEnumerator performTutorialAndStartGame(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xF19BAC", Offset = "0xF19BAC", VA = "0xF19BAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0D74", Offset = "0x5A0D74")]
	private IEnumerator performGeneralTutorialSteps()
	{
		return null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xF19C24", Offset = "0xF19C24", VA = "0xF19C24")]
	public void skipToGameModeSpecific()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF19EB4", Offset = "0xF19EB4", VA = "0xF19EB4", Slot = "6")]
	public virtual void endTutorial()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF1A004", Offset = "0xF1A004", VA = "0xF1A004")]
	public void stopTutorial()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF19F8C", Offset = "0xF19F8C", VA = "0xF19F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0DD4", Offset = "0x5A0DD4")]
	protected IEnumerator startGameCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF1A06C", Offset = "0xF1A06C", VA = "0xF1A06C", Slot = "7")]
	protected virtual void stopTutorialSpecific()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF1A070", Offset = "0xF1A070", VA = "0xF1A070", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0E34", Offset = "0x5A0E34")]
	protected virtual IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF1A0E8", Offset = "0xF1A0E8", VA = "0xF1A0E8", Slot = "9")]
	public virtual void startTutorialStep()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF1A0EC", Offset = "0xF1A0EC", VA = "0xF1A0EC")]
	public bool isNextTutorialStepAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF1A258", Offset = "0xF1A258", VA = "0xF1A258", Slot = "10")]
	protected virtual void nextTutorialStepSpecific()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF1A1A0", Offset = "0xF1A1A0", VA = "0xF1A1A0")]
	private bool checkNextStepAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF19784", Offset = "0xF19784", VA = "0xF19784")]
	protected void createAdvancedUIFader()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF1A25C", Offset = "0xF1A25C", VA = "0xF1A25C", Slot = "11")]
	public virtual bool isContinueTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF1A2F0", Offset = "0xF1A2F0", VA = "0xF1A2F0", Slot = "12")]
	protected virtual void cleanUpTutorial()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF1A2F4", Offset = "0xF1A2F4", VA = "0xF1A2F4", Slot = "13")]
	protected virtual void startGameMode()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xF1A314", Offset = "0xF1A314", VA = "0xF1A314", Slot = "14")]
	protected virtual void addObjectToTutorialObjects(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF1A378", Offset = "0xF1A378", VA = "0xF1A378", Slot = "15")]
	protected virtual void createTutorialObjects()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xF19CCC", Offset = "0xF19CCC", VA = "0xF19CCC")]
	protected void disappearAllVisibleTutorialObjects()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xF1A37C", Offset = "0xF1A37C", VA = "0xF1A37C", Slot = "16")]
	protected virtual void prepareTutorialObjectForDisappearance(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xF1A380", Offset = "0xF1A380", VA = "0xF1A380", Slot = "17")]
	protected virtual void disappearObject(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xF1A508", Offset = "0xF1A508", VA = "0xF1A508", Slot = "18")]
	protected virtual void destroyAndClearTutorialObjects()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xF1A774", Offset = "0xF1A774", VA = "0xF1A774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0E94", Offset = "0x5A0E94")]
	protected IEnumerator activateAndFadeInObjects(GameObject[] textComponents)
	{
		return null;
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xF1A808", Offset = "0xF1A808", VA = "0xF1A808")]
	public void playPlayerScoredPoint()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF1A824", Offset = "0xF1A824", VA = "0xF1A824")]
	public void playPlayerMissedPoint()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xF1A840", Offset = "0xF1A840", VA = "0xF1A840", Slot = "19")]
	public virtual void objectReachedAppearancePosition(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xF1A880", Offset = "0xF1A880", VA = "0xF1A880", Slot = "20")]
	protected virtual void objectReachedAppearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xF1A884", Offset = "0xF1A884", VA = "0xF1A884", Slot = "21")]
	public virtual void objectReachedDisappearancePosition(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xF1A964", Offset = "0xF1A964", VA = "0xF1A964", Slot = "22")]
	protected virtual void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF1A968", Offset = "0xF1A968", VA = "0xF1A968")]
	protected void startingSpecificTutorialBySkip(bool startingBySkip)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF1AAB4", Offset = "0xF1AAB4", VA = "0xF1AAB4")]
	public void returnObjectToObjectPool(GameObject returnToPool)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF1AAD8", Offset = "0xF1AAD8", VA = "0xF1AAD8")]
	private void setAllObjectsActive(bool active)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF1AC04", Offset = "0xF1AC04", VA = "0xF1AC04")]
	public void onPaused()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF1AC34", Offset = "0xF1AC34", VA = "0xF1AC34")]
	protected void onPausedGeneric()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF1ACC0", Offset = "0xF1ACC0", VA = "0xF1ACC0")]
	protected void callPausedOnAllObjects(List<GameObject> tutorialObjects)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xF1AE08", Offset = "0xF1AE08", VA = "0xF1AE08")]
	protected void callUnPausedOnAllObjects(List<GameObject> tutorialObjects)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xF1AF50", Offset = "0xF1AF50", VA = "0xF1AF50", Slot = "23")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xF1AF54", Offset = "0xF1AF54", VA = "0xF1AF54")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xF1AF84", Offset = "0xF1AF84", VA = "0xF1AF84")]
	protected void onUnPausedGeneric()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xF1B034", Offset = "0xF1B034", VA = "0xF1B034")]
	private void checkIfObjectNotFullyFadedIn()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xF1B0F8", Offset = "0xF1B0F8", VA = "0xF1B0F8", Slot = "24")]
	protected virtual void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF1A928", Offset = "0xF1A928", VA = "0xF1A928")]
	public void setRaycasterEnabledInCoroutine(bool input)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF19F4C", Offset = "0xF19F4C", VA = "0xF19F4C")]
	public void setRaycasterEnabledImmediate(bool input)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF1B13C", Offset = "0xF1B13C", VA = "0xF1B13C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A0EF4", Offset = "0x5A0EF4")]
	private IEnumerator raycastEnabledControllerCoroutine(bool input)
	{
		return null;
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xF1B0FC", Offset = "0xF1B0FC", VA = "0xF1B0FC")]
	private void stopCurrentRaycasterControlCoroutine()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xF1B278", Offset = "0xF1B278", VA = "0xF1B278")]
	internal void resetValues()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xF1B2C0", Offset = "0xF1B2C0", VA = "0xF1B2C0")]
	public TutorialController()
	{
	}
}
[Token(Token = "0x2000202")]
public class TutorialObjectCoordinationCoachPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF1D1C0", Offset = "0xF1D1C0", VA = "0xF1D1C0", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF1D2BC", Offset = "0xF1D2BC", VA = "0xF1D2BC", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xF1D2CC", Offset = "0xF1D2CC", VA = "0xF1D2CC", Slot = "30")]
	protected virtual void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xF1D2D0", Offset = "0xF1D2D0", VA = "0xF1D2D0")]
	public TutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x2000203")]
public interface TutorialObjectInterface
{
	[Token(Token = "0x6000C26")]
	void setTutorialController(TutorialController tutorialController);

	[Token(Token = "0x6000C27")]
	void setForceDisappearance(bool forceDisappearance);
}
[Token(Token = "0x2000204")]
public class TutorialObjectPositioningHelper : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject[] inputTargetTransforms;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float X_SHIFT;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float Z_FORWARD_SHORT;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly float Z_FORWARD_LONG;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xF1D2D8", Offset = "0xF1D2D8", VA = "0xF1D2D8")]
	public Vector3 getNormalObjectPositionFrontOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xF1D3B0", Offset = "0xF1D3B0", VA = "0xF1D3B0")]
	public Vector3 getNormalObjectPositionLeftOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xF1D494", Offset = "0xF1D494", VA = "0xF1D494")]
	public Vector3 getNormalObjectPositionRightOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xF1D578", Offset = "0xF1D578", VA = "0xF1D578")]
	public Vector3 getNormalObjectPositionFrontAndAboveOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xF1D650", Offset = "0xF1D650", VA = "0xF1D650")]
	public Vector3 getNormalObjectPositionFrontOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xF1D820", Offset = "0xF1D820", VA = "0xF1D820")]
	public Vector3 getNormalObjectPositionLeftOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xF1D954", Offset = "0xF1D954", VA = "0xF1D954")]
	public Vector3 getNormalObjectPositionLeftOfPlayer(float forward, float left)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xF1DA88", Offset = "0xF1DA88", VA = "0xF1DA88")]
	public Vector3 getNormalObjectPositionRightOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xF1DBBC", Offset = "0xF1DBBC", VA = "0xF1DBBC")]
	public Vector3 getNormalObjectPositionRightOfPlayer(float forward, float right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xF1DCF0", Offset = "0xF1DCF0", VA = "0xF1DCF0")]
	public Vector3 getNormalObjectPositionFrontAndAboveOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xF1D770", Offset = "0xF1D770", VA = "0xF1D770")]
	private float getCorrectedZPos(float zPos, float playerPosZ)
	{
		return default(float);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xF1DE10", Offset = "0xF1DE10", VA = "0xF1DE10")]
	public TutorialObjectPositioningHelper()
	{
	}
}
[Token(Token = "0x2000205")]
public class TutorialObjectsRepositioner : MonoBehaviour
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject parentTutorialObject;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform transformOfPlayerCamera;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float zDistanceFromPlayer;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float height;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xF1E644", Offset = "0xF1E644", VA = "0xF1E644")]
	public void repositionTutorialObjects()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xF1E6C8", Offset = "0xF1E6C8", VA = "0xF1E6C8")]
	public TutorialObjectsRepositioner()
	{
	}
}
[Token(Token = "0x2000206")]
public class CoordinationCoachGameObject : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x2000207")]
	public enum ActivationType
	{
		[Token(Token = "0x4000B9E")]
		ANY_HAND,
		[Token(Token = "0x4000B9F")]
		LEFT_HAND_ONLY,
		[Token(Token = "0x4000BA0")]
		RIGHT_HAND_ONLY,
		[Token(Token = "0x4000BA1")]
		DO_NOT_TOUCH,
		[Token(Token = "0x4000BA2")]
		ACTIVATION_NOT_POSSIBLE
	}

	[Token(Token = "0x2000208")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x4000BA4")]
		DIRECT,
		[Token(Token = "0x4000BA5")]
		CURVED
	}

	[Token(Token = "0x2000209")]
	public enum MovementAxis
	{
		[Token(Token = "0x4000BA7")]
		xAxis,
		[Token(Token = "0x4000BA8")]
		yAxis,
		[Token(Token = "0x4000BA9")]
		zAxis
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59685C", Offset = "0x59685C")]
	private sealed class <deactivateSelfCoroutine>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int secondsToWait;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x9F1A9C", Offset = "0x9F1A9C", VA = "0x9F1A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x9F1AE4", Offset = "0x9F1AE4", VA = "0x9F1AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x9F196C", Offset = "0x9F196C", VA = "0x9F196C")]
		[DebuggerHidden]
		public <deactivateSelfCoroutine>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x9F1998", Offset = "0x9F1998", VA = "0x9F1998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x9F199C", Offset = "0x9F199C", VA = "0x9F199C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x9F1AA4", Offset = "0x9F1AA4", VA = "0x9F1AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59686C", Offset = "0x59686C")]
	private sealed class <playAllEffects>d__151 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x9F1D24", Offset = "0x9F1D24", VA = "0x9F1D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x9F1D6C", Offset = "0x9F1D6C", VA = "0x9F1D6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x9F1AEC", Offset = "0x9F1AEC", VA = "0x9F1AEC")]
		[DebuggerHidden]
		public <playAllEffects>d__151(int <>1__state)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x9F1B18", Offset = "0x9F1B18", VA = "0x9F1B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x9F1B1C", Offset = "0x9F1B1C", VA = "0x9F1B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x9F1D2C", Offset = "0x9F1D2C", VA = "0x9F1D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59687C", Offset = "0x59687C")]
	private sealed class <startAppearanceMovement>d__214 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x9F1EA0", Offset = "0x9F1EA0", VA = "0x9F1EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x9F1EE8", Offset = "0x9F1EE8", VA = "0x9F1EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x9F1D74", Offset = "0x9F1D74", VA = "0x9F1D74")]
		[DebuggerHidden]
		public <startAppearanceMovement>d__214(int <>1__state)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x9F1DA0", Offset = "0x9F1DA0", VA = "0x9F1DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x9F1DA4", Offset = "0x9F1DA4", VA = "0x9F1DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x9F1EA8", Offset = "0x9F1EA8", VA = "0x9F1EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59688C", Offset = "0x59688C")]
	private sealed class <startDisappearanceMovementCoroutine>d__215 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x9F1FFC", Offset = "0x9F1FFC", VA = "0x9F1FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x9F2044", Offset = "0x9F2044", VA = "0x9F2044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x9F1EF0", Offset = "0x9F1EF0", VA = "0x9F1EF0")]
		[DebuggerHidden]
		public <startDisappearanceMovementCoroutine>d__215(int <>1__state)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x9F1F1C", Offset = "0x9F1F1C", VA = "0x9F1F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x9F1F20", Offset = "0x9F1F20", VA = "0x9F1F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x9F2004", Offset = "0x9F2004", VA = "0x9F2004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59689C", Offset = "0x59689C")]
	private sealed class <activeTimeCountdownCoroutine>d__283 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x9F191C", Offset = "0x9F191C", VA = "0x9F191C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x9F1964", Offset = "0x9F1964", VA = "0x9F1964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x9F1890", Offset = "0x9F1890", VA = "0x9F1890")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__283(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x9F18BC", Offset = "0x9F18BC", VA = "0x9F18BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x9F18C0", Offset = "0x9F18C0", VA = "0x9F18C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x9F1924", Offset = "0x9F1924", VA = "0x9F1924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int id;

	[Token(Token = "0x4000B41")]
	protected const float DESTINATION_REACHED_DISTANCE = 0.05f;

	[Token(Token = "0x4000B42")]
	protected const float MAX_DISTANCE_FROM_STRAIGHT_LINE_BEZIER_MULTIPLIER = 0.75f;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool playerHandEntered;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected string objectTypeAsString;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string activationTypeAsString;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string objectAndActivationTypeAsString;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float[] rendererBounds;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ActivationType currentActivationType;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Material activeAnyHandMaterial;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Material activeLeftHandOnlyMaterial;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Material activeRightHandOnlyMaterial;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Material activeDoNotTouchMaterial;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Renderer[] child_renderers;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Renderer my_Renderer;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Rigidbody my_RigidBody;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 zeroVector;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool active;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool inPool;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	protected bool movedAfterCreation;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	protected bool wasAlreadyActive;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float distanceFromCurrentStartingPosToTarget;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float journeyTime;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected BezierCurveController bezierCurveController;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000B5A")]
	protected const float BEZIER_CURVE_ON_THIRD_DISTANCE = 0.33f;

	[Token(Token = "0x4000B5B")]
	protected const float BEZIER_CURVE_TWO_THIRDS_DISTANCE = 0.66f;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float BEZIER_JOURNEY_TIME_MULTIPLIER;

	[Token(Token = "0x4000B5D")]
	protected const float CHECK_DISTANCE_DISTANCE = 0.01f;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected bool objectMoves;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected Vector3 originalPosition;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected float maximumDistanceFromOriginalPosition;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected GameController gameController;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float[] movementLimits;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected float[] movementLimitsCorrectedForBounds;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected long creationTime;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected List<MovementAxis> movementAxises;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected bool appearanceInProgress;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	protected bool normalGameMovementAllowed;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float APPEARANCE_DISAPPEARANCE_SPEED;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector3 appearanceFinishedPosition;

	[Token(Token = "0x4000B6B")]
	protected const float APPEARANCE_DISAPPEARANCE_MULTIPLIER = 0.2f;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected float mTimer;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected float distanceToDestinationToMaxDistanceRatio;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float curvedToDirectDistanceRatio;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	protected float originalBezierJourneyTime;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float directMovementSpeed;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected Vector3 destination;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	protected GameObject disappearanceEffectPrefab;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected GameObject playerTouchedForbiddenObjectEffectPrefab;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected GameObject instantiatedPlayerTouchedForbiddenObjectEffect;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected float INSTANTIATED_PREFAB_MINUS_Y;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected Vector3 disappearanceFinishedPosition;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool disappearanceInProgress;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected Coroutine activeDisappearanceInProgressCoroutine;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Coroutine activeAppearanceInProgressCoroutine;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected ArrayList preInstantiatedEffects;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected Coroutine deactivateCoroutine;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	protected GameObject pointScoredEffect;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	protected AudioClip collidedWithOtherGameObjectSound;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float appearanceWormHoleInstantiationPosY;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected GameObject preInstantiatedAppearanceWormhole;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected GameObject preInstantiatedDisappearanceWormhole;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool prefabInstantiationInProgress;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool prefabCleanUpInProgress;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	protected AudioClip pointScoredAudio;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	protected AudioClip appearanceAudio;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	protected AudioClip disappearanceAudio;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	protected AudioClip playerLostPointAudio;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected Vector3 previousPos;

	[Token(Token = "0x4000B8C")]
	protected const float DISTANCE_FOR_POSITION_REACHED_CHECK = 0.01f;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	protected Quaternion lookRotation;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	protected Vector3 rotationDirection;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected float Y_VALUE_TO_MAKE_OBJECT_INVISIBLE;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected StringBuilder stringBuilder;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected Dictionary<ActivationType, string> activationTypeStringDictionary;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected float activationDuration;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected Coroutine currentActiveTimeCountdownCoroutine;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected DateTime activationTime;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected bool activationPaused;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	protected bool appearancePaused;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	protected double activationTimeRemaining;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Vector3 creationPosition;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	protected bool alreadyInteractedWithPlayer;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	protected GameObject hitPlayerEffect;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	protected GameObject preInstantiatedHitPlayerEffect;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	protected ParticleSystem hitPlayerParticleSystem;

	[Token(Token = "0x1700012B")]
	public float ActivationDuration
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xB7C814", Offset = "0xB7C814", VA = "0xB7C814")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xB7C81C", Offset = "0xB7C81C", VA = "0xB7C81C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public Vector3 AppearanceFinishedPosition
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xB7C824", Offset = "0xB7C824", VA = "0xB7C824")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xB7C834", Offset = "0xB7C834", VA = "0xB7C834")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	protected bool WasAlreadyActive
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xB7C844", Offset = "0xB7C844", VA = "0xB7C844")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xB7C84C", Offset = "0xB7C84C", VA = "0xB7C84C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public int Id
	{
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xB7C858", Offset = "0xB7C858", VA = "0xB7C858")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xB7C860", Offset = "0xB7C860", VA = "0xB7C860")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public Vector3 CreationPosition
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xB7C868", Offset = "0xB7C868", VA = "0xB7C868")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xB7C878", Offset = "0xB7C878", VA = "0xB7C878")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public bool InPool
	{
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xB7C888", Offset = "0xB7C888", VA = "0xB7C888")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xB7C890", Offset = "0xB7C890", VA = "0xB7C890")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public bool ObjectMoves
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xB7D25C", Offset = "0xB7D25C", VA = "0xB7D25C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xB7D264", Offset = "0xB7D264", VA = "0xB7D264")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public GameController GameController
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xB7D270", Offset = "0xB7D270", VA = "0xB7D270")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xB7D278", Offset = "0xB7D278", VA = "0xB7D278")]
		set
		{
		}
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xB7C89C", Offset = "0xB7C89C", VA = "0xB7C89C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xB7C980", Offset = "0xB7C980", VA = "0xB7C980")]
	private void setupActivationTypeStringDictionary()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xB7CD24", Offset = "0xB7CD24", VA = "0xB7CD24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xB7CD30", Offset = "0xB7CD30", VA = "0xB7CD30", Slot = "7")]
	public virtual void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xB7CD34", Offset = "0xB7CD34", VA = "0xB7CD34", Slot = "8")]
	protected virtual void performSetupOnStart()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xB7CD60", Offset = "0xB7CD60", VA = "0xB7CD60")]
	private void performGeneralSetup()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xB7CDBC", Offset = "0xB7CDBC", VA = "0xB7CDBC", Slot = "9")]
	protected virtual void performSpecificSetup()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xB7CDC0", Offset = "0xB7CDC0", VA = "0xB7CDC0")]
	public bool isPrefabCleanUpInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xB7CDE4", Offset = "0xB7CDE4", VA = "0xB7CDE4")]
	public void setMovementLimits(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xB7D068", Offset = "0xB7D068", VA = "0xB7D068", Slot = "10")]
	public virtual void calculateLocalMovementLimits(float movementAmount)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB7D06C", Offset = "0xB7D06C", VA = "0xB7D06C")]
	public void setMovementData(float maxDistanceToMove, float movementSpeed, List<MovementAxis> movementAxises, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xB7D110", Offset = "0xB7D110", VA = "0xB7D110")]
	protected void printDistanceFromPreviousPosition()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xB7D254", Offset = "0xB7D254", VA = "0xB7D254")]
	public long getCreationDateTime()
	{
		return default(long);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xB7D280", Offset = "0xB7D280", VA = "0xB7D280", Slot = "11")]
	public virtual void performInitalizationSetup(GameController gameController)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xB7D284", Offset = "0xB7D284", VA = "0xB7D284")]
	public void setNormalGameMovementAllowed(bool gameMovementAllowed)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xB7D290", Offset = "0xB7D290", VA = "0xB7D290", Slot = "12")]
	public virtual void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xB7D2CC", Offset = "0xB7D2CC", VA = "0xB7D2CC")]
	public bool isPrefabInstantiationInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xB7D2F0", Offset = "0xB7D2F0", VA = "0xB7D2F0", Slot = "13")]
	public virtual void instantiatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xB7D3C8", Offset = "0xB7D3C8", VA = "0xB7D3C8", Slot = "14")]
	protected virtual void instantiatePlayerTouchedForbiddenObjectPrefab()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xB7D71C", Offset = "0xB7D71C", VA = "0xB7D71C", Slot = "15")]
	public virtual void updatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xB7D720", Offset = "0xB7D720", VA = "0xB7D720", Slot = "16")]
	protected virtual void instantiatePlayerScoredEffect()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xB7D724", Offset = "0xB7D724", VA = "0xB7D724")]
	public void setPreInstantiatedEffectsActive(bool activeValue)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xB7D834", Offset = "0xB7D834", VA = "0xB7D834")]
	public void setPreinstantiatedEffectsPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xB7D91C", Offset = "0xB7D91C", VA = "0xB7D91C")]
	public void deactivateSelfAndPrefabsWithDelay(int secondsToWait)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xB7DA1C", Offset = "0xB7DA1C", VA = "0xB7DA1C")]
	protected void stopAppearanceDisappearance()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xB7DA90", Offset = "0xB7DA90", VA = "0xB7DA90")]
	public void prepareForReturnToGame()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xB7DAC4", Offset = "0xB7DAC4", VA = "0xB7DAC4", Slot = "17")]
	protected virtual void prepareForReturnToGameSpecific()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xB7D7F4", Offset = "0xB7D7F4", VA = "0xB7D7F4")]
	protected void stopDeactivateCoroutine()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xB7D994", Offset = "0xB7D994", VA = "0xB7D994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1184", Offset = "0x5A1184")]
	private IEnumerator deactivateSelfCoroutine(int secondsToWait)
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xB7DAC8", Offset = "0xB7DAC8", VA = "0xB7DAC8", Slot = "18")]
	protected virtual void performOnDeactivation()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xB7DACC", Offset = "0xB7DACC", VA = "0xB7DACC")]
	public void playAllEffectsWithDelay()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xB7DAF8", Offset = "0xB7DAF8", VA = "0xB7DAF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A11E4", Offset = "0x5A11E4")]
	private IEnumerator playAllEffects()
	{
		return null;
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xB7DB70", Offset = "0xB7DB70", VA = "0xB7DB70", Slot = "19")]
	public virtual void destroyInstantiatedPrefabs()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xB7DBC8", Offset = "0xB7DBC8", VA = "0xB7DBC8", Slot = "20")]
	protected virtual void destroyAppearanceAndDisappearanceEffect()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xB7DC30", Offset = "0xB7DC30", VA = "0xB7DC30", Slot = "21")]
	protected virtual void destroySpecificPrefabs()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xB7DC34", Offset = "0xB7DC34", VA = "0xB7DC34", Slot = "22")]
	protected virtual void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xB7DFAC", Offset = "0xB7DFAC", VA = "0xB7DFAC", Slot = "23")]
	protected virtual void instantiateSpecificPrefabs()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xB7DFB0", Offset = "0xB7DFB0", VA = "0xB7DFB0")]
	public void activateGameObjectMovement(float maxDistanceToMove, float journeyTime, List<MovementAxis> movementAxises)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xB7E0EC", Offset = "0xB7E0EC", VA = "0xB7E0EC", Slot = "24")]
	public virtual void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xB7E0F4", Offset = "0xB7E0F4", VA = "0xB7E0F4", Slot = "25")]
	protected virtual void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xB7E344", Offset = "0xB7E344", VA = "0xB7E344", Slot = "26")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xB7E37C", Offset = "0xB7E37C", VA = "0xB7E37C")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xB7E3A8", Offset = "0xB7E3A8", VA = "0xB7E3A8", Slot = "27")]
	protected virtual void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xB7E41C", Offset = "0xB7E41C", VA = "0xB7E41C")]
	protected bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xB7E4EC", Offset = "0xB7E4EC", VA = "0xB7E4EC")]
	public void setScoreKeeper(ScoreKeeper scoreKeeper)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xB7E4F4", Offset = "0xB7E4F4", VA = "0xB7E4F4")]
	public void setRenderers()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xB7E550", Offset = "0xB7E550", VA = "0xB7E550", Slot = "28")]
	public virtual void activate(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xB7E58C", Offset = "0xB7E58C", VA = "0xB7E58C")]
	public void playActiveSoundLooping(AudioClip clip)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xB7E5E4", Offset = "0xB7E5E4", VA = "0xB7E5E4")]
	public ActivationType getCurrentActivationType()
	{
		return default(ActivationType);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xB7E5EC", Offset = "0xB7E5EC", VA = "0xB7E5EC", Slot = "29")]
	protected virtual void activateGeneric(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xB7E638", Offset = "0xB7E638", VA = "0xB7E638", Slot = "30")]
	protected virtual void setMaterialOnRendenders(Material material)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xB7E738", Offset = "0xB7E738", VA = "0xB7E738", Slot = "31")]
	protected virtual void setRenderersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xB7E838", Offset = "0xB7E838", VA = "0xB7E838", Slot = "32")]
	public virtual void activateSpecific()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xB7E83C", Offset = "0xB7E83C", VA = "0xB7E83C", Slot = "33")]
	public virtual void performActivationTypeSetup(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xB7E8BC", Offset = "0xB7E8BC", VA = "0xB7E8BC", Slot = "34")]
	protected virtual void removePreviousActivationTypeFromString()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xB7E920", Offset = "0xB7E920", VA = "0xB7E920", Slot = "35")]
	protected virtual void setObjectAndActivationTypeAsString()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xB7E9B4", Offset = "0xB7E9B4", VA = "0xB7E9B4", Slot = "36")]
	public virtual string getObjectAndActivationTypeAsString()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xB7E9BC", Offset = "0xB7E9BC", VA = "0xB7E9BC", Slot = "37")]
	protected virtual Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xB7EA00", Offset = "0xB7EA00", VA = "0xB7EA00", Slot = "38")]
	public virtual void activate(float time)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xB7EA04", Offset = "0xB7EA04", VA = "0xB7EA04", Slot = "39")]
	protected virtual void specificActivationFunctionality()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xB7EA14", Offset = "0xB7EA14", VA = "0xB7EA14", Slot = "40")]
	protected virtual void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xB7EA18", Offset = "0xB7EA18", VA = "0xB7EA18")]
	protected PlayerHandController getPlayerHandControllerFromOther(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xB7EB94", Offset = "0xB7EB94", VA = "0xB7EB94", Slot = "41")]
	protected virtual bool isTouchedByValidHand(PlayerHandController.Hand_Type handType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xB7EBC8", Offset = "0xB7EBC8", VA = "0xB7EBC8", Slot = "42")]
	protected virtual void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xB7EC58", Offset = "0xB7EC58", VA = "0xB7EC58", Slot = "43")]
	protected virtual void playerTouchedForbiddenObjectSpecific(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xB7EC5C", Offset = "0xB7EC5C", VA = "0xB7EC5C", Slot = "44")]
	protected virtual void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xB7EC98", Offset = "0xB7EC98", VA = "0xB7EC98", Slot = "45")]
	protected virtual void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xB7ECD4", Offset = "0xB7ECD4", VA = "0xB7ECD4", Slot = "46")]
	protected virtual void repositionDestination(List<MovementAxis> axisesToMoveIn)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xB7EFFC", Offset = "0xB7EFFC", VA = "0xB7EFFC", Slot = "47")]
	protected virtual void positionDestinationWithCorrectionForLimits(float additionalX, float additionalY, float additionalZ, float xDirection, float yDirection, float zDirection)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xB7F164", Offset = "0xB7F164", VA = "0xB7F164", Slot = "48")]
	protected virtual void setDestinationPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xB7F174", Offset = "0xB7F174", VA = "0xB7F174")]
	public Vector3 getDestination()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xB7F184", Offset = "0xB7F184", VA = "0xB7F184")]
	protected bool vectorIsPlaceHolderVector(Vector3 input)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xB7EFE8", Offset = "0xB7EFE8", VA = "0xB7EFE8")]
	protected float getAdditionalMovementAmount()
	{
		return default(float);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xB7EFB8", Offset = "0xB7EFB8", VA = "0xB7EFB8")]
	protected float getRandomDirection()
	{
		return default(float);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xB7F1B0", Offset = "0xB7F1B0", VA = "0xB7F1B0", Slot = "49")]
	protected virtual void repositionDestinationInSpecificDirection(float xDirection, float yDirection)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xB7F2B0", Offset = "0xB7F2B0", VA = "0xB7F2B0", Slot = "50")]
	public virtual void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xB7F5B4", Offset = "0xB7F5B4", VA = "0xB7F5B4", Slot = "51")]
	protected virtual void playAppearanceAudio()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xB7F628", Offset = "0xB7F628", VA = "0xB7F628", Slot = "52")]
	protected virtual void playDisappearanceAudio()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xB7F65C", Offset = "0xB7F65C", VA = "0xB7F65C", Slot = "53")]
	protected virtual void playPlayerLostPointAudio()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xB7F690", Offset = "0xB7F690", VA = "0xB7F690", Slot = "54")]
	protected virtual void playOneShotAudio(AudioClip audioClip)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xB7F6C8", Offset = "0xB7F6C8", VA = "0xB7F6C8", Slot = "55")]
	protected virtual void performApperancePreparation()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xB7F6CC", Offset = "0xB7F6CC", VA = "0xB7F6CC", Slot = "56")]
	public virtual void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xB7F798", Offset = "0xB7F798", VA = "0xB7F798", Slot = "57")]
	protected virtual void prepareForDisappearance()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xB7F79C", Offset = "0xB7F79C", VA = "0xB7F79C", Slot = "58")]
	protected virtual void playDisappearanceEffect(float scale)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xB7F894", Offset = "0xB7F894", VA = "0xB7F894", Slot = "59")]
	protected virtual GameObject getDisappearancePreInstantiatedEffect()
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xB7F89C", Offset = "0xB7F89C", VA = "0xB7F89C", Slot = "60")]
	protected virtual GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xB7F8A4", Offset = "0xB7F8A4", VA = "0xB7F8A4", Slot = "61")]
	protected virtual void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xB7F8A8", Offset = "0xB7F8A8", VA = "0xB7F8A8", Slot = "62")]
	protected virtual float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xB7F8B4", Offset = "0xB7F8B4", VA = "0xB7F8B4", Slot = "63")]
	protected virtual Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xB7F958", Offset = "0xB7F958", VA = "0xB7F958", Slot = "64")]
	protected virtual Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xB7DE60", Offset = "0xB7DE60", VA = "0xB7DE60")]
	protected GameObject createAppearanceDisappearancePrefab(float scale, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xB7FA50", Offset = "0xB7FA50", VA = "0xB7FA50", Slot = "65")]
	protected virtual void updateDistanceFromCurrentStartingPosToTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xB7FA94", Offset = "0xB7FA94", VA = "0xB7FA94", Slot = "66")]
	protected virtual float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xB7FB24", Offset = "0xB7FB24", VA = "0xB7FB24", Slot = "67")]
	protected virtual float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xB7FB2C", Offset = "0xB7FB2C", VA = "0xB7FB2C", Slot = "68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1244", Offset = "0x5A1244")]
	protected virtual IEnumerator startAppearanceMovement()
	{
		return null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xB7FBA4", Offset = "0xB7FBA4", VA = "0xB7FBA4", Slot = "69")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A12A4", Offset = "0x5A12A4")]
	protected virtual IEnumerator startDisappearanceMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xB7FC1C", Offset = "0xB7FC1C", VA = "0xB7FC1C")]
	public void forceDisappearanceInProgress(bool input)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xB7F4F8", Offset = "0xB7F4F8", VA = "0xB7F4F8")]
	protected void updateRenderer()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xB7FC28", Offset = "0xB7FC28", VA = "0xB7FC28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xB7FE48", Offset = "0xB7FE48", VA = "0xB7FE48", Slot = "70")]
	protected virtual void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xB7FF48", Offset = "0xB7FF48", VA = "0xB7FF48", Slot = "71")]
	protected virtual void performOnDisappearanceFinished()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xB7FF94", Offset = "0xB7FF94", VA = "0xB7FF94")]
	protected void resetRigidBodyVelocity()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xB80044", Offset = "0xB80044", VA = "0xB80044", Slot = "72")]
	protected virtual void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xB8010C", Offset = "0xB8010C", VA = "0xB8010C", Slot = "73")]
	protected virtual void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xB80110", Offset = "0xB80110", VA = "0xB80110", Slot = "74")]
	protected virtual void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xB801D8", Offset = "0xB801D8", VA = "0xB801D8")]
	public void onPlayerStoppedGame()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xB80230", Offset = "0xB80230", VA = "0xB80230", Slot = "75")]
	public virtual void stopAllEffects(bool playerScored)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xB80234", Offset = "0xB80234", VA = "0xB80234", Slot = "76")]
	protected virtual void disappearanceEnded()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xB8032C", Offset = "0xB8032C", VA = "0xB8032C", Slot = "77")]
	public virtual void performGameAction()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xB8037C", Offset = "0xB8037C", VA = "0xB8037C", Slot = "78")]
	public virtual void prePerformMovement()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xB80380", Offset = "0xB80380", VA = "0xB80380", Slot = "79")]
	protected virtual void performMovement()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xB803FC", Offset = "0xB803FC", VA = "0xB803FC", Slot = "80")]
	protected virtual void postPerformMovement()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xB80448", Offset = "0xB80448", VA = "0xB80448", Slot = "81")]
	protected virtual bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xB804A0", Offset = "0xB804A0", VA = "0xB804A0", Slot = "82")]
	protected virtual void setNewLerpPosition()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xB80528", Offset = "0xB80528", VA = "0xB80528", Slot = "83")]
	protected virtual void setNewBezierCurvePosition()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xB80630", Offset = "0xB80630", VA = "0xB80630", Slot = "84")]
	protected virtual Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xB80760", Offset = "0xB80760", VA = "0xB80760")]
	protected void printBezierCurvePositions()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xB80778", Offset = "0xB80778", VA = "0xB80778", Slot = "85")]
	protected virtual float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xB80784", Offset = "0xB80784", VA = "0xB80784", Slot = "86")]
	protected virtual float getMTimerCorrectedBezier(float mTimer, Vector3 targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xB80790", Offset = "0xB80790", VA = "0xB80790", Slot = "87")]
	protected virtual void updateCurvedToDirectDistanceRatio(Vector3 endDestination)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xB7E16C", Offset = "0xB7E16C", VA = "0xB7E16C")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xB807F8", Offset = "0xB807F8", VA = "0xB807F8")]
	protected bool checkIfDistanceLessThen(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xB7FDF0", Offset = "0xB7FDF0", VA = "0xB7FDF0")]
	private bool checkIfAppearanceFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xB80860", Offset = "0xB80860", VA = "0xB80860")]
	protected string getObjectIdString()
	{
		return null;
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xB808D8", Offset = "0xB808D8", VA = "0xB808D8")]
	protected void logPosition()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xB80C44", Offset = "0xB80C44", VA = "0xB80C44", Slot = "88")]
	protected virtual bool checkIfDisappearanceFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xB80C9C", Offset = "0xB80C9C", VA = "0xB80C9C", Slot = "89")]
	protected virtual void destiantionReached()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xB80D1C", Offset = "0xB80D1C", VA = "0xB80D1C", Slot = "90")]
	protected virtual void updateDistanceToDestinationToMaxDistanceRatio()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xB80D60", Offset = "0xB80D60", VA = "0xB80D60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xB80F58", Offset = "0xB80F58", VA = "0xB80F58", Slot = "91")]
	protected virtual void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xB80F5C", Offset = "0xB80F5C", VA = "0xB80F5C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xB81010", Offset = "0xB81010", VA = "0xB81010", Slot = "92")]
	protected virtual void collidedWithNonPlayerObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xB8105C", Offset = "0xB8105C", VA = "0xB8105C")]
	protected void playCollisionSoundWithOtherObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xB81140", Offset = "0xB81140", VA = "0xB81140", Slot = "93")]
	protected virtual void repositionDestinationToAvoidObjectCollidedWith(GameObject objectCollidedWith)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xB81234", Offset = "0xB81234", VA = "0xB81234")]
	protected float getYDirectionAwayFromOtherObject(GameObject objectCollidedWith)
	{
		return default(float);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xB8130C", Offset = "0xB8130C", VA = "0xB8130C", Slot = "94")]
	protected virtual void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xB81310", Offset = "0xB81310", VA = "0xB81310")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xB81318", Offset = "0xB81318", VA = "0xB81318")]
	public bool isMovedAfterCreation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xB8139C", Offset = "0xB8139C", VA = "0xB8139C")]
	protected void playPlayerScoredPointAudio()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xB813C4", Offset = "0xB813C4", VA = "0xB813C4")]
	public void stopPointScoredEffect()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xB7F5E8", Offset = "0xB7F5E8", VA = "0xB7F5E8")]
	public void stopAudioAndSetLoopingToFalse()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xB7D61C", Offset = "0xB7D61C", VA = "0xB7D61C")]
	public static GameObject instantiateAndScalePrefabOnPosition(GameObject prefabToInstantiate, Vector3 position, Quaternion rotation, Vector3 size)
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xB81424", Offset = "0xB81424", VA = "0xB81424")]
	public void positionAtInvisibleYValue()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xB814A4", Offset = "0xB814A4", VA = "0xB814A4", Slot = "95")]
	protected virtual GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB814AC", Offset = "0xB814AC", VA = "0xB814AC", Slot = "96")]
	public virtual void deactivateDueToTouchedByPlayer()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB814B0", Offset = "0xB814B0", VA = "0xB814B0", Slot = "97")]
	public virtual string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB814B8", Offset = "0xB814B8", VA = "0xB814B8", Slot = "98")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB7DDFC", Offset = "0xB7DDFC", VA = "0xB7DDFC", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB814C0", Offset = "0xB814C0", VA = "0xB814C0", Slot = "99")]
	public virtual void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB81618", Offset = "0xB81618", VA = "0xB81618", Slot = "100")]
	protected virtual void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB8161C", Offset = "0xB8161C", VA = "0xB8161C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB816A0", Offset = "0xB816A0", VA = "0xB816A0", Slot = "101")]
	public virtual void returnToCreationPositionOnReset()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB816A4", Offset = "0xB816A4", VA = "0xB816A4", Slot = "102")]
	public virtual void gameRestartedByPlayer()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB816A8", Offset = "0xB816A8", VA = "0xB816A8", Slot = "103")]
	public virtual void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB816AC", Offset = "0xB816AC", VA = "0xB816AC", Slot = "104")]
	protected virtual void prepareObjectForReturnToGameObjectPool()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB816B0", Offset = "0xB816B0", VA = "0xB816B0", Slot = "105")]
	protected virtual void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xB81718", Offset = "0xB81718", VA = "0xB81718", Slot = "106")]
	protected virtual void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xB8180C", Offset = "0xB8180C", VA = "0xB8180C", Slot = "107")]
	public virtual int getPointsValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xB81814", Offset = "0xB81814", VA = "0xB81814", Slot = "108")]
	public virtual void onPaused()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xB81A30", Offset = "0xB81A30", VA = "0xB81A30", Slot = "109")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xB81A34", Offset = "0xB81A34", VA = "0xB81A34", Slot = "110")]
	public virtual void onUnPaused()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xB81B0C", Offset = "0xB81B0C", VA = "0xB81B0C", Slot = "111")]
	protected virtual void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xB819F0", Offset = "0xB819F0", VA = "0xB819F0")]
	public void stopActiveCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xB81B10", Offset = "0xB81B10", VA = "0xB81B10", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1304", Offset = "0x5A1304")]
	protected virtual IEnumerator activeTimeCountdownCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xB81B6C", Offset = "0xB81B6C", VA = "0xB81B6C", Slot = "113")]
	protected virtual bool checkWithinMaxDistanceFromStartingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xB81B74", Offset = "0xB81B74", VA = "0xB81B74")]
	protected List<ObjectPositionAnalyzer.outOfPositionDirection> getOutOfMovementLimitsDirections()
	{
		return null;
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xB7F0C4", Offset = "0xB7F0C4", VA = "0xB7F0C4")]
	protected Vector3 getDestinationCorrectedForMovementLimits(Vector3 newDestination)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xB81C88", Offset = "0xB81C88", VA = "0xB81C88")]
	public Vector3 getOriginalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xB81C94", Offset = "0xB81C94", VA = "0xB81C94", Slot = "114")]
	public virtual void preloadPlayerScoredPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xB81C98", Offset = "0xB81C98", VA = "0xB81C98", Slot = "115")]
	public virtual void preloadPlayerLostPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xB81C9C", Offset = "0xB81C9C", VA = "0xB81C9C")]
	protected void playHitPlayerEffect(Collider collider)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xB81D68", Offset = "0xB81D68", VA = "0xB81D68", Slot = "116")]
	protected virtual void instantiateHitPlayerEffect()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xB81FEC", Offset = "0xB81FEC", VA = "0xB81FEC")]
	public CoordinationCoachGameObject()
	{
	}
}
[Token(Token = "0x200020F")]
public class EnduranceGameObjectAppearancePositionHelper : ObjectAppearancePositionHelper
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PositionAndRotationContainer> posAndRotationContainers;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool boundsCalculationsSet;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] enduranceObjectBounds;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] enduranceObjectBoundsHalfed;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 vectorForDistanceCheckBetweenPlayerAndObject;

	[Token(Token = "0x1700013D")]
	public bool BoundsCalculationsSet
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xA0154C", Offset = "0xA0154C", VA = "0xA0154C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xA01554", Offset = "0xA01554", VA = "0xA01554")]
		set
		{
		}
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xA01560", Offset = "0xA01560", VA = "0xA01560")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xA01628", Offset = "0xA01628", VA = "0xA01628")]
	public List<PositionAndRotationContainer> getAppearancePosSingleObject(EnduranceModePlane planeHit)
	{
		return null;
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xA017A4", Offset = "0xA017A4", VA = "0xA017A4")]
	public List<PositionAndRotationContainer> getAppearancePositions(EnduranceModePlane planeHit)
	{
		return null;
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xA01E04", Offset = "0xA01E04", VA = "0xA01E04")]
	public void setUpCalculationValues(float[] objectBounds)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xA01738", Offset = "0xA01738", VA = "0xA01738")]
	private void setAppearancePosRotationAppearanceStartPosition(PositionAndRotationContainer positionAndRotationContainer, Vector3 appearancePos, EnduranceModePlane enduranceModePlane, float yPos)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xA01D3C", Offset = "0xA01D3C", VA = "0xA01D3C")]
	private bool checkForCollisionWithPlayer(Vector3 objectPosition, Vector3 playerPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xA02094", Offset = "0xA02094", VA = "0xA02094")]
	public EnduranceGameObjectAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x2000210")]
public class ObjectAppearancePositionHelper : MonoBehaviour
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform leftHand;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform rightHand;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float distanceFromHandForObjectCreation;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] aroundHandBounds;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static float distanceFromPlayerMin;

	[Token(Token = "0x1700013E")]
	public static float DistanceFromHandForObjectCreation
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xC6D770", Offset = "0xC6D770", VA = "0xC6D770")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013F")]
	public static float DistanceFromPlayerMin
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xC6D7D4", Offset = "0xC6D7D4", VA = "0xC6D7D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xC6D838", Offset = "0xC6D838", VA = "0xC6D838")]
	public void setPlayAreaBoundary()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xC6D878", Offset = "0xC6D878", VA = "0xC6D878")]
	public bool isPositionCollidingWithPlayerHand(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xC6D880", Offset = "0xC6D880", VA = "0xC6D880")]
	private float[] getAreaOccupiedByHand(Vector3 handPos)
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xC6D9DC", Offset = "0xC6D9DC", VA = "0xC6D9DC")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHands(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xC6E40C", Offset = "0xC6E40C", VA = "0xC6E40C")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHandsYOnly(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xC6E47C", Offset = "0xC6E47C", VA = "0xC6E47C")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHandsYOnly(float[] bounds, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xC6DD68", Offset = "0xC6DD68", VA = "0xC6DD68")]
	protected List<Transform> getHandsWithinCreationRange(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xC6DF6C", Offset = "0xC6DF6C", VA = "0xC6DF6C")]
	private void addCreationAreaBetweenHandsVertical(List<Area3D> validCreationAreas, Transform leftMostObject, Transform rightMostObject, Transform lowestObject, Transform highestObject, Transform mostBackObject, Transform mostForwardObject)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xC6E0D0", Offset = "0xC6E0D0", VA = "0xC6E0D0")]
	private void addCreationAreaBetweenHandsHorizontal(List<Area3D> validCreationAreas, Transform leftMostObject, Transform rightMostObject, Transform backMostObject, Transform forwardMostObject, float minY, float maxY)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xC6E25C", Offset = "0xC6E25C", VA = "0xC6E25C")]
	private List<Area3D> addValidCreationAreasAroundObject(List<Area3D> validCreationAreas, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectHalfSize, float leftMostPositionToAvoid, float rightMostPositionToAvoid, float lowestPositionToAvoid, float highestPositionToAvoid, float mostBackPosToAvoid, float mostForwardPosToAvoid, float distanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xC6E628", Offset = "0xC6E628", VA = "0xC6E628")]
	private void addCreationAreaFromHighestObjectToMaxYLimit(List<Area3D> validCreationAreas, float yPos, float maxY, float minX, float maxX, float minZ, float maxZ, float minDistance)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xC6E53C", Offset = "0xC6E53C", VA = "0xC6E53C")]
	private void addCreationAreaFromLowestObjectToMinYLimit(List<Area3D> validCreationAreas, float yPos, float minY, float minX, float maxX, float minZ, float maxZ, float minDistance)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xC6E714", Offset = "0xC6E714", VA = "0xC6E714")]
	public ObjectAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x2000211")]
public class PositionAndRotationContainer
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 position;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 rotation;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 appearanceStartPosition;

	[Token(Token = "0x17000140")]
	public Vector3 Position
	{
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xAE8F7C", Offset = "0xAE8F7C", VA = "0xAE8F7C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xAE8F88", Offset = "0xAE8F88", VA = "0xAE8F88")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public Vector3 Rotation
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xAE8F94", Offset = "0xAE8F94", VA = "0xAE8F94")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xAE8FA0", Offset = "0xAE8FA0", VA = "0xAE8FA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public Vector3 AppearanceStartPosition
	{
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xAE8FAC", Offset = "0xAE8FAC", VA = "0xAE8FAC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xAE8FB8", Offset = "0xAE8FB8", VA = "0xAE8FB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xAE8FC4", Offset = "0xAE8FC4", VA = "0xAE8FC4")]
	public PositionAndRotationContainer()
	{
	}
}
[Token(Token = "0x2000212")]
public class DisableFracturedParts : MonoBehaviour
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string FRACTURED_PART;

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x9F98FC", Offset = "0x9F98FC", VA = "0x9F98FC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x9F99D0", Offset = "0x9F99D0", VA = "0x9F99D0")]
	public DisableFracturedParts()
	{
	}
}
[Token(Token = "0x2000213")]
public class FracturedPart : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime collidedWithPlayerTime;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool performCleanUpPosCheck;

	[Token(Token = "0x17000143")]
	public bool PerformCleanUpPosCheck
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xABA434", Offset = "0xABA434", VA = "0xABA434")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xABA43C", Offset = "0xABA43C", VA = "0xABA43C")]
		set
		{
		}
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xABA448", Offset = "0xABA448", VA = "0xABA448")]
	public void setCollidedWithPlayerTime(DateTime dateTime)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xABA450", Offset = "0xABA450", VA = "0xABA450")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xABA694", Offset = "0xABA694", VA = "0xABA694")]
	private bool enoughTimePassedSincePlayerInteraction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xABA62C", Offset = "0xABA62C", VA = "0xABA62C")]
	private bool isPlayDisappearanceEffectOnCollisionWithOtherFragment(GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xABA738", Offset = "0xABA738", VA = "0xABA738")]
	public FracturedPart()
	{
	}
}
[Token(Token = "0x2000214")]
public class FracturedPartsController : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968AC", Offset = "0x5968AC")]
	private sealed class <setCollidersToTriggerCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FracturedPartsController <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x9F6EA0", Offset = "0x9F6EA0", VA = "0x9F6EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x9F6EE8", Offset = "0x9F6EE8", VA = "0x9F6EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x9F6D08", Offset = "0x9F6D08", VA = "0x9F6D08")]
		[DebuggerHidden]
		public <setCollidersToTriggerCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x9F6D34", Offset = "0x9F6D34", VA = "0x9F6D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x9F6D38", Offset = "0x9F6D38", VA = "0x9F6D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x9F6EA8", Offset = "0x9F6EA8", VA = "0x9F6EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968BC", Offset = "0x5968BC")]
	private sealed class <reassembleCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FracturedPartsController <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x9F6CB8", Offset = "0x9F6CB8", VA = "0x9F6CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x9F6D00", Offset = "0x9F6D00", VA = "0x9F6D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x9F6C14", Offset = "0x9F6C14", VA = "0x9F6C14")]
		[DebuggerHidden]
		public <reassembleCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x9F6C40", Offset = "0x9F6C40", VA = "0x9F6C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x9F6C44", Offset = "0x9F6C44", VA = "0x9F6C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x9F6CC0", Offset = "0x9F6CC0", VA = "0x9F6CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] relatedFragments;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoxCollider> relatedFragmentsBoxColliders;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Rigidbody> relatedFragmentsRigidBodies;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FracturedPart> relatedFragmentsFracturedParts;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LocalPositionAndRotationResetter> relatedFragmentsPosReseters;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> childRenderers;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine activeSetCollidersToTriggerCoroutine;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject sphere;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float force;

	[Token(Token = "0x4000BD6")]
	public const string FRACTURED_PART_TAG = "fracturedPart";

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool fragmentationStarted;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine activeReassembleCoroutine;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaitForSeconds waitForThreeSeconds;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Material anyHandMaterial;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Material leftHandOnlyMaterial;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material rightHandOnlyMaterial;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Material doNotTouchMaterial;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xABA740", Offset = "0xABA740", VA = "0xABA740")]
	public void initialize()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xABA958", Offset = "0xABA958", VA = "0xABA958")]
	public void setPoolController(CoordinationCoachPoolController poolController)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xABA960", Offset = "0xABA960", VA = "0xABA960")]
	public void activateFragmentation()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xABAA60", Offset = "0xABAA60", VA = "0xABAA60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A14F4", Offset = "0x5A14F4")]
	private IEnumerator setCollidersToTriggerCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xABA9C0", Offset = "0xABA9C0", VA = "0xABA9C0")]
	private void stopActiveSetCollidersToTriggerCoroutine()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xABAAD8", Offset = "0xABAAD8", VA = "0xABAAD8")]
	private void startReassembleCoroutine()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xABAB40", Offset = "0xABAB40", VA = "0xABAB40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1554", Offset = "0x5A1554")]
	private IEnumerator reassembleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xABABB8", Offset = "0xABABB8", VA = "0xABABB8")]
	public void reassembleAndReturnToPool()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xABB000", Offset = "0xABB000", VA = "0xABB000")]
	public void reasembleIfNecessary()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xABAC14", Offset = "0xABAC14", VA = "0xABAC14")]
	private void resetAndReassembleParts()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xABAA08", Offset = "0xABAA08", VA = "0xABAA08")]
	private void setFragmentationValues(bool input)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xABB3D0", Offset = "0xABB3D0", VA = "0xABB3D0")]
	public void setFragmentationStarted(bool input)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xABB3DC", Offset = "0xABB3DC", VA = "0xABB3DC")]
	public bool isFragmentationStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xABB3E4", Offset = "0xABB3E4", VA = "0xABB3E4")]
	public void addForceToChildrenAwayFromCollision(Vector3 collisionPosition)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xABB058", Offset = "0xABB058", VA = "0xABB058")]
	private void activateCollidersOnFragments(bool value)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xABB2B0", Offset = "0xABB2B0", VA = "0xABB2B0")]
	private void activateCleanups(bool value)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xABB184", Offset = "0xABB184", VA = "0xABB184")]
	private void activateGravity(bool value)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xABB038", Offset = "0xABB038", VA = "0xABB038")]
	private void setSphereActive(bool input)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xABB59C", Offset = "0xABB59C", VA = "0xABB59C")]
	public void setPlayerHitTime(DateTime playerHitTime)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xABA550", Offset = "0xABA550", VA = "0xABA550")]
	public bool isFracturedPartFromDifferentObject(GameObject fracturedPart)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xABB6B8", Offset = "0xABB6B8", VA = "0xABB6B8")]
	public void setMaterialOnChildren(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xABB740", Offset = "0xABB740", VA = "0xABB740")]
	private void setMaterialOnChildRenderers(Material inputMaterial)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xABB6FC", Offset = "0xABB6FC", VA = "0xABB6FC")]
	private Material getMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xABB868", Offset = "0xABB868", VA = "0xABB868")]
	public FracturedPartsController()
	{
	}
}
[Token(Token = "0x2000217")]
public class FragmentingCoordinationCoachObject : CoordinationCoachGameObject
{
	[Token(Token = "0x2000218")]
	public enum CurrentSpecialAction
	{
		[Token(Token = "0x4000BF2")]
		NONE,
		[Token(Token = "0x4000BF3")]
		DODGING_OTHER_OBJECT,
		[Token(Token = "0x4000BF4")]
		NORMAL_STRAFING
	}

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_ANY_HAND;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_LEFT_HAND_ONLY;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_RIGHT_HAND_ONLY;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_DO_NOT_TOUCH;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	protected CurrentSpecialAction currentAction;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	protected GameObject preInstantiatedFracturedPrefab;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	protected GameObject preInstantiatedPlayerScoredEffect;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Any_Hand;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Left_Hand_Only;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Right_Hand_Only;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Do_Not_Touch;

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xABBA90", Offset = "0xABBA90", VA = "0xABBA90")]
	public void setFracturedPrefab(GameObject preInstantiatedFracturedPrefab)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xABBAA0", Offset = "0xABBAA0", VA = "0xABBAA0")]
	public GameObject getPreInstantiatedFracturedPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xABBAA8", Offset = "0xABBAA8", VA = "0xABBAA8", Slot = "16")]
	protected override void instantiatePlayerScoredEffect()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xABBCD0", Offset = "0xABBCD0", VA = "0xABBCD0")]
	protected void playCollisionEffectAndActivateFracturedPrefab(GameObject effectToPlay, bool hitPlayer, Collider collider, bool playerLostPoint)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xABBFFC", Offset = "0xABBFFC", VA = "0xABBFFC")]
	public bool isPreInstantiatedFracturedPrefabValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xABBE74", Offset = "0xABBE74", VA = "0xABBE74")]
	private void playCollisionEffect(GameObject effectToPlay, bool hitPlayer, Collider collider, bool playerLostPoint)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xABC0FC", Offset = "0xABC0FC", VA = "0xABC0FC")]
	public void instantiateFracturedPrefab()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xABC34C", Offset = "0xABC34C", VA = "0xABC34C", Slot = "117")]
	protected virtual GameObject getPrefabToInstantiateOnDestruction(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xABC390", Offset = "0xABC390", VA = "0xABC390", Slot = "81")]
	protected override bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xABC3F8", Offset = "0xABC3F8", VA = "0xABC3F8", Slot = "109")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xABC4C0", Offset = "0xABC4C0", VA = "0xABC4C0")]
	public FragmentingCoordinationCoachObject()
	{
	}
}
[Token(Token = "0x2000219")]
public class HeadsetActiveObserver : MonoBehaviour
{
	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xACBFAC", Offset = "0xACBFAC", VA = "0xACBFAC", Slot = "4")]
	public virtual bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xACBFB4", Offset = "0xACBFB4", VA = "0xACBFB4")]
	public HeadsetActiveObserver()
	{
	}
}
[Token(Token = "0x200021A")]
public class OculusHeadSetActiveObserver : HeadsetActiveObserver
{
	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xB040B8", Offset = "0xB040B8", VA = "0xB040B8", Slot = "4")]
	public override bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xB04114", Offset = "0xB04114", VA = "0xB04114")]
	public OculusHeadSetActiveObserver()
	{
	}
}
[Token(Token = "0x200021B")]
public class OculusHeadsetActiveTester : MonoBehaviour
{
	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HeadsetActiveObserver headsetActiveObserver;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xB0411C", Offset = "0xB0411C", VA = "0xB0411C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xB04178", Offset = "0xB04178", VA = "0xB04178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xB04248", Offset = "0xB04248", VA = "0xB04248")]
	public OculusHeadsetActiveTester()
	{
	}
}
[Token(Token = "0x200021C")]
public class UnityXRHeadsetActiveObserver : HeadsetActiveObserver
{
	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xF1EFB0", Offset = "0xF1EFB0", VA = "0xF1EFB0", Slot = "4")]
	public override bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xF1F048", Offset = "0xF1F048", VA = "0xF1F048")]
	public UnityXRHeadsetActiveObserver()
	{
	}
}
[Token(Token = "0x200021D")]
public class UnityXRHeadsetEventListener : MonoBehaviour
{
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968CC", Offset = "0x5968CC")]
	private sealed class <enableHeadsetCheckCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityXRHeadsetEventListener <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x15511D0", Offset = "0x15511D0", VA = "0x15511D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x1551218", Offset = "0x1551218", VA = "0x1551218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x15510E8", Offset = "0x15510E8", VA = "0x15510E8")]
		[DebuggerHidden]
		public <enableHeadsetCheckCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1551114", Offset = "0x1551114", VA = "0x1551114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1551118", Offset = "0x1551118", VA = "0x1551118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x15511D8", Offset = "0x15511D8", VA = "0x15511D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool performHeadsetPresentCheck;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xF1F050", Offset = "0xF1F050", VA = "0xF1F050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xF1F07C", Offset = "0xF1F07C", VA = "0xF1F07C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1654", Offset = "0x5A1654")]
	private IEnumerator enableHeadsetCheckCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xF1F0F4", Offset = "0xF1F0F4", VA = "0xF1F0F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xF1F1B8", Offset = "0xF1F1B8", VA = "0xF1F1B8")]
	public UnityXRHeadsetEventListener()
	{
	}
}
[Token(Token = "0x200021F")]
public class MainMenuController : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968DC", Offset = "0x5968DC")]
	private sealed class <fadeOutCurrentAndFadeInNextMenuElements>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuController <>4__this;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> currentMenuItems;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> nextMenuItems;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x8F4E28", Offset = "0x8F4E28", VA = "0x8F4E28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x8F4E70", Offset = "0x8F4E70", VA = "0x8F4E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x8F4CFC", Offset = "0x8F4CFC", VA = "0x8F4CFC")]
		[DebuggerHidden]
		public <fadeOutCurrentAndFadeInNextMenuElements>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x8F4D28", Offset = "0x8F4D28", VA = "0x8F4D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x8F4D2C", Offset = "0x8F4D2C", VA = "0x8F4D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x8F4E30", Offset = "0x8F4E30", VA = "0x8F4E30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFB")]
	private const string SCRIPT_NAME = "MainMenuController";

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject welcomeScreenTopLevelComponent;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject playAreaNotSetTopLevelComponent;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject selectPlayStyleTopLevelComponent;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject selectGameModeTopLevelComponent;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject selectTargetTouchSubGameModeTopLevelComponents;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject selectGameDifficultyTopLevelComponent;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ScreenFadeService screenFadeService;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MainMenuGameStartSetupService mainMenuGameStartSetupService;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int gameModeArraysPosition;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> welcomeScreenList;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> playAreaNotSetScreenList;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> playStyleSelectionList;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<List<GameObject>> targetObjectSubMenus;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<List<GameObject>> blockIncomingObjectsSubMenus;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<List<GameObject>> enduranceSubMenus;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject selectBlockObjectsSubModeMenuTopLevelObject;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject selectEnduranceSubModeMenuTopLevelObject;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject selectEnduranceSquatTopLevelObject;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameModeParameterContainerController.GameModeSelectionEnum currentlySelectedGameMode;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<GameModeParameterContainerController.GameModeSelectionEnum, List<List<GameObject>>> gameModeButtonsMap;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<GameObject> gameModeSelectionList;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool showingWelcomeScreen;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool showingResetBoundaries;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x15880A8", Offset = "0x15880A8", VA = "0x15880A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x15882B8", Offset = "0x15882B8", VA = "0x15882B8")]
	private void setUpGameObjects()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x1588458", Offset = "0x1588458", VA = "0x1588458")]
	private void setupTargetObjectMenuItems()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x15885C8", Offset = "0x15885C8", VA = "0x15885C8")]
	private void setupBlockIncomingObjectsMenuItems()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x1588738", Offset = "0x1588738", VA = "0x1588738")]
	private void setupEnduranceMenuItems()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x15888D4", Offset = "0x15888D4", VA = "0x15888D4")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x158891C", Offset = "0x158891C", VA = "0x158891C")]
	public AudioController getAudioController()
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1588924", Offset = "0x1588924", VA = "0x1588924")]
	public void setGameMode(GameModeParameterContainerController.GameModeSelectionEnum gameModeSelectionEnum)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x1588C38", Offset = "0x1588C38", VA = "0x1588C38")]
	private List<GameObject> getObjectsToShow()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1588A40", Offset = "0x1588A40", VA = "0x1588A40")]
	public void loadNextMenuItems()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x1587EB8", Offset = "0x1587EB8", VA = "0x1587EB8")]
	public void loadPreviousMenuItems()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1588FF8", Offset = "0x1588FF8", VA = "0x1588FF8")]
	public void setGameModeDifficultyDueToButtonClick(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty, SetGameDifficultyPerformOnInteraction buttonSelectedScript)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1589128", Offset = "0x1589128", VA = "0x1589128")]
	public void setGameModeCreateHandSpecificObjects(bool createHandSpecificObjects)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x1589218", Offset = "0x1589218", VA = "0x1589218")]
	public void setPlayerHandInfiniteEnergy(bool playerHandInfiniteEnergy)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1589308", Offset = "0x1589308", VA = "0x1589308")]
	public void setPlayerInfiniteHealth(bool infiniteHealth)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x1589034", Offset = "0x1589034", VA = "0x1589034")]
	private void setGameDifficultyUpdateTextAndSavePreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1588F50", Offset = "0x1588F50", VA = "0x1588F50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1704", Offset = "0x5A1704")]
	private IEnumerator fadeOutCurrentAndFadeInNextMenuElements(List<GameObject> currentMenuItems, List<GameObject> nextMenuItems)
	{
		return null;
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x1588D3C", Offset = "0x1588D3C", VA = "0x1588D3C")]
	private List<GameObject> getVisibleGameModeDifficultySettingObjectPresent(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x15893F8", Offset = "0x15893F8", VA = "0x15893F8")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1589554", Offset = "0x1589554", VA = "0x1589554")]
	public void startGlobalTutorial()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1589664", Offset = "0x1589664", VA = "0x1589664")]
	public void setTargetTouchGameMode(TargetTouchGameModeParameterContainer.TARGET_TOUCH_ACTIVE_GAME_MODE gameMode)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x158976C", Offset = "0x158976C", VA = "0x158976C")]
	public void setBlockIncomingGameMode(BlockIncomingObjectsParameterContainer.BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES gameMode)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1589888", Offset = "0x1589888", VA = "0x1589888")]
	public void setEnduranceGameMode(EnduranceGameModeParameterContainer.ENDURANCE_GAME_MODES gameMode)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1589990", Offset = "0x1589990", VA = "0x1589990")]
	public void setEnduranceSquat(bool squat)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1589A4C", Offset = "0x1589A4C", VA = "0x1589A4C")]
	public MainMenuController()
	{
	}
}
[Token(Token = "0x2000221")]
public static class WelcomeScreenCompletedController
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool welcomeScreenCompleted;

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x9E6CE4", Offset = "0x9E6CE4", VA = "0x9E6CE4")]
	public static bool isWelcomeScreenCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x9E6D48", Offset = "0x9E6D48", VA = "0x9E6D48")]
	public static void setWelcomeScreenCompletedTrue()
	{
	}
}
[Token(Token = "0x2000222")]
public class MainMenuGameStartSetupService : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x1589C08", Offset = "0x1589C08", VA = "0x1589C08", Slot = "4")]
	public virtual void performGameStartSetup()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x1589D38", Offset = "0x1589D38", VA = "0x1589D38")]
	public MainMenuGameStartSetupService()
	{
	}
}
[Token(Token = "0x2000223")]
public class CalculatePositionsWithinBoundaryService : MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> positionsWithinBoundarySectors;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 middleOfBoundary;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 maxZMiddleXPos;

	[Token(Token = "0x4000C22")]
	private const float MAX_Z_REDUCTION = 0.2f;

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xFCFB70", Offset = "0xFCFB70", VA = "0xFCFB70")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xFCFC7C", Offset = "0xFCFC7C", VA = "0xFCFC7C")]
	public List<Vector3> getPositionsWithinBoundarySectors()
	{
		return null;
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xFCFC84", Offset = "0xFCFC84", VA = "0xFCFC84")]
	public void calculateQuarterPositionsWithinBoundaries(float xRendererBounds, float zRendererBounds)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xFCFE00", Offset = "0xFCFE00", VA = "0xFCFE00")]
	private void addIfWithinBounds(Vector3 pos, float xRendererBounds, float zRendererBounds)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xFCFF0C", Offset = "0xFCFF0C", VA = "0xFCFF0C")]
	public Vector3 getMiddleOfBoundaryPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xFCFF18", Offset = "0xFCFF18", VA = "0xFCFF18")]
	public Vector3 getMaxZMiddleXPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xFCFF84", Offset = "0xFCFF84", VA = "0xFCFF84")]
	public CalculatePositionsWithinBoundaryService()
	{
	}
}
[Token(Token = "0x2000224")]
public class MovementWithinBoundaryController : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	public enum MOVEMENT
	{
		[Token(Token = "0x4000C2B")]
		NONE,
		[Token(Token = "0x4000C2C")]
		LEFT,
		[Token(Token = "0x4000C2D")]
		RIGHT,
		[Token(Token = "0x4000C2E")]
		FORWARD,
		[Token(Token = "0x4000C2F")]
		BACK,
		[Token(Token = "0x4000C30")]
		DOWN,
		[Token(Token = "0x4000C31")]
		UP,
		[Token(Token = "0x4000C32")]
		ROTATE_LEFT,
		[Token(Token = "0x4000C33")]
		ROTATE_RIGHT,
		[Token(Token = "0x4000C34")]
		CORRECTIONAL
	}

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObjectMovementWithinBoundsService objectMovementWithinBoundsService;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PositionToRotateAroundService positionToRotateAroundService;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool movementStarted;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> childGameObjects;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody my_RigidBody;

	[Token(Token = "0x1700014C")]
	public List<GameObject> ChildGameObjects
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC60B44", Offset = "0xC60B44", VA = "0xC60B44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC60B4C", Offset = "0xC60B4C", VA = "0xC60B4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xC60B54", Offset = "0xC60B54", VA = "0xC60B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xC60BB0", Offset = "0xC60BB0", VA = "0xC60BB0")]
	public Rigidbody getRigidBody()
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xC60C64", Offset = "0xC60C64", VA = "0xC60C64")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xC60DCC", Offset = "0xC60DCC", VA = "0xC60DCC", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xC61014", Offset = "0xC61014", VA = "0xC61014")]
	public void setMovementStarted(bool input)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xC61020", Offset = "0xC61020", VA = "0xC61020")]
	public void stopMovement()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xC610B4", Offset = "0xC610B4", VA = "0xC610B4")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xC610EC", Offset = "0xC610EC", VA = "0xC610EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xC6112C", Offset = "0xC6112C", VA = "0xC6112C")]
	private void moveChildObjects()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xC61448", Offset = "0xC61448", VA = "0xC61448")]
	public void stopAllCoroutinesForTesting()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xC61450", Offset = "0xC61450", VA = "0xC61450")]
	public ObjectMovementWithinBoundsService getObjectMovementWithinBoundsService()
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xC61458", Offset = "0xC61458", VA = "0xC61458")]
	public MovementWithinBoundaryController()
	{
	}
}
[Token(Token = "0x2000226")]
public class ObjectMovementWithinBoundsService : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x4000C4B")]
		DIRECT,
		[Token(Token = "0x4000C4C")]
		CURVED
	}

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AllowedMovementsService allowedMovementsService;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CalculatePositionsWithinBoundaryService calculatePositionsWithinBoundaryService;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RotationWithinBoundaryController rotationWithinBoundaryController;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody my_RigidBody;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConcurrentDictionary<MovementWithinBoundaryController.MOVEMENT, Vector3> currentMovements;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool performInitialPositionCheck;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> farEnoughSectors;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BezierCurveController bezierCurveController;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 destination;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float mTimer;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float journeyTime;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float lerpJourneyTimeMultiplier;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float maxJourneyDistance;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 noIdeaWhyThisIsNeeded;

	[Token(Token = "0x1700014D")]
	public bool PerformInitialPositionCheck
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xC70D84", Offset = "0xC70D84", VA = "0xC70D84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xC70DA8", Offset = "0xC70DA8", VA = "0xC70DA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xC60C7C", Offset = "0xC60C7C", VA = "0xC60C7C")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xC70DD4", Offset = "0xC70DD4", VA = "0xC70DD4")]
	private void setupPositionCheckGameObject()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xC6105C", Offset = "0xC6105C", VA = "0xC6105C")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xC60FA0", Offset = "0xC60FA0", VA = "0xC60FA0")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xC7100C", Offset = "0xC7100C", VA = "0xC7100C")]
	private void setPositionOfPositionCheckGameObjectToCurrentPosition()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xC61200", Offset = "0xC61200", VA = "0xC61200")]
	public void performMovement()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xC710CC", Offset = "0xC710CC", VA = "0xC710CC")]
	private bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xC718F4", Offset = "0xC718F4", VA = "0xC718F4")]
	public void filterSectorsForDistance(List<Vector3> sectors)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xC71AEC", Offset = "0xC71AEC", VA = "0xC71AEC")]
	private void updateFarEnoughSectors(float[] bounds)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xC71B54", Offset = "0xC71B54", VA = "0xC71B54")]
	private void moveToRandomSector()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xC71C90", Offset = "0xC71C90", VA = "0xC71C90")]
	private void moveToMaxZ()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xC71230", Offset = "0xC71230", VA = "0xC71230")]
	private void startNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xC71D28", Offset = "0xC71D28", VA = "0xC71D28")]
	private void calculateNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xC711A8", Offset = "0xC711A8", VA = "0xC711A8")]
	private void moveToRandomSectorOrMaxZ()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xC725C0", Offset = "0xC725C0", VA = "0xC725C0")]
	public void repositionPositionCheckGameObject(Vector3 pos)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xC70EEC", Offset = "0xC70EEC", VA = "0xC70EEC")]
	private void clearCurrentMovements()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xC7175C", Offset = "0xC7175C", VA = "0xC7175C")]
	private void performNormalGameMovement()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xC70F40", Offset = "0xC70F40", VA = "0xC70F40")]
	public void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xC71FA0", Offset = "0xC71FA0", VA = "0xC71FA0")]
	private void setDestinationToCurrentPosition()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xC723F4", Offset = "0xC723F4", VA = "0xC723F4")]
	private void addOneMovementToCurrentMovements(List<MovementWithinBoundaryController.MOVEMENT> movements)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xC71C44", Offset = "0xC71C44", VA = "0xC71C44")]
	private void updateLerpJourneyTimeMultiplier()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xC7248C", Offset = "0xC7248C", VA = "0xC7248C")]
	private void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xC7123C", Offset = "0xC7123C", VA = "0xC7123C")]
	private MovementWithinBoundaryController.MOVEMENT getRotationalMovementFromCurrentMovements()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xC714CC", Offset = "0xC714CC", VA = "0xC714CC")]
	private MovementWithinBoundaryController.MOVEMENT getVerticalMovementInCurrentMovements()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xC72654", Offset = "0xC72654", VA = "0xC72654")]
	private Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xC72648", Offset = "0xC72648", VA = "0xC72648")]
	private float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xC729FC", Offset = "0xC729FC", VA = "0xC729FC")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xC718B8", Offset = "0xC718B8", VA = "0xC718B8")]
	private bool checkMovementFinished(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xC7222C", Offset = "0xC7222C", VA = "0xC7222C")]
	private Vector3 changeDestinationDueToMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xC72784", Offset = "0xC72784", VA = "0xC72784")]
	private MovementWithinBoundaryController.MOVEMENT getCurrentMovementBackForward()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xC72C00", Offset = "0xC72C00", VA = "0xC72C00")]
	private float getLinearMovementAmount(float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xC72C50", Offset = "0xC72C50", VA = "0xC72C50")]
	private bool isBackForwardMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xC72C6C", Offset = "0xC72C6C", VA = "0xC72C6C", Slot = "4")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xC72CA4", Offset = "0xC72CA4", VA = "0xC72CA4")]
	private void addOneOfAllowedMovements(List<MovementWithinBoundaryController.MOVEMENT> movementsToPerform, List<MovementWithinBoundaryController.MOVEMENT> allowedSubMovements)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xC72198", Offset = "0xC72198", VA = "0xC72198")]
	private MovementWithinBoundaryController.MOVEMENT getOneOfAllowedMovements(List<MovementWithinBoundaryController.MOVEMENT> allowedSubMovements)
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xC71FD8", Offset = "0xC71FD8", VA = "0xC71FD8")]
	private List<MovementWithinBoundaryController.MOVEMENT> getAllowedLeftRightMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xC720B8", Offset = "0xC720B8", VA = "0xC720B8")]
	private List<MovementWithinBoundaryController.MOVEMENT> getAllowedBackForwardMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xC72BC8", Offset = "0xC72BC8", VA = "0xC72BC8")]
	private bool isRotationalMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xC72BE4", Offset = "0xC72BE4", VA = "0xC72BE4")]
	private bool isUpDownMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xC72D6C", Offset = "0xC72D6C", VA = "0xC72D6C")]
	public ObjectMovementWithinBoundsService()
	{
	}
}
[Token(Token = "0x2000228")]
public class AllowedMovementRotationConstants
{
	[Token(Token = "0x4000C4D")]
	public const int FIRST_ROTATION_LIMIT = 300;

	[Token(Token = "0x4000C4E")]
	public const int SECOND_ROTATION_LIMIT = 60;

	[Token(Token = "0x4000C4F")]
	public const int THIRD_ROTATION_LIMIT = 120;

	[Token(Token = "0x4000C50")]
	public const int FOURTH_ROTATION_LIMIT = 240;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x9D1690", Offset = "0x9D1690", VA = "0x9D1690")]
	public AllowedMovementRotationConstants()
	{
	}
}
[Token(Token = "0x2000229")]
public class AllowedMovementsService : MonoBehaviour
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CheckBackMovementAllowedService checkBackMovementAllowedService;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CheckForwardMovementAllowedService checkForwardMovementAllowedService;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CheckLeftMovementAllowedService checkLeftMovementAllowedService;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CheckRightMovementAllowedService checkRightMovementAllowedService;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] currentRendererBounds;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] playAreaBoundary;

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x9D1698", Offset = "0x9D1698", VA = "0x9D1698")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x9D16A0", Offset = "0x9D16A0", VA = "0x9D16A0")]
	public void setCurrentRendererBounds(float[] bounds)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x9D16A8", Offset = "0x9D16A8", VA = "0x9D16A8")]
	public bool canMoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x9D17C0", Offset = "0x9D17C0", VA = "0x9D17C0")]
	public bool canMoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x9D18D8", Offset = "0x9D18D8", VA = "0x9D18D8")]
	public bool canMoveLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x9D19E0", Offset = "0x9D19E0", VA = "0x9D19E0")]
	public bool canMoveRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x9D1AE8", Offset = "0x9D1AE8", VA = "0x9D1AE8")]
	public List<MovementWithinBoundaryController.MOVEMENT> getAllowedVerticalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x9D1BB8", Offset = "0x9D1BB8", VA = "0x9D1BB8")]
	public bool checkIfMoveDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x9D1C60", Offset = "0x9D1C60", VA = "0x9D1C60")]
	public bool checkIfMoveUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x9D1D14", Offset = "0x9D1D14", VA = "0x9D1D14")]
	public AllowedMovementsService()
	{
	}
}
[Token(Token = "0x200022A")]
public class CheckBackMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xFD51C4", Offset = "0xFD51C4", VA = "0xFD51C4")]
	public bool canMoveBack(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xFD5380", Offset = "0xFD5380", VA = "0xFD5380")]
	public CheckBackMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022B")]
public class CheckForwardMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xFD5388", Offset = "0xFD5388", VA = "0xFD5388")]
	public bool canMoveForward(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xFD5580", Offset = "0xFD5580", VA = "0xFD5580")]
	public CheckForwardMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022C")]
public class CheckLeftMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xFD5588", Offset = "0xFD5588", VA = "0xFD5588")]
	public bool canMoveLeft(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xFD5780", Offset = "0xFD5780", VA = "0xFD5780")]
	public CheckLeftMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022D")]
public class CheckRightMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xFD58F8", Offset = "0xFD58F8", VA = "0xFD58F8")]
	public bool canMoveRight(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xFD5AF0", Offset = "0xFD5AF0", VA = "0xFD5AF0")]
	public CheckRightMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022E")]
public class CalculatedRendererBoundsContainer : MonoBehaviour
{
	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] currentRendererBounds;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] forwardMovementRendererBounds;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] backMovementRendererBounds;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float xBoundsForCalculations;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float zBoundsForCalculations;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float xBoundsForRotationCalculations;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float zBoundsForRotationCalculations;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float movementTowardsPlayerBounds;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float movementAwayFromPlayerBounds;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] rendererBoundsMovement;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] rendererBoundsRotation;

	[Token(Token = "0x4000C65")]
	private const float LEFT_RIGHT_BOUNDARY_CHECK_DIVIDER = 2.1f;

	[Token(Token = "0x4000C66")]
	private const float FORWARD_BACK_BOUNDARY_CHECK_DIVIDER = 2f;

	[Token(Token = "0x4000C67")]
	private const float LEFT_RIGHT_ROTATION_DIVIDER = 1.75f;

	[Token(Token = "0x4000C68")]
	private const float FORWARD_BACK_ROTATION_DIVIDER = 1.75f;

	[Token(Token = "0x4000C69")]
	private const float MOVEMENT_TOWARDS_PLAYER_DIVIDER = 1.05f;

	[Token(Token = "0x4000C6A")]
	private const float MOVEMENT_AWAY_FROM_PLAYER_DIVIDER = 2.65f;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xFD0064", Offset = "0xFD0064", VA = "0xFD0064")]
	public void calculateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xFD0288", Offset = "0xFD0288", VA = "0xFD0288")]
	public float[] getRendererBoundsMovement()
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xFD0264", Offset = "0xFD0264", VA = "0xFD0264")]
	public void updateAllRendererBounds()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xFD0290", Offset = "0xFD0290", VA = "0xFD0290")]
	private void updateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xFD04FC", Offset = "0xFD04FC", VA = "0xFD04FC")]
	public float[] getRotationRendererBounds(Transform inputTransform)
	{
		return null;
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xFD0394", Offset = "0xFD0394", VA = "0xFD0394")]
	public void updateForwardBackRendererBounds()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xFD0608", Offset = "0xFD0608", VA = "0xFD0608")]
	public float[] getForwardMovementRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xFD0610", Offset = "0xFD0610", VA = "0xFD0610")]
	public float[] getBackMovementRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xFD0618", Offset = "0xFD0618", VA = "0xFD0618")]
	public CalculatedRendererBoundsContainer()
	{
	}
}
[Token(Token = "0x200022F")]
public class PositionToRotateAroundService : MonoBehaviour
{
	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xAE93DC", Offset = "0xAE93DC", VA = "0xAE93DC")]
	public Vector3 getBackPositionForRotatingAround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xAE9464", Offset = "0xAE9464", VA = "0xAE9464")]
	public PositionToRotateAroundService()
	{
	}
}
[Token(Token = "0x2000230")]
public class RotationWithinBoundaryController : MonoBehaviour
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PositionToRotateAroundService positionToRotateAroundService;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C70")]
	private const int ROTATION_DEGREES_45 = 45;

	[Token(Token = "0x4000C71")]
	private const int ROTATION_DEGREES_90 = 90;

	[Token(Token = "0x4000C72")]
	private const int ROTATION_DEGREES_180 = 180;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int leftMaxRotation;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int rightMaxRotation;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startRotation;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentRotationDirection;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentAmountToRotate;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x4000C79")]
	private const int LEFT_ROTATION_DIRECTION = -1;

	[Token(Token = "0x4000C7A")]
	private const int RIGHT_ROTATION_DIRECTION = 1;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xAF2EE4", Offset = "0xAF2EE4", VA = "0xAF2EE4")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xAF2EEC", Offset = "0xAF2EEC", VA = "0xAF2EEC", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xAF30B0", Offset = "0xAF30B0", VA = "0xAF30B0")]
	public void rotateObject()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xAF31DC", Offset = "0xAF31DC", VA = "0xAF31DC")]
	public void setRotationDirection(MovementWithinBoundaryController.MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xAF31F0", Offset = "0xAF31F0", VA = "0xAF31F0")]
	public void setRotationAmount(MovementWithinBoundaryController.MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xAF324C", Offset = "0xAF324C", VA = "0xAF324C")]
	private bool canRotateLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xAF340C", Offset = "0xAF340C", VA = "0xAF340C")]
	public bool canRotateRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xAF347C", Offset = "0xAF347C", VA = "0xAF347C", Slot = "5")]
	public virtual List<MovementWithinBoundaryController.MOVEMENT> getAllowedRotationalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xAF32BC", Offset = "0xAF32BC", VA = "0xAF32BC")]
	private bool checkRotationPossible(int rotationDirection, int rotationAmountForCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xAF354C", Offset = "0xAF354C", VA = "0xAF354C")]
	public bool checkRotationFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xAF36E4", Offset = "0xAF36E4", VA = "0xAF36E4")]
	private float getCorrectedDegreesWithMinusDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xAF3708", Offset = "0xAF3708", VA = "0xAF3708")]
	private float getCorrectedDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xAF3728", Offset = "0xAF3728", VA = "0xAF3728")]
	public void calculateNewRotationMovement(MovementWithinBoundaryController.MOVEMENT rotationalMovementToPerform)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xAF3864", Offset = "0xAF3864", VA = "0xAF3864")]
	public void updatePositionToRotateAround()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xAF3898", Offset = "0xAF3898", VA = "0xAF3898")]
	public RotationWithinBoundaryController()
	{
	}
}
[Token(Token = "0x2000231")]
public class MakeObjectSeeThrough : MonoBehaviour
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rendererOfObject;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectOfThisScript;

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1589E80", Offset = "0x1589E80", VA = "0x1589E80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1589EDC", Offset = "0x1589EDC", VA = "0x1589EDC")]
	public void setObjectVisible(bool input)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1589FA4", Offset = "0x1589FA4", VA = "0x1589FA4")]
	public MakeObjectSeeThrough()
	{
	}
}
[Token(Token = "0x2000232")]
public class MaterialEmissionChanger : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968EC", Offset = "0x5968EC")]
	private sealed class <changeEmission>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialEmissionChanger <>4__this;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color emissionTargetInCoroutine;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x8F4FCC", Offset = "0x8F4FCC", VA = "0x8F4FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x8F5014", Offset = "0x8F5014", VA = "0x8F5014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x8F4E78", Offset = "0x8F4E78", VA = "0x8F4E78")]
		[DebuggerHidden]
		public <changeEmission>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x8F4EA4", Offset = "0x8F4EA4", VA = "0x8F4EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x8F4EA8", Offset = "0x8F4EA8", VA = "0x8F4EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x8F4FD4", Offset = "0x8F4FD4", VA = "0x8F4FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float progress;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds waitForFiveMillis;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material materialToChange;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color emissionTargetColor;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x1589FB8", Offset = "0x1589FB8", VA = "0x1589FB8")]
	public void setup(Color emissionTargetColor)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x1589FC4", Offset = "0x1589FC4", VA = "0x1589FC4")]
	public void updateMaterial(Material material)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1589FCC", Offset = "0x1589FCC", VA = "0x1589FCC")]
	public void stopEmissionChange()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x158A0A8", Offset = "0x158A0A8", VA = "0x158A0A8")]
	public void startEmissionChangeFromZero()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x158A190", Offset = "0x158A190", VA = "0x158A190")]
	public void restartEmissionChange()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x158A0F0", Offset = "0x158A0F0", VA = "0x158A0F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A17B4", Offset = "0x5A17B4")]
	private IEnumerator changeEmission(Color emissionTargetInCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x158A1D4", Offset = "0x158A1D4", VA = "0x158A1D4")]
	public MaterialEmissionChanger()
	{
	}
}
[Token(Token = "0x2000234")]
public interface UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x6000E1F")]
	void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType);
}
[Token(Token = "0x2000235")]
public static class AreaAroundPlayerHandsCalculationService
{
	[Token(Token = "0x4000C88")]
	private const float OBJECT_SIZE_MULTIPLIER = 1.2f;

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x9D5B74", Offset = "0x9D5B74", VA = "0x9D5B74")]
	public static List<Area3D> getAreasSplitY(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize, List<Transform> handsWithinCreationArea)
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x9D66B8", Offset = "0x9D66B8", VA = "0x9D66B8")]
	private static List<Area3D> addAreasBellowAndAboveHands(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float lowestHandPos, float highestHandPos, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x9D633C", Offset = "0x9D633C", VA = "0x9D633C")]
	private static List<Area3D> correctAreasIfNecessary(List<Area3D> areas, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float lowestHandPos, float highestHandPos, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x9D5FB8", Offset = "0x9D5FB8", VA = "0x9D5FB8")]
	private static List<float[]> getYValuesOfCreationAreas(float yMin, float yMax, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x9D60E8", Offset = "0x9D60E8", VA = "0x9D60E8")]
	private static List<Area3D> createAreasForYValues(float minX, float maxX, List<float[]> yValuesList, float minZ, float maxZ)
	{
		return null;
	}
}
[Token(Token = "0x2000236")]
public class FollowPlayerCamera : MonoBehaviour
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform playerCamera;

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xA0A824", Offset = "0xA0A824", VA = "0xA0A824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xA0A870", Offset = "0xA0A870", VA = "0xA0A870")]
	public FollowPlayerCamera()
	{
	}
}
[Token(Token = "0x2000237")]
public class LocalPositionAndRotationResetter : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x157D044", Offset = "0x157D044", VA = "0x157D044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x157D0A0", Offset = "0x157D0A0", VA = "0x157D0A0")]
	public void resetToStartingLocalPositionAndRotation()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x157D0F8", Offset = "0x157D0F8", VA = "0x157D0F8")]
	public LocalPositionAndRotationResetter()
	{
	}
}
[Token(Token = "0x2000238")]
public class MoveToTransformPositionEveryUpdate : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformFromWhichToCopyPos;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xC60AF0", Offset = "0xC60AF0", VA = "0xC60AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xC60B3C", Offset = "0xC60B3C", VA = "0xC60B3C")]
	public MoveToTransformPositionEveryUpdate()
	{
	}
}
[Token(Token = "0x2000239")]
public class ObjectMiddlePointChecker : MonoBehaviour
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wormHolePrefab;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xC70A78", Offset = "0xC70A78", VA = "0xC70A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xC70CD8", Offset = "0xC70CD8", VA = "0xC70CD8")]
	public ObjectMiddlePointChecker()
	{
	}
}
[Token(Token = "0x200023A")]
public class ObjectMovementDirectionHelper : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	public enum directionToMoveInEnum
	{
		[Token(Token = "0x4000C8F")]
		LEFT,
		[Token(Token = "0x4000C90")]
		RIGHT,
		[Token(Token = "0x4000C91")]
		DOWN,
		[Token(Token = "0x4000C92")]
		UP
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xC70CE0", Offset = "0xC70CE0", VA = "0xC70CE0")]
	public static directionToMoveInEnum getOppositeHorizontalDirection(directionToMoveInEnum direction)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xC70D00", Offset = "0xC70D00", VA = "0xC70D00")]
	public static directionToMoveInEnum getOppositeHorizontalDirection(Transform objectChecking, Transform otherObject)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xC70D24", Offset = "0xC70D24", VA = "0xC70D24")]
	public static directionToMoveInEnum getOppositeVerticalDirection(float transformToMoveY, float otherTransformY)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xC70D38", Offset = "0xC70D38", VA = "0xC70D38")]
	public static directionToMoveInEnum getDirectionOfLargerDistanceHorizontal(float transformPos, float limit1, float limit2)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xC70D60", Offset = "0xC70D60", VA = "0xC70D60")]
	public static directionToMoveInEnum getDirectionOfLargerDistanceVertical(float transformPos, float limit1, float limit2)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xC70D4C", Offset = "0xC70D4C", VA = "0xC70D4C")]
	private static int getCloserLimit(float transformPos, float limit1, float limit2)
	{
		return default(int);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xC70D7C", Offset = "0xC70D7C", VA = "0xC70D7C")]
	public ObjectMovementDirectionHelper()
	{
	}
}
[Token(Token = "0x200023C")]
public class ObjectPositionAnalyzer
{
	[Token(Token = "0x200023D")]
	public enum HitDirection
	{
		[Token(Token = "0x4000C97")]
		None,
		[Token(Token = "0x4000C98")]
		Top,
		[Token(Token = "0x4000C99")]
		Bottom,
		[Token(Token = "0x4000C9A")]
		Forward,
		[Token(Token = "0x4000C9B")]
		Back,
		[Token(Token = "0x4000C9C")]
		Left,
		[Token(Token = "0x4000C9D")]
		Right
	}

	[Token(Token = "0x200023E")]
	public enum outOfPositionDirection
	{
		[Token(Token = "0x4000C9F")]
		LEFT,
		[Token(Token = "0x4000CA0")]
		RIGHT,
		[Token(Token = "0x4000CA1")]
		DOWN,
		[Token(Token = "0x4000CA2")]
		UP,
		[Token(Token = "0x4000CA3")]
		BACK,
		[Token(Token = "0x4000CA4")]
		FORWARD
	}

	[Token(Token = "0x4000C93")]
	public const float POSITION_CORRECTION_AMOUNT = 0.15f;

	[Token(Token = "0x4000C94")]
	public const float MIN_Y = 0.8f;

	[Token(Token = "0x4000C95")]
	public const float MAX_Y = 2f;

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xAFB690", Offset = "0xAFB690", VA = "0xAFB690")]
	public static float getYWithinPlayLimits(float inputY)
	{
		return default(float);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xAFB6B4", Offset = "0xAFB6B4", VA = "0xAFB6B4")]
	public static float getOtherPositionLeftOrRight(Transform objectChecking, Transform otherTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xAFB720", Offset = "0xAFB720", VA = "0xAFB720")]
	public static float getOtherPositionLeftOrRight(Transform objectChecking, Vector3 otherPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xAFB76C", Offset = "0xAFB76C", VA = "0xAFB76C")]
	public static bool checkIfTargetAlreadyBehind(Transform objectChecking, Vector3 otherPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xAFB794", Offset = "0xAFB794", VA = "0xAFB794")]
	public static float[] returnFloatsOrderedBySize(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xAFB830", Offset = "0xAFB830", VA = "0xAFB830")]
	public static Vector3 getLeftMostPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xAFB8B0", Offset = "0xAFB8B0", VA = "0xAFB8B0")]
	public static Vector3 getLeftMostPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xAFBA10", Offset = "0xAFBA10", VA = "0xAFBA10")]
	public static Vector3 getRightMostPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xAFBA90", Offset = "0xAFBA90", VA = "0xAFBA90")]
	public static Vector3 getRightMostPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xAFBBF0", Offset = "0xAFBBF0", VA = "0xAFBBF0")]
	public static Vector3 getMostForwardPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAFBC74", Offset = "0xAFBC74", VA = "0xAFBC74")]
	public static Vector3 getMostForwardPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xAFBDD4", Offset = "0xAFBDD4", VA = "0xAFBDD4")]
	public static Vector3 getMostBackPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xAFBE58", Offset = "0xAFBE58", VA = "0xAFBE58")]
	public static Vector3 getMostBackPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAFBFB8", Offset = "0xAFBFB8", VA = "0xAFBFB8")]
	public static Transform getLeftMostObject(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xAFB89C", Offset = "0xAFB89C", VA = "0xAFB89C")]
	public static Vector3 getMostLeftPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xAFBA7C", Offset = "0xAFBA7C", VA = "0xAFBA7C")]
	public static Vector3 getMostRightPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xAFC00C", Offset = "0xAFC00C", VA = "0xAFC00C")]
	public static Transform getRightMostObject(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xAFC060", Offset = "0xAFC060", VA = "0xAFC060")]
	public static Vector3 getObjectWithMostForwardAppearancePosition(List<GameObject> gameObjects)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xAFC1DC", Offset = "0xAFC1DC", VA = "0xAFC1DC")]
	public static float getHighestZOfVectors(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xAFC320", Offset = "0xAFC320", VA = "0xAFC320")]
	public static Vector3 getMostForwardObject(ArrayList gameObjects)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xAFBC60", Offset = "0xAFBC60", VA = "0xAFBC60")]
	public static Vector3 getMostForwardPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xAFBE44", Offset = "0xAFBE44", VA = "0xAFBE44")]
	public static Vector3 getMostBackPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xAFC5E8", Offset = "0xAFC5E8", VA = "0xAFC5E8")]
	public static Transform getObjectAtHighestPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xAFC63C", Offset = "0xAFC63C", VA = "0xAFC63C")]
	public static Transform getObjectAtLowestPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xAFC690", Offset = "0xAFC690", VA = "0xAFC690")]
	public static Transform getObjectAtMostForwardPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xAFC6E4", Offset = "0xAFC6E4", VA = "0xAFC6E4")]
	public static Transform getObjectAtMostBackPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xAFC738", Offset = "0xAFC738", VA = "0xAFC738")]
	public static bool checkIfObjectsVerticallyAboveOneAnother(Transform firstTransform, Transform secondTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xAFC840", Offset = "0xAFC840", VA = "0xAFC840")]
	public static bool checkIfEnoughVerticalSpaceBetweenObjects(Transform firstTransform, Transform secondTransform, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xAFC8F4", Offset = "0xAFC8F4", VA = "0xAFC8F4")]
	public static bool checkIfEnoughHorizontalSpaceBetweenObjects(Transform firstTransform, Transform secondTransform, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xAFC9F4", Offset = "0xAFC9F4", VA = "0xAFC9F4")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndTopLimit(Transform firstTransform, float maxY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xAFCA8C", Offset = "0xAFCA8C", VA = "0xAFCA8C")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndTopLimit(float yPos, float maxY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xAFCB0C", Offset = "0xAFCB0C", VA = "0xAFCB0C")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndBottomLimit(float topObjectY, float lowerObjectY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xAFCB8C", Offset = "0xAFCB8C", VA = "0xAFCB8C")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMinXLeft(float minX, float objectPosX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xAFCC0C", Offset = "0xAFCC0C", VA = "0xAFCC0C")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxXRight(Transform firstTransform, float maxX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xAFCCA4", Offset = "0xAFCCA4", VA = "0xAFCCA4")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxXRight(float xPos, float maxX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xAFCD24", Offset = "0xAFCD24", VA = "0xAFCD24")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxZForward(float zPos, float maxZ, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xAFCDA4", Offset = "0xAFCDA4", VA = "0xAFCDA4")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMinZBack(float zPos, float minZ, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xAFCE24", Offset = "0xAFCE24", VA = "0xAFCE24")]
	public static float[] getOrderedMinMaxPosValues(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xAFCF78", Offset = "0xAFCF78", VA = "0xAFCF78")]
	public static bool checkIfPositionWithinAreaXYZ(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xAFD21C", Offset = "0xAFD21C", VA = "0xAFD21C")]
	public static bool checkIfObjectIntersectsWithArea(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float additionalX, float additionalY, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xAFD3EC", Offset = "0xAFD3EC", VA = "0xAFD3EC")]
	public static bool checkIfBetweenValues(float value, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xAFD404", Offset = "0xAFD404", VA = "0xAFD404")]
	public static bool checkIfObjectWhollyWithinArea(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float additionalX, float additionalY, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xAFD650", Offset = "0xAFD650", VA = "0xAFD650")]
	public static bool checkIfObjectWhollyWithinAreaXZOnly(Vector3 position, float minX, float maxX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xAFD854", Offset = "0xAFD854", VA = "0xAFD854")]
	public static bool checkIfObjectWithinMinXMaxXMinZ(Vector3 position, float minX, float maxX, float minZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xAFD9E8", Offset = "0xAFD9E8", VA = "0xAFD9E8")]
	public static bool checkIfObjectWithinMinXMinZMaxZ(Vector3 position, float minX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xAFDB7C", Offset = "0xAFDB7C", VA = "0xAFDB7C")]
	public static bool checkIfObjectWithinMinXMaxXMaxZ(Vector3 position, float minX, float maxX, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xAFDD10", Offset = "0xAFDD10", VA = "0xAFDD10")]
	public static bool checkIfObjectWithinMinZMaxZMaxX(Vector3 position, float maxX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xAFDEA4", Offset = "0xAFDEA4", VA = "0xAFDEA4")]
	public static List<outOfPositionDirection> getOutOfAreaDirections(Transform transform, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xAFE0EC", Offset = "0xAFE0EC", VA = "0xAFE0EC")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, GameObject objectToCheck, float[] gameAreaBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xAFE298", Offset = "0xAFE298", VA = "0xAFE298")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, float[] rendererBounds, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float divider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xAFE310", Offset = "0xAFE310", VA = "0xAFE310")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, float[] rendererBounds, float[] gameAreaBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xAFE3B4", Offset = "0xAFE3B4", VA = "0xAFE3B4")]
	public static Vector3 getCorrectedObjectPosition(Vector3 potentialNewPosition, GameObject objectToCheck, float[] gameAreaBounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xAFE8B0", Offset = "0xAFE8B0", VA = "0xAFE8B0")]
	public static Vector3 getCorrectedObjectPosition(Vector3 potentialNewPosition, float[] rendererBounds, float[] gameAreaBounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xAFDF54", Offset = "0xAFDF54", VA = "0xAFDF54")]
	public static List<outOfPositionDirection> getOutOfAreaDirections(float objectPosX, float objectPosY, float objectPosZ, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xAFE6F4", Offset = "0xAFE6F4", VA = "0xAFE6F4")]
	public static List<outOfPositionDirection> getOutOfAreaDirectionsWithObjectSizeCorrection(float objectPosX, float objectPosY, float objectPosZ, float objectSizeX, float objectSizeY, float objectSizeZ, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xAFEB44", Offset = "0xAFEB44", VA = "0xAFEB44")]
	public static bool checkIfOutOfPositionDirectionPresent(List<outOfPositionDirection> outOfPositionDirections, outOfPositionDirection directionToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xAFEC7C", Offset = "0xAFEC7C", VA = "0xAFEC7C")]
	public static float getMinXOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xAFECD8", Offset = "0xAFECD8", VA = "0xAFECD8")]
	public static float getMinXOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xAFEDB8", Offset = "0xAFEDB8", VA = "0xAFEDB8")]
	public static float getMaxXOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xAFEE14", Offset = "0xAFEE14", VA = "0xAFEE14")]
	public static float getMaxXOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xAFEEF4", Offset = "0xAFEEF4", VA = "0xAFEEF4")]
	public static float getMinZOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xAFEF50", Offset = "0xAFEF50", VA = "0xAFEF50")]
	public static float getMinZOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xAFF030", Offset = "0xAFF030", VA = "0xAFF030")]
	public static float getMaxZOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xAFF08C", Offset = "0xAFF08C", VA = "0xAFF08C")]
	public static float getMaxZOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xAFF16C", Offset = "0xAFF16C", VA = "0xAFF16C")]
	private static HitDirection returnDirection(GameObject collidingObject, GameObject objectHit)
	{
		return default(HitDirection);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xAFF4F8", Offset = "0xAFF4F8", VA = "0xAFF4F8")]
	private static void rotateTransform(Transform transformToRotate, float xRotation, float yRotation, float zRotation)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xAFF57C", Offset = "0xAFF57C", VA = "0xAFF57C")]
	private static void rotateParticleSystem(ParticleSystem particleSystemToRotate, float xRotation, float yRotation, float zRotation)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xAFF664", Offset = "0xAFF664", VA = "0xAFF664")]
	public static void rotateAwayFrom(Transform transformToRotate, Transform toRotateAwayFrom)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xAFF6C4", Offset = "0xAFF6C4", VA = "0xAFF6C4")]
	public static void moveObjectAwayFrom(GameObject gameObjectToMove, GameObject gameObjectToMoveAwayFrom, float moveAmount)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xAFF9F0", Offset = "0xAFF9F0", VA = "0xAFF9F0")]
	public static bool isWithinGameLimits(float transformValue, float additionalMovementAmount, float lowerGameMovementLimit, float higherGameMovementLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xAFFA0C", Offset = "0xAFFA0C", VA = "0xAFFA0C")]
	public static float getDistanceToCloserLimit(float transformValue, float lowerGameMovementLimit, float higherGameMovementLimit)
	{
		return default(float);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xAFFA20", Offset = "0xAFFA20", VA = "0xAFFA20")]
	public static List<GameObject> getObjectsWithinZValues(List<GameObject> gameObjects, float minZValue, float maxZValue)
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xAFFC40", Offset = "0xAFFC40", VA = "0xAFFC40")]
	public static bool checkIfAreasIntersectXY(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xAFFC80", Offset = "0xAFFC80", VA = "0xAFFC80")]
	public static bool checkIf_X_Intersect(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xAFFD40", Offset = "0xAFFD40", VA = "0xAFFD40")]
	public static bool checkIf_Y_Intersect(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xAFFE00", Offset = "0xAFFE00", VA = "0xAFFE00")]
	public static bool isValueBetweenValues(float value, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xAFFE30", Offset = "0xAFFE30", VA = "0xAFFE30")]
	public static bool checkIfAreaWholleyWithinOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xAFFE94", Offset = "0xAFFE94", VA = "0xAFFE94")]
	public static bool checkIfOneAreaWholleyCoveresOtherArea_X_With_Y_Intersection(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xAFFF28", Offset = "0xAFFF28", VA = "0xAFFF28")]
	public static bool checkIfOneAreaWholleyCoveresOtherArea_Y_With_X_Intersection(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xAFFEE4", Offset = "0xAFFEE4", VA = "0xAFFEE4")]
	public static bool checkIfAreaWholleyWithin_X_OfOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xAFFF78", Offset = "0xAFFF78", VA = "0xAFFF78")]
	public static bool checkIfAreaWholleyWithin_Y_OfOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xAFFFBC", Offset = "0xAFFFBC", VA = "0xAFFFBC")]
	public static void getReducedAreaToRemoveIntersectionWithOtherArea(Area3D first, Area3D second)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xB0005C", Offset = "0xB0005C", VA = "0xB0005C")]
	public ObjectPositionAnalyzer()
	{
	}
}
[Token(Token = "0x200023F")]
public class ObjectRotationController : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5968FC", Offset = "0x5968FC")]
	private sealed class <performZClockwiseRotation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectRotationController <>4__this;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float endAngle;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startRotation>5__2;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endRotation>5__3;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__4;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x8F6870", Offset = "0x8F6870", VA = "0x8F6870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x8F68B8", Offset = "0x8F68B8", VA = "0x8F68B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x8F66DC", Offset = "0x8F66DC", VA = "0x8F66DC")]
		[DebuggerHidden]
		public <performZClockwiseRotation>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x8F6708", Offset = "0x8F6708", VA = "0x8F6708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x8F670C", Offset = "0x8F670C", VA = "0x8F670C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x8F6878", Offset = "0x8F6878", VA = "0x8F6878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToRotate;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xB00064", Offset = "0xB00064", VA = "0xB00064")]
	public void performZRotation()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xB000D8", Offset = "0xB000D8", VA = "0xB000D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1864", Offset = "0x5A1864")]
	private IEnumerator performZClockwiseRotation(float duration, float endAngle)
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xB00164", Offset = "0xB00164", VA = "0xB00164")]
	public ObjectRotationController()
	{
	}
}
[Token(Token = "0x2000241")]
public class PositionInFrontOfObjectController : MonoBehaviour
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform objectToPosition;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject containerObject;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xAE8FCC", Offset = "0xAE8FCC", VA = "0xAE8FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xAE9054", Offset = "0xAE9054", VA = "0xAE9054")]
	public void disableSelf()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xAE9094", Offset = "0xAE9094", VA = "0xAE9094")]
	public PositionInFrontOfObjectController()
	{
	}
}
[Token(Token = "0x2000242")]
public interface ObjectInfoInterface
{
	[Token(Token = "0x6000E94")]
	string getObjectType();

	[Token(Token = "0x6000E95")]
	float getObjectScale();

	[Token(Token = "0x6000E96")]
	float[] getRendererBounds();
}
[Token(Token = "0x2000243")]
public static class CalculateBoundariesFromPositionsService
{
	[Token(Token = "0x4000CB3")]
	private const int BOUNDARY_POSITION_MIN_SIZE = 4;

	[Token(Token = "0x4000CB4")]
	private const int BOUNDARY_POSITION_MEDIUM_SIZE = 32;

	[Token(Token = "0x4000CB5")]
	private const int BOUNDARY_POSITION_LARGE_SIZE = 100;

	[Token(Token = "0x4000CB6")]
	private const int CLOSEST_POINTS_AMOUNT_MIN = 3;

	[Token(Token = "0x4000CB7")]
	private const int CLOSEST_POINTS_AMOUNT_STANDARD = 10;

	[Token(Token = "0x4000CB8")]
	private const int CLOSEST_POINTS_AMOUNT_LARGE = 25;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xFCECC4", Offset = "0xFCECC4", VA = "0xFCECC4")]
	public static float[] getBoundariesCalculatedFromPositions(List<Vector3> boundaryPositions, float playerY)
	{
		return null;
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xFCF138", Offset = "0xFCF138", VA = "0xFCF138")]
	private static List<Vector3> getReducedBoundaryPositions(List<Vector3> boundaryPositions)
	{
		return null;
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xFCF068", Offset = "0xFCF068", VA = "0xFCF068")]
	private static float getMinXWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xFCF09C", Offset = "0xFCF09C", VA = "0xFCF09C")]
	private static float getMaxXWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xFCF0D0", Offset = "0xFCF0D0", VA = "0xFCF0D0")]
	private static float getMinZWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xFCF104", Offset = "0xFCF104", VA = "0xFCF104")]
	private static float getMaxZWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xFCF574", Offset = "0xFCF574", VA = "0xFCF574")]
	private static float getAverageXOfClosesPoints(List<Vector3> closestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xFCF6A4", Offset = "0xFCF6A4", VA = "0xFCF6A4")]
	private static float getAverageZOfClosesPoints(List<Vector3> closestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xFCF254", Offset = "0xFCF254", VA = "0xFCF254")]
	private static List<Vector3> getClosestPointsToPosition(Vector3 anchorPoint, List<Vector3> positions, int amountOfPoints)
	{
		return null;
	}
}
[Token(Token = "0x2000244")]
public class PlayAreaBoundariesContainer
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool boundariesCalculated;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] boundaries;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xAE19CC", Offset = "0xAE19CC", VA = "0xAE19CC")]
	public static bool isBoundariesCalculated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xAE2924", Offset = "0xAE2924", VA = "0xAE2924")]
	public static void setBoundariesCalculated(bool input)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xAE2994", Offset = "0xAE2994", VA = "0xAE2994")]
	public static void setBoundaries(float[] calculatedBoundaries)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xAE1A38", Offset = "0xAE1A38", VA = "0xAE1A38")]
	public static float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xAE2A00", Offset = "0xAE2A00", VA = "0xAE2A00")]
	public static void updateYBoundaries(float minY, float maxY)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xAE2AE8", Offset = "0xAE2AE8", VA = "0xAE2AE8")]
	public PlayAreaBoundariesContainer()
	{
	}
}
[Token(Token = "0x2000245")]
public static class PlayAreaCouldNotBeReadService
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float[] PLAY_AREA_CANNOT_BE_READ_VALUE;

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xAE2B74", Offset = "0xAE2B74", VA = "0xAE2B74")]
	public static bool isPlayAreaCannotBeRead(float[] input)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000246")]
public class PlayAreaService : MonoBehaviour
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] playAreaBoundaries;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xAE2CF0", Offset = "0xAE2CF0", VA = "0xAE2CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xAE2DE0", Offset = "0xAE2DE0", VA = "0xAE2DE0", Slot = "4")]
	public virtual Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xAE2DF0", Offset = "0xAE2DF0", VA = "0xAE2DF0", Slot = "5")]
	public virtual Vector3[] getCornersOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xAE2E60", Offset = "0xAE2E60", VA = "0xAE2E60", Slot = "6")]
	public virtual float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xAE2EA8", Offset = "0xAE2EA8", VA = "0xAE2EA8", Slot = "7")]
	public virtual Vector3[] getBoundariesOfPlayAreaAsVectors()
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xAE2EF0", Offset = "0xAE2EF0", VA = "0xAE2EF0")]
	public float[] getBoundariesCorrectedForObjectRendererBounds(float[] boundaries, GameObject objectForBoundariesCorrection, float correctionMultiplier)
	{
		return null;
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xAE30FC", Offset = "0xAE30FC", VA = "0xAE30FC", Slot = "8")]
	public virtual Vector3[] getAllBoundaryPoints()
	{
		return null;
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xAE3144", Offset = "0xAE3144", VA = "0xAE3144")]
	public float getZValueOrMaxZ(float zPos, float playerPosZ)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xAE20FC", Offset = "0xAE20FC", VA = "0xAE20FC")]
	public PlayAreaService()
	{
	}
}
[Token(Token = "0x2000247")]
public class StartBoundariesCalculationService : MonoBehaviour
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool runningInEditor;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool test;

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xB92BF4", Offset = "0xB92BF4", VA = "0xB92BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xB92BF8", Offset = "0xB92BF8", VA = "0xB92BF8")]
	private void calculateBoundaries()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xB92D98", Offset = "0xB92D98", VA = "0xB92D98")]
	public void recalculateBoundaries()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xB92F04", Offset = "0xB92F04", VA = "0xB92F04")]
	public StartBoundariesCalculationService()
	{
	}
}
[Token(Token = "0x2000248")]
public class MockPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minX;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxX;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minY;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxY;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minZ;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxZ;

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xC60404", Offset = "0xC60404", VA = "0xC60404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xC604D4", Offset = "0xC604D4", VA = "0xC604D4", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xC60598", Offset = "0xC60598", VA = "0xC60598")]
	public MockPlayAreaService()
	{
	}
}
[Token(Token = "0x2000249")]
public class OculusPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xB04318", Offset = "0xB04318", VA = "0xB04318", Slot = "4")]
	public override Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xB04388", Offset = "0xB04388", VA = "0xB04388", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xB0447C", Offset = "0xB0447C", VA = "0xB0447C")]
	private float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xB04730", Offset = "0xB04730", VA = "0xB04730")]
	public OculusPlayAreaService()
	{
	}
}
[Token(Token = "0x200024A")]
public class PicoPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xAE1524", Offset = "0xAE1524", VA = "0xAE1524", Slot = "4")]
	public override Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xAE1594", Offset = "0xAE1594", VA = "0xAE1594", Slot = "5")]
	public override Vector3[] getCornersOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xAE1798", Offset = "0xAE1798", VA = "0xAE1798", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xAE1AE4", Offset = "0xAE1AE4", VA = "0xAE1AE4")]
	private float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xAE1DB8", Offset = "0xAE1DB8", VA = "0xAE1DB8")]
	private float[] calculateBoundariesFromCircularPlayArea(Vector3[] picoOuterBoundaries)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xAE1F30", Offset = "0xAE1F30", VA = "0xAE1F30", Slot = "8")]
	public override Vector3[] getAllBoundaryPoints()
	{
		return null;
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xAE20F4", Offset = "0xAE20F4", VA = "0xAE20F4")]
	public PicoPlayAreaService()
	{
	}
}
[Token(Token = "0x200024B")]
public static class PlayerPreferencesConstants
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DIFFICULTY;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string CREATE_HAND_SPECIFIC;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string INFINITE_HAND_ENERGY;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string INFINITE_HEALTH;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string DURATION;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string ENVIRONMENT;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string INFO_SEPARATION_CHARACTER;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string SKIP_TUTORIAL;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string TRUE;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly string FALSE;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly string LAST_SUB_GAME_USED;
}
[Token(Token = "0x200024C")]
public static class PlayerPreferencesService
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder stringBuilder;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xAE6974", Offset = "0xAE6974", VA = "0xAE6974")]
	public static void saveDifficultyPreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xAE6BA0", Offset = "0xAE6BA0", VA = "0xAE6BA0")]
	public static void saveDurationPreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xAE6DCC", Offset = "0xAE6DCC", VA = "0xAE6DCC")]
	public static void saveEnvironmentPreference(EnvironmentAndSkyboxChanger.EnvironmentType environmentType)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xAE6F2C", Offset = "0xAE6F2C", VA = "0xAE6F2C")]
	public static void saveCreateHandSpecificObjectPreferences(bool input)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xAE7118", Offset = "0xAE7118", VA = "0xAE7118")]
	public static void savePlayerHandInfiniteForceFieldPreferences(bool input)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xAE7304", Offset = "0xAE7304", VA = "0xAE7304")]
	public static void saveSkipTutorial(bool input)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xAE74F0", Offset = "0xAE74F0", VA = "0xAE74F0")]
	public static void savePlayerInfiniteHealth(bool input)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xAE76DC", Offset = "0xAE76DC", VA = "0xAE76DC")]
	public static string getLastUsedSubGameModeKey()
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xAE7888", Offset = "0xAE7888", VA = "0xAE7888")]
	public static GameModeValues.GameDuration getSavedDurationOfCurrentGameMode()
	{
		return default(GameModeValues.GameDuration);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xAE7BCC", Offset = "0xAE7BCC", VA = "0xAE7BCC")]
	public static GameModeValues.GameAndSubModeDifficulty getSavedGameModeDifficulty()
	{
		return default(GameModeValues.GameAndSubModeDifficulty);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xAE7F3C", Offset = "0xAE7F3C", VA = "0xAE7F3C")]
	public static bool getHandSpecificObjectsValue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xAE8160", Offset = "0xAE8160", VA = "0xAE8160")]
	public static bool getInfiniteHandEnergyValue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xAE8390", Offset = "0xAE8390", VA = "0xAE8390")]
	public static bool getInfiniteHealthValue()
	{
		return default(bool);
	}
}
[Token(Token = "0x200024D")]
public class PlayerPreferencesTranslationService : MonoBehaviour
{
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xAE7D84", Offset = "0xAE7D84", VA = "0xAE7D84")]
	public static GameModeValues.GameAndSubModeDifficulty translateGameDifficultyFromStringToEnum(string input)
	{
		return default(GameModeValues.GameAndSubModeDifficulty);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xAE7A40", Offset = "0xAE7A40", VA = "0xAE7A40")]
	public static GameModeValues.GameDuration translateGameDuration(string input)
	{
		return default(GameModeValues.GameDuration);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xAE863C", Offset = "0xAE863C", VA = "0xAE863C")]
	public static EnvironmentAndSkyboxChanger.EnvironmentType translateEnvironment(string input)
	{
		return default(EnvironmentAndSkyboxChanger.EnvironmentType);
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xAE8750", Offset = "0xAE8750", VA = "0xAE8750")]
	public PlayerPreferencesTranslationService()
	{
	}
}
[Token(Token = "0x200024E")]
public class PlayerEnergyController : MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthPlayerHUDElementController healthPlayerHUDElementController;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int playerEnergy;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool playerEnergyZeroTriggered;

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xAE3524", Offset = "0xAE3524", VA = "0xAE3524")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xAE3560", Offset = "0xAE3560", VA = "0xAE3560")]
	public void reducePlayerEnergy(int amountToReduceBy)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xAE3544", Offset = "0xAE3544", VA = "0xAE3544")]
	private void setPlayerEnergyStartValue(int energy)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xAE35D4", Offset = "0xAE35D4", VA = "0xAE35D4")]
	private void setPlayerEnergyVisibleValue(int energy)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xAE35F0", Offset = "0xAE35F0", VA = "0xAE35F0")]
	public void resetPlayerEnergy()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xAE3620", Offset = "0xAE3620", VA = "0xAE3620")]
	public PlayerEnergyController()
	{
	}
}
[Token(Token = "0x200024F")]
public class PlayerEnteredMiddleOfPlayAreaController : MonoBehaviour
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool playerInMiddleOfPlayArea;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x17000152")]
	public StartTutorialAndOrGameAfterPlayerEnteredMiddleController StartTutorialAndOrGameAfterPlayerEnteredMiddleController
	{
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xAE3638", Offset = "0xAE3638", VA = "0xAE3638")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xAE3640", Offset = "0xAE3640", VA = "0xAE3640")]
		set
		{
		}
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xAE3630", Offset = "0xAE3630", VA = "0xAE3630")]
	public bool isPlayerInMiddleOfPlayArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xAE3648", Offset = "0xAE3648", VA = "0xAE3648")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xAE3700", Offset = "0xAE3700", VA = "0xAE3700")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xAE378C", Offset = "0xAE378C", VA = "0xAE378C")]
	public PlayerEnteredMiddleOfPlayAreaController()
	{
	}
}
[Token(Token = "0x2000250")]
public class PlayerHUDPositionController : MonoBehaviour
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_UIElement;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothTime;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 velocity;

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xAE4CB8", Offset = "0xAE4CB8", VA = "0xAE4CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xAE4DCC", Offset = "0xAE4DCC", VA = "0xAE4DCC")]
	public PlayerHUDPositionController()
	{
	}
}
[Token(Token = "0x2000251")]
public class ScreenFadeService : MonoBehaviour
{
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xAF420C", Offset = "0xAF420C", VA = "0xAF420C", Slot = "4")]
	public virtual void fadeInImmediately()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xAF4210", Offset = "0xAF4210", VA = "0xAF4210", Slot = "5")]
	public virtual void fadeInOnStart()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xAF4214", Offset = "0xAF4214", VA = "0xAF4214", Slot = "6")]
	public virtual void fadeIn()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xAF4218", Offset = "0xAF4218", VA = "0xAF4218", Slot = "7")]
	public virtual void fadeOut()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xAF421C", Offset = "0xAF421C", VA = "0xAF421C")]
	public ScreenFadeService()
	{
	}
}
[Token(Token = "0x2000252")]
public class OVRScreenFadeService : ScreenFadeService
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade OVRScreenFade;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xC6D730", Offset = "0xC6D730", VA = "0xC6D730", Slot = "6")]
	public override void fadeIn()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xC6D74C", Offset = "0xC6D74C", VA = "0xC6D74C", Slot = "7")]
	public override void fadeOut()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xC6D768", Offset = "0xC6D768", VA = "0xC6D768")]
	public OVRScreenFadeService()
	{
	}
}
[Token(Token = "0x2000253")]
public class KoordCoach_PXR_Screen_Fade : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59690C", Offset = "0x59690C")]
	private sealed class <ScreenFade>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KoordCoach_PXR_Screen_Fade <>4__this;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nowTime>5__2;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x8F3DC0", Offset = "0x8F3DC0", VA = "0x8F3DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x8F3E08", Offset = "0x8F3E08", VA = "0x8F3E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x8F3C80", Offset = "0x8F3C80", VA = "0x8F3C80")]
		[DebuggerHidden]
		public <ScreenFade>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x8F3CAC", Offset = "0x8F3CAC", VA = "0x8F3CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x8F3CB0", Offset = "0x8F3CB0", VA = "0x8F3CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x8F3DC8", Offset = "0x8F3DC8", VA = "0x8F3DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59691C", Offset = "0x59691C")]
	private sealed class <ScreenFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KoordCoach_PXR_Screen_Fade <>4__this;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <nowTime>5__2;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x8F3F54", Offset = "0x8F3F54", VA = "0x8F3F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x8F3F9C", Offset = "0x8F3F9C", VA = "0x8F3F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x8F3E10", Offset = "0x8F3E10", VA = "0x8F3E10")]
		[DebuggerHidden]
		public <ScreenFade>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x8F3E3C", Offset = "0x8F3E3C", VA = "0x8F3E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x8F3E40", Offset = "0x8F3E40", VA = "0x8F3E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x8F3F5C", Offset = "0x8F3F5C", VA = "0x8F3F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59B30C", Offset = "0x59B30C")]
	public float gradientTime;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59B344", Offset = "0x59B344")]
	public Color fadeColor;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59B37C", Offset = "0x59B37C")]
	private int renderQueue;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer gradientMeshRenderer;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter gradientMeshFilter;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material gradientMaterial;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isGradient;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentAlpha;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float nowFadeAlpha;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> verts;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> indices;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int N;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1579CDC", Offset = "0x1579CDC", VA = "0x1579CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1579EC0", Offset = "0x1579EC0", VA = "0x1579EC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1579F64", Offset = "0x1579F64", VA = "0x1579F64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1579D04", Offset = "0x1579D04", VA = "0x1579D04")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1579EB8", Offset = "0x1579EB8", VA = "0x1579EB8")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1579EEC", Offset = "0x1579EEC", VA = "0x1579EEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1914", Offset = "0x5A1914")]
	private IEnumerator ScreenFade()
	{
		return null;
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x157A7E0", Offset = "0x157A7E0", VA = "0x157A7E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1974", Offset = "0x5A1974")]
	public IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x157A6C8", Offset = "0x157A6C8", VA = "0x157A6C8")]
	private void SetAlpha()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x157A0C8", Offset = "0x157A0C8", VA = "0x157A0C8")]
	private void CreateModel()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x157A86C", Offset = "0x157A86C", VA = "0x157A86C")]
	public void CreateMakePos(int num)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x157A9E4", Offset = "0x157A9E4", VA = "0x157A9E4")]
	public void OtherMakePos(int num)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x1579F68", Offset = "0x1579F68", VA = "0x1579F68")]
	private void DestoryGradientMesh()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x157AB80", Offset = "0x157AB80", VA = "0x157AB80")]
	public KoordCoach_PXR_Screen_Fade()
	{
	}
}
[Token(Token = "0x2000256")]
public class PicoScreenFadeService : ScreenFadeService
{
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KoordCoach_PXR_Screen_Fade pXR_ScreenFade;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xAE2508", Offset = "0xAE2508", VA = "0xAE2508", Slot = "5")]
	public override void fadeInOnStart()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xAE2514", Offset = "0xAE2514", VA = "0xAE2514", Slot = "4")]
	public override void fadeInImmediately()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xAE2534", Offset = "0xAE2534", VA = "0xAE2534", Slot = "6")]
	public override void fadeIn()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xAE2578", Offset = "0xAE2578", VA = "0xAE2578", Slot = "7")]
	public override void fadeOut()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xAE25BC", Offset = "0xAE25BC", VA = "0xAE25BC")]
	public PicoScreenFadeService()
	{
	}
}
[Token(Token = "0x2000257")]
public class GlobalTutorialController : TutorialController
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59692C", Offset = "0x59692C")]
	private sealed class <performGameModeSpecificTutorialSteps>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalTutorialController <>4__this;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TargetObject <targetObjectFrontOfPlayer>5__2;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x9F8D48", Offset = "0x9F8D48", VA = "0x9F8D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x9F8D90", Offset = "0x9F8D90", VA = "0x9F8D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x9F7830", Offset = "0x9F7830", VA = "0x9F7830")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x9F785C", Offset = "0x9F785C", VA = "0x9F785C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x9F7860", Offset = "0x9F7860", VA = "0x9F7860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x9F8D50", Offset = "0x9F8D50", VA = "0x9F8D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialHelper;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController fracturedPrefabPoolController;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject tutorialNormalBlockIncoming;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject tutorialDodgeOnlyObject;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject tutorialBonusObject;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject tutorialTargetTouchObject;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private TargetTouchTutorialObjectCoordinationCoachPoolController targetTouchPoolController;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xAC40D8", Offset = "0xAC40D8", VA = "0xAC40D8", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1A74", Offset = "0x5A1A74")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xAC4150", Offset = "0xAC4150", VA = "0xAC4150", Slot = "9")]
	public override void startTutorialStep()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xAC4438", Offset = "0xAC4438", VA = "0xAC4438", Slot = "17")]
	protected override void disappearObject(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xAC471C", Offset = "0xAC471C", VA = "0xAC471C", Slot = "22")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xAC47E8", Offset = "0xAC47E8", VA = "0xAC47E8")]
	public BlockIncomingObjectsFracturedPrefabPoolController getFracturedPrefabPoolController()
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xAC47F0", Offset = "0xAC47F0", VA = "0xAC47F0", Slot = "16")]
	protected override void prepareTutorialObjectForDisappearance(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xAC48CC", Offset = "0xAC48CC", VA = "0xAC48CC")]
	public GlobalTutorialController()
	{
	}
}
[Token(Token = "0x2000259")]
public class GlobalTutorialGamePausedController : GamePausedController
{
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xAC48D4", Offset = "0xAC48D4", VA = "0xAC48D4", Slot = "4")]
	protected override void onPaused(bool force)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xAC4A00", Offset = "0xAC4A00", VA = "0xAC4A00", Slot = "5")]
	protected override void onUnPaused()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xAC4ACC", Offset = "0xAC4ACC", VA = "0xAC4ACC", Slot = "6")]
	protected override void updateButtons()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xAC4AD0", Offset = "0xAC4AD0", VA = "0xAC4AD0")]
	public GlobalTutorialGamePausedController()
	{
	}
}
[Token(Token = "0x200025A")]
public class GlobalTutorialStarter : MonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xAC4B34", Offset = "0xAC4B34", VA = "0xAC4B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xAC4B50", Offset = "0xAC4B50", VA = "0xAC4B50")]
	public GlobalTutorialStarter()
	{
	}
}
[Token(Token = "0x200025B")]
public class StartGlobalTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xB92F14", Offset = "0xB92F14", VA = "0xB92F14", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xB92F58", Offset = "0xB92F58", VA = "0xB92F58")]
	public StartGlobalTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200025C")]
public static class GeneralTutorialTextContainer
{
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] generalTutorialTexts;
}
[Token(Token = "0x200025D")]
public static class GlobalTutorialTextContainer
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] globalTutorialTexts;
}
[Token(Token = "0x200025E")]
public class MockTutorialController : TutorialController
{
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xC605B8", Offset = "0xC605B8", VA = "0xC605B8", Slot = "4")]
	protected override void performSetupOnAwake()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xC605BC", Offset = "0xC605BC", VA = "0xC605BC")]
	public MockTutorialController()
	{
	}
}
[Token(Token = "0x200025F")]
public class AdvancedUIFader : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59693C", Offset = "0x59693C")]
	private sealed class <WaitForFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x9EC8CC", Offset = "0x9EC8CC", VA = "0x9EC8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x9EC914", Offset = "0x9EC914", VA = "0x9EC914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x9EC7F4", Offset = "0x9EC7F4", VA = "0x9EC7F4")]
		[DebuggerHidden]
		public <WaitForFadeIn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x9EC820", Offset = "0x9EC820", VA = "0x9EC820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x9EC824", Offset = "0x9EC824", VA = "0x9EC824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x9EC8D4", Offset = "0x9EC8D4", VA = "0x9EC8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59694C", Offset = "0x59694C")]
	private sealed class <InteruptAndFadeIn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x9EC690", Offset = "0x9EC690", VA = "0x9EC690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x9EC6D8", Offset = "0x9EC6D8", VA = "0x9EC6D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x9EC5CC", Offset = "0x9EC5CC", VA = "0x9EC5CC")]
		[DebuggerHidden]
		public <InteruptAndFadeIn>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x9EC5F8", Offset = "0x9EC5F8", VA = "0x9EC5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x9EC5FC", Offset = "0x9EC5FC", VA = "0x9EC5FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x9EC698", Offset = "0x9EC698", VA = "0x9EC698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59695C", Offset = "0x59695C")]
	private sealed class <CheckAndFadeIn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x9EA380", Offset = "0x9EA380", VA = "0x9EA380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x9EA3C8", Offset = "0x9EA3C8", VA = "0x9EA3C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x9EA2B8", Offset = "0x9EA2B8", VA = "0x9EA2B8")]
		[DebuggerHidden]
		public <CheckAndFadeIn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x9EA2E4", Offset = "0x9EA2E4", VA = "0x9EA2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x9EA2E8", Offset = "0x9EA2E8", VA = "0x9EA2E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x9EA388", Offset = "0x9EA388", VA = "0x9EA388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59696C", Offset = "0x59696C")]
	private sealed class <waitUntilFadeOutAndDeactivateObjectAndAllChildren>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sourceGameObject;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x9ECBF0", Offset = "0x9ECBF0", VA = "0x9ECBF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x9ECC38", Offset = "0x9ECC38", VA = "0x9ECC38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x9ECB28", Offset = "0x9ECB28", VA = "0x9ECB28")]
		[DebuggerHidden]
		public <waitUntilFadeOutAndDeactivateObjectAndAllChildren>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x9ECB54", Offset = "0x9ECB54", VA = "0x9ECB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x9ECB58", Offset = "0x9ECB58", VA = "0x9ECB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9ECBF8", Offset = "0x9ECBF8", VA = "0x9ECBF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59697C", Offset = "0x59697C")]
	private sealed class <FadeInSpecificObjects>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> objectsToFadeIn;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <targetAlpha>5__2;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x9EB4F8", Offset = "0x9EB4F8", VA = "0x9EB4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x9EB540", Offset = "0x9EB540", VA = "0x9EB540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x9EACEC", Offset = "0x9EACEC", VA = "0x9EACEC")]
		[DebuggerHidden]
		public <FadeInSpecificObjects>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x9EAD18", Offset = "0x9EAD18", VA = "0x9EAD18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x9EAD1C", Offset = "0x9EAD1C", VA = "0x9EAD1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x9EB500", Offset = "0x9EB500", VA = "0x9EB500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59698C", Offset = "0x59698C")]
	private sealed class <FadeIn>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lowestAlpha>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x9EAC9C", Offset = "0x9EAC9C", VA = "0x9EAC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x9EACE4", Offset = "0x9EACE4", VA = "0x9EACE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x9EA4E8", Offset = "0x9EA4E8", VA = "0x9EA4E8")]
		[DebuggerHidden]
		public <FadeIn>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x9EA514", Offset = "0x9EA514", VA = "0x9EA514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x9EA518", Offset = "0x9EA518", VA = "0x9EA518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x9EACA4", Offset = "0x9EACA4", VA = "0x9EACA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59699C", Offset = "0x59699C")]
	private sealed class <WaitForFadeOut>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x9EC9F4", Offset = "0x9EC9F4", VA = "0x9EC9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x9ECA3C", Offset = "0x9ECA3C", VA = "0x9ECA3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x9EC91C", Offset = "0x9EC91C", VA = "0x9EC91C")]
		[DebuggerHidden]
		public <WaitForFadeOut>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x9EC948", Offset = "0x9EC948", VA = "0x9EC948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x9EC94C", Offset = "0x9EC94C", VA = "0x9EC94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x9EC9FC", Offset = "0x9EC9FC", VA = "0x9EC9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969AC", Offset = "0x5969AC")]
	private sealed class <WaitUntilFadingComplete>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x9ECAD8", Offset = "0x9ECAD8", VA = "0x9ECAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x9ECB20", Offset = "0x9ECB20", VA = "0x9ECB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x9ECA44", Offset = "0x9ECA44", VA = "0x9ECA44")]
		[DebuggerHidden]
		public <WaitUntilFadingComplete>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x9ECA70", Offset = "0x9ECA70", VA = "0x9ECA70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x9ECA74", Offset = "0x9ECA74", VA = "0x9ECA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x9ECAE0", Offset = "0x9ECAE0", VA = "0x9ECAE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969BC", Offset = "0x5969BC")]
	private sealed class <InteruptAndFadeOut>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x9EC7A4", Offset = "0x9EC7A4", VA = "0x9EC7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x9EC7EC", Offset = "0x9EC7EC", VA = "0x9EC7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x9EC6E0", Offset = "0x9EC6E0", VA = "0x9EC6E0")]
		[DebuggerHidden]
		public <InteruptAndFadeOut>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x9EC70C", Offset = "0x9EC70C", VA = "0x9EC70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x9EC710", Offset = "0x9EC710", VA = "0x9EC710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x9EC7AC", Offset = "0x9EC7AC", VA = "0x9EC7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969CC", Offset = "0x5969CC")]
	private sealed class <CheckAndFadeOut>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x9EA498", Offset = "0x9EA498", VA = "0x9EA498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x9EA4E0", Offset = "0x9EA4E0", VA = "0x9EA4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x9EA3D0", Offset = "0x9EA3D0", VA = "0x9EA3D0")]
		[DebuggerHidden]
		public <CheckAndFadeOut>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x9EA3FC", Offset = "0x9EA3FC", VA = "0x9EA3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x9EA400", Offset = "0x9EA400", VA = "0x9EA400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x9EA4A0", Offset = "0x9EA4A0", VA = "0x9EA4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969DC", Offset = "0x5969DC")]
	private sealed class <FadeOutSpecificObjects>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToFadeOut;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <highestAlpha>5__2;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x9EC57C", Offset = "0x9EC57C", VA = "0x9EC57C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x9EC5C4", Offset = "0x9EC5C4", VA = "0x9EC5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x9EBCA4", Offset = "0x9EBCA4", VA = "0x9EBCA4")]
		[DebuggerHidden]
		public <FadeOutSpecificObjects>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x9EBCD0", Offset = "0x9EBCD0", VA = "0x9EBCD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x9EBCD4", Offset = "0x9EBCD4", VA = "0x9EBCD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x9EC584", Offset = "0x9EC584", VA = "0x9EC584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969EC", Offset = "0x5969EC")]
	private sealed class <FadeOut>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <highestAlpha>5__2;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x9EBC54", Offset = "0x9EBC54", VA = "0x9EBC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x9EBC9C", Offset = "0x9EBC9C", VA = "0x9EBC9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x9EB548", Offset = "0x9EB548", VA = "0x9EB548")]
		[DebuggerHidden]
		public <FadeOut>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x9EB574", Offset = "0x9EB574", VA = "0x9EB574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x9EB578", Offset = "0x9EB578", VA = "0x9EB578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x9EBC5C", Offset = "0x9EBC5C", VA = "0x9EBC5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D06")]
	private const string SCRIPT_NAME = "AdvancedUIFader";

	[Token(Token = "0x4000D09")]
	private const float DEFAULT_SPEED = 15f;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeSpeed;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> m_GroupsToFade;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_Fading;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59B474", Offset = "0x59B474")]
	private bool <Visible>k__BackingField;

	[Token(Token = "0x17000159")]
	public bool Visible
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x9CFFB8", Offset = "0x9CFFB8", VA = "0x9CFFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B64", Offset = "0x5A1B64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x9CFFC0", Offset = "0x9CFFC0", VA = "0x9CFFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B74", Offset = "0x5A1B74")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnFadeInComplete
	{
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9CFD38", Offset = "0x9CFD38", VA = "0x9CFD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B24", Offset = "0x5A1B24")]
		add
		{
		}
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x9CFDD8", Offset = "0x9CFDD8", VA = "0x9CFDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B34", Offset = "0x5A1B34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnFadeOutComplete
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x9CFE78", Offset = "0x9CFE78", VA = "0x9CFE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B44", Offset = "0x5A1B44")]
		add
		{
		}
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x9CFF18", Offset = "0x9CFF18", VA = "0x9CFF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A1B54", Offset = "0x5A1B54")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x9CFFCC", Offset = "0x9CFFCC", VA = "0x9CFFCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1B84", Offset = "0x5A1B84")]
	public IEnumerator WaitForFadeIn(bool activateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x9D0058", Offset = "0x9D0058", VA = "0x9D0058")]
	public void setFadeSpeed(float speed)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x9D0060", Offset = "0x9D0060", VA = "0x9D0060")]
	public void resetFadeSpeed()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x9D006C", Offset = "0x9D006C", VA = "0x9D006C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1BE4", Offset = "0x5A1BE4")]
	public IEnumerator InteruptAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x9D00E4", Offset = "0x9D00E4", VA = "0x9D00E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1C44", Offset = "0x5A1C44")]
	public IEnumerator CheckAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x9D015C", Offset = "0x9D015C", VA = "0x9D015C")]
	public List<GameObject> createArrayListFromArrayOfObjects(GameObject[] objects)
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x9D01F8", Offset = "0x9D01F8", VA = "0x9D01F8")]
	public void activateAndFadeInObjectAndAllChildren(GameObject[] topLevelGameObjects, Action doLast)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x9D04D0", Offset = "0x9D04D0", VA = "0x9D04D0")]
	public void activateAndFadeInObjectAndAllChildren(GameObject sourceGameObject, Action doLast)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x9D063C", Offset = "0x9D063C", VA = "0x9D063C")]
	public void activateAndFadeInObjectAndAllChildren(List<GameObject> objectAndAllChildren, Action doLast)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x9D0798", Offset = "0x9D0798", VA = "0x9D0798")]
	public void fadeOutAndDeactivateObjectAndAllChildrenCoroutine(bool deactivateObjects, List<GameObject> objectAndAllChildren, Action doLast)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x9D0958", Offset = "0x9D0958", VA = "0x9D0958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1CA4", Offset = "0x5A1CA4")]
	public IEnumerator waitUntilFadeOutAndDeactivateObjectAndAllChildren(bool deactivateObjects, GameObject sourceGameObject, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x9D0A14", Offset = "0x9D0A14", VA = "0x9D0A14")]
	public void activateAndFadeInObjectsCoroutine(List<GameObject> objectsToFadeIn, Action doLast)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x9D0B70", Offset = "0x9D0B70", VA = "0x9D0B70")]
	public void setAlphaOnObjectsAndActivate(List<GameObject> objects, float alpha)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x9D0C9C", Offset = "0x9D0C9C", VA = "0x9D0C9C")]
	public void setAlphaOnObjectsAndSetActiveState(List<GameObject> objects, float alpha, bool activeState)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x9D0414", Offset = "0x9D0414", VA = "0x9D0414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1D04", Offset = "0x5A1D04")]
	public IEnumerator FadeInSpecificObjects(bool activateObjects, List<GameObject> objectsToFadeIn, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x9D0DD8", Offset = "0x9D0DD8", VA = "0x9D0DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1D64", Offset = "0x5A1D64")]
	public IEnumerator FadeIn(bool activateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x9D0E64", Offset = "0x9D0E64", VA = "0x9D0E64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1DC4", Offset = "0x5A1DC4")]
	public IEnumerator WaitForFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x9D0EDC", Offset = "0x9D0EDC", VA = "0x9D0EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1E24", Offset = "0x5A1E24")]
	public IEnumerator WaitUntilFadingComplete()
	{
		return null;
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x9D0F54", Offset = "0x9D0F54", VA = "0x9D0F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1E84", Offset = "0x5A1E84")]
	public IEnumerator InteruptAndFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x9D0FCC", Offset = "0x9D0FCC", VA = "0x9D0FCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1EE4", Offset = "0x5A1EE4")]
	public IEnumerator CheckAndFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x9CF838", Offset = "0x9CF838", VA = "0x9CF838")]
	public void setSpecificAlphaOnObjects(List<GameObject> objectsToSetAlpha, float alphaToSet)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x9D089C", Offset = "0x9D089C", VA = "0x9D089C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1F44", Offset = "0x5A1F44")]
	public IEnumerator FadeOutSpecificObjects(bool deactivateObjects, List<GameObject> objectsToFadeOut, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x9D1044", Offset = "0x9D1044", VA = "0x9D1044")]
	public void setObjectsActive(ArrayList objects, bool activeState)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x9D12B8", Offset = "0x9D12B8", VA = "0x9D12B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A1FA4", Offset = "0x5A1FA4")]
	public IEnumerator FadeOut(bool deactivateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x9D1344", Offset = "0x9D1344", VA = "0x9D1344")]
	public void setObjectsToFadeInOrOut(List<GameObject> groupsToFade)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x9D134C", Offset = "0x9D134C", VA = "0x9D134C")]
	public List<GameObject> getObjectsToFadeInOrOut()
	{
		return null;
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x9D1354", Offset = "0x9D1354", VA = "0x9D1354")]
	public bool areAllObjectsFadedIn(List<GameObject> objectsToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x9D1680", Offset = "0x9D1680", VA = "0x9D1680")]
	public AdvancedUIFader()
	{
	}
}
[Token(Token = "0x200026C")]
public class BackToMainMenuPeformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScreenFadeService screenFadeService;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x9D7D74", Offset = "0x9D7D74", VA = "0x9D7D74", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x9D7DF0", Offset = "0x9D7DF0", VA = "0x9D7DF0")]
	public BackToMainMenuPeformOnInteraction()
	{
	}
}
[Token(Token = "0x200026D")]
public class ClickToLoadAsync : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5969FC", Offset = "0x5969FC")]
	private sealed class <loadLevelWithBar>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClickToLoadAsync <>4__this;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int level;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x9F0EF8", Offset = "0x9F0EF8", VA = "0x9F0EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x9F0F40", Offset = "0x9F0F40", VA = "0x9F0F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x9F0DB0", Offset = "0x9F0DB0", VA = "0x9F0DB0")]
		[DebuggerHidden]
		public <loadLevelWithBar>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x9F0DDC", Offset = "0x9F0DDC", VA = "0x9F0DDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x9F0DE0", Offset = "0x9F0DE0", VA = "0x9F0DE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x9F0F00", Offset = "0x9F0F00", VA = "0x9F0F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider loadingBar;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadingImage;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperation asyncOperation;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xFD618C", Offset = "0xFD618C", VA = "0xFD618C")]
	public void clickAsync(int level)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xFD61DC", Offset = "0xFD61DC", VA = "0xFD61DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A23C4", Offset = "0x5A23C4")]
	private IEnumerator loadLevelWithBar(int level)
	{
		return null;
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xFD6264", Offset = "0xFD6264", VA = "0xFD6264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xFD6268", Offset = "0xFD6268", VA = "0xFD6268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xFD626C", Offset = "0xFD626C", VA = "0xFD626C")]
	public ClickToLoadAsync()
	{
	}
}
[Token(Token = "0x200026F")]
public class ColorChanger : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A0C", Offset = "0x596A0C")]
	private sealed class <blinkingColorChangeCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] images;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color originalColor;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color nextColor;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x9F1150", Offset = "0x9F1150", VA = "0x9F1150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x9F1198", Offset = "0x9F1198", VA = "0x9F1198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x9F1054", Offset = "0x9F1054", VA = "0x9F1054")]
		[DebuggerHidden]
		public <blinkingColorChangeCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x9F1080", Offset = "0x9F1080", VA = "0x9F1080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x9F1084", Offset = "0x9F1084", VA = "0x9F1084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x9F1158", Offset = "0x9F1158", VA = "0x9F1158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A1C", Offset = "0x596A1C")]
	private sealed class <fadeBetweenColorsLoopCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image[] images;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color originalColor;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color nextColor;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool <increase>5__2;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <lerpAmount>5__3;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x9F12EC", Offset = "0x9F12EC", VA = "0x9F12EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x9F1334", Offset = "0x9F1334", VA = "0x9F1334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x9F11A0", Offset = "0x9F11A0", VA = "0x9F11A0")]
		[DebuggerHidden]
		public <fadeBetweenColorsLoopCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x9F11CC", Offset = "0x9F11CC", VA = "0x9F11CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x9F11D0", Offset = "0x9F11D0", VA = "0x9F11D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x9F12F4", Offset = "0x9F12F4", VA = "0x9F12F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A2C", Offset = "0x596A2C")]
	private sealed class <fadeFromColorToColorCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeForFade;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image[] images;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color originalColor;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color nextColor;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <lerpAmount>5__2;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <iterationChange>5__3;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x9F1664", Offset = "0x9F1664", VA = "0x9F1664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x9F16AC", Offset = "0x9F16AC", VA = "0x9F16AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x9F1548", Offset = "0x9F1548", VA = "0x9F1548")]
		[DebuggerHidden]
		public <fadeFromColorToColorCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x9F1574", Offset = "0x9F1574", VA = "0x9F1574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x9F1578", Offset = "0x9F1578", VA = "0x9F1578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x9F166C", Offset = "0x9F166C", VA = "0x9F166C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A3C", Offset = "0x596A3C")]
	private sealed class <fadeFromColorToColorAndBackCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeForFade;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image[] images;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color originalColor;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color nextColor;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <lerpAmount>5__2;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <iterationChange>5__3;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x9F14F8", Offset = "0x9F14F8", VA = "0x9F14F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x9F1540", Offset = "0x9F1540", VA = "0x9F1540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x9F133C", Offset = "0x9F133C", VA = "0x9F133C")]
		[DebuggerHidden]
		public <fadeFromColorToColorAndBackCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x9F1368", Offset = "0x9F1368", VA = "0x9F1368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x9F136C", Offset = "0x9F136C", VA = "0x9F136C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x9F1500", Offset = "0x9F1500", VA = "0x9F1500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4A")]
	private const float COLOR_CHANGE_ITERATOR_AMOUNT = 0.02f;

	[Token(Token = "0x4000D4B")]
	private const float ITERATION_SLEEP_AMOUNT_SECONDS = 0.01f;

	[Token(Token = "0x4000D4C")]
	private const float ITERATION_SLEEP_AMOUNT_MILISECONDS = 10f;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForIterationAmount;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xFD67A8", Offset = "0xFD67A8", VA = "0xFD67A8")]
	public void gameEnded()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xFD67D8", Offset = "0xFD67D8", VA = "0xFD67D8")]
	public void startBlinkingColorChangeCoroutine(Image[] images, Color originalColor, Color newColor)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xFD69A0", Offset = "0xFD69A0", VA = "0xFD69A0")]
	public void startFadeBetweenColorsLoopCoroutine(Image[] images, Color originalColor, Color newColor, bool stopCoroutine)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xFD6B74", Offset = "0xFD6B74", VA = "0xFD6B74")]
	public void fadeFromColorToColor(Image[] images, Color originalColor, Color newColor, float time)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xFD6D20", Offset = "0xFD6D20", VA = "0xFD6D20")]
	public void fadeFromColorToColorAndBack(Image[] images, Color originalColor, Color newColor, float time)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xFD6884", Offset = "0xFD6884", VA = "0xFD6884")]
	public void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFD6F0C", Offset = "0xFD6F0C", VA = "0xFD6F0C")]
	public void setImageColors(Image[] images, Color newColor)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xFD68BC", Offset = "0xFD68BC", VA = "0xFD68BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2474", Offset = "0x5A2474")]
	protected IEnumerator blinkingColorChangeCoroutine(Image[] images, Color originalColor, Color nextColor)
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xFD6A90", Offset = "0xFD6A90", VA = "0xFD6A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A24D4", Offset = "0x5A24D4")]
	protected IEnumerator fadeBetweenColorsLoopCoroutine(Image[] images, Color originalColor, Color nextColor)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xFD6C30", Offset = "0xFD6C30", VA = "0xFD6C30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2534", Offset = "0x5A2534")]
	protected IEnumerator fadeFromColorToColorCoroutine(Image[] images, Color originalColor, Color nextColor, float timeForFade)
	{
		return null;
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xFD6E1C", Offset = "0xFD6E1C", VA = "0xFD6E1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2594", Offset = "0x5A2594")]
	protected IEnumerator fadeFromColorToColorAndBackCoroutine(Image[] images, Color originalColor, Color nextColor, float timeForFade)
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xFD70B8", Offset = "0xFD70B8", VA = "0xFD70B8")]
	public ColorChanger()
	{
	}
}
[Token(Token = "0x2000274")]
public class DisabledButton : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A4C", Offset = "0x596A4C")]
	private sealed class <resetColorCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisabledButton <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x9F4848", Offset = "0x9F4848", VA = "0x9F4848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x9F4890", Offset = "0x9F4890", VA = "0x9F4890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x9F478C", Offset = "0x9F478C", VA = "0x9F478C")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x9F47B8", Offset = "0x9F47B8", VA = "0x9F47B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x9F47BC", Offset = "0x9F47BC", VA = "0x9F47BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x9F4850", Offset = "0x9F4850", VA = "0x9F4850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool button_Enabled;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected Color disabledInnerColor;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Color disabledOuterColor;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Color enabledInnerColor;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected Color enabledOuterColor;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected Color clickedColor;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected GameObject parentObject;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x9F9A3C", Offset = "0x9F9A3C", VA = "0x9F9A3C")]
	public void enable()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x9F9AA0", Offset = "0x9F9AA0", VA = "0x9F9AA0")]
	public void disable()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x9F9B00", Offset = "0x9F9B00", VA = "0x9F9B00", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x9F9C34", Offset = "0x9F9C34", VA = "0x9F9C34", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x9F9D4C", Offset = "0x9F9D4C", VA = "0x9F9D4C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x9F9D7C", Offset = "0x9F9D7C", VA = "0x9F9D7C", Slot = "9")]
	protected virtual void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x9F9D80", Offset = "0x9F9D80", VA = "0x9F9D80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2734", Offset = "0x5A2734")]
	protected IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x9F9DF8", Offset = "0x9F9DF8", VA = "0x9F9DF8")]
	public DisabledButton()
	{
	}
}
[Token(Token = "0x2000276")]
public class ContinuePausedGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xB7B38C", Offset = "0xB7B38C", VA = "0xB7B38C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xB7B3A8", Offset = "0xB7B3A8", VA = "0xB7B3A8")]
	public ContinuePausedGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000277")]
public class GoToSettingsGamePausedDisabledButton : DisabledButton
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xAC4D98", Offset = "0xAC4D98", VA = "0xAC4D98", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xAC4DB0", Offset = "0xAC4DB0", VA = "0xAC4DB0")]
	public GoToSettingsGamePausedDisabledButton()
	{
	}
}
[Token(Token = "0x2000278")]
public class GoToSettingsPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xAC4DB8", Offset = "0xAC4DB8", VA = "0xAC4DB8", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xAC4DD0", Offset = "0xAC4DD0", VA = "0xAC4DD0")]
	public GoToSettingsPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000279")]
public class RestartDisabledButton : DisabledButton
{
	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xAF01B8", Offset = "0xAF01B8", VA = "0xAF01B8", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xAF01D4", Offset = "0xAF01D4", VA = "0xAF01D4")]
	public RestartDisabledButton()
	{
	}
}
[Token(Token = "0x200027A")]
public class EnduranceActivateSquatModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activateSquatMode;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x9FDFF4", Offset = "0x9FDFF4", VA = "0x9FDFF4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x9FE03C", Offset = "0x9FE03C", VA = "0x9FE03C")]
	public EnduranceActivateSquatModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200027B")]
public class EnduranceSetGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnduranceGameModeParameterContainer.ENDURANCE_GAME_MODES modeToActivate;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xA065AC", Offset = "0xA065AC", VA = "0xA065AC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xA065F4", Offset = "0xA065F4", VA = "0xA065F4")]
	public EnduranceSetGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200027C")]
public class GameEndedDisplayController : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A5C", Offset = "0x596A5C")]
	private sealed class <showStatisticsCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndedDisplayController <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x9F77E0", Offset = "0x9F77E0", VA = "0x9F77E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x9F7828", Offset = "0x9F7828", VA = "0x9F7828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x9F7718", Offset = "0x9F7718", VA = "0x9F7718")]
		[DebuggerHidden]
		public <showStatisticsCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x9F7744", Offset = "0x9F7744", VA = "0x9F7744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x9F7748", Offset = "0x9F7748", VA = "0x9F7748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x9F77E8", Offset = "0x9F77E8", VA = "0x9F77E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject topLevelContainer;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected TimeKeeper timeKeeper;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject topLevelGameOverDisplayComponent;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> topLevelGameOverDisplayComponentList;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject topLevelGameStatsDisplayComponent;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> topLevelGameStatsDisplayComponentList;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject topLevelNewTopScoreComponent;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> topLevelNewTopScoreComponentList;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected GameObject topLevelSettingsObject;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> topLevelSettingsList;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Text pointsScoredText;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected Text pointsMissedText;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected Text totalPointsText;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected Text topScoreText;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected Text timePlayedText;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentVisibleWindow;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static object lockObject;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool displayingGUIElement;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xABFD24", Offset = "0xABFD24", VA = "0xABFD24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xABFE00", Offset = "0xABFE00", VA = "0xABFE00")]
	private void setCurrentVisibleWindow(GameObject inputWindow)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xABFF20", Offset = "0xABFF20", VA = "0xABFF20")]
	private GameObject getCurrentVisibleWindow()
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xABFDB0", Offset = "0xABFDB0", VA = "0xABFDB0")]
	protected void performOnStartUp()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xABE4BC", Offset = "0xABE4BC", VA = "0xABE4BC")]
	public void showGameOverScreen()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xABE544", Offset = "0xABE544", VA = "0xABE544")]
	public void showScore()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xAC0600", Offset = "0xAC0600", VA = "0xAC0600")]
	public void startShowStatisticsCoroutine()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xAC066C", Offset = "0xAC066C", VA = "0xAC066C")]
	public void fadeInSettings()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xAC0714", Offset = "0xAC0714", VA = "0xAC0714")]
	private string getLastTopScoreForDisplay()
	{
		return null;
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xAC0034", Offset = "0xAC0034", VA = "0xAC0034")]
	private int getLastTopScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xAC0220", Offset = "0xAC0220", VA = "0xAC0220")]
	private bool isSaveTotalPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xAC0588", Offset = "0xAC0588", VA = "0xAC0588")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A27E4", Offset = "0x5A27E4")]
	private IEnumerator showStatisticsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xAC0778", Offset = "0xAC0778", VA = "0xAC0778", Slot = "4")]
	protected virtual void fadeInStatistics()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xAC07A0", Offset = "0xAC07A0", VA = "0xAC07A0", Slot = "5")]
	protected virtual void setStatisticsValues()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xAC08E4", Offset = "0xAC08E4", VA = "0xAC08E4")]
	protected string getUsableString(string input)
	{
		return null;
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xABDF5C", Offset = "0xABDF5C", VA = "0xABDF5C")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xAC0968", Offset = "0xAC0968", VA = "0xAC0968")]
	public bool isDisplayingGUIElement()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xAC0180", Offset = "0xAC0180", VA = "0xAC0180")]
	private void deactivateCurrentVisibleWindow()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xAC0970", Offset = "0xAC0970", VA = "0xAC0970")]
	public GameEndedDisplayController()
	{
	}
}
[Token(Token = "0x200027E")]
public class OriginalAlphaValueHolder : MonoBehaviour
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float originalAlphaValue;

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xB08850", Offset = "0xB08850", VA = "0xB08850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xB08874", Offset = "0xB08874", VA = "0xB08874")]
	public float getOriginalAlphaValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xB0887C", Offset = "0xB0887C", VA = "0xB0887C")]
	public OriginalAlphaValueHolder()
	{
	}
}
[Token(Token = "0x200027F")]
public class SelectionSliderFillOnOver : MonoBehaviour
{
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xAF6128", Offset = "0xAF6128", VA = "0xAF6128")]
	public SelectionSliderFillOnOver()
	{
	}
}
[Token(Token = "0x2000280")]
public class ActivationableButton : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A6C", Offset = "0x596A6C")]
	private sealed class <resetColorCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivationableButton <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x9EA114", Offset = "0x9EA114", VA = "0x9EA114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x9EA15C", Offset = "0x9EA15C", VA = "0x9EA15C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x9EA058", Offset = "0x9EA058", VA = "0x9EA058")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x9EA084", Offset = "0x9EA084", VA = "0x9EA084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x9EA088", Offset = "0x9EA088", VA = "0x9EA088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x9EA11C", Offset = "0x9EA11C", VA = "0x9EA11C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	protected Color clickedColor;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x9CEBDC", Offset = "0x9CEBDC", VA = "0x9CEBDC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x9CEC70", Offset = "0x9CEC70", VA = "0x9CEC70", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2894", Offset = "0x5A2894")]
	protected virtual IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x9CECE8", Offset = "0x9CECE8", VA = "0x9CECE8")]
	public ActivationableButton()
	{
	}
}
[Token(Token = "0x2000282")]
public class AudioButton : MonoBehaviour
{
	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x9D6D84", Offset = "0x9D6D84", VA = "0x9D6D84", Slot = "4")]
	protected virtual void playButtonClickedClip()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x9D6DC0", Offset = "0x9D6DC0", VA = "0x9D6DC0", Slot = "5")]
	protected virtual void playBackButtonClickedClip()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x9D6DFC", Offset = "0x9D6DFC", VA = "0x9D6DFC")]
	public AudioButton()
	{
	}
}
[Token(Token = "0x2000283")]
public class ButtonActivationController : MonoBehaviour
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<GameObject> visibleDifficultyButtons;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<GameObject> visibleEnvironmentButtons;

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xFC3C7C", Offset = "0xFC3C7C", VA = "0xFC3C7C")]
	public void activateButtons(List<GameObject> nextMenuItems)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xFC3FF8", Offset = "0xFC3FF8", VA = "0xFC3FF8")]
	private void setCreateHandSpecificOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xFC4194", Offset = "0xFC4194", VA = "0xFC4194")]
	private void setInfiniteHandEnergyOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xFC4330", Offset = "0xFC4330", VA = "0xFC4330")]
	private void setInfinitePlayerHealthOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xFC43E4", Offset = "0xFC43E4", VA = "0xFC43E4", Slot = "4")]
	public virtual void deactivateOtherDifficultyButtons(SetGameDifficultyPerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xFC45F8", Offset = "0xFC45F8", VA = "0xFC45F8", Slot = "5")]
	public virtual void deactivateOtherDurationButtons(SetGameDurationPerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xFC480C", Offset = "0xFC480C", VA = "0xFC480C", Slot = "6")]
	public virtual void deactivateOtherEnvironmentButtons(EnvironmentChangePerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xFC4A20", Offset = "0xFC4A20", VA = "0xFC4A20", Slot = "7")]
	public virtual ButtonChangeColorPerformOnInteraction getButtonSelectedScriptOfButtonWithDifficulty(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xFC4C44", Offset = "0xFC4C44", VA = "0xFC4C44", Slot = "8")]
	public virtual ButtonChangeColorPerformOnInteraction getButtonSelectedScriptOfButtonWithDuration(GameModeValues.GameDuration duration)
	{
		return null;
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xFC4E68", Offset = "0xFC4E68", VA = "0xFC4E68")]
	public void setBoolValue(string specificValue, bool boolValue)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xFC3E20", Offset = "0xFC3E20", VA = "0xFC3E20")]
	private void setGameModeDifficultyFromSavedPreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xFC3ED0", Offset = "0xFC3ED0", VA = "0xFC3ED0")]
	private void setGameDurationFromSavedPreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xFC4EB8", Offset = "0xFC4EB8", VA = "0xFC4EB8")]
	private void setGameDifficultyAndSavePreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xFC4FAC", Offset = "0xFC4FAC", VA = "0xFC4FAC")]
	private void setGameDurationAndSavePreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xFC3F80", Offset = "0xFC3F80", VA = "0xFC3F80")]
	private void setHandSpecificObjectsButtonActive(List<GameObject> visibleObjects, bool activeState)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xFC40AC", Offset = "0xFC40AC", VA = "0xFC40AC")]
	private void activateInfiniteHandEnergy(List<GameObject> visibleObjects)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xFC4248", Offset = "0xFC4248", VA = "0xFC4248")]
	private void activateInfiniteHealth(List<GameObject> visibleObjects)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xFC56A4", Offset = "0xFC56A4", VA = "0xFC56A4")]
	private GameObject getSkipTutorialGameObject(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xFC5094", Offset = "0xFC5094", VA = "0xFC5094")]
	private GameObject getCreateSpecificHandObjectsButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xFC5224", Offset = "0xFC5224", VA = "0xFC5224")]
	private GameObject getInfiniteHandEnergyButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xFC5514", Offset = "0xFC5514", VA = "0xFC5514")]
	private GameObject getInfiniteHealthButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xFC5834", Offset = "0xFC5834", VA = "0xFC5834")]
	public void activateEnvironmentButton(List<GameObject> menuItems)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xFC598C", Offset = "0xFC598C", VA = "0xFC598C", Slot = "9")]
	public virtual ButtonChangeColorPerformOnInteraction getActivateEnvironmentButton(EnvironmentAndSkyboxChanger.EnvironmentType inputEnvironmentType)
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xFC5BB0", Offset = "0xFC5BB0", VA = "0xFC5BB0")]
	public ButtonActivationController()
	{
	}
}
[Token(Token = "0x2000284")]
public class ButtonChangeColorPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Color activeInnerColor;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Color onRayOverInnerColor;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool active;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xFC5C60", Offset = "0xFC5C60", VA = "0xFC5C60", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xFC5D78", Offset = "0xFC5D78", VA = "0xFC5D78", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xFC5E90", Offset = "0xFC5E90", VA = "0xFC5E90", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xFC5EA8", Offset = "0xFC5EA8", VA = "0xFC5EA8", Slot = "7")]
	public virtual void setActiveState(bool input)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xFC53B4", Offset = "0xFC53B4", VA = "0xFC53B4")]
	public void setVisualState(bool input)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xFC5ED8", Offset = "0xFC5ED8", VA = "0xFC5ED8", Slot = "8")]
	protected virtual void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xFC5EDC", Offset = "0xFC5EDC", VA = "0xFC5EDC")]
	public ButtonChangeColorPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000285")]
public class ComplexButtonOnRayOverPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x6001022")]
	[Address(RVA = "0xB7B020", Offset = "0xB7B020", VA = "0xB7B020", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xB7B130", Offset = "0xB7B130", VA = "0xB7B130", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xB7B240", Offset = "0xB7B240", VA = "0xB7B240")]
	public ComplexButtonOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000286")]
public class CreateHandSpecificObjectsDeAndActivationableButton : DeAndActivationableButton
{
	[Token(Token = "0x6001025")]
	[Address(RVA = "0xB8509C", Offset = "0xB8509C", VA = "0xB8509C", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xB851F8", Offset = "0xB851F8", VA = "0xB851F8")]
	public CreateHandSpecificObjectsDeAndActivationableButton()
	{
	}
}
[Token(Token = "0x2000287")]
public class DeAndActivationableButton : ActivationableButton
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A7C", Offset = "0x596A7C")]
	private sealed class <resetColorCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeAndActivationableButton <>4__this;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x9F3B14", Offset = "0x9F3B14", VA = "0x9F3B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x9F3B5C", Offset = "0x9F3B5C", VA = "0x9F3B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x9F3A3C", Offset = "0x9F3A3C", VA = "0x9F3A3C")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x9F3A68", Offset = "0x9F3A68", VA = "0x9F3A68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x9F3A6C", Offset = "0x9F3A6C", VA = "0x9F3A6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x9F3B1C", Offset = "0x9F3B1C", VA = "0x9F3B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xB87658", Offset = "0xB87658", VA = "0xB87658", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xB876FC", Offset = "0xB876FC", VA = "0xB876FC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2944", Offset = "0x5A2944")]
	protected override IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xB85200", Offset = "0xB85200", VA = "0xB85200")]
	public DeAndActivationableButton()
	{
	}
}
[Token(Token = "0x2000289")]
public class DisabledStartGameOrTutorialButton : DisabledButton
{
	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController middleController;

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x9F9ED4", Offset = "0x9F9ED4", VA = "0x9F9ED4", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x9FA020", Offset = "0x9FA020", VA = "0x9FA020")]
	public void startGameMode()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x9FA040", Offset = "0x9FA040", VA = "0x9FA040")]
	public DisabledStartGameOrTutorialButton()
	{
	}
}
[Token(Token = "0x200028A")]
public class MainMenuBackButton : PerformOnInteraction
{
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1587E78", Offset = "0x1587E78", VA = "0x1587E78", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x15880A0", Offset = "0x15880A0", VA = "0x15880A0")]
	public MainMenuBackButton()
	{
	}
}
[Token(Token = "0x200028B")]
public class MainMenuSetBlockIncomingActiveGameMode : PerformOnInteraction
{
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BlockIncomingObjectsParameterContainer.BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES modeToActivate;

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1589DEC", Offset = "0x1589DEC", VA = "0x1589DEC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1589E30", Offset = "0x1589E30", VA = "0x1589E30")]
	public MainMenuSetBlockIncomingActiveGameMode()
	{
	}
}
[Token(Token = "0x200028C")]
public class RestartGame : MonoBehaviour
{
	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject fadeOutObjectAndAllChildren;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<GameObject> fadeOutObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GameObject fadeInObjectAndAllChildren;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<GameObject> fadeInObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xAF01DC", Offset = "0xAF01DC", VA = "0xAF01DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xAF02B0", Offset = "0xAF02B0", VA = "0xAF02B0", Slot = "4")]
	protected virtual void performStartSetup()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xAF02B4", Offset = "0xAF02B4", VA = "0xAF02B4")]
	protected void fadeOutGameOverScreenAndRestartGame()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xAF0398", Offset = "0xAF0398", VA = "0xAF0398", Slot = "5")]
	protected virtual void performAfterElementFadeInFinished()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xAF039C", Offset = "0xAF039C", VA = "0xAF039C")]
	private void restartGame()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xAF03C0", Offset = "0xAF03C0", VA = "0xAF03C0")]
	public RestartGame()
	{
	}
}
[Token(Token = "0x200028D")]
public class SetStartTutorialDeAndActivationableButton : DeAndActivationableButton
{
	[Token(Token = "0x600103D")]
	[Address(RVA = "0xAF6AC0", Offset = "0xAF6AC0", VA = "0xAF6AC0", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xAF6B78", Offset = "0xAF6B78", VA = "0xAF6B78")]
	public SetStartTutorialDeAndActivationableButton()
	{
	}
}
[Token(Token = "0x200028E")]
public class StartTutorialButton : PerformOnInteraction
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xB93A24", Offset = "0xB93A24", VA = "0xB93A24", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xB93A68", Offset = "0xB93A68", VA = "0xB93A68")]
	public StartTutorialButton()
	{
	}
}
[Token(Token = "0x200028F")]
public class EnvironmentChangePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public EnvironmentAndSkyboxChanger.EnvironmentType environmentType;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA07460", Offset = "0xA07460", VA = "0xA07460", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA07524", Offset = "0xA07524", VA = "0xA07524")]
	public EnvironmentChangePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000290")]
public class QuickStartGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xAED410", Offset = "0xAED410", VA = "0xAED410", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xAED57C", Offset = "0xAED57C", VA = "0xAED57C")]
	public QuickStartGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000291")]
public static class QuickStartSettingsLoader
{
	[Token(Token = "0x6001045")]
	[Address(RVA = "0xAED458", Offset = "0xAED458", VA = "0xAED458")]
	public static void loadGameModeSettings()
	{
	}
}
[Token(Token = "0x2000292")]
public class ChangeDescriptionPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text textToChange;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string onRayOverText;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string onRayLeaveText;

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xFD3A88", Offset = "0xFD3A88", VA = "0xFD3A88", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xFD3AB4", Offset = "0xFD3AB4", VA = "0xFD3AB4", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xFD3AE0", Offset = "0xFD3AE0", VA = "0xFD3AE0")]
	public ChangeDescriptionPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000293")]
public class ColorChangeOnClickedPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A8C", Offset = "0x596A8C")]
	private sealed class <resetColorCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorChangeOnClickedPerformOnInteraction <>4__this;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x9F1004", Offset = "0x9F1004", VA = "0x9F1004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x9F104C", Offset = "0x9F104C", VA = "0x9F104C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x9F0F48", Offset = "0x9F0F48", VA = "0x9F0F48")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x9F0F74", Offset = "0x9F0F74", VA = "0x9F0F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x9F0F78", Offset = "0x9F0F78", VA = "0x9F0F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x9F100C", Offset = "0x9F100C", VA = "0x9F100C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color clickedColor;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color normalColor;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image backgroundImage;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xFD64C8", Offset = "0xFD64C8", VA = "0xFD64C8", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xFD6544", Offset = "0xFD6544", VA = "0xFD6544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A29F4", Offset = "0x5A29F4")]
	private IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xFD65BC", Offset = "0xFD65BC", VA = "0xFD65BC")]
	public ColorChangeOnClickedPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000295")]
public class ColorChangeOnRayOverPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Color onRayOverColor;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Color onRayLeaveInnerColor;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Color onRayLeaveOuterColor;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Image innerImage;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Image outerImage;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Image[] additionalInnerImages;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Image[] additionalOuterImages;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xFD6630", Offset = "0xFD6630", VA = "0xFD6630", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xFD66EC", Offset = "0xFD66EC", VA = "0xFD66EC", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xFC5EE4", Offset = "0xFC5EE4", VA = "0xFC5EE4")]
	public ColorChangeOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000296")]
public class FinishTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LastClickTimerService lastClickTimerService;

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA08FCC", Offset = "0xA08FCC", VA = "0xA08FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA09038", Offset = "0xA09038", VA = "0xA09038", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA09098", Offset = "0xA09098", VA = "0xA09098")]
	public FinishTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000297")]
public class GoToScorePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xAC4D78", Offset = "0xAC4D78", VA = "0xAC4D78", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xAC4D90", Offset = "0xAC4D90", VA = "0xAC4D90")]
	public GoToScorePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000298")]
public class ImageButtonChangeColorPerformOnInteraction : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image innerBackgroundImage;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Image outerBackgroundImage;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Color innerBackgroundImageActiveColor;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Color outerBackgroundImageActiveColor;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Color innerBackgroundImageInactiveColor;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Color outerBackgroundImageInactiveColor;

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xACCA2C", Offset = "0xACCA2C", VA = "0xACCA2C", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xACCABC", Offset = "0xACCABC", VA = "0xACCABC", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xACCB4C", Offset = "0xACCB4C", VA = "0xACCB4C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xACCB64", Offset = "0xACCB64", VA = "0xACCB64", Slot = "7")]
	public override void setActiveState(bool input)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xACCC98", Offset = "0xACCC98", VA = "0xACCC98")]
	public ImageButtonChangeColorPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000299")]
public class ImageButtonColorChangeOnRayOverPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image innerBackgroundImage;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image outerBackgroundImage;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color innerBackgroundImageActiveColor;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color outerBackgroundImageActiveColor;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Color innerBackgroundImageInactiveColor;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Color outerBackgroundImageInactiveColor;

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xACCCA0", Offset = "0xACCCA0", VA = "0xACCCA0", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xACCD1C", Offset = "0xACCD1C", VA = "0xACCD1C", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xACCD98", Offset = "0xACCD98", VA = "0xACCD98")]
	public ImageButtonColorChangeOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029A")]
public class InGameFadeInSettingPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject settingsTopLevelObject;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<GameObject> otherObjectArrayList;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xACD23C", Offset = "0xACD23C", VA = "0xACD23C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xACD270", Offset = "0xACD270", VA = "0xACD270", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xACD2AC", Offset = "0xACD2AC", VA = "0xACD2AC")]
	public InGameFadeInSettingPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029B")]
public class InGameSetGameDifficultyPerformOnInteraction : SetGameDifficultyPerformOnInteraction
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xACD318", Offset = "0xACD318", VA = "0xACD318", Slot = "7")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xACD33C", Offset = "0xACD33C", VA = "0xACD33C")]
	public InGameSetGameDifficultyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029C")]
public class InfiniteHandEnergyPerformOnInteraction : DeAndActivationableButton
{
	[Token(Token = "0x6001067")]
	[Address(RVA = "0xACD5AC", Offset = "0xACD5AC", VA = "0xACD5AC", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xACD748", Offset = "0xACD748", VA = "0xACD748")]
	public InfiniteHandEnergyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029D")]
public class InfiniteHealthPerformOnInteraction : DeAndActivationableButton
{
	[Token(Token = "0x6001069")]
	[Address(RVA = "0xACD750", Offset = "0xACD750", VA = "0xACD750", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xACD88C", Offset = "0xACD88C", VA = "0xACD88C")]
	public InfiniteHealthPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029E")]
public class MainMenuSelectGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameModeParameterContainerController.GameModeSelectionEnum gameModeToSelect;

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x1589DA0", Offset = "0x1589DA0", VA = "0x1589DA0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x1589DE4", Offset = "0x1589DE4", VA = "0x1589DE4")]
	public MainMenuSelectGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029F")]
public class MainMenuStartGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x1589E38", Offset = "0x1589E38", VA = "0x1589E38", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x1589E78", Offset = "0x1589E78", VA = "0x1589E78")]
	public MainMenuStartGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A0")]
public class NextTutorialStepPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xC64CE4", Offset = "0xC64CE4", VA = "0xC64CE4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xC64D3C", Offset = "0xC64D3C", VA = "0xC64D3C")]
	public NextTutorialStepPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A1")]
public class OnClickedSoundPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xB08620", Offset = "0xB08620", VA = "0xB08620", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xB0863C", Offset = "0xB0863C", VA = "0xB0863C")]
	public OnClickedSoundPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A2")]
public class OnMouseOverSoundPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xB08644", Offset = "0xB08644", VA = "0xB08644", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xB08660", Offset = "0xB08660", VA = "0xB08660")]
	public OnMouseOverSoundPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A3")]
public class PerformOnInteraction : MonoBehaviour
{
	[Token(Token = "0x6001075")]
	[Address(RVA = "0xAE0BD8", Offset = "0xAE0BD8", VA = "0xAE0BD8", Slot = "4")]
	public virtual void onClicked()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xAE0BDC", Offset = "0xAE0BDC", VA = "0xAE0BDC", Slot = "5")]
	public virtual void onRayOver()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xAE0BE0", Offset = "0xAE0BE0", VA = "0xAE0BE0", Slot = "6")]
	public virtual void onRayLeave()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xAE0BE4", Offset = "0xAE0BE4", VA = "0xAE0BE4")]
	public PerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A4")]
public class ReadBoundariesPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StartBoundariesCalculationService startBoundariesCalculationService;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xAEF238", Offset = "0xAEF238", VA = "0xAEF238", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xAEF2E8", Offset = "0xAEF2E8", VA = "0xAEF2E8")]
	public ReadBoundariesPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A5")]
public class RestartGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject fadeOutObjectAndAllChildren;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<GameObject> fadeOutObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xAF03C8", Offset = "0xAF03C8", VA = "0xAF03C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xAF03FC", Offset = "0xAF03FC", VA = "0xAF03FC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xAF0408", Offset = "0xAF0408", VA = "0xAF0408", Slot = "7")]
	protected virtual void performRestart()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xAF0450", Offset = "0xAF0450", VA = "0xAF0450")]
	protected void fadeOutGameOverScreenAndRestartGame()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xAF04EC", Offset = "0xAF04EC", VA = "0xAF04EC")]
	private void restartGame()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xAF0510", Offset = "0xAF0510", VA = "0xAF0510")]
	public RestartGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A6")]
public class RestartWithTutorialPerformOnInteraction : RestartGamePerformOnInteraction
{
	[Token(Token = "0x6001081")]
	[Address(RVA = "0xAF0518", Offset = "0xAF0518", VA = "0xAF0518", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xAF054C", Offset = "0xAF054C", VA = "0xAF054C")]
	protected void fadeOutGameOverScreenAndRestartTutorial()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xAF05E8", Offset = "0xAF05E8", VA = "0xAF05E8")]
	private void restartTutorial()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xAF0604", Offset = "0xAF0604", VA = "0xAF0604")]
	public RestartWithTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A7")]
public class SelectPlayModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activateCardioMode;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xAF5B98", Offset = "0xAF5B98", VA = "0xAF5B98", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xAF5C30", Offset = "0xAF5C30", VA = "0xAF5C30")]
	public SelectPlayModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A8")]
public class SetGameDifficultyPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameModeValues.GameAndSubModeDifficulty gameDifficulty;

	[Token(Token = "0x17000186")]
	public GameModeValues.GameAndSubModeDifficulty GameDifficulty
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xAF6658", Offset = "0xAF6658", VA = "0xAF6658")]
		get
		{
			return default(GameModeValues.GameAndSubModeDifficulty);
		}
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xAF6660", Offset = "0xAF6660", VA = "0xAF6660", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xAF67BC", Offset = "0xAF67BC", VA = "0xAF67BC", Slot = "7")]
	protected virtual void onClickedSpecific()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xAF67C0", Offset = "0xAF67C0", VA = "0xAF67C0")]
	public SetGameDifficultyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A9")]
public class SetGameDurationPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameModeValues.GameDuration gameDuration;

	[Token(Token = "0x17000187")]
	public GameModeValues.GameDuration GameDuration
	{
		[Token(Token = "0x600108B")]
		[Address(RVA = "0xAF67C8", Offset = "0xAF67C8", VA = "0xAF67C8")]
		get
		{
			return default(GameModeValues.GameDuration);
		}
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xAF67D0", Offset = "0xAF67D0", VA = "0xAF67D0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xAF6914", Offset = "0xAF6914", VA = "0xAF6914")]
	public SetGameDurationPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002AA")]
public class SetSubGameModeActivePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xAF6B80", Offset = "0xAF6B80", VA = "0xAF6B80", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xAF6BA8", Offset = "0xAF6BA8", VA = "0xAF6BA8")]
	public SetSubGameModeActivePerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002AB")]
public class SetTargetTouchGameMode : PerformOnInteraction
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameModeParameterContainer.TARGET_TOUCH_ACTIVE_GAME_MODE modeToActivate;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xAF6BB0", Offset = "0xAF6BB0", VA = "0xAF6BB0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xAF6BF8", Offset = "0xAF6BF8", VA = "0xAF6BF8")]
	public SetTargetTouchGameMode()
	{
	}
}
[Token(Token = "0x20002AC")]
public class ShowGameEndedStatisticsInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject parentGameObject;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> parentGameObjectArrayList;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xAF6E98", Offset = "0xAF6E98", VA = "0xAF6E98")]
	private void Start()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xAF6ECC", Offset = "0xAF6ECC", VA = "0xAF6ECC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xAF6F98", Offset = "0xAF6F98", VA = "0xAF6F98")]
	private void showGameStatistics()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xAF6FB4", Offset = "0xAF6FB4", VA = "0xAF6FB4")]
	public ShowGameEndedStatisticsInteraction()
	{
	}
}
[Token(Token = "0x20002AD")]
public class SkipToGameModeSpecificTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LastClickTimerService lastClickTimerService;

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xAF8068", Offset = "0xAF8068", VA = "0xAF8068")]
	private void Start()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xAF80D4", Offset = "0xAF80D4", VA = "0xAF80D4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xAF8130", Offset = "0xAF8130", VA = "0xAF8130")]
	public SkipToGameModeSpecificTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002AE")]
public class SkipTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LastClickTimerService lastClickTimerService;

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xAF8138", Offset = "0xAF8138", VA = "0xAF8138")]
	private void Start()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xAF81A4", Offset = "0xAF81A4", VA = "0xAF81A4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xAF8204", Offset = "0xAF8204", VA = "0xAF8204")]
	public SkipTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002AF")]
public class StartTutorialStepPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool clicked;

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xB93A70", Offset = "0xB93A70", VA = "0xB93A70", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xB93ACC", Offset = "0xB93ACC", VA = "0xB93ACC")]
	public void setClickedFalse()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xB93AD4", Offset = "0xB93AD4", VA = "0xB93AD4")]
	public StartTutorialStepPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002B0")]
public class SizeChanger : MonoBehaviour
{
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596A9C", Offset = "0x596A9C")]
	private sealed class <sizeIncreaseDecreaseLoopCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <increase>5__2;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <sizeChangingMultiplier>5__3;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x8FCAA8", Offset = "0x8FCAA8", VA = "0x8FCAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x8FCAF0", Offset = "0x8FCAF0", VA = "0x8FCAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x8FC8F4", Offset = "0x8FC8F4", VA = "0x8FC8F4")]
		[DebuggerHidden]
		public <sizeIncreaseDecreaseLoopCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x8FC920", Offset = "0x8FC920", VA = "0x8FC920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x8FC924", Offset = "0x8FC924", VA = "0x8FC924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x8FCAB0", Offset = "0x8FCAB0", VA = "0x8FCAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596AAC", Offset = "0x596AAC")]
	private sealed class <performIncreaseDecreaseOnceCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxSizeToUse;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueSizeChange>5__2;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool <increase>5__3;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x8FC8A4", Offset = "0x8FC8A4", VA = "0x8FC8A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x8FC8EC", Offset = "0x8FC8EC", VA = "0x8FC8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x8FC6B8", Offset = "0x8FC6B8", VA = "0x8FC6B8")]
		[DebuggerHidden]
		public <performIncreaseDecreaseOnceCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x8FC6E4", Offset = "0x8FC6E4", VA = "0x8FC6E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x8FC6E8", Offset = "0x8FC6E8", VA = "0x8FC6E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x8FC8AC", Offset = "0x8FC8AC", VA = "0x8FC8AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596ABC", Offset = "0x596ABC")]
	private sealed class <performDecreaseIncreaseOnceCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minSizeToUse;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueSizeChange>5__2;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool <decrease>5__3;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x8FC668", Offset = "0x8FC668", VA = "0x8FC668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x8FC6B0", Offset = "0x8FC6B0", VA = "0x8FC6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x8FC488", Offset = "0x8FC488", VA = "0x8FC488")]
		[DebuggerHidden]
		public <performDecreaseIncreaseOnceCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x8FC4B4", Offset = "0x8FC4B4", VA = "0x8FC4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x8FC4B8", Offset = "0x8FC4B8", VA = "0x8FC4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x8FC670", Offset = "0x8FC670", VA = "0x8FC670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596ACC", Offset = "0x596ACC")]
	private sealed class <decreaseToInvisibleCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x8FC438", Offset = "0x8FC438", VA = "0x8FC438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x8FC480", Offset = "0x8FC480", VA = "0x8FC480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x8FC2F0", Offset = "0x8FC2F0", VA = "0x8FC2F0")]
		[DebuggerHidden]
		public <decreaseToInvisibleCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x8FC31C", Offset = "0x8FC31C", VA = "0x8FC31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x8FC320", Offset = "0x8FC320", VA = "0x8FC320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x8FC440", Offset = "0x8FC440", VA = "0x8FC440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float startingSize;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float minSize;

	[Token(Token = "0x4000E12")]
	protected const float MIN_SIZE_REDUCTION = 0.03f;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float maxSize;

	[Token(Token = "0x4000E14")]
	protected const float MAX_SIZE_INCREASE = 0.02f;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected float sizeChangeIterationAmount;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Coroutine activeCoroutine;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds waitFor10Millies;

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xAF7BCC", Offset = "0xAF7BCC", VA = "0xAF7BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xAF7BD8", Offset = "0xAF7BD8", VA = "0xAF7BD8", Slot = "4")]
	protected virtual void performSizeSetup()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xAF7C24", Offset = "0xAF7C24", VA = "0xAF7C24")]
	public void startIncreaseDecreaseSizeChangeLoop()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xAE5F8C", Offset = "0xAE5F8C", VA = "0xAE5F8C")]
	public void reset()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xAE6344", Offset = "0xAE6344", VA = "0xAE6344")]
	public void performIncreaseDecreaseOnce()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xAE8AA4", Offset = "0xAE8AA4", VA = "0xAE8AA4")]
	public void performIncreaseDecreaseOnce(float maxSizeToUse)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xAE5FB0", Offset = "0xAE5FB0", VA = "0xAE5FB0")]
	public void performDecreaseIncreaseOnce()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xAF7CE8", Offset = "0xAF7CE8", VA = "0xAF7CE8")]
	public void performDecreaseIncreaseOnce(float minSizeToUse)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xAF7C74", Offset = "0xAF7C74", VA = "0xAF7C74")]
	protected void stopActiveCorountine()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xAF7D78", Offset = "0xAF7D78", VA = "0xAF7D78", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2AA4", Offset = "0x5A2AA4")]
	protected virtual IEnumerator sizeIncreaseDecreaseLoopCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xAF7DF0", Offset = "0xAF7DF0", VA = "0xAF7DF0", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2B04", Offset = "0x5A2B04")]
	protected virtual IEnumerator performIncreaseDecreaseOnceCoroutine(float maxSizeToUse)
	{
		return null;
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xAF7E78", Offset = "0xAF7E78", VA = "0xAF7E78", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2B64", Offset = "0x5A2B64")]
	protected virtual IEnumerator performDecreaseIncreaseOnceCoroutine(float minSizeToUse)
	{
		return null;
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xAF7CAC", Offset = "0xAF7CAC", VA = "0xAF7CAC")]
	private void resetToStartingSize()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xAF7F00", Offset = "0xAF7F00", VA = "0xAF7F00", Slot = "8")]
	public virtual void decreaseToInvisible()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xAF7F6C", Offset = "0xAF7F6C", VA = "0xAF7F6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2BC4", Offset = "0x5A2BC4")]
	protected IEnumerator decreaseToInvisibleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xAF7FE4", Offset = "0xAF7FE4", VA = "0xAF7FE4")]
	public SizeChanger()
	{
	}
}
[Token(Token = "0x20002B5")]
public class SpecifiedValueSizeChanger : SizeChanger
{
	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool useSpecifiedMinSize;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float specifiedMinSize;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool useSpecifiedStartingSize;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float specifiedStartingSize;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool useSpecifiedMaxSize;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float specifiedMaxSize;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool maxSizeIsStartingSize;

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xB92370", Offset = "0xB92370", VA = "0xB92370", Slot = "8")]
	public override void decreaseToInvisible()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xB923E4", Offset = "0xB923E4", VA = "0xB923E4", Slot = "4")]
	protected override void performSizeSetup()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xB92480", Offset = "0xB92480", VA = "0xB92480")]
	public SpecifiedValueSizeChanger()
	{
	}
}
[Token(Token = "0x20002B6")]
public class OculusPlayerEvents : MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityAction onTouchpadUp;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityAction<OVRInput.Controller> onTriggerPressed;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityAction<List<OVRInput.Controller>, List<GameObject>> onControllerSources;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_LeftAnchor;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_RightAnchor;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Dictionary<OVRInput.Controller, GameObject> m_ControllerSets;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<OVRInput.Controller> m_InputSources;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<OVRInput.Controller> m_Controllers;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_inputActive;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> controllerGameObjects;

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xB04DF8", Offset = "0xB04DF8", VA = "0xB04DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xB04FB8", Offset = "0xB04FB8", VA = "0xB04FB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xB050A4", Offset = "0xB050A4", VA = "0xB050A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xB0524C", Offset = "0xB0524C", VA = "0xB0524C")]
	private void checkInputSource()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xB0527C", Offset = "0xB0527C", VA = "0xB0527C")]
	private List<OVRInput.Controller> updateSource(List<OVRInput.Controller> activeControllers)
	{
		return null;
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xB050FC", Offset = "0xB050FC", VA = "0xB050FC")]
	private void checkForControllers()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xB05470", Offset = "0xB05470", VA = "0xB05470", Slot = "4")]
	protected virtual void input()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xB056D4", Offset = "0xB056D4", VA = "0xB056D4")]
	private void playerFound()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xB056E0", Offset = "0xB056E0", VA = "0xB056E0")]
	private void playerLost()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xB04EFC", Offset = "0xB04EFC", VA = "0xB04EFC")]
	private Dictionary<OVRInput.Controller, GameObject> createControllerSets()
	{
		return null;
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xB056E8", Offset = "0xB056E8", VA = "0xB056E8")]
	public OculusPlayerEvents()
	{
	}
}
[Token(Token = "0x20002B7")]
public class OculusRiftPointer : VRControllerRaycaster
{
	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer[] lineRenderer;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask m_EverythingMask;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> currentOrigins;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<OVRInput.Controller, Transform> controllerTransformDictionary;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Transform, GameObject> currentGameObjectsAtEndOfRaycast;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xB06444", Offset = "0xB06444", VA = "0xB06444")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xB065FC", Offset = "0xB065FC", VA = "0xB065FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xB06710", Offset = "0xB06710", VA = "0xB06710")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xB06EAC", Offset = "0xB06EAC", VA = "0xB06EAC")]
	private bool objectNoLongerPresentInGameObjectsEndOfRaycast(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xB06DC8", Offset = "0xB06DC8", VA = "0xB06DC8")]
	private void callPerformOnRayLeave(GameObject objectHit)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xB06C5C", Offset = "0xB06C5C", VA = "0xB06C5C")]
	private GameObject getObjectAtEndOfRaycast(Transform currentOrigin)
	{
		return null;
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xB06A40", Offset = "0xB06A40", VA = "0xB06A40")]
	private Vector3 UpdateLine(Transform currentOrigin, int lineRendererIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xB0702C", Offset = "0xB0702C", VA = "0xB0702C")]
	private RaycastHit CreateRaycast(int layer, Transform currentOrigin)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xB06628", Offset = "0xB06628", VA = "0xB06628")]
	private void setLineColor(int lineRendererIndex)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xB071E0", Offset = "0xB071E0", VA = "0xB071E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xB07398", Offset = "0xB07398", VA = "0xB07398")]
	private void updateOrigin(List<OVRInput.Controller> controllers, List<GameObject> inputGameObjects)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xB07614", Offset = "0xB07614", VA = "0xB07614")]
	private void processTriggerPressed(OVRInput.Controller controllerPressed)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xB077CC", Offset = "0xB077CC", VA = "0xB077CC")]
	public OculusRiftPointer()
	{
	}
}
[Token(Token = "0x20002B8")]
public class OculusWelcomeScreenCompletedListener : WelcomeScreenCompletedListener
{
	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xB079F0", Offset = "0xB079F0", VA = "0xB079F0", Slot = "4")]
	protected override void listenForButtonPress()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xB07C0C", Offset = "0xB07C0C", VA = "0xB07C0C")]
	public OculusWelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002B9")]
public class UnityXRPlayerEvents : MonoBehaviour
{
	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityAction onTouchpadUp;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityAction<InputDevice> onTriggerPressed;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityAction<List<InputDevice>, List<GameObject>> onControllerSources;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_LeftAnchor;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_RightAnchor;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Dictionary<InputDevice, GameObject> m_ControllerSets;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<InputDevice> m_InputSources;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<InputDevice> m_Controllers;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_inputActive;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> controllerGameObjects;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected DateTime lastClickTime;

	[Token(Token = "0x4000E51")]
	private const int TIME_PASSED_SINCE_CLICK = 600;

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xF1F1C0", Offset = "0xF1F1C0", VA = "0xF1F1C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xF1F304", Offset = "0xF1F304", VA = "0xF1F304")]
	private void updateLastClickTime()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xF1F36C", Offset = "0xF1F36C", VA = "0xF1F36C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xF1F4B8", Offset = "0xF1F4B8", VA = "0xF1F4B8")]
	private void checkInputSource()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xF1F704", Offset = "0xF1F704", VA = "0xF1F704")]
	private List<InputDevice> updateSource(List<InputDevice> activeControllers)
	{
		return null;
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xF1F3BC", Offset = "0xF1F3BC", VA = "0xF1F3BC")]
	private void checkForControllers()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xF1F4E8", Offset = "0xF1F4E8", VA = "0xF1F4E8")]
	private void input()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xF1F9D0", Offset = "0xF1F9D0", VA = "0xF1F9D0")]
	private bool enoughTimePassed()
	{
		return default(bool);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xF1F1F4", Offset = "0xF1F1F4", VA = "0xF1F1F4")]
	private Dictionary<InputDevice, GameObject> createControllerSets()
	{
		return null;
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xF1F94C", Offset = "0xF1F94C", VA = "0xF1F94C")]
	private List<InputDevice> getDeviceForSide(InputDeviceCharacteristics inputDeviceCharacteristic)
	{
		return null;
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xF1FA74", Offset = "0xF1FA74", VA = "0xF1FA74")]
	public UnityXRPlayerEvents()
	{
	}
}
[Token(Token = "0x20002BA")]
public class UnityXRPointer : VRControllerRaycaster
{
	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer[] lineRenderer;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask m_EverythingMask;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> currentOrigins;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<InputDevice, Transform> controllerTransformDictionary;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Transform, GameObject> currentGameObjectsAtEndOfRaycast;

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xF1FB7C", Offset = "0xF1FB7C", VA = "0xF1FB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xF1FD34", Offset = "0xF1FD34", VA = "0xF1FD34")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xF1FE48", Offset = "0xF1FE48", VA = "0xF1FE48")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xF205E4", Offset = "0xF205E4", VA = "0xF205E4")]
	private bool objectNoLongerPresentInGameObjectsEndOfRaycast(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xF20500", Offset = "0xF20500", VA = "0xF20500")]
	private void callPerformOnRayLeave(GameObject objectHit)
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xF20394", Offset = "0xF20394", VA = "0xF20394")]
	private GameObject getObjectAtEndOfRaycast(Transform currentOrigin)
	{
		return null;
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xF20178", Offset = "0xF20178", VA = "0xF20178")]
	private Vector3 UpdateLine(Transform currentOrigin, int lineRendererIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xF20764", Offset = "0xF20764", VA = "0xF20764")]
	private RaycastHit CreateRaycast(int layer, Transform currentOrigin)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xF1FD60", Offset = "0xF1FD60", VA = "0xF1FD60")]
	private void setLineColor(int lineRendererIndex)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xF20918", Offset = "0xF20918", VA = "0xF20918")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xF20AD0", Offset = "0xF20AD0", VA = "0xF20AD0")]
	private void updateOrigin(List<InputDevice> controllers, List<GameObject> inputGameObjects)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xF20D50", Offset = "0xF20D50", VA = "0xF20D50")]
	private void processTriggerPressed(InputDevice controllerPressed)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xF20F40", Offset = "0xF20F40", VA = "0xF20F40")]
	public UnityXRPointer()
	{
	}
}
[Token(Token = "0x20002BB")]
public class UnityXRWelcomeScreenCompletedListener : WelcomeScreenCompletedListener
{
	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xF2108C", Offset = "0xF2108C", VA = "0xF2108C", Slot = "4")]
	protected override void listenForButtonPress()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xF21378", Offset = "0xF21378", VA = "0xF21378")]
	public UnityXRWelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002BC")]
public class VRControllerRaycaster : MonoBehaviour
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Reticule[] reticules;

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xF1B1C8", Offset = "0xF1B1C8", VA = "0xF1B1C8")]
	public void setActiveStateSelfAndReticules(bool input)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xF21084", Offset = "0xF21084", VA = "0xF21084")]
	public VRControllerRaycaster()
	{
	}
}
[Token(Token = "0x20002BD")]
public class WelcomeScreenCompletedListener : MonoBehaviour
{
	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x9E6DB4", Offset = "0x9E6DB4", VA = "0x9E6DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x9E6DC0", Offset = "0x9E6DC0", VA = "0x9E6DC0", Slot = "4")]
	protected virtual void listenForButtonPress()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x9E6DC4", Offset = "0x9E6DC4", VA = "0x9E6DC4")]
	protected void moveOnFromWelcomeScreen()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x9E6EA8", Offset = "0x9E6EA8", VA = "0x9E6EA8")]
	public WelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002BE")]
public class OculusRiftGameModeParameterContainerController : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	public enum OculusGameModeSelectionEnum
	{
		[Token(Token = "0x4000E5E")]
		TargetTouch,
		[Token(Token = "0x4000E5F")]
		BlockIncomingObject
	}

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool parametersAlreadyCreated;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<OculusGameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersMap;

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xB05ED4", Offset = "0xB05ED4", VA = "0xB05ED4")]
	protected static void createGameModeParameterContainers()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xB060D0", Offset = "0xB060D0", VA = "0xB060D0")]
	public static GameModeParameterContainer getGameModeParameterContainerOfGameMode(OculusGameModeSelectionEnum gameModeSelectionEnum)
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xB062E4", Offset = "0xB062E4", VA = "0xB062E4")]
	public OculusRiftGameModeParameterContainerController()
	{
	}
}
[Token(Token = "0x20002C0")]
public class OculusRiftTargetTouchGameModeParameterContainer : TargetTouchGameModeParameterContainer
{
	[Token(Token = "0x4000E60")]
	private const string SCRIPT_NAME = "OculusRiftTargetTouchGameModeParameterContainer";

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private new int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xB079E0", Offset = "0xB079E0", VA = "0xB079E0", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xB06064", Offset = "0xB06064", VA = "0xB06064")]
	public OculusRiftTargetTouchGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20002C1")]
public class QuestHeadsetEventListener : MonoBehaviour
{
	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xAED138", Offset = "0xAED138", VA = "0xAED138")]
	private void Start()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xAED1E0", Offset = "0xAED1E0", VA = "0xAED1E0")]
	public void headsetDismounted()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xAED1FC", Offset = "0xAED1FC", VA = "0xAED1FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xAED2A4", Offset = "0xAED2A4", VA = "0xAED2A4")]
	public QuestHeadsetEventListener()
	{
	}
}
[Token(Token = "0x20002C2")]
public class OculusButtonListener : MonoBehaviour
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xB03D14", Offset = "0xB03D14", VA = "0xB03D14")]
	private void Update()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xB03DA0", Offset = "0xB03DA0", VA = "0xB03DA0")]
	public OculusButtonListener()
	{
	}
}
[Token(Token = "0x20002C3")]
public class OculusMenuButtonsPressedTester : MonoBehaviour
{
	[Token(Token = "0x6001112")]
	[Address(RVA = "0xB04250", Offset = "0xB04250", VA = "0xB04250")]
	private void Update()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xB04310", Offset = "0xB04310", VA = "0xB04310")]
	public OculusMenuButtonsPressedTester()
	{
	}
}
[Token(Token = "0x20002C4")]
public class PicoButtonPressedListener : MonoBehaviour
{
	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InputDevice> controllers;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimePassedService timePassedService;

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xAE0BEC", Offset = "0xAE0BEC", VA = "0xAE0BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xAE0DE4", Offset = "0xAE0DE4", VA = "0xAE0DE4")]
	public PicoButtonPressedListener()
	{
	}
}
[Token(Token = "0x20002C5")]
public class CountdownTimerPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SizeChanger textSizeChanger;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ObjectRotationController rotationController;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xB84458", Offset = "0xB84458", VA = "0xB84458")]
	public void performCountdownEffect()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xB84498", Offset = "0xB84498", VA = "0xB84498")]
	public CountdownTimerPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002C6")]
public class FillAmountTester : MonoBehaviour
{
	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image sliderImage;

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xA082D8", Offset = "0xA082D8", VA = "0xA082D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xA082F8", Offset = "0xA082F8", VA = "0xA082F8")]
	public FillAmountTester()
	{
	}
}
[Token(Token = "0x20002C7")]
public class HealthPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596ADC", Offset = "0x596ADC")]
	private sealed class <reduceSliderValue>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HealthPlayerHUDElementController <>4__this;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float newValue;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x8F367C", Offset = "0x8F367C", VA = "0x8F367C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x8F36C4", Offset = "0x8F36C4", VA = "0x8F36C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x8F34B0", Offset = "0x8F34B0", VA = "0x8F34B0")]
		[DebuggerHidden]
		public <reduceSliderValue>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x8F34DC", Offset = "0x8F34DC", VA = "0x8F34DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x8F34E0", Offset = "0x8F34E0", VA = "0x8F34E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x8F3684", Offset = "0x8F3684", VA = "0x8F3684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6A")]
	private const int PLAYER_MIN_HEALTH_INTEGER = 1;

	[Token(Token = "0x4000E6B")]
	private const float PLAYER_MIN_HEALTH_FLOAT = 0.2f;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Slider yellowSlider;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Slider redSlider;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image[] redFillImages;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image[] shieldImageAndYellowSlider;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color redFillImageStartingColor;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color shieldImageStartingColor;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip lowPlayerHealthWarning;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaitForSeconds waitFor10Millies;

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xACBFBC", Offset = "0xACBFBC", VA = "0xACBFBC", Slot = "4")]
	protected override void performSetupSpecific()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xACC08C", Offset = "0xACC08C", VA = "0xACC08C")]
	public void setPlayerEnergyStartValue(int playerEnergyRemaining)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xACC140", Offset = "0xACC140", VA = "0xACC140")]
	public void setPlayerEnergyValue(int playerEnergyRemaining)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xACC108", Offset = "0xACC108", VA = "0xACC108")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xACC2E4", Offset = "0xACC2E4", VA = "0xACC2E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2D64", Offset = "0x5A2D64")]
	private IEnumerator reduceSliderValue(float newValue)
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xACC36C", Offset = "0xACC36C", VA = "0xACC36C", Slot = "10")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xACC3BC", Offset = "0xACC3BC", VA = "0xACC3BC", Slot = "7")]
	protected override void resetSpecific()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xACC3F8", Offset = "0xACC3F8", VA = "0xACC3F8")]
	public HealthPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002C9")]
public class PlayerHUDConstants : MonoBehaviour
{
	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float PLAYER_HANDS_FADE_DURATION;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float PLAYER_COLOR_FADE_DURATION_SHORT;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PLAYER_COLOR_FADE_DURATION_LONG;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Color HUD_DEFAULT_ORANGE;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Color HUD_RED;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Color HUD_PURPLE;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Color HUD_YELLOW;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static Color HUD_LOSING_HEALTH_DARK_RED;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static Color HUD_PLAYER_HAND_DEACTIVATED;

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xAE3794", Offset = "0xAE3794", VA = "0xAE3794")]
	public PlayerHUDConstants()
	{
	}
}
[Token(Token = "0x20002CA")]
public class PlayerHUDController : MonoBehaviour
{
	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject timeRemainingHUDElement;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> timeRemainingHUDElementArrayList;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject countdownHUDElement;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> countdownHUDElementArrayList;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject generalTextHUDElement;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> generalTextHUDElementArrayList;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject healthHUDElement;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> healthHUDElementArrayList;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject leftHandHUDElement;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> leftHandHUDElementArrayList;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject rightHandHUDElement;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> rightHandHUDElementArrayList;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject pointAtObjectElement;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<PlayerHUDElementController> playerHUDElementControllers;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x17000192")]
	public GameObject TimeRemainingHUDElement
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0xAE393C", Offset = "0xAE393C", VA = "0xAE393C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000193")]
	public GameObject GeneralTextHUDElement
	{
		[Token(Token = "0x600112B")]
		[Address(RVA = "0xAE3944", Offset = "0xAE3944", VA = "0xAE3944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public GameObject HealthHUDElement
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0xAE394C", Offset = "0xAE394C", VA = "0xAE394C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public GameObject LeftHandHUDElement
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0xAE3954", Offset = "0xAE3954", VA = "0xAE3954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public GameObject RightHandHUDElement
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xAE395C", Offset = "0xAE395C", VA = "0xAE395C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000197")]
	public GameObject CountdownHUDElement
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xAE3964", Offset = "0xAE3964", VA = "0xAE3964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000198")]
	public List<GameObject> TimeRemainingHUDElementArrayList
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xAE396C", Offset = "0xAE396C", VA = "0xAE396C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public List<GameObject> CountdownHUDElementArrayList
	{
		[Token(Token = "0x6001131")]
		[Address(RVA = "0xAE3974", Offset = "0xAE3974", VA = "0xAE3974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public List<GameObject> GeneralTextHUDElementArrayList
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xAE397C", Offset = "0xAE397C", VA = "0xAE397C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019B")]
	public List<GameObject> HealthHUDElementArrayList
	{
		[Token(Token = "0x6001133")]
		[Address(RVA = "0xAE3984", Offset = "0xAE3984", VA = "0xAE3984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019C")]
	public List<GameObject> LeftHandHUDElementArrayList
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0xAE398C", Offset = "0xAE398C", VA = "0xAE398C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public List<GameObject> RightHandHUDElementArrayList
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0xAE3994", Offset = "0xAE3994", VA = "0xAE3994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019E")]
	public GameObject PointAtObjectElement
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0xAE399C", Offset = "0xAE399C", VA = "0xAE399C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xAE39A4", Offset = "0xAE39A4", VA = "0xAE39A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xAE3D28", Offset = "0xAE3D28", VA = "0xAE3D28")]
	public void setTimeActive(bool input)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xAE3D48", Offset = "0xAE3D48", VA = "0xAE3D48")]
	public void setHealthHUDActive(bool input)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xAE3D68", Offset = "0xAE3D68", VA = "0xAE3D68")]
	public void setLeftHandHUDActive(bool input)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xAE3D88", Offset = "0xAE3D88", VA = "0xAE3D88")]
	public void setRightHandHUDActive(bool input)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xAE3DA8", Offset = "0xAE3DA8", VA = "0xAE3DA8")]
	public void fadeOutEverythingExceptHandsHUDElements()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xAE3EEC", Offset = "0xAE3EEC", VA = "0xAE3EEC")]
	public void fadeInOnGameStart()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xAE3FE8", Offset = "0xAE3FE8", VA = "0xAE3FE8")]
	private void prepareHUDElementForFadeIn(GameObject hudElement, List<GameObject> objectsToPrepare)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xAE4094", Offset = "0xAE4094", VA = "0xAE4094")]
	private void prepareHandHUDElementForFadeIn(GameObject hudElement)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xAE413C", Offset = "0xAE413C", VA = "0xAE413C")]
	public void fadeOutOnGameEnd()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xAE42FC", Offset = "0xAE42FC", VA = "0xAE42FC")]
	public void onPaused()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xAE4418", Offset = "0xAE4418", VA = "0xAE4418")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xAE45A8", Offset = "0xAE45A8", VA = "0xAE45A8")]
	public void setAllElementsActive(bool input)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xAE4540", Offset = "0xAE4540", VA = "0xAE4540")]
	public void setAllInGameElementsActive(bool input)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xAE471C", Offset = "0xAE471C", VA = "0xAE471C")]
	public PlayerHUDController()
	{
	}
}
[Token(Token = "0x20002CB")]
public class PlayerHUDElementController : MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Image[] elementsToChange;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Color elementsOriginalColor;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SizeChanger sizeChanger;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ColorChanger colorChanger;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Text HUDElementText;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image textBackgroundImage;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool setupFinished;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xAE47A0", Offset = "0xAE47A0", VA = "0xAE47A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xAE3C2C", Offset = "0xAE3C2C", VA = "0xAE3C2C")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xAE47A4", Offset = "0xAE47A4", VA = "0xAE47A4", Slot = "4")]
	protected virtual void performSetupSpecific()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xAE47A8", Offset = "0xAE47A8", VA = "0xAE47A8", Slot = "5")]
	public virtual void setNumericValueOnText(int value)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xAE47F4", Offset = "0xAE47F4", VA = "0xAE47F4", Slot = "6")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xAE4910", Offset = "0xAE4910", VA = "0xAE4910", Slot = "7")]
	protected virtual void resetSpecific()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xAE4914", Offset = "0xAE4914", VA = "0xAE4914", Slot = "8")]
	protected virtual void resetColors()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xAE495C", Offset = "0xAE495C", VA = "0xAE495C")]
	public void startIncreaseDecreaseSizeLoop()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xAE4978", Offset = "0xAE4978", VA = "0xAE4978")]
	public void performIncreaseDecreaseSizeOnce()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xAE4994", Offset = "0xAE4994", VA = "0xAE4994")]
	public void performDecreaseIncreaseSizeOnce()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xAE49B0", Offset = "0xAE49B0", VA = "0xAE49B0")]
	public void startBlinkingColorChange(Color newColor)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xAE49EC", Offset = "0xAE49EC", VA = "0xAE49EC")]
	public void fadeBetweenColorsLoop(Color newColor, bool stopActiveCoroutine)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xAE4A30", Offset = "0xAE4A30", VA = "0xAE4A30")]
	public void fadeBetweenColorsOnce(Color newColor, float time)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xAE4A84", Offset = "0xAE4A84", VA = "0xAE4A84")]
	public void fadeFromColorToColor(Color newColor, float fadeTime)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xAE4AD8", Offset = "0xAE4AD8", VA = "0xAE4AD8")]
	public void setElementColors(Color newColor)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xAE4AFC", Offset = "0xAE4AFC", VA = "0xAE4AFC")]
	public void setText(string newText)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xAE4C74", Offset = "0xAE4C74", VA = "0xAE4C74", Slot = "9")]
	public virtual void onPaused()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xAE4CA8", Offset = "0xAE4CA8", VA = "0xAE4CA8", Slot = "10")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xAE4CAC", Offset = "0xAE4CAC", VA = "0xAE4CAC", Slot = "11")]
	public virtual void onUnPaused()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xAE4CB0", Offset = "0xAE4CB0", VA = "0xAE4CB0")]
	public PlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002CC")]
public class PlayerHUDTester : MonoBehaviour
{
	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHUDController playerHudController;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHUDElementController playerScoredHUDElement;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PointsPlayerHUDElementController pointsScoredHudElementController;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PointsPlayerHUDElementController pointsLostHUDElementController;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthPlayerHUDElementController playerHealthHUDElement;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayerHandHUDElementController playerHandHudElementController;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TimePlayerHUDElementController timePlayerHandHudElementController;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayerHUDElementController generalInfoController;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private CountdownTimerPlayerHUDElementController countdownController;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int playerHealth;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int timeRemaining;

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xAE4E0C", Offset = "0xAE4E0C", VA = "0xAE4E0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xAE5178", Offset = "0xAE5178", VA = "0xAE5178")]
	public PlayerHUDTester()
	{
	}
}
[Token(Token = "0x20002CD")]
public class PlayerHandHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596AEC", Offset = "0x596AEC")]
	private sealed class <sliderReloadCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandHUDElementController <>4__this;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <iterationChange>5__2;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x8FA9D4", Offset = "0x8FA9D4", VA = "0x8FA9D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x8FAA1C", Offset = "0x8FAA1C", VA = "0x8FAA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x8FA820", Offset = "0x8FA820", VA = "0x8FA820")]
		[DebuggerHidden]
		public <sliderReloadCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x8FA84C", Offset = "0x8FA84C", VA = "0x8FA84C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x8FA850", Offset = "0x8FA850", VA = "0x8FA850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x8FA9DC", Offset = "0x8FA9DC", VA = "0x8FA9DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA4")]
	private const float ITERATION_SLEEP_AMOUNT_MILISECONDS = 10f;

	[Token(Token = "0x4000EA5")]
	private const float ITERATION_SLEEP_AMOUNT_SECONDS = 0.01f;

	[Token(Token = "0x4000EA6")]
	private const float REACTIVATION_DURATION = 2000f;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image handActiveImage;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image handDeactivatedImage;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image[] sliderImages;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] objectsToFade;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image handBackground;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> objectsToFadeArrayList;

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xAE57D0", Offset = "0xAE57D0", VA = "0xAE57D0")]
	public void forceFieldDeactivated()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xAE602C", Offset = "0xAE602C", VA = "0xAE602C")]
	public void fadeInHudElements()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xAE6128", Offset = "0xAE6128", VA = "0xAE6128", Slot = "4")]
	protected override void performSetupSpecific()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xAE612C", Offset = "0xAE612C", VA = "0xAE612C")]
	private void createObjectsToFadeAsArray()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xAE61F4", Offset = "0xAE61F4", VA = "0xAE61F4")]
	public void setZeroAlphaOnHudElements()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xAE6258", Offset = "0xAE6258", VA = "0xAE6258")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xAE6290", Offset = "0xAE6290", VA = "0xAE6290")]
	public void startSliderReloadCoroutine()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xAE62CC", Offset = "0xAE62CC", VA = "0xAE62CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2E14", Offset = "0x5A2E14")]
	private IEnumerator sliderReloadCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xAE5B9C", Offset = "0xAE5B9C", VA = "0xAE5B9C")]
	public void handReactivated()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xAE56FC", Offset = "0xAE56FC", VA = "0xAE56FC")]
	public void setHandDeactivatedImageActive(bool input)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xAE5AB0", Offset = "0xAE5AB0", VA = "0xAE5AB0")]
	public void initializeValues()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xAE63C0", Offset = "0xAE63C0", VA = "0xAE63C0")]
	public PlayerHandHUDElementController()
	{
	}
}
[Token(Token = "0x20002CF")]
public class PointArrowAtTarget2D : MonoBehaviour
{
	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x170001A1")]
	public Transform Target
	{
		[Token(Token = "0x600116E")]
		[Address(RVA = "0xAE8758", Offset = "0xAE8758", VA = "0xAE8758")]
		get
		{
			return null;
		}
		[Token(Token = "0x600116F")]
		[Address(RVA = "0xAE8760", Offset = "0xAE8760", VA = "0xAE8760")]
		set
		{
		}
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xAE8768", Offset = "0xAE8768", VA = "0xAE8768")]
	private void Update()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xAE8940", Offset = "0xAE8940", VA = "0xAE8940")]
	public PointArrowAtTarget2D()
	{
	}
}
[Token(Token = "0x20002D0")]
public class PointsPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float maximumSize;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xAE89C0", Offset = "0xAE89C0", VA = "0xAE89C0")]
	public void setTextValue(int value)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xAE8A1C", Offset = "0xAE8A1C", VA = "0xAE8A1C")]
	public void pointScored(int pointsValue, bool maxPointIncrease)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xAE8B34", Offset = "0xAE8B34", VA = "0xAE8B34")]
	public void pointLost(int pointsValue, bool maxPointDecrease)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xAE8CBC", Offset = "0xAE8CBC", VA = "0xAE8CBC")]
	public PointsPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002D1")]
public class TimePlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int LAST_SECONDS_COUNTDOWN_VALUE;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xF12FF4", Offset = "0xF12FF4", VA = "0xF12FF4", Slot = "5")]
	public override void setNumericValueOnText(int value)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xF1318C", Offset = "0xF1318C", VA = "0xF1318C")]
	public TimePlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002D2")]
public class GetPlayerHandControllerService : MonoBehaviour
{
	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController playerHandController;

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xAC37D4", Offset = "0xAC37D4", VA = "0xAC37D4")]
	public PlayerHandController getPlayerHandController()
	{
		return null;
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xAC37DC", Offset = "0xAC37DC", VA = "0xAC37DC")]
	public GetPlayerHandControllerService()
	{
	}
}
[Token(Token = "0x20002D3")]
public class PlayerHandController : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum Hand_Type
	{
		[Token(Token = "0x4000ED5")]
		LEFT,
		[Token(Token = "0x4000ED6")]
		RIGHT
	}

	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596AFC", Offset = "0x596AFC")]
	private sealed class <startForceFieldRestartCoroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandController <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x8FA7D0", Offset = "0x8FA7D0", VA = "0x8FA7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x8FA818", Offset = "0x8FA818", VA = "0x8FA818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x8FA670", Offset = "0x8FA670", VA = "0x8FA670")]
		[DebuggerHidden]
		public <startForceFieldRestartCoroutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x8FA69C", Offset = "0x8FA69C", VA = "0x8FA69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x8FA6A0", Offset = "0x8FA6A0", VA = "0x8FA6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x8FA7D8", Offset = "0x8FA7D8", VA = "0x8FA7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B0C", Offset = "0x596B0C")]
	private sealed class <secondHalfOfForceFieldReloadCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandController <>4__this;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x8FA620", Offset = "0x8FA620", VA = "0x8FA620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x8FA668", Offset = "0x8FA668", VA = "0x8FA668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x8FA50C", Offset = "0x8FA50C", VA = "0x8FA50C")]
		[DebuggerHidden]
		public <secondHalfOfForceFieldReloadCoroutine>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x8FA538", Offset = "0x8FA538", VA = "0x8FA538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x8FA53C", Offset = "0x8FA53C", VA = "0x8FA53C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x8FA628", Offset = "0x8FA628", VA = "0x8FA628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialEmissionChanger materialEmissionChanger;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandHapticsController playerHandHapticsController;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material generalDeactivatedMaterial;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material specificDeactivatedMaterial;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material deactivatedMaterialToUse;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material generalActiveMaterial;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material specificActiveMaterial;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material activateMaterialToUse;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool forceFieldActive;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine forceFieldRestartCoroutine;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource loopingAudioSource;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip forceFieldDeactivatedAudio;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip forceFieldRestartingAudio_1;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip forceFieldRestartingAudio_2;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip forceFieldActivatedAudio;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PlayerHandHUDElementController handHUDController;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool infiniteEnergy;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Hand_Type handType;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool loadForceFieldOnStart;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool automaticallyStartForceFieldReload;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WaitForSeconds waitForTwoAndAHalfSeconds;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int reActivationDuration;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image sliderImage;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private DateTime reActivationStartTime;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool reActivationPaused;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private double reActivationTimeRemaining;

	[Token(Token = "0x170001A2")]
	public bool AutomaticallyStartForceFieldReload
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0xAE518C", Offset = "0xAE518C", VA = "0xAE518C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xAE5194", Offset = "0xAE5194", VA = "0xAE5194")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public bool InfiniteEnergy
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0xAE51A0", Offset = "0xAE51A0", VA = "0xAE51A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xAE51A8", Offset = "0xAE51A8", VA = "0xAE51A8")]
		set
		{
		}
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xAE51B4", Offset = "0xAE51B4", VA = "0xAE51B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xAE52C8", Offset = "0xAE52C8", VA = "0xAE52C8")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xAE55CC", Offset = "0xAE55CC", VA = "0xAE55CC")]
	public void touchedForbidenObjectType()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xAE54B4", Offset = "0xAE54B4", VA = "0xAE54B4")]
	public void setHandMaterial(bool useHandSpecificMaterial)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xAE5538", Offset = "0xAE5538", VA = "0xAE5538")]
	private void setupMaterialEmissionChanger(bool useHandSpecificMaterial)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xAE53E8", Offset = "0xAE53E8", VA = "0xAE53E8")]
	public void forceForceFieldActivation()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xAE5738", Offset = "0xAE5738", VA = "0xAE5738")]
	public void testDeactivateForceField()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xAE573C", Offset = "0xAE573C", VA = "0xAE573C")]
	public void performTestSetup()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xAE55FC", Offset = "0xAE55FC", VA = "0xAE55FC")]
	public void deactivateForceField()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xAE59A0", Offset = "0xAE59A0", VA = "0xAE59A0")]
	public void startForceFieldReload()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xAE5928", Offset = "0xAE5928", VA = "0xAE5928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2EC4", Offset = "0x5A2EC4")]
	private IEnumerator startForceFieldRestartCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xAE59F8", Offset = "0xAE59F8", VA = "0xAE59F8")]
	public void playerScoredPoint()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xAE5A1C", Offset = "0xAE5A1C", VA = "0xAE5A1C")]
	private void activateForceField()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xAE5788", Offset = "0xAE5788", VA = "0xAE5788")]
	private void stopForceFieldRestartCoroutine()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xAE5904", Offset = "0xAE5904", VA = "0xAE5904")]
	public void resetToDefaultMaterial()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xAE5CA8", Offset = "0xAE5CA8", VA = "0xAE5CA8")]
	public bool isForceFieldActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xAE5CCC", Offset = "0xAE5CCC", VA = "0xAE5CCC")]
	public void onPaused()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xAE5DB8", Offset = "0xAE5DB8", VA = "0xAE5DB8")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xAE5E38", Offset = "0xAE5E38", VA = "0xAE5E38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A2F24", Offset = "0x5A2F24")]
	private IEnumerator secondHalfOfForceFieldReloadCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xAE5EC0", Offset = "0xAE5EC0", VA = "0xAE5EC0")]
	public Hand_Type getHandType()
	{
		return default(Hand_Type);
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xAE5EC8", Offset = "0xAE5EC8", VA = "0xAE5EC8")]
	public PlayerHandHapticsController getPlayerHandHapticsController()
	{
		return null;
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xAE5ED0", Offset = "0xAE5ED0", VA = "0xAE5ED0")]
	public PlayerHandController()
	{
	}
}
[Token(Token = "0x20002D7")]
public class PlayerHandHapticsConstants
{
	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DEACTIVATION_HAPTICS_DURATION;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int DEACTIVATION_HAPTICS_STRENGTH;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int LOW_VIBRATION_DURATION;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int LOW_VIBRATION_STRENGHT;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ACTIVATION_HAPTICS_DURATION;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int ACTIVATION_HAPTICS_STRENGHT;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int POINT_SCORED_DURATION;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int POINT_SCORED_STRENGTH;

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xAE63C8", Offset = "0xAE63C8", VA = "0xAE63C8")]
	public PlayerHandHapticsConstants()
	{
	}
}
[Token(Token = "0x20002D8")]
public class PlayerHandHapticsController : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	public enum PLAYER_HAND_EVENT
	{
		[Token(Token = "0x4000EF9")]
		POINT_SCORED,
		[Token(Token = "0x4000EFA")]
		DEACTIVATED,
		[Token(Token = "0x4000EFB")]
		ACTIVATED,
		[Token(Token = "0x4000EFC")]
		LOW_VIBRATION
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B1C", Offset = "0x596B1C")]
	private sealed class <continuousVibrationCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x8FAAB0", Offset = "0x8FAAB0", VA = "0x8FAAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x8FAAF8", Offset = "0x8FAAF8", VA = "0x8FAAF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x8FAA24", Offset = "0x8FAA24", VA = "0x8FAA24")]
		[DebuggerHidden]
		public <continuousVibrationCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x8FAA50", Offset = "0x8FAA50", VA = "0x8FAA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x8FAA54", Offset = "0x8FAA54", VA = "0x8FAA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x8FAAB8", Offset = "0x8FAAB8", VA = "0x8FAAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B2C", Offset = "0x596B2C")]
	private sealed class <stopHapticsCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x8FAB8C", Offset = "0x8FAB8C", VA = "0x8FAB8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x8FABD4", Offset = "0x8FABD4", VA = "0x8FABD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x8FAB00", Offset = "0x8FAB00", VA = "0x8FAB00")]
		[DebuggerHidden]
		public <stopHapticsCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x8FAB2C", Offset = "0x8FAB2C", VA = "0x8FAB2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x8FAB30", Offset = "0x8FAB30", VA = "0x8FAB30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x8FAB94", Offset = "0x8FAB94", VA = "0x8FAB94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Coroutine currentCoroutine;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Coroutine currentContinuousVibrationCoroutine;

	[Token(Token = "0x4000EE8")]
	protected const float POINT_SCORED_AMPLITUDE = 0.2f;

	[Token(Token = "0x4000EE9")]
	protected const float POINT_SCORED_FREQUENCY = 0.2f;

	[Token(Token = "0x4000EEA")]
	protected const float POINT_SCORED_HAPTICS_DURATION = 0.2f;

	[Token(Token = "0x4000EEB")]
	protected const int POINT_SCORED_HAPTICS_DURATION_INT = 200;

	[Token(Token = "0x4000EEC")]
	protected const float ACTIVATED_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000EED")]
	protected const float ACTIVATED_FREQUENCY = 0.5f;

	[Token(Token = "0x4000EEE")]
	protected const float ACTIVATED_DURATION = 0.5f;

	[Token(Token = "0x4000EEF")]
	protected const int ACTIVATED_DURATION_INT = 500;

	[Token(Token = "0x4000EF0")]
	protected const float DEACTIVATED_AMPLITUDE = 1f;

	[Token(Token = "0x4000EF1")]
	protected const float DEACTIVATED_FREQUENCY = 1f;

	[Token(Token = "0x4000EF2")]
	protected const float DEACTIVATED_DURATION = 1f;

	[Token(Token = "0x4000EF3")]
	protected const int DEACTIVATED_DURATION_INT = 100;

	[Token(Token = "0x4000EF4")]
	protected const float LOW_VIBRATION_AMPLITUDE = 0.1f;

	[Token(Token = "0x4000EF5")]
	protected const float LOW_VIBRATION_FREQUENCY = 0.1f;

	[Token(Token = "0x4000EF6")]
	protected const float LOW_VIBRATION_DURATION = 0.5f;

	[Token(Token = "0x4000EF7")]
	protected const int LOW_VIBRATION_DURATION_INT = 500;

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xAE54A8", Offset = "0xAE54A8", VA = "0xAE54A8")]
	public void initalize()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xAE6470", Offset = "0xAE6470", VA = "0xAE6470", Slot = "4")]
	protected virtual void createHapticsValues()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xAE6474", Offset = "0xAE6474", VA = "0xAE6474", Slot = "5")]
	public virtual void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xAE6478", Offset = "0xAE6478", VA = "0xAE6478")]
	protected void stopCoroutines()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xAE652C", Offset = "0xAE652C", VA = "0xAE652C", Slot = "6")]
	public virtual void startLowVibration()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xAE64C0", Offset = "0xAE64C0", VA = "0xAE64C0")]
	protected void stopCurrentContinuousVibrationCoroutine()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xAE6530", Offset = "0xAE6530", VA = "0xAE6530", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3024", Offset = "0x5A3024")]
	protected virtual IEnumerator continuousVibrationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xAE658C", Offset = "0xAE658C", VA = "0xAE658C", Slot = "8")]
	public virtual void stopContinuousVibration()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xAE6590", Offset = "0xAE6590", VA = "0xAE6590", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3084", Offset = "0x5A3084")]
	protected virtual IEnumerator stopHapticsCoroutine(PLAYER_HAND_EVENT playerHandEvent)
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xAE64AC", Offset = "0xAE64AC", VA = "0xAE64AC")]
	protected void stopCurrentCoroutine()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xAE65EC", Offset = "0xAE65EC", VA = "0xAE65EC")]
	public PlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002DC")]
public class OculusPlayerHandHapticsController : PlayerHandHapticsController
{
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B3C", Offset = "0x596B3C")]
	private sealed class <continuousVibrationCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusPlayerHandHapticsController <>4__this;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x8F7334", Offset = "0x8F7334", VA = "0x8F7334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x8F737C", Offset = "0x8F737C", VA = "0x8F737C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x8F716C", Offset = "0x8F716C", VA = "0x8F716C")]
		[DebuggerHidden]
		public <continuousVibrationCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x8F7198", Offset = "0x8F7198", VA = "0x8F7198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x8F719C", Offset = "0x8F719C", VA = "0x8F719C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x8F733C", Offset = "0x8F733C", VA = "0x8F733C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B4C", Offset = "0x596B4C")]
	private sealed class <stopHapticsCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusPlayerHandHapticsController <>4__this;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PLAYER_HAND_EVENT playerHandEvent;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x8F74A0", Offset = "0x8F74A0", VA = "0x8F74A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x8F74E8", Offset = "0x8F74E8", VA = "0x8F74E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x8F7384", Offset = "0x8F7384", VA = "0x8F7384")]
		[DebuggerHidden]
		public <stopHapticsCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x8F73B0", Offset = "0x8F73B0", VA = "0x8F73B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x8F73B4", Offset = "0x8F73B4", VA = "0x8F73B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x8F74A8", Offset = "0x8F74A8", VA = "0x8F74A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.Controller controllerMask;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<PLAYER_HAND_EVENT, float[]> hapticsValues;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<PLAYER_HAND_EVENT, WaitForSecondsRealtime> waitForSeconds;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xB057F8", Offset = "0xB057F8", VA = "0xB057F8", Slot = "4")]
	protected override void createHapticsValues()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xB05AD8", Offset = "0xB05AD8", VA = "0xB05AD8", Slot = "5")]
	public override void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xB05BF4", Offset = "0xB05BF4", VA = "0xB05BF4", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3184", Offset = "0x5A3184")]
	protected override IEnumerator continuousVibrationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xB05C6C", Offset = "0xB05C6C", VA = "0xB05C6C", Slot = "8")]
	public override void stopContinuousVibration()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xB05CE8", Offset = "0xB05CE8", VA = "0xB05CE8", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A31E4", Offset = "0x5A31E4")]
	protected override IEnumerator stopHapticsCoroutine(PLAYER_HAND_EVENT playerHandEvent)
	{
		return null;
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xB05D70", Offset = "0xB05D70", VA = "0xB05D70", Slot = "6")]
	public override void startLowVibration()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xB05DF4", Offset = "0xB05DF4", VA = "0xB05DF4")]
	public OculusPlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002DF")]
public class PicoPlayerHandHapticsController : PlayerHandHapticsController
{
	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PXR_Input.Controller controller;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<PLAYER_HAND_EVENT, float> hapticsIntesinty;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<PLAYER_HAND_EVENT, int> hapticsDuration;

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xAE2104", Offset = "0xAE2104", VA = "0xAE2104", Slot = "4")]
	protected override void createHapticsValues()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xAE22D4", Offset = "0xAE22D4", VA = "0xAE22D4", Slot = "5")]
	public override void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xAE2388", Offset = "0xAE2388", VA = "0xAE2388", Slot = "6")]
	public override void startLowVibration()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xAE2424", Offset = "0xAE2424", VA = "0xAE2424", Slot = "8")]
	public override void stopContinuousVibration()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xAE2438", Offset = "0xAE2438", VA = "0xAE2438")]
	public PicoPlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002E0")]
public class OculusPlayerHandController : PlayerHandController
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private OVRInput.Controller controllerMask;

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xB057F0", Offset = "0xB057F0", VA = "0xB057F0")]
	public OculusPlayerHandController()
	{
	}
}
[Token(Token = "0x20002E1")]
public class PlayerHandTester : MonoBehaviour
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController leftHand;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandController rightHand;

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xAE65F4", Offset = "0xAE65F4", VA = "0xAE65F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xAE6628", Offset = "0xAE6628", VA = "0xAE6628")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xAE6688", Offset = "0xAE6688", VA = "0xAE6688")]
	public PlayerHandTester()
	{
	}
}
[Token(Token = "0x20002E2")]
public class MemoryLoadController : MonoBehaviour
{
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B5C", Offset = "0x596B5C")]
	private sealed class <preloadPatricleSystem>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x8F5AC4", Offset = "0x8F5AC4", VA = "0x8F5AC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x8F5B0C", Offset = "0x8F5B0C", VA = "0x8F5B0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x8F59F0", Offset = "0x8F59F0", VA = "0x8F59F0")]
		[DebuggerHidden]
		public <preloadPatricleSystem>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x8F5A1C", Offset = "0x8F5A1C", VA = "0x8F5A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x8F5A20", Offset = "0x8F5A20", VA = "0x8F5A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x8F5ACC", Offset = "0x8F5ACC", VA = "0x8F5ACC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B6C", Offset = "0x596B6C")]
	private sealed class <finalSetup>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x8F5118", Offset = "0x8F5118", VA = "0x8F5118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x8F5160", Offset = "0x8F5160", VA = "0x8F5160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x8F501C", Offset = "0x8F501C", VA = "0x8F501C")]
		[DebuggerHidden]
		public <finalSetup>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x8F5048", Offset = "0x8F5048", VA = "0x8F5048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x8F504C", Offset = "0x8F504C", VA = "0x8F504C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x8F5120", Offset = "0x8F5120", VA = "0x8F5120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B7C", Offset = "0x596B7C")]
	private sealed class <loadEffectsAndSpecificTextures>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoordinationCoachGameObject <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x8F5358", Offset = "0x8F5358", VA = "0x8F5358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x8F53A0", Offset = "0x8F53A0", VA = "0x8F53A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x8F5168", Offset = "0x8F5168", VA = "0x8F5168")]
		[DebuggerHidden]
		public <loadEffectsAndSpecificTextures>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x8F5194", Offset = "0x8F5194", VA = "0x8F5194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x8F5198", Offset = "0x8F5198", VA = "0x8F5198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x8F5360", Offset = "0x8F5360", VA = "0x8F5360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B8C", Offset = "0x596B8C")]
	private sealed class <loadHandSpecificTexturesGameObject>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoordinationCoachGameObject <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x8F5580", Offset = "0x8F5580", VA = "0x8F5580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x8F55C8", Offset = "0x8F55C8", VA = "0x8F55C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x8F53A8", Offset = "0x8F53A8", VA = "0x8F53A8")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesGameObject>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x8F53D4", Offset = "0x8F53D4", VA = "0x8F53D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x8F53D8", Offset = "0x8F53D8", VA = "0x8F53D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x8F5588", Offset = "0x8F5588", VA = "0x8F5588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596B9C", Offset = "0x596B9C")]
	private sealed class <loadHandSpecificTexturesTextureLoadController>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PreloadTexturesController <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x8F59A0", Offset = "0x8F59A0", VA = "0x8F59A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x8F59E8", Offset = "0x8F59E8", VA = "0x8F59E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x8F57E0", Offset = "0x8F57E0", VA = "0x8F57E0")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesTextureLoadController>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x8F580C", Offset = "0x8F580C", VA = "0x8F580C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x8F5810", Offset = "0x8F5810", VA = "0x8F5810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x8F59A8", Offset = "0x8F59A8", VA = "0x8F59A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BAC", Offset = "0x596BAC")]
	private sealed class <loadHandSpecificTexturesShattered>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FracturedPartsController <fracturedPartsController>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x8F5790", Offset = "0x8F5790", VA = "0x8F5790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x8F57D8", Offset = "0x8F57D8", VA = "0x8F57D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x8F55D0", Offset = "0x8F55D0", VA = "0x8F55D0")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesShattered>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x8F55FC", Offset = "0x8F55FC", VA = "0x8F55FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x8F5600", Offset = "0x8F5600", VA = "0x8F5600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x8F5798", Offset = "0x8F5798", VA = "0x8F5798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WaitForSeconds waitForOneTenthSecond;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected WaitForSeconds waitForOneTwentiethSecond;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem[] particleSystemsToPreLoad;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject effectLoadGameObject;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject effectLoadGameObjectDoNotTouch;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected GameObject[] colorLoadObjects;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject[] colorLoadObjectsDoNotTouch;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PreloadShadersController preloadShadersController;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PositionInFrontOfObjectController positionInFrontOfObjectController;

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xC5F318", Offset = "0xC5F318", VA = "0xC5F318")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xC5F31C", Offset = "0xC5F31C", VA = "0xC5F31C")]
	private void preloadIntoMemory()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xC5F748", Offset = "0xC5F748", VA = "0xC5F748", Slot = "4")]
	protected virtual void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xC5F63C", Offset = "0xC5F63C", VA = "0xC5F63C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A32E4", Offset = "0x5A32E4")]
	private IEnumerator preloadPatricleSystem(ParticleSystem particleSystem)
	{
		return null;
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xC5F6D0", Offset = "0xC5F6D0", VA = "0xC5F6D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3344", Offset = "0x5A3344")]
	private IEnumerator finalSetup()
	{
		return null;
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xC5F4FC", Offset = "0xC5F4FC", VA = "0xC5F4FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A33A4", Offset = "0x5A33A4")]
	private IEnumerator loadEffectsAndSpecificTextures(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xC5F74C", Offset = "0xC5F74C", VA = "0xC5F74C", Slot = "5")]
	protected virtual void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xC5F750", Offset = "0xC5F750", VA = "0xC5F750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3404", Offset = "0x5A3404")]
	private IEnumerator loadHandSpecificTexturesGameObject(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xC5F59C", Offset = "0xC5F59C", VA = "0xC5F59C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3464", Offset = "0x5A3464")]
	private IEnumerator loadHandSpecificTexturesTextureLoadController(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xC5F7F0", Offset = "0xC5F7F0", VA = "0xC5F7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A34C4", Offset = "0x5A34C4")]
	private IEnumerator loadHandSpecificTexturesShattered(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xC5F890", Offset = "0xC5F890", VA = "0xC5F890")]
	protected void disableAndRepositionObject(GameObject memoryLoadObject)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xC5F944", Offset = "0xC5F944", VA = "0xC5F944")]
	public MemoryLoadController()
	{
	}
}
[Token(Token = "0x20002E9")]
public class PreloadShadersController : MonoBehaviour
{
	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SHADER_VARIANTS_FOLDER;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string shaderVariantName;

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xAEAC94", Offset = "0xAEAC94", VA = "0xAEAC94")]
	public void preloadShaders()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xAEADF8", Offset = "0xAEADF8", VA = "0xAEADF8")]
	public PreloadShadersController()
	{
	}
}
[Token(Token = "0x20002EA")]
public class PreloadTexturesController : MonoBehaviour
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] renderers;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material anyHandMaterial;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material leftHandOnlyMaterial;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material rightHandOnlyMaterial;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material doNotTouchMaterial;

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xAEAEB8", Offset = "0xAEAEB8", VA = "0xAEAEB8")]
	private Material getMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xAEAEFC", Offset = "0xAEAEFC", VA = "0xAEAEFC")]
	public void setMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xAEAF40", Offset = "0xAEAF40", VA = "0xAEAF40")]
	private void setMaterialOnChildRenderers(Material inputMaterial)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xAEAFBC", Offset = "0xAEAFBC", VA = "0xAEAFBC")]
	public PreloadTexturesController()
	{
	}
}
[Token(Token = "0x20002EB")]
public class BlockIncomingMemoryLoadController : MemoryLoadController
{
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BBC", Offset = "0x596BBC")]
	private sealed class <loadAppearanceEffectDifferentColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject appearanceEffect;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlockIncomingMemoryLoadController <>4__this;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NormalObjectToBlockAppearanceEffectColorChanger <normalObjectToBlockAppearanceEffectColorChanger>5__2;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem <particleSystem>5__3;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x9ED808", Offset = "0x9ED808", VA = "0x9ED808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x9ED850", Offset = "0x9ED850", VA = "0x9ED850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x9ED5D0", Offset = "0x9ED5D0", VA = "0x9ED5D0")]
		[DebuggerHidden]
		public <loadAppearanceEffectDifferentColors>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x9ED5FC", Offset = "0x9ED5FC", VA = "0x9ED5FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x9ED600", Offset = "0x9ED600", VA = "0x9ED600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x9ED810", Offset = "0x9ED810", VA = "0x9ED810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] appearanceEffectsWithDifferentColors;

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x9D9E74", Offset = "0x9D9E74", VA = "0x9D9E74", Slot = "5")]
	protected override void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x9D9ED4", Offset = "0x9D9ED4", VA = "0x9D9ED4", Slot = "4")]
	protected override void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x9D9F5C", Offset = "0x9D9F5C", VA = "0x9D9F5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3704", Offset = "0x5A3704")]
	private IEnumerator loadAppearanceEffectDifferentColors(GameObject appearanceEffect)
	{
		return null;
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x9D9FF0", Offset = "0x9D9FF0", VA = "0x9D9FF0")]
	public BlockIncomingMemoryLoadController()
	{
	}
}
[Token(Token = "0x20002ED")]
public class TargetTouchMemoryLoadController : MemoryLoadController
{
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BCC", Offset = "0x596BCC")]
	private sealed class <preloadInactiveTouched>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputGameObject;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetTouchMemoryLoadController <>4__this;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TargetObject <targetObject>5__2;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x8FF014", Offset = "0x8FF014", VA = "0x8FF014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x8FF05C", Offset = "0x8FF05C", VA = "0x8FF05C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x8FEEFC", Offset = "0x8FEEFC", VA = "0x8FEEFC")]
		[DebuggerHidden]
		public <preloadInactiveTouched>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x8FEF28", Offset = "0x8FEF28", VA = "0x8FEF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x8FEF2C", Offset = "0x8FEF2C", VA = "0x8FEF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x8FF01C", Offset = "0x8FF01C", VA = "0x8FF01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BDC", Offset = "0x596BDC")]
	private sealed class <preloadForceField>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchMemoryLoadController <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x8FEEAC", Offset = "0x8FEEAC", VA = "0x8FEEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x8FEEF4", Offset = "0x8FEEF4", VA = "0x8FEEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8FEDAC", Offset = "0x8FEDAC", VA = "0x8FEDAC")]
		[DebuggerHidden]
		public <preloadForceField>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8FEDD8", Offset = "0x8FEDD8", VA = "0x8FEDD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x8FEDDC", Offset = "0x8FEDDC", VA = "0x8FEDDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x8FEEB4", Offset = "0x8FEEB4", VA = "0x8FEEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TargetTouchForceFieldController targetTouchForceFieldController;

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xB9EE84", Offset = "0xB9EE84", VA = "0xB9EE84", Slot = "5")]
	protected override void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xB9EEB0", Offset = "0xB9EEB0", VA = "0xB9EEB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A37B4", Offset = "0x5A37B4")]
	private IEnumerator preloadInactiveTouched(GameObject inputGameObject)
	{
		return null;
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xB9EF44", Offset = "0xB9EF44", VA = "0xB9EF44", Slot = "4")]
	protected override void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xB9EF70", Offset = "0xB9EF70", VA = "0xB9EF70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3814", Offset = "0x5A3814")]
	private IEnumerator preloadForceField()
	{
		return null;
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xB9EFE8", Offset = "0xB9EFE8", VA = "0xB9EFE8")]
	public TargetTouchMemoryLoadController()
	{
	}
}
[Token(Token = "0x20002F0")]
public class AudioSourceTest : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip playLooping;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip playOnce;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x9D7500", Offset = "0x9D7500", VA = "0x9D7500")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x9D75B0", Offset = "0x9D75B0", VA = "0x9D75B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x9D75FC", Offset = "0x9D75FC", VA = "0x9D75FC")]
	public AudioSourceTest()
	{
	}
}
[Token(Token = "0x20002F1")]
public class ConcurrentQueueTestScript : MonoBehaviour
{
	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToAdd;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConcurrentQueue<GameObject> concurrentQueue;

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xB7B248", Offset = "0xB7B248", VA = "0xB7B248")]
	private void Update()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xB7B308", Offset = "0xB7B308", VA = "0xB7B308")]
	public ConcurrentQueueTestScript()
	{
	}
}
[Token(Token = "0x20002F2")]
public class DisappearOnTouch : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioController audioController;

	[Token(Token = "0x170001C2")]
	public AudioController AudioController
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x9FA044", Offset = "0x9FA044", VA = "0x9FA044")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x9FA04C", Offset = "0x9FA04C", VA = "0x9FA04C")]
		set
		{
		}
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x9FA054", Offset = "0x9FA054", VA = "0x9FA054")]
	public void touchedByUser()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x9FA0E0", Offset = "0x9FA0E0", VA = "0x9FA0E0")]
	public DisappearOnTouch()
	{
	}
}
[Token(Token = "0x20002F3")]
public class FragmentingObjectsColorChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xABD138", Offset = "0xABD138", VA = "0xABD138")]
	private void Start()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xABD150", Offset = "0xABD150", VA = "0xABD150")]
	private void Update()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xABD1D8", Offset = "0xABD1D8", VA = "0xABD1D8")]
	public FragmentingObjectsColorChangeTester()
	{
	}
}
[Token(Token = "0x20002F4")]
public class GUIElementMover : MonoBehaviour
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_DistanceFromCamera;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform m_RectTransform;

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xABD1E8", Offset = "0xABD1E8", VA = "0xABD1E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xABD244", Offset = "0xABD244", VA = "0xABD244")]
	private void Update()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xABD368", Offset = "0xABD368", VA = "0xABD368")]
	public GUIElementMover()
	{
	}
}
[Token(Token = "0x20002F5")]
public class MaterialEmissionChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialEmissionChanger materialEmissionChanger;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x1589FAC", Offset = "0x1589FAC", VA = "0x1589FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1589FB0", Offset = "0x1589FB0", VA = "0x1589FB0")]
	public MaterialEmissionChangeTester()
	{
	}
}
[Token(Token = "0x20002F6")]
public class ObjectInfoTester : MonoBehaviour
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToInstantiate;

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xC6EA00", Offset = "0xC6EA00", VA = "0xC6EA00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xC6EAA0", Offset = "0xC6EAA0", VA = "0xC6EAA0")]
	public ObjectInfoTester()
	{
	}
}
[Token(Token = "0x20002F7")]
public class RotateObjectTest : MonoBehaviour
{
	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToRotate;

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xAF28B0", Offset = "0xAF28B0", VA = "0xAF28B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xAF2968", Offset = "0xAF2968", VA = "0xAF2968")]
	public RotateObjectTest()
	{
	}
}
[Token(Token = "0x20002F8")]
public class SimpleLog : MonoBehaviour
{
	[Token(Token = "0x600123C")]
	[Address(RVA = "0xAF7A58", Offset = "0xAF7A58", VA = "0xAF7A58")]
	private void Update()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xAF7ACC", Offset = "0xAF7ACC", VA = "0xAF7ACC")]
	public SimpleLog()
	{
	}
}
[Token(Token = "0x20002F9")]
public class StopAndRestartCountdownTest : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BEC", Offset = "0x596BEC")]
	private sealed class <countdownCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x8FD030", Offset = "0x8FD030", VA = "0x8FD030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x8FD078", Offset = "0x8FD078", VA = "0x8FD078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x8FCECC", Offset = "0x8FCECC", VA = "0x8FCECC")]
		[DebuggerHidden]
		public <countdownCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x8FCEF8", Offset = "0x8FCEF8", VA = "0x8FCEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8FCEFC", Offset = "0x8FCEFC", VA = "0x8FCEFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x8FD038", Offset = "0x8FD038", VA = "0x8FD038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime activationTime;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool activationPaused;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double activationTimeRemaining;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double activationDuration;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine activeCountdownCoroutine;

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xB93B88", Offset = "0xB93B88", VA = "0xB93B88")]
	private void Update()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xB93D48", Offset = "0xB93D48", VA = "0xB93D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3914", Offset = "0x5A3914")]
	private IEnumerator countdownCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xB93DBC", Offset = "0xB93DBC", VA = "0xB93DBC")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xB93E04", Offset = "0xB93E04", VA = "0xB93E04")]
	public StopAndRestartCountdownTest()
	{
	}
}
[Token(Token = "0x20002FB")]
public class StopCoroutinesTest_1 : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596BFC", Offset = "0x596BFC")]
	private sealed class <DoSomething1>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x8FD160", Offset = "0x8FD160", VA = "0x8FD160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x8FD1A8", Offset = "0x8FD1A8", VA = "0x8FD1A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x8FD080", Offset = "0x8FD080", VA = "0x8FD080")]
		[DebuggerHidden]
		public <DoSomething1>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x8FD0AC", Offset = "0x8FD0AC", VA = "0x8FD0AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x8FD0B0", Offset = "0x8FD0B0", VA = "0x8FD0B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x8FD168", Offset = "0x8FD168", VA = "0x8FD168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C0C", Offset = "0x596C0C")]
	private sealed class <DoSomething2>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x8FD290", Offset = "0x8FD290", VA = "0x8FD290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x8FD2D8", Offset = "0x8FD2D8", VA = "0x8FD2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x8FD1B0", Offset = "0x8FD1B0", VA = "0x8FD1B0")]
		[DebuggerHidden]
		public <DoSomething2>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x8FD1DC", Offset = "0x8FD1DC", VA = "0x8FD1DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x8FD1E0", Offset = "0x8FD1E0", VA = "0x8FD1E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x8FD298", Offset = "0x8FD298", VA = "0x8FD298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xB93E18", Offset = "0xB93E18", VA = "0xB93E18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A39C4", Offset = "0x5A39C4")]
	private IEnumerator DoSomething1()
	{
		return null;
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xB93E74", Offset = "0xB93E74", VA = "0xB93E74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3A24", Offset = "0x5A3A24")]
	private IEnumerator DoSomething2()
	{
		return null;
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xB93ED0", Offset = "0xB93ED0", VA = "0xB93ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xB93F44", Offset = "0xB93F44", VA = "0xB93F44")]
	private void Update()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xB93FF8", Offset = "0xB93FF8", VA = "0xB93FF8")]
	public StopCoroutinesTest_1()
	{
	}
}
[Token(Token = "0x20002FE")]
public class StopCoroutinesTest_2 : MonoBehaviour
{
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C1C", Offset = "0x596C1C")]
	private sealed class <DoSomething1>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x8FD3C0", Offset = "0x8FD3C0", VA = "0x8FD3C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x8FD408", Offset = "0x8FD408", VA = "0x8FD408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x8FD2E0", Offset = "0x8FD2E0", VA = "0x8FD2E0")]
		[DebuggerHidden]
		public <DoSomething1>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x8FD30C", Offset = "0x8FD30C", VA = "0x8FD30C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x8FD310", Offset = "0x8FD310", VA = "0x8FD310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x8FD3C8", Offset = "0x8FD3C8", VA = "0x8FD3C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C2C", Offset = "0x596C2C")]
	private sealed class <DoSomething2>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x8FD4F0", Offset = "0x8FD4F0", VA = "0x8FD4F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x8FD538", Offset = "0x8FD538", VA = "0x8FD538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x8FD410", Offset = "0x8FD410", VA = "0x8FD410")]
		[DebuggerHidden]
		public <DoSomething2>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x8FD43C", Offset = "0x8FD43C", VA = "0x8FD43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x8FD440", Offset = "0x8FD440", VA = "0x8FD440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x8FD4F8", Offset = "0x8FD4F8", VA = "0x8FD4F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xB94000", Offset = "0xB94000", VA = "0xB94000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3B24", Offset = "0x5A3B24")]
	private IEnumerator DoSomething1()
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xB9405C", Offset = "0xB9405C", VA = "0xB9405C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3B84", Offset = "0x5A3B84")]
	private IEnumerator DoSomething2()
	{
		return null;
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xB940B8", Offset = "0xB940B8", VA = "0xB940B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xB9412C", Offset = "0xB9412C", VA = "0xB9412C")]
	public StopCoroutinesTest_2()
	{
	}
}
[Token(Token = "0x2000301")]
public class TestAndroidLogging : MonoBehaviour
{
	[Token(Token = "0x6001269")]
	[Address(RVA = "0xBA4584", Offset = "0xBA4584", VA = "0xBA4584")]
	private void Start()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xBA4588", Offset = "0xBA4588", VA = "0xBA4588")]
	private void Update()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xBA45FC", Offset = "0xBA45FC", VA = "0xBA45FC")]
	public TestAndroidLogging()
	{
	}
}
[Token(Token = "0x2000302")]
public class AppearanceTester : MonoBehaviour
{
	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int i;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject targetObject;

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x9D5730", Offset = "0x9D5730", VA = "0x9D5730")]
	private void Start()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x9D57F4", Offset = "0x9D57F4", VA = "0x9D57F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x9D57F8", Offset = "0x9D57F8", VA = "0x9D57F8")]
	public AppearanceTester()
	{
	}
}
[Token(Token = "0x2000303")]
public class AudioControllerTester : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C3C", Offset = "0x596C3C")]
	private sealed class <testCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioControllerTester <>4__this;

		[Token(Token = "0x170001CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x9ED448", Offset = "0x9ED448", VA = "0x9ED448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x9ED490", Offset = "0x9ED490", VA = "0x9ED490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x9ED334", Offset = "0x9ED334", VA = "0x9ED334")]
		[DebuggerHidden]
		public <testCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x9ED360", Offset = "0x9ED360", VA = "0x9ED360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x9ED364", Offset = "0x9ED364", VA = "0x9ED364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x9ED450", Offset = "0x9ED450", VA = "0x9ED450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x9D7454", Offset = "0x9D7454", VA = "0x9D7454")]
	private void Start()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x9D7480", Offset = "0x9D7480", VA = "0x9D7480")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3C84", Offset = "0x5A3C84")]
	private IEnumerator testCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x9D74F8", Offset = "0x9D74F8", VA = "0x9D74F8")]
	public AudioControllerTester()
	{
	}
}
[Token(Token = "0x2000305")]
public class BezierCurveTest : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C4C", Offset = "0x596C4C")]
	private sealed class <startMovementCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierCurveTest <>4__this;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x9ED580", Offset = "0x9ED580", VA = "0x9ED580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x9ED5C8", Offset = "0x9ED5C8", VA = "0x9ED5C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x9ED498", Offset = "0x9ED498", VA = "0x9ED498")]
		[DebuggerHidden]
		public <startMovementCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x9ED4C4", Offset = "0x9ED4C4", VA = "0x9ED4C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x9ED4C8", Offset = "0x9ED4C8", VA = "0x9ED4C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x9ED588", Offset = "0x9ED588", VA = "0x9ED588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mTimer;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] bezierCurvePoints;

	[Token(Token = "0x4000F7A")]
	private const float BEZIER_CURVE_QUARTER_MULTIPLIER = 0.25f;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxDistance;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float journeyTime;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float bezierJourneyTime;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float bezierMovementSpeed;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool startMovement;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float bezierDistance;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x9D8D20", Offset = "0x9D8D20", VA = "0x9D8D20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x9D8FFC", Offset = "0x9D8FFC", VA = "0x9D8FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3D34", Offset = "0x5A3D34")]
	private IEnumerator startMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x9D9074", Offset = "0x9D9074", VA = "0x9D9074")]
	private void UpDownCurve()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x9D9078", Offset = "0x9D9078", VA = "0x9D9078")]
	private void leftRightUpDownCurve()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x9D907C", Offset = "0x9D907C", VA = "0x9D907C")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x9D90A8", Offset = "0x9D90A8", VA = "0x9D90A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x9D90B8", Offset = "0x9D90B8", VA = "0x9D90B8")]
	private void moveAlongBezierCurve()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x9D921C", Offset = "0x9D921C", VA = "0x9D921C")]
	private Vector3 getPointOnBezierCurve(float input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x9D9350", Offset = "0x9D9350", VA = "0x9D9350", Slot = "4")]
	protected virtual float getMTimerValue(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x9D8EE8", Offset = "0x9D8EE8", VA = "0x9D8EE8")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x9D935C", Offset = "0x9D935C", VA = "0x9D935C")]
	private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x9D93F0", Offset = "0x9D93F0", VA = "0x9D93F0")]
	public BezierCurveTest()
	{
	}
}
[Token(Token = "0x2000307")]
public class BezierSolutionTester : MonoBehaviour
{
	[Token(Token = "0x600128A")]
	[Address(RVA = "0x9D946C", Offset = "0x9D946C", VA = "0x9D946C")]
	private void Start()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x9D9604", Offset = "0x9D9604", VA = "0x9D9604")]
	private void Update()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x9D9608", Offset = "0x9D9608", VA = "0x9D9608")]
	public BezierSolutionTester()
	{
	}
}
[Token(Token = "0x2000308")]
public class CreateListFromNullArrayTestScript : MonoBehaviour
{
	[Token(Token = "0x600128D")]
	[Address(RVA = "0xB85208", Offset = "0xB85208", VA = "0xB85208")]
	private void Start()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xB85294", Offset = "0xB85294", VA = "0xB85294")]
	private void Update()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xB85298", Offset = "0xB85298", VA = "0xB85298")]
	public CreateListFromNullArrayTestScript()
	{
	}
}
[Token(Token = "0x2000309")]
public class DictionaryIterationTester : MonoBehaviour
{
	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ConcurrentDictionary<string, int> prefabsZPos;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long currentTemporaryYPos;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private long STARTING_TEMPORARY_Y_POS;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int TEMPORARY_Y_POS_LIMIT;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int TEMPORARY_Y_POS_ITERATOR;

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x9F95C4", Offset = "0x9F95C4", VA = "0x9F95C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x9F972C", Offset = "0x9F972C", VA = "0x9F972C")]
	protected float getZPos(string objectType)
	{
		return default(float);
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x9F96D8", Offset = "0x9F96D8", VA = "0x9F96D8")]
	protected float getTemporaryYPos()
	{
		return default(float);
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x9F986C", Offset = "0x9F986C", VA = "0x9F986C")]
	public DictionaryIterationTester()
	{
	}
}
[Token(Token = "0x200030A")]
public class QueueTester : MonoBehaviour
{
	[Token(Token = "0x6001294")]
	[Address(RVA = "0xAED2AC", Offset = "0xAED2AC", VA = "0xAED2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xAED404", Offset = "0xAED404", VA = "0xAED404")]
	private void Update()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xAED408", Offset = "0xAED408", VA = "0xAED408")]
	public QueueTester()
	{
	}
}
[Token(Token = "0x200030B")]
public class RandomNumberTester : MonoBehaviour
{
	[Token(Token = "0x6001297")]
	[Address(RVA = "0xAED584", Offset = "0xAED584", VA = "0xAED584")]
	private void Start()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xAED588", Offset = "0xAED588", VA = "0xAED588")]
	private void Update()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xAED67C", Offset = "0xAED67C", VA = "0xAED67C")]
	public RandomNumberTester()
	{
	}
}
[Token(Token = "0x200030C")]
public class StringBuilderTester : MonoBehaviour
{
	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected CoordinationCoachGameObject.ActivationType currentActivationType;

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xB94134", Offset = "0xB94134", VA = "0xB94134")]
	private void Start()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xB94780", Offset = "0xB94780", VA = "0xB94780")]
	private void Update()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xB94784", Offset = "0xB94784", VA = "0xB94784")]
	public StringBuilderTester()
	{
	}
}
[Token(Token = "0x200030D")]
public class TestCorrectLowerBoundaryValue : MonoBehaviour
{
	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float appearanceLimit;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float boundaryLimit;

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xBA48AC", Offset = "0xBA48AC", VA = "0xBA48AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xBA495C", Offset = "0xBA495C", VA = "0xBA495C")]
	private void Update()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xBA4960", Offset = "0xBA4960", VA = "0xBA4960")]
	public TestCorrectLowerBoundaryValue()
	{
	}
}
[Token(Token = "0x200030E")]
public class CoroutineTester : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C5C", Offset = "0x596C5C")]
	private sealed class <timingTestCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x9F2D7C", Offset = "0x9F2D7C", VA = "0x9F2D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x9F2DC4", Offset = "0x9F2DC4", VA = "0x9F2DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x9F2B38", Offset = "0x9F2B38", VA = "0x9F2B38")]
		[DebuggerHidden]
		public <timingTestCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x9F2B64", Offset = "0x9F2B64", VA = "0x9F2B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x9F2B68", Offset = "0x9F2B68", VA = "0x9F2B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x9F2D84", Offset = "0x9F2D84", VA = "0x9F2D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C6C", Offset = "0x596C6C")]
	private sealed class <firstWaitCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x9F2990", Offset = "0x9F2990", VA = "0x9F2990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x9F29D8", Offset = "0x9F29D8", VA = "0x9F29D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x9F2888", Offset = "0x9F2888", VA = "0x9F2888")]
		[DebuggerHidden]
		public <firstWaitCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x9F28B4", Offset = "0x9F28B4", VA = "0x9F28B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x9F28B8", Offset = "0x9F28B8", VA = "0x9F28B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x9F2998", Offset = "0x9F2998", VA = "0x9F2998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C7C", Offset = "0x596C7C")]
	private sealed class <secondWaitCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x9F2AE8", Offset = "0x9F2AE8", VA = "0x9F2AE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x9F2B30", Offset = "0x9F2B30", VA = "0x9F2B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x9F29E0", Offset = "0x9F29E0", VA = "0x9F29E0")]
		[DebuggerHidden]
		public <secondWaitCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x9F2A0C", Offset = "0x9F2A0C", VA = "0x9F2A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x9F2A10", Offset = "0x9F2A10", VA = "0x9F2A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x9F2AF0", Offset = "0x9F2AF0", VA = "0x9F2AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text textToChange;

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xB842BC", Offset = "0xB842BC", VA = "0xB842BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xB842E8", Offset = "0xB842E8", VA = "0xB842E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3DE4", Offset = "0x5A3DE4")]
	private IEnumerator timingTestCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xB84360", Offset = "0xB84360", VA = "0xB84360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3E44", Offset = "0x5A3E44")]
	private IEnumerator firstWaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xB843D8", Offset = "0xB843D8", VA = "0xB843D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3EA4", Offset = "0x5A3EA4")]
	private IEnumerator secondWaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xB84450", Offset = "0xB84450", VA = "0xB84450")]
	public CoroutineTester()
	{
	}
}
[Token(Token = "0x2000312")]
public class StopAllCoroutineTester : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C8C", Offset = "0x596C8C")]
	private sealed class <stopEvertyhing>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StopAllCoroutineTester <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x8FCE7C", Offset = "0x8FCE7C", VA = "0x8FCE7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x8FCEC4", Offset = "0x8FCEC4", VA = "0x8FCEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x8FCD94", Offset = "0x8FCD94", VA = "0x8FCD94")]
		[DebuggerHidden]
		public <stopEvertyhing>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x8FCDC0", Offset = "0x8FCDC0", VA = "0x8FCDC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x8FCDC4", Offset = "0x8FCDC4", VA = "0x8FCDC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x8FCE84", Offset = "0x8FCE84", VA = "0x8FCE84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xB93ADC", Offset = "0xB93ADC", VA = "0xB93ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xB93B08", Offset = "0xB93B08", VA = "0xB93B08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A3FF4", Offset = "0x5A3FF4")]
	private IEnumerator stopEvertyhing()
	{
		return null;
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xB93B80", Offset = "0xB93B80", VA = "0xB93B80")]
	public StopAllCoroutineTester()
	{
	}
}
[Token(Token = "0x2000314")]
public class ValidCreationAreaTester : MonoBehaviour
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObjectAppearancePositionHelper objectAppearancePositionHelper;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xF221AC", Offset = "0xF221AC", VA = "0xF221AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xF2291C", Offset = "0xF2291C", VA = "0xF2291C")]
	public ValidCreationAreaTester()
	{
	}
}
[Token(Token = "0x2000315")]
public class CurveTools : MonoBehaviour
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xB85C60", Offset = "0xB85C60", VA = "0xB85C60")]
	public CurveTools(params Vector3[] pts)
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xB85CF0", Offset = "0xB85CF0", VA = "0xB85CF0")]
	public Vector3 Interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xB85EB0", Offset = "0xB85EB0", VA = "0xB85EB0")]
	public Vector3 Velocity(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000316")]
public class DisappearanceTester : MonoBehaviour
{
	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x9FA0E8", Offset = "0x9FA0E8", VA = "0x9FA0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x9FA0EC", Offset = "0x9FA0EC", VA = "0x9FA0EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x9FA0F0", Offset = "0x9FA0F0", VA = "0x9FA0F0")]
	public DisappearanceTester()
	{
	}
}
[Token(Token = "0x2000317")]
public class AppearanceEffectColorChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject updateColorGameObjects;

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x9D53C8", Offset = "0x9D53C8", VA = "0x9D53C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x9D5728", Offset = "0x9D5728", VA = "0x9D5728")]
	public AppearanceEffectColorChangeTester()
	{
	}
}
[Token(Token = "0x2000318")]
public class AddForceTester : MonoBehaviour
{
	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thrust;

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x9CEDBC", Offset = "0x9CEDBC", VA = "0x9CEDBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x9CEF4C", Offset = "0x9CEF4C", VA = "0x9CEF4C")]
	public AddForceTester()
	{
	}
}
[Token(Token = "0x2000319")]
public class AddForceToChildren : MonoBehaviour
{
	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float force;

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x9CEF5C", Offset = "0x9CEF5C", VA = "0x9CEF5C")]
	public void addForceToChildren(Collision collision)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x9CF0BC", Offset = "0x9CF0BC", VA = "0x9CF0BC")]
	public AddForceToChildren()
	{
	}
}
[Token(Token = "0x200031A")]
public class ActivateFractured : MonoBehaviour
{
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596C9C", Offset = "0x596C9C")]
	private sealed class <activateFragmentation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivateFractured <>4__this;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x9E9EB0", Offset = "0x9E9EB0", VA = "0x9E9EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x9E9EF8", Offset = "0x9E9EF8", VA = "0x9E9EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x9E9DB4", Offset = "0x9E9DB4", VA = "0x9E9DB4")]
		[DebuggerHidden]
		public <activateFragmentation>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x9E9DE0", Offset = "0x9E9DE0", VA = "0x9E9DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x9E9DE4", Offset = "0x9E9DE4", VA = "0x9E9DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x9E9EB8", Offset = "0x9E9EB8", VA = "0x9E9EB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public FracturedPartsController fracturedPartsController;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CoordinationCoachPoolController coordinationCoachPoolController;

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x9CE9C8", Offset = "0x9CE9C8", VA = "0x9CE9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x9CE9F4", Offset = "0x9CE9F4", VA = "0x9CE9F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A40A4", Offset = "0x5A40A4")]
	private IEnumerator activateFragmentation()
	{
		return null;
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x9CEA6C", Offset = "0x9CEA6C", VA = "0x9CEA6C")]
	public ActivateFractured()
	{
	}
}
[Token(Token = "0x200031C")]
public class ActivateFragmentsTester : MonoBehaviour
{
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CAC", Offset = "0x596CAC")]
	private sealed class <activateFragmentationCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivateFragmentsTester <>4__this;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x9EA008", Offset = "0x9EA008", VA = "0x9EA008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x9EA050", Offset = "0x9EA050", VA = "0x9EA050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x9E9F00", Offset = "0x9E9F00", VA = "0x9E9F00")]
		[DebuggerHidden]
		public <activateFragmentationCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x9E9F2C", Offset = "0x9E9F2C", VA = "0x9E9F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x9E9F30", Offset = "0x9E9F30", VA = "0x9E9F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x9EA010", Offset = "0x9EA010", VA = "0x9EA010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x9CEA74", Offset = "0x9CEA74", VA = "0x9CEA74")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x9CEAB4", Offset = "0x9CEAB4", VA = "0x9CEAB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4154", Offset = "0x5A4154")]
	private IEnumerator activateFragmentationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x9CEB2C", Offset = "0x9CEB2C", VA = "0x9CEB2C")]
	public ActivateFragmentsTester()
	{
	}
}
[Token(Token = "0x200031E")]
public class FracturedObjectTest : MonoBehaviour
{
	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject toInstantiate;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xABA36C", Offset = "0xABA36C", VA = "0xABA36C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xABA42C", Offset = "0xABA42C", VA = "0xABA42C")]
	public FracturedObjectTest()
	{
	}
}
[Token(Token = "0x200031F")]
public class ColorEndurancePlanes : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CBC", Offset = "0x596CBC")]
	private sealed class <colorPlanes>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorEndurancePlanes <>4__this;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x9F1840", Offset = "0x9F1840", VA = "0x9F1840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x9F1888", Offset = "0x9F1888", VA = "0x9F1888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x9F16B4", Offset = "0x9F16B4", VA = "0x9F16B4")]
		[DebuggerHidden]
		public <colorPlanes>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x9F16E0", Offset = "0x9F16E0", VA = "0x9F16E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x9F16E4", Offset = "0x9F16E4", VA = "0x9F16E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x9F1848", Offset = "0x9F1848", VA = "0x9F1848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material firstPlaneMaterial;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material fifthPlaneMaterial;

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xB7A98C", Offset = "0xB7A98C", VA = "0xB7A98C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xB7A9B8", Offset = "0xB7A9B8", VA = "0xB7A9B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4204", Offset = "0x5A4204")]
	private IEnumerator colorPlanes()
	{
		return null;
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xB7AA30", Offset = "0xB7AA30", VA = "0xB7AA30")]
	public ColorEndurancePlanes()
	{
	}
}
[Token(Token = "0x2000321")]
public class CreateObjectsAtBordersOfEndurancePlaneCreationArea : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CCC", Offset = "0x596CCC")]
	private sealed class <createObjectsAtCreationBoundariesOfEndurancePlanes>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateObjectsAtBordersOfEndurancePlaneCreationArea <>4__this;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x9F308C", Offset = "0x9F308C", VA = "0x9F308C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x9F30D4", Offset = "0x9F30D4", VA = "0x9F30D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x9F2DCC", Offset = "0x9F2DCC", VA = "0x9F2DCC")]
		[DebuggerHidden]
		public <createObjectsAtCreationBoundariesOfEndurancePlanes>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x9F2DF8", Offset = "0x9F2DF8", VA = "0x9F2DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x9F2DFC", Offset = "0x9F2DFC", VA = "0x9F2DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x9F3094", Offset = "0x9F3094", VA = "0x9F3094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material firstPlaneMaterial;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xB852A0", Offset = "0xB852A0", VA = "0xB852A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xB852CC", Offset = "0xB852CC", VA = "0xB852CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A42B4", Offset = "0x5A42B4")]
	private IEnumerator createObjectsAtCreationBoundariesOfEndurancePlanes()
	{
		return null;
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xB85344", Offset = "0xB85344", VA = "0xB85344")]
	public CreateObjectsAtBordersOfEndurancePlaneCreationArea()
	{
	}
}
[Token(Token = "0x2000323")]
public class TestEnduranceAppearancePositions : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CDC", Offset = "0x596CDC")]
	private sealed class <testPositions>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestEnduranceAppearancePositions <>4__this;

		[Token(Token = "0x170001E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x901418", Offset = "0x901418", VA = "0x901418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x901460", Offset = "0x901460", VA = "0x901460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x900C1C", Offset = "0x900C1C", VA = "0x900C1C")]
		[DebuggerHidden]
		public <testPositions>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x900C48", Offset = "0x900C48", VA = "0x900C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x900C4C", Offset = "0x900C4C", VA = "0x900C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x901420", Offset = "0x901420", VA = "0x901420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xBA4968", Offset = "0xBA4968", VA = "0xBA4968")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xBA4994", Offset = "0xBA4994", VA = "0xBA4994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4364", Offset = "0x5A4364")]
	private IEnumerator testPositions()
	{
		return null;
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xBA4A0C", Offset = "0xBA4A0C", VA = "0xBA4A0C")]
	public TestEnduranceAppearancePositions()
	{
	}
}
[Token(Token = "0x2000325")]
public class ActivateSphere : MonoBehaviour
{
	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject sphereToActivate;

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x9CEBB4", Offset = "0x9CEBB4", VA = "0x9CEBB4")]
	public void activateSphere()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x9CEBD4", Offset = "0x9CEBD4", VA = "0x9CEBD4")]
	public ActivateSphere()
	{
	}
}
[Token(Token = "0x2000326")]
public class SetMovementControllerActive : MonoBehaviour
{
	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xAF6924", Offset = "0xAF6924", VA = "0xAF6924")]
	private void Start()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xAF6944", Offset = "0xAF6944", VA = "0xAF6944")]
	private void Update()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xAF6948", Offset = "0xAF6948", VA = "0xAF6948")]
	public SetMovementControllerActive()
	{
	}
}
[Token(Token = "0x2000327")]
public class TargetTouchActivator : MonoBehaviour
{
	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xB9992C", Offset = "0xB9992C", VA = "0xB9992C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xB99A48", Offset = "0xB99A48", VA = "0xB99A48")]
	public TargetTouchActivator()
	{
	}
}
[Token(Token = "0x2000328")]
public class TargetTouchContainerMovementStarter : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MovementWithinBoundaryController movementController;

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xB99CC4", Offset = "0xB99CC4", VA = "0xB99CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xB99D04", Offset = "0xB99D04", VA = "0xB99D04")]
	public TargetTouchContainerMovementStarter()
	{
	}
}
[Token(Token = "0x2000329")]
public class TargetTouchContainerMovementTester_2 : MonoBehaviour
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObjectMovementWithinBoundsService objectMovementWithinBoundsService;

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xB99D0C", Offset = "0xB99D0C", VA = "0xB99D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xB99DA8", Offset = "0xB99DA8", VA = "0xB99DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xB99E10", Offset = "0xB99E10", VA = "0xB99E10")]
	public TargetTouchContainerMovementTester_2()
	{
	}
}
[Token(Token = "0x200032A")]
public class AdvancedFaderTester : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CEC", Offset = "0x596CEC")]
	private sealed class <startFadeInWithDelay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedFaderTester <>4__this;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> objectsToTest;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x9EA268", Offset = "0x9EA268", VA = "0x9EA268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x9EA2B0", Offset = "0x9EA2B0", VA = "0x9EA2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x9EA164", Offset = "0x9EA164", VA = "0x9EA164")]
		[DebuggerHidden]
		public <startFadeInWithDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x9EA190", Offset = "0x9EA190", VA = "0x9EA190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x9EA194", Offset = "0x9EA194", VA = "0x9EA194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x9EA270", Offset = "0x9EA270", VA = "0x9EA270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectForTesting;

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x9CF7DC", Offset = "0x9CF7DC", VA = "0x9CF7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x9CFC9C", Offset = "0x9CFC9C", VA = "0x9CFC9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4414", Offset = "0x5A4414")]
	private IEnumerator startFadeInWithDelay(List<GameObject> objectsToTest)
	{
		return null;
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x9CFD30", Offset = "0x9CFD30", VA = "0x9CFD30")]
	public AdvancedFaderTester()
	{
	}
}
[Token(Token = "0x200032C")]
public class PrintNameTest : MonoBehaviour
{
	[Token(Token = "0x6001312")]
	[Address(RVA = "0xAEB7E0", Offset = "0xAEB7E0", VA = "0xAEB7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xAEB890", Offset = "0xAEB890", VA = "0xAEB890")]
	private void Update()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xAEB894", Offset = "0xAEB894", VA = "0xAEB894")]
	public PrintNameTest()
	{
	}
}
[Token(Token = "0x200032D")]
public class ChildMovementTester : MonoBehaviour
{
	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int counter;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float xMovementDirection;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 destination;

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xFD5AF8", Offset = "0xFD5AF8", VA = "0xFD5AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xFD5AFC", Offset = "0xFD5AFC", VA = "0xFD5AFC")]
	private void updateDestination()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xFD5B00", Offset = "0xFD5B00", VA = "0xFD5B00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xFD5BB8", Offset = "0xFD5BB8", VA = "0xFD5BB8")]
	public ChildMovementTester()
	{
	}
}
[Token(Token = "0x200032E")]
public class LerpMovementTester : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596CFC", Offset = "0x596CFC")]
	private sealed class <startMove>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMovementTester <>4__this;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x8F4040", Offset = "0x8F4040", VA = "0x8F4040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x8F4088", Offset = "0x8F4088", VA = "0x8F4088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x8F3FA4", Offset = "0x8F3FA4", VA = "0x8F3FA4")]
		[DebuggerHidden]
		public <startMove>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x8F3FD0", Offset = "0x8F3FD0", VA = "0x8F3FD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x8F3FD4", Offset = "0x8F3FD4", VA = "0x8F3FD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x8F4048", Offset = "0x8F4048", VA = "0x8F4048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform currentTargetTransform;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTimer;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float movementSpeed;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool move;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentMovementStartDistanceToTarget;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 previousTargetPosition;

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x157C1E0", Offset = "0x157C1E0", VA = "0x157C1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x157C440", Offset = "0x157C440", VA = "0x157C440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A44C4", Offset = "0x5A44C4")]
	private IEnumerator startMove()
	{
		return null;
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x157C4B8", Offset = "0x157C4B8", VA = "0x157C4B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x157C608", Offset = "0x157C608", VA = "0x157C608")]
	private void checkIfTargetChangedPosition()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x157C734", Offset = "0x157C734", VA = "0x157C734")]
	private void modifyAmountOfDistanceCrossed()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x157C930", Offset = "0x157C930", VA = "0x157C930")]
	private float getCurrentDistanceToTargetToPreviousDistanceToTargetRatio()
	{
		return default(float);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x157CB58", Offset = "0x157CB58", VA = "0x157CB58")]
	public LerpMovementTester()
	{
	}
}
[Token(Token = "0x2000330")]
public class MoveOnce : MonoBehaviour
{
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D0C", Offset = "0x596D0C")]
	private sealed class <moveOnce>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveOnce <>4__this;

		[Token(Token = "0x170001E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x8F5D7C", Offset = "0x8F5D7C", VA = "0x8F5D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x8F5DC4", Offset = "0x8F5DC4", VA = "0x8F5DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x8F5C0C", Offset = "0x8F5C0C", VA = "0x8F5C0C")]
		[DebuggerHidden]
		public <moveOnce>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x8F5C38", Offset = "0x8F5C38", VA = "0x8F5C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x8F5C3C", Offset = "0x8F5C3C", VA = "0x8F5C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x8F5D84", Offset = "0x8F5D84", VA = "0x8F5D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float xMovementAmount;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float yMovementAmount;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float zMovementAmount;

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xC60A3C", Offset = "0xC60A3C", VA = "0xC60A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xC60A68", Offset = "0xC60A68", VA = "0xC60A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4574", Offset = "0x5A4574")]
	private IEnumerator moveOnce()
	{
		return null;
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xC60AE0", Offset = "0xC60AE0", VA = "0xC60AE0")]
	public MoveOnce()
	{
	}
}
[Token(Token = "0x2000332")]
public class MoveRightTest : MonoBehaviour
{
	[Token(Token = "0x600132F")]
	[Address(RVA = "0xC60AE8", Offset = "0xC60AE8", VA = "0xC60AE8")]
	public MoveRightTest()
	{
	}
}
[Token(Token = "0x2000333")]
public class SlerpTester : MonoBehaviour
{
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D1C", Offset = "0x596D1C")]
	private sealed class <beginMovement>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlerpTester <>4__this;

		[Token(Token = "0x170001E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x8FCBE0", Offset = "0x8FCBE0", VA = "0x8FCBE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x8FCC28", Offset = "0x8FCC28", VA = "0x8FCC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x8FCAF8", Offset = "0x8FCAF8", VA = "0x8FCAF8")]
		[DebuggerHidden]
		public <beginMovement>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x8FCB24", Offset = "0x8FCB24", VA = "0x8FCB24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x8FCB28", Offset = "0x8FCB28", VA = "0x8FCB28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x8FCBE8", Offset = "0x8FCBE8", VA = "0x8FCBE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startPos;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPos;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 hardCodedEndPos;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float journeyTime;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool startMovement;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 slerpCenterPoint;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 slerpStartRelCenter;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 slerpEndRelCenter;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float mTimer;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 slerpDirection;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distanceToSlerpCenterPointFromOriginalStartPos;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float slerpLerpRatio;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float prevTAmount;

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xAF820C", Offset = "0xAF820C", VA = "0xAF820C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xAF8844", Offset = "0xAF8844", VA = "0xAF8844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4624", Offset = "0x5A4624")]
	private IEnumerator beginMovement()
	{
		return null;
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xAF88BC", Offset = "0xAF88BC", VA = "0xAF88BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xAF85CC", Offset = "0xAF85CC", VA = "0xAF85CC")]
	private void getSlerpMovementCenter(Vector3 direction)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xAF8CBC", Offset = "0xAF8CBC", VA = "0xAF8CBC")]
	private float getSlerpDistanceChangeRatio()
	{
		return default(float);
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xAF8CE4", Offset = "0xAF8CE4", VA = "0xAF8CE4")]
	private float getDistanceToSlerpCenterPoint()
	{
		return default(float);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xAF86A0", Offset = "0xAF86A0", VA = "0xAF86A0")]
	protected float getSlerpDistanceComparedToDirectDistanceRatio(Vector3 endDestination)
	{
		return default(float);
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xAF87D4", Offset = "0xAF87D4", VA = "0xAF87D4")]
	protected float getDistanceCurrentMoveStartToSlerpCenterPoint()
	{
		return default(float);
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xAF8D54", Offset = "0xAF8D54", VA = "0xAF8D54")]
	private float getSlerpLerpRatio()
	{
		return default(float);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xAF8DEC", Offset = "0xAF8DEC", VA = "0xAF8DEC")]
	protected Vector3 updateSlerpDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xAF8E74", Offset = "0xAF8E74", VA = "0xAF8E74")]
	private float getRandomFloatForSlerp()
	{
		return default(float);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xAF8F24", Offset = "0xAF8F24", VA = "0xAF8F24")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xAF8F50", Offset = "0xAF8F50", VA = "0xAF8F50")]
	public SlerpTester()
	{
	}
}
[Token(Token = "0x2000335")]
public class ChangeTransformPosTest : MonoBehaviour
{
	[Token(Token = "0x6001343")]
	[Address(RVA = "0xFD3B54", Offset = "0xFD3B54", VA = "0xFD3B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xFD3B84", Offset = "0xFD3B84", VA = "0xFD3B84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xFD3B88", Offset = "0xFD3B88", VA = "0xFD3B88")]
	public ChangeTransformPosTest()
	{
	}
}
[Token(Token = "0x2000336")]
public class RigidBodyMovementTest : MonoBehaviour
{
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D2C", Offset = "0x596D2C")]
	private sealed class <updateRigidBodyPos>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RigidBodyMovementTest <>4__this;

		[Token(Token = "0x170001EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x8FC168", Offset = "0x8FC168", VA = "0x8FC168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x8FC1B0", Offset = "0x8FC1B0", VA = "0x8FC1B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x8FC028", Offset = "0x8FC028", VA = "0x8FC028")]
		[DebuggerHidden]
		public <updateRigidBodyPos>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x8FC054", Offset = "0x8FC054", VA = "0x8FC054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x8FC058", Offset = "0x8FC058", VA = "0x8FC058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x8FC170", Offset = "0x8FC170", VA = "0x8FC170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody my_rigidBody;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xAF074C", Offset = "0xAF074C", VA = "0xAF074C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xAF07C0", Offset = "0xAF07C0", VA = "0xAF07C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A46D4", Offset = "0x5A46D4")]
	private IEnumerator updateRigidBodyPos()
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xAF0838", Offset = "0xAF0838", VA = "0xAF0838")]
	public RigidBodyMovementTest()
	{
	}
}
[Token(Token = "0x2000338")]
public class TestColorChanger : MonoBehaviour
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] targetObjects;

	[Token(Token = "0x600134F")]
	[Address(RVA = "0xBA489C", Offset = "0xBA489C", VA = "0xBA489C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xBA48A0", Offset = "0xBA48A0", VA = "0xBA48A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xBA48A4", Offset = "0xBA48A4", VA = "0xBA48A4")]
	public TestColorChanger()
	{
	}
}
[Token(Token = "0x2000339")]
public class UpdateOriginalColorTester : MonoBehaviour
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHUDElementController playerHUDElementController;

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xF21380", Offset = "0xF21380", VA = "0xF21380")]
	private void Start()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xF2139C", Offset = "0xF2139C", VA = "0xF2139C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xF213A0", Offset = "0xF213A0", VA = "0xF213A0")]
	public UpdateOriginalColorTester()
	{
	}
}
[Token(Token = "0x200033A")]
public class DotTester : MonoBehaviour
{
	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform target;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dirNum;

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x9FC7DC", Offset = "0x9FC7DC", VA = "0x9FC7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x9FC7E0", Offset = "0x9FC7E0", VA = "0x9FC7E0")]
	private void showDirection()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x9FC974", Offset = "0x9FC974", VA = "0x9FC974")]
	private float AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x9FC9D4", Offset = "0x9FC9D4", VA = "0x9FC9D4")]
	public DotTester()
	{
	}
}
[Token(Token = "0x200033B")]
public class IsLeftOrRightTester : MonoBehaviour
{
	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform otherTransform;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x15798F8", Offset = "0x15798F8", VA = "0x15798F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x15798FC", Offset = "0x15798FC", VA = "0x15798FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x15799F0", Offset = "0x15799F0", VA = "0x15799F0")]
	private Vector3 getAvoidOtherObjectVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1579A90", Offset = "0x1579A90", VA = "0x1579A90")]
	public IsLeftOrRightTester()
	{
	}
}
[Token(Token = "0x200033C")]
public class IsObjectBehindTester : MonoBehaviour
{
	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAtObject;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject objectForBehindTest;

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1579A98", Offset = "0x1579A98", VA = "0x1579A98")]
	private void Start()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x1579C1C", Offset = "0x1579C1C", VA = "0x1579C1C")]
	public IsObjectBehindTester()
	{
	}
}
[Token(Token = "0x200033D")]
public class LocalPosToWorldPosTest : MonoBehaviour
{
	[Token(Token = "0x600135F")]
	[Address(RVA = "0x157CD90", Offset = "0x157CD90", VA = "0x157CD90")]
	private void Start()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x157D038", Offset = "0x157D038", VA = "0x157D038")]
	private void Update()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x157D03C", Offset = "0x157D03C", VA = "0x157D03C")]
	public LocalPosToWorldPosTest()
	{
	}
}
[Token(Token = "0x200033E")]
public class LookAtTester : MonoBehaviour
{
	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject lookAtTest;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x157F868", Offset = "0x157F868", VA = "0x157F868")]
	private void Start()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x157F8C0", Offset = "0x157F8C0", VA = "0x157F8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x157F8C4", Offset = "0x157F8C4", VA = "0x157F8C4")]
	public LookAtTester()
	{
	}
}
[Token(Token = "0x200033F")]
public class CircleSpawnTest : MonoBehaviour
{
	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform circleCenter;

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xFD5D90", Offset = "0xFD5D90", VA = "0xFD5D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xFD5DEC", Offset = "0xFD5DEC", VA = "0xFD5DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xFD6090", Offset = "0xFD6090", VA = "0xFD6090")]
	private void createObjectsInVerticalRadius()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xFD5DF0", Offset = "0xFD5DF0", VA = "0xFD5DF0")]
	private void createObjectsInHorizontalRadius()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xFD6180", Offset = "0xFD6180", VA = "0xFD6180")]
	private void Update()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xFD6184", Offset = "0xFD6184", VA = "0xFD6184")]
	public CircleSpawnTest()
	{
	}
}
[Token(Token = "0x2000340")]
public class CreateTestObjectsService : MonoBehaviour
{
	[Token(Token = "0x600136B")]
	[Address(RVA = "0xB8588C", Offset = "0xB8588C", VA = "0xB8588C")]
	public static List<GameObject> createTestObjectsAtEdgesOfValidCreationAreas(List<Area3D> validObjectCreationAreas, float objectSize, float zPosition)
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xB85C58", Offset = "0xB85C58", VA = "0xB85C58")]
	public CreateTestObjectsService()
	{
	}
}
[Token(Token = "0x2000341")]
public class ForwardCreationTester : MonoBehaviour
{
	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAtTarget;

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xABA2B4", Offset = "0xABA2B4", VA = "0xABA2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xABA364", Offset = "0xABA364", VA = "0xABA364")]
	public ForwardCreationTester()
	{
	}
}
[Token(Token = "0x2000342")]
public class ParabolaMovementTester : MonoBehaviour
{
	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startPos;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTimer;

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xADE750", Offset = "0xADE750", VA = "0xADE750")]
	private void Start()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xADE78C", Offset = "0xADE78C", VA = "0xADE78C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xADE800", Offset = "0xADE800", VA = "0xADE800")]
	public ParabolaMovementTester()
	{
	}
}
[Token(Token = "0x2000343")]
public class ActivateParticleSystemTest : MonoBehaviour
{
	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject test;

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x9CEB34", Offset = "0x9CEB34", VA = "0x9CEB34")]
	private void Start()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x9CEBA8", Offset = "0x9CEBA8", VA = "0x9CEBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x9CEBAC", Offset = "0x9CEBAC", VA = "0x9CEBAC")]
	public ActivateParticleSystemTest()
	{
	}
}
[Token(Token = "0x2000344")]
public class ParticleSystemUtilTester : MonoBehaviour
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wormhole;

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xADF14C", Offset = "0xADF14C", VA = "0xADF14C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xADF158", Offset = "0xADF158", VA = "0xADF158")]
	private void Update()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xADF15C", Offset = "0xADF15C", VA = "0xADF15C")]
	public ParticleSystemUtilTester()
	{
	}
}
[Token(Token = "0x2000345")]
public class OvrFadeInTester : MonoBehaviour
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xAD994C", Offset = "0xAD994C", VA = "0xAD994C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xAD9994", Offset = "0xAD9994", VA = "0xAD9994")]
	public OvrFadeInTester()
	{
	}
}
[Token(Token = "0x2000346")]
public static class CalculateMaxBoundariesOfPlayArea
{
	[Token(Token = "0x600137A")]
	[Address(RVA = "0xFCF7D4", Offset = "0xFCF7D4", VA = "0xFCF7D4")]
	public static List<Vector3> getMaxXZOfArea(float[] boundaries)
	{
		return null;
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xFCF94C", Offset = "0xFCF94C", VA = "0xFCF94C")]
	public static List<Vector3> getBordersOfPlayArea(float[] boundaries)
	{
		return null;
	}
}
[Token(Token = "0x2000347")]
public class CheckPlayAreaForwardZ : MonoBehaviour
{
	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xFD5788", Offset = "0xFD5788", VA = "0xFD5788")]
	private void Start()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xFD58F0", Offset = "0xFD58F0", VA = "0xFD58F0")]
	public CheckPlayAreaForwardZ()
	{
	}
}
[Token(Token = "0x2000348")]
public class CreateObjectsAtBoundariesOfPlayAreaTest : MonoBehaviour
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xB8541C", Offset = "0xB8541C", VA = "0xB8541C")]
	private void Start()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xB85440", Offset = "0xB85440", VA = "0xB85440")]
	private void createObjectsAtCornersOfPlayArea()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xB85654", Offset = "0xB85654", VA = "0xB85654")]
	public void createObjectInMiddle()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xB856E0", Offset = "0xB856E0", VA = "0xB856E0")]
	public CreateObjectsAtBoundariesOfPlayAreaTest()
	{
	}
}
[Token(Token = "0x2000349")]
public class CreateObjectsAtCalculatedBoundaries : MonoBehaviour
{
	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] predefinedBoundaries;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material materialToSetOnObjects;

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xB856E8", Offset = "0xB856E8", VA = "0xB856E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xB85884", Offset = "0xB85884", VA = "0xB85884")]
	public CreateObjectsAtCalculatedBoundaries()
	{
	}
}
[Token(Token = "0x200034A")]
public class PrintBoundariesOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D3C", Offset = "0x596D3C")]
	private sealed class <printBoundariesCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrintBoundariesOfPlayArea <>4__this;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x8FBDFC", Offset = "0x8FBDFC", VA = "0x8FBDFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x8FBE44", Offset = "0x8FBE44", VA = "0x8FBE44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x8FB8E0", Offset = "0x8FB8E0", VA = "0x8FB8E0")]
		[DebuggerHidden]
		public <printBoundariesCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x8FB90C", Offset = "0x8FB90C", VA = "0x8FB90C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x8FB910", Offset = "0x8FB910", VA = "0x8FB910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x8FBE04", Offset = "0x8FBE04", VA = "0x8FBE04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xAEB1E0", Offset = "0xAEB1E0", VA = "0xAEB1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xAEB20C", Offset = "0xAEB20C", VA = "0xAEB20C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4784", Offset = "0x5A4784")]
	private IEnumerator printBoundariesCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xAEB284", Offset = "0xAEB284", VA = "0xAEB284")]
	public PrintBoundariesOfPlayArea()
	{
	}
}
[Token(Token = "0x200034C")]
public class TestCalculateBoundaries : MonoBehaviour
{
	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] gameObjects;

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xBA4820", Offset = "0xBA4820", VA = "0xBA4820")]
	private void Start()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xBA4894", Offset = "0xBA4894", VA = "0xBA4894")]
	public TestCalculateBoundaries()
	{
	}
}
[Token(Token = "0x200034D")]
public class OculusCreateObjectsAtBoundariesTester : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D4C", Offset = "0x596D4C")]
	private sealed class <createObjects>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusCreateObjectsAtBoundariesTester <>4__this;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x8F711C", Offset = "0x8F711C", VA = "0x8F711C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x8F7164", Offset = "0x8F7164", VA = "0x8F7164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x8F6EDC", Offset = "0x8F6EDC", VA = "0x8F6EDC")]
		[DebuggerHidden]
		public <createObjects>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x8F6F08", Offset = "0x8F6F08", VA = "0x8F6F08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x8F6F0C", Offset = "0x8F6F0C", VA = "0x8F6F0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x8F7124", Offset = "0x8F7124", VA = "0x8F7124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xB03DA8", Offset = "0xB03DA8", VA = "0xB03DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xB03E00", Offset = "0xB03E00", VA = "0xB03E00")]
	private void createObjectAtFirstBoundaryPosition()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xB03DD4", Offset = "0xB03DD4", VA = "0xB03DD4")]
	public void createObjectsAtBoundaries()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xB04038", Offset = "0xB04038", VA = "0xB04038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4834", Offset = "0x5A4834")]
	private IEnumerator createObjects()
	{
		return null;
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xB040B0", Offset = "0xB040B0", VA = "0xB040B0")]
	public OculusCreateObjectsAtBoundariesTester()
	{
	}
}
[Token(Token = "0x200034F")]
public class OculusPlayAreaTest : MonoBehaviour
{
	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material playAreaBoundariesMaterial;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material outerAreaBoundariesMaterial;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material unityXRMaterial;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material cornersMaterial;

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xB04738", Offset = "0xB04738", VA = "0xB04738")]
	private void Start()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xB04904", Offset = "0xB04904", VA = "0xB04904")]
	public void createObjectsAtBoundaries()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xB04D64", Offset = "0xB04D64", VA = "0xB04D64")]
	public void createObjectInMiddle()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xB0475C", Offset = "0xB0475C", VA = "0xB0475C")]
	private void createObjectsAtLimitsOfPlayArea()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xB04DF0", Offset = "0xB04DF0", VA = "0xB04DF0")]
	public OculusPlayAreaTest()
	{
	}
}
[Token(Token = "0x2000350")]
public class CreateObjectsAtBordersTester : MonoBehaviour
{
	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OculusPlayAreaTest oculusPlayAreaTest;

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xB8534C", Offset = "0xB8534C", VA = "0xB8534C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xB85414", Offset = "0xB85414", VA = "0xB85414")]
	public CreateObjectsAtBordersTester()
	{
	}
}
[Token(Token = "0x2000351")]
public class OculusBoundaryTest : MonoBehaviour
{
	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xB03BB4", Offset = "0xB03BB4", VA = "0xB03BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xB03D0C", Offset = "0xB03D0C", VA = "0xB03D0C")]
	public OculusBoundaryTest()
	{
	}
}
[Token(Token = "0x2000352")]
public class PicoCreateObjectsAtBoundariesOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material calcBoundariesMaterial;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material playAreaBoundariesMaterial;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material outerBoundariesMaterial;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material unityXRBoundariesMaterial;

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xAE0EA0", Offset = "0xAE0EA0", VA = "0xAE0EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xAE1150", Offset = "0xAE1150", VA = "0xAE1150")]
	private void createObjectsAtCornersOfPlayArea()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xAE12F8", Offset = "0xAE12F8", VA = "0xAE12F8")]
	public PicoCreateObjectsAtBoundariesOfPlayArea()
	{
	}
}
[Token(Token = "0x2000353")]
public class PlayerHandsHapticsTester : MonoBehaviour
{
	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandHapticsController playerHandHapticsController;

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xAE6690", Offset = "0xAE6690", VA = "0xAE6690")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xAE6778", Offset = "0xAE6778", VA = "0xAE6778")]
	public PlayerHandsHapticsTester()
	{
	}
}
[Token(Token = "0x2000354")]
public class OculusRiftLeftController : MonoBehaviour
{
	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xB06384", Offset = "0xB06384", VA = "0xB06384")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xB0643C", Offset = "0xB0643C", VA = "0xB0643C")]
	public OculusRiftLeftController()
	{
	}
}
[Token(Token = "0x2000355")]
public class OculusRiftRightController : MonoBehaviour
{
	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xB07910", Offset = "0xB07910", VA = "0xB07910")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xB079C8", Offset = "0xB079C8", VA = "0xB079C8")]
	public OculusRiftRightController()
	{
	}
}
[Token(Token = "0x2000356")]
public class HeightPrinter : MonoBehaviour
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string nameOfObject;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool printOnStart;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool printOnUpdate;

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xACC470", Offset = "0xACC470", VA = "0xACC470")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xACC558", Offset = "0xACC558", VA = "0xACC558")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xACC640", Offset = "0xACC640", VA = "0xACC640")]
	public HeightPrinter()
	{
	}
}
[Token(Token = "0x2000357")]
public class ObjectBoundariesPrinter : MonoBehaviour
{
	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xC6E8D4", Offset = "0xC6E8D4", VA = "0xC6E8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xC6E9E8", Offset = "0xC6E9E8", VA = "0xC6E9E8")]
	public ObjectBoundariesPrinter()
	{
	}
}
[Token(Token = "0x2000358")]
public class ObjectTypePrinter : MonoBehaviour
{
	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xB030F4", Offset = "0xB030F4", VA = "0xB030F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xB03228", Offset = "0xB03228", VA = "0xB03228")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xB0322C", Offset = "0xB0322C", VA = "0xB0322C")]
	public ObjectTypePrinter()
	{
	}
}
[Token(Token = "0x2000359")]
public class PrintHandPos : MonoBehaviour
{
	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xAEB2F8", Offset = "0xAEB2F8", VA = "0xAEB2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xAEB7D8", Offset = "0xAEB7D8", VA = "0xAEB7D8")]
	public PrintHandPos()
	{
	}
}
[Token(Token = "0x200035A")]
public class PrintRendererBounds : MonoBehaviour
{
	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string someName;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xAEB89C", Offset = "0xAEB89C", VA = "0xAEB89C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xAEBC20", Offset = "0xAEBC20", VA = "0xAEBC20")]
	public PrintRendererBounds()
	{
	}
}
[Token(Token = "0x200035B")]
public class PrintRotation : MonoBehaviour
{
	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xAEBC7C", Offset = "0xAEBC7C", VA = "0xAEBC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xAEBD34", Offset = "0xAEBD34", VA = "0xAEBD34")]
	private void Update()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xAEBD38", Offset = "0xAEBD38", VA = "0xAEBD38")]
	public PrintRotation()
	{
	}
}
[Token(Token = "0x200035C")]
public class PrintTransformRight : MonoBehaviour
{
	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xAEBD40", Offset = "0xAEBD40", VA = "0xAEBD40")]
	private void Update()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xAEBE0C", Offset = "0xAEBE0C", VA = "0xAEBE0C")]
	public PrintTransformRight()
	{
	}
}
[Token(Token = "0x200035D")]
public class AnotherRotationTester : MonoBehaviour
{
	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x9D40BC", Offset = "0x9D40BC", VA = "0x9D40BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x9D4124", Offset = "0x9D4124", VA = "0x9D4124")]
	public AnotherRotationTester()
	{
	}
}
[Token(Token = "0x200035E")]
public class RotateAwayTestScript : MonoBehaviour
{
	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rotateAwayFrom;

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xAF27CC", Offset = "0xAF27CC", VA = "0xAF27CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xAF285C", Offset = "0xAF285C", VA = "0xAF285C")]
	public RotateAwayTestScript()
	{
	}
}
[Token(Token = "0x200035F")]
public class RotateTowardsTest : MonoBehaviour
{
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D5C", Offset = "0x596D5C")]
	private sealed class <startRotationCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateTowardsTest <>4__this;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x8FC2A0", Offset = "0x8FC2A0", VA = "0x8FC2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x8FC2E8", Offset = "0x8FC2E8", VA = "0x8FC2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x8FC1B8", Offset = "0x8FC1B8", VA = "0x8FC1B8")]
		[DebuggerHidden]
		public <startRotationCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x8FC1E4", Offset = "0x8FC1E4", VA = "0x8FC1E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x8FC1E8", Offset = "0x8FC1E8", VA = "0x8FC1E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x8FC2A8", Offset = "0x8FC2A8", VA = "0x8FC2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationSpeed;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _lookRotation;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _direction;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool beginRotation;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion startRotation;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion endRotation;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rotationProgress;

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xAF2AB8", Offset = "0xAF2AB8", VA = "0xAF2AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xAF2B64", Offset = "0xAF2B64", VA = "0xAF2B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A48E4", Offset = "0x5A48E4")]
	private IEnumerator startRotationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xAF2BDC", Offset = "0xAF2BDC", VA = "0xAF2BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xAF2BEC", Offset = "0xAF2BEC", VA = "0xAF2BEC")]
	private void rotate3()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xAF2D08", Offset = "0xAF2D08", VA = "0xAF2D08")]
	private void rotateV2()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xAF2DC8", Offset = "0xAF2DC8", VA = "0xAF2DC8")]
	private void rotateV1()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xAF2ED4", Offset = "0xAF2ED4", VA = "0xAF2ED4")]
	public RotateTowardsTest()
	{
	}
}
[Token(Token = "0x2000361")]
public class SetRotationTest : MonoBehaviour
{
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystemToRotate;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform transformToRotate;

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xAF6950", Offset = "0xAF6950", VA = "0xAF6950")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xAF6AB8", Offset = "0xAF6AB8", VA = "0xAF6AB8")]
	public SetRotationTest()
	{
	}
}
[Token(Token = "0x2000362")]
public class TestRotateAround : MonoBehaviour
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xBA4A14", Offset = "0xBA4A14", VA = "0xBA4A14")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xBA4B24", Offset = "0xBA4B24", VA = "0xBA4B24")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xBA4BF8", Offset = "0xBA4BF8", VA = "0xBA4BF8")]
	public TestRotateAround()
	{
	}
}
[Token(Token = "0x2000363")]
public class BackToMainMenuTest : MonoBehaviour
{
	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x9D7DF8", Offset = "0x9D7DF8", VA = "0x9D7DF8")]
	public BackToMainMenuTest()
	{
	}
}
[Token(Token = "0x2000364")]
public class ListTesting : MonoBehaviour
{
	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x157CB94", Offset = "0x157CB94", VA = "0x157CB94")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x157CD10", Offset = "0x157CD10", VA = "0x157CD10")]
	private void workList(List<int> myList)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x157CD78", Offset = "0x157CD78", VA = "0x157CD78")]
	public ListTesting()
	{
	}
}
[Token(Token = "0x2000365")]
public class TutorialControllerTester : MonoBehaviour
{
	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xF1B454", Offset = "0xF1B454", VA = "0xF1B454")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xF1B518", Offset = "0xF1B518", VA = "0xF1B518")]
	public TutorialControllerTester()
	{
	}
}
[Token(Token = "0x2000366")]
public class DisabledButtonTester : MonoBehaviour
{
	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DisabledStartGameOrTutorialButton button;

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x9F9E6C", Offset = "0x9F9E6C", VA = "0x9F9E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x9F9ECC", Offset = "0x9F9ECC", VA = "0x9F9ECC")]
	public DisabledButtonTester()
	{
	}
}
[Token(Token = "0x2000367")]
public class FadeTester : MonoBehaviour
{
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D6C", Offset = "0x596D6C")]
	private sealed class <fadeOutObjectCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeTester <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x9F64E4", Offset = "0x9F64E4", VA = "0x9F64E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x9F652C", Offset = "0x9F652C", VA = "0x9F652C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x9F630C", Offset = "0x9F630C", VA = "0x9F630C")]
		[DebuggerHidden]
		public <fadeOutObjectCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x9F6338", Offset = "0x9F6338", VA = "0x9F6338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x9F633C", Offset = "0x9F633C", VA = "0x9F633C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x9F64EC", Offset = "0x9F64EC", VA = "0x9F64EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectToFadeOut;

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xA081FC", Offset = "0xA081FC", VA = "0xA081FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xA08228", Offset = "0xA08228", VA = "0xA08228")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4994", Offset = "0x5A4994")]
	private IEnumerator fadeOutObjectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xA082A0", Offset = "0xA082A0", VA = "0xA082A0")]
	public FadeTester()
	{
	}
}
[Token(Token = "0x2000369")]
public class SecondsToMinSecondsTester : MonoBehaviour
{
	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int seconds;

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xAF5A1C", Offset = "0xAF5A1C", VA = "0xAF5A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xAF5B88", Offset = "0xAF5B88", VA = "0xAF5B88")]
	public SecondsToMinSecondsTester()
	{
	}
}
[Token(Token = "0x200036A")]
public class DontDestroy : MonoBehaviour
{
	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x9FC75C", Offset = "0x9FC75C", VA = "0x9FC75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x9FC7D4", Offset = "0x9FC7D4", VA = "0x9FC7D4")]
	public DontDestroy()
	{
	}
}
[Token(Token = "0x200036B")]
public class GetChildRenderersTest : MonoBehaviour
{
	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xAC3340", Offset = "0xAC3340", VA = "0xAC3340")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xAC33D8", Offset = "0xAC33D8", VA = "0xAC33D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xAC33DC", Offset = "0xAC33DC", VA = "0xAC33DC")]
	public GetChildRenderersTest()
	{
	}
}
[Token(Token = "0x200036C")]
public class GetComponentTest : MonoBehaviour
{
	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xAC33E4", Offset = "0xAC33E4", VA = "0xAC33E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xAC347C", Offset = "0xAC347C", VA = "0xAC347C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xAC3480", Offset = "0xAC3480", VA = "0xAC3480")]
	public GetComponentTest()
	{
	}
}
[Token(Token = "0x200036D")]
public class GetKeyDownTester : MonoBehaviour
{
	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xAC3738", Offset = "0xAC3738", VA = "0xAC3738")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xAC373C", Offset = "0xAC373C", VA = "0xAC373C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xAC37CC", Offset = "0xAC37CC", VA = "0xAC37CC")]
	public GetKeyDownTester()
	{
	}
}
[Token(Token = "0x200036E")]
public class OnTriggerEnterTest : MonoBehaviour
{
	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer myRenderer;

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xB08730", Offset = "0xB08730", VA = "0xB08730")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xB0878C", Offset = "0xB0878C", VA = "0xB0878C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xB087D0", Offset = "0xB087D0", VA = "0xB087D0")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xB08814", Offset = "0xB08814", VA = "0xB08814")]
	public OnTriggerEnterTest()
	{
	}
}
[Token(Token = "0x200036F")]
public class PrefabInstantiationTest : MonoBehaviour
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D7C", Offset = "0x596D7C")]
	private sealed class <instantiatePrefab>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabInstantiationTest <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x8FB890", Offset = "0x8FB890", VA = "0x8FB890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x8FB8D8", Offset = "0x8FB8D8", VA = "0x8FB8D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8FB6AC", Offset = "0x8FB6AC", VA = "0x8FB6AC")]
		[DebuggerHidden]
		public <instantiatePrefab>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x8FB6D8", Offset = "0x8FB6D8", VA = "0x8FB6D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x8FB6DC", Offset = "0x8FB6DC", VA = "0x8FB6DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x8FB898", Offset = "0x8FB898", VA = "0x8FB898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject prefabToInstantiate;

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xAEABE8", Offset = "0xAEABE8", VA = "0xAEABE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xAEAC14", Offset = "0xAEAC14", VA = "0xAEAC14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4A44", Offset = "0x5A4A44")]
	private IEnumerator instantiatePrefab()
	{
		return null;
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xAEAC8C", Offset = "0xAEAC8C", VA = "0xAEAC8C")]
	public PrefabInstantiationTest()
	{
	}
}
[Token(Token = "0x2000371")]
public class RenameTest_V_2 : MonoBehaviour
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip justForTest;

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xAEFF08", Offset = "0xAEFF08", VA = "0xAEFF08")]
	private void Start()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xAEFF0C", Offset = "0xAEFF0C", VA = "0xAEFF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xAEFF10", Offset = "0xAEFF10", VA = "0xAEFF10")]
	public RenameTest_V_2()
	{
	}
}
[Token(Token = "0x2000372")]
public class FindUnityXRControllersTestScript : MonoBehaviour
{
	[Token(Token = "0x6001401")]
	[Address(RVA = "0xA08300", Offset = "0xA08300", VA = "0xA08300")]
	private void Update()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xA08514", Offset = "0xA08514", VA = "0xA08514")]
	public FindUnityXRControllersTestScript()
	{
	}
}
[Token(Token = "0x2000373")]
public class ValidActivationTypesServiceTester : MonoBehaviour
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ValidActivationTypesService playerHandObserver;

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xF22160", Offset = "0xF22160", VA = "0xF22160")]
	private void Update()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xF221A4", Offset = "0xF221A4", VA = "0xF221A4")]
	public ValidActivationTypesServiceTester()
	{
	}
}
[Token(Token = "0x2000374")]
public class ClosestBoundaryPositionService : MonoBehaviour
{
	[Token(Token = "0x6001405")]
	[Address(RVA = "0xFD6274", Offset = "0xFD6274", VA = "0xFD6274")]
	public static List<Vector3> getBoundariesWithObjectSizeCorrections(Vector3 currentPos, float minX, float maxX, float minZ, float maxZ, float objectSizeX, float objectSizeZ)
	{
		return null;
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xFD63A8", Offset = "0xFD63A8", VA = "0xFD63A8")]
	public static Vector3 getClosestBoundaryPoint(Vector3 posToCheck, Vector3[] boundaryPoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xFD64C0", Offset = "0xFD64C0", VA = "0xFD64C0")]
	public ClosestBoundaryPositionService()
	{
	}
}
[Token(Token = "0x2000375")]
public class FakeVectorService : MonoBehaviour
{
	[Token(Token = "0x4001045")]
	public const float FAKE_VECTOR_X = -66f;

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xA082A8", Offset = "0xA082A8", VA = "0xA082A8")]
	public static bool isVectorFakeVector(Vector3 input)
	{
		return default(bool);
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xA082BC", Offset = "0xA082BC", VA = "0xA082BC")]
	public static Vector3 createFakeVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xA082D0", Offset = "0xA082D0", VA = "0xA082D0")]
	public FakeVectorService()
	{
	}
}
[Token(Token = "0x2000376")]
public class GetAllChildrenHelper : MonoBehaviour
{
	[Token(Token = "0x600140B")]
	[Address(RVA = "0xAC2F10", Offset = "0xAC2F10", VA = "0xAC2F10")]
	public static List<GameObject> getAllChildrenOfObject(GameObject sourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xAC3338", Offset = "0xAC3338", VA = "0xAC3338")]
	public GetAllChildrenHelper()
	{
	}
}
[Token(Token = "0x2000377")]
public class IntegerIteratorService : MonoBehaviour
{
	[Token(Token = "0x600140D")]
	[Address(RVA = "0xACDCEC", Offset = "0xACDCEC", VA = "0xACDCEC")]
	public static int iterateOrReset(ref int value, int limit)
	{
		return default(int);
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xACDD04", Offset = "0xACDD04", VA = "0xACDD04")]
	public IntegerIteratorService()
	{
	}
}
[Token(Token = "0x2000378")]
public class LastClickTimerService : MonoBehaviour
{
	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected DateTime lastClickTime;

	[Token(Token = "0x4001047")]
	private const float MILISECONDS_TO_NEXT_CLICK = 600f;

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x157BAD8", Offset = "0x157BAD8", VA = "0x157BAD8")]
	public bool isClickAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x157BBAC", Offset = "0x157BBAC", VA = "0x157BBAC")]
	public LastClickTimerService()
	{
	}
}
[Token(Token = "0x2000379")]
public class MathParabola : MonoBehaviour
{
	[Token(Token = "0x6001411")]
	[Address(RVA = "0x158A254", Offset = "0x158A254", VA = "0x158A254")]
	private void Start()
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x158A258", Offset = "0x158A258", VA = "0x158A258")]
	private void Update()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x158A25C", Offset = "0x158A25C", VA = "0x158A25C")]
	public MathParabola()
	{
	}
}
[Token(Token = "0x200037A")]
public class ObjectColliderHelper : MonoBehaviour
{
	[Token(Token = "0x6001414")]
	[Address(RVA = "0xC6E9F0", Offset = "0xC6E9F0", VA = "0xC6E9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xC6E9F4", Offset = "0xC6E9F4", VA = "0xC6E9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xC6E9F8", Offset = "0xC6E9F8", VA = "0xC6E9F8")]
	public ObjectColliderHelper()
	{
	}
}
[Token(Token = "0x200037B")]
public class OneMinusOneService : MonoBehaviour
{
	[Token(Token = "0x6001417")]
	[Address(RVA = "0xB0881C", Offset = "0xB0881C", VA = "0xB0881C")]
	public static int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xB08848", Offset = "0xB08848", VA = "0xB08848")]
	public OneMinusOneService()
	{
	}
}
[Token(Token = "0x200037C")]
public class PositionToBoundaryService : MonoBehaviour
{
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D8C", Offset = "0x596D8C")]
	private sealed class <positionObjectsToMinXCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x8FB3A8", Offset = "0x8FB3A8", VA = "0x8FB3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x8FB3F0", Offset = "0x8FB3F0", VA = "0x8FB3F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x8FB144", Offset = "0x8FB144", VA = "0x8FB144")]
		[DebuggerHidden]
		public <positionObjectsToMinXCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x8FB170", Offset = "0x8FB170", VA = "0x8FB170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x8FB174", Offset = "0x8FB174", VA = "0x8FB174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x8FB3B0", Offset = "0x8FB3B0", VA = "0x8FB3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596D9C", Offset = "0x596D9C")]
	private sealed class <positionObjectsToMaxXCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x8FAE40", Offset = "0x8FAE40", VA = "0x8FAE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x8FAE88", Offset = "0x8FAE88", VA = "0x8FAE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x8FABDC", Offset = "0x8FABDC", VA = "0x8FABDC")]
		[DebuggerHidden]
		public <positionObjectsToMaxXCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x8FAC08", Offset = "0x8FAC08", VA = "0x8FAC08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x8FAC0C", Offset = "0x8FAC0C", VA = "0x8FAC0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x8FAE48", Offset = "0x8FAE48", VA = "0x8FAE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596DAC", Offset = "0x596DAC")]
	private sealed class <positionObjectsToMinZCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x8FB65C", Offset = "0x8FB65C", VA = "0x8FB65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x8FB6A4", Offset = "0x8FB6A4", VA = "0x8FB6A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x8FB3F8", Offset = "0x8FB3F8", VA = "0x8FB3F8")]
		[DebuggerHidden]
		public <positionObjectsToMinZCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x8FB424", Offset = "0x8FB424", VA = "0x8FB424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x8FB428", Offset = "0x8FB428", VA = "0x8FB428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x8FB664", Offset = "0x8FB664", VA = "0x8FB664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596DBC", Offset = "0x596DBC")]
	private sealed class <positionObjectsToMaxZCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x8FB0F4", Offset = "0x8FB0F4", VA = "0x8FB0F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x8FB13C", Offset = "0x8FB13C", VA = "0x8FB13C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x8FAE90", Offset = "0x8FAE90", VA = "0x8FAE90")]
		[DebuggerHidden]
		public <positionObjectsToMaxZCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x8FAEBC", Offset = "0x8FAEBC", VA = "0x8FAEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x8FAEC0", Offset = "0x8FAEC0", VA = "0x8FAEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x8FB0FC", Offset = "0x8FB0FC", VA = "0x8FB0FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xAE90A4", Offset = "0xAE90A4", VA = "0xAE90A4")]
	public void positionObjectsToMinXBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xAE90D0", Offset = "0xAE90D0", VA = "0xAE90D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4AF4", Offset = "0x5A4AF4")]
	private IEnumerator positionObjectsToMinXCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xAE9164", Offset = "0xAE9164", VA = "0xAE9164")]
	public static Vector3 adaptVectorForMinX(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xAE9170", Offset = "0xAE9170", VA = "0xAE9170")]
	public void positionObjectsToMaxXBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xAE919C", Offset = "0xAE919C", VA = "0xAE919C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4B54", Offset = "0x5A4B54")]
	private IEnumerator positionObjectsToMaxXCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xAE9230", Offset = "0xAE9230", VA = "0xAE9230")]
	public static Vector3 adaptVectorForMaxX(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xAE923C", Offset = "0xAE923C", VA = "0xAE923C")]
	public void positionObjectsToMinZBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xAE9268", Offset = "0xAE9268", VA = "0xAE9268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4BB4", Offset = "0x5A4BB4")]
	private IEnumerator positionObjectsToMinZCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xAE92FC", Offset = "0xAE92FC", VA = "0xAE92FC")]
	public static Vector3 adaptVectorForMinZ(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xAE9308", Offset = "0xAE9308", VA = "0xAE9308")]
	public void positionObjectsToMaxZBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xAE9334", Offset = "0xAE9334", VA = "0xAE9334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4C14", Offset = "0x5A4C14")]
	private IEnumerator positionObjectsToMaxZCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xAE93C8", Offset = "0xAE93C8", VA = "0xAE93C8")]
	public static Vector3 adaptVectorForMaxZ(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xAE93D4", Offset = "0xAE93D4", VA = "0xAE93D4")]
	public PositionToBoundaryService()
	{
	}
}
[Token(Token = "0x2000381")]
public static class RandomizeService
{
	[Token(Token = "0x600143E")]
	public static void ShuffleArray<T>(T[] array)
	{
	}

	[Token(Token = "0x600143F")]
	public static void ShuffleList<T>(List<T> arrayList)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xAED684", Offset = "0xAED684", VA = "0xAED684")]
	public static void ShuffleArrayList(ArrayList arrayList)
	{
	}
}
[Token(Token = "0x2000382")]
public class MathUtils : MonoBehaviour
{
	[Token(Token = "0x6001441")]
	[Address(RVA = "0x158A264", Offset = "0x158A264", VA = "0x158A264")]
	public static float[] getLesserBoundary(float[] firstBoundary, float[] secondBoundary)
	{
		return null;
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x158A35C", Offset = "0x158A35C", VA = "0x158A35C")]
	public static float[] getLesserBoundaryIgnoreY(float[] firstBoundary, float[] secondBoundary)
	{
		return null;
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x158A348", Offset = "0x158A348", VA = "0x158A348")]
	private static float getSmallerValue(float first, float second)
	{
		return default(float);
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x158A478", Offset = "0x158A478", VA = "0x158A478")]
	public static float[] returnFloatsOrderedBySize(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x158A514", Offset = "0x158A514", VA = "0x158A514")]
	public MathUtils()
	{
	}
}
[Token(Token = "0x2000383")]
public class TimePassedService
{
	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected DateTime lastEventTime;

	[Token(Token = "0x4001059")]
	private const int TIME_PASSED_LIMIT = 500;

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xF12EC0", Offset = "0xF12EC0", VA = "0xF12EC0")]
	public TimePassedService()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xF12EE8", Offset = "0xF12EE8", VA = "0xF12EE8")]
	public void updateLastEventTime()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xF12F50", Offset = "0xF12F50", VA = "0xF12F50")]
	public bool isEnoughTimePassed()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000384")]
public class AdvancedBoundaryCalculationService
{
	[Token(Token = "0x400105A")]
	private const int NUMBER_OF_POINTS_PER_SIDE = 4;

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x9CF0CC", Offset = "0x9CF0CC", VA = "0x9CF0CC")]
	public static float[] getBoundaries(float[] boundaries, Vector3[] boundaryPoints, float playerHeight)
	{
		return null;
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x9CF558", Offset = "0x9CF558", VA = "0x9CF558")]
	private static float getMaxZBoundary(float[] boundaries, Vector3[] boundaryPoints, float xSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x9CF460", Offset = "0x9CF460", VA = "0x9CF460")]
	private static float getMinZBoundary(float[] boundaries, Vector3[] boundaryPoints, float xSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x9CF36C", Offset = "0x9CF36C", VA = "0x9CF36C")]
	private static float getMaxXBoundary(float[] boundaries, Vector3[] boundaryPoints, float zSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x9CF278", Offset = "0x9CF278", VA = "0x9CF278")]
	private static float getMinXBoundary(float[] boundaries, Vector3[] boundaryPoints, float zSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x9CF650", Offset = "0x9CF650", VA = "0x9CF650")]
	private static Vector3[] getForwardOrBackPlanePositions(float xMin, float zPos, float size)
	{
		return null;
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x9CF714", Offset = "0x9CF714", VA = "0x9CF714")]
	private static Vector3[] getLeftOrRightPlanePositions(float zMin, float xPos, float size)
	{
		return null;
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x9CF7D4", Offset = "0x9CF7D4", VA = "0x9CF7D4")]
	public AdvancedBoundaryCalculationService()
	{
	}
}
[Token(Token = "0x2000385")]
public static class CreateCubesAtPositionsService
{
	[Token(Token = "0x6001451")]
	[Address(RVA = "0xB849AC", Offset = "0xB849AC", VA = "0xB849AC")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material)
	{
		return null;
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xB84BEC", Offset = "0xB84BEC", VA = "0xB84BEC")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xB84E28", Offset = "0xB84E28", VA = "0xB84E28")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material, float objectSize, float height)
	{
		return null;
	}
}
[Token(Token = "0x2000386")]
public static class GetGameObjectPositionsService
{
	[Token(Token = "0x6001454")]
	[Address(RVA = "0xAC3488", Offset = "0xAC3488", VA = "0xAC3488")]
	public static List<Vector3> getObjectPositionsAsVectorList(List<GameObject> gameObjects)
	{
		return null;
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xAC3640", Offset = "0xAC3640", VA = "0xAC3640")]
	public static List<Vector3> getObjectPositionsAsVectorList(GameObject[] gameObjects)
	{
		return null;
	}
}
[Token(Token = "0x2000387")]
public class ObjectUtils : MonoBehaviour
{
	[Token(Token = "0x6001456")]
	[Address(RVA = "0xB03234", Offset = "0xB03234", VA = "0xB03234")]
	public static void setObjectsActive(List<GameObject> objectsToEnableOrDisable, bool enableState)
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xB033A4", Offset = "0xB033A4", VA = "0xB033A4")]
	public static List<GameObject> getObjectsAndAllChildrenOfArrayOfObjectsAsArrayList(GameObject[] inputGameObjects)
	{
		return null;
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xB03498", Offset = "0xB03498", VA = "0xB03498")]
	public static List<GameObject> getObjectAndAllChildrenAsList(GameObject inputGameObject)
	{
		return null;
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xB03858", Offset = "0xB03858", VA = "0xB03858")]
	public static void setObjectsCollidersActive(ArrayList objectsToEnableOrDisable, bool enableState)
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xB03BAC", Offset = "0xB03BAC", VA = "0xB03BAC")]
	public ObjectUtils()
	{
	}
}
[Token(Token = "0x2000388")]
public class RotateTowards : MonoBehaviour
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform target;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xAF2970", Offset = "0xAF2970", VA = "0xAF2970")]
	private void Update()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xAF2AA8", Offset = "0xAF2AA8", VA = "0xAF2AA8")]
	public RotateTowards()
	{
	}
}
[Token(Token = "0x2000389")]
public class DistanceFromPreviousPosLogger : MonoBehaviour
{
	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 previousPos;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int index;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float limitForPrintingPos;

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x9FA0F8", Offset = "0x9FA0F8", VA = "0x9FA0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x9FA134", Offset = "0x9FA134", VA = "0x9FA134")]
	protected void printDistanceFromPreviousPosition(float distanceSize)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x9FA274", Offset = "0x9FA274", VA = "0x9FA274")]
	private void updatePreviousPositionToCurrentPos()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x9FA2B0", Offset = "0x9FA2B0", VA = "0x9FA2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x9FA2D8", Offset = "0x9FA2D8", VA = "0x9FA2D8")]
	public DistanceFromPreviousPosLogger()
	{
	}
}
[Token(Token = "0x200038A")]
public class ValidObjectCreationAreaService : MonoBehaviour
{
	[Token(Token = "0x6001462")]
	[Address(RVA = "0xF22924", Offset = "0xF22924", VA = "0xF22924")]
	public static Area3D getVerticalCreationAreaBetweenTwoObjects(Transform leftMostObject, Transform rightMostObject, Transform lowestObject, Transform highestObject, Transform mostBackObject, Transform mostForwardObject, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xF22A64", Offset = "0xF22A64", VA = "0xF22A64")]
	public static Area3D getCreationAreaBetweenObjectsHorizontal(Transform leftMostObject, Transform rightMostObject, Transform mostBackObject, Transform mostForwardObject, float minY, float maxY, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xF22B74", Offset = "0xF22B74", VA = "0xF22B74")]
	public static Area3D getCreationAreaFromHighestObjectToMaxYLimit(Transform objectAtHighestPosition, float maxY, float minX, float maxX, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xF22C8C", Offset = "0xF22C8C", VA = "0xF22C8C")]
	public static Area3D getCreationAreaFromHighestObjectToMaxYLimit(float yPos, float maxY, float minX, float maxX, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xF22D38", Offset = "0xF22D38", VA = "0xF22D38")]
	public static Area3D getCreationAreaFromLowestObjectToMinYLimit(Transform objectAtLowestPosition, float minY, float minX, float maxX, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xF22DE4", Offset = "0xF22DE4", VA = "0xF22DE4")]
	public static Area3D getCreationAreaFromLowestObjectToMinYLimit(float yPos, float minY, float minX, float maxX, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xF22E90", Offset = "0xF22E90", VA = "0xF22E90")]
	public static Area3D getCreationAreaFromLeftMostObjectToMinXLimit(float minX, float objectPos, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xF22F3C", Offset = "0xF22F3C", VA = "0xF22F3C")]
	public static Area3D getCreationAreaFromRightMostObjectToMaxXLimit(Transform objectAtRightMostPosition, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xF23000", Offset = "0xF23000", VA = "0xF23000")]
	public static Area3D getCreationAreaFromRightMostObjectToMaxXLimit(float xPos, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xF230AC", Offset = "0xF230AC", VA = "0xF230AC")]
	public static Area3D getCreationAreaFromMostForwardObjectToMaxZLimit(float zPos, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xF23158", Offset = "0xF23158", VA = "0xF23158")]
	public static Area3D getCreationAreaFromMostBackObjectToMinZLimit(float zPos, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xF23204", Offset = "0xF23204", VA = "0xF23204")]
	public ValidObjectCreationAreaService()
	{
	}
}
[Token(Token = "0x200038B")]
public class Area3D
{
	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float minX;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float maxX;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minY;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxY;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minZ;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxZ;

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x9D5818", Offset = "0x9D5818", VA = "0x9D5818")]
	public Area3D(float minX, float maxX, float minY, float maxY)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x9D587C", Offset = "0x9D587C", VA = "0x9D587C")]
	private void setXY(float minX, float maxX, float minY, float maxY)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x9D58A0", Offset = "0x9D58A0", VA = "0x9D58A0")]
	public Area3D(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x9D5924", Offset = "0x9D5924", VA = "0x9D5924")]
	public float getMinX()
	{
		return default(float);
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x9D592C", Offset = "0x9D592C", VA = "0x9D592C")]
	public void setMinX(float minX)
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x9D5934", Offset = "0x9D5934", VA = "0x9D5934")]
	public float getMaxX()
	{
		return default(float);
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x9D593C", Offset = "0x9D593C", VA = "0x9D593C")]
	public void setMaxX(float maxX)
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x9D5944", Offset = "0x9D5944", VA = "0x9D5944")]
	public float getMinY()
	{
		return default(float);
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x9D594C", Offset = "0x9D594C", VA = "0x9D594C")]
	public void setMinY(float minY)
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x9D5954", Offset = "0x9D5954", VA = "0x9D5954")]
	public float getMaxY()
	{
		return default(float);
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x9D595C", Offset = "0x9D595C", VA = "0x9D595C")]
	public void setMaxY(float maxY)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x9D5964", Offset = "0x9D5964", VA = "0x9D5964")]
	public float getMinZ()
	{
		return default(float);
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x9D596C", Offset = "0x9D596C", VA = "0x9D596C")]
	public void setMinZ(float minZ)
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x9D5974", Offset = "0x9D5974", VA = "0x9D5974")]
	public float getMaxZ()
	{
		return default(float);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x9D597C", Offset = "0x9D597C", VA = "0x9D597C")]
	public void setMaxZ(float maxZ)
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x9D5984", Offset = "0x9D5984", VA = "0x9D5984")]
	public float getDifferenceMinMaxX()
	{
		return default(float);
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x9D5990", Offset = "0x9D5990", VA = "0x9D5990")]
	public float getDifferenceMinMaxY()
	{
		return default(float);
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x9D599C", Offset = "0x9D599C", VA = "0x9D599C")]
	public bool isLimitsInversed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x9D59C0", Offset = "0x9D59C0", VA = "0x9D59C0")]
	public Area3D getCopy()
	{
		return null;
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x9D5A54", Offset = "0x9D5A54", VA = "0x9D5A54")]
	public void increaseSize(float xIncrease, float yIncrease)
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x9D5A78", Offset = "0x9D5A78", VA = "0x9D5A78")]
	public void decreaseSize(float xDecrease, float yDecrease)
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x9D5A9C", Offset = "0x9D5A9C", VA = "0x9D5A9C")]
	public float[] getBorders()
	{
		return null;
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x9D5B60", Offset = "0x9D5B60", VA = "0x9D5B60")]
	public float getAverageY()
	{
		return default(float);
	}
}
[Token(Token = "0x200038C")]
public class GameObjectResizeService : MonoBehaviour
{
	[Token(Token = "0x6001485")]
	[Address(RVA = "0xAC185C", Offset = "0xAC185C", VA = "0xAC185C")]
	public static void resizeObjectX(GameObject gameObjectToResize, float newSize)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0xAC195C", Offset = "0xAC195C", VA = "0xAC195C")]
	public GameObjectResizeService()
	{
	}
}
[Token(Token = "0x200038D")]
public class ParabolaCalculator
{
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596DCC", Offset = "0x596DCC")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x8F8EC4", Offset = "0x8F8EC4", VA = "0x8F8EC4")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x8F8ECC", Offset = "0x8F8ECC", VA = "0x8F8ECC")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xADDF5C", Offset = "0xADDF5C", VA = "0xADDF5C")]
	public static Vector3 Parabola(Vector3 start, Vector3 end, float height, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xADE0C4", Offset = "0xADE0C4", VA = "0xADE0C4")]
	public ParabolaCalculator()
	{
	}
}
[Token(Token = "0x200038F")]
public class ParabolaController : MonoBehaviour
{
	[Token(Token = "0x2000390")]
	public class ParabolaFly
	{
		[Serializable]
		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x596DDC", Offset = "0x596DDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Component, Transform> <>9__4_0;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Transform> <>9__4_1;

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x15515FC", Offset = "0x15515FC", VA = "0x15515FC")]
			public <>c()
			{
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x1551604", Offset = "0x1551604", VA = "0x1551604")]
			internal Transform <.ctor>b__4_0(Component c)
			{
				return null;
			}

			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x1551684", Offset = "0x1551684", VA = "0x1551684")]
			internal int <.ctor>b__4_1(Transform a, Transform b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] Points;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Parabola3D[] parabolas;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float[] partDuration;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float completeDuration;

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x8F980C", Offset = "0x8F980C", VA = "0x8F980C")]
		public ParabolaFly(Transform ParabolaRoot)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x8F9C40", Offset = "0x8F9C40", VA = "0x8F9C40")]
		public Vector3 GetPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x8F9D5C", Offset = "0x8F9D5C", VA = "0x8F9D5C")]
		public void GetParabolaIndexAtTime(float time, out int parabolaIndex)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x8F9CD4", Offset = "0x8F9CD4", VA = "0x8F9CD4")]
		public void GetParabolaIndexAtTime(float time, out int parabolaIndex, out float timeInParabola)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x8F9D80", Offset = "0x8F9D80", VA = "0x8F9D80")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x8F9D88", Offset = "0x8F9D88", VA = "0x8F9D88")]
		public Vector3 getHighestPoint(int parabolaIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x8F9DC8", Offset = "0x8F9DC8", VA = "0x8F9DC8")]
		public void RefreshTransforms(float speed)
		{
		}
	}

	[Token(Token = "0x2000392")]
	public class Parabola3D
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C854", Offset = "0x59C854")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 A;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 B;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 C;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Parabola2D parabola2D;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 h;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool tooClose;

		[Token(Token = "0x170001FF")]
		public float Length
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x8F9178", Offset = "0x8F9178", VA = "0x8F9178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4DB4", Offset = "0x5A4DB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x8F9180", Offset = "0x8F9180", VA = "0x8F9180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4DC4", Offset = "0x5A4DC4")]
			private set
			{
			}
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x8F9188", Offset = "0x8F9188", VA = "0x8F9188")]
		public Parabola3D()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x8F9190", Offset = "0x8F9190", VA = "0x8F9190")]
		public Parabola3D(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x8F9218", Offset = "0x8F9218", VA = "0x8F9218")]
		public void Set(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x8F9300", Offset = "0x8F9300", VA = "0x8F9300")]
		public Vector3 getHighestPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x8F9400", Offset = "0x8F9400", VA = "0x8F9400")]
		public Vector3 GetPositionAtLength(float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x8F9238", Offset = "0x8F9238", VA = "0x8F9238")]
		private void refreshCurve()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x8F9534", Offset = "0x8F9534", VA = "0x8F9534")]
		private void refreshCurveNormal()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x8F96FC", Offset = "0x8F96FC", VA = "0x8F96FC")]
		private void refreshCurveClose()
		{
		}
	}

	[Token(Token = "0x2000393")]
	public class Parabola2D
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C864", Offset = "0x59C864")]
		private float <a>k__BackingField;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C874", Offset = "0x59C874")]
		private float <b>k__BackingField;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C884", Offset = "0x59C884")]
		private float <c>k__BackingField;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C894", Offset = "0x59C894")]
		private Vector2 <E>k__BackingField;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59C8A4", Offset = "0x59C8A4")]
		private float <Length>k__BackingField;

		[Token(Token = "0x17000200")]
		public float a
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x8F8EF4", Offset = "0x8F8EF4", VA = "0x8F8EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4DD4", Offset = "0x5A4DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x8F8EFC", Offset = "0x8F8EFC", VA = "0x8F8EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4DE4", Offset = "0x5A4DE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public float b
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x8F8F04", Offset = "0x8F8F04", VA = "0x8F8F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4DF4", Offset = "0x5A4DF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x8F8F0C", Offset = "0x8F8F0C", VA = "0x8F8F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E04", Offset = "0x5A4E04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float c
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x8F8F14", Offset = "0x8F8F14", VA = "0x8F8F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E14", Offset = "0x5A4E14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x8F8F1C", Offset = "0x8F8F1C", VA = "0x8F8F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E24", Offset = "0x5A4E24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public Vector2 E
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x8F8F24", Offset = "0x8F8F24", VA = "0x8F8F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E34", Offset = "0x5A4E34")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x8F8F2C", Offset = "0x8F8F2C", VA = "0x8F8F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E44", Offset = "0x5A4E44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public float Length
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x8F8F34", Offset = "0x8F8F34", VA = "0x8F8F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E54", Offset = "0x5A4E54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x8F8F3C", Offset = "0x8F8F3C", VA = "0x8F8F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4E64", Offset = "0x5A4E64")]
			private set
			{
			}
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x8F8F44", Offset = "0x8F8F44", VA = "0x8F8F44")]
		public Parabola2D(float a, float b, float c, float length)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x8F8FE4", Offset = "0x8F8FE4", VA = "0x8F8FE4")]
		public Parabola2D(Vector2 A, Vector2 B, Vector2 C)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x8F9158", Offset = "0x8F9158", VA = "0x8F9158")]
		public float f(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x8F8FB4", Offset = "0x8F8FB4", VA = "0x8F8FB4")]
		private void setMetadata()
		{
		}
	}

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParabolaRoot;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Autostart;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Animation;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	internal bool nextParbola;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float animationTime;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParabolaFly gizmo;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ParabolaFly parabolaFly;

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xADE0CC", Offset = "0xADE0CC", VA = "0xADE0CC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xADE2D0", Offset = "0xADE2D0", VA = "0xADE2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xADE444", Offset = "0xADE444", VA = "0xADE444")]
	private void Update()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xADE3B0", Offset = "0xADE3B0", VA = "0xADE3B0")]
	public void FollowParabola()
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xADE534", Offset = "0xADE534", VA = "0xADE534")]
	public Vector3 getHighestPoint(int parabolaIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xADE550", Offset = "0xADE550", VA = "0xADE550")]
	public Transform[] getPoints()
	{
		return null;
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xADE56C", Offset = "0xADE56C", VA = "0xADE56C")]
	public Vector3 GetPositionAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xADE588", Offset = "0xADE588", VA = "0xADE588")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xADE5A4", Offset = "0xADE5A4", VA = "0xADE5A4")]
	public void StopFollow()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xADE394", Offset = "0xADE394", VA = "0xADE394")]
	public void RefreshTransforms(float speed)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xADE5B0", Offset = "0xADE5B0", VA = "0xADE5B0")]
	public static float DistanceToLine(Ray ray, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xADE64C", Offset = "0xADE64C", VA = "0xADE64C")]
	public static Vector3 ClosestPointInLine(Ray ray, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xADE730", Offset = "0xADE730", VA = "0xADE730")]
	public ParabolaController()
	{
	}
}
[Token(Token = "0x2000394")]
public class ParticleSystemUtil : MonoBehaviour
{
	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xADEDE4", Offset = "0xADEDE4", VA = "0xADEDE4")]
	public static void changeMeshEffectColor(GameObject gameObject, Color color)
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xADEE7C", Offset = "0xADEE7C", VA = "0xADEE7C")]
	public static void changeColorOfAllParticleSystems(GameObject gameObject, Color color)
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xADEF98", Offset = "0xADEF98", VA = "0xADEF98")]
	public static void changeDurationOfParticleSystem(GameObject gameObject, float duration)
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xADF064", Offset = "0xADF064", VA = "0xADF064")]
	public static void changeColorOfParticleSystems(ParticleSystem[] particleSystems, Color color)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xADF144", Offset = "0xADF144", VA = "0xADF144")]
	public ParticleSystemUtil()
	{
	}
}
namespace Assets._scripts
{
	[Token(Token = "0x2000395")]
	public static class TargetObjectCreator
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB97EC0", Offset = "0xB97EC0", VA = "0xB97EC0")]
		public static void setUpTargetObjectsOnRadius(ArrayList targetObjectsArray, float radius, int numberOfTargetObjectsToBeCreated, float targetObjectSize, float additionalAngle, float objectSpreadInRadians, Transform m_Camera, GameController gameController)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB98194", Offset = "0xB98194", VA = "0xB98194")]
		public static void setUpTargetObjects(ArrayList targetObjectsArray, float targetObjectSize, GameController gameController)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB980D0", Offset = "0xB980D0", VA = "0xB980D0")]
		private static void positionObjectOnRadius(float radius, float targetObjectSize, int horizontalCounter, float objectSpreadInRadians, int numberOfTargetObjectsToBeCreated, float additionalAngle, Transform playerTransform, GameObject targetObject)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB98274", Offset = "0xB98274", VA = "0xB98274")]
		private static Vector3 getObjectArrivalDestinationOnRadius(float radius, float targetObjectSize, int horizontalCounter, float objectSpreadInRadians, int numberOfTargetObjectsToBeCreated, float additionalAngle, Transform playerTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB9831C", Offset = "0xB9831C", VA = "0xB9831C")]
		public static GameObject createDefaultGameObject(float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB983F0", Offset = "0xB983F0", VA = "0xB983F0")]
		public static GameObject createSpherePrimitiveGameObject(float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB97FFC", Offset = "0xB97FFC", VA = "0xB97FFC")]
		public static GameObject setUpInstantiatedTargetObjectObject(GameObject targetObject, float targetObjectSize, GameController gameController)
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xB984C4", Offset = "0xB984C4", VA = "0xB984C4")]
		public static GameObject setUpInstantiatedCoordinationCoachObject(GameObject targetObject, float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xB98518", Offset = "0xB98518", VA = "0xB98518")]
		public static GameObject createTargetObject(float targetObjectSize, GameController gameController)
		{
			return null;
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xB985A4", Offset = "0xB985A4", VA = "0xB985A4")]
		public static void setMaterialOfObjectToRed(GameObject inputGameObject)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB98678", Offset = "0xB98678", VA = "0xB98678")]
		public static GameObject createObjectToBlock(Transform inputTargetTransform, float targetObjectSize)
		{
			return null;
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000396")]
	public enum AAMode
	{
		[Token(Token = "0x4001083")]
		FXAA2,
		[Token(Token = "0x4001084")]
		FXAA3Console,
		[Token(Token = "0x4001085")]
		FXAA1PresetA,
		[Token(Token = "0x4001086")]
		FXAA1PresetB,
		[Token(Token = "0x4001087")]
		NFAA,
		[Token(Token = "0x4001088")]
		SSAA,
		[Token(Token = "0x4001089")]
		DLAA
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x596DEC", Offset = "0x596DEC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x596DEC", Offset = "0x596DEC")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AAMode mode;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showGeneratedNormals;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float offsetScale;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurRadius;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeThresholdMin;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float edgeThreshold;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgeSharpness;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dlaaSharp;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader ssaaShader;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material ssaa;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader dlaaShader;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material dlaa;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader nfaaShader;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material nfaa;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Shader shaderFXAAII;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material materialFXAAII;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material materialFXAAIII;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9D412C", Offset = "0x9D412C", VA = "0x9D412C")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9D4190", Offset = "0x9D4190", VA = "0x9D4190", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x9D4304", Offset = "0x9D4304", VA = "0x9D4304")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x9D4890", Offset = "0x9D4890", VA = "0x9D4890")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x596E80", Offset = "0x596E80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x596E80", Offset = "0x596E80")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000399")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x40010BF")]
			Ghosting,
			[Token(Token = "0x40010C0")]
			Anamorphic,
			[Token(Token = "0x40010C1")]
			Combined
		}

		[Token(Token = "0x200039A")]
		public enum TweakMode
		{
			[Token(Token = "0x40010C3")]
			Basic,
			[Token(Token = "0x40010C4")]
			Complex
		}

		[Token(Token = "0x200039B")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x40010C6")]
			Auto,
			[Token(Token = "0x40010C7")]
			On,
			[Token(Token = "0x40010C8")]
			Off
		}

		[Token(Token = "0x200039C")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x40010CA")]
			Screen,
			[Token(Token = "0x40010CB")]
			Add
		}

		[Token(Token = "0x200039D")]
		public enum BloomQuality
		{
			[Token(Token = "0x40010CD")]
			Cheap,
			[Token(Token = "0x40010CE")]
			High
		}

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode tweakMode;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BloomQuality quality;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color bloomThresholdColor;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bloomBlurIterations;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float flareRotation;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hollyStretchWidth;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareIntensity;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lensflareThreshold;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lensFlareSaturation;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color flareColorA;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color flareColorB;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color flareColorC;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color flareColorD;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Shader lensFlareShader;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader screenBlendShader;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material screenBlend;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x9E2CAC", Offset = "0x9E2CAC", VA = "0x9E2CAC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9E2D9C", Offset = "0x9E2D9C", VA = "0x9E2D9C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9E424C", Offset = "0x9E424C", VA = "0x9E424C")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9E3FCC", Offset = "0x9E3FCC", VA = "0x9E3FCC")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9E3CB8", Offset = "0x9E3CB8", VA = "0x9E3CB8")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x9E3BCC", Offset = "0x9E3BCC", VA = "0x9E3BCC")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x9E3DAC", Offset = "0x9E3DAC", VA = "0x9E3DAC")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9E431C", Offset = "0x9E431C", VA = "0x9E431C")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x40010D0")]
		Ghosting,
		[Token(Token = "0x40010D1")]
		Anamorphic,
		[Token(Token = "0x40010D2")]
		Combined
	}
	[Token(Token = "0x200039F")]
	public enum TweakMode34
	{
		[Token(Token = "0x40010D4")]
		Basic,
		[Token(Token = "0x40010D5")]
		Complex
	}
	[Token(Token = "0x20003A0")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x40010D7")]
		Auto,
		[Token(Token = "0x40010D8")]
		On,
		[Token(Token = "0x40010D9")]
		Off
	}
	[Token(Token = "0x20003A1")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x40010DB")]
		Screen,
		[Token(Token = "0x40010DC")]
		Add
	}
	[Token(Token = "0x20003A2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x596F14", Offset = "0x596F14")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x596F14", Offset = "0x596F14")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bloomBlurIterations;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lensflares;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hollyStretchWidth;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lensflareIntensity;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float lensflareThreshold;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color flareColorA;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color flareColorB;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorC;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorD;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader vignetteShader;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material vignetteMaterial;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader separableBlurShader;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader screenBlendShader;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material screenBlend;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9E445C", Offset = "0x9E445C", VA = "0x9E445C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x9E45C0", Offset = "0x9E45C0", VA = "0x9E45C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9E562C", Offset = "0x9E562C", VA = "0x9E562C")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x9E53BC", Offset = "0x9E53BC", VA = "0x9E53BC")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x9E510C", Offset = "0x9E510C", VA = "0x9E510C")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x9E5248", Offset = "0x9E5248", VA = "0x9E5248")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x9E56E8", Offset = "0x9E56E8", VA = "0x9E56E8")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x596FA8", Offset = "0x596FA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x596FA8", Offset = "0x596FA8")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x20003A4")]
		public enum Resolution
		{
			[Token(Token = "0x4001108")]
			Low,
			[Token(Token = "0x4001109")]
			High
		}

		[Token(Token = "0x20003A5")]
		public enum BlurType
		{
			[Token(Token = "0x400110B")]
			Standard,
			[Token(Token = "0x400110C")]
			Sgx
		}

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C8B4", Offset = "0x59C8B4")]
		public float threshold;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C8CC", Offset = "0x59C8CC")]
		public float intensity;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C8E4", Offset = "0x59C8E4")]
		public float blurSize;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Resolution resolution;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C8FC", Offset = "0x59C8FC")]
		public int blurIterations;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlurType blurType;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fastBloomShader;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fastBloomMaterial;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xFC1A38", Offset = "0xFC1A38", VA = "0xFC1A38", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xFC1AB0", Offset = "0xFC1AB0", VA = "0xFC1AB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xFC1B5C", Offset = "0xFC1B5C", VA = "0xFC1B5C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xFC1F3C", Offset = "0xFC1F3C", VA = "0xFC1F3C")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x59703C", Offset = "0x59703C")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int iterations;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blurSpread;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000205")]
		protected Material material
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xFC1F60", Offset = "0xFC1F60", VA = "0xFC1F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xFC20B4", Offset = "0xFC20B4", VA = "0xFC20B4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xFC21B8", Offset = "0xFC21B8", VA = "0xFC21B8")]
		protected void Start()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xFC2274", Offset = "0xFC2274", VA = "0xFC2274")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xFC2398", Offset = "0xFC2398", VA = "0xFC2398")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xFC24A8", Offset = "0xFC24A8", VA = "0xFC24A8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xFC2610", Offset = "0xFC2610", VA = "0xFC2610")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597088", Offset = "0x597088")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597088", Offset = "0x597088")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x20003A8")]
		public enum BlurType
		{
			[Token(Token = "0x4001118")]
			StandardGauss,
			[Token(Token = "0x4001119")]
			SgxGauss
		}

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C914", Offset = "0x59C914")]
		public int downsample;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C92C", Offset = "0x59C92C")]
		public float blurSize;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59C944", Offset = "0x59C944")]
		public int blurIterations;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlurType blurType;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader blurShader;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blurMaterial;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xFC262C", Offset = "0xFC262C", VA = "0xFC262C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xFC26A4", Offset = "0xFC26A4", VA = "0xFC26A4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xFC2750", Offset = "0xFC2750", VA = "0xFC2750")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xFC2AFC", Offset = "0xFC2AFC", VA = "0xFC2AFC")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x59711C", Offset = "0x59711C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x59711C", Offset = "0x59711C")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x20003AA")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4001139")]
			CameraMotion,
			[Token(Token = "0x400113A")]
			LocalBlur,
			[Token(Token = "0x400113B")]
			Reconstruction,
			[Token(Token = "0x400113C")]
			ReconstructionDX11,
			[Token(Token = "0x400113D")]
			ReconstructionDisc
		}

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preview;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 previewScale;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float movementScale;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationScale;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxVelocity;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minVelocity;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float velocityScale;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float softZDistance;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int velocityDownsample;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject tmpCam;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shader;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader replacementClear;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material motionBlurMaterial;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D noiseTexture;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float jitter;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool showVelocity;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float showVelocityScale;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int prevFrameCount;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool wasActive;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Camera _camera;

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xFD15C0", Offset = "0xFD15C0", VA = "0xFD15C0")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xFD16CC", Offset = "0xFD16CC", VA = "0xFD16CC")]
		private new void Start()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xFD1868", Offset = "0xFD1868", VA = "0xFD1868")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xFD193C", Offset = "0xFD193C", VA = "0xFD193C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xFD1AD4", Offset = "0xFD1AD4", VA = "0xFD1AD4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xFD1B8C", Offset = "0xFD1B8C", VA = "0xFD1B8C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xFD17BC", Offset = "0xFD17BC", VA = "0xFD17BC")]
		private void Remember()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xFD3160", Offset = "0xFD3160", VA = "0xFD3160")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xFD30D0", Offset = "0xFD30D0", VA = "0xFD30D0")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xFD3150", Offset = "0xFD3150", VA = "0xFD3150")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xFD3514", Offset = "0xFD3514", VA = "0xFD3514")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5971B0", Offset = "0x5971B0")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x20003AC")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4001157")]
			Simple,
			[Token(Token = "0x4001158")]
			Advanced
		}

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve redChannel;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useDepthCorrection;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve zCurve;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material ccMaterial;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccDepthMaterial;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D zCurveTex;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float saturation;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool selectiveCc;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color selectiveFromColor;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color selectiveToColor;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool updateTextures;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xFD7464", Offset = "0xFD7464", VA = "0xFD7464")]
		private new void Start()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xFD7490", Offset = "0xFD7490", VA = "0xFD7490")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xFD7494", Offset = "0xFD7494", VA = "0xFD7494", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xFD7778", Offset = "0xFD7778", VA = "0xFD7778")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xFD7B38", Offset = "0xFD7B38", VA = "0xFD7B38")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xFD7B3C", Offset = "0xFD7B3C", VA = "0xFD7B3C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xFD7E88", Offset = "0xFD7E88", VA = "0xFD7E88")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5971FC", Offset = "0x5971FC")]
	[ExecuteInEditMode]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader shader;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture3D converted3DLut;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string basedOnTempTex;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xFD8518", Offset = "0xFD8518", VA = "0xFD8518", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xFD858C", Offset = "0xFD858C", VA = "0xFD858C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xFD8648", Offset = "0xFD8648", VA = "0xFD8648")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xFD86F4", Offset = "0xFD86F4", VA = "0xFD86F4")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xFD8928", Offset = "0xFD8928", VA = "0xFD8928")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xFD89F0", Offset = "0xFD89F0", VA = "0xFD89F0")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xFD8D74", Offset = "0xFD8D74", VA = "0xFD8D74")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xFD8F8C", Offset = "0xFD8F8C", VA = "0xFD8F8C")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597248", Offset = "0x597248")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xB7A8BC", Offset = "0xB7A8BC", VA = "0xB7A8BC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xB7A984", Offset = "0xB7A984", VA = "0xB7A984")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597294", Offset = "0x597294")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597294", Offset = "0x597294")]
	internal class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float threshold;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurSpread;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader separableBlurShader;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xB7B3B0", Offset = "0xB7B3B0", VA = "0xB7B3B0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xB7B450", Offset = "0xB7B450", VA = "0xB7B450")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xB7B7E4", Offset = "0xB7B7E4", VA = "0xB7B7E4")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597328", Offset = "0x597328")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float adaptationSpeed;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float limitMinimum;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float limitMaximum;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x17000206")]
		protected Material materialLum
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xB7B7FC", Offset = "0xB7B7FC", VA = "0xB7B7FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		protected Material materialReduce
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xB7B8D8", Offset = "0xB7B8D8", VA = "0xB7B8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xB7B9B4", Offset = "0xB7B9B4", VA = "0xB7B9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		protected Material materialApply
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xB7BA90", Offset = "0xB7BA90", VA = "0xB7BA90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xB7BB6C", Offset = "0xB7BB6C", VA = "0xB7BB6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xB7BC00", Offset = "0xB7BC00", VA = "0xB7BC00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xB7BD60", Offset = "0xB7BD60", VA = "0xB7BD60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xB7BF8C", Offset = "0xB7BF8C", VA = "0xB7BF8C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xB7C1F0", Offset = "0xB7C1F0", VA = "0xB7C1F0")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xB7C3EC", Offset = "0xB7C3EC", VA = "0xB7C3EC")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597374", Offset = "0x597374")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597374", Offset = "0x597374")]
	internal class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int softness;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spread;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader blurShader;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader depthFetchShader;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material depthFetchMaterial;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader creaseApplyShader;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xB844EC", Offset = "0xB844EC", VA = "0xB844EC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB845BC", Offset = "0xB845BC", VA = "0xB845BC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xB84990", Offset = "0xB84990", VA = "0xB84990")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597408", Offset = "0x597408")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597408", Offset = "0x597408")]
	[ExecuteInEditMode]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x20003B3")]
		public enum BlurType
		{
			[Token(Token = "0x4001194")]
			DiscBlur,
			[Token(Token = "0x4001195")]
			DX11
		}

		[Token(Token = "0x20003B4")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4001197")]
			Low,
			[Token(Token = "0x4001198")]
			Medium,
			[Token(Token = "0x4001199")]
			High
		}

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool visualizeFocus;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float focalLength;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float focalSize;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float aperture;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform focalTransform;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxBlurSize;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool highResolution;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BlurType blurType;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool nearBlur;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float foregroundOverlap;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader dofHdrShader;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dx11BokehShader;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float dx11BokehThreshold;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dx11BokehScale;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dx11BokehIntensity;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float focalDistance01;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float internalBlurWidth;

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xB8AC98", Offset = "0xB8AC98", VA = "0xB8AC98", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xB8AEA8", Offset = "0xB8AEA8", VA = "0xB8AEA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xB8AF18", Offset = "0xB8AF18", VA = "0xB8AF18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xB8B034", Offset = "0xB8B034", VA = "0xB8B034")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xB8AD54", Offset = "0xB8AD54", VA = "0xB8AD54")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xB8B090", Offset = "0xB8B090", VA = "0xB8B090")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xB8B1E8", Offset = "0xB8B1E8", VA = "0xB8B1E8")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xB8B51C", Offset = "0xB8B51C", VA = "0xB8B51C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xB8CB60", Offset = "0xB8CB60", VA = "0xB8CB60")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x59749C", Offset = "0x59749C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x59749C", Offset = "0x59749C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x20003B6")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x40011C6")]
			OnlyBackground = 1,
			[Token(Token = "0x40011C7")]
			BackgroundAndForeground
		}

		[Token(Token = "0x20003B7")]
		public enum DofResolution
		{
			[Token(Token = "0x40011C9")]
			High = 2,
			[Token(Token = "0x40011CA")]
			Medium,
			[Token(Token = "0x40011CB")]
			Low
		}

		[Token(Token = "0x20003B8")]
		public enum DofBlurriness
		{
			[Token(Token = "0x40011CD")]
			Low = 1,
			[Token(Token = "0x40011CE")]
			High = 2,
			[Token(Token = "0x40011CF")]
			VeryHigh = 4
		}

		[Token(Token = "0x20003B9")]
		public enum BokehDestination
		{
			[Token(Token = "0x40011D1")]
			Background = 1,
			[Token(Token = "0x40011D2")]
			Foreground,
			[Token(Token = "0x40011D3")]
			BackgroundAndForeground
		}

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DofResolution resolution;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool simpleTweakMode;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float focalPoint;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float smoothness;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalZDistance;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalZStartCurve;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float focalZEndCurve;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float focalStartCurve;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float focalEndCurve;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float focalDistance01;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectFocus;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float focalSize;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public DofBlurriness bluriness;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxBlurSpread;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dofBlurShader;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material dofBlurMaterial;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofShader;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofMaterial;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool visualize;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float widthOverHeight;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float oneOverBaseSize;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool bokeh;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool bokehSupport;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader bokehShader;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float bokehScale;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float bokehIntensity;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int bokehDownsample;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material bokehMaterial;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Camera _camera;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture bokehSource;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xB8CBB8", Offset = "0xB8CBB8", VA = "0xB8CBB8")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xB8CCD0", Offset = "0xB8CCD0", VA = "0xB8CCD0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xB8CE18", Offset = "0xB8CE18", VA = "0xB8CE18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xB8CE74", Offset = "0xB8CE74", VA = "0xB8CE74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xB8CEF8", Offset = "0xB8CEF8", VA = "0xB8CEF8")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xB8CFE8", Offset = "0xB8CFE8", VA = "0xB8CFE8")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB8D00C", Offset = "0xB8D00C", VA = "0xB8D00C")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB8D030", Offset = "0xB8D030", VA = "0xB8D030")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xB8DF08", Offset = "0xB8DF08", VA = "0xB8DF08")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xB8E5FC", Offset = "0xB8E5FC", VA = "0xB8E5FC")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xB8EA74", Offset = "0xB8EA74", VA = "0xB8EA74")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xB8DDA8", Offset = "0xB8DDA8", VA = "0xB8DDA8")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xB8E1AC", Offset = "0xB8E1AC", VA = "0xB8E1AC")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xB8E8CC", Offset = "0xB8E8CC", VA = "0xB8E8CC")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xB8D9DC", Offset = "0xB8D9DC", VA = "0xB8D9DC")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xB8ECA4", Offset = "0xB8ECA4", VA = "0xB8ECA4")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597530", Offset = "0x597530")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597530", Offset = "0x597530")]
	[ExecuteInEditMode]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x20003BB")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x40011E0")]
			TriangleDepthNormals,
			[Token(Token = "0x40011E1")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x40011E2")]
			SobelDepth,
			[Token(Token = "0x40011E3")]
			SobelDepthThin,
			[Token(Token = "0x40011E4")]
			TriangleLuminance
		}

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EdgeDetectMode mode;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityDepth;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sensitivityNormals;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lumThreshold;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeExp;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sampleDist;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgesOnly;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader edgeDetectShader;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9FDBAC", Offset = "0x9FDBAC", VA = "0x9FDBAC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9FDD00", Offset = "0x9FDD00", VA = "0x9FDD00")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x9FDC44", Offset = "0x9FDC44", VA = "0x9FDC44")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x9FDD0C", Offset = "0x9FDD0C", VA = "0x9FDD0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x9FDD10", Offset = "0x9FDD10", VA = "0x9FDD10")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x9FDF38", Offset = "0x9FDF38", VA = "0x9FDF38")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5975C4", Offset = "0x5975C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5975C4", Offset = "0x5975C4")]
	internal class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float strengthX;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strengthY;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader fishEyeShader;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material fisheyeMaterial;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xA090A0", Offset = "0xA090A0", VA = "0xA090A0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xA09118", Offset = "0xA09118", VA = "0xA09118")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xA09290", Offset = "0xA09290", VA = "0xA09290")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597658", Offset = "0x597658")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597658", Offset = "0x597658")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59C95C", Offset = "0x59C95C")]
		public bool distanceFog;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59C994", Offset = "0x59C994")]
		public bool useRadialDistance;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59C9CC", Offset = "0x59C9CC")]
		public bool heightFog;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59CA04", Offset = "0x59CA04")]
		public float height;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CA3C", Offset = "0x59CA3C")]
		public float heightDensity;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59CA58", Offset = "0x59CA58")]
		public float startDistance;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fogShader;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fogMaterial;

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xAC37E4", Offset = "0xAC37E4", VA = "0xAC37E4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xAC3864", Offset = "0xAC3864", VA = "0xAC3864")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xAC3F4C", Offset = "0xAC3F4C", VA = "0xAC3F4C")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xAC40B8", Offset = "0xAC40B8", VA = "0xAC40B8")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5976EC", Offset = "0x5976EC")]
	[ExecuteInEditMode]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rampOffset;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xAC5160", Offset = "0xAC5160", VA = "0xAC5160")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xAC532C", Offset = "0xAC532C", VA = "0xAC532C")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597738", Offset = "0x597738")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597738", Offset = "0x597738")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x1700020A")]
		protected Material material
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xAC5250", Offset = "0xAC5250", VA = "0xAC5250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xACCDA0", Offset = "0xACCDA0", VA = "0xACCDA0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xACCE4C", Offset = "0xACCE4C", VA = "0xACCE4C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xAC5334", Offset = "0xAC5334", VA = "0xAC5334")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5977BC", Offset = "0x5977BC")]
	public class ImageEffects
	{
		[Token(Token = "0x6001548")]
		[Address(RVA = "0xACCEF8", Offset = "0xACCEF8", VA = "0xACCEF8")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xACD144", Offset = "0xACD144", VA = "0xACD144")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5A4E94", Offset = "0x5A4E94")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xACD1B8", Offset = "0xACD1B8", VA = "0xACD1B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5A4ECC", Offset = "0x5A4ECC")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xACD234", Offset = "0xACD234", VA = "0xACD234")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5977F4", Offset = "0x5977F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5977F4", Offset = "0x5977F4")]
	[ExecuteInEditMode]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurAmount;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xC605C4", Offset = "0xC605C4", VA = "0xC605C4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC6060C", Offset = "0xC6060C", VA = "0xC6060C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC60680", Offset = "0xC60680", VA = "0xC60680")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC60A28", Offset = "0xC60A28", VA = "0xC60A28")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597888", Offset = "0x597888")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597888", Offset = "0x597888")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float generalIntensity;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blackIntensity;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float whiteIntensity;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float midGrey;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dx11Grain;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float softness;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool monochrome;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 intensities;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 tiling;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float monochromeTiling;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FilterMode filterMode;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader noiseShader;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material noiseMaterial;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xC64D44", Offset = "0xC64D44", VA = "0xC64D44", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC64DF4", Offset = "0xC64DF4", VA = "0xC64DF4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC655F8", Offset = "0xC655F8", VA = "0xC655F8")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC6594C", Offset = "0xC6594C", VA = "0xC6594C")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x59791C", Offset = "0x59791C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x59791C", Offset = "0x59791C")]
	[ExecuteInEditMode]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float grainIntensityMin;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float grainIntensityMax;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float grainSize;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scratchIntensityMin;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scratchIntensityMax;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scratchFPS;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float scratchJitter;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x1700020B")]
		protected Material material
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xC65B34", Offset = "0xC65B34", VA = "0xC65B34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC659E0", Offset = "0xC659E0", VA = "0xC659E0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC65CB0", Offset = "0xC65CB0", VA = "0xC65CB0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC65DB0", Offset = "0xC65DB0", VA = "0xC65DB0")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC65EA4", Offset = "0xC65EA4", VA = "0xC65EA4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC66224", Offset = "0xC66224", VA = "0xC66224")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5979B0", Offset = "0x5979B0")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xAE9474", Offset = "0xAE9474", VA = "0xAE9474")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xAE98CC", Offset = "0xAE98CC", VA = "0xAE98CC")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xAE9ADC", Offset = "0xAE9ADC", VA = "0xAE9ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xAE9AE8", Offset = "0xAE9AE8", VA = "0xAE9AE8")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xAE9C00", Offset = "0xAE9C00", VA = "0xAE9C00", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xAE9CC4", Offset = "0xAE9CC4", VA = "0xAE9CC4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xAE9AF0", Offset = "0xAE9AF0", VA = "0xAE9AF0")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xAE9CD0", Offset = "0xAE9CD0", VA = "0xAE9CD0")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xAE9D2C", Offset = "0xAE9D2C", VA = "0xAE9D2C")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xAE9D34", Offset = "0xAE9D34", VA = "0xAE9D34")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xAE9DF0", Offset = "0xAE9DF0", VA = "0xAE9DF0")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xAE98A0", Offset = "0xAE98A0", VA = "0xAE98A0")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xAEA064", Offset = "0xAEA064", VA = "0xAEA064")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xAEA3E0", Offset = "0xAEA3E0", VA = "0xAEA3E0")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597A20", Offset = "0x597A20")]
	[ExecuteInEditMode]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0xAEA3F4", Offset = "0xAEA3F4", VA = "0xAEA3F4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xAEA468", Offset = "0xAEA468", VA = "0xAEA468")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xAEA6C0", Offset = "0xAEA6C0", VA = "0xAEA6C0")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xAEAA38", Offset = "0xAEAA38", VA = "0xAEAA38")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xAEABE0", Offset = "0xAEABE0", VA = "0xAEABE0")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	internal class Quads
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xAEC638", Offset = "0xAEC638", VA = "0xAEC638")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xAEC764", Offset = "0xAEC764", VA = "0xAEC764")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xAEC95C", Offset = "0xAEC95C", VA = "0xAEC95C")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xAECBF8", Offset = "0xAECBF8", VA = "0xAECBF8")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xAECFB8", Offset = "0xAECFB8", VA = "0xAECFB8")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597A90", Offset = "0x597A90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597A90", Offset = "0x597A90")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x20003C8")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4001227")]
			Additive,
			[Token(Token = "0x4001228")]
			ScreenBlend,
			[Token(Token = "0x4001229")]
			Multiply,
			[Token(Token = "0x400122A")]
			Overlay,
			[Token(Token = "0x400122B")]
			AlphaBlend
		}

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D texture;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader overlayShader;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material overlayMaterial;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xAF4224", Offset = "0xAF4224", VA = "0xAF4224", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xAF4290", Offset = "0xAF4290", VA = "0xAF4290")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xAF4418", Offset = "0xAF4418", VA = "0xAF4418")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597B24", Offset = "0x597B24")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597B24", Offset = "0x597B24")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CA90", Offset = "0x59CA90")]
		public float intensity;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CAA8", Offset = "0x59CAA8")]
		public float radius;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CAC4", Offset = "0x59CAC4")]
		public int blurIterations;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CADC", Offset = "0x59CADC")]
		public float blurFilterDistance;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CAF4", Offset = "0x59CAF4")]
		public int downsample;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D rand;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader aoShader;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material aoMaterial;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xAF4438", Offset = "0xAF4438", VA = "0xAF4438", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xAF44AC", Offset = "0xAF44AC", VA = "0xAF44AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xAF4558", Offset = "0xAF4558", VA = "0xAF4558")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xAF4B48", Offset = "0xAF4B48", VA = "0xAF4B48")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597BB8", Offset = "0x597BB8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597BB8", Offset = "0x597BB8")]
	[ExecuteInEditMode]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x20003CB")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4001240")]
			Low,
			[Token(Token = "0x4001241")]
			Medium,
			[Token(Token = "0x4001242")]
			High
		}

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_Radius;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_Blur;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_Downsampling;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_MinZ;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xAF4B74", Offset = "0xAF4B74", VA = "0xAF4B74")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xAF4C2C", Offset = "0xAF4C2C", VA = "0xAF4C2C")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xAF4CC4", Offset = "0xAF4CC4", VA = "0xAF4CC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xAF4CCC", Offset = "0xAF4CCC", VA = "0xAF4CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xAF4E84", Offset = "0xAF4E84", VA = "0xAF4E84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xAF4DA0", Offset = "0xAF4DA0", VA = "0xAF4DA0")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xAF4EF4", Offset = "0xAF4EF4", VA = "0xAF4EF4")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xAF556C", Offset = "0xAF556C", VA = "0xAF556C")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597C4C", Offset = "0x597C4C")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x6001583")]
		[Address(RVA = "0xAF65C0", Offset = "0xAF65C0", VA = "0xAF65C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xAF6650", Offset = "0xAF6650", VA = "0xAF6650")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597C98", Offset = "0x597C98")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597C98", Offset = "0x597C98")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x20003CE")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4001252")]
			Low,
			[Token(Token = "0x4001253")]
			Normal,
			[Token(Token = "0x4001254")]
			High
		}

		[Token(Token = "0x20003CF")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4001256")]
			Screen,
			[Token(Token = "0x4001257")]
			Add
		}

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform sunTransform;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int radialBlurIterations;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color sunColor;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color sunThreshold;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sunShaftIntensity;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxRadius;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useDepthTexture;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader sunShaftsShader;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader simpleClearShader;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material simpleClearMaterial;

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xB9478C", Offset = "0xB9478C", VA = "0xB9478C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xB9482C", Offset = "0xB9482C", VA = "0xB9482C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xB95014", Offset = "0xB95014", VA = "0xB95014")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597D2C", Offset = "0x597D2C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597D2C", Offset = "0x597D2C")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x20003D1")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4001260")]
			TiltShiftMode,
			[Token(Token = "0x4001261")]
			IrisMode
		}

		[Token(Token = "0x20003D2")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4001263")]
			Preview,
			[Token(Token = "0x4001264")]
			Normal,
			[Token(Token = "0x4001265")]
			High
		}

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TiltShiftMode mode;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltShiftQuality quality;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CB0C", Offset = "0x59CB0C")]
		public float blurArea;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CB24", Offset = "0x59CB24")]
		public float maxBlurSize;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CB3C", Offset = "0x59CB3C")]
		public int downsample;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader tiltShiftShader;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xF1270C", Offset = "0xF1270C", VA = "0xF1270C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xF1278C", Offset = "0xF1278C", VA = "0xF1278C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xF12A48", Offset = "0xF12A48", VA = "0xF12A48")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597DB0", Offset = "0x597DB0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597DB0", Offset = "0x597DB0")]
	[ExecuteInEditMode]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x20003D4")]
		public enum TonemapperType
		{
			[Token(Token = "0x4001274")]
			SimpleReinhard,
			[Token(Token = "0x4001275")]
			UserCurve,
			[Token(Token = "0x4001276")]
			Hable,
			[Token(Token = "0x4001277")]
			Photographic,
			[Token(Token = "0x4001278")]
			OptimizedHejiDawson,
			[Token(Token = "0x4001279")]
			AdaptiveReinhard,
			[Token(Token = "0x400127A")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x20003D5")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x400127C")]
			Square16 = 0x10,
			[Token(Token = "0x400127D")]
			Square32 = 0x20,
			[Token(Token = "0x400127E")]
			Square64 = 0x40,
			[Token(Token = "0x400127F")]
			Square128 = 0x80,
			[Token(Token = "0x4001280")]
			Square256 = 0x100,
			[Token(Token = "0x4001281")]
			Square512 = 0x200,
			[Token(Token = "0x4001282")]
			Square1024 = 0x400
		}

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TonemapperType type;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D curveTex;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exposureAdjustment;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float middleGrey;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float white;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float adaptionSpeed;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader tonemapper;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material tonemapMaterial;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture rt;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xF13B78", Offset = "0xF13B78", VA = "0xF13B78", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xF13CF0", Offset = "0xF13CF0", VA = "0xF13CF0")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF13FA4", Offset = "0xF13FA4", VA = "0xF13FA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF14130", Offset = "0xF14130", VA = "0xF14130")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF14238", Offset = "0xF14238", VA = "0xF14238")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF14A9C", Offset = "0xF14A9C", VA = "0xF14A9C")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	internal class Triangles
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xF17FCC", Offset = "0xF17FCC", VA = "0xF17FCC")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF18110", Offset = "0xF18110", VA = "0xF18110")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF18308", Offset = "0xF18308", VA = "0xF18308")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xF185A4", Offset = "0xF185A4", VA = "0xF185A4")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xF188C0", Offset = "0xF188C0", VA = "0xF188C0")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597E44", Offset = "0x597E44")]
	[ExecuteInEditMode]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF1EB30", Offset = "0xF1EB30", VA = "0xF1EB30")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF1EB7C", Offset = "0xF1EB7C", VA = "0xF1EB7C")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597E90", Offset = "0x597E90")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597E90", Offset = "0x597E90")]
	[ExecuteInEditMode]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x20003D9")]
		public enum AberrationMode
		{
			[Token(Token = "0x4001297")]
			Simple,
			[Token(Token = "0x4001298")]
			Advanced
		}

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AberrationMode mode;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float chromaticAberration;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float axialAberration;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float blur;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blurSpread;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float luminanceDependency;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurDistance;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader vignetteShader;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader chromAberrationShader;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF232A0", Offset = "0xF232A0", VA = "0xF232A0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xF23368", Offset = "0xF23368", VA = "0xF23368")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xF23938", Offset = "0xF23938", VA = "0xF23938")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x597F24", Offset = "0x597F24")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xF23F64", Offset = "0xF23F64", VA = "0xF23F64")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF23FB0", Offset = "0xF23FB0", VA = "0xF23FB0")]
		public Vortex()
		{
		}
	}
}
namespace PixelPlay.OffScreenIndicator
{
	[Token(Token = "0x20003DB")]
	public class OffScreenIndicatorCore
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0xB08128", Offset = "0xB08128", VA = "0xB08128")]
		public static Vector3 GetScreenPosition(Camera mainCamera, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xB08140", Offset = "0xB08140", VA = "0xB08140")]
		public static bool IsTargetVisible(Vector3 screenPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xB082D8", Offset = "0xB082D8", VA = "0xB082D8")]
		public static void GetArrowIndicatorPositionAndAngle(ref Vector3 screenPosition, ref float angle, Vector3 screenCentre, Vector3 screenBounds)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xB08618", Offset = "0xB08618", VA = "0xB08618")]
		public OffScreenIndicatorCore()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003DC")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700020C")]
		public bool Highlight
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xB7AA38", Offset = "0xB7AA38", VA = "0xB7AA38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xB7AA40", Offset = "0xB7AA40", VA = "0xB7AA40")]
			set
			{
			}
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xB7AA4C", Offset = "0xB7AA4C", VA = "0xB7AA4C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xB7AC14", Offset = "0xB7AC14", VA = "0xB7AC14", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xB7AC3C", Offset = "0xB7AC3C", VA = "0xB7AC3C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xB7AC64", Offset = "0xB7AC64", VA = "0xB7AC64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xB7AB14", Offset = "0xB7AB14", VA = "0xB7AB14")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xB7AF38", Offset = "0xB7AF38", VA = "0xB7AF38")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700020D")]
		public bool InRange
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x9FA2EC", Offset = "0x9FA2EC", VA = "0x9FA2EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x9FA2F4", Offset = "0x9FA2F4", VA = "0x9FA2F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool Targeted
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x9FA470", Offset = "0x9FA470", VA = "0x9FA470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x9FA478", Offset = "0x9FA478", VA = "0x9FA478")]
			set
			{
			}
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9FA484", Offset = "0x9FA484", VA = "0x9FA484", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x9FA300", Offset = "0x9FA300", VA = "0x9FA300")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x9FA5F0", Offset = "0x9FA5F0", VA = "0x9FA5F0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x597F70", Offset = "0x597F70")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700020F")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x9FA5F8", Offset = "0x9FA5F8", VA = "0x9FA5F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x9FA600", Offset = "0x9FA600", VA = "0x9FA600")]
			set
			{
			}
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x9FA61C", Offset = "0x9FA61C", VA = "0x9FA61C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9FA85C", Offset = "0x9FA85C", VA = "0x9FA85C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9FB174", Offset = "0x9FB174", VA = "0x9FB174", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x9FB608", Offset = "0x9FB608", VA = "0x9FB608", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x9FB8C8", Offset = "0x9FB8C8", VA = "0x9FB8C8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9FAAD0", Offset = "0x9FAAD0", VA = "0x9FAAD0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x9FB9B8", Offset = "0x9FB9B8", VA = "0x9FB9B8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9FBE14", Offset = "0x9FBE14", VA = "0x9FBE14", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9FBE2C", Offset = "0x9FBE2C", VA = "0x9FBE2C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9FBE34", Offset = "0x9FBE34", VA = "0x9FBE34")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xAC4DD8", Offset = "0xAC4DD8", VA = "0xAC4DD8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xAC4E90", Offset = "0xAC4E90", VA = "0xAC4E90")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xAC4F48", Offset = "0xAC4F48", VA = "0xAC4F48")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003E1")]
		public enum CrosshairState
		{
			[Token(Token = "0x40012BE")]
			Disabled,
			[Token(Token = "0x40012BF")]
			Enabled,
			[Token(Token = "0x40012C0")]
			Targeted
		}

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xAC5008", Offset = "0xAC5008", VA = "0xAC5008")]
		private void Start()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xAC5074", Offset = "0xAC5074", VA = "0xAC5074")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xAC5110", Offset = "0xAC5110", VA = "0xAC5110")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xAC5158", Offset = "0xAC5158", VA = "0xAC5158")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xAE0ACC", Offset = "0xAE0ACC", VA = "0xAE0ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xAE0BB8", Offset = "0xAE0BB8", VA = "0xAE0BB8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xAE0BC4", Offset = "0xAE0BC4", VA = "0xAE0BC4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xAE0BD0", Offset = "0xAE0BD0", VA = "0xAE0BD0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xFC2B18", Offset = "0xFC2B18", VA = "0xFC2B18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xFC2B6C", Offset = "0xFC2B6C", VA = "0xFC2B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xFC2ED8", Offset = "0xFC2ED8", VA = "0xFC2ED8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xFC2FDC", Offset = "0xFC2FDC", VA = "0xFC2FDC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xFC2B70", Offset = "0xFC2B70", VA = "0xFC2B70")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xFC30E0", Offset = "0xFC30E0", VA = "0xFC30E0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003E5")]
		public enum ContactTest
		{
			[Token(Token = "0x40012D3")]
			PerpenTest,
			[Token(Token = "0x40012D4")]
			BackwardsPress
		}

		[Token(Token = "0x40012C4")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40012C5")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CC84", Offset = "0x59CC84")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000210")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xFC5EEC", Offset = "0xFC5EEC", VA = "0xFC5EEC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000211")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xFC5EF4", Offset = "0xFC5EF4", VA = "0xFC5EF4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000212")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xFC5F00", Offset = "0xFC5F00", VA = "0xFC5F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F34", Offset = "0x5A4F34")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xFC5F08", Offset = "0xFC5F08", VA = "0xFC5F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F44", Offset = "0x5A4F44")]
			private set
			{
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xFC5F10", Offset = "0xFC5F10", VA = "0xFC5F10", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xFC6024", Offset = "0xFC6024", VA = "0xFC6024")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xFC623C", Offset = "0xFC623C", VA = "0xFC623C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xFC67F0", Offset = "0xFC67F0", VA = "0xFC67F0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xFC689C", Offset = "0xFC689C", VA = "0xFC689C")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xFC6708", Offset = "0xFC6708", VA = "0xFC6708")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xFC69A4", Offset = "0xFC69A4", VA = "0xFC69A4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xFC6A28", Offset = "0xFC6A28", VA = "0xFC6A28")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xFC6AB4", Offset = "0xFC6AB4", VA = "0xFC6AB4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CCA4", Offset = "0x59CCA4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CCB4", Offset = "0x59CCB4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000213")]
		public Collider Collider
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xFC6D00", Offset = "0xFC6D00", VA = "0xFC6D00", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F54", Offset = "0x5A4F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xFC6D08", Offset = "0xFC6D08", VA = "0xFC6D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F64", Offset = "0x5A4F64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xFC6D10", Offset = "0xFC6D10", VA = "0xFC6D10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F74", Offset = "0x5A4F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xFC6D18", Offset = "0xFC6D18", VA = "0xFC6D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F84", Offset = "0x5A4F84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0xFC6D20", Offset = "0xFC6D20", VA = "0xFC6D20", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xFC6D70", Offset = "0xFC6D70", VA = "0xFC6D70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xFC6E04", Offset = "0xFC6E04", VA = "0xFC6E04")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000216")]
		Collider Collider
		{
			[Token(Token = "0x60015E3")]
			get;
		}

		[Token(Token = "0x17000217")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60015E4")]
			get;
		}

		[Token(Token = "0x17000218")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60015E5")]
			get;
		}
	}
	[Token(Token = "0x20003E8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xFC6184", Offset = "0xFC6184", VA = "0xFC6184")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public enum InteractionType
	{
		[Token(Token = "0x40012DD")]
		Enter,
		[Token(Token = "0x40012DE")]
		Stay,
		[Token(Token = "0x40012DF")]
		Exit
	}
	[Token(Token = "0x20003EA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003EB")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40012F1")]
			Mesh,
			[Token(Token = "0x40012F2")]
			Skeleton,
			[Token(Token = "0x40012F3")]
			Both
		}

		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x597FD0", Offset = "0x597FD0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001608")]
				[Address(RVA = "0x8F3460", Offset = "0x8F3460", VA = "0x8F3460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600160A")]
				[Address(RVA = "0x8F34A8", Offset = "0x8F34A8", VA = "0x8F34A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001605")]
			[Address(RVA = "0x8F31CC", Offset = "0x8F31CC", VA = "0x8F31CC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001606")]
			[Address(RVA = "0x8F31F8", Offset = "0x8F31F8", VA = "0x8F31F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001607")]
			[Address(RVA = "0x8F31FC", Offset = "0x8F31FC", VA = "0x8F31FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x8F3468", Offset = "0x8F3468", VA = "0x8F3468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012E0")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CCE4", Offset = "0x59CCE4")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000219")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xACAC68", Offset = "0xACAC68", VA = "0xACAC68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xACACA0", Offset = "0xACACA0", VA = "0xACACA0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xACAD10", Offset = "0xACAD10", VA = "0xACAD10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xACAD48", Offset = "0xACAD48", VA = "0xACAD48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xACADB8", Offset = "0xACADB8", VA = "0xACADB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xACADF0", Offset = "0xACADF0", VA = "0xACADF0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xACAE60", Offset = "0xACAE60", VA = "0xACAE60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xACAE98", Offset = "0xACAE98", VA = "0xACAE98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xACAF08", Offset = "0xACAF08", VA = "0xACAF08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xACAF40", Offset = "0xACAF40", VA = "0xACAF40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xACAFB0", Offset = "0xACAFB0", VA = "0xACAFB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xACAFE4", Offset = "0xACAFE4", VA = "0xACAFE4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0xACB050", Offset = "0xACB050", VA = "0xACB050")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xACB084", Offset = "0xACB084", VA = "0xACB084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xACB0F0", Offset = "0xACB0F0", VA = "0xACB0F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xACB124", Offset = "0xACB124", VA = "0xACB124")]
			private set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xACB190", Offset = "0xACB190", VA = "0xACB190")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xACB1C4", Offset = "0xACB1C4", VA = "0xACB1C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xACB230", Offset = "0xACB230", VA = "0xACB230")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xACB264", Offset = "0xACB264", VA = "0xACB264")]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xACB2D0", Offset = "0xACB2D0", VA = "0xACB2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4F94", Offset = "0x5A4F94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xACB31C", Offset = "0xACB31C", VA = "0xACB31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A4FA4", Offset = "0x5A4FA4")]
			private set
			{
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xACB370", Offset = "0xACB370", VA = "0xACB370")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xACB744", Offset = "0xACB744", VA = "0xACB744")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xACB6CC", Offset = "0xACB6CC", VA = "0xACB6CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A4FB4", Offset = "0x5A4FB4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xACB7CC", Offset = "0xACB7CC", VA = "0xACB7CC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xACB8B0", Offset = "0xACB8B0", VA = "0xACB8B0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xACBA90", Offset = "0xACBA90", VA = "0xACBA90")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xACBCCC", Offset = "0xACBCCC", VA = "0xACBCCC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xACBE58", Offset = "0xACBE58", VA = "0xACBE58")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EE")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x8F36CC", Offset = "0x8F36CC", VA = "0x8F36CC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000226")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xACE2A4", Offset = "0xACE2A4", VA = "0xACE2A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xACE2AC", Offset = "0xACE2AC", VA = "0xACE2AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xACE2B4", Offset = "0xACE2B4", VA = "0xACE2B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xACE2BC", Offset = "0xACE2BC", VA = "0xACE2BC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xACE2C4", Offset = "0xACE2C4", VA = "0xACE2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5064", Offset = "0x5A5064")]
			add
			{
			}
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xACE364", Offset = "0xACE364", VA = "0xACE364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5074", Offset = "0x5A5074")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xACE474", Offset = "0xACE474", VA = "0xACE474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5084", Offset = "0x5A5084")]
			add
			{
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xACE514", Offset = "0xACE514", VA = "0xACE514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5094", Offset = "0x5A5094")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xACE624", Offset = "0xACE624", VA = "0xACE624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A50A4", Offset = "0x5A50A4")]
			add
			{
			}
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xACE6C4", Offset = "0xACE6C4", VA = "0xACE6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A50B4", Offset = "0x5A50B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xACE404", Offset = "0xACE404", VA = "0xACE404", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xACE5B4", Offset = "0xACE5B4", VA = "0xACE5B4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xACE764", Offset = "0xACE764", VA = "0xACE764", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001618")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xACE7D4", Offset = "0xACE7D4", VA = "0xACE7D4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xACE900", Offset = "0xACE900", VA = "0xACE900", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xACEA2C", Offset = "0xACEA2C", VA = "0xACEA2C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40012FF")]
		None,
		[Token(Token = "0x4001300")]
		Proximity,
		[Token(Token = "0x4001301")]
		Contact,
		[Token(Token = "0x4001302")]
		Action
	}
	[Token(Token = "0x20003F0")]
	public enum InteractableState
	{
		[Token(Token = "0x4001304")]
		Default,
		[Token(Token = "0x4001305")]
		ProximityState,
		[Token(Token = "0x4001306")]
		ContactState,
		[Token(Token = "0x4001307")]
		ActionState
	}
	[Token(Token = "0x20003F1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xACEB84", Offset = "0xACEB84", VA = "0xACEB84")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700022A")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xACEA8C", Offset = "0xACEA8C", VA = "0xACEA8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xACE834", Offset = "0xACE834", VA = "0xACE834")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xACE960", Offset = "0xACE960", VA = "0xACE960")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xACEAF0", Offset = "0xACEAF0", VA = "0xACEAF0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x597FE0", Offset = "0x597FE0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162B")]
				[Address(RVA = "0x8F3C30", Offset = "0x8F3C30", VA = "0x8F3C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162D")]
				[Address(RVA = "0x8F3C78", Offset = "0x8F3C78", VA = "0x8F3C78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0x8F3718", Offset = "0x8F3718", VA = "0x8F3718")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0x8F3744", Offset = "0x8F3744", VA = "0x8F3744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0x8F37B4", Offset = "0x8F37B4", VA = "0x8F37B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0x8F3760", Offset = "0x8F3760", VA = "0x8F3760")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0x8F3C38", Offset = "0x8F3C38", VA = "0x8F3C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xACF908", Offset = "0xACF908", VA = "0xACF908")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xACF984", Offset = "0xACF984", VA = "0xACF984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A50C4", Offset = "0x5A50C4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xACFA24", Offset = "0xACFA24", VA = "0xACFA24")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xACFB0C", Offset = "0xACFB0C", VA = "0xACFB0C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700022D")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600162E")]
			[Address(RVA = "0x15787B0", Offset = "0x15787B0", VA = "0x15787B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1578930", Offset = "0x1578930", VA = "0x1578930")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x15789D8", Offset = "0x15789D8", VA = "0x15789D8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1578A80", Offset = "0x1578A80", VA = "0x1578A80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1578D48", Offset = "0x1578D48", VA = "0x1578D48")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1578D90", Offset = "0x1578D90", VA = "0x1578D90")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1579048", Offset = "0x1579048", VA = "0x1579048")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1579194", Offset = "0x1579194", VA = "0x1579194")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x597FF0", Offset = "0x597FF0")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000232")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001647")]
				[Address(RVA = "0x9F6968", Offset = "0x9F6968", VA = "0x9F6968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000233")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001649")]
				[Address(RVA = "0x9F69B0", Offset = "0x9F69B0", VA = "0x9F69B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001644")]
			[Address(RVA = "0x9F6534", Offset = "0x9F6534", VA = "0x9F6534")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001645")]
			[Address(RVA = "0x9F6560", Offset = "0x9F6560", VA = "0x9F6560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0x9F6564", Offset = "0x9F6564", VA = "0x9F6564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0x9F6970", Offset = "0x9F6970", VA = "0x9F6970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001320")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700022E")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xA0851C", Offset = "0xA0851C", VA = "0xA0851C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700022F")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xA08524", Offset = "0xA08524", VA = "0xA08524", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000230")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xA0852C", Offset = "0xA0852C", VA = "0xA0852C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000231")]
		public override bool EnableState
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xA08534", Offset = "0xA08534", VA = "0xA08534", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xA08560", Offset = "0xA08560", VA = "0xA08560", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xA0859C", Offset = "0xA0859C", VA = "0xA0859C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xA08654", Offset = "0xA08654", VA = "0xA08654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5174", Offset = "0x5A5174")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xA086CC", Offset = "0xA086CC", VA = "0xA086CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xA0896C", Offset = "0xA0896C", VA = "0xA0896C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xA08AF8", Offset = "0xA08AF8", VA = "0xA08AF8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xA08BF0", Offset = "0xA08BF0", VA = "0xA08BF0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xA08EE8", Offset = "0xA08EE8", VA = "0xA08EE8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xA08EEC", Offset = "0xA08EEC", VA = "0xA08EEC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xA08EF0", Offset = "0xA08EF0", VA = "0xA08EF0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CD74", Offset = "0x59CD74")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CD84", Offset = "0x59CD84")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CD94", Offset = "0x59CD94")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000234")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0xA08F08", Offset = "0xA08F08", VA = "0xA08F08", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5224", Offset = "0x5A5224")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xA08F10", Offset = "0xA08F10", VA = "0xA08F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5234", Offset = "0x5A5234")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public bool EnableState
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xA08F18", Offset = "0xA08F18", VA = "0xA08F18", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xA08F34", Offset = "0xA08F34", VA = "0xA08F34", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xA08F54", Offset = "0xA08F54", VA = "0xA08F54", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5244", Offset = "0x5A5244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xA08F5C", Offset = "0xA08F5C", VA = "0xA08F5C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5254", Offset = "0x5A5254")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float SphereRadius
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xA08F68", Offset = "0xA08F68", VA = "0xA08F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5264", Offset = "0x5A5264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xA08F70", Offset = "0xA08F70", VA = "0xA08F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5274", Offset = "0x5A5274")]
			private set
			{
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xA08F78", Offset = "0xA08F78", VA = "0xA08F78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xA08FC0", Offset = "0xA08FC0", VA = "0xA08FC0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xA08FC4", Offset = "0xA08FC4", VA = "0xA08FC4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001333")]
		None = 0,
		[Token(Token = "0x4001334")]
		Ray = 1,
		[Token(Token = "0x4001335")]
		Poke = 4,
		[Token(Token = "0x4001336")]
		All = -1
	}
	[Token(Token = "0x20003FA")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001338")]
		Inactive,
		[Token(Token = "0x4001339")]
		PrimaryInputDown,
		[Token(Token = "0x400133A")]
		PrimaryInputDownStay,
		[Token(Token = "0x400133B")]
		PrimaryInputUp
	}
	[Token(Token = "0x20003FB")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xACEA34", Offset = "0xACEA34", VA = "0xACEA34")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CDA4", Offset = "0x59CDA4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CDB4", Offset = "0x59CDB4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CDC4", Offset = "0x59CDC4")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000238")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001656")]
			[Address(RVA = "0xACEC48", Offset = "0xACEC48", VA = "0xACEC48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0xACEC50", Offset = "0xACEC50", VA = "0xACEC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5284", Offset = "0x5A5284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xACEC58", Offset = "0xACEC58", VA = "0xACEC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5294", Offset = "0x5A5294")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001659")]
			get;
		}

		[Token(Token = "0x1700023B")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600165A")]
			get;
		}

		[Token(Token = "0x1700023C")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600165B")]
			get;
		}

		[Token(Token = "0x1700023D")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xACEC64", Offset = "0xACEC64", VA = "0xACEC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52A4", Offset = "0x5A52A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0xACEC70", Offset = "0xACEC70", VA = "0xACEC70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52B4", Offset = "0x5A52B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xACEC7C", Offset = "0xACEC7C", VA = "0xACEC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52C4", Offset = "0x5A52C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xACEC88", Offset = "0xACEC88", VA = "0xACEC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52D4", Offset = "0x5A52D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001664")]
			get;
			[Token(Token = "0x6001665")]
			set;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xACEC94", Offset = "0xACEC94", VA = "0xACEC94")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001662")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001663")]
		public abstract void DeFocus();

		[Token(Token = "0x6001666")]
		public abstract void Initialize();

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xACEC9C", Offset = "0xACEC9C", VA = "0xACEC9C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xACECE8", Offset = "0xACECE8", VA = "0xACECE8")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xACED3C", Offset = "0xACED3C", VA = "0xACED3C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xACEFEC", Offset = "0xACEFEC", VA = "0xACEFEC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xACF778", Offset = "0xACF778", VA = "0xACF778")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000240")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600166C")]
			get;
		}

		[Token(Token = "0x17000241")]
		bool EnableState
		{
			[Token(Token = "0x600166E")]
			get;
			[Token(Token = "0x600166F")]
			set;
		}

		[Token(Token = "0x17000242")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001670")]
			get;
			[Token(Token = "0x6001671")]
			set;
		}

		[Token(Token = "0x600166D")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20003FE")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003FF")]
		private enum PinchState
		{
			[Token(Token = "0x400134C")]
			None,
			[Token(Token = "0x400134D")]
			PinchDown,
			[Token(Token = "0x400134E")]
			PinchStay,
			[Token(Token = "0x400134F")]
			PinchUp
		}

		[Token(Token = "0x4001348")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000243")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xAE25C4", Offset = "0xAE25C4", VA = "0xAE25C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xAE264C", Offset = "0xAE264C", VA = "0xAE264C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xAE26D4", Offset = "0xAE26D4", VA = "0xAE26D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xAE275C", Offset = "0xAE275C", VA = "0xAE275C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xAE2790", Offset = "0xAE2790", VA = "0xAE2790")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001350")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001351")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001352")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001353")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001354")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59CDE4", Offset = "0x59CDE4")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000246")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xAED7B0", Offset = "0xAED7B0", VA = "0xAED7B0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000247")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xAED7B8", Offset = "0xAED7B8", VA = "0xAED7B8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000248")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0xAED82C", Offset = "0xAED82C", VA = "0xAED82C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public override bool EnableState
		{
			[Token(Token = "0x600167A")]
			[Address(RVA = "0xAED834", Offset = "0xAED834", VA = "0xAED834", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600167B")]
			[Address(RVA = "0xAED878", Offset = "0xAED878", VA = "0xAED878", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xAED8EC", Offset = "0xAED8EC", VA = "0xAED8EC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xAED954", Offset = "0xAED954", VA = "0xAED954")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xAED9F8", Offset = "0xAED9F8", VA = "0xAED9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xAEDCBC", Offset = "0xAEDCBC", VA = "0xAEDCBC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xAEDD44", Offset = "0xAEDD44", VA = "0xAEDD44", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xAEE114", Offset = "0xAEE114", VA = "0xAEE114")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xAEE224", Offset = "0xAEE224", VA = "0xAEE224")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xAEE348", Offset = "0xAEE348", VA = "0xAEE348")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xAEE64C", Offset = "0xAEE64C", VA = "0xAEE64C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xAEE9E0", Offset = "0xAEE9E0", VA = "0xAEE9E0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xAEEAC8", Offset = "0xAEEAC8", VA = "0xAEEAC8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xAEEB04", Offset = "0xAEEB04", VA = "0xAEEB04")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001360")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001361")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CE58", Offset = "0x59CE58")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700024A")]
		public bool EnableState
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xAED85C", Offset = "0xAED85C", VA = "0xAED85C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xAED894", Offset = "0xAED894", VA = "0xAED894", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xAEEBFC", Offset = "0xAEEBFC", VA = "0xAEEBFC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xAEDC80", Offset = "0xAEDC80", VA = "0xAEDC80", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xAEEE5C", Offset = "0xAEEE5C", VA = "0xAEEE5C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52E4", Offset = "0x5A52E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xAEEE64", Offset = "0xAEEE64", VA = "0xAEEE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A52F4", Offset = "0x5A52F4")]
			set
			{
			}
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xAEEC04", Offset = "0xAEEC04", VA = "0xAEEC04")]
		private void Awake()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xAEEA1C", Offset = "0xAEEA1C", VA = "0xAEEA1C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xAEEE6C", Offset = "0xAEEE6C", VA = "0xAEEE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xAEF0E0", Offset = "0xAEF0E0", VA = "0xAEF0E0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xAEF1D0", Offset = "0xAEF1D0", VA = "0xAEF1D0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700024D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x9FBE54", Offset = "0x9FBE54", VA = "0x9FBE54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x9FBE5C", Offset = "0x9FBE5C", VA = "0x9FBE5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x9FBEE4", Offset = "0x9FBEE4", VA = "0x9FBEE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x9FBEEC", Offset = "0x9FBEEC", VA = "0x9FBEEC")]
			set
			{
			}
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x9FBF58", Offset = "0x9FBF58", VA = "0x9FBF58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x9FC21C", Offset = "0x9FC21C", VA = "0x9FC21C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x9FC22C", Offset = "0x9FC22C", VA = "0x9FC22C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x9FC23C", Offset = "0x9FC23C", VA = "0x9FC23C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xB7C5D4", Offset = "0xB7C5D4", VA = "0xB7C5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xB7C5D8", Offset = "0xB7C5D8", VA = "0xB7C5D8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xB7C610", Offset = "0xB7C610", VA = "0xB7C610")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xB7C648", Offset = "0xB7C648", VA = "0xB7C648")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xB7C680", Offset = "0xB7C680", VA = "0xB7C680")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xB7C6B8", Offset = "0xB7C6B8", VA = "0xB7C6B8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xB7C6F0", Offset = "0xB7C6F0", VA = "0xB7C6F0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB7C728", Offset = "0xB7C728", VA = "0xB7C728")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB7C79C", Offset = "0xB7C79C", VA = "0xB7C79C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB7C80C", Offset = "0xB7C80C", VA = "0xB7C80C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB844A0", Offset = "0xB844A0", VA = "0xB844A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB844A4", Offset = "0xB844A4", VA = "0xB844A4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB7C7D0", Offset = "0xB7C7D0", VA = "0xB7C7D0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB844E4", Offset = "0xB844E4", VA = "0xB844E4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598010", Offset = "0x598010")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016B1")]
				[Address(RVA = "0x8F8C40", Offset = "0x8F8C40", VA = "0x8F8C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B3")]
				[Address(RVA = "0x8F8C88", Offset = "0x8F8C88", VA = "0x8F8C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x8F8A54", Offset = "0x8F8A54", VA = "0x8F8A54")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x8F8A80", Offset = "0x8F8A80", VA = "0x8F8A80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x8F8A84", Offset = "0x8F8A84", VA = "0x8F8A84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x8F8C48", Offset = "0x8F8C48", VA = "0x8F8C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001371")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001372")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xADD6AC", Offset = "0xADD6AC", VA = "0xADD6AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xADD758", Offset = "0xADD758", VA = "0xADD758")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xADD9A8", Offset = "0xADD9A8", VA = "0xADD9A8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xADD930", Offset = "0xADD930", VA = "0xADD930")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5304", Offset = "0x5A5304")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xADD9F4", Offset = "0xADD9F4", VA = "0xADD9F4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		public enum SelectionState
		{
			[Token(Token = "0x4001388")]
			Off,
			[Token(Token = "0x4001389")]
			Selected,
			[Token(Token = "0x400138A")]
			Highlighted
		}

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000251")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xAF5C38", Offset = "0xAF5C38", VA = "0xAF5C38")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xAF5C40", Offset = "0xAF5C40", VA = "0xAF5C40")]
			set
			{
			}
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xAF5DC4", Offset = "0xAF5DC4", VA = "0xAF5DC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xAF5FC8", Offset = "0xAF5FC8", VA = "0xAF5FC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xAF5CC8", Offset = "0xAF5CC8", VA = "0xAF5CC8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xAF60B4", Offset = "0xAF60B4", VA = "0xAF60B4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		public enum SegmentType
		{
			[Token(Token = "0x4001399")]
			Straight,
			[Token(Token = "0x400139A")]
			LeftTurn,
			[Token(Token = "0x400139B")]
			RightTurn,
			[Token(Token = "0x400139C")]
			Switch
		}

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001391")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001392")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59CF38", Offset = "0x59CF38")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000252")]
		public float StartDistance
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xF14E5C", Offset = "0xF14E5C", VA = "0xF14E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A53B4", Offset = "0x5A53B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xF14E64", Offset = "0xF14E64", VA = "0xF14E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A53C4", Offset = "0x5A53C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float GridSize
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xF14E6C", Offset = "0xF14E6C", VA = "0xF14E6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xF14E74", Offset = "0xF14E74", VA = "0xF14E74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public int SubDivCount
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xF14E7C", Offset = "0xF14E7C", VA = "0xF14E7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xF14E84", Offset = "0xF14E84", VA = "0xF14E84")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public SegmentType Type
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xF14E8C", Offset = "0xF14E8C", VA = "0xF14E8C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000256")]
		public Pose EndPose
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xF14E94", Offset = "0xF14E94", VA = "0xF14E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public float Radius
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xF151F0", Offset = "0xF151F0", VA = "0xF151F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000258")]
		public float SegmentLength
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xF14EFC", Offset = "0xF14EFC", VA = "0xF14EFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF15200", Offset = "0xF15200", VA = "0xF15200")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xF15218", Offset = "0xF15218", VA = "0xF15218")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xF14F3C", Offset = "0xF14F3C", VA = "0xF14F3C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF1521C", Offset = "0xF1521C", VA = "0xF1521C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF15220", Offset = "0xF15220", VA = "0xF15220")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF15288", Offset = "0xF15288", VA = "0xF15288")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF15B50", Offset = "0xF15B50", VA = "0xF15B50")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF15DFC", Offset = "0xF15DFC", VA = "0xF15DFC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598020", Offset = "0x598020")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DB")]
				[Address(RVA = "0x9017A4", Offset = "0x9017A4", VA = "0x9017A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016DD")]
				[Address(RVA = "0x9017EC", Offset = "0x9017EC", VA = "0x9017EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x901600", Offset = "0x901600", VA = "0x901600")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x90162C", Offset = "0x90162C", VA = "0x90162C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x901630", Offset = "0x901630", VA = "0x901630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x9017AC", Offset = "0x9017AC", VA = "0x9017AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400139D")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400139E")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF15ECC", Offset = "0xF15ECC", VA = "0xF15ECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF15F88", Offset = "0xF15F88", VA = "0xF15F88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF16038", Offset = "0xF16038", VA = "0xF16038")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF161B0", Offset = "0xF161B0", VA = "0xF161B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF16378", Offset = "0xF16378", VA = "0xF16378")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF16460", Offset = "0xF16460", VA = "0xF16460")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF16674", Offset = "0xF16674", VA = "0xF16674")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF16574", Offset = "0xF16574", VA = "0xF16574")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF16588", Offset = "0xF16588", VA = "0xF16588")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF166CC", Offset = "0xF166CC", VA = "0xF166CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A53D4", Offset = "0x5A53D4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF16744", Offset = "0xF16744", VA = "0xF16744")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700025B")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xF167F4", Offset = "0xF167F4", VA = "0xF167F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF16804", Offset = "0xF16804", VA = "0xF16804", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF1680C", Offset = "0xF1680C", VA = "0xF1680C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF16B50", Offset = "0xF16B50", VA = "0xF16B50")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40013B6")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40013B7")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D038", Offset = "0x59D038")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700025C")]
		public float Distance
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xF16C60", Offset = "0xF16C60", VA = "0xF16C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5484", Offset = "0x5A5484")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xF16C68", Offset = "0xF16C68", VA = "0xF16C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5494", Offset = "0x5A5494")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public float Scale
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xF16C70", Offset = "0xF16C70", VA = "0xF16C70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xF16C78", Offset = "0xF16C78", VA = "0xF16C78")]
			set
			{
			}
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF16808", Offset = "0xF16808", VA = "0xF16808", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF16C80", Offset = "0xF16C80", VA = "0xF16C80")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF16854", Offset = "0xF16854", VA = "0xF16854")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF16A78", Offset = "0xF16A78", VA = "0xF16A78")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60016EA")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF16BBC", Offset = "0xF16BBC", VA = "0xF16BBC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598030", Offset = "0x598030")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016F9")]
				[Address(RVA = "0x901A8C", Offset = "0x901A8C", VA = "0x901A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016FB")]
				[Address(RVA = "0x901AD4", Offset = "0x901AD4", VA = "0x901AD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x9017F4", Offset = "0x9017F4", VA = "0x9017F4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x901820", Offset = "0x901820", VA = "0x901820", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x901824", Offset = "0x901824", VA = "0x901824", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x901A94", Offset = "0x901A94", VA = "0x901A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF16E20", Offset = "0xF16E20", VA = "0xF16E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF16E80", Offset = "0xF16E80", VA = "0xF16E80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF16F88", Offset = "0xF16F88", VA = "0xF16F88")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF170F8", Offset = "0xF170F8", VA = "0xF170F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF16FE8", Offset = "0xF16FE8", VA = "0xF16FE8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF171D4", Offset = "0xF171D4", VA = "0xF171D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A54A4", Offset = "0x5A54A4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF1725C", Offset = "0xF1725C", VA = "0xF1725C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF17308", Offset = "0xF17308", VA = "0xF17308")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF17368", Offset = "0xF17368", VA = "0xF17368")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000412")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40013F4")]
			Start,
			[Token(Token = "0x40013F5")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40013F6")]
			Stop
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598040", Offset = "0x598040")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600170E")]
				[Address(RVA = "0x901D50", Offset = "0x901D50", VA = "0x901D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001710")]
				[Address(RVA = "0x901D98", Offset = "0x901D98", VA = "0x901D98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0x901ADC", Offset = "0x901ADC", VA = "0x901ADC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0x901B08", Offset = "0x901B08", VA = "0x901B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0x901B0C", Offset = "0x901B0C", VA = "0x901B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170F")]
			[Address(RVA = "0x901D58", Offset = "0x901D58", VA = "0x901D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D6")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40013D7")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40013D8")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40013D9")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x59D098", Offset = "0x59D098")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF173C4", Offset = "0xF173C4", VA = "0xF173C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF17530", Offset = "0xF17530", VA = "0xF17530")]
		private void Update()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF1753C", Offset = "0xF1753C", VA = "0xF1753C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF1768C", Offset = "0xF1768C", VA = "0xF1768C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF174A4", Offset = "0xF174A4", VA = "0xF174A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5554", Offset = "0x5A5554")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF176EC", Offset = "0xF176EC", VA = "0xF176EC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF17628", Offset = "0xF17628", VA = "0xF17628")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF17908", Offset = "0xF17908", VA = "0xF17908")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF17A44", Offset = "0xF17A44", VA = "0xF17A44")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF17974", Offset = "0xF17974", VA = "0xF17974")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF17AB0", Offset = "0xF17AB0", VA = "0xF17AB0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF17AD0", Offset = "0xF17AD0", VA = "0xF17AD0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF17B5C", Offset = "0xF17B5C", VA = "0xF17B5C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF17C14", Offset = "0xF17C14", VA = "0xF17C14")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF17C24", Offset = "0xF17C24", VA = "0xF17C24")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000262")]
		public float TrackLength
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xF17C8C", Offset = "0xF17C8C", VA = "0xF17C8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xF17C94", Offset = "0xF17C94", VA = "0xF17C94")]
			private set
			{
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF17C9C", Offset = "0xF17C9C", VA = "0xF17C9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF16D00", Offset = "0xF16D00", VA = "0xF16D00")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF17CA0", Offset = "0xF17CA0", VA = "0xF17CA0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xF17EB4", Offset = "0xF17EB4", VA = "0xF17EB4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xF17FB0", Offset = "0xF17FB0", VA = "0xF17FB0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class Pose
	{
		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xAE8CC4", Offset = "0xAE8CC4", VA = "0xAE8CC4")]
		public Pose()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xAE8D08", Offset = "0xAE8D08", VA = "0xAE8D08")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598050", Offset = "0x598050")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001726")]
				[Address(RVA = "0x15513F0", Offset = "0x15513F0", VA = "0x15513F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001728")]
				[Address(RVA = "0x1551438", Offset = "0x1551438", VA = "0x1551438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0x1551220", Offset = "0x1551220", VA = "0x1551220")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0x155124C", Offset = "0x155124C", VA = "0x155124C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001725")]
			[Address(RVA = "0x1551250", Offset = "0x1551250", VA = "0x1551250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001727")]
			[Address(RVA = "0x15513F8", Offset = "0x15513F8", VA = "0x15513F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598060", Offset = "0x598060")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000266")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600172C")]
				[Address(RVA = "0x1551548", Offset = "0x1551548", VA = "0x1551548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000267")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600172E")]
				[Address(RVA = "0x1551590", Offset = "0x1551590", VA = "0x1551590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001729")]
			[Address(RVA = "0x1551440", Offset = "0x1551440", VA = "0x1551440")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0x155146C", Offset = "0x155146C", VA = "0x155146C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600172B")]
			[Address(RVA = "0x1551470", Offset = "0x1551470", VA = "0x1551470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600172D")]
			[Address(RVA = "0x1551550", Offset = "0x1551550", VA = "0x1551550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001409")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x59D280", Offset = "0x59D280")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000263")]
		public bool IsMoving
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x9E6EB0", Offset = "0x9E6EB0", VA = "0x9E6EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5604", Offset = "0x5A5604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x9E6EB8", Offset = "0x9E6EB8", VA = "0x9E6EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5614", Offset = "0x5A5614")]
			private set
			{
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x9E6EC4", Offset = "0x9E6EC4", VA = "0x9E6EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x9E6F00", Offset = "0x9E6F00", VA = "0x9E6F00")]
		private void Update()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x9E6FE4", Offset = "0x9E6FE4", VA = "0x9E6FE4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x9E7058", Offset = "0x9E7058", VA = "0x9E7058")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5624", Offset = "0x5A5624")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x9E70E0", Offset = "0x9E70E0", VA = "0x9E70E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5684", Offset = "0x5A5684")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x9E7198", Offset = "0x9E7198", VA = "0x9E7198")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x9E7204", Offset = "0x9E7204", VA = "0x9E7204")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x9E720C", Offset = "0x9E720C", VA = "0x9E720C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x9E7280", Offset = "0x9E7280", VA = "0x9E7280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x9E7364", Offset = "0x9E7364", VA = "0x9E7364")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x9E749C", Offset = "0x9E749C", VA = "0x9E749C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x9E751C", Offset = "0x9E751C", VA = "0x9E751C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x9E75F8", Offset = "0x9E75F8", VA = "0x9E75F8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001426")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001427")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001428")]
		EUDT_None,
		[Token(Token = "0x4001429")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200041B")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x598070", Offset = "0x598070")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001748")]
				[Address(RVA = "0x8F636C", Offset = "0x8F636C", VA = "0x8F636C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600174A")]
				[Address(RVA = "0x8F63B4", Offset = "0x8F63B4", VA = "0x8F63B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0x8F613C", Offset = "0x8F613C", VA = "0x8F613C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0x8F6168", Offset = "0x8F6168", VA = "0x8F6168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x8F616C", Offset = "0x8F616C", VA = "0x8F616C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0x8F6374", Offset = "0x8F6374", VA = "0x8F6374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400142B")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400142C")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400142D")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59D2C0", Offset = "0x59D2C0")]
		public GameObject mainCamera;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59D2F8", Offset = "0x59D2F8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xC6C2C8", Offset = "0xC6C2C8", VA = "0xC6C2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC6CB24", Offset = "0xC6CB24", VA = "0xC6CB24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC6CC6C", Offset = "0xC6CC6C", VA = "0xC6CC6C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xC6CDA8", Offset = "0xC6CDA8", VA = "0xC6CDA8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xC6CEE4", Offset = "0xC6CEE4", VA = "0xC6CEE4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC6CC40", Offset = "0xC6CC40", VA = "0xC6CC40")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC6CFC4", Offset = "0xC6CFC4", VA = "0xC6CFC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5A5784", Offset = "0x5A5784")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC6D03C", Offset = "0xC6D03C", VA = "0xC6D03C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC6C730", Offset = "0xC6C730", VA = "0xC6C730")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xC6D190", Offset = "0xC6D190", VA = "0xC6D190")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC6D070", Offset = "0xC6D070", VA = "0xC6D070")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC6D4A8", Offset = "0xC6D4A8", VA = "0xC6D4A8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC6D598", Offset = "0xC6D598", VA = "0xC6D598")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC6D628", Offset = "0xC6D628", VA = "0xC6D628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A57E4", Offset = "0x5A57E4")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC6D680", Offset = "0xC6D680", VA = "0xC6D680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A57F4", Offset = "0x5A57F4")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC6D6D8", Offset = "0xC6D6D8", VA = "0xC6D6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5804", Offset = "0x5A5804")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x598080", Offset = "0x598080")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5980E0", Offset = "0x5980E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x8F2FCC", Offset = "0x8F2FCC", VA = "0x8F2FCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0x8F2FD4", Offset = "0x8F2FD4", VA = "0x8F2FD4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001445")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001446")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001447")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001448")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001449")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400144A")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400144B")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400144C")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400144D")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400144E")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400144F")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xAC533C", Offset = "0xAC533C", VA = "0xAC533C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xAC5398", Offset = "0xAC5398", VA = "0xAC5398")]
		private void Start()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xAC582C", Offset = "0xAC582C", VA = "0xAC582C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xAC5918", Offset = "0xAC5918", VA = "0xAC5918")]
		private void Update()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xAC5A7C", Offset = "0xAC5A7C", VA = "0xAC5A7C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xAC5D84", Offset = "0xAC5D84", VA = "0xAC5D84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xAC5E7C", Offset = "0xAC5E7C", VA = "0xAC5E7C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xAC5FDC", Offset = "0xAC5FDC", VA = "0xAC5FDC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xAC5B14", Offset = "0xAC5B14", VA = "0xAC5B14")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xAC5B68", Offset = "0xAC5B68", VA = "0xAC5B68")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xAC56D0", Offset = "0xAC56D0", VA = "0xAC56D0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xAC6118", Offset = "0xAC6118", VA = "0xAC6118")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001464")]
		Default,
		[Token(Token = "0x4001465")]
		Generic,
		[Token(Token = "0x4001466")]
		PingPongBall,
		[Token(Token = "0x4001467")]
		Controller
	}
	[Token(Token = "0x2000420")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700026A")]
		public bool AllowPointing
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xACA574", Offset = "0xACA574", VA = "0xACA574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026B")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xACA57C", Offset = "0xACA57C", VA = "0xACA57C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0xACA584", Offset = "0xACA584", VA = "0xACA584")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xACA58C", Offset = "0xACA58C", VA = "0xACA58C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF14ACC", Offset = "0xF14ACC", VA = "0xF14ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF14DB4", Offset = "0xF14DB4", VA = "0xF14DB4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF14E10", Offset = "0xF14E10", VA = "0xF14E10")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF14E54", Offset = "0xF14E54", VA = "0xF14E54")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x2000422")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Multiline]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59D3B0", Offset = "0x59D3B0")]
		private string freshStateText;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59D40C", Offset = "0x59D40C")]
		private Text textArea;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x59D468", Offset = "0x59D468")]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x157928C", Offset = "0x157928C", VA = "0x157928C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1579358", Offset = "0x1579358", VA = "0x1579358")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1579424", Offset = "0x1579424", VA = "0x1579424")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x15794E4", Offset = "0x15794E4", VA = "0x15794E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x157953C", Offset = "0x157953C", VA = "0x157953C")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x157962C", Offset = "0x157962C", VA = "0x157962C")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1579834", Offset = "0x1579834", VA = "0x1579834")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1579894", Offset = "0x1579894", VA = "0x1579894")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x15798F0", Offset = "0x15798F0", VA = "0x15798F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5A5864", Offset = "0x5A5864")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x600176B")]
		[Address(RVA = "0xFD7160", Offset = "0xFD7160", VA = "0xFD7160")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xFD71FC", Offset = "0xFD71FC", VA = "0xFD71FC")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xFD7420", Offset = "0xFD7420", VA = "0xFD7420")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xFD7290", Offset = "0xFD7290", VA = "0xFD7290")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xFD745C", Offset = "0xFD745C", VA = "0xFD745C")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x2000425")]
		internal enum Step
		{
			[Token(Token = "0x4001477")]
			SetupWit,
			[Token(Token = "0x4001478")]
			MissingServerToken,
			[Token(Token = "0x4001479")]
			MissingClientToken,
			[Token(Token = "0x400147A")]
			AddConfig,
			[Token(Token = "0x400147B")]
			AddVoiceExperiences,
			[Token(Token = "0x400147C")]
			SetConfig,
			[Token(Token = "0x400147D")]
			Ready
		}

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x1700026D")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xACD970", Offset = "0xACD970", VA = "0xACD970")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x1700026E")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xACD978", Offset = "0xACD978", VA = "0xACD978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xACDA0C", Offset = "0xACDA0C", VA = "0xACDA0C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xACDA14", Offset = "0xACDA14", VA = "0xACDA14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xACDA18", Offset = "0xACDA18", VA = "0xACDA18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xACDA10", Offset = "0xACDA10", VA = "0xACDA10")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xACDA1C", Offset = "0xACDA1C", VA = "0xACDA1C")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x2000426")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59D4C4", Offset = "0x59D4C4")]
		public Text logText;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x59D4FC", Offset = "0x59D4FC")]
		public AudioClip buzzSound;

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF1319C", Offset = "0xF1319C", VA = "0xF1319C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF1326C", Offset = "0xF1326C", VA = "0xF1326C")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF13200", Offset = "0xF13200", VA = "0xF13200")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF132FC", Offset = "0xF132FC", VA = "0xF132FC")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF13370", Offset = "0xF13370", VA = "0xF13370")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF13744", Offset = "0xF13744", VA = "0xF13744")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF137F4", Offset = "0xF137F4", VA = "0xF137F4")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF13844", Offset = "0xF13844", VA = "0xF13844")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF13898", Offset = "0xF13898", VA = "0xF13898")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF139B0", Offset = "0xF139B0", VA = "0xF139B0")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF13ABC", Offset = "0xF13ABC", VA = "0xF13ABC")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF1376C", Offset = "0xF1376C", VA = "0xF1376C")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF135D0", Offset = "0xF135D0", VA = "0xF135D0")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF13AC4", Offset = "0xF13AC4", VA = "0xF13AC4")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF13ACC", Offset = "0xF13ACC", VA = "0xF13ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF13B28", Offset = "0xF13B28", VA = "0xF13B28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF13B70", Offset = "0xF13B70", VA = "0xF13B70")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x9E7608", Offset = "0x9E7608", VA = "0x9E7608")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x9E76C0", Offset = "0x9E76C0", VA = "0x9E76C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x9E771C", Offset = "0x9E771C", VA = "0x9E771C")]
		private void Update()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x9E77A0", Offset = "0x9E77A0", VA = "0x9E77A0")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x9E77C4", Offset = "0x9E77C4", VA = "0x9E77C4")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000429")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001486")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001487")]
		public const string Tab = "    ";

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x9D7A84", Offset = "0x9D7A84", VA = "0x9D7A84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5874", Offset = "0x5A5874")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5874", Offset = "0x5A5874")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x9D7B14", Offset = "0x9D7B14", VA = "0x9D7B14")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A58D4", Offset = "0x5A58D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A58D4", Offset = "0x5A58D4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x9D7BB4", Offset = "0x9D7BB4", VA = "0x9D7BB4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5934", Offset = "0x5A5934")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5934", Offset = "0x5A5934")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x9D7C44", Offset = "0x9D7C44", VA = "0x9D7C44")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5994", Offset = "0x5A5994")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A5994", Offset = "0x5A5994")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x9D7CD4", Offset = "0x9D7CD4", VA = "0x9D7CD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A59F4", Offset = "0x5A59F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5A59F4", Offset = "0x5A59F4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class CAPI
	{
		[Token(Token = "0x200042B")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200042C")]
		public enum Result
		{
			[Token(Token = "0x4001493")]
			Success = 0,
			[Token(Token = "0x4001494")]
			Failure = -1000,
			[Token(Token = "0x4001495")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001496")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001497")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001498")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001499")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400149A")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400149B")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200042D")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x9F0C50", Offset = "0x9F0C50", VA = "0x9F0C50")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001488")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001490")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xFC6E70", Offset = "0xFC6E70", VA = "0xFC6E70")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xFC6F00", Offset = "0xFC6F00", VA = "0xFC6F00")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xFC7124", Offset = "0xFC7124", VA = "0xFC7124")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xFC7210", Offset = "0xFC7210", VA = "0xFC7210")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xFC7280", Offset = "0xFC7280", VA = "0xFC7280")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0xFC72F4", Offset = "0xFC72F4", VA = "0xFC72F4")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xFC7374", Offset = "0xFC7374", VA = "0xFC7374")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0xFC74B8", Offset = "0xFC74B8", VA = "0xFC74B8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xFC7538", Offset = "0xFC7538", VA = "0xFC7538")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600179C")]
		[Address(RVA = "0xFC767C", Offset = "0xFC767C", VA = "0xFC767C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xFC76FC", Offset = "0xFC76FC", VA = "0xFC76FC")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600179E")]
		[Address(RVA = "0xFC777C", Offset = "0xFC777C", VA = "0xFC777C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600179F")]
		[Address(RVA = "0xFC77FC", Offset = "0xFC77FC", VA = "0xFC77FC")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xFC787C", Offset = "0xFC787C", VA = "0xFC787C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xFC790C", Offset = "0xFC790C", VA = "0xFC790C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xFC799C", Offset = "0xFC799C", VA = "0xFC799C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xFC7A2C", Offset = "0xFC7A2C", VA = "0xFC7A2C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xFC7AAC", Offset = "0xFC7AAC", VA = "0xFC7AAC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xFC7B2C", Offset = "0xFC7B2C", VA = "0xFC7B2C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xFC7BBC", Offset = "0xFC7BBC", VA = "0xFC7BBC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xFC7C4C", Offset = "0xFC7C4C", VA = "0xFC7C4C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xFC7CDC", Offset = "0xFC7CDC", VA = "0xFC7CDC")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xFC7D5C", Offset = "0xFC7D5C", VA = "0xFC7D5C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xFC7DFC", Offset = "0xFC7DFC", VA = "0xFC7DFC")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xFC7E78", Offset = "0xFC7E78", VA = "0xFC7E78")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xFC7F18", Offset = "0xFC7F18", VA = "0xFC7F18")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xFC7FD8", Offset = "0xFC7FD8", VA = "0xFC7FD8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xFC80A8", Offset = "0xFC80A8", VA = "0xFC80A8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xFC8138", Offset = "0xFC8138", VA = "0xFC8138")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xFC81C8", Offset = "0xFC81C8", VA = "0xFC81C8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xFC8258", Offset = "0xFC8258", VA = "0xFC8258")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xFC82E8", Offset = "0xFC82E8", VA = "0xFC82E8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xFC8378", Offset = "0xFC8378", VA = "0xFC8378")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xFC83F8", Offset = "0xFC83F8", VA = "0xFC83F8")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xFC8514", Offset = "0xFC8514", VA = "0xFC8514")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xFC8484", Offset = "0xFC8484", VA = "0xFC8484")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xFC8734", Offset = "0xFC8734", VA = "0xFC8734")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xFC88A4", Offset = "0xFC88A4", VA = "0xFC88A4")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60017B9")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xFC8924", Offset = "0xFC8924", VA = "0xFC8924")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xFC8BCC", Offset = "0xFC8BCC", VA = "0xFC8BCC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xFC8C4C", Offset = "0xFC8C4C", VA = "0xFC8C4C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xFC8DBC", Offset = "0xFC8DBC", VA = "0xFC8DBC")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xFC8E3C", Offset = "0xFC8E3C", VA = "0xFC8E3C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xFC8FAC", Offset = "0xFC8FAC", VA = "0xFC8FAC")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xFC902C", Offset = "0xFC902C", VA = "0xFC902C")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xFC919C", Offset = "0xFC919C", VA = "0xFC919C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xFC921C", Offset = "0xFC921C", VA = "0xFC921C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xFC938C", Offset = "0xFC938C", VA = "0xFC938C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xFC940C", Offset = "0xFC940C", VA = "0xFC940C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xFC948C", Offset = "0xFC948C", VA = "0xFC948C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xFC9524", Offset = "0xFC9524", VA = "0xFC9524")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xFC95A4", Offset = "0xFC95A4", VA = "0xFC95A4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xFC977C", Offset = "0xFC977C", VA = "0xFC977C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xFC98D4", Offset = "0xFC98D4", VA = "0xFC98D4")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xFC96FC", Offset = "0xFC96FC", VA = "0xFC96FC")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xFC9954", Offset = "0xFC9954", VA = "0xFC9954")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xFC99D4", Offset = "0xFC99D4", VA = "0xFC99D4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xFC9A64", Offset = "0xFC9A64", VA = "0xFC9A64")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xFC9AE4", Offset = "0xFC9AE4", VA = "0xFC9AE4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xFC9B74", Offset = "0xFC9B74", VA = "0xFC9B74")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xFC9BF4", Offset = "0xFC9BF4", VA = "0xFC9BF4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xFC9C74", Offset = "0xFC9C74", VA = "0xFC9C74")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xFC9F00", Offset = "0xFC9F00", VA = "0xFC9F00")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xFC9F90", Offset = "0xFC9F90", VA = "0xFC9F90")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xFCA1C0", Offset = "0xFCA1C0", VA = "0xFCA1C0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xFCA258", Offset = "0xFCA258", VA = "0xFCA258")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xFCA3A8", Offset = "0xFCA3A8", VA = "0xFCA3A8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xFCA428", Offset = "0xFCA428", VA = "0xFCA428")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xFCA4A8", Offset = "0xFCA4A8", VA = "0xFCA4A8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xFCA5FC", Offset = "0xFCA5FC", VA = "0xFCA5FC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xFCA67C", Offset = "0xFCA67C", VA = "0xFCA67C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xFCA7D0", Offset = "0xFCA7D0", VA = "0xFCA7D0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xFCA850", Offset = "0xFCA850", VA = "0xFCA850")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xFCA8E0", Offset = "0xFCA8E0", VA = "0xFCA8E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xFCA970", Offset = "0xFCA970", VA = "0xFCA970")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xFCAA00", Offset = "0xFCAA00", VA = "0xFCAA00")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xFCAA80", Offset = "0xFCAA80", VA = "0xFCAA80")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xFCAB08", Offset = "0xFCAB08", VA = "0xFCAB08")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xFCAB90", Offset = "0xFCAB90", VA = "0xFCAB90")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xFCAC10", Offset = "0xFCAC10", VA = "0xFCAC10")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xFCAC90", Offset = "0xFCAC90", VA = "0xFCAC90")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xFCAD44", Offset = "0xFCAD44", VA = "0xFCAD44")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xFCADD4", Offset = "0xFCADD4", VA = "0xFCADD4")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xFCAE64", Offset = "0xFCAE64", VA = "0xFCAE64")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xFCAEE4", Offset = "0xFCAEE4", VA = "0xFCAEE4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xFCAF64", Offset = "0xFCAF64", VA = "0xFCAF64")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xFCAFE4", Offset = "0xFCAFE4", VA = "0xFCAFE4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xFCB07C", Offset = "0xFCB07C", VA = "0xFCB07C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xFCB10C", Offset = "0xFCB10C", VA = "0xFCB10C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xFCB19C", Offset = "0xFCB19C", VA = "0xFCB19C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xFCB22C", Offset = "0xFCB22C", VA = "0xFCB22C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xFCB2C4", Offset = "0xFCB2C4", VA = "0xFCB2C4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xFCB35C", Offset = "0xFCB35C", VA = "0xFCB35C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xFCB3DC", Offset = "0xFCB3DC", VA = "0xFCB3DC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xFCB45C", Offset = "0xFCB45C", VA = "0xFCB45C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xFCB5B0", Offset = "0xFCB5B0", VA = "0xFCB5B0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xFCB630", Offset = "0xFCB630", VA = "0xFCB630")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xFCB784", Offset = "0xFCB784", VA = "0xFCB784")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xFCB804", Offset = "0xFCB804", VA = "0xFCB804")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xFCB940", Offset = "0xFCB940", VA = "0xFCB940")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xFCB9C0", Offset = "0xFCB9C0", VA = "0xFCB9C0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xFCBB94", Offset = "0xFCBB94", VA = "0xFCBB94")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xFCBE74", Offset = "0xFCBE74", VA = "0xFCBE74")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xFCBB14", Offset = "0xFCBB14", VA = "0xFCBB14")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xFCBF04", Offset = "0xFCBF04", VA = "0xFCBF04")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xFCBF84", Offset = "0xFCBF84", VA = "0xFCBF84")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xFCC014", Offset = "0xFCC014", VA = "0xFCC014")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xFCC0A4", Offset = "0xFCC0A4", VA = "0xFCC0A4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001800")]
		[Address(RVA = "0xFCC134", Offset = "0xFCC134", VA = "0xFCC134")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001801")]
		[Address(RVA = "0xFCC1D4", Offset = "0xFCC1D4", VA = "0xFCC1D4")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001802")]
		[Address(RVA = "0xFCC274", Offset = "0xFCC274", VA = "0xFCC274")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001803")]
		[Address(RVA = "0xFCC314", Offset = "0xFCC314", VA = "0xFCC314")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001804")]
		[Address(RVA = "0xFCC394", Offset = "0xFCC394", VA = "0xFCC394")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001805")]
		[Address(RVA = "0xFCC414", Offset = "0xFCC414", VA = "0xFCC414")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001806")]
		[Address(RVA = "0xFCC494", Offset = "0xFCC494", VA = "0xFCC494")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001807")]
		[Address(RVA = "0xFCC514", Offset = "0xFCC514", VA = "0xFCC514")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001808")]
		[Address(RVA = "0xFCC594", Offset = "0xFCC594", VA = "0xFCC594")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001809")]
		[Address(RVA = "0xFCC6BC", Offset = "0xFCC6BC", VA = "0xFCC6BC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600180A")]
		[Address(RVA = "0xFCC754", Offset = "0xFCC754", VA = "0xFCC754")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xFCC7D4", Offset = "0xFCC7D4", VA = "0xFCC7D4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xFCC834", Offset = "0xFCC834", VA = "0xFCC834")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600180D")]
		[Address(RVA = "0xFCC97C", Offset = "0xFCC97C", VA = "0xFCC97C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xFCCA0C", Offset = "0xFCCA0C", VA = "0xFCCA0C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600180F")]
		[Address(RVA = "0xFCCB64", Offset = "0xFCCB64", VA = "0xFCCB64")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001810")]
		[Address(RVA = "0xFCCBF4", Offset = "0xFCCBF4", VA = "0xFCCBF4")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xFCCC94", Offset = "0xFCCC94", VA = "0xFCCC94")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001812")]
		[Address(RVA = "0xFCD064", Offset = "0xFCD064", VA = "0xFCD064")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001813")]
		[Address(RVA = "0xFCD0E4", Offset = "0xFCD0E4", VA = "0xFCD0E4")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xFCD17C", Offset = "0xFCD17C", VA = "0xFCD17C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001815")]
		[Address(RVA = "0xFCD9DC", Offset = "0xFCD9DC", VA = "0xFCD9DC")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001816")]
		[Address(RVA = "0xFCDA5C", Offset = "0xFCDA5C", VA = "0xFCDA5C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xFC6E0C", Offset = "0xFC6E0C", VA = "0xFC6E0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5A5A54", Offset = "0x5A5A54")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001818")]
		[Address(RVA = "0xFCDAF4", Offset = "0xFCDAF4", VA = "0xFCDAF4")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001819")]
		[Address(RVA = "0xFCDB78", Offset = "0xFCDB78", VA = "0xFCDB78")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600181A")]
		[Address(RVA = "0xFCDBF8", Offset = "0xFCDBF8", VA = "0xFCDBF8")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600181B")]
		[Address(RVA = "0xFCDC78", Offset = "0xFCDC78", VA = "0xFCDC78")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xFCDCF8", Offset = "0xFCDCF8", VA = "0xFCDCF8")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600181D")]
		[Address(RVA = "0xFCE6BC", Offset = "0xFCE6BC", VA = "0xFCE6BC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xFCE73C", Offset = "0xFCE73C", VA = "0xFCE73C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600181F")]
		[Address(RVA = "0xFCEB78", Offset = "0xFCEB78", VA = "0xFCEB78")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xFCEAE0", Offset = "0xFCEAE0", VA = "0xFCEAE0")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xFCEBEC", Offset = "0xFCEBEC", VA = "0xFCEBEC")]
		public CAPI()
		{
		}
	}
}
